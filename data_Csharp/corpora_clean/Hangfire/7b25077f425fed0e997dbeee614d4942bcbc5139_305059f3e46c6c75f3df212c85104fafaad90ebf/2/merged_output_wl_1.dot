digraph  {
n24 [label="Hangfire.States.ApplyStateContext", span=""];
n0 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ElectStateContext)", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ElectStateContext)", span="26-26"];
n1 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ElectStateContext)", label="Exit Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ElectStateContext)", span="26-26"];
n2 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="33-33"];
n3 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: storage == null", span="41-41"];
n4 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: throw new ArgumentNullException(nameof(storage));", span="41-41"];
n5 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: connection == null", span="42-42"];
n6 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: throw new ArgumentNullException(nameof(connection));", span="42-42"];
n7 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: transaction == null", span="43-43"];
n8 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: throw new ArgumentNullException(nameof(transaction));", span="43-43"];
n9 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: backgroundJob == null", span="44-44"];
n10 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: throw new ArgumentNullException(nameof(backgroundJob));", span="44-44"];
n11 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: newState == null", span="45-45"];
n12 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="0: throw new ArgumentNullException(nameof(newState));", span="45-45"];
n13 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, label="1: BackgroundJob = backgroundJob", span="47-47"];
n14 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", label="Storage = storage", span="49-49"];
n15 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", label="Connection = connection", span="50-50"];
n16 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", label="Transaction = transaction", span="51-51"];
n17 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", label="OldStateName = oldStateName", span="52-52"];
n18 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", label="NewState = newState", span="53-53"];
n19 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", label="JobExpirationTimeout = TimeSpan.FromDays(1)", span="54-54"];
n20 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", label="Exit Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="33-33"];
n23 [cluster="System.TimeSpan.FromDays(double)", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
n21 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n22 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
d10 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", color=green, community=0, label="0: Assert.Equal(expected, actual)", span="24-24"];
d8 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", label="string expected = ''0 * * * *''", span="22-22"];
d9 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", label="string actual = Cron.Hourly()", span="23-23"];
d11 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", label="Exit Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", span="20-20"];
d6 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d27 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", color=green, community=0, label="0: string actual = Cron.Daily(5)", span="47-47"];
d26 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", label="string expected = ''0 5 * * *''", span="46-46"];
d28 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", label="Assert.Equal(expected, actual)", span="48-48"];
d30 [cluster="Hangfire.Cron.Daily(int)", label="Entry Hangfire.Cron.Daily(int)", span="64-64"];
d40 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", color=green, community=0, label="0: Assert.Equal(expected, actual)", span="64-64"];
d38 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", label="string expected = ''0 0 * * '' + ((int)DayOfWeek.Monday).ToString()", span="62-62"];
d39 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", label="string actual = Cron.Weekly()", span="63-63"];
d41 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", label="Exit Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", span="60-60"];
d45 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", color=green, community=0, label="1: DayOfWeek day = DayOfWeek.Thursday", span="70-70"];
d44 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", label="Entry Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", span="68-68"];
d46 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", label="string expected = ''0 0 * * '' + ((int)day).ToString()", span="71-71"];
d47 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", label="string actual = Cron.Weekly(day)", span="72-72"];
d48 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", color=green, community=0, label="0: Assert.Equal(expected, actual)", span="73-73"];
d49 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", label="Exit Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", span="68-68"];
d7 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", label="Entry Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", span="20-20"];
d12 [cluster="Hangfire.Cron.Hourly()", label="Entry Hangfire.Cron.Hourly()", span="37-37"];
d3 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", label="Assert.Equal(expected, actual)", span="16-16"];
d16 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", label="Assert.Equal(expected, actual)", span="32-32"];
d22 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", label="Assert.Equal(expected, actual)", span="40-40"];
d34 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", label="Assert.Equal(expected, actual)", span="56-56"];
d56 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", label="Assert.Equal(expected, actual)", span="83-83"];
d65 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="Assert.Equal(expected, actual)", span="94-94"];
d71 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", label="Assert.Equal(expected, actual)", span="102-102"];
d78 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", label="Assert.Equal(expected, actual)", span="111-111"];
d86 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", label="Assert.Equal(expected, actual)", span="121-121"];
d95 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="Assert.Equal(expected, actual)", span="132-132"];
d101 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", label="Assert.Equal(expected, actual)", span="140-140"];
d108 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", label="Assert.Equal(expected, actual)", span="149-149"];
d116 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", label="Assert.Equal(expected, actual)", span="159-159"];
d125 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", label="Assert.Equal(expected, actual)", span="170-170"];
d135 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", label="Assert.Equal(expected, actual)", span="182-182"];
d25 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", label="Entry Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", span="44-44"];
d29 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", label="Exit Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", span="44-44"];
d19 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", label="Entry Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", span="36-36"];
d37 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", label="Entry Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", span="60-60"];
d42 [cluster="int.ToString()", label="Entry int.ToString()", span="0-0"];
d43 [cluster="Hangfire.Cron.Weekly()", label="Entry Hangfire.Cron.Weekly()", span="83-83"];
d50 [cluster="Hangfire.Cron.Weekly(System.DayOfWeek)", label="Entry Hangfire.Cron.Weekly(System.DayOfWeek)", span="93-93"];
d20 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", label="string expected = ''0 0 * * *''", span="38-38"];
d1 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", label="string expected = ''* * * * *''", span="14-14"];
d2 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", label="string actual = Cron.Minutely()", span="15-15"];
d4 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", label="Exit Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", span="12-12"];
d14 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", label="string expected = ''5 * * * *''", span="30-30"];
d15 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", label="string actual = Cron.Hourly(5)", span="31-31"];
d17 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", label="Exit Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", span="28-28"];
d21 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", label="string actual = Cron.Daily()", span="39-39"];
d23 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", label="Exit Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", span="36-36"];
d32 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", label="string expected = ''5 5 * * *''", span="54-54"];
d33 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", label="string actual = Cron.Daily(5, 5)", span="55-55"];
d35 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", label="Exit Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", span="52-52"];
d54 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", label="string expected = ''0 '' + hour.ToString() + '' * * '' + ((int)day).ToString()", span="81-81"];
d55 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", label="string actual = Cron.Weekly(day, hour)", span="82-82"];
d57 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", label="Exit Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", span="77-77"];
d63 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="string expected = minute.ToString() + '' '' + hour.ToString() + '' * * '' + ((int)day).ToString()", span="92-92"];
d64 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="string actual = Cron.Weekly(day, hour, minute)", span="93-93"];
d66 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="Exit Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", span="87-87"];
d69 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", label="string expected = ''0 0 1 * *''", span="100-100"];
d70 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", label="string actual = Cron.Monthly()", span="101-101"];
d72 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", label="Exit Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", span="98-98"];
d76 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", label="string expected = ''0 0 '' + day.ToString() + '' * *''", span="109-109"];
d77 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", label="string actual = Cron.Monthly(day)", span="110-110"];
d79 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", label="Exit Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", span="106-106"];
d84 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", label="string expected = ''0 '' + hour.ToString() + '' '' + day.ToString() + '' * *''", span="119-119"];
d85 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", label="string actual = Cron.Monthly(day, hour)", span="120-120"];
d87 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", label="Exit Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", span="115-115"];
d93 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="string expected = minute.ToString() + '' '' + hour.ToString() + '' '' + day.ToString() + '' * *''", span="130-130"];
d94 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="string actual = Cron.Monthly(day, hour, minute)", span="131-131"];
d96 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="Exit Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", span="125-125"];
d99 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", label="string expected = ''0 0 1 1 *''", span="138-138"];
d100 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", label="string actual = Cron.Yearly()", span="139-139"];
d102 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", span="136-136"];
d106 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", label="string expected = ''0 0 1 '' + month.ToString() + '' *''", span="147-147"];
d107 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", label="string actual = Cron.Yearly(month)", span="148-148"];
d109 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", span="144-144"];
d114 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", label="string expected = ''0 0 '' + day.ToString() + '' '' + month.ToString() + '' *''", span="157-157"];
d115 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", label="string actual = Cron.Yearly(month, day)", span="158-158"];
d117 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", span="153-153"];
d123 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", label="string expected = ''0 '' + hour.ToString() + '' '' + day.ToString() + '' '' + month.ToString() + '' *''", span="168-168"];
d124 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", label="string actual = Cron.Yearly(month, day, hour)", span="169-169"];
d126 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", span="163-163"];
d133 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", label="string expected = minute.ToString() + '' '' + hour.ToString() + '' '' + day.ToString() + '' '' + month.ToString() + '' *''", span="180-180"];
d134 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", label="string actual = Cron.Yearly(month, day, hour, minute)", span="181-181"];
d136 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", span="174-174"];
d0 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", label="Entry Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", span="12-12"];
d5 [cluster="Hangfire.Cron.Minutely()", label="Entry Hangfire.Cron.Minutely()", span="29-29"];
d13 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", label="Entry Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", span="28-28"];
d18 [cluster="Hangfire.Cron.Hourly(int)", label="Entry Hangfire.Cron.Hourly(int)", span="46-46"];
d24 [cluster="Hangfire.Cron.Daily()", label="Entry Hangfire.Cron.Daily()", span="54-54"];
d31 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", label="Entry Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", span="52-52"];
d36 [cluster="Hangfire.Cron.Daily(int, int)", label="Entry Hangfire.Cron.Daily(int, int)", span="75-75"];
d52 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", label="DayOfWeek day = DayOfWeek.Thursday", span="79-79"];
d53 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", label="int hour = 5", span="80-80"];
d58 [cluster="Hangfire.Cron.Weekly(System.DayOfWeek, int)", label="Entry Hangfire.Cron.Weekly(System.DayOfWeek, int)", span="104-104"];
d51 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", label="Entry Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", span="77-77"];
d60 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="DayOfWeek day = DayOfWeek.Thursday", span="89-89"];
d61 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="int hour = 5", span="90-90"];
d62 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="int minute = 5", span="91-91"];
d67 [cluster="Hangfire.Cron.Weekly(System.DayOfWeek, int, int)", label="Entry Hangfire.Cron.Weekly(System.DayOfWeek, int, int)", span="116-116"];
d59 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="Entry Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", span="87-87"];
d68 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", label="Entry Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", span="98-98"];
d73 [cluster="Hangfire.Cron.Monthly()", label="Entry Hangfire.Cron.Monthly()", span="125-125"];
d75 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", label="int day = 6", span="108-108"];
d80 [cluster="Hangfire.Cron.Monthly(int)", label="Entry Hangfire.Cron.Monthly(int)", span="135-135"];
d74 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", label="Entry Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", span="106-106"];
d82 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", label="int day = 7", span="117-117"];
d83 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", label="int hour = 4", span="118-118"];
d88 [cluster="Hangfire.Cron.Monthly(int, int)", label="Entry Hangfire.Cron.Monthly(int, int)", span="146-146"];
d81 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", label="Entry Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", span="115-115"];
d90 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="int day = 7", span="127-127"];
d91 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="int hour = 4", span="128-128"];
d92 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="int minute = 23", span="129-129"];
d97 [cluster="Hangfire.Cron.Monthly(int, int, int)", label="Entry Hangfire.Cron.Monthly(int, int, int)", span="158-158"];
d89 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", label="Entry Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", span="125-125"];
d98 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", span="136-136"];
d103 [cluster="Hangfire.Cron.Yearly()", label="Entry Hangfire.Cron.Yearly()", span="166-166"];
d105 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", label="int month = 7", span="146-146"];
d110 [cluster="Hangfire.Cron.Yearly(int)", label="Entry Hangfire.Cron.Yearly(int)", span="176-176"];
d104 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", span="144-144"];
d112 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", label="int month = 8", span="155-155"];
d113 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", label="int day = 18", span="156-156"];
d118 [cluster="Hangfire.Cron.Yearly(int, int)", label="Entry Hangfire.Cron.Yearly(int, int)", span="187-187"];
d111 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", span="153-153"];
d120 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", label="int month = 3", span="165-165"];
d121 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", label="int day = 18", span="166-166"];
d122 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", label="int hour = 14", span="167-167"];
d127 [cluster="Hangfire.Cron.Yearly(int, int, int)", label="Entry Hangfire.Cron.Yearly(int, int, int)", span="199-199"];
d119 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", span="163-163"];
d129 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", label="int month = 4", span="176-176"];
d130 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", label="int day = 17", span="177-177"];
d131 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", label="int hour = 3", span="178-178"];
d132 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", label="int minute = 45", span="179-179"];
d137 [cluster="Hangfire.Cron.Yearly(int, int, int, int)", label="Entry Hangfire.Cron.Yearly(int, int, int, int)", span="212-212"];
d128 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", span="174-174"];
m0_14 [cluster="Unk.Dispose", file="AspNetCoreJobActivatorScope.cs", label="Entry Unk.Dispose", span=""];
m0_7 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.Resolve(System.Type)", file="AspNetCoreJobActivatorScope.cs", label="Entry Hangfire.AspNetCore.AspNetCoreJobActivatorScope.Resolve(System.Type)", span="32-32"];
m0_8 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.Resolve(System.Type)", color=red, community=0, file="AspNetCoreJobActivatorScope.cs", label="0: return _serviceScope.ServiceProvider.GetRequiredService(type);", span="34-34"];
m0_9 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.Resolve(System.Type)", file="AspNetCoreJobActivatorScope.cs", label="Exit Hangfire.AspNetCore.AspNetCoreJobActivatorScope.Resolve(System.Type)", span="32-32"];
m0_6 [cluster="Unk.nameof", file="AspNetCoreJobActivatorScope.cs", label="Entry Unk.nameof", span=""];
m0_0 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.AspNetCoreJobActivatorScope(IServiceScope)", file="AspNetCoreJobActivatorScope.cs", label="Entry Hangfire.AspNetCore.AspNetCoreJobActivatorScope.AspNetCoreJobActivatorScope(IServiceScope)", span="26-26"];
m0_1 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.AspNetCoreJobActivatorScope(IServiceScope)", color=red, community=0, file="AspNetCoreJobActivatorScope.cs", label="0: serviceScope == null", span="28-28"];
m0_2 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.AspNetCoreJobActivatorScope(IServiceScope)", color=red, community=0, file="AspNetCoreJobActivatorScope.cs", label="0: throw new ArgumentNullException(nameof(serviceScope));", span="28-28"];
m0_3 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.AspNetCoreJobActivatorScope(IServiceScope)", color=red, community=0, file="AspNetCoreJobActivatorScope.cs", label="1: _serviceScope = serviceScope", span="29-29"];
m0_4 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.AspNetCoreJobActivatorScope(IServiceScope)", file="AspNetCoreJobActivatorScope.cs", label="Exit Hangfire.AspNetCore.AspNetCoreJobActivatorScope.AspNetCoreJobActivatorScope(IServiceScope)", span="26-26"];
m0_10 [cluster="Unk.GetRequiredService", file="AspNetCoreJobActivatorScope.cs", label="Entry Unk.GetRequiredService", span=""];
m0_11 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", file="AspNetCoreJobActivatorScope.cs", label="Entry Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", span="37-37"];
m0_12 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", color=red, community=0, file="AspNetCoreJobActivatorScope.cs", label="0: _serviceScope.Dispose()", span="39-39"];
m0_13 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", file="AspNetCoreJobActivatorScope.cs", label="Exit Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", span="37-37"];
m0_15 [file="AspNetCoreJobActivatorScope.cs", label="Hangfire.AspNetCore.AspNetCoreJobActivatorScope", span=""];
m1_11 [cluster="Unk.CreateLogger", file="AspNetCoreLogProvider.cs", label="Entry Unk.CreateLogger", span=""];
m1_10 [cluster="AspNetCoreLog.cstr", file="AspNetCoreLogProvider.cs", label="Entry AspNetCoreLog.cstr", span=""];
m1_7 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="AspNetCoreLogProvider.cs", label="Entry Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", span="33-33"];
m1_8 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", color=red, community=0, file="AspNetCoreLogProvider.cs", label="0: return new AspNetCoreLog(_loggerFactory.CreateLogger(name));", span="35-35"];
m1_9 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="AspNetCoreLogProvider.cs", label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", span="33-33"];
m1_6 [cluster="Unk.nameof", file="AspNetCoreLogProvider.cs", label="Entry Unk.nameof", span=""];
m1_0 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="AspNetCoreLogProvider.cs", label="Entry Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27"];
m1_1 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", color=red, community=0, file="AspNetCoreLogProvider.cs", label="0: loggerFactory == null", span="29-29"];
m1_2 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", color=red, community=0, file="AspNetCoreLogProvider.cs", label="0: throw new ArgumentNullException(nameof(loggerFactory));", span="29-29"];
m1_3 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", color=red, community=0, file="AspNetCoreLogProvider.cs", label="1: _loggerFactory = loggerFactory", span="30-30"];
m1_4 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="AspNetCoreLogProvider.cs", label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27"];
m1_12 [file="AspNetCoreLogProvider.cs", label="Hangfire.AspNetCore.AspNetCoreLogProvider", span=""];
m3_0 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="AutomaticRetryAttribute.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="22-22"];
m3_1 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="AutomaticRetryAttribute.cs", label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="22-22"];
m3_2 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="AutomaticRetryAttribute.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="26-26"];
m3_3 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="AutomaticRetryAttribute.cs", label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="26-26"];
m4_0 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", span="32-32"];
m4_3 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="AutomaticRetryProcess.cs", label="_innerProcess = innerProcess", span="36-36"];
m4_4 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="AutomaticRetryProcess.cs", label="_logger = LogProvider.GetLogger(_innerProcess.GetProcessType())", span="37-37"];
m4_5 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="AutomaticRetryProcess.cs", label="MaxRetryAttempts = DefaultMaxRetryAttempts", span="39-39"];
m4_6 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="AutomaticRetryProcess.cs", label="MaxAttemptDelay = DefaultMaxAttemptDelay", span="40-40"];
m4_7 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="AutomaticRetryProcess.cs", label="DelayCallback = GetBackOffMultiplier", span="41-41"];
m4_1 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="AutomaticRetryProcess.cs", label="innerProcess == null", span="34-34"];
m4_2 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="AutomaticRetryProcess.cs", label="throw new ArgumentNullException(nameof(innerProcess));", span="34-34"];
m4_8 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", span="32-32"];
m4_32 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="87-87"];
m4_38 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label=i, span="89-89"];
m4_40 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="return LogLevel.Debug;", span="92-92"];
m4_42 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="return LogLevel.Info;", span="94-94"];
m4_44 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="return LogLevel.Warn;", span="96-96"];
m4_45 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="return LogLevel.Error;", span="99-99"];
m4_39 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label=0, span="91-91"];
m4_41 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label=1, span="93-93"];
m4_43 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label=2, span="95-95"];
m4_46 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="87-87"];
m4_60 [cluster="System.Random.Next(int, int)", file="AutomaticRetryProcess.cs", label="Entry System.Random.Next(int, int)", span="0-0"];
m4_56 [cluster="System.Random.Random(int)", file="AutomaticRetryProcess.cs", label="Entry System.Random.Random(int)", span="0-0"];
m4_11 [cluster="Hangfire.Server.IServerProcess.GetProcessType()", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.IServerProcess.GetProcessType()", span="61-61"];
m4_30 [cluster="Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="28-28"];
m4_59 [cluster="System.Math.Pow(double, double)", file="AutomaticRetryProcess.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m4_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="AutomaticRetryProcess.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_13 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="50-50"];
m4_26 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="AutomaticRetryProcess.cs", label="0: context.Wait(nextTry)", span="77-77"];
m4_23 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="var nextTry = DelayCallback(i)", span="68-68"];
m4_25 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="AutomaticRetryProcess.cs", label="0: _logger.Log(\r\n                        logLevel,\r\n                        // ReSharper disable once AccessToModifiedClosure\r\n                        () => $''Error occurred during execution of '{_innerProcess}' process. Execution will be retried (attempt {i + 1} of {MaxRetryAttempts}) in {nextTry} seconds.'',\r\n                        ex)", span="71-75"];
m4_27 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="AutomaticRetryProcess.cs", label="4: context.IsShutdownRequested", span="79-79"];
m4_28 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="i++", span="52-52"];
m4_14 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="var i = 0", span="52-52"];
m4_24 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="var logLevel = GetLogLevel(i)", span="69-69"];
m4_16 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="_innerProcess.Execute(context)", span="56-56"];
m4_21 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="i >= MaxRetryAttempts - 1", span="66-66"];
m4_15 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="i <= MaxRetryAttempts", span="52-52"];
m4_17 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="return;", span="57-57"];
m4_19 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="throw;", span="61-61"];
m4_22 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="throw;", span="66-66"];
m4_20 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label=Exception, span="63-63"];
m4_18 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label=OperationCanceledException, span="59-59"];
m4_29 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="50-50"];
m4_62 [cluster="System.TimeSpan.FromSeconds(double)", file="AutomaticRetryProcess.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m4_10 [cluster="Unk.nameof", file="AutomaticRetryProcess.cs", label="Entry Unk.nameof", span=""];
m4_33 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="56-56"];
m4_47 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.ToString()", span="102-102"];
m4_48 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="AutomaticRetryProcess.cs", label="return _innerProcess.ToString();", span="104-104"];
m4_49 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.ToString()", span="102-102"];
m4_61 [cluster="System.Math.Min(double, double)", file="AutomaticRetryProcess.cs", label="Entry System.Math.Min(double, double)", span="0-0"];
m4_35 [cluster="lambda expression", file="AutomaticRetryProcess.cs", label="Entry lambda expression", span="74-74"];
m4_36 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryProcess.cs", label="1: $''Error occurred during execution of '{_innerProcess}' process. Execution will be retried (attempt {i + 1} of {MaxRetryAttempts}) in {nextTry} seconds.''", span="74-74"];
m4_37 [cluster="lambda expression", file="AutomaticRetryProcess.cs", label="Exit lambda expression", span="74-74"];
m4_57 [cluster="System.Guid.NewGuid()", file="AutomaticRetryProcess.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m4_12 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="357-357"];
m4_58 [cluster="System.Guid.GetHashCode()", file="AutomaticRetryProcess.cs", label="Entry System.Guid.GetHashCode()", span="0-0"];
m4_51 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="107-107"];
m4_54 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="114-114"];
m4_53 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="111-112"];
m4_52 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="110-110"];
m4_55 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="107-107"];
m4_34 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="54-54"];
m4_50 [cluster="object.ToString()", file="AutomaticRetryProcess.cs", label="Entry object.ToString()", span="0-0"];
m4_63 [file="AutomaticRetryProcess.cs", label="Hangfire.Server.AutomaticRetryProcess", span=""];
m4_64 [file="AutomaticRetryProcess.cs", label=i, span=""];
m4_65 [file="AutomaticRetryProcess.cs", label=nextTry, span=""];
m5_122 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m5_113 [cluster="Hangfire.JobStorage.GetConnection()", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m5_126 [cluster="string.IsNullOrWhiteSpace(string)", file="AwaitingJobsPage.generated.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m5_130 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m5_0 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", span="63-63"];
m5_1 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="67-67"];
m5_2 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Layout = new LayoutPage(Strings.AwaitingJobsPage_Title)", span="81-81"];
m5_3 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="int from, perPage", span="83-83"];
m5_4 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="int.TryParse(Query(''from''), out from)", span="85-85"];
m5_5 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="int.TryParse(Query(''count''), out perPage)", span="86-86"];
m5_11 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="pager = new Pager(from, perPage, storageConnection.GetSetCount(''awaiting''))", span="97-97"];
m5_6 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="List<string> jobIds = null", span="88-88"];
m5_7 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="Pager pager = null", span="89-89"];
m5_18 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="jobIds == null", span="131-131"];
m5_24 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="jobIds.Count > 0", span="163-163"];
m5_52 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: jobIds", span="320-320"];
m5_8 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="var connection = Storage.GetConnection()", span="91-91"];
m5_40 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="Write(Html.PerPageSelector(pager))", span="249-249"];
m5_102 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="Write(Html.Paginator(pager))", span="594-594"];
m5_9 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="var storageConnection = connection as JobStorageConnection", span="93-93"];
m5_10 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="storageConnection != null", span="95-95"];
m5_12 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="jobIds = storageConnection.GetRangeFromSet(''awaiting'', pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1)", span="98-98"];
m5_13 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-3\''>\r\n        '')", span="106-106"];
m5_14 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="Write(Html.JobsSidebar())", span="111-111"];
m5_15 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\r\n    </div>\r\n    <div class=\''col-md-9\''>\r\n        <h1 class=\''page-header\''>'')", span="116-116"];
m5_16 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.AwaitingJobsPage_Title)", span="121-121"];
m5_17 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''</h1>\r\n\r\n'')", span="126-126"];
m5_19 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''            <div class=\''alert alert-warning\''>\r\n                <h4>'')", span="137-137"];
m5_20 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.AwaitingJobsPage_ContinuationsWarning_Title)", span="142-142"];
m5_21 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''</h4>\r\n                <p>'')", span="147-147"];
m5_22 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.AwaitingJobsPage_ContinuationsWarning_Text)", span="152-152"];
m5_23 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''</p>\r\n            </div>\r\n'')", span="157-157"];
m5_25 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="169-171"];
m5_104 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                '')", span="611-611"];
m5_26 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="Write(Url.To(''/jobs/awaiting/enqueue''))", span="176-176"];
m5_27 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="181-181"];
m5_28 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_Enqueueing)", span="186-186"];
m5_29 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\''>\r\n                        <span class=\''glyphicon glyphicon-repeat\''></span>\r\n   '' +\r\n''                     '')", span="191-192"];
m5_30 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_EnqueueButton_Text)", span="197-197"];
m5_31 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\r\n                    </button>\r\n\r\n                    <button class=\''js-jobs-lis'' +\r\n''t-command btn btn-sm btn-default\''\r\n                            data-url=\'''')", span="202-203"];
m5_32 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="Write(Url.To(''/jobs/awaiting/delete''))", span="208-208"];
m5_33 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="213-213"];
m5_34 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_Deleting)", span="218-218"];
m5_35 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            data-confirm=\'''')", span="223-223"];
m5_36 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_DeleteConfirm)", span="228-228"];
m5_37 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\''>\r\n                        <span class=\''glyphicon glyphicon-remove\''></span>\r\n   '' +\r\n''                     '')", span="233-234"];
m5_38 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_DeleteSelected)", span="239-239"];
m5_39 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\r\n                    </button>\r\n\r\n                    '')", span="244-244"];
m5_41 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(@''\r\n                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table table-hover''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="254-264"];
m5_42 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_Id)", span="269-269"];
m5_43 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                <th>'')", span="274-274"];
m5_44 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_Job)", span="279-279"];
m5_45 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="284-284"];
m5_46 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.AwaitingJobsPage_Table_Options)", span="289-289"];
m5_47 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="294-294"];
m5_48 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.AwaitingJobsPage_Table_Parent)", span="299-299"];
m5_49 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                <th class=\''align-right\''>'')", span="304-304"];
m5_50 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_Created)", span="309-309"];
m5_51 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="314-315"];
m5_53 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: JobData jobData", span="322-322"];
m5_101 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n                '')", span="588-589"];
m5_57 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: jobData = connection.GetJobData(jobId)", span="328-328"];
m5_58 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: stateData = connection.GetStateData(jobId)", span="329-329"];
m5_64 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(jobId)", span="357-357"];
m5_66 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Html.JobIdLink(jobId))", span="368-368"];
m5_73 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Html.JobNameLink(jobId, jobData.Job))", span="412-412"];
m5_54 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: StateData stateData", span="323-323"];
m5_55 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="4: StateData parentStateData = null", span="324-324"];
m5_56 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: var connection = Storage.GetConnection()", span="326-326"];
m5_85 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: parentStateData != null", span="483-483"];
m5_89 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write($''background-color: {JobHistoryRenderer.GetForegroundStateColor(parentStateData.Name)};'')", span="505-505"];
m5_91 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(parentStateData.Name)", span="515-515"];
m5_60 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: parentStateData = connection.GetStateData(stateData.Data[''ParentId''])", span="333-333"];
m5_62 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(jobData != null ? ''hover'' : null)", span="346-346"];
m5_68 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: jobData == null", span="378-378"];
m5_98 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Html.RelativeTime(jobData.CreatedAt))", span="563-563"];
m5_59 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: stateData != null && stateData.Name == AwaitingState.StateName", span="331-331"];
m5_76 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: stateData != null && stateData.Data.ContainsKey(''Options'') && !String.IsNullOrWhiteSpace(stateData.Data[''Options''])", span="426-426"];
m5_78 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(stateData.Data[''Options''])", span="437-437"];
m5_87 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Url.JobDetails(stateData.Data[''ParentId'']))", span="494-494"];
m5_61 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                <tr class=\''js-jobs-list-row '')", span="341-341"];
m5_63 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\''>\r\n                                    <td>\r\n                                   '' +\r\n''     <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="351-352"];
m5_65 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\'' />\r\n                                    </td>\r\n                                '' +\r\n''    <td class=\''min-width\''>\r\n                                        '')", span="362-363"];
m5_67 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\r\n                                    </td>\r\n'')", span="373-373"];
m5_69 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                        <td colspan=\''2\''><em>'')", span="384-384"];
m5_72 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                        <td>\r\n                                   '' +\r\n''         '')", span="406-407"];
m5_70 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_JobExpired)", span="389-389"];
m5_71 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''</em></td>\r\n'')", span="394-394"];
m5_74 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''\r\n                                        </td>\r\n'')", span="417-417"];
m5_75 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                        <td class=\''min-width\''>\r\n'')", span="421-421"];
m5_77 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                                <code>'')", span="432-432"];
m5_80 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                                <em>'')", span="454-454"];
m5_79 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''</code>\r\n'')", span="442-442"];
m5_81 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_NotAvailable)", span="459-459"];
m5_82 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''</em>\r\n'')", span="464-464"];
m5_83 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''                                        </td>\r\n'')", span="474-474"];
m5_84 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                        <td class=\''min-width\''>\r\n'')", span="478-478"];
m5_86 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                                <a href=\'''')", span="489-489"];
m5_93 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                                <em>'')", span="533-533"];
m5_88 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\''>\r\n                                                    <span class=\''label label-'' +\r\n''default label-hover\'' style=\'''')", span="499-500"];
m5_90 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''\''>\r\n                                                        '')", span="510-510"];
m5_92 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''\r\n                                                    </span>\r\n                  '' +\r\n''                              </a>\r\n'')", span="520-521"];
m5_94 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.Common_NotAvailable)", span="538-538"];
m5_95 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''</em>\r\n'')", span="543-543"];
m5_96 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''                                        </td>\r\n'')", span="553-553"];
m5_97 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=1, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                        <td class=\''min-width align-right\''>\r\n     '' +\r\n''                                       '')", span="557-558"];
m5_99 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''\r\n                                        </td>\r\n'')", span="568-568"];
m5_100 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: WriteLiteral(''                                </tr>\r\n'')", span="578-578"];
m5_103 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="599-599"];
m5_105 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="0: Write(Strings.AwaitingJobsPage_NoJobs)", span="616-616"];
m5_106 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", color=red, community=0, file="AwaitingJobsPage.generated.cs", label="1: WriteLiteral(''\r\n            </div>\r\n'')", span="621-621"];
m5_107 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="WriteLiteral(''    </div>\r\n</div>\r\n'')", span="631-631"];
m5_108 [cluster="Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", file="AwaitingJobsPage.generated.cs", label="Exit Hangfire.Dashboard.Pages.AwaitingJobsPage.Execute()", span="63-63"];
m5_128 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m5_119 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m5_110 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m5_127 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58"];
m5_117 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m5_116 [cluster="Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", span="58-58"];
m5_109 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m5_111 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m5_121 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m5_112 [cluster="int.TryParse(string, out int)", file="AwaitingJobsPage.generated.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m5_114 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m5_129 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m5_125 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="AwaitingJobsPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_123 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m5_120 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m5_124 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m5_118 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m5_115 [cluster="Hangfire.Storage.JobStorageConnection.GetSetCount(string)", file="AwaitingJobsPage.generated.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetSetCount(string)", span="53-53"];
m5_131 [file="AwaitingJobsPage.generated.cs", label="Hangfire.Dashboard.Pages.AwaitingJobsPage", span=""];
m6_8 [cluster="Unk.nameof", file="BackgroundJob.Instance.cs", label="Entry Unk.nameof", span=""];
m6_0 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m6_1 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", color=green, community=0, file="BackgroundJob.Instance.cs", label="0: id == null", span="27-27"];
m6_2 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", color=green, community=0, file="BackgroundJob.Instance.cs", label="0: throw new ArgumentNullException(nameof(id));", span="27-27"];
m6_3 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs", label="Id = id", span="29-29"];
m6_4 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs", label="Job = job", span="30-30"];
m6_5 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs", label="CreatedAt = createdAt", span="31-31"];
m6_6 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs", label="Exit Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m6_9 [file="BackgroundJob.Instance.cs", label="Hangfire.BackgroundJob", span=""];
m7_0 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="BackgroundJobClientException.cs", label="Entry Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="37-37"];
m7_1 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="BackgroundJobClientException.cs", label="Exit Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="37-37"];
m8_4 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", span="20-20"];
m8_5 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Initialize()", span="22-22"];
m8_6 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Enqueue(() => Method())", span="24-24"];
m8_7 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="26-26"];
m8_8 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", span="20-20"];
m8_54 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="185-185"];
m8_3 [cluster="Mock<IBackgroundJobClient>.cstr", file="BackgroundJobFacts.cs", label="Entry Mock<IBackgroundJobClient>.cstr", span=""];
m8_112 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Requeue(string)", span="314-314"];
m8_76 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithDateTimeOffset_CreatesAJobInScheduledState()", span="76-76"];
m8_77 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Initialize()", span="78-78"];
m8_78 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Schedule<BackgroundJobFacts>(x => x.Method(), DateTimeOffset.Now)", span="80-80"];
m8_79 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.IsNotNull<ScheduledState>()))", span="82-84"];
m8_80 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithDateTimeOffset_CreatesAJobInScheduledState()", span="76-76"];
m8_125 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", span="140-140"];
m8_126 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="BackgroundJob.ClientFactory = null", span="142-142"];
m8_127 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="143-143"];
m8_128 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="var client = BackgroundJob.ClientFactory()", span="145-145"];
m8_129 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="Assert.NotNull(client)", span="146-146"];
m8_130 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", span="140-140"];
m8_19 [cluster="Unk.>", file="BackgroundJobFacts.cs", label="Entry Unk.>", span=""];
m8_93 [cluster="Hangfire.BackgroundJob.Delete(string)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Delete(string)", span="285-285"];
m8_49 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithDateTimeOffset_CreatesAJobInScheduledState()", span="52-52"];
m8_50 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Initialize()", span="54-54"];
m8_51 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Schedule(() => Method(), DateTimeOffset.Now)", span="56-56"];
m8_52 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.IsNotNull<ScheduledState>()))", span="58-60"];
m8_53 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithDateTimeOffset_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithDateTimeOffset_CreatesAJobInScheduledState()", span="52-52"];
m8_116 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="127-127"];
m8_117 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="Initialize()", span="129-129"];
m8_118 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Requeue(''job-id'', FailedState.StateName)", span="131-131"];
m8_119 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName))", span="133-136"];
m8_120 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="127-127"];
m8_97 [cluster="Unk.ChangeState", file="BackgroundJobFacts.cs", label="Entry Unk.ChangeState", span=""];
m8_98 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", span="101-101"];
m8_99 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="Initialize()", span="103-103"];
m8_100 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Delete(''job-id'', FailedState.StateName)", span="105-105"];
m8_101 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName))", span="107-110"];
m8_102 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", span="101-101"];
m8_133 [cluster="Unk.NotNull", file="BackgroundJobFacts.cs", label="Entry Unk.NotNull", span=""];
m8_88 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", span="88-88"];
m8_89 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="Initialize()", span="90-90"];
m8_90 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="BackgroundJob.Delete(''job-id'')", span="92-92"];
m8_91 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null))", span="94-97"];
m8_92 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", span="88-88"];
m8_15 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Method()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Method()", span="154-154"];
m8_139 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Method()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Method()", span="154-154"];
m8_0 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", span="14-14"];
m8_1 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", file="BackgroundJobFacts.cs", label="_client = new Mock<IBackgroundJobClient>()", span="16-16"];
m8_2 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", span="14-14"];
m8_81 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="252-252"];
m8_136 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="151-151"];
m8_12 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="24-24"];
m8_16 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="26-26"];
m8_13 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="24-24"];
m8_14 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="24-24"];
m8_17 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="26-26"];
m8_18 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="26-26"];
m8_27 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="34-34"];
m8_30 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="36-36"];
m8_28 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Method()", span="34-34"];
m8_29 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="34-34"];
m8_31 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="36-36"];
m8_32 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="36-36"];
m8_40 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="44-44"];
m8_43 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="46-48"];
m8_41 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="44-44"];
m8_42 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="44-44"];
m8_44 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="46-48"];
m8_45 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="46-48"];
m8_46 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="48-48"];
m8_47 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", span="48-48"];
m8_48 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="48-48"];
m8_55 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="56-56"];
m8_58 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="58-60"];
m8_56 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="56-56"];
m8_57 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="56-56"];
m8_59 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.IsNotNull<ScheduledState>())", span="58-60"];
m8_60 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="58-60"];
m8_67 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="68-68"];
m8_70 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="70-72"];
m8_68 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="68-68"];
m8_69 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="68-68"];
m8_71 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="70-72"];
m8_72 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="70-72"];
m8_73 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="72-72"];
m8_74 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", span="72-72"];
m8_75 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="72-72"];
m8_82 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="80-80"];
m8_85 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="82-84"];
m8_83 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Method()", span="80-80"];
m8_84 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="80-80"];
m8_86 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.IsNotNull<ScheduledState>())", span="82-84"];
m8_87 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="82-84"];
m8_94 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="94-97"];
m8_95 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null)", span="94-97"];
m8_96 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="94-97"];
m8_104 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="107-110"];
m8_105 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName)", span="107-110"];
m8_106 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="107-110"];
m8_113 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="120-123"];
m8_114 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                null)", span="120-123"];
m8_115 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="120-123"];
m8_122 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="133-136"];
m8_123 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName)", span="133-136"];
m8_124 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="133-136"];
m8_137 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="_client.Object", span="151-151"];
m8_138 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="151-151"];
m8_121 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="330-330"];
m8_103 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="301-301"];
m8_39 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="153-153"];
m8_107 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", span="114-114"];
m8_108 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="Initialize()", span="116-116"];
m8_109 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="BackgroundJob.Requeue(''job-id'')", span="118-118"];
m8_110 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                null))", span="120-123"];
m8_111 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", span="114-114"];
m8_10 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="85-85"];
m8_20 [cluster="Unk.Create", file="BackgroundJobFacts.cs", label="Entry Unk.Create", span=""];
m8_21 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="30-30"];
m8_22 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Initialize()", span="32-32"];
m8_23 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Enqueue<BackgroundJobFacts>(x => x.Method())", span="34-34"];
m8_24 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="36-36"];
m8_25 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="30-30"];
m8_26 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="121-121"];
m8_61 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="64-64"];
m8_62 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Initialize()", span="66-66"];
m8_63 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Schedule<BackgroundJobFacts>(x => Method(), TimeSpan.FromDays(1))", span="68-68"];
m8_64 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="70-72"];
m8_65 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="64-64"];
m8_66 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="218-218"];
m8_9 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", span="149-149"];
m8_134 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", file="BackgroundJobFacts.cs", label="BackgroundJob.ClientFactory = () => _client.Object", span="151-151"];
m8_135 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", span="149-149"];
m8_11 [cluster="Unk.Verify", file="BackgroundJobFacts.cs", label="Entry Unk.Verify", span=""];
m8_131 [cluster="Mock<JobStorage>.cstr", file="BackgroundJobFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m8_132 [cluster="System.Func<TResult>.Invoke()", file="BackgroundJobFacts.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m8_33 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", span="40-40"];
m8_34 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Initialize()", span="42-42"];
m8_35 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Schedule(() => Method(), TimeSpan.FromDays(1))", span="44-44"];
m8_36 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="46-48"];
m8_37 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", span="40-40"];
m8_140 [file="BackgroundJobFacts.cs", label="Hangfire.Core.Tests.BackgroundJobFacts", span=""];
m9_7 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BackgroundJobMock.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m9_0 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="BackgroundJobMock.cs", label="Entry Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", span="9-9"];
m9_1 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="BackgroundJobMock.cs", label="Id = ''JobId''", span="11-11"];
m9_2 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="BackgroundJobMock.cs", label="Job = Job.FromExpression(() => SomeMethod())", span="12-12"];
m9_3 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="BackgroundJobMock.cs", label="CreatedAt = DateTime.UtcNow", span="13-13"];
m9_4 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="BackgroundJobMock.cs", label="_object = new Lazy<BackgroundJob>(\r\n                () => new BackgroundJob(Id, Job, CreatedAt))", span="15-16"];
m9_5 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="BackgroundJobMock.cs", label="Exit Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", span="9-9"];
m9_11 [cluster="Hangfire.Core.Tests.BackgroundJobMock.SomeMethod()", file="BackgroundJobMock.cs", label="Entry Hangfire.Core.Tests.BackgroundJobMock.SomeMethod()", span="25-25"];
m9_16 [cluster="Hangfire.Core.Tests.BackgroundJobMock.SomeMethod()", file="BackgroundJobMock.cs", label="Exit Hangfire.Core.Tests.BackgroundJobMock.SomeMethod()", span="25-25"];
m9_12 [cluster="lambda expression", file="BackgroundJobMock.cs", label="Entry lambda expression", span="16-16"];
m9_8 [cluster="lambda expression", file="BackgroundJobMock.cs", label="Entry lambda expression", span="12-12"];
m9_9 [cluster="lambda expression", file="BackgroundJobMock.cs", label="SomeMethod()", span="12-12"];
m9_10 [cluster="lambda expression", file="BackgroundJobMock.cs", label="Exit lambda expression", span="12-12"];
m9_13 [cluster="lambda expression", file="BackgroundJobMock.cs", label="new BackgroundJob(Id, Job, CreatedAt)", span="16-16"];
m9_14 [cluster="lambda expression", file="BackgroundJobMock.cs", label="Exit lambda expression", span="16-16"];
m9_6 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobMock.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233"];
m9_15 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJobMock.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m9_17 [file="BackgroundJobMock.cs", label="Hangfire.Core.Tests.BackgroundJobMock", span=""];
m10_9 [cluster="string.Equals(string)", file="BackgroundJobServer.cs", label="Entry string.Equals(string)", span="0-0"];
m10_46 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="70-70"];
m10_47 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="BackgroundJobServer.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="72-74"];
m10_48 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="BackgroundJobServer.cs", label="Assert.IsNull(checkedTimestamp)", span="76-76"];
m10_49 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="70-70"];
m10_11 [cluster="System.DateTime.AddDays(double)", file="BackgroundJobServer.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m10_37 [cluster="Unk.GetValueFromHash", file="BackgroundJobServer.cs", label="Entry Unk.GetValueFromHash", span=""];
m10_31 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="47-47"];
m10_32 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJobServer.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="49-51"];
m10_33 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJobServer.cs", label="Assert.IsNotNull(checkedTimestamp)", span="53-53"];
m10_34 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJobServer.cs", label="var date = JobHelper.FromStringTimestamp(checkedTimestamp)", span="54-54"];
m10_35 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJobServer.cs", label="Assert.IsTrue(date > DateTime.UtcNow.AddMinutes(-1))", span="56-56"];
m10_36 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="47-47"];
m10_40 [cluster="System.DateTime.AddMinutes(double)", file="BackgroundJobServer.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m10_42 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="60-60"];
m10_43 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="BackgroundJobServer.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="62-64"];
m10_44 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="BackgroundJobServer.cs", label="Assert.IsNotNull(checkedTimestamp)", span="66-66"];
m10_45 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="60-60"];
m10_51 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="80-80"];
m10_52 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", color=green, community=0, file="BackgroundJobServer.cs", label="0: var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="82-83"];
m10_53 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="BackgroundJobServer.cs", label="Assert.IsNotNull(fetchedTimestamp)", span="85-85"];
m10_54 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="80-80"];
m10_0 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="10-10"];
m10_6 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJobServer.cs", label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="15-15"];
m10_7 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJobServer.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'',\r\n                JobHelper.ToStringTimestamp(time))", span="17-20"];
m10_4 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJobServer.cs", label="timeAgo.Equals(''day'')", span="14-14"];
m10_1 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJobServer.cs", label="DateTime time", span="12-12"];
m10_3 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJobServer.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="13-13"];
m10_5 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJobServer.cs", label="time = DateTime.UtcNow.AddDays(-1)", span="14-14"];
m10_2 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJobServer.cs", label="timeAgo.Equals(''millisecond'')", span="13-13"];
m10_8 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="10-10"];
m10_41 [cluster="Unk.IsTrue", file="BackgroundJobServer.cs", label="Entry Unk.IsTrue", span=""];
m10_14 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundJobServer.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m10_10 [cluster="System.DateTime.AddMilliseconds(double)", file="BackgroundJobServer.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m10_39 [cluster="Unk.FromStringTimestamp", file="BackgroundJobServer.cs", label="Entry Unk.FromStringTimestamp", span=""];
m10_55 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="89-89"];
m10_56 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="BackgroundJobServer.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="91-92"];
m10_57 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="BackgroundJobServer.cs", label="Assert.IsNull(fetchedTimestamp)", span="94-94"];
m10_58 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="89-89"];
m10_15 [cluster="Unk.SetEntryInHash", file="BackgroundJobServer.cs", label="Entry Unk.SetEntryInHash", span=""];
m10_16 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", span="24-24"];
m10_22 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJobServer.cs", label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="29-29"];
m10_23 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJobServer.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(time))", span="31-34"];
m10_20 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJobServer.cs", label="timeAgo.Equals(''day'')", span="28-28"];
m10_17 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJobServer.cs", label="DateTime time", span="26-26"];
m10_19 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJobServer.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="27-27"];
m10_21 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJobServer.cs", label="time = DateTime.UtcNow.AddDays(-1)", span="28-28"];
m10_18 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJobServer.cs", label="timeAgo.Equals(''millisecond'')", span="27-27"];
m10_24 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", span="24-24"];
m10_50 [cluster="Unk.IsNull", file="BackgroundJobServer.cs", label="Entry Unk.IsNull", span=""];
m10_13 [cluster="string.Format(string, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_38 [cluster="Unk.IsNotNull", file="BackgroundJobServer.cs", label="Entry Unk.IsNotNull", span=""];
m10_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundJobServer.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m12_424 [cluster="Mock<T>.cstr", file="BackgroundJobStateChanger.cs", label="Entry Mock<T>.cstr", span=""];
m12_15 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobStateChanger.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m12_28 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="38-38"];
m12_30 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="38-38"];
m12_31 [cluster="Unk.Run", file="BackgroundJobStateChanger.cs", label="Entry Unk.Run", span=""];
m12_29 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(null, _performer.Object)", span="38-38"];
m12_32 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44"];
m12_9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundJobStateChanger.cs", label="options.PrepareSchemaIfNecessary", span="45-45"];
m12_35 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="BackgroundJobStateChanger.cs", label="Assert.Equal(''performer'', exception.ParamName)", span="51-51"];
m12_38 [cluster="lambda expression", color=green, community=0, file="BackgroundJobStateChanger.cs", label="1: process.Run(_context, null)", span="49-49"];
m12_37 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="49-49"];
m12_39 [cluster="lambda expression", color=green, community=0, file="BackgroundJobStateChanger.cs", label="1: Exit lambda expression", span="49-49"];
m12_41 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55"];
m12_42 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="57-57"];
m12_43 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="59-59"];
m12_46 [cluster="Unk.Verify", file="BackgroundJobStateChanger.cs", label="Entry Unk.Verify", span=""];
m12_47 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="62-62"];
m12_40 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="41-41"];
m12_36 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44"];
m12_45 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55"];
m12_44 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="BackgroundJobStateChanger.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()), \r\n                Times.Once)", span="61-63"];
m12_49 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="62-62"];
m12_48 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="62-62"];
m12_50 [cluster="Unk.Perform", file="BackgroundJobStateChanger.cs", label="Entry Unk.Perform", span=""];
m12_71 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="85-85"];
m12_72 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundJobStateChanger.cs", label="var connection = new SqlConnection(_connectionString)", span="121-121"];
m12_73 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundJobStateChanger.cs", label="connection.Open()", span="122-122"];
m12_74 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundJobStateChanger.cs", label="return connection;", span="124-124"];
m12_75 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundJobStateChanger.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="119-119"];
m12_76 [cluster="SqlConnection.cstr", file="BackgroundJobStateChanger.cs", label="Entry SqlConnection.cstr", span=""];
m12_77 [cluster="Unk.Open", file="BackgroundJobStateChanger.cs", label="Entry Unk.Open", span=""];
m12_20 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="33-33"];
m12_21 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="35-35"];
m12_22 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobStateChanger.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null, _performer.Object))", span="37-38"];
m12_419 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(System.Collections.Generic.IEnumerable<object>)", span="32-32"];
m12_19 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", span="463-463"];
m12_57 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="67-67"];
m12_27 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="BackgroundJobStateChanger.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m12_53 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="71-71"];
m12_25 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="BackgroundJobStateChanger.cs", label="yield return new ExpirationManager(this);", span="66-66"];
m12_417 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="BackgroundJobStateChanger.cs", label="return new DefaultJobPerformanceProcess(_filters);", span="469-469"];
m12_418 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", span="467-467"];
m12_55 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="78-78"];
m12_58 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="472-472"];
m12_139 [cluster="Unk.DoesNotThrow", file="BackgroundJobStateChanger.cs", label="Entry Unk.DoesNotThrow", span=""];
m12_67 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Key", span="85-85"];
m12_376 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="413-413"];
m12_377 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<OperationCanceledException>()", span="416-418"];
m12_378 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="420-420"];
m12_379 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="421-421"];
m12_381 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="BackgroundJobStateChanger.cs", label="filter.Verify(\r\n                x => x.OnServerException(It.IsAny<ServerExceptionContext>()),\r\n                Times.Never)", span="428-430"];
m12_380 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="BackgroundJobStateChanger.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="424-425"];
m12_382 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="413-413"];
m12_261 [cluster="System.InvalidOperationException.InvalidOperationException()", file="BackgroundJobStateChanger.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m12_33 [cluster="Unk.Info", file="BackgroundJobStateChanger.cs", label="Entry Unk.Info", span=""];
m12_34 [cluster="Unk.InfoFormat", file="BackgroundJobStateChanger.cs", label="Entry Unk.InfoFormat", span=""];
m12_23 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobStateChanger.cs", label="Assert.Equal(''context'', exception.ParamName)", span="40-40"];
m12_170 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="203-203"];
m12_171 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="206-206"];
m12_172 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="207-207"];
m12_173 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="outerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="209-209"];
m12_176 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="outerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="212-212"];
m12_174 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="210-210"];
m12_175 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="211-211"];
m12_177 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="214-214"];
m12_178 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="217-217"];
m12_179 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="203-203"];
m12_0 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", span="17-17"];
m12_1 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="BackgroundJobStateChanger.cs", label="var workerContext = new WorkerContextMock()", span="19-19"];
m12_2 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundJobStateChanger.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
m12_5 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundJobStateChanger.cs", label="options == null", span="40-40"];
m12_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundJobStateChanger.cs", label="connectionString == null", span="39-39"];
m12_4 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundJobStateChanger.cs", label="throw new ArgumentNullException(''connectionString'');", span="39-39"];
m12_6 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundJobStateChanger.cs", label="throw new ArgumentNullException(''options'');", span="40-40"];
m12_7 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="BackgroundJobStateChanger.cs", label="0: _options = options", span="42-42"];
m12_8 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BackgroundJobStateChanger.cs", label="_connectionString = connectionString", span="43-43"];
m12_26 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="BackgroundJobStateChanger.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="64-64"];
m12_109 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="139-139"];
m12_110 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="BackgroundJobStateChanger.cs", label="var filter1 = CreateFilter<IServerExceptionFilter>()", span="142-142"];
m12_111 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="BackgroundJobStateChanger.cs", label="var filter2 = CreateFilter<IServerExceptionFilter>()", span="143-143"];
m12_113 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="BackgroundJobStateChanger.cs", label="filter1.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="146-146"];
m12_112 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="BackgroundJobStateChanger.cs", label="filter2.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="145-145"];
m12_114 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="148-150"];
m12_115 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="152-152"];
m12_116 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="BackgroundJobStateChanger.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="155-156"];
m12_117 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="139-139"];
m12_296 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="332-332"];
m12_297 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerFilter>()", span="335-335"];
m12_298 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="BackgroundJobStateChanger.cs", label="var exception = new InvalidOperationException()", span="337-337"];
m12_300 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="342-343"];
m12_299 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="338-340"];
m12_301 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="345-345"];
m12_302 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="BackgroundJobStateChanger.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="348-348"];
m12_303 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="332-332"];
m12_392 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="434-434"];
m12_393 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerFilter>()", span="437-437"];
m12_394 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<OperationCanceledException>()", span="438-439"];
m12_395 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="441-441"];
m12_396 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="BackgroundJobStateChanger.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="444-445"];
m12_397 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="434-434"];
m12_420 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="BackgroundJobStateChanger.cs", label="var filter = new Mock<T>()", span="475-475"];
m12_421 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="BackgroundJobStateChanger.cs", label="_filters.Add(filter.Object)", span="476-476"];
m12_422 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="BackgroundJobStateChanger.cs", label="return filter;", span="478-478"];
m12_423 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="472-472"];
m12_404 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="449-449"];
m12_405 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerFilter>()", span="452-452"];
m12_406 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<OperationCanceledException>()", span="453-454"];
m12_407 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="456-456"];
m12_408 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="BackgroundJobStateChanger.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="459-460"];
m12_409 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="449-449"];
m12_92 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="119-119"];
m12_93 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="122-122"];
m12_94 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="124-126"];
m12_97 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="BackgroundJobStateChanger.cs", label="filter.Verify(x => x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>()))", span="134-135"];
m12_95 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="128-128"];
m12_96 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="BackgroundJobStateChanger.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="131-132"];
m12_98 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="119-119"];
m12_54 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="73-75"];
m12_152 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="180-180"];
m12_153 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerFilter>()", span="183-183"];
m12_154 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnPerforming(It.IsNotNull<PerformingContext>()))\r\n                .InSequence()", span="185-186"];
m12_156 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnPerformed(It.IsNotNull<PerformedContext>()))\r\n                .InSequence()", span="191-192"];
m12_155 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="BackgroundJobStateChanger.cs", label="_performer.Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .InSequence()", span="188-189"];
m12_157 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="194-194"];
m12_158 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="197-197"];
m12_159 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="180-180"];
m12_253 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="289-289"];
m12_254 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerFilter>()", span="292-292"];
m12_255 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="BackgroundJobStateChanger.cs", label="var exception = new InvalidOperationException()", span="294-294"];
m12_259 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="BackgroundJobStateChanger.cs", label="filter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception)))", span="306-307"];
m12_256 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="295-297"];
m12_257 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="299-299"];
m12_258 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="BackgroundJobStateChanger.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="302-303"];
m12_260 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="289-289"];
m12_108 [cluster="Unk.OnServerException", file="BackgroundJobStateChanger.cs", label="Entry Unk.OnServerException", span=""];
m12_131 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="162-162"];
m12_132 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="165-167"];
m12_133 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="169-169"];
m12_134 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>()))\r\n                .Callback((ServerExceptionContext x) => x.ExceptionHandled = true)", span="170-171"];
m12_135 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="173-173"];
m12_136 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="BackgroundJobStateChanger.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="176-176"];
m12_137 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="162-162"];
m12_65 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value''))", span="82-82"];
m12_81 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="104-104"];
m12_82 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="107-109"];
m12_83 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="111-111"];
m12_84 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="BackgroundJobStateChanger.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="114-115"];
m12_85 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="104-104"];
m12_51 [cluster="string.Split(char[], System.StringSplitOptions)", file="BackgroundJobStateChanger.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m12_52 [cluster="Unk.Select", file="BackgroundJobStateChanger.cs", label="Entry Unk.Select", span=""];
m12_56 [cluster="Unk.AppendFormat", file="BackgroundJobStateChanger.cs", label="Entry Unk.AppendFormat", span=""];
m12_163 [cluster="Unk.OnPerforming", file="BackgroundJobStateChanger.cs", label="Entry Unk.OnPerforming", span=""];
m12_319 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="352-352"];
m12_320 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="BackgroundJobStateChanger.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="355-355"];
m12_321 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="BackgroundJobStateChanger.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="356-356"];
m12_326 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="BackgroundJobStateChanger.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null)))", span="371-371"];
m12_322 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="358-360"];
m12_323 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="BackgroundJobStateChanger.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="362-363"];
m12_324 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="365-365"];
m12_325 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="BackgroundJobStateChanger.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="368-368"];
m12_327 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="352-352"];
m12_118 [cluster="Unk.InSequence", file="BackgroundJobStateChanger.cs", label="Entry Unk.InSequence", span=""];
m12_425 [cluster="Unk.Add", file="BackgroundJobStateChanger.cs", label="Entry Unk.Add", span=""];
m12_14 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundJobStateChanger.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="119-119"];
m12_16 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="23-23"];
m12_17 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Method()", span="23-23"];
m12_18 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="23-23"];
m12_212 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="245-245"];
m12_213 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="BackgroundJobStateChanger.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="248-248"];
m12_214 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="BackgroundJobStateChanger.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="249-249"];
m12_218 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="BackgroundJobStateChanger.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled)))", span="260-260"];
m12_215 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="BackgroundJobStateChanger.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext context) => context.Canceled = true)", span="251-252"];
m12_216 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="254-254"];
m12_217 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="257-257"];
m12_219 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="245-245"];
m12_59 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="83-83"];
m12_416 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", span="463-463"];
m12_262 [cluster="Unk.Throws", file="BackgroundJobStateChanger.cs", label="Entry Unk.Throws", span=""];
m12_24 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="BackgroundJobStateChanger.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="64-64"];
m12_10 [cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobStateChanger.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m12_11 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m12_12 [cluster="PerformContext.cstr", file="BackgroundJobStateChanger.cs", label="Entry PerformContext.cstr", span=""];
m12_192 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="223-223"];
m12_193 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerFilter>()", span="226-226"];
m12_194 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext x) => x.Canceled = true)", span="228-229"];
m12_198 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="BackgroundJobStateChanger.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="241-241"];
m12_195 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="231-231"];
m12_196 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="234-234"];
m12_197 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="BackgroundJobStateChanger.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="237-239"];
m12_199 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="223-223"];
m12_69 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="(string)context.Result == ''Returned value''", span="82-82"];
m12_61 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="83-83"];
m12_64 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="84-84"];
m12_62 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="84-84"];
m12_63 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="84-84"];
m12_66 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="85-85"];
m12_68 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="85-85"];
m12_70 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Value", span="85-85"];
m12_78 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m12_79 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="93-93"];
m12_80 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="93-93"];
m12_86 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="108-108"];
m12_90 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="115-115"];
m12_89 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="115-115"];
m12_87 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="108-108"];
m12_88 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="108-108"];
m12_91 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="115-115"];
m12_99 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="125-125"];
m12_103 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="132-132"];
m12_102 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="132-132"];
m12_105 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="134-135"];
m12_100 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="125-125"];
m12_101 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="125-125"];
m12_104 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="132-132"];
m12_106 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>())", span="134-135"];
m12_107 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="134-135"];
m12_119 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="145-145"];
m12_122 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="146-146"];
m12_125 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="149-149"];
m12_129 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="156-156"];
m12_128 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="156-156"];
m12_120 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="145-145"];
m12_121 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="145-145"];
m12_123 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="146-146"];
m12_124 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="146-146"];
m12_126 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="149-149"];
m12_127 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="149-149"];
m12_130 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="156-156"];
m12_140 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="166-166"];
m12_143 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="170-170"];
m12_146 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="171-171"];
m12_150 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="176-176"];
m12_149 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="176-176"];
m12_141 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="166-166"];
m12_142 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="166-166"];
m12_144 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="170-170"];
m12_145 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="170-170"];
m12_147 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.ExceptionHandled = true", span="171-171"];
m12_148 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="171-171"];
m12_151 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="176-176"];
m12_160 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="185-185"];
m12_164 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="188-188"];
m12_167 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="191-191"];
m12_161 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerforming(It.IsNotNull<PerformingContext>())", span="185-185"];
m12_162 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="185-185"];
m12_165 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="188-188"];
m12_166 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="188-188"];
m12_168 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.IsNotNull<PerformedContext>())", span="191-191"];
m12_169 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="191-191"];
m12_180 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="209-209"];
m12_183 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="210-210"];
m12_186 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="211-211"];
m12_189 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="212-212"];
m12_181 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="209-209"];
m12_182 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="209-209"];
m12_184 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="210-210"];
m12_185 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="210-210"];
m12_187 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="211-211"];
m12_188 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="211-211"];
m12_190 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="212-212"];
m12_191 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="212-212"];
m12_200 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="228-228"];
m12_203 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="229-229"];
m12_206 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="238-238"];
m12_209 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="241-241"];
m12_201 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="228-228"];
m12_202 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="228-228"];
m12_204 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Canceled = true", span="229-229"];
m12_205 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="229-229"];
m12_207 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="238-238"];
m12_208 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="238-238"];
m12_210 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="241-241"];
m12_211 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="241-241"];
m12_220 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="251-251"];
m12_223 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="252-252"];
m12_226 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="260-260"];
m12_221 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="251-251"];
m12_222 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="251-251"];
m12_224 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="context.Canceled = true", span="252-252"];
m12_225 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="252-252"];
m12_227 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled))", span="260-260"];
m12_228 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="260-260"];
m12_229 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="260-260"];
m12_230 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="context.Canceled", span="260-260"];
m12_231 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="260-260"];
m12_241 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="269-269"];
m12_245 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="276-276"];
m12_244 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="276-276"];
m12_247 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="282-282"];
m12_250 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="285-285"];
m12_242 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="269-269"];
m12_243 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="269-269"];
m12_246 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="276-276"];
m12_248 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="282-282"];
m12_249 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="282-282"];
m12_251 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="285-285"];
m12_252 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="285-285"];
m12_270 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception))", span="306-307"];
m12_273 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="context.Exception == exception", span="307-307"];
m12_263 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="296-296"];
m12_267 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="303-303"];
m12_266 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="303-303"];
m12_269 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="306-307"];
m12_264 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="296-296"];
m12_265 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="296-296"];
m12_268 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="303-303"];
m12_271 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="306-307"];
m12_272 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="307-307"];
m12_274 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="307-307"];
m12_291 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="328-328"];
m12_294 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="context.Exception == exception", span="328-328"];
m12_284 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="319-319"];
m12_288 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="326-326"];
m12_287 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="326-326"];
m12_290 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="328-328"];
m12_285 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="319-319"];
m12_286 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="319-319"];
m12_289 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="326-326"];
m12_292 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="328-328"];
m12_293 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="328-328"];
m12_295 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="328-328"];
m12_308 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="342-342"];
m12_311 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="context.Exception == exception", span="342-342"];
m12_304 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="339-339"];
m12_307 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="342-342"];
m12_313 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="343-343"];
m12_317 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="348-348"];
m12_316 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="348-348"];
m12_305 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="339-339"];
m12_306 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="339-339"];
m12_309 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="342-342"];
m12_310 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="342-342"];
m12_312 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="342-342"];
m12_314 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.ExceptionHandled = true", span="343-343"];
m12_315 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="343-343"];
m12_318 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="348-348"];
m12_328 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="359-359"];
m12_331 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="362-362"];
m12_334 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="363-363"];
m12_338 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="368-368"];
m12_337 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="368-368"];
m12_340 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="371-371"];
m12_329 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="359-359"];
m12_330 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="359-359"];
m12_332 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="362-362"];
m12_333 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="362-362"];
m12_335 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.ExceptionHandled = true", span="363-363"];
m12_336 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="363-363"];
m12_339 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="368-368"];
m12_341 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null))", span="371-371"];
m12_342 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="371-371"];
m12_343 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="371-371"];
m12_344 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="context.Exception != null", span="371-371"];
m12_345 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="371-371"];
m12_353 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="379-379"];
m12_357 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="386-386"];
m12_356 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="385-386"];
m12_354 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="379-379"];
m12_355 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="379-379"];
m12_358 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="385-386"];
m12_367 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="396-396"];
m12_370 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="400-400"];
m12_374 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="407-407"];
m12_373 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="406-407"];
m12_368 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="396-396"];
m12_369 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="396-396"];
m12_371 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="400-400"];
m12_372 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="400-400"];
m12_375 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="406-407"];
m12_383 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="417-417"];
m12_387 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="425-425"];
m12_386 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="425-425"];
m12_389 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="429-429"];
m12_384 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="417-417"];
m12_385 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="417-417"];
m12_388 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="425-425"];
m12_390 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="429-429"];
m12_391 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="429-429"];
m12_398 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="438-438"];
m12_402 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="445-445"];
m12_401 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="445-445"];
m12_399 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="438-438"];
m12_400 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="438-438"];
m12_403 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="445-445"];
m12_410 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="453-453"];
m12_414 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="process.Run(_context, _performer.Object)", span="460-460"];
m12_413 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Entry lambda expression", span="460-460"];
m12_411 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="453-453"];
m12_412 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="453-453"];
m12_415 [cluster="lambda expression", file="BackgroundJobStateChanger.cs", label="Exit lambda expression", span="460-460"];
m12_60 [cluster="Unk.Returns", file="BackgroundJobStateChanger.cs", label="Entry Unk.Returns", span=""];
m12_359 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="392-392"];
m12_360 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerFilter>()", span="395-395"];
m12_361 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="396-397"];
m12_362 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<ArgumentNullException>()", span="399-401"];
m12_363 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="403-403"];
m12_364 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="var exception = Assert.Throws<JobPerformanceException>(() =>\r\n                process.Run(_context, _performer.Object))", span="406-407"];
m12_365 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="409-409"];
m12_366 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="392-392"];
m12_346 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="375-375"];
m12_347 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerFilter>()", span="378-378"];
m12_348 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="379-380"];
m12_349 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="382-382"];
m12_350 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="var exception = Assert.Throws<JobPerformanceException>(() => \r\n                process.Run(_context, _performer.Object))", span="385-386"];
m12_351 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="388-388"];
m12_352 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="375-375"];
m12_13 [cluster="Mock<IJobCancellationToken>.cstr", file="BackgroundJobStateChanger.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m12_138 [cluster="Unk.Callback", file="BackgroundJobStateChanger.cs", label="Entry Unk.Callback", span=""];
m12_232 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="264-264"];
m12_233 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="BackgroundJobStateChanger.cs", label="var filter = CreateFilter<IServerFilter>()", span="267-267"];
m12_234 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="BackgroundJobStateChanger.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<InvalidOperationException>()", span="269-270"];
m12_239 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="BackgroundJobStateChanger.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="285-285"];
m12_235 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="272-272"];
m12_236 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="BackgroundJobStateChanger.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context, _performer.Object))", span="275-276"];
m12_237 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="BackgroundJobStateChanger.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="279-279"];
m12_238 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="BackgroundJobStateChanger.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="281-283"];
m12_240 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="264-264"];
m12_275 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311"];
m12_276 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="BackgroundJobStateChanger.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="314-314"];
m12_277 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="BackgroundJobStateChanger.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="315-315"];
m12_282 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="BackgroundJobStateChanger.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))", span="328-328"];
m12_278 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="BackgroundJobStateChanger.cs", label="var exception = new InvalidOperationException()", span="317-317"];
m12_279 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="BackgroundJobStateChanger.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="318-320"];
m12_280 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="BackgroundJobStateChanger.cs", label="var process = CreateProcess()", span="322-322"];
m12_281 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="BackgroundJobStateChanger.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="325-326"];
m12_283 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311"];
m12_426 [file="BackgroundJobStateChanger.cs", label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", span=""];
m12_427 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_428 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_429 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_430 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_431 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_432 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_433 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_434 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_435 [file="BackgroundJobStateChanger.cs", label=exception, span=""];
m12_436 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_437 [file="BackgroundJobStateChanger.cs", label=exception, span=""];
m12_438 [file="BackgroundJobStateChanger.cs", label=exception, span=""];
m12_439 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_440 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_441 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_442 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_443 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_444 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m12_445 [file="BackgroundJobStateChanger.cs", label=process, span=""];
m13_53 [cluster="Unk.FromNullableStringTimestamp", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m13_0 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="12-12"];
m13_1 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="BackgroundProcessingServerFacts.cs", label="_storage = new RedisStorage(RedisUtils.GetHostAndPort(), RedisUtils.GetDb())", span="14-14"];
m13_2 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="BackgroundProcessingServerFacts.cs", label="_token = new CancellationToken(true)", span="15-15"];
m13_3 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="BackgroundProcessingServerFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="12-12"];
m13_44 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="55-55"];
m13_45 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="var redis = RedisUtils.CreateClient()", span="57-57"];
m13_46 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="60-60"];
m13_47 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="61-61"];
m13_50 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Assert.NotNull(JobHelper.FromNullableStringTimestamp(\r\n                    redis.GetValueFromHash(''hangfire:job:my-job'', ''Checked'')))", span="68-69"];
m13_48 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="var watcher = CreateWatcher()", span="63-63"];
m13_49 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="watcher.Execute(_token)", span="66-66"];
m13_51 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="55-55"];
m13_41 [cluster="Unk.GetAllEntriesFromHash", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m13_36 [cluster="Unk.SetEntryInHash", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m13_32 [cluster="Unk.AddItemToSet", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m13_27 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="Assert.Equal(''my-job'', listEntry)", span="47-47"];
m13_18 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="28-28"];
m13_19 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="var redis = RedisUtils.CreateClient()", span="30-30"];
m13_20 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="33-33"];
m13_21 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="34-34"];
m13_22 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="35-36"];
m13_25 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="44-44"];
m13_26 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="var listEntry = redis.DequeueItemFromList(''hangfire:queue:my-queue'')", span="46-46"];
m13_28 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="var job = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="49-49"];
m13_23 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="var watcher = CreateWatcher()", span="38-38"];
m13_24 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="watcher.Execute(_token)", span="41-41"];
m13_29 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="Assert.False(job.ContainsKey(''Fetched''))", span="50-50"];
m13_30 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="BackgroundProcessingServerFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="28-28"];
m13_12 [cluster="Unk.>", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.>", span=""];
m13_43 [cluster="Unk.False", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.False", span=""];
m13_6 [cluster="HangFire.Redis.Tests.RedisUtils.GetDb()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.GetDb()", span="37-37"];
m13_39 [cluster="Unk.GetListCount", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.GetListCount", span=""];
m13_34 [cluster="System.DateTime.AddDays(double)", file="BackgroundProcessingServerFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m13_38 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", span="47-47"];
m13_17 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", span="31-31"];
m13_54 [cluster="Unk.NotNull", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.NotNull", span=""];
m13_59 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="81-82"];
m13_55 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="74-74"];
m13_56 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="var redis = RedisUtils.CreateClient()", span="76-76"];
m13_57 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="79-79"];
m13_58 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="80-80"];
m13_62 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="90-90"];
m13_63 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:queue:my-queue''))", span="91-91"];
m13_64 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="var job = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="93-93"];
m13_60 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="var watcher = CreateWatcher()", span="84-84"];
m13_61 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="watcher.Execute(_token)", span="87-87"];
m13_65 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Assert.False(job.ContainsKey(''Checked''))", span="94-94"];
m13_66 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="74-74"];
m13_40 [cluster="Unk.DequeueItemFromList", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.DequeueItemFromList", span=""];
m13_33 [cluster="Unk.AddItemToList", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.AddItemToList", span=""];
m13_37 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="121-121"];
m13_77 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="BackgroundProcessingServerFacts.cs", label="return new FetchedJobsWatcher(_storage);", span="123-123"];
m13_78 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="BackgroundProcessingServerFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="121-121"];
m13_14 [cluster="lambda expression", file="BackgroundProcessingServerFacts.cs", label="Entry lambda expression", span="22-22"];
m13_15 [cluster="lambda expression", file="BackgroundProcessingServerFacts.cs", label="new FetchedJobsWatcher(null)", span="22-22"];
m13_16 [cluster="lambda expression", file="BackgroundProcessingServerFacts.cs", label="Exit lambda expression", span="22-22"];
m13_5 [cluster="HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", span="20-20"];
m13_35 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m13_31 [cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15"];
m13_7 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="BackgroundProcessingServerFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m13_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="43-43"];
m13_52 [cluster="Unk.GetValueFromHash", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m13_72 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="108-109"];
m13_67 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="99-99"];
m13_68 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="var redis = RedisUtils.CreateClient()", span="101-101"];
m13_69 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="104-104"];
m13_70 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="105-105"];
m13_71 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="106-107"];
m13_75 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="117-117"];
m13_73 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="var watcher = CreateWatcher()", span="111-111"];
m13_74 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="watcher.Execute(_token)", span="114-114"];
m13_76 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="BackgroundProcessingServerFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="99-99"];
m13_8 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundProcessingServerFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="19-19"];
m13_9 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundProcessingServerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(null))", span="21-22"];
m13_10 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundProcessingServerFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="24-24"];
m13_11 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundProcessingServerFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="19-19"];
m13_42 [cluster="Unk.ContainsKey", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.ContainsKey", span=""];
m13_79 [file="BackgroundProcessingServerFacts.cs", label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", span=""];
m14_6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="BatchCommandDispatcher.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m14_2 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="BatchCommandDispatcher.cs", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23"];
m14_3 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", color=green, community=0, file="BatchCommandDispatcher.cs", label="1: LambdaExpressionFingerprint other = obj as LambdaExpressionFingerprint", span="25-25"];
m14_4 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", color=green, community=0, file="BatchCommandDispatcher.cs", label="0: return (other != null)\r\n                   && this.Equals(other);", span="26-27"];
m14_5 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="BatchCommandDispatcher.cs", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23"];
m14_0 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="BatchCommandDispatcher.cs", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m14_1 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="BatchCommandDispatcher.cs", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m14_7 [file="BatchCommandDispatcher.cs", label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", span=""];
m15_22 [cluster="MessageQueue.cstr", file="CleanMsmqQueueAttribute.cs", label="Entry MessageQueue.cstr", span=""];
m15_12 [cluster="Unk.Exists", file="CleanMsmqQueueAttribute.cs", label="Entry Unk.Exists", span=""];
m15_19 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", file="CleanMsmqQueueAttribute.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", span="45-45"];
m15_20 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", file="CleanMsmqQueueAttribute.cs", label="return new MessageQueue(GetPath(queue));", span="47-47"];
m15_21 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", file="CleanMsmqQueueAttribute.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", span="45-45"];
m15_0 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.CleanMsmqQueueAttribute(params string[])", file="CleanMsmqQueueAttribute.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.CleanMsmqQueueAttribute(params string[])", span="17-17"];
m15_1 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.CleanMsmqQueueAttribute(params string[])", file="CleanMsmqQueueAttribute.cs", label="_queues = queues", span="19-19"];
m15_2 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.CleanMsmqQueueAttribute(params string[])", file="CleanMsmqQueueAttribute.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.CleanMsmqQueueAttribute(params string[])", span="17-17"];
m15_3 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.Before(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.Before(System.Reflection.MethodInfo)", span="22-22"];
m15_4 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.Before(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="Monitor.Enter(GlobalLock)", span="24-24"];
m15_5 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.Before(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="_queues.Select(GetPath)", span="26-26"];
m15_6 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.Before(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="MessageQueue.Exists(queuePath)", span="28-28"];
m15_7 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.Before(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="MessageQueue.Delete(queuePath)", span="30-30"];
m15_8 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.Before(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="MessageQueue.Create(queuePath, transactional: true)", span="33-33"];
m15_9 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.Before(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.Before(System.Reflection.MethodInfo)", span="22-22"];
m15_10 [cluster="System.Threading.Monitor.Enter(object)", file="CleanMsmqQueueAttribute.cs", label="Entry System.Threading.Monitor.Enter(object)", span="0-0"];
m15_13 [cluster="Unk.Delete", file="CleanMsmqQueueAttribute.cs", label="Entry Unk.Delete", span=""];
m15_23 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetPath(string)", file="CleanMsmqQueueAttribute.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetPath(string)", span="50-50"];
m15_24 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetPath(string)", file="CleanMsmqQueueAttribute.cs", label="return String.Format(PathPattern, queue);", span="52-52"];
m15_25 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetPath(string)", file="CleanMsmqQueueAttribute.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.GetPath(string)", span="50-50"];
m15_14 [cluster="Unk.Create", file="CleanMsmqQueueAttribute.cs", label="Entry Unk.Create", span=""];
m15_15 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.After(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.After(System.Reflection.MethodInfo)", span="40-40"];
m15_16 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.After(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="Monitor.Exit(GlobalLock)", span="42-42"];
m15_17 [cluster="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.After(System.Reflection.MethodInfo)", file="CleanMsmqQueueAttribute.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute.After(System.Reflection.MethodInfo)", span="40-40"];
m15_26 [cluster="string.Format(string, object)", file="CleanMsmqQueueAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_18 [cluster="System.Threading.Monitor.Exit(object)", file="CleanMsmqQueueAttribute.cs", label="Entry System.Threading.Monitor.Exit(object)", span="0-0"];
m15_11 [cluster="Unk.Select", file="CleanMsmqQueueAttribute.cs", label="Entry Unk.Select", span=""];
m15_27 [file="CleanMsmqQueueAttribute.cs", label="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute", span=""];
m17_131 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239"];
m17_132 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ClientExceptionContext.cs", label="key == null", span="241-241"];
m17_134 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ClientExceptionContext.cs", label="toScore < fromScore", span="242-242"];
m17_136 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault());", span="244-247"];
m17_133 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="241-241"];
m17_135 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ClientExceptionContext.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="242-242"];
m17_137 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239"];
m17_261 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415"];
m17_262 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="ClientExceptionContext.cs", label="key == null", span="417-417"];
m17_265 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<DateTime?>(query, new { key = key }).Single();\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="423-429"];
m17_263 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="417-417"];
m17_264 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect min([ExpireAt]) from HangFire.Hash\r\nwhere [Key] = @key''", span="419-421"];
m17_266 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415"];
m17_83 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="ClientExceptionContext.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m17_172 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286"];
m17_173 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ClientExceptionContext.cs", label="serverId == null", span="288-288"];
m17_175 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ClientExceptionContext.cs", label="context == null", span="289-289"];
m17_177 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ClientExceptionContext.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="291-296"];
m17_178 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ClientExceptionContext.cs", label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    @'';merge HangFire.Server with (holdlock) as Target ''\r\n                    + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                    + @''on Target.Id = Source.Id ''\r\n                    + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                    +\r\n                    @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow });\r\n            })", span="298-308"];
m17_174 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''serverId'');", span="288-288"];
m17_176 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''context'');", span="289-289"];
m17_179 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286"];
m17_15 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="52-52"];
m17_16 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ClientExceptionContext.cs", label="queues == null || queues.Length == 0", span="54-54"];
m17_18 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ClientExceptionContext.cs", label="var providers = queues\r\n                .Select(queue => _storage.QueueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="56-59"];
m17_20 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ClientExceptionContext.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Multiple provider instances registered for queues: {0}. You should choose only one type of persistent queues per server instance.'',\r\n                    String.Join('', '', queues)));", span="63-65"];
m17_22 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ClientExceptionContext.cs", label="return persistentQueue.Dequeue(queues, cancellationToken);", span="69-69"];
m17_17 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''queues'');", span="54-54"];
m17_19 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ClientExceptionContext.cs", label="providers.Length != 1", span="61-61"];
m17_21 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ClientExceptionContext.cs", label="var persistentQueue = providers[0].GetJobQueue()", span="68-68"];
m17_23 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="52-52"];
m17_160 [cluster="Unk.UseConnection", file="ClientExceptionContext.cs", label="Entry Unk.UseConnection", span=""];
m17_34 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m17_165 [cluster="Unk.ToDictionary", file="ClientExceptionContext.cs", label="Entry Unk.ToDictionary", span=""];
m17_192 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323"];
m17_193 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ClientExceptionContext.cs", label="serverId == null", span="325-325"];
m17_195 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ClientExceptionContext.cs", label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId });\r\n            })", span="327-332"];
m17_194 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''serverId'');", span="325-325"];
m17_196 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323"];
m17_220 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356"];
m17_221 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="ClientExceptionContext.cs", label="key == null", span="358-358"];
m17_224 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList());", span="367-369"];
m17_222 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="358-358"];
m17_223 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num \r\n	from HangFire.[Set]\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="360-365"];
m17_225 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356"];
m17_293 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456"];
m17_294 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="ClientExceptionContext.cs", label="key == null", span="458-458"];
m17_297 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<DateTime?>(query, new { key = key }).Single();\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="464-470"];
m17_295 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="458-458"];
m17_296 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect min([ExpireAt]) from HangFire.List\r\nwhere [Key] = @key''", span="460-462"];
m17_298 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456"];
m17_314 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489"];
m17_315 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="ClientExceptionContext.cs", label="key == null", span="491-491"];
m17_318 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection.Query<string>(query, new { key = key }).ToList());", span="498-498"];
m17_316 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="491-491"];
m17_317 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect [Value] from HangFire.List\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="493-496"];
m17_319 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489"];
m17_99 [cluster="Hangfire.Storage.StateData.StateData()", file="ClientExceptionContext.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="21-21"];
m17_252 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404"];
m17_253 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="ClientExceptionContext.cs", label="key == null", span="406-406"];
m17_256 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection.Query<long>(query, new { key = key }).Single());", span="412-412"];
m17_254 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="406-406"];
m17_255 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect count([Id]) from HangFire.Hash\r\nwhere [Key] = @key''", span="408-410"];
m17_257 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404"];
m17_180 [cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m17_14 [cluster="string.Format(string, object)", file="ClientExceptionContext.cs", label="Entry string.Format(string, object)", span="0-0"];
m17_63 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125"];
m17_64 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="ClientExceptionContext.cs", label="id == null", span="127-127"];
m17_67 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var jobData = connection.Query<SqlJob>(sql, new { id = id })\r\n                    .SingleOrDefault();\r\n\r\n                if (jobData == null) return null;\r\n\r\n                // TODO: conversion exception could be thrown.\r\n                var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData);\r\n                invocationData.Arguments = jobData.Arguments;\r\n\r\n                Job job = null;\r\n                JobLoadException loadException = null;\r\n\r\n                try\r\n                {\r\n                    job = invocationData.Deserialize();\r\n                }\r\n                catch (JobLoadException ex)\r\n                {\r\n                    loadException = ex;\r\n                }\r\n\r\n                return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };\r\n            });", span="132-162"];
m17_65 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''id'');", span="127-127"];
m17_66 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="ClientExceptionContext.cs", label="string sql = \r\n                @''select InvocationData, StateName, Arguments, CreatedAt from HangFire.Job where Id = @id''", span="129-130"];
m17_68 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125"];
m17_155 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271"];
m17_156 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ClientExceptionContext.cs", label="key == null", span="273-273"];
m17_158 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<SqlHash>(\r\n                    ''select Field, Value from HangFire.Hash with (forceseek) where [Key] = @key'',\r\n                    new { key })\r\n                    .ToDictionary(x => x.Field, x => x.Value);\r\n\r\n                return result.Count != 0 ? result : null;\r\n            });", span="275-283"];
m17_157 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="273-273"];
m17_159 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271"];
m17_10 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="44-44"];
m17_11 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="ClientExceptionContext.cs", label="return new SqlServerDistributedLock(\r\n                _storage,\r\n                String.Format(''HangFire:{0}'', resource),\r\n                timeout);", span="46-49"];
m17_12 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="44-44"];
m17_59 [cluster="Unk.>", file="ClientExceptionContext.cs", label="Entry Unk.>", span=""];
m17_210 [cluster="System.TimeSpan.Negate()", file="ClientExceptionContext.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m17_100 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196"];
m17_101 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ClientExceptionContext.cs", label="id == null", span="198-198"];
m17_103 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ClientExceptionContext.cs", label="name == null", span="199-199"];
m17_105 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ClientExceptionContext.cs", label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    @'';merge HangFire.JobParameter with (holdlock) as Target ''\r\n                    + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                    + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                    + @''when matched then update set Value = Source.Value ''\r\n                    +\r\n                    @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = id, name, value });\r\n            })", span="201-211"];
m17_102 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''id'');", span="198-198"];
m17_104 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''name'');", span="199-199"];
m17_106 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196"];
m17_138 [cluster="System.ArgumentException.ArgumentException(string)", file="ClientExceptionContext.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m17_28 [cluster="string.Join(string, params string[])", file="ClientExceptionContext.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m17_242 [cluster="System.TimeSpan.FromSeconds(double)", file="ClientExceptionContext.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m17_44 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="ClientExceptionContext.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m17_107 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m17_6 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39"];
m17_150 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="197-197"];
m17_230 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372"];
m17_231 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="ClientExceptionContext.cs", label="key == null", span="374-374"];
m17_234 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<DateTime?>(query, new { key = key }).Single();\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="380-386"];
m17_232 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="374-374"];
m17_233 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect min([ExpireAt]) from HangFire.[Set]\r\nwhere [Key] = @key''", span="376-378"];
m17_235 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372"];
m17_243 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389"];
m17_244 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="ClientExceptionContext.cs", label="key == null", span="391-391"];
m17_247 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => \r\n                connection.Query<long?>(query, new { key = key }).Single() ?? 0);", span="400-401"];
m17_245 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="391-391"];
m17_246 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect sum(s.[Value]) from (select sum([Value]) as [Value] from HangFire.Counter\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from HangFire.AggregatedCounter\r\nwhere [Key] = @key) as s''", span="393-398"];
m17_248 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389"];
m17_26 [cluster="Unk.ToArray", file="ClientExceptionContext.cs", label="Entry Unk.ToArray", span=""];
m17_27 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ClientExceptionContext.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m17_61 [cluster="Unk.ToString", file="ClientExceptionContext.cs", label="Entry Unk.ToString", span=""];
m17_98 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="ClientExceptionContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m17_111 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214"];
m17_112 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ClientExceptionContext.cs", label="id == null", span="216-216"];
m17_114 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ClientExceptionContext.cs", label="name == null", span="217-217"];
m17_116 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault());", span="219-222"];
m17_113 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''id'');", span="216-216"];
m17_115 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''name'');", span="217-217"];
m17_117 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214"];
m17_58 [cluster="System.DateTime.Add(System.TimeSpan)", file="ClientExceptionContext.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m17_13 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="50-50"];
m17_184 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311"];
m17_185 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ClientExceptionContext.cs", label="serverId == null", span="313-313"];
m17_187 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ClientExceptionContext.cs", label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    @''delete from HangFire.Server where Id = @id'',\r\n                    new { id = serverId });\r\n            })", span="315-320"];
m17_186 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''serverId'');", span="313-313"];
m17_188 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311"];
m17_85 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165"];
m17_86 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="ClientExceptionContext.cs", label="jobId == null", span="167-167"];
m17_89 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var sqlState = connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault();\r\n                if (sqlState == null)\r\n                {\r\n                    return null;\r\n                }\r\n\r\n                var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase);\r\n\r\n                return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };\r\n            });", span="175-193"];
m17_87 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''jobId'');", span="167-167"];
m17_88 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="ClientExceptionContext.cs", label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="169-173"];
m17_90 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165"];
m17_305 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473"];
m17_306 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="ClientExceptionContext.cs", label="key == null", span="475-475"];
m17_309 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList());", span="484-486"];
m17_307 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="475-475"];
m17_308 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from HangFire.List\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="477-482"];
m17_310 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473"];
m17_9 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37"];
m17_205 [cluster="System.TimeSpan.Duration()", file="ClientExceptionContext.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m17_35 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="72-72"];
m17_36 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientExceptionContext.cs", label="job == null", span="78-78"];
m17_38 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientExceptionContext.cs", label="parameters == null", span="79-79"];
m17_41 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientExceptionContext.cs", label="var invocationData = InvocationData.Serialize(job)", span="86-86"];
m17_42 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var jobId = connection.Query<int>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    }).Single().ToString();\r\n\r\n                if (parameters.Count > 0)\r\n                {\r\n                    var parameterArray = new object[parameters.Count];\r\n                    int parameterIndex = 0;\r\n                    foreach (var parameter in parameters)\r\n                    {\r\n                        parameterArray[parameterIndex++] = new\r\n                        {\r\n                            jobId = jobId,\r\n                            name = parameter.Key,\r\n                            value = parameter.Value\r\n                        };\r\n                    }\r\n\r\n                    const string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)'';\r\n\r\n                    connection.Execute(insertParameterSql, parameterArray);\r\n                }\r\n\r\n                return jobId;\r\n            });", span="88-122"];
m17_37 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''job'');", span="78-78"];
m17_39 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''parameters'');", span="79-79"];
m17_40 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientExceptionContext.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="81-84"];
m17_43 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="72-72"];
m17_57 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ClientExceptionContext.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m17_30 [cluster="Unk.Dequeue", file="ClientExceptionContext.cs", label="Entry Unk.Dequeue", span=""];
m17_25 [cluster="Unk.Distinct", file="ClientExceptionContext.cs", label="Entry Unk.Distinct", span=""];
m17_320 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="498-498"];
m17_31 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="57-57"];
m17_32 [cluster="lambda expression", file="ClientExceptionContext.cs", label="_storage.QueueProviders.GetProvider(queue)", span="57-57"];
m17_33 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="57-57"];
m17_47 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var jobId = connection.Query<int>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    }).Single().ToString()", span="90-98"];
m17_48 [cluster="lambda expression", file="ClientExceptionContext.cs", label="parameters.Count > 0", span="100-100"];
m17_49 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var parameterArray = new object[parameters.Count]", span="102-102"];
m17_51 [cluster="lambda expression", file="ClientExceptionContext.cs", label=parameters, span="104-104"];
m17_46 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="88-122"];
m17_54 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Execute(insertParameterSql, parameterArray)", span="118-118"];
m17_52 [cluster="lambda expression", file="ClientExceptionContext.cs", label="parameterArray[parameterIndex++] = new\r\n                        {\r\n                            jobId = jobId,\r\n                            name = parameter.Key,\r\n                            value = parameter.Value\r\n                        }", span="106-111"];
m17_55 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return jobId;", span="121-121"];
m17_50 [cluster="lambda expression", file="ClientExceptionContext.cs", label="int parameterIndex = 0", span="103-103"];
m17_53 [cluster="lambda expression", file="ClientExceptionContext.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="114-116"];
m17_56 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="88-122"];
m17_70 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var jobData = connection.Query<SqlJob>(sql, new { id = id })\r\n                    .SingleOrDefault()", span="134-135"];
m17_69 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="132-162"];
m17_71 [cluster="lambda expression", file="ClientExceptionContext.cs", label="jobData == null", span="137-137"];
m17_73 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="140-140"];
m17_74 [cluster="lambda expression", file="ClientExceptionContext.cs", label="invocationData.Arguments = jobData.Arguments", span="141-141"];
m17_80 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };", span="155-161"];
m17_72 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return null;", span="137-137"];
m17_77 [cluster="lambda expression", file="ClientExceptionContext.cs", label="job = invocationData.Deserialize()", span="148-148"];
m17_75 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Job job = null", span="143-143"];
m17_76 [cluster="lambda expression", file="ClientExceptionContext.cs", label="JobLoadException loadException = null", span="144-144"];
m17_78 [cluster="lambda expression", file="ClientExceptionContext.cs", label=JobLoadException, span="150-150"];
m17_79 [cluster="lambda expression", file="ClientExceptionContext.cs", label="loadException = ex", span="152-152"];
m17_81 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="132-162"];
m17_92 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var sqlState = connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="177-177"];
m17_91 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="175-193"];
m17_93 [cluster="lambda expression", file="ClientExceptionContext.cs", label="sqlState == null", span="178-178"];
m17_95 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase)", span="183-185"];
m17_96 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };", span="187-192"];
m17_94 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return null;", span="180-180"];
m17_97 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="175-193"];
m17_109 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Execute(\r\n                    @'';merge HangFire.JobParameter with (holdlock) as Target ''\r\n                    + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                    + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                    + @''when matched then update set Value = Source.Value ''\r\n                    +\r\n                    @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = id, name, value })", span="203-210"];
m17_108 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="201-211"];
m17_110 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="201-211"];
m17_119 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault()", span="219-222"];
m17_118 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="219-222"];
m17_120 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="219-222"];
m17_127 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var result = connection.Query<string>(\r\n                    @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                    new { key })", span="231-233"];
m17_126 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="229-236"];
m17_128 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return new HashSet<string>(result);", span="235-235"];
m17_129 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="229-236"];
m17_140 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault()", span="244-247"];
m17_139 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="244-247"];
m17_141 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="244-247"];
m17_152 [cluster="lambda expression", file="ClientExceptionContext.cs", label=keyValuePairs, span="264-264"];
m17_153 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value })", span="266-266"];
m17_151 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="262-268"];
m17_154 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="262-268"];
m17_162 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var result = connection.Query<SqlHash>(\r\n                    ''select Field, Value from HangFire.Hash with (forceseek) where [Key] = @key'',\r\n                    new { key })\r\n                    .ToDictionary(x => x.Field, x => x.Value)", span="277-280"];
m17_161 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="275-283"];
m17_163 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return result.Count != 0 ? result : null;", span="282-282"];
m17_166 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="280-280"];
m17_169 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="280-280"];
m17_164 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="275-283"];
m17_167 [cluster="lambda expression", file="ClientExceptionContext.cs", label="x.Field", span="280-280"];
m17_168 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="280-280"];
m17_170 [cluster="lambda expression", file="ClientExceptionContext.cs", label="x.Value", span="280-280"];
m17_171 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="280-280"];
m17_182 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Execute(\r\n                    @'';merge HangFire.Server with (holdlock) as Target ''\r\n                    + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                    + @''on Target.Id = Source.Id ''\r\n                    + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                    +\r\n                    @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="300-307"];
m17_181 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="298-308"];
m17_183 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="298-308"];
m17_190 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Execute(\r\n                    @''delete from HangFire.Server where Id = @id'',\r\n                    new { id = serverId })", span="317-319"];
m17_189 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="315-320"];
m17_191 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="315-320"];
m17_198 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Execute(\r\n                    @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId })", span="329-331"];
m17_197 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="327-332"];
m17_199 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="327-332"];
m17_207 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="342-344"];
m17_208 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) })", span="342-344"];
m17_209 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="342-344"];
m17_217 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Query<int>(\r\n                ''select count([Key]) from HangFire.[Set] where [Key] = @key'',\r\n                new { key = key }).First()", span="351-353"];
m17_216 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="351-353"];
m17_218 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="351-353"];
m17_227 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList()", span="367-369"];
m17_226 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="367-369"];
m17_228 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="367-369"];
m17_237 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var result = connection.Query<DateTime?>(query, new { key = key }).Single()", span="382-382"];
m17_236 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="380-386"];
m17_238 [cluster="lambda expression", file="ClientExceptionContext.cs", label="!result.HasValue", span="383-383"];
m17_240 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return result.Value - DateTime.UtcNow;", span="385-385"];
m17_239 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return TimeSpan.FromSeconds(-1);", span="383-383"];
m17_241 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="380-386"];
m17_250 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Query<long?>(query, new { key = key }).Single() ?? 0", span="401-401"];
m17_249 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="400-401"];
m17_251 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="400-401"];
m17_259 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Query<long>(query, new { key = key }).Single()", span="412-412"];
m17_258 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="412-412"];
m17_260 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="412-412"];
m17_268 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var result = connection.Query<DateTime?>(query, new { key = key }).Single()", span="425-425"];
m17_267 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="423-429"];
m17_269 [cluster="lambda expression", file="ClientExceptionContext.cs", label="!result.HasValue", span="426-426"];
m17_271 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return result.Value - DateTime.UtcNow;", span="428-428"];
m17_270 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return TimeSpan.FromSeconds(-1);", span="426-426"];
m17_272 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="423-429"];
m17_282 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection\r\n                .Query<string>(query, new { key = key, field = name }).SingleOrDefault()", span="441-442"];
m17_281 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="441-442"];
m17_283 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="441-442"];
m17_291 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Query<long>(query, new { key = key }).Single()", span="453-453"];
m17_290 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="453-453"];
m17_292 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="453-453"];
m17_300 [cluster="lambda expression", file="ClientExceptionContext.cs", label="var result = connection.Query<DateTime?>(query, new { key = key }).Single()", span="466-466"];
m17_299 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="464-470"];
m17_301 [cluster="lambda expression", file="ClientExceptionContext.cs", label="!result.HasValue", span="467-467"];
m17_303 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return result.Value - DateTime.UtcNow;", span="469-469"];
m17_302 [cluster="lambda expression", file="ClientExceptionContext.cs", label="return TimeSpan.FromSeconds(-1);", span="467-467"];
m17_304 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="464-470"];
m17_312 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList()", span="484-486"];
m17_311 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Entry lambda expression", span="484-486"];
m17_313 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="484-486"];
m17_321 [cluster="lambda expression", file="ClientExceptionContext.cs", label="connection.Query<string>(query, new { key = key }).ToList()", span="498-498"];
m17_322 [cluster="lambda expression", file="ClientExceptionContext.cs", label="Exit lambda expression", span="498-498"];
m17_142 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250"];
m17_143 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientExceptionContext.cs", label="key == null", span="252-252"];
m17_145 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientExceptionContext.cs", label="keyValuePairs == null", span="253-253"];
m17_148 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientExceptionContext.cs", label="_storage.UseTransaction(connection =>\r\n            {\r\n                foreach (var keyValuePair in keyValuePairs)\r\n                {\r\n                    connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value });\r\n                }\r\n            })", span="262-268"];
m17_144 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="252-252"];
m17_146 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="253-253"];
m17_147 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientExceptionContext.cs", label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="255-260"];
m17_149 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250"];
m17_84 [cluster="Hangfire.Storage.JobData.JobData()", file="ClientExceptionContext.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m17_7 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="ClientExceptionContext.cs", label="Hangfire.Client.ClientExceptionContext", span=""];
m17_8 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39"];
m17_219 [cluster="Unk.First", file="ClientExceptionContext.cs", label="Entry Unk.First", span=""];
m17_24 [cluster="Unk.Select", file="ClientExceptionContext.cs", label="Entry Unk.Select", span=""];
m17_273 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432"];
m17_274 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ClientExceptionContext.cs", label="key == null", span="434-434"];
m17_276 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ClientExceptionContext.cs", label="name == null", span="435-435"];
m17_279 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, field = name }).SingleOrDefault());", span="441-442"];
m17_275 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="434-434"];
m17_277 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''name'');", span="435-435"];
m17_278 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect [Value] from HangFire.Hash\r\nwhere [Key] = @key and [Field] = @field''", span="437-439"];
m17_280 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432"];
m17_211 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347"];
m17_212 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="ClientExceptionContext.cs", label="key == null", span="349-349"];
m17_214 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection.Query<int>(\r\n                ''select count([Key]) from HangFire.[Set] where [Key] = @key'',\r\n                new { key = key }).First());", span="351-353"];
m17_213 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="349-349"];
m17_215 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347"];
m17_0 [cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", file="ClientExceptionContext.cs", label="Entry Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", span="26-26"];
m17_1 [cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", color=green, community=0, file="ClientExceptionContext.cs", label="0: exception == null", span="29-29"];
m17_3 [cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", file="ClientExceptionContext.cs", label="Exception = exception", span="31-31"];
m17_2 [cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", color=green, community=0, file="ClientExceptionContext.cs", label="0: throw new ArgumentNullException(nameof(exception));", span="29-29"];
m17_4 [cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", file="ClientExceptionContext.cs", label="Exit Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", span="26-26"];
m17_60 [cluster="Unk.Single", file="ClientExceptionContext.cs", label="Entry Unk.Single", span=""];
m17_206 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ClientExceptionContext.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m17_229 [cluster="Unk.ToList", file="ClientExceptionContext.cs", label="Entry Unk.ToList", span=""];
m17_62 [cluster="Unk.Execute", file="ClientExceptionContext.cs", label="Entry Unk.Execute", span=""];
m17_45 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="182-182"];
m17_29 [cluster="Unk.GetJobQueue", file="ClientExceptionContext.cs", label="Entry Unk.GetJobQueue", span=""];
m17_130 [cluster="HashSet<string>.cstr", file="ClientExceptionContext.cs", label="Entry HashSet<string>.cstr", span=""];
m17_121 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225"];
m17_122 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ClientExceptionContext.cs", label="key == null", span="227-227"];
m17_124 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<string>(\r\n                    @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                    new { key });\r\n\r\n                return new HashSet<string>(result);\r\n            });", span="229-236"];
m17_123 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="227-227"];
m17_125 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225"];
m17_284 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445"];
m17_285 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="ClientExceptionContext.cs", label="key == null", span="447-447"];
m17_288 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection.Query<long>(query, new { key = key }).Single());", span="453-453"];
m17_286 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="ClientExceptionContext.cs", label="throw new ArgumentNullException(''key'');", span="447-447"];
m17_287 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="ClientExceptionContext.cs", label="string query = @''\r\nselect count([Id]) from HangFire.List\r\nwhere [Key] = @key''", span="449-451"];
m17_289 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445"];
m17_82 [cluster="Unk.SingleOrDefault", file="ClientExceptionContext.cs", label="Entry Unk.SingleOrDefault", span=""];
m17_200 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ClientExceptionContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335"];
m17_201 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ClientExceptionContext.cs", label="timeOut.Duration() != timeOut", span="337-337"];
m17_202 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ClientExceptionContext.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="339-339"];
m17_203 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ClientExceptionContext.cs", label="return _storage.UseConnection(connection => connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) }));", span="342-344"];
m17_204 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ClientExceptionContext.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335"];
m17_323 [file="ClientExceptionContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m17_324 [file="ClientExceptionContext.cs", label="System.DateTime", span=""];
m17_325 [file="ClientExceptionContext.cs", label="System.TimeSpan", span=""];
m17_326 [file="ClientExceptionContext.cs", label=createJobSql, span=""];
m17_327 [file="ClientExceptionContext.cs", label=invocationData, span=""];
m17_328 [file="ClientExceptionContext.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m17_329 [file="ClientExceptionContext.cs", label=string, span=""];
m17_330 [file="ClientExceptionContext.cs", label=sql, span=""];
m17_331 [file="ClientExceptionContext.cs", label=string, span=""];
m17_332 [file="ClientExceptionContext.cs", label=sql, span=""];
m17_333 [file="ClientExceptionContext.cs", label=string, span=""];
m17_334 [file="ClientExceptionContext.cs", label=string, span=""];
m17_335 [file="ClientExceptionContext.cs", label=string, span=""];
m17_336 [file="ClientExceptionContext.cs", label=string, span=""];
m17_337 [file="ClientExceptionContext.cs", label=string, span=""];
m17_338 [file="ClientExceptionContext.cs", label=string, span=""];
m17_339 [file="ClientExceptionContext.cs", label=string, span=""];
m17_340 [file="ClientExceptionContext.cs", label=double, span=""];
m17_341 [file="ClientExceptionContext.cs", label=double, span=""];
m17_342 [file="ClientExceptionContext.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span=""];
m17_343 [file="ClientExceptionContext.cs", label=string, span=""];
m17_344 [file="ClientExceptionContext.cs", label=sql, span=""];
m17_345 [file="ClientExceptionContext.cs", label=string, span=""];
m17_346 [file="ClientExceptionContext.cs", label=string, span=""];
m17_347 [file="ClientExceptionContext.cs", label=data, span=""];
m17_348 [file="ClientExceptionContext.cs", label=string, span=""];
m17_349 [file="ClientExceptionContext.cs", label=string, span=""];
m17_350 [file="ClientExceptionContext.cs", label="System.TimeSpan", span=""];
m17_351 [file="ClientExceptionContext.cs", label=string, span=""];
m17_352 [file="ClientExceptionContext.cs", label=string, span=""];
m17_353 [file="ClientExceptionContext.cs", label=int, span=""];
m17_354 [file="ClientExceptionContext.cs", label=int, span=""];
m17_355 [file="ClientExceptionContext.cs", label=query, span=""];
m17_356 [file="ClientExceptionContext.cs", label=string, span=""];
m17_357 [file="ClientExceptionContext.cs", label=query, span=""];
m17_358 [file="ClientExceptionContext.cs", label=string, span=""];
m17_359 [file="ClientExceptionContext.cs", label=query, span=""];
m17_360 [file="ClientExceptionContext.cs", label=string, span=""];
m17_361 [file="ClientExceptionContext.cs", label=query, span=""];
m17_362 [file="ClientExceptionContext.cs", label=string, span=""];
m17_363 [file="ClientExceptionContext.cs", label=query, span=""];
m17_364 [file="ClientExceptionContext.cs", label=string, span=""];
m17_365 [file="ClientExceptionContext.cs", label=string, span=""];
m17_366 [file="ClientExceptionContext.cs", label=query, span=""];
m17_367 [file="ClientExceptionContext.cs", label=string, span=""];
m17_368 [file="ClientExceptionContext.cs", label=query, span=""];
m17_369 [file="ClientExceptionContext.cs", label=string, span=""];
m17_370 [file="ClientExceptionContext.cs", label=query, span=""];
m17_371 [file="ClientExceptionContext.cs", label=string, span=""];
m17_372 [file="ClientExceptionContext.cs", label=int, span=""];
m17_373 [file="ClientExceptionContext.cs", label=int, span=""];
m17_374 [file="ClientExceptionContext.cs", label=query, span=""];
m17_375 [file="ClientExceptionContext.cs", label=string, span=""];
m17_376 [file="ClientExceptionContext.cs", label=query, span=""];
m18_0 [cluster="HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="ContinuationsSupportAttribute.cs", label="Entry HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="8-8"];
m18_7 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=green, community=0, file="ContinuationsSupportAttribute.cs", label="3: sbIndex--", span="33-33"];
m18_4 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="ContinuationsSupportAttribute.cs", label="var sbIndex = sb.Length - 1", span="29-29"];
m18_6 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="ContinuationsSupportAttribute.cs", label="sb.Remove(sbIndex, 1)", span="32-32"];
m18_8 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="ContinuationsSupportAttribute.cs", label="pathInfoIndex--", span="34-34"];
m18_1 [cluster="HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="ContinuationsSupportAttribute.cs", label="Exit HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="8-8"];
m18_3 [cluster="HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="ContinuationsSupportAttribute.cs", label="Exit HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="9-9"];
m18_5 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="ContinuationsSupportAttribute.cs", label="pathInfoIndex >= 0 && sb[sbIndex].Equals(pathInfo[pathInfoIndex])", span="30-30"];
m18_2 [cluster="HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="ContinuationsSupportAttribute.cs", label="Entry HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="9-9"];
m18_9 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="ContinuationsSupportAttribute.cs", label="var basePath = sb.ToString()", span="36-36"];
m18_12 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="ContinuationsSupportAttribute.cs", label="return basePath + link.TrimStart('/');", span="39-39"];
m18_10 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="ContinuationsSupportAttribute.cs", label="!basePath.EndsWith(''/'', StringComparison.OrdinalIgnoreCase)", span="37-37"];
m18_11 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="ContinuationsSupportAttribute.cs", label="basePath += ''/''", span="37-37"];
m18_13 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="ContinuationsSupportAttribute.cs", label="Exit HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", span="24-24"];
m18_19 [cluster="string.TrimStart(params char[])", file="ContinuationsSupportAttribute.cs", label="Entry string.TrimStart(params char[])", span="0-0"];
m18_17 [cluster="System.Text.StringBuilder.ToString()", file="ContinuationsSupportAttribute.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m18_16 [cluster="System.Text.StringBuilder.Remove(int, int)", file="ContinuationsSupportAttribute.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m18_18 [cluster="string.EndsWith(string, System.StringComparison)", file="ContinuationsSupportAttribute.cs", label="Entry string.EndsWith(string, System.StringComparison)", span="0-0"];
m18_14 [cluster="StringBuilder.cstr", file="ContinuationsSupportAttribute.cs", label="Entry StringBuilder.cstr", span=""];
m18_15 [cluster="Unk.Equals", file="ContinuationsSupportAttribute.cs", label="Entry Unk.Equals", span=""];
m20_11 [cluster="Unk.EnqueueItemOnList", file="CoreBackgroundJobPerformer.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m20_22 [cluster="string.Format(string, object, object)", file="CoreBackgroundJobPerformer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m20_23 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="57-57"];
m20_24 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="CoreBackgroundJobPerformer.cs", label="Given(String.Format(''the '{0}' job'', jobId))", span="59-59"];
m20_25 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                jobId)", span="61-63"];
m20_26 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="57-57"];
m20_7 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", span="23-23"];
m20_8 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="CoreBackgroundJobPerformer.cs", label="Given(String.Format(''a job of the '{0}' type'', typeof(BrokenJob).AssemblyQualifiedName))", span="25-25"];
m20_9 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="CoreBackgroundJobPerformer.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', DefaultQueue),\r\n                JobSteps.DefaultJobId)", span="27-29"];
m20_10 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", span="23-23"];
m20_2 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="17-17"];
m20_3 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="CoreBackgroundJobPerformer.cs", label="Given(String.Format(''a job in the '{0}' queue'', DefaultQueue))", span="19-19"];
m20_4 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="17-17"];
m20_5 [cluster="string.Format(string, object)", file="CoreBackgroundJobPerformer.cs", label="Entry string.Format(string, object)", span="0-0"];
m20_50 [cluster="Unk.AreEqual", file="CoreBackgroundJobPerformer.cs", label="Entry Unk.AreEqual", span=""];
m20_49 [cluster="Unk.GetListCount", file="CoreBackgroundJobPerformer.cs", label="Entry Unk.GetListCount", span=""];
m20_40 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="89-89"];
m20_41 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="91-92"];
m20_42 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="94-94"];
m20_43 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="89-89"];
m20_15 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="41-41"];
m20_16 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="CoreBackgroundJobPerformer.cs", label="Given(''a job'')", span="43-43"];
m20_17 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                JobSteps.DefaultJobId)", span="45-47"];
m20_18 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="41-41"];
m20_37 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="83-83"];
m20_38 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: Then(String.Format(''the '{0}' queue should not contain the job'', DefaultQueue))", span="85-85"];
m20_39 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="83-83"];
m20_12 [cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", span="33-33"];
m20_13 [cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="CoreBackgroundJobPerformer.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', DefaultQueue),\r\n                jobId)", span="35-37"];
m20_14 [cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", span="33-33"];
m20_31 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="73-73"];
m20_32 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="75-76"];
m20_33 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="78-78"];
m20_34 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="73-73"];
m20_35 [cluster="Unk.GetAllItemsFromList", file="CoreBackgroundJobPerformer.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m20_36 [cluster="Unk.Contains", file="CoreBackgroundJobPerformer.cs", label="Entry Unk.Contains", span=""];
m20_30 [cluster="Unk.Then", file="CoreBackgroundJobPerformer.cs", label="Entry Unk.Then", span=""];
m20_6 [cluster="Unk.Given", file="CoreBackgroundJobPerformer.cs", label="Entry Unk.Given", span=""];
m20_44 [cluster="Unk.DoesNotContain", file="CoreBackgroundJobPerformer.cs", label="Entry Unk.DoesNotContain", span=""];
m20_19 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="51-51"];
m20_20 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: Given(String.Format(''the '{0}' job in the '{1}' queue'', jobId, DefaultQueue))", span="53-53"];
m20_21 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="51-51"];
m20_51 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="106-106"];
m20_52 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="108-109"];
m20_53 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", color=red, community=0, file="CoreBackgroundJobPerformer.cs", label="0: Assert.AreEqual(length, actualLength)", span="110-110"];
m20_54 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="106-106"];
m20_27 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="67-67"];
m20_28 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="CoreBackgroundJobPerformer.cs", label="Then(String.Format(''the '{0}' queue should contain the job'', DefaultQueue))", span="69-69"];
m20_29 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="67-67"];
m20_45 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="98-98"];
m20_46 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="CoreBackgroundJobPerformer.cs", label="var length = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="100-101"];
m20_47 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="CoreBackgroundJobPerformer.cs", label="Assert.AreEqual(0, length)", span="102-102"];
m20_48 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="98-98"];
m20_0 [cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="12-12"];
m20_1 [cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="12-12"];
m22_0 [cluster="NCrontab.CrontabException.CrontabException()", file="CrontabException.cs", label="Entry NCrontab.CrontabException.CrontabException()", span="27-27"];
m22_1 [cluster="NCrontab.CrontabException.CrontabException()", file="CrontabException.cs", label="Exit NCrontab.CrontabException.CrontabException()", span="27-27"];
m22_4 [cluster="NCrontab.CrontabException.CrontabException(string, System.Exception)", file="CrontabException.cs", label="Entry NCrontab.CrontabException.CrontabException(string, System.Exception)", span="35-35"];
m22_5 [cluster="NCrontab.CrontabException.CrontabException(string, System.Exception)", file="CrontabException.cs", label="Exit NCrontab.CrontabException.CrontabException(string, System.Exception)", span="35-35"];
m22_2 [cluster="NCrontab.CrontabException.CrontabException(string)", file="CrontabException.cs", label="Entry NCrontab.CrontabException.CrontabException(string)", span="31-31"];
m22_3 [cluster="NCrontab.CrontabException.CrontabException(string)", file="CrontabException.cs", label="Exit NCrontab.CrontabException.CrontabException(string)", span="31-31"];
m24_342 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239"];
m24_601 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="853-853"];
m24_602 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="855-858"];
m24_603 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="853-853"];
m24_600 [cluster="System.Collections.Generic.List<T>.List()", file="DashboardMetric.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m24_134 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="DashboardMetric.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m24_380 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286"];
m24_36 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="52-52"];
m24_789 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1168-1168"];
m24_791 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1174-1189"];
m24_790 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1170-1172"];
m24_792 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1168-1168"];
m24_457 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="644-644"];
m24_458 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="DashboardMetric.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="646-647"];
m24_459 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="644-644"];
m24_439 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323"];
m24_343 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="492-492"];
m24_344 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="DashboardMetric.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="494-495"];
m24_345 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="492-492"];
m24_718 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1054-1054"];
m24_719 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1056-1060"];
m24_720 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1054-1054"];
m24_646 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="932-932"];
m24_648 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="938-951"];
m24_647 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="934-936"];
m24_649 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="932-932"];
m24_843 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1262-1262"];
m24_845 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1268-1283"];
m24_844 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1264-1266"];
m24_846 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1262-1262"];
m24_554 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271"];
m24_250 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="340-340"];
m24_251 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="342-348"];
m24_252 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="340-340"];
m24_322 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="456-456"];
m24_324 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="467-476"];
m24_323 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="458-465"];
m24_325 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="456-456"];
m24_887 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="DashboardMetric.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m24_283 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="399-399"];
m24_285 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="406-418"];
m24_284 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="401-404"];
m24_286 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="399-399"];
m24_132 [cluster="Unk.ToString", file="DashboardMetric.cs", label="Entry Unk.ToString", span=""];
m24_836 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1252-1252"];
m24_837 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1254-1258"];
m24_838 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1252-1252"];
m24_895 [cluster="SqlServerConnection.cstr", file="DashboardMetric.cs", label="Entry SqlServerConnection.cstr", span=""];
m24_188 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="213-213"];
m24_189 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="215-217"];
m24_190 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="213-213"];
m24_862 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1296-1296"];
m24_863 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1298-1302"];
m24_864 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1296-1296"];
m24_808 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473"];
m24_429 [cluster="Unk.NotEqual", file="DashboardMetric.cs", label="Entry Unk.NotEqual", span=""];
m24_698 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1019-1019"];
m24_700 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1025-1040"];
m24_699 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1021-1023"];
m24_701 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1019-1019"];
m24_260 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="352-352"];
m24_262 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="359-371"];
m24_261 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="354-357"];
m24_263 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="352-352"];
m24_332 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="480-480"];
m24_333 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="482-488"];
m24_334 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="480-480"];
m24_771 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432"];
m24_2 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="DashboardMetric.cs", label="var provider = new Mock<IPersistentJobQueueProvider>()", span="24-24"];
m24_3 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="DashboardMetric.cs", label="provider.Setup(x => x.GetJobQueue())\r\n                .Returns(_queue.Object)", span="25-26"];
m24_4 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="DashboardMetric.cs", label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="28-28"];
m24_5 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="20-20"];
m24_6 [cluster="Mock<IPersistentJobQueue>.cstr", file="DashboardMetric.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m24_409 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="587-587"];
m24_410 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="DashboardMetric.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="589-590"];
m24_411 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="587-587"];
m24_751 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1109-1109"];
m24_753 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1115-1130"];
m24_752 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1111-1113"];
m24_754 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1109-1109"];
m24_368 [cluster="Unk.Execute", file="DashboardMetric.cs", label="Entry Unk.Execute", span=""];
m24_0 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="20-20"];
m24_1 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", color=green, community=0, file="DashboardMetric.cs", label="1: _queue = new Mock<IPersistentJobQueue>()", span="22-22"];
m24_218 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="268-268"];
m24_220 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="284-299"];
m24_219 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="270-282"];
m24_221 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="268-268"];
m24_637 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="907-907"];
m24_639 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="913-928"];
m24_638 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="909-911"];
m24_640 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="907-907"];
m24_238 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="DashboardMetric.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m24_826 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1242-1242"];
m24_827 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1244-1248"];
m24_828 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1242-1242"];
m24_467 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335"];
m24_381 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="544-544"];
m24_382 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="546-552"];
m24_383 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="544-544"];
m24_743 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456"];
m24_664 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404"];
m24_305 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="434-434"];
m24_306 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="436-442"];
m24_307 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="434-434"];
m24_182 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="DashboardMetric.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m24_229 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="303-303"];
m24_231 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="310-324"];
m24_230 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="305-308"];
m24_232 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="303-303"];
m24_869 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1306-1306"];
m24_871 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1312-1327"];
m24_870 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1308-1310"];
m24_872 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1306-1306"];
m24_629 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389"];
m24_135 [cluster="System.DateTime.AddDays(double)", file="DashboardMetric.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m24_418 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311"];
m24_7 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="DashboardMetric.cs", label="Hangfire.Dashboard.DashboardMetric", span=""];
m24_133 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="DashboardMetric.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m24_545 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="766-766"];
m24_546 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="768-769"];
m24_547 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="766-766"];
m24_490 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="682-682"];
m24_491 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="684-690"];
m24_492 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="682-682"];
m24_198 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="221-221"];
m24_199 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="223-227"];
m24_200 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="221-221"];
m24_555 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="773-773"];
m24_556 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="775-779"];
m24_557 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="773-773"];
m24_419 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="594-594"];
m24_421 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="602-610"];
m24_420 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="596-600"];
m24_422 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="594-594"];
m24_15 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="32-32"];
m24_16 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="DashboardMetric.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null))", span="34-35"];
m24_17 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="DashboardMetric.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="37-37"];
m24_18 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="32-32"];
m24_562 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="783-783"];
m24_564 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="789-807"];
m24_563 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="785-787"];
m24_565 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="783-783"];
m24_761 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1134-1134"];
m24_762 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1136-1142"];
m24_763 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1134-1134"];
m24_772 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1146-1146"];
m24_773 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1148-1154"];
m24_774 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1146-1146"];
m24_691 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1009-1009"];
m24_692 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1011-1015"];
m24_693 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1009-1009"];
m24_391 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="556-556"];
m24_392 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="558-583"];
m24_393 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="556-556"];
m24_542 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="758-758"];
m24_21 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="35-35"];
m24_22 [cluster="lambda expression", color=green, community=0, file="DashboardMetric.cs", label="0: new SqlServerConnection(null)", span="35-35"];
m24_23 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="35-35"];
m24_33 [cluster="lambda expression", file="DashboardMetric.cs", label="_queue.Verify(x => x.Dequeue(queues, token))", span="50-50"];
m24_49 [cluster="lambda expression", file="DashboardMetric.cs", label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="61-61"];
m24_50 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="63-64"];
m24_78 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="93-98"];
m24_90 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="109-114"];
m24_152 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="165-166"];
m24_192 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="216-217"];
m24_243 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="332-333"];
m24_254 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="344-345"];
m24_298 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="426-427"];
m24_309 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="438-439"];
m24_327 [cluster="lambda expression", file="DashboardMetric.cs", label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="469-471"];
m24_336 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="484-485"];
m24_347 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="494-495"];
m24_373 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="536-537"];
m24_385 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="548-549"];
m24_413 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="589-590"];
m24_434 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="616-617"];
m24_461 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="646-647"];
m24_484 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="678-678"];
m24_513 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="725-726"];
m24_524 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="737-738"];
m24_549 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="769-769"];
m24_578 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="815-816"];
m24_605 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="857-857"];
m24_624 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="891-892"];
m24_659 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="959-959"];
m24_685 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1003-1004"];
m24_712 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1048-1049"];
m24_738 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1093-1094"];
m24_765 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1138-1139"];
m24_776 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1150-1151"];
m24_802 [cluster="lambda expression", file="DashboardMetric.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1197-1198"];
m24_830 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1246-1247"];
m24_856 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1291-1291"];
m24_11 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="25-25"];
m24_29 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="43-51"];
m24_30 [cluster="lambda expression", file="DashboardMetric.cs", label="var token = new CancellationToken()", span="45-45"];
m24_32 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.FetchNextJob(queues, token)", span="48-48"];
m24_31 [cluster="lambda expression", file="DashboardMetric.cs", label="var queues = new[] { ''default'' }", span="46-46"];
m24_34 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="43-51"];
m24_38 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="50-50"];
m24_46 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="57-65"];
m24_48 [cluster="lambda expression", file="DashboardMetric.cs", label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="60-60"];
m24_59 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="71-75"];
m24_68 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="81-85"];
m24_77 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="91-101"];
m24_89 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="107-117"];
m24_105 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="123-159"];
m24_151 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="165-166"];
m24_161 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="172-176"];
m24_170 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="187-209"];
m24_191 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="216-217"];
m24_201 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="223-227"];
m24_209 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="247-264"];
m24_222 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="284-299"];
m24_233 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="310-324"];
m24_242 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="330-336"];
m24_253 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="342-348"];
m24_264 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="359-371"];
m24_275 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="382-395"];
m24_287 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="406-418"];
m24_297 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="424-430"];
m24_308 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="436-442"];
m24_318 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="448-452"];
m24_326 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="467-476"];
m24_335 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="482-488"];
m24_346 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="494-495"];
m24_355 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="501-507"];
m24_363 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="521-528"];
m24_372 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="534-540"];
m24_384 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="546-552"];
m24_394 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="558-583"];
m24_412 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="589-590"];
m24_423 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="602-610"];
m24_433 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="616-617"];
m24_444 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="629-640"];
m24_460 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="646-647"];
m24_472 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="657-671"];
m24_483 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="677-678"];
m24_493 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="684-690"];
m24_502 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="700-717"];
m24_512 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="723-729"];
m24_523 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="735-741"];
m24_533 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="747-762"];
m24_548 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="768-769"];
m24_558 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="775-779"];
m24_566 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="789-807"];
m24_577 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="813-817"];
m24_587 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="823-827"];
m24_595 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="837-849"];
m24_604 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="855-858"];
m24_615 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="868-883"];
m24_623 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="889-893"];
m24_633 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="899-903"];
m24_641 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="913-928"];
m24_650 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="938-951"];
m24_658 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="957-960"];
m24_668 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="966-970"];
m24_676 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="980-995"];
m24_684 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1001-1005"];
m24_694 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1011-1015"];
m24_702 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1025-1040"];
m24_711 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1046-1050"];
m24_721 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1056-1060"];
m24_729 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1070-1085"];
m24_737 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1091-1095"];
m24_747 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1101-1105"];
m24_755 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1115-1130"];
m24_764 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1136-1142"];
m24_775 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1148-1154"];
m24_785 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1160-1164"];
m24_793 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1174-1189"];
m24_801 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1195-1201"];
m24_812 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1207-1211"];
m24_821 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1221-1238"];
m24_829 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1244-1248"];
m24_839 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1254-1258"];
m24_847 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1268-1283"];
m24_855 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1289-1292"];
m24_865 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1298-1302"];
m24_873 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1312-1327"];
m24_897 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1347-1347"];
m24_79 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''job'', exception.ParamName)", span="100-100"];
m24_91 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="116-116"];
m24_112 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="137-137"];
m24_111 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="136-136"];
m24_113 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(null, (int?) sqlJob.StateId)", span="138-138"];
m24_114 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(null, (string) sqlJob.StateName)", span="139-139"];
m24_118 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="145-145"];
m24_119 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="146-146"];
m24_120 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="147-147"];
m24_124 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Value1'', parameters[''Key1''])", span="157-157"];
m24_125 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Value2'', parameters[''Key2''])", span="158-158"];
m24_176 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Succeeded'', result.State)", span="204-204"];
m24_177 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="205-205"];
m24_214 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Name'', result.Name)", span="261-261"];
m24_215 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Reason'', result.Reason)", span="262-262"];
m24_216 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="263-263"];
m24_227 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="298-298"];
m24_244 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''id'', exception.ParamName)", span="335-335"];
m24_255 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''name'', exception.ParamName)", span="347-347"];
m24_269 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Value'', parameter.Value)", span="370-370"];
m24_281 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''AnotherValue'', parameter.Value)", span="394-394"];
m24_292 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal((string) null, parameter.Value)", span="417-417"];
m24_299 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''id'', exception.ParamName)", span="429-429"];
m24_310 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''name'', exception.ParamName)", span="441-441"];
m24_329 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''value'', value)", span="475-475"];
m24_337 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''key'', exception.ParamName)", span="487-487"];
m24_366 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''-1.0'', result)", span="527-527"];
m24_374 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="539-539"];
m24_386 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''context'', exception.ParamName)", span="551-551"];
m24_398 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''server'', server.Id)", span="568-568"];
m24_404 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''server'', sameServer.Id)", span="581-581"];
m24_449 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(2012, servers[''server2''].Year)", span="639-639"];
m24_476 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''server2'', liveServer.Id)", span="670-670"];
m24_496 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(0, result.Count)", span="689-689"];
m24_505 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(2, result.Count)", span="714-714"];
m24_514 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''key'', exception.ParamName)", span="728-728"];
m24_525 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="740-740"];
m24_536 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="760-760"];
m24_537 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="761-761"];
m24_570 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(2, result.Count)", span="804-804"];
m24_571 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="805-805"];
m24_572 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="806-806"];
m24_589 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(0, result)", span="826-826"];
m24_598 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(2, result)", span="848-848"];
m24_618 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="882-882"];
m24_635 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(0, result)", span="902-902"];
m24_644 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(2, result)", span="927-927"];
m24_653 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(12, result)", span="950-950"];
m24_670 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(0, result)", span="969-969"];
m24_679 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(2, result)", span="994-994"];
m24_723 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(0, result)", span="1059-1059"];
m24_732 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(2, result)", span="1084-1084"];
m24_766 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1141-1141"];
m24_777 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''name'', exception.ParamName)", span="1153-1153"];
m24_796 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''1'', result)", span="1188-1188"];
m24_803 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1200-1200"];
m24_824 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1237-1237"];
m24_850 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1282-1282"];
m24_47 [cluster="lambda expression", file="DashboardMetric.cs", label="var token = new CancellationToken()", span="59-59"];
m24_51 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="57-65"];
m24_53 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="64-64"];
m24_81 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="94-98"];
m24_93 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="110-114"];
m24_153 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="165-166"];
m24_154 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="166-166"];
m24_193 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="216-217"];
m24_194 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="217-217"];
m24_246 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="333-333"];
m24_257 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="345-345"];
m24_301 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="427-427"];
m24_312 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="439-439"];
m24_328 [cluster="lambda expression", file="DashboardMetric.cs", label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="473-473"];
m24_339 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="485-485"];
m24_348 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="494-495"];
m24_349 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="495-495"];
m24_376 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="537-537"];
m24_388 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="549-549"];
m24_414 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="589-590"];
m24_415 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="590-590"];
m24_435 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="616-617"];
m24_436 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="617-617"];
m24_462 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="646-647"];
m24_463 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="647-647"];
m24_485 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="677-678"];
m24_486 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="678-678"];
m24_516 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="726-726"];
m24_527 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="738-738"];
m24_550 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="768-769"];
m24_551 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="769-769"];
m24_579 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="813-817"];
m24_580 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="816-816"];
m24_606 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="855-858"];
m24_607 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="857-857"];
m24_625 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="889-893"];
m24_626 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="892-892"];
m24_660 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="957-960"];
m24_661 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="959-959"];
m24_686 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1001-1005"];
m24_687 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1004-1004"];
m24_713 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1046-1050"];
m24_714 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1049-1049"];
m24_739 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1091-1095"];
m24_740 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1094-1094"];
m24_768 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1139-1139"];
m24_779 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1151-1151"];
m24_805 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1198-1198"];
m24_831 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1244-1248"];
m24_832 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1247-1247"];
m24_857 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1289-1292"];
m24_858 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="1291-1291"];
m24_13 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="25-25"];
m24_12 [cluster="lambda expression", file="DashboardMetric.cs", label="x.GetJobQueue()", span="25-25"];
m24_39 [cluster="lambda expression", file="DashboardMetric.cs", label="x.Dequeue(queues, token)", span="50-50"];
m24_40 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="50-50"];
m24_54 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="64-64"];
m24_62 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="71-75"];
m24_60 [cluster="lambda expression", file="DashboardMetric.cs", label="var transaction = connection.CreateWriteTransaction()", span="73-73"];
m24_71 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="81-85"];
m24_69 [cluster="lambda expression", file="DashboardMetric.cs", label="var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="83-83"];
m24_80 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="91-101"];
m24_82 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="94-98"];
m24_98 [cluster="lambda expression", file="DashboardMetric.cs", label="SampleMethod(''hello'')", span="111-111"];
m24_140 [cluster="lambda expression", file="DashboardMetric.cs", label="SampleMethod(''Hello'')", span="127-127"];
m24_186 [cluster="lambda expression", file="DashboardMetric.cs", label="SampleMethod(''wrong'')", span="189-189"];
m24_92 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="107-117"];
m24_94 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="110-114"];
m24_126 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="123-159"];
m24_106 [cluster="lambda expression", file="DashboardMetric.cs", label="var createdAt = new DateTime(2012, 12, 12)", span="125-125"];
m24_107 [cluster="lambda expression", file="DashboardMetric.cs", label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="126-130"];
m24_110 [cluster="lambda expression", file="DashboardMetric.cs", label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="135-135"];
m24_123 [cluster="lambda expression", file="DashboardMetric.cs", label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="152-155"];
m24_155 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetJobData(null)", span="166-166"];
m24_164 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="172-176"];
m24_162 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetJobData(''1'')", span="174-174"];
m24_172 [cluster="lambda expression", file="DashboardMetric.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="191-198"];
m24_181 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="187-209"];
m24_171 [cluster="lambda expression", file="DashboardMetric.cs", label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="189-189"];
m24_173 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="200-200"];
m24_195 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetStateData(null)", span="217-217"];
m24_204 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="223-227"];
m24_202 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetStateData(''1'')", span="225-225"];
m24_211 [cluster="lambda expression", file="DashboardMetric.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="254-256"];
m24_217 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="247-264"];
m24_210 [cluster="lambda expression", file="DashboardMetric.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="249-252"];
m24_212 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetStateData(jobId.ToString())", span="258-258"];
m24_224 [cluster="lambda expression", file="DashboardMetric.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="291-293"];
m24_228 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="284-299"];
m24_223 [cluster="lambda expression", file="DashboardMetric.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="286-289"];
m24_225 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetStateData(jobId.ToString())", span="295-295"];
m24_234 [cluster="lambda expression", file="DashboardMetric.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="312-319"];
m24_237 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="310-324"];
m24_235 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="321-321"];
m24_245 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="330-336"];
m24_247 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.SetJobParameter(null, ''name'', ''value'')", span="333-333"];
m24_256 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="342-348"];
m24_258 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.SetJobParameter(''1'', null, ''value'')", span="345-345"];
m24_265 [cluster="lambda expression", file="DashboardMetric.cs", label="var job = sql.Query(arrangeSql).Single()", span="361-361"];
m24_270 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="359-371"];
m24_267 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="364-364"];
m24_268 [cluster="lambda expression", file="DashboardMetric.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="366-368"];
m24_276 [cluster="lambda expression", file="DashboardMetric.cs", label="var job = sql.Query(arrangeSql).Single()", span="384-384"];
m24_282 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="382-395"];
m24_278 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="387-387"];
m24_279 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="388-388"];
m24_280 [cluster="lambda expression", file="DashboardMetric.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="390-392"];
m24_288 [cluster="lambda expression", file="DashboardMetric.cs", label="var job = sql.Query(arrangeSql).Single()", span="408-408"];
m24_293 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="406-418"];
m24_290 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.SetJobParameter(jobId, ''Name'', null)", span="411-411"];
m24_291 [cluster="lambda expression", file="DashboardMetric.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="413-415"];
m24_300 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="424-430"];
m24_302 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetJobParameter(null, ''hello'')", span="427-427"];
m24_311 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="436-442"];
m24_313 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetJobParameter(''1'', null)", span="439-439"];
m24_321 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="448-452"];
m24_319 [cluster="lambda expression", file="DashboardMetric.cs", label="var value = connection.GetJobParameter(''1'', ''hello'')", span="450-450"];
m24_330 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="467-476"];
m24_338 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="482-488"];
m24_340 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="485-485"];
m24_350 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="495-495"];
m24_358 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="501-507"];
m24_356 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="503-504"];
m24_364 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql)", span="523-523"];
m24_367 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="521-528"];
m24_365 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="525-525"];
m24_375 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="534-540"];
m24_377 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.AnnounceServer(null, new ServerContext())", span="537-537"];
m24_387 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="546-552"];
m24_389 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.AnnounceServer(''server'', null)", span="549-549"];
m24_406 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="558-583"];
m24_395 [cluster="lambda expression", file="DashboardMetric.cs", label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="560-564"];
m24_396 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.AnnounceServer(''server'', context1)", span="565-565"];
m24_397 [cluster="lambda expression", file="DashboardMetric.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="567-567"];
m24_402 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.AnnounceServer(''server'', context2)", span="579-579"];
m24_403 [cluster="lambda expression", file="DashboardMetric.cs", label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="580-580"];
m24_416 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.RemoveServer(null)", span="590-590"];
m24_424 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql)", span="604-604"];
m24_428 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="602-610"];
m24_425 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.RemoveServer(''Server1'')", span="606-606"];
m24_426 [cluster="lambda expression", file="DashboardMetric.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="608-608"];
m24_437 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.Heartbeat(null)", span="617-617"];
m24_445 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql)", span="631-631"];
m24_450 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="629-640"];
m24_446 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.Heartbeat(''server1'')", span="633-633"];
m24_447 [cluster="lambda expression", file="DashboardMetric.cs", label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="635-636"];
m24_464 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="647-647"];
m24_473 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="659-665"];
m24_477 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="657-671"];
m24_474 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="667-667"];
m24_475 [cluster="lambda expression", file="DashboardMetric.cs", label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="669-669"];
m24_487 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetAllItemsFromSet(null)", span="678-678"];
m24_497 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="684-690"];
m24_494 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="686-686"];
m24_503 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="703-708"];
m24_508 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="700-717"];
m24_504 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="711-711"];
m24_515 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="723-729"];
m24_517 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="726-726"];
m24_526 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="735-741"];
m24_528 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.SetRangeInHash(''some-hash'', null)", span="738-738"];
m24_538 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="747-762"];
m24_534 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="749-753"];
m24_535 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="755-758"];
m24_552 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetAllEntriesFromHash(null)", span="769-769"];
m24_561 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="775-779"];
m24_559 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="777-777"];
m24_567 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="792-797"];
m24_573 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="789-807"];
m24_568 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="800-800"];
m24_581 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetSetCount(null)", span="816-816"];
m24_590 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="823-827"];
m24_588 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetSetCount(''my-set'')", span="825-825"];
m24_596 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                })", span="839-844"];
m24_599 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="837-849"];
m24_597 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetSetCount(''set-1'')", span="846-846"];
m24_608 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetRangeFromSet(null, 0, 1)", span="857-857"];
m24_616 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="870-878"];
m24_619 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="868-883"];
m24_617 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="880-880"];
m24_627 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetCounter(null)", span="892-892"];
m24_636 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="899-903"];
m24_634 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetCounter(''my-counter'')", span="901-901"];
m24_642 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="916-921"];
m24_645 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="913-928"];
m24_643 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetCounter(''counter-1'')", span="924-924"];
m24_651 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="941-945"];
m24_654 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="938-951"];
m24_652 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetCounter(''counter-1'')", span="948-948"];
m24_662 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetHashCount(null)", span="959-959"];
m24_671 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="966-970"];
m24_669 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetHashCount(''my-hash'')", span="968-968"];
m24_677 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="983-988"];
m24_680 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="980-995"];
m24_678 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetHashCount(''hash-1'')", span="991-991"];
m24_688 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetHashTtl(null)", span="1004-1004"];
m24_697 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1011-1015"];
m24_695 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetHashTtl(''my-hash'')", span="1013-1013"];
m24_703 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1028-1032"];
m24_707 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1025-1040"];
m24_704 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetHashTtl(''hash-1'')", span="1035-1035"];
m24_715 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetListCount(null)", span="1049-1049"];
m24_724 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1056-1060"];
m24_722 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetListCount(''my-list'')", span="1058-1058"];
m24_730 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1073-1078"];
m24_733 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1070-1085"];
m24_731 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetListCount(''list-1'')", span="1081-1081"];
m24_741 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetListTtl(null)", span="1094-1094"];
m24_750 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1101-1105"];
m24_748 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetListTtl(''my-list'')", span="1103-1103"];
m24_756 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1118-1122"];
m24_760 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1115-1130"];
m24_757 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetListTtl(''list-1'')", span="1125-1125"];
m24_767 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1136-1142"];
m24_769 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetValueFromHash(null, ''name'')", span="1139-1139"];
m24_778 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1148-1154"];
m24_780 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetValueFromHash(''key'', null)", span="1151-1151"];
m24_788 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1160-1164"];
m24_786 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1162-1162"];
m24_794 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1177-1182"];
m24_797 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1174-1189"];
m24_795 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1185-1185"];
m24_804 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1195-1201"];
m24_806 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetRangeFromList(null, 0, 1)", span="1198-1198"];
m24_815 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1207-1211"];
m24_813 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1209-1209"];
m24_822 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1224-1231"];
m24_825 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1221-1238"];
m24_823 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1234-1234"];
m24_833 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetAllItemsFromList(null)", span="1247-1247"];
m24_842 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1254-1258"];
m24_840 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetAllItemsFromList(''my-list'')", span="1256-1256"];
m24_848 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1271-1276"];
m24_851 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1268-1283"];
m24_849 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetAllItemsFromList(''list-1'')", span="1279-1279"];
m24_859 [cluster="lambda expression", file="DashboardMetric.cs", label="connection.GetSetTtl(null)", span="1291-1291"];
m24_868 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1298-1302"];
m24_866 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetSetTtl(''my-set'')", span="1300-1300"];
m24_874 [cluster="lambda expression", file="DashboardMetric.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1315-1319"];
m24_878 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1312-1327"];
m24_875 [cluster="lambda expression", file="DashboardMetric.cs", label="var result = connection.GetSetTtl(''set-1'')", span="1322-1322"];
m24_899 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1347-1347"];
m24_898 [cluster="lambda expression", file="DashboardMetric.cs", label="x.QueueProviders", span="1347-1347"];
m24_115 [cluster="lambda expression", file="DashboardMetric.cs", label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="141-141"];
m24_117 [cluster="lambda expression", file="DashboardMetric.cs", label="var job = invocationData.Deserialize()", span="144-144"];
m24_121 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="149-149"];
m24_175 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(result.Job)", span="203-203"];
m24_178 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Null(result.LoadException)", span="206-206"];
m24_213 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(result)", span="259-259"];
m24_226 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(result)", span="296-296"];
m24_399 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="569-571"];
m24_405 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Contains(''1000'', sameServer.Data)", span="582-582"];
m24_448 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotEqual(2012, servers[''server1''].Year)", span="638-638"];
m24_495 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(result)", span="688-688"];
m24_506 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Contains(''1'', result)", span="715-715"];
m24_569 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(result)", span="803-803"];
m24_55 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="64-64"];
m24_83 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="94-98"];
m24_95 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="110-114"];
m24_156 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="166-166"];
m24_196 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="217-217"];
m24_248 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="333-333"];
m24_259 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="345-345"];
m24_303 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="427-427"];
m24_314 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="439-439"];
m24_341 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="485-485"];
m24_351 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="495-495"];
m24_378 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="537-537"];
m24_390 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="549-549"];
m24_417 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="590-590"];
m24_438 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="617-617"];
m24_465 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="647-647"];
m24_488 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="678-678"];
m24_518 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="726-726"];
m24_529 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="738-738"];
m24_553 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="769-769"];
m24_582 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="816-816"];
m24_609 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="857-857"];
m24_628 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="892-892"];
m24_663 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="959-959"];
m24_689 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1004-1004"];
m24_716 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1049-1049"];
m24_742 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1094-1094"];
m24_770 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1139-1139"];
m24_781 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1151-1151"];
m24_807 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1198-1198"];
m24_834 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1247-1247"];
m24_860 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="1291-1291"];
m24_61 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(transaction)", span="74-74"];
m24_70 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(@lock)", span="84-84"];
m24_97 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="111-111"];
m24_99 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="111-111"];
m24_139 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="127-127"];
m24_141 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="127-127"];
m24_185 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="189-189"];
m24_187 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="189-189"];
m24_122 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="150-150"];
m24_108 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(jobId)", span="132-132"];
m24_109 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotEmpty(jobId)", span="133-133"];
m24_116 [cluster="lambda expression", file="DashboardMetric.cs", label="invocationData.Arguments = sqlJob.Arguments", span="142-142"];
m24_142 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="155-155"];
m24_145 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="155-155"];
m24_163 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Null(result)", span="175-175"];
m24_180 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="208-208"];
m24_174 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(result)", span="202-202"];
m24_179 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="207-207"];
m24_203 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Null(result)", span="226-226"];
m24_236 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(result.LoadException)", span="323-323"];
m24_266 [cluster="lambda expression", file="DashboardMetric.cs", label="string jobId = job.Id.ToString()", span="362-362"];
m24_277 [cluster="lambda expression", file="DashboardMetric.cs", label="string jobId = job.Id.ToString()", span="385-385"];
m24_289 [cluster="lambda expression", file="DashboardMetric.cs", label="string jobId = job.Id.ToString()", span="409-409"];
m24_320 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Null(value)", span="451-451"];
m24_357 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Null(result)", span="506-506"];
m24_400 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotNull(server.LastHeartbeat)", span="572-572"];
m24_401 [cluster="lambda expression", file="DashboardMetric.cs", label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="574-578"];
m24_427 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="609-609"];
m24_451 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="636-636"];
m24_454 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="636-636"];
m24_507 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Contains(''2'', result)", span="716-716"];
m24_539 [cluster="lambda expression", file="DashboardMetric.cs", label="Entry lambda expression", span="758-758"];
m24_560 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Null(result)", span="778-778"];
m24_696 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(result < TimeSpan.Zero)", span="1014-1014"];
m24_706 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1039-1039"];
m24_705 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1038-1038"];
m24_749 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(result < TimeSpan.Zero)", span="1104-1104"];
m24_759 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1129-1129"];
m24_758 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1128-1128"];
m24_787 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Null(result)", span="1163-1163"];
m24_814 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Empty(result)", span="1210-1210"];
m24_841 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.Empty(result)", span="1257-1257"];
m24_867 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(result < TimeSpan.Zero)", span="1301-1301"];
m24_877 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1326-1326"];
m24_876 [cluster="lambda expression", file="DashboardMetric.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1325-1325"];
m24_144 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="155-155"];
m24_143 [cluster="lambda expression", file="DashboardMetric.cs", label="(string) x.Name", span="155-155"];
m24_147 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="155-155"];
m24_146 [cluster="lambda expression", file="DashboardMetric.cs", label="(string) x.Value", span="155-155"];
m24_453 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="636-636"];
m24_452 [cluster="lambda expression", file="DashboardMetric.cs", label="(string)x.Id", span="636-636"];
m24_456 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="636-636"];
m24_455 [cluster="lambda expression", file="DashboardMetric.cs", label="(DateTime)x.LastHeartbeat", span="636-636"];
m24_541 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="758-758"];
m24_540 [cluster="lambda expression", file="DashboardMetric.cs", label="(string)x.Field", span="758-758"];
m24_543 [cluster="lambda expression", file="DashboardMetric.cs", label="(string)x.Value", span="758-758"];
m24_544 [cluster="lambda expression", file="DashboardMetric.cs", label="Exit lambda expression", span="758-758"];
m24_672 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="974-974"];
m24_674 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="980-995"];
m24_673 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="976-978"];
m24_675 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="974-974"];
m24_104 [cluster="Unk.UseConnections", file="DashboardMetric.cs", label="Entry Unk.UseConnections", span=""];
m24_41 [cluster="Unk.Dequeue", file="DashboardMetric.cs", label="Entry Unk.Dequeue", span=""];
m24_63 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39"];
m24_519 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250"];
m24_24 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33"];
m24_9 [cluster="Unk.Returns", file="DashboardMetric.cs", label="Entry Unk.Returns", span=""];
m24_369 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="532-532"];
m24_370 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="534-540"];
m24_371 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="532-532"];
m24_480 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="675-675"];
m24_481 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="677-678"];
m24_482 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="675-675"];
m24_96 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardMetric.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m24_879 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1330-1330"];
m24_882 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="var connection = new SqlServerConnection(storage)", span="1335-1335"];
m24_881 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="var storage = new SqlServerStorage(sqlConnection)", span="1334-1334"];
m24_883 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="action(sqlConnection, connection)", span="1337-1337"];
m24_880 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1332-1332"];
m24_884 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1330-1330"];
m24_690 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415"];
m24_239 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="328-328"];
m24_240 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="330-336"];
m24_241 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="328-328"];
m24_886 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96"];
m24_158 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="170-170"];
m24_159 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="172-176"];
m24_160 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="170-170"];
m24_56 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="69-69"];
m24_57 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="71-75"];
m24_58 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="69-69"];
m24_136 [cluster="System.DateTime.AddMinutes(double)", file="DashboardMetric.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m24_315 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="446-446"];
m24_316 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="448-452"];
m24_317 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="446-446"];
m24_45 [cluster="Unk.UseConnection", file="DashboardMetric.cs", label="Entry Unk.UseConnection", span=""];
m24_20 [cluster="Unk.Equal", file="DashboardMetric.cs", label="Entry Unk.Equal", span=""];
m24_708 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1044-1044"];
m24_709 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1046-1050"];
m24_710 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1044-1044"];
m24_100 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1356-1356"];
m24_900 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1356-1356"];
m24_610 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356"];
m24_35 [cluster="System.Threading.CancellationToken.CancellationToken()", file="DashboardMetric.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m24_509 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="721-721"];
m24_510 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="723-729"];
m24_511 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="721-721"];
m24_885 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m24_157 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125"];
m24_894 [cluster="Mock<SqlServerStorage>.cstr", file="DashboardMetric.cs", label="Entry Mock<SqlServerStorage>.cstr", span=""];
m24_73 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="44-44"];
m24_86 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="105-105"];
m24_87 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="107-117"];
m24_88 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="105-105"];
m24_591 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="831-831"];
m24_593 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="837-849"];
m24_592 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="833-835"];
m24_594 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="831-831"];
m24_744 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1099-1099"];
m24_745 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1101-1105"];
m24_746 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1099-1099"];
m24_468 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="651-651"];
m24_470 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="657-671"];
m24_469 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="653-655"];
m24_471 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="651-651"];
m24_734 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1089-1089"];
m24_735 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1091-1095"];
m24_736 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1089-1089"];
m24_130 [cluster="Unk.Query", file="DashboardMetric.cs", label="Entry Unk.Query", span=""];
m24_896 [cluster="System.Action<T>.Invoke(T)", file="DashboardMetric.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m24_205 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="231-231"];
m24_207 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="247-264"];
m24_206 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="233-245"];
m24_208 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="231-231"];
m24_782 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1158-1158"];
m24_783 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1160-1164"];
m24_784 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1158-1158"];
m24_52 [cluster="Unk.Add", file="DashboardMetric.cs", label="Entry Unk.Add", span=""];
m24_64 [cluster="Unk.NotNull", file="DashboardMetric.cs", label="Entry Unk.NotNull", span=""];
m24_42 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="55-55"];
m24_43 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="57-65"];
m24_44 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="55-55"];
m24_8 [cluster="Unk.Setup", file="DashboardMetric.cs", label="Entry Unk.Setup", span=""];
m24_655 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="955-955"];
m24_656 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="957-960"];
m24_657 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="955-955"];
m24_165 [cluster="Unk.Null", file="DashboardMetric.cs", label="Entry Unk.Null", span=""];
m24_25 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="41-41"];
m24_26 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="43-51"];
m24_27 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="41-41"];
m24_498 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="694-694"];
m24_500 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="700-717"];
m24_499 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="696-698"];
m24_501 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="694-694"];
m24_10 [cluster="PersistentJobQueueProviderCollection.cstr", file="DashboardMetric.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m24_85 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="72-72"];
m24_183 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="DashboardMetric.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m24_478 [cluster="System.DateTime.AddHours(double)", file="DashboardMetric.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m24_129 [cluster="Unk.NotEmpty", file="DashboardMetric.cs", label="Entry Unk.NotEmpty", span=""];
m24_14 [cluster="Unk.GetJobQueue", file="DashboardMetric.cs", label="Entry Unk.GetJobQueue", span=""];
m24_816 [cluster="Unk.Empty", file="DashboardMetric.cs", label="Entry Unk.Empty", span=""];
m24_520 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="733-733"];
m24_521 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="735-741"];
m24_522 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="733-733"];
m24_665 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="964-964"];
m24_666 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="966-970"];
m24_667 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="964-964"];
m24_681 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="999-999"];
m24_682 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1001-1005"];
m24_683 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="999-999"];
m24_620 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="887-887"];
m24_621 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="889-893"];
m24_622 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="887-887"];
m24_28 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1342-1342"];
m24_890 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="storage.Setup(x => x.QueueProviders).Returns(_providers)", span="1347-1347"];
m24_889 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="var storage = new Mock<SqlServerStorage>(sql)", span="1346-1346"];
m24_891 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="var connection = new SqlServerConnection(storage.Object)", span="1349-1349"];
m24_888 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="var sql = ConnectionUtils.CreateConnection()", span="1344-1344"];
m24_892 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="action(connection)", span="1351-1351"];
m24_893 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1342-1342"];
m24_37 [cluster="Unk.Verify", file="DashboardMetric.cs", label="Entry Unk.Verify", span=""];
m24_489 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225"];
m24_798 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1193-1193"];
m24_799 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1195-1201"];
m24_800 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1193-1193"];
m24_294 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="422-422"];
m24_295 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="424-430"];
m24_296 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="422-422"];
m24_407 [cluster="string.StartsWith(string)", file="DashboardMetric.cs", label="Entry string.StartsWith(string)", span="0-0"];
m24_817 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1215-1215"];
m24_819 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1221-1238"];
m24_818 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1217-1219"];
m24_820 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1215-1215"];
m24_466 [cluster="System.TimeSpan.FromMinutes(double)", file="DashboardMetric.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m24_138 [cluster="Unk.ToDictionary", file="DashboardMetric.cs", label="Entry Unk.ToDictionary", span=""];
m24_479 [cluster="System.TimeSpan.FromHours(double)", file="DashboardMetric.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m24_74 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="89-89"];
m24_75 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="91-101"];
m24_76 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="89-89"];
m24_630 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="897-897"];
m24_631 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="899-903"];
m24_632 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="897-897"];
m24_835 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489"];
m24_852 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1287-1287"];
m24_853 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1289-1292"];
m24_854 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1287-1287"];
m24_65 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="79-79"];
m24_66 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="81-85"];
m24_67 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="79-79"];
m24_127 [cluster="System.DateTime.DateTime(int, int, int)", file="DashboardMetric.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m24_19 [cluster="Unk.>", file="DashboardMetric.cs", label="Entry Unk.>", span=""];
m24_249 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196"];
m24_574 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="811-811"];
m24_575 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="813-817"];
m24_576 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="811-811"];
m24_359 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="511-511"];
m24_361 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="521-528"];
m24_360 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="513-519"];
m24_362 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="511-511"];
m24_72 [cluster="System.TimeSpan.FromSeconds(double)", file="DashboardMetric.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m24_611 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="862-862"];
m24_613 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="868-883"];
m24_612 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@Key, @Value, 0.0)''", span="864-866"];
m24_614 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="862-862"];
m24_271 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="375-375"];
m24_273 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="382-395"];
m24_272 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="377-380"];
m24_274 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="375-375"];
m24_128 [cluster="System.TimeSpan.FromDays(double)", file="DashboardMetric.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m24_861 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372"];
m24_304 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214"];
m24_379 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="DashboardMetric.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20"];
m24_84 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DashboardMetric.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m24_331 [cluster="Unk.GetJobParameter", file="DashboardMetric.cs", label="Entry Unk.GetJobParameter", span=""];
m24_197 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165"];
m24_440 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="621-621"];
m24_442 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="629-640"];
m24_441 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="623-627"];
m24_443 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="621-621"];
m24_809 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1205-1205"];
m24_810 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1207-1211"];
m24_811 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1205-1205"];
m24_530 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="745-745"];
m24_531 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="747-762"];
m24_532 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="745-745"];
m24_166 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="180-180"];
m24_168 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="187-209"];
m24_167 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="182-185"];
m24_169 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="180-180"];
m24_408 [cluster="Unk.Contains", file="DashboardMetric.cs", label="Entry Unk.Contains", span=""];
m24_430 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="614-614"];
m24_431 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="DashboardMetric.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="616-617"];
m24_432 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="614-614"];
m24_725 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1064-1064"];
m24_727 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1070-1085"];
m24_726 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="DashboardMetric.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key])\r\nvalues (@key)''", span="1066-1068"];
m24_728 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1064-1064"];
m24_583 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347"];
m24_148 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="163-163"];
m24_149 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="165-166"];
m24_150 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="163-163"];
m24_131 [cluster="Unk.Single", file="DashboardMetric.cs", label="Entry Unk.Single", span=""];
m24_101 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="121-121"];
m24_102 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="DashboardMetric.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="123-159"];
m24_103 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="121-121"];
m24_137 [cluster="Unk.True", file="DashboardMetric.cs", label="Entry Unk.True", span=""];
m24_352 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="499-499"];
m24_353 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="501-507"];
m24_354 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="499-499"];
m24_717 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445"];
m24_584 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="DashboardMetric.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="821-821"];
m24_585 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="DashboardMetric.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="823-827"];
m24_586 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="DashboardMetric.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="821-821"];
m24_901 [file="DashboardMetric.cs", label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span=""];
m24_921 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_902 [file="DashboardMetric.cs", label=token, span=""];
m24_903 [file="DashboardMetric.cs", label=queues, span=""];
m24_904 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_905 [file="DashboardMetric.cs", label=token, span=""];
m24_906 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_907 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_908 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_909 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_910 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_911 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_912 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_913 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_914 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_915 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_916 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_917 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_918 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_919 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_920 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_922 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_923 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_924 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_925 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_926 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_927 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_928 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_929 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_930 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_931 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_932 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_933 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_934 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_935 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_936 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_937 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_938 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_939 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_940 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_941 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_942 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_943 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_944 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_945 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_946 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_947 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_948 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_949 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_950 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_951 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_952 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_953 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_954 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_955 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_956 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_957 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_958 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_959 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_960 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m24_961 [file="DashboardMetric.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m24_962 [file="DashboardMetric.cs", label=arrangeSql, span=""];
m25_42 [cluster="System.Threading.Thread.Join()", file="DashboardMetrics.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m25_65 [cluster="string.Format(string, params object[])", file="DashboardMetrics.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m25_22 [cluster="System.Threading.Thread.Start()", file="DashboardMetrics.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m25_62 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="DashboardMetrics.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0"];
m25_45 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Dispose()", file="DashboardMetrics.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Dispose()", span="0-0"];
m25_46 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="DashboardMetrics.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m25_15 [cluster="string.Format(string, object)", file="DashboardMetrics.cs", label="Entry string.Format(string, object)", span="0-0"];
m25_29 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="DashboardMetrics.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m25_47 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="DashboardMetrics.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m25_48 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="DashboardMetrics.cs", label="_freeWorkers.Add(worker)", span="87-87"];
m25_49 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="DashboardMetrics.cs", label="Exit HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m25_16 [cluster="Unk.Info", file="DashboardMetrics.cs", label="Entry Unk.Info", span=""];
m25_17 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="DashboardMetrics.cs", label="Entry HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m25_51 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label="Entry HangFire.Server.JobManager.Work()", span="90-90"];
m25_52 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label=true, span="94-94"];
m25_53 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label="Worker worker", span="96-96"];
m25_58 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label=OperationCanceledException, span="107-107"];
m25_59 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label=Exception, span="111-111"];
m25_54 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label="worker = _freeWorkers.Take(_cts.Token)", span="99-99"];
m25_55 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label="worker.Crashed", span="101-101"];
m25_57 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label="worker.Process(jobId)", span="104-104"];
m25_56 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label="var jobId = _fetcher.DequeueJob(_cts.Token)", span="103-103"];
m25_60 [cluster="HangFire.Server.JobManager.Work()", color=red, community=0, file="DashboardMetrics.cs", label="0: _logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. Jobs  will not be processed by this server.''),\r\n                    ex)", span="113-116"];
m25_61 [cluster="HangFire.Server.JobManager.Work()", file="DashboardMetrics.cs", label="Exit HangFire.Server.JobManager.Work()", span="90-90"];
m25_63 [cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="DashboardMetrics.cs", label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="7-7"];
m25_50 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="DashboardMetrics.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m25_66 [cluster="Unk.Fatal", file="DashboardMetrics.cs", label="Entry Unk.Fatal", span=""];
m25_14 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="DashboardMetrics.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0"];
m25_30 [cluster="HangFire.Server.Worker.SendStop()", file="DashboardMetrics.cs", label="Entry HangFire.Server.Worker.SendStop()", span="53-53"];
m25_23 [cluster="HangFire.Server.JobManager.SendStop()", file="DashboardMetrics.cs", label="Entry HangFire.Server.JobManager.SendStop()", span="52-52"];
m25_24 [cluster="HangFire.Server.JobManager.SendStop()", file="DashboardMetrics.cs", label="_stopSent = true", span="54-54"];
m25_25 [cluster="HangFire.Server.JobManager.SendStop()", file="DashboardMetrics.cs", label="_cts.Cancel()", span="56-56"];
m25_26 [cluster="HangFire.Server.JobManager.SendStop()", file="DashboardMetrics.cs", label=_workers, span="58-58"];
m25_27 [cluster="HangFire.Server.JobManager.SendStop()", file="DashboardMetrics.cs", label="worker.SendStop()", span="60-60"];
m25_28 [cluster="HangFire.Server.JobManager.SendStop()", file="DashboardMetrics.cs", label="Exit HangFire.Server.JobManager.SendStop()", span="52-52"];
m25_13 [cluster="System.Collections.Generic.List<T>.List(int)", file="DashboardMetrics.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m25_19 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DashboardMetrics.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m25_0 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="Entry HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m25_1 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="_workers = new List<Worker>(workerCount)", span="28-28"];
m25_3 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="_logger.Info(String.Format(''Starting {0} workers...'', workerCount))", span="31-31"];
m25_5 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="i < workerCount", span="33-33"];
m25_6 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="_workers.Add(\r\n                    new Worker(redisManager, this, new WorkerContext(context, i)))", span="35-36"];
m25_9 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="_fetcher = new PrioritizedJobFetcher(\r\n                redisManager, queues, workerCount)", span="41-42"];
m25_2 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="_freeWorkers = new BlockingCollection<Worker>()", span="29-29"];
m25_4 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="var i = 0", span="33-33"];
m25_7 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="i++", span="33-33"];
m25_8 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="_logger.Info(''Workers were started.'')", span="39-39"];
m25_10 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="DashboardMetrics.cs", label="0: _managerThread = new Thread(Work)\r\n                {\r\n                    Name = typeof(JobManager).Name,\r\n                    IsBackground = true\r\n                }", span="44-48"];
m25_11 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="_managerThread.Start()", span="49-49"];
m25_12 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="DashboardMetrics.cs", label="Exit HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m25_20 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="DashboardMetrics.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m25_31 [cluster="HangFire.Server.JobManager.Dispose()", file="DashboardMetrics.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="64-64"];
m25_32 [cluster="HangFire.Server.JobManager.Dispose()", file="DashboardMetrics.cs", label="!_stopSent", span="66-66"];
m25_33 [cluster="HangFire.Server.JobManager.Dispose()", file="DashboardMetrics.cs", label="SendStop()", span="68-68"];
m25_34 [cluster="HangFire.Server.JobManager.Dispose()", file="DashboardMetrics.cs", label="_managerThread.Join()", span="71-71"];
m25_35 [cluster="HangFire.Server.JobManager.Dispose()", file="DashboardMetrics.cs", label=_workers, span="73-73"];
m25_36 [cluster="HangFire.Server.JobManager.Dispose()", file="DashboardMetrics.cs", label="worker.Dispose()", span="75-75"];
m25_37 [cluster="HangFire.Server.JobManager.Dispose()", color=red, community=0, file="DashboardMetrics.cs", label="0: _logger.Info(''Workers were stopped.'')", span="77-77"];
m25_38 [cluster="HangFire.Server.JobManager.Dispose()", file="DashboardMetrics.cs", label="_fetcher.Dispose()", span="79-79"];
m25_39 [cluster="HangFire.Server.JobManager.Dispose()", file="DashboardMetrics.cs", label="_freeWorkers.Dispose()", span="81-81"];
m25_40 [cluster="HangFire.Server.JobManager.Dispose()", color=red, community=0, file="DashboardMetrics.cs", label="0: _cts.Dispose()", span="82-82"];
m25_41 [cluster="HangFire.Server.JobManager.Dispose()", file="DashboardMetrics.cs", label="Exit HangFire.Server.JobManager.Dispose()", span="64-64"];
m25_18 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="DashboardMetrics.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="9-9"];
m25_44 [cluster="System.IDisposable.Dispose()", file="DashboardMetrics.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m25_43 [cluster="HangFire.Server.Worker.Dispose()", file="DashboardMetrics.cs", label="Entry HangFire.Server.Worker.Dispose()", span="87-87"];
m25_21 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="DashboardMetrics.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m25_64 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="DashboardMetrics.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77"];
m25_67 [file="DashboardMetrics.cs", label="HangFire.Server.JobManager", span=""];
m26_26 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", span="56-56"];
m26_27 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="var filterInfo = GetFilters(context.Job)", span="58-58"];
m26_29 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="context.TraversedStates", span="61-61"];
m26_30 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="transaction.AddJobState(context.JobId, state)", span="63-63"];
m26_31 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="_handlers.GetHandlers(context.OldStateName)", span="66-66"];
m26_32 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="handler.Unapply(context, transaction)", span="68-68"];
m26_34 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="filter.OnStateUnapplied(context, transaction)", span="73-73"];
m26_35 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="transaction.SetJobState(context.JobId, context.NewState)", span="76-76"];
m26_36 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="_handlers.GetHandlers(context.NewState.Name)", span="78-78"];
m26_37 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="handler.Apply(context, transaction)", span="80-80"];
m26_39 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="filter.OnStateApplied(context, transaction)", span="85-85"];
m26_40 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="context.NewState.IsFinal", span="88-88"];
m26_41 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="transaction.ExpireJob(context.JobId, context.JobExpirationTimeout)", span="90-90"];
m26_42 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="transaction.PersistJob(context.JobId)", span="94-94"];
m26_28 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="var filters = filterInfo.ApplyStateFilters", span="59-59"];
m26_33 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label=filters, span="71-71"];
m26_38 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label=filters, span="83-83"];
m26_43 [cluster="Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="DefaultExpressionFingerprint.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", span="56-56"];
m26_46 [cluster="Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="25-25"];
m26_0 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", span="32-32"];
m26_1 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="DefaultExpressionFingerprint.cs", label="handlers == null", span="34-34"];
m26_3 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="DefaultExpressionFingerprint.cs", label="_handlers = handlers", span="36-36"];
m26_2 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="DefaultExpressionFingerprint.cs", label="throw new ArgumentNullException(''handlers'');", span="34-34"];
m26_4 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="DefaultExpressionFingerprint.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", span="32-32"];
m26_25 [cluster="Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", span="30-30"];
m26_49 [cluster="Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="24-24"];
m26_56 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultExpressionFingerprint.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m26_45 [cluster="Hangfire.States.StateHandlerCollection.GetHandlers(string)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.StateHandlerCollection.GetHandlers(string)", span="50-50"];
m26_51 [cluster="Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="26-26"];
m26_44 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="29-29"];
m26_15 [cluster="lambda expression", file="DefaultExpressionFingerprint.cs", label="Entry lambda expression", span="44-44"];
m26_12 [cluster="lambda expression", file="DefaultExpressionFingerprint.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="44-44"];
m26_11 [cluster="lambda expression", file="DefaultExpressionFingerprint.cs", label="Entry lambda expression", span="44-44"];
m26_13 [cluster="lambda expression", file="DefaultExpressionFingerprint.cs", label="Exit lambda expression", span="44-44"];
m26_16 [cluster="lambda expression", file="DefaultExpressionFingerprint.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="44-44"];
m26_17 [cluster="lambda expression", file="DefaultExpressionFingerprint.cs", label="Exit lambda expression", span="44-44"];
m26_14 [cluster="Unk.Select", file="DefaultExpressionFingerprint.cs", label="Entry Unk.Select", span=""];
m26_19 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="47-47"];
m26_20 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultExpressionFingerprint.cs", label="var filterInfo = GetFilters(context.Job)", span="49-49"];
m26_22 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultExpressionFingerprint.cs", label="filter.OnStateElection(context)", span="52-52"];
m26_21 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultExpressionFingerprint.cs", label="filterInfo.ElectStateFilters", span="50-50"];
m26_23 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="DefaultExpressionFingerprint.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="47-47"];
m26_47 [cluster="Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="36-36"];
m26_52 [cluster="Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="27-27"];
m26_55 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
m26_18 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m26_48 [cluster="Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="28-28"];
m26_6 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m26_7 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="DefaultExpressionFingerprint.cs", label="filters == null", span="42-42"];
m26_9 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="DefaultExpressionFingerprint.cs", label="_getFiltersThunk = md => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="44-44"];
m26_8 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="DefaultExpressionFingerprint.cs", label="throw new ArgumentNullException(''filters'');", span="42-42"];
m26_10 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="DefaultExpressionFingerprint.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m26_24 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", span="98-98"];
m26_53 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", file="DefaultExpressionFingerprint.cs", label="return new JobFilterInfo(_getFiltersThunk(job));", span="100-100"];
m26_54 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", file="DefaultExpressionFingerprint.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", span="98-98"];
m26_50 [cluster="Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="DefaultExpressionFingerprint.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="29-29"];
m26_57 [file="DefaultExpressionFingerprint.cs", label="Hangfire.States.DefaultStateChangeProcess", span=""];
m26_58 [file="DefaultExpressionFingerprint.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m27_45 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m27_24 [cluster="Hangfire.Logging.ILog.Info(string)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204"];
m27_65 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="DelayedJobScheduler.cs", label="filters.Reverse()", span="117-117"];
m27_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="DelayedJobScheduler.cs", label="filter.OnClientException(context)", span="119-119"];
m27_67 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="DelayedJobScheduler.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114"];
m27_44 [cluster="lambda expression", file="DelayedJobScheduler.cs", label="Exit lambda expression", span="69-69"];
m27_43 [cluster="lambda expression", file="DelayedJobScheduler.cs", label="InvokeClientFilter(filter, preContext, next)", span="69-69"];
m27_2 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="91-91"];
m27_3 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="91-91"];
m27_47 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="preContext.Canceled", span="80-80"];
m27_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", color=green, community=0, file="DelayedJobScheduler.cs", label="1: !wasError", span="106-106"];
m27_51 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m27_53 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="Hangfire.Server.DelayedJobScheduler", span=""];
m27_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="!postContext.ExceptionHandled", span="100-100"];
m27_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="filter.OnCreated(postContext)", span="108-108"];
m27_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="return postContext;", span="111-111"];
m27_50 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="DelayedJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m27_52 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="DelayedJobScheduler.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m27_54 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="95-96"];
m27_55 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="filter.OnCreated(postContext)", span="98-98"];
m27_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="throw;", span="102-102"];
m27_46 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m27_48 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="DelayedJobScheduler.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m27_49 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="DelayedJobScheduler.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m27_61 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="DelayedJobScheduler.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m27_68 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="DelayedJobScheduler.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4"];
m27_31 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="connection.AcquireDistributedLock(''locks:schedulepoller'', DefaultLockTimeout)", span="146-146"];
m27_23 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="DelayedJobScheduler.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8"];
m27_30 [cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="DelayedJobScheduler.cs", label="Entry HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="6-6"];
m27_36 [cluster="lambda expression", color=red, community=0, file="DelayedJobScheduler.cs", label="4: return new CreatedContext(createContext, false, null);", span="65-65"];
m27_33 [cluster="Unk.thunk", file="DelayedJobScheduler.cs", label="Entry Unk.thunk", span=""];
m27_38 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="DelayedJobScheduler.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="55-55"];
m27_32 [cluster="Unk.Aggregate", file="DelayedJobScheduler.cs", label="Entry Unk.Aggregate", span=""];
m27_34 [cluster="lambda expression", file="DelayedJobScheduler.cs", label="Entry lambda expression", span="62-66"];
m27_39 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="DelayedJobScheduler.cs", label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m27_35 [cluster="lambda expression", file="DelayedJobScheduler.cs", label="jobDescriptor.Create()", span="64-64"];
m27_37 [cluster="lambda expression", file="DelayedJobScheduler.cs", label="Exit lambda expression", span="62-66"];
m27_41 [cluster="lambda expression", file="DelayedJobScheduler.cs", label="Exit lambda expression", span="69-69"];
m27_40 [cluster="lambda expression", file="DelayedJobScheduler.cs", label="Entry lambda expression", span="69-69"];
m27_42 [cluster="lambda expression", file="DelayedJobScheduler.cs", label="Entry lambda expression", span="69-69"];
m27_29 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="DelayedJobScheduler.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56"];
m27_64 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="DelayedJobScheduler.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m27_5 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="DelayedJobScheduler.cs", label="1: stateChanger == null", span="106-106"];
m27_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="DelayedJobScheduler.cs", label="_clientFilters = clientFilters", span="34-34"];
m27_11 [cluster="Unk.nameof", file="DelayedJobScheduler.cs", label="Entry Unk.nameof", span=""];
m27_8 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs", label="_pollingDelay = pollingDelay", span="109-109"];
m27_6 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="DelayedJobScheduler.cs", label="1: throw new ArgumentNullException(nameof(stateChanger));", span="106-106"];
m27_9 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
m27_7 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs", label="_stateChanger = stateChanger", span="108-108"];
m27_12 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113"];
m27_26 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="DelayedJobScheduler.cs", label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Create();\r\n                return new CreatedContext(createContext, false, null);\r\n            }", span="62-66"];
m27_27 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="DelayedJobScheduler.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="68-69"];
m27_28 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="DelayedJobScheduler.cs", label="thunk()", span="71-71"];
m27_22 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113"];
m27_25 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="54-54"];
m27_14 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="DelayedJobScheduler.cs", label="4: throw new ArgumentNullException(nameof(context));", span="115-115"];
m27_15 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="var jobsEnqueued = 0", span="117-117"];
m27_16 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="EnqueueNextScheduledJob(context)", span="119-119"];
m27_18 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="context.IsShutdownRequested", span="123-123"];
m27_17 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="jobsEnqueued++", span="121-121"];
m27_19 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="jobsEnqueued != 0", span="129-129"];
m27_20 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="DelayedJobScheduler.cs", label="0: Logger.Info($''{jobsEnqueued} scheduled job(s) enqueued.'')", span="131-131"];
m27_21 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs", label="context.Wait(_pollingDelay)", span="134-134"];
m27_0 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="81-81"];
m27_1 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", file="DelayedJobScheduler.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="81-81"];
m27_62 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="DelayedJobScheduler.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m27_13 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="DelayedJobScheduler.cs", label="3: context == null", span="115-115"];
m27_4 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
m27_63 [cluster="System.Func<TResult>.Invoke()", file="DelayedJobScheduler.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m27_72 [file="DelayedJobScheduler.cs", label=preContext, span=""];
m27_73 [file="DelayedJobScheduler.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m27_74 [file="DelayedJobScheduler.cs", label="HangFire.Filters.IClientFilter", span=""];
m27_71 [file="DelayedJobScheduler.cs", label="HangFire.Client.CreateContext", span=""];
m27_70 [file="DelayedJobScheduler.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m27_69 [file="DelayedJobScheduler.cs", label="HangFire.Client.JobCreator", span=""];
m28_0 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
m28_1 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="DelayedJobSchedulerFacts.cs", label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
m29_73 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="DeletedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m29_132 [cluster="Unk.FromNullableStringTimestamp", file="DeletedJobsPage.generated.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m29_20 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="135-135"];
m29_51 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="4: job.Value == null", span="316-316"];
m29_26 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: WriteLiteral(@''\r\n                </div>\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="166-175"];
m29_83 [cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="DeletedJobsPage.generated.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="117-119"];
m29_12 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Write(Strings.DeletedJobsPage_Title)", span="85-85"];
m29_13 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: WriteLiteral(''</h1>\r\n\r\n'')", span="90-90"];
m29_14 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="95-95"];
m29_6 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="var monitor = Storage.GetMonitoringApi()", span="62-62"];
m29_131 [cluster="Unk.FromStringTimestamp", file="DeletedJobsPage.generated.cs", label="Entry Unk.FromStringTimestamp", span=""];
m29_16 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Write(Strings.DeletedJobsPage_NoJobs)", span="106-106"];
m29_98 [cluster="Unk.SetEntryInHash", file="DeletedJobsPage.generated.cs", label="Entry Unk.SetEntryInHash", span=""];
m29_68 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="DeletedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m29_25 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="Write(Html.PerPageSelector(pager))", span="161-161"];
m29_72 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DeletedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m29_148 [cluster="Unk.RemoveEntryFromHash", file="DeletedJobsPage.generated.cs", label="Entry Unk.RemoveEntryFromHash", span=""];
m29_78 [cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(string)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Redis.RedisStorageConnection.RemoveServer(string)", span="108-108"];
m29_69 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="88-94"];
m29_94 [cluster="Unk.RemoveEntry", file="DeletedJobsPage.generated.cs", label="Entry Unk.RemoveEntry", span=""];
m29_76 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="99-101"];
m29_37 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="4: Write(job.Value != null && job.Value.InDeletedState && job.Value != null ? ''hover'' : null)", span="232-232"];
m29_36 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="4: WriteLiteral('' '')", span="227-227"];
m29_28 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''</th>\r\n                                <th>'')", span="185-185"];
m29_29 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Write(Strings.Common_Job)", span="190-190"];
m29_35 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: Write(job.Value == null || !job.Value.InDeletedState ? ''obsolete-data'' : null)", span="222-222"];
m29_39 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="3: job.Value == null || job.Value.InDeletedState", span="242-242"];
m29_38 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''\''>\r\n                                    <td>\r\n'')", span="237-237"];
m29_30 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''</th>\r\n                                <th class=\''align-right\''>'')", span="195-195"];
m29_31 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: Write(Strings.DeletedJobsPage_Table_Deleted)", span="200-200"];
m29_32 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=1, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="205-206"];
m29_33 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="3: jobs", span="211-211"];
m29_34 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''                                <tr class=\''js-jobs-list-row '')", span="217-217"];
m29_40 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=1, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''                                            <input type=\''checkbox\'' class=\''js-jobs'' +\r\n''-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="248-249"];
m29_95 [cluster="HangFire.Redis.RedisStorageConnection.Heartbeat(string)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Redis.RedisStorageConnection.Heartbeat(string)", span="129-129"];
m29_96 [cluster="HangFire.Redis.RedisStorageConnection.Heartbeat(string)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: _redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="131-134"];
m29_97 [cluster="HangFire.Redis.RedisStorageConnection.Heartbeat(string)", file="DeletedJobsPage.generated.cs", label="Exit HangFire.Redis.RedisStorageConnection.Heartbeat(string)", span="129-129"];
m29_55 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=1, file="DeletedJobsPage.generated.cs", label="4: WriteLiteral(''                                        <td>\r\n                                   '' +\r\n''         '')", span="344-345"];
m29_7 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="var pager = new Pager(from, perPage, monitor.DeletedListCount())", span="63-63"];
m29_21 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Write(Strings.Common_Enqueueing)", span="140-140"];
m29_70 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="4: x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="88-94"];
m29_0 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", span="41-41"];
m29_1 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="45-45"];
m29_2 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Layout = new LayoutPage(Strings.DeletedJobsPage_Title)", span="55-55"];
m29_3 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="int from, perPage", span="57-57"];
m29_4 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="int.TryParse(Query(''from''), out from)", span="59-59"];
m29_5 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="int.TryParse(Query(''count''), out perPage)", span="60-60"];
m29_138 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="4: transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked''))", span="195-197"];
m29_136 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="4: transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="187-190"];
m29_134 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180"];
m29_135 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="DeletedJobsPage.generated.cs", label="var transaction = redis.CreateTransaction()", span="185-185"];
m29_137 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="4: transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched''))", span="192-194"];
m29_139 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="DeletedJobsPage.generated.cs", label="transaction.Commit()", span="199-199"];
m29_140 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="DeletedJobsPage.generated.cs", label="Exit HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180"];
m29_118 [cluster="Unk.Flush", file="DeletedJobsPage.generated.cs", label="Entry Unk.Flush", span=""];
m29_42 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''\'' />\r\n'')", span="259-259"];
m29_15 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                '')", span="101-101"];
m29_133 [cluster="Unk.Add", file="DeletedJobsPage.generated.cs", label="Entry Unk.Add", span=""];
m29_121 [cluster="System.DateTime.Add(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m29_71 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="88-94"];
m29_56 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="2: Write(Html.JobNameLink(job.Key, job.Value.Job))", span="350-350"];
m29_58 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''                                        <td class=\''align-right\''>\r\n'')", span="359-359"];
m29_57 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''\r\n                                        </td>\r\n'')", span="355-355"];
m29_59 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="4: job.Value.DeletedAt.HasValue", span="364-364"];
m29_60 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Write(Html.RelativeTime(job.Value.DeletedAt.Value))", span="372-372"];
m29_63 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=1, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n                '')", span="405-406"];
m29_62 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="4: WriteLiteral(''                                </tr>\r\n'')", span="395-395"];
m29_61 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: WriteLiteral(''                                        </td>\r\n'')", span="385-385"];
m29_64 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="Write(Html.Paginator(pager))", span="411-411"];
m29_99 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137"];
m29_100 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: var serverNames = _redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="139-139"];
m29_101 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="140-140"];
m29_104 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: serverNames", span="146-146"];
m29_102 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="var utcNow = DateTime.UtcNow", span="142-142"];
m29_106 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="4: pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="150-158"];
m29_109 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="4: heartbeats", span="165-165"];
m29_103 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="1: var pipeline = _redis.CreatePipeline()", span="144-144"];
m29_105 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="var name = serverName", span="148-148"];
m29_107 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: pipeline.Flush()", span="161-161"];
m29_111 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="utcNow > maxTime.Add(timeOut)", span="170-170"];
m29_108 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="var removedServerCount = 0", span="164-164"];
m29_113 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="removedServerCount++", span="173-173"];
m29_110 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="167-168"];
m29_114 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="1: return removedServerCount;", span="177-177"];
m29_112 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="RemoveServer(_redis, heartbeat.Key)", span="172-172"];
m29_115 [cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DeletedJobsPage.generated.cs", label="Exit HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137"];
m29_130 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="DeletedJobsPage.generated.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m29_77 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="DeletedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m29_11 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: WriteLiteral(''\r\n    </div>\r\n    <div class=\''col-md-9\''>\r\n        <h1 class=\''page-header\''>'')", span="80-80"];
m29_119 [cluster="System.DateTime.DateTime(long)", file="DeletedJobsPage.generated.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m29_90 [cluster="Unk.RemoveItemFromSet", file="DeletedJobsPage.generated.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m29_120 [cluster="System.Math.Max(long, long)", file="DeletedJobsPage.generated.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m29_82 [cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: var transaction = redis.CreateTransaction()", span="115-115"];
m29_8 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="var jobs = monitor.DeletedJobs(pager.FromRecord, pager.RecordsPerPage)", span="64-64"];
m29_9 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-3\''>\r\n        '')", span="70-70"];
m29_10 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="Write(Html.JobsSidebar())", span="75-75"];
m29_18 [cluster="HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="DeletedJobsPage.generated.cs", label="return new RedisJobFetcher(_redis, queueNames, TimeSpan.FromSeconds(1));", span="36-36"];
m29_17 [cluster="HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: Entry HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m29_19 [cluster="HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="DeletedJobsPage.generated.cs", label="Exit HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m29_22 [cluster="HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", color=red, community=1, file="DeletedJobsPage.generated.cs", label="0: Entry HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", span="39-39"];
m29_23 [cluster="HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: return _redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="41-43"];
m29_24 [cluster="HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: Exit HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", span="39-39"];
m29_27 [cluster="Unk.AcquireLock", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Entry Unk.AcquireLock", span=""];
m29_43 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", color=red, community=1, file="DeletedJobsPage.generated.cs", label="4: Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m29_41 [cluster="System.Guid.NewGuid()", color=red, community=0, file="DeletedJobsPage.generated.cs", label="2: Entry System.Guid.NewGuid()", span="0-0"];
m29_44 [cluster="HangFire.Common.JobHelper.ToJson(object)", color=red, community=0, file="DeletedJobsPage.generated.cs", label="4: Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m29_45 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m29_46 [cluster="Unk.QueueCommand", color=red, community=0, file="DeletedJobsPage.generated.cs", label="4: Entry Unk.QueueCommand", span=""];
m29_47 [cluster="Unk.Commit", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Entry Unk.Commit", span=""];
m29_50 [cluster="lambda expression", color=red, community=0, file="DeletedJobsPage.generated.cs", label="4: Exit lambda expression", span="66-68"];
m29_48 [cluster="lambda expression", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Entry lambda expression", span="66-68"];
m29_49 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="4: x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters)", span="66-68"];
m29_52 [cluster="lambda expression", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: Entry lambda expression", span="70-72"];
m29_53 [cluster="lambda expression", color=red, community=0, file="DeletedJobsPage.generated.cs", label="0: x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="70-72"];
m29_54 [cluster="lambda expression", color=red, community=0, file="DeletedJobsPage.generated.cs", label="1: Exit lambda expression", span="70-72"];
m29_65 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="85-86"];
m29_66 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="85-86"];
m29_67 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="85-86"];
m29_74 [cluster="Hangfire.Storage.IMonitoringApi.DeletedListCount()", file="DeletedJobsPage.generated.cs", label="Entry Hangfire.Storage.IMonitoringApi.DeletedListCount()", span="45-45"];
m29_128 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="154-158"];
m29_122 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="151-153"];
m29_127 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="154-158"];
m29_129 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="154-158"];
m29_123 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="151-153"];
m29_124 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="151-153"];
m29_141 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="187-190"];
m29_142 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="187-190"];
m29_143 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="187-190"];
m29_145 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="192-194"];
m29_146 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'')", span="192-194"];
m29_147 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="192-194"];
m29_149 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="195-197"];
m29_150 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked'')", span="195-197"];
m29_151 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="195-197"];
m29_75 [cluster="Hangfire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="DeletedJobsPage.generated.cs", label="Entry Hangfire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m29_92 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="121-123"];
m29_88 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="117-119"];
m29_87 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="117-119"];
m29_91 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="121-123"];
m29_93 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="121-123"];
m29_89 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="117-119"];
m29_79 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="0: Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m29_80 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="DeletedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m29_144 [cluster="Unk.RemoveItemFromList", file="DeletedJobsPage.generated.cs", label="Entry Unk.RemoveItemFromList", span=""];
m29_117 [cluster="Unk.CreatePipeline", file="DeletedJobsPage.generated.cs", label="Entry Unk.CreatePipeline", span=""];
m29_81 [cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", span="113-113"];
m29_116 [cluster="Unk.GetAllItemsFromSet", file="DeletedJobsPage.generated.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m29_84 [cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="DeletedJobsPage.generated.cs", label="Hangfire.Dashboard.Pages.DeletedJobsPage", span=""];
m29_85 [cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="DeletedJobsPage.generated.cs", label="transaction.Commit()", span="125-125"];
m29_86 [cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="DeletedJobsPage.generated.cs", label="Exit HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", span="113-113"];
m29_126 [cluster="Unk.GetValuesFromHash", file="DeletedJobsPage.generated.cs", label="Entry Unk.GetValuesFromHash", span=""];
m29_125 [cluster="Unk.Format", file="DeletedJobsPage.generated.cs", label="Entry Unk.Format", span=""];
m29_153 [file="DeletedJobsPage.generated.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m29_154 [file="DeletedJobsPage.generated.cs", label=jobId, span=""];
m29_156 [file="DeletedJobsPage.generated.cs", label=string, span=""];
m29_157 [file="DeletedJobsPage.generated.cs", label=int, span=""];
m29_152 [file="DeletedJobsPage.generated.cs", label="HangFire.Redis.RedisStorageConnection", span=""];
m29_160 [file="DeletedJobsPage.generated.cs", label=name, span=""];
m29_161 [file="DeletedJobsPage.generated.cs", label=heartbeats, span=""];
m29_162 [file="DeletedJobsPage.generated.cs", label=string, span=""];
m29_163 [file="DeletedJobsPage.generated.cs", label=string, span=""];
m29_155 [file="DeletedJobsPage.generated.cs", label="System.TimeSpan", span=""];
m29_158 [file="DeletedJobsPage.generated.cs", label=queue1, span=""];
m29_159 [file="DeletedJobsPage.generated.cs", label=string, span=""];
m32_61 [cluster="HangFire.Web.RazorPage.Write(object)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m32_0 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="11-11"];
m32_1 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="ExpressionFingerprintChain.cs", label="DateTime time", span="13-13"];
m32_2 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="ExpressionFingerprintChain.cs", label="timeAgo.Equals(''millisecond'')", span="14-14"];
m32_3 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="ExpressionFingerprintChain.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="14-14"];
m32_4 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="ExpressionFingerprintChain.cs", label="timeAgo.Equals(''day'')", span="15-15"];
m32_5 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="ExpressionFingerprintChain.cs", label="time = DateTime.UtcNow.AddDays(-1)", span="15-15"];
m32_9 [cluster="string.Equals(string)", file="ExpressionFingerprintChain.cs", label="Entry string.Equals(string)", span="0-0"];
m32_6 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="ExpressionFingerprintChain.cs", label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="16-16"];
m32_7 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="ExpressionFingerprintChain.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'',\r\n                JobHelper.ToStringTimestamp(time))", span="18-21"];
m32_8 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="ExpressionFingerprintChain.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="11-11"];
m32_10 [cluster="System.DateTime.AddMilliseconds(double)", file="ExpressionFingerprintChain.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m32_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ExpressionFingerprintChain.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m32_17 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ExpressionFingerprintChain.cs", label="DateTime time", span="27-27"];
m32_49 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="ExpressionFingerprintChain.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m32_11 [cluster="System.DateTime.AddDays(double)", file="ExpressionFingerprintChain.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m32_19 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ExpressionFingerprintChain.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="28-28"];
m32_13 [cluster="string.Format(string, object)", file="ExpressionFingerprintChain.cs", label="Entry string.Format(string, object)", span="0-0"];
m32_14 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="51-51"];
m32_15 [cluster="Unk.SetEntryInHash", file="ExpressionFingerprintChain.cs", label="Entry Unk.SetEntryInHash", span=""];
m32_16 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", span="25-25"];
m32_18 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ExpressionFingerprintChain.cs", label="timeAgo.Equals(''millisecond'')", span="28-28"];
m32_20 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ExpressionFingerprintChain.cs", label="timeAgo.Equals(''day'')", span="29-29"];
m32_48 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="ExpressionFingerprintChain.cs", label="Assert.IsNull(checkedTimestamp)", span="77-77"];
m32_21 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ExpressionFingerprintChain.cs", label="time = DateTime.UtcNow.AddDays(-1)", span="29-29"];
m32_22 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ExpressionFingerprintChain.cs", label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="30-30"];
m32_23 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ExpressionFingerprintChain.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(time))", span="32-35"];
m32_24 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ExpressionFingerprintChain.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", span="25-25"];
m32_25 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ExpressionFingerprintChain.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="217-217"];
m32_26 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ExpressionFingerprintChain.cs", label="WriteLiteral(''\''>\r\n                                '')", span="222-222"];
m32_27 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ExpressionFingerprintChain.cs", label="Write(HtmlHelper.JobId(job.Key))", span="227-227"];
m32_28 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ExpressionFingerprintChain.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="232-232"];
m32_29 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ExpressionFingerprintChain.cs", label="!job.Value.InEnqueuedState", span="237-237"];
m32_30 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ExpressionFingerprintChain.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="243-244"];
m32_31 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m32_32 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ExpressionFingerprintChain.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="50-52"];
m32_33 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ExpressionFingerprintChain.cs", label="Assert.IsNotNull(checkedTimestamp)", span="54-54"];
m32_34 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ExpressionFingerprintChain.cs", label="var date = JobHelper.FromStringTimestamp(checkedTimestamp)", span="55-55"];
m32_35 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", color=green, community=0, file="ExpressionFingerprintChain.cs", label="1: Assert.IsTrue(date > DateTime.UtcNow.AddMinutes(-1))", span="57-57"];
m32_36 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ExpressionFingerprintChain.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m32_37 [cluster="Unk.GetValueFromHash", file="ExpressionFingerprintChain.cs", label="Entry Unk.GetValueFromHash", span=""];
m32_38 [cluster="Unk.IsNotNull", file="ExpressionFingerprintChain.cs", label="Entry Unk.IsNotNull", span=""];
m32_39 [cluster="Unk.FromStringTimestamp", file="ExpressionFingerprintChain.cs", label="Entry Unk.FromStringTimestamp", span=""];
m32_40 [cluster="System.DateTime.AddMinutes(double)", file="ExpressionFingerprintChain.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m32_41 [cluster="Unk.IsTrue", file="ExpressionFingerprintChain.cs", label="Entry Unk.IsTrue", span=""];
m32_46 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m32_42 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61"];
m32_43 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="ExpressionFingerprintChain.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="63-65"];
m32_44 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="ExpressionFingerprintChain.cs", label="Assert.IsNotNull(checkedTimestamp)", span="67-67"];
m32_45 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="ExpressionFingerprintChain.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61"];
m32_47 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="ExpressionFingerprintChain.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="73-75"];
m32_50 [cluster="Unk.IsNull", file="ExpressionFingerprintChain.cs", label="Entry Unk.IsNull", span=""];
m32_67 [cluster="string.Format(string, object)", file="ExpressionFingerprintChain.cs", label="Entry string.Format(string, object)", span="0-0"];
m32_60 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", span="29-29"];
m32_58 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="ExpressionFingerprintChain.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="90-90"];
m32_56 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="ExpressionFingerprintChain.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="92-93"];
m32_51 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="81-81"];
m32_53 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="ExpressionFingerprintChain.cs", label="Assert.IsNotNull(fetchedTimestamp)", span="86-86"];
m32_63 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m32_54 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="ExpressionFingerprintChain.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="81-81"];
m32_52 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m32_62 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m32_66 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ExpressionFingerprintChain.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m32_55 [cluster="HttpRequestBase.LinkTo(string)", file="ExpressionFingerprintChain.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m32_57 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ExpressionFingerprintChain.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m32_59 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39"];
m32_69 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m32_64 [cluster="Unk.Write", file="ExpressionFingerprintChain.cs", label="Entry Unk.Write", span=""];
m32_65 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m32_68 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m32_70 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m32_71 [file="ExpressionFingerprintChain.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m33_104 [cluster="Hangfire.Storage.IMonitoringApi.FailedJobs(int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35"];
m33_110 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m33_100 [cluster="int.TryParse(string, out int)", file="FailedJobsPage.generated.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m33_102 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m33_0 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", span="46-46"];
m33_1 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="50-50"];
m33_2 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Layout = new LayoutPage(Strings.FailedJobsPage_Title)", span="61-61"];
m33_3 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="int from, perPage", span="63-63"];
m33_4 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="int.TryParse(Query(''from''), out from)", span="65-65"];
m33_5 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="int.TryParse(Query(''count''), out perPage)", span="66-66"];
m33_7 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="var pager = new Pager(from, perPage, monitor.FailedCount())", span="69-69"];
m33_6 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="var monitor = Storage.GetMonitoringApi()", span="68-68"];
m33_8 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="var failedJobs = monitor.FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="70-70"];
m33_14 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="101-101"];
m33_36 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(Html.PerPageSelector(pager))", span="229-229"];
m33_93 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(Html.Paginator(pager))", span="584-584"];
m33_9 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-3\''>\r\n        '')", span="76-76"];
m33_45 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="4: failedJobs", span="288-288"];
m33_10 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(Html.JobsSidebar())", span="81-81"];
m33_11 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''\r\n    </div>\r\n    <div class=\''col-md-9\''>\r\n        <h1 class=\''page-header\''>'')", span="86-86"];
m33_12 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Strings.FailedJobsPage_Title)", span="91-91"];
m33_13 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''</h1>\r\n\r\n'')", span="96-96"];
m33_15 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''            <div class=\''alert alert-success\''>\r\n               '')", span="107-107"];
m33_18 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''            <div class=\''alert alert-warning\''>\r\n                '')", span="129-129"];
m33_16 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Strings.FailedJobsPage_NoJobs)", span="112-112"];
m33_17 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="1: WriteLiteral(''\r\n            </div>\r\n'')", span="117-117"];
m33_19 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Html.Raw(Strings.FailedJobsPage_FailedJobsNotExpire_Warning_Html))", span="134-134"];
m33_20 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="1: WriteLiteral(''\r\n            </div>\r\n'')", span="139-139"];
m33_21 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="149-151"];
m33_22 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Url.To(''/jobs/failed/requeue''))", span="156-156"];
m33_23 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="161-161"];
m33_24 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Strings.Common_Enqueueing)", span="166-166"];
m33_25 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-repeat\''></span>\r\n                        '')", span="171-172"];
m33_26 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Strings.Common_RequeueJobs)", span="177-177"];
m33_27 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''\r\n                    </button>\r\n\r\n                    <button class=\''js-jobs-lis'' +\r\n''t-command btn btn-sm btn-default\''\r\n                            data-url=\'''')", span="182-183"];
m33_28 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Url.To(''/jobs/failed/delete''))", span="188-188"];
m33_29 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="193-193"];
m33_30 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Strings.Common_Deleting)", span="198-198"];
m33_31 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            data-confirm=\'''')", span="203-203"];
m33_32 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Strings.Common_DeleteConfirm)", span="208-208"];
m33_33 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''\''>\r\n                        <span class=\''glyphicon glyphicon-remove\''></span>\r\n   '' +\r\n''                     '')", span="213-214"];
m33_34 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Strings.Common_DeleteSelected)", span="219-219"];
m33_35 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''\r\n                    </button>\r\n\r\n                    '')", span="224-224"];
m33_37 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(@''\r\n                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="234-244"];
m33_38 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Strings.Common_Id)", span="249-249"];
m33_39 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                <th>'')", span="254-254"];
m33_40 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Strings.FailedJobsPage_Table_Failed)", span="259-259"];
m33_41 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                <th>'')", span="264-264"];
m33_42 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: Write(Strings.Common_Job)", span="269-269"];
m33_43 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="274-275"];
m33_44 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: var index = 0", span="280-280"];
m33_76 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(index == 0 ? Strings.Common_LessDetails : Strings.Common_MoreDetails)", span="474-474"];
m33_81 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: Write(index++ == 0 ? ''display: block;'' : null)", span="508-508"];
m33_46 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''                                <tr class=\''js-jobs-list-row '')", span="294-294"];
m33_92 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="2: WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n                '')", span="578-579"];
m33_47 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="2: Write(!job.Value.InFailedState ? ''obsolete-data'' : null)", span="299-299"];
m33_48 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral('' '')", span="304-304"];
m33_49 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: Write(job.Value.InFailedState ? ''hover'' : null)", span="309-309"];
m33_50 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''\''>\r\n                                    <td rowspan=\'''')", span="314-314"];
m33_51 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="3: Write(job.Value.InFailedState ? ''2'' : ''1'')", span="319-319"];
m33_52 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n'')", span="324-324"];
m33_53 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: job.Value.InFailedState", span="329-329"];
m33_54 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''                                            <input type=\''checkbox\'' class=\''js-jobs'' +\r\n''-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="335-336"];
m33_57 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="2: WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\'' rowspan=\'''')", span="356-357"];
m33_55 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="2: Write(job.Key)", span="341-341"];
m33_58 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="1: Write(job.Value.InFailedState ? ''2'' : ''1'')", span="362-362"];
m33_56 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''\'' />\r\n'')", span="346-346"];
m33_59 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''\''>\r\n                                        '')", span="367-367"];
m33_60 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: Write(Html.JobIdLink(job.Key))", span="372-372"];
m33_61 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="377-377"];
m33_62 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: !job.Value.InFailedState", span="382-382"];
m33_63 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''                                            <span title=\'''')", span="388-388"];
m33_66 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="3: WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\''>\r\n'')", span="408-409"];
m33_67 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: job.Value.FailedAt.HasValue", span="414-414"];
m33_64 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="1: Write(Strings.Common_JobStateChanged_Text)", span="393-393"];
m33_65 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="2: WriteLiteral(''\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="398-398"];
m33_68 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: Write(Html.RelativeTime(job.Value.FailedAt.Value))", span="422-422"];
m33_69 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d>\r\n                                        <div>\r\n                             '' +\r\n''               '')", span="435-437"];
m33_70 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: Write(Html.JobNameLink(job.Key, job.Value.Job))", span="442-442"];
m33_71 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="3: WriteLiteral(''\r\n                                        </div>\r\n'')", span="447-447"];
m33_72 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: !String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="452-452"];
m33_73 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''                                            <div style=\''color: #888;\''>\r\n         '' +\r\n''                                       '')", span="458-459"];
m33_78 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''                                    </td>\r\n                                </tr>\r'' +\r\n''\n'')", span="489-490"];
m33_74 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: Write(job.Value.Reason)", span="464-464"];
m33_79 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="1: job.Value.InFailedState", span="495-495"];
m33_75 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral('' <a class=\''expander\'' href=\''#\''>'')", span="469-469"];
m33_77 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''</a>\r\n                                            </div>\r\n'')", span="479-479"];
m33_80 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="2: WriteLiteral(''                                    <tr>\r\n                                       '' +\r\n'' <td colspan=\''2\'' class=\''failed-job-details\''>\r\n                                  '' +\r\n''          <div class=\''expandable\'' style=\'''')", span="501-503"];
m33_83 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: Write(job.Value.ExceptionType)", span="518-518"];
m33_82 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''\''>\r\n                                                <h4>'')", span="513-513"];
m33_84 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''</h4>\r\n                                                <p class=\''text-muted\''>\r\n  '' +\r\n''                                                  '')", span="523-524"];
m33_85 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: Write(job.Value.ExceptionMessage)", span="529-529"];
m33_86 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: WriteLiteral(''\r\n                                                </p>\r\n\r\n'')", span="534-534"];
m33_87 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="4: !String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="539-539"];
m33_88 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''                                                    <pre class=\''stack-trace\''><cod'' +\r\n''e>'')", span="545-546"];
m33_91 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=1, file="FailedJobsPage.generated.cs", label="0: WriteLiteral(''                                            </div>\r\n                             '' +\r\n''           </td>\r\n                                    </tr>\r\n'')", span="566-567"];
m33_89 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=red, community=0, file="FailedJobsPage.generated.cs", label="0: Write(Html.StackTrace(job.Value.ExceptionDetails))", span="551-551"];
m33_90 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''</code></pre>\r\n'')", span="556-556"];
m33_94 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="589-589"];
m33_95 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''    </div>\r\n</div>'')", span="599-599"];
m33_96 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", span="46-46"];
m33_103 [cluster="Hangfire.Storage.IMonitoringApi.FailedCount()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.IMonitoringApi.FailedCount()", span="41-41"];
m33_105 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m33_109 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m33_112 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m33_114 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250"];
m33_113 [cluster="string.IsNullOrEmpty(string)", file="FailedJobsPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m33_97 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m33_107 [cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87"];
m33_115 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m33_111 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m33_99 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m33_101 [cluster="Hangfire.JobStorage.GetMonitoringApi()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54"];
m33_106 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m33_108 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m33_98 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m33_116 [file="FailedJobsPage.generated.cs", label="Hangfire.Dashboard.Pages.FailedJobsPage", span=""];
m34_0 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs", label="Entry Hangfire.Dashboard.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m34_1 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs", label="Queue = queue", span="6-6"];
m34_2 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs", label="Exit Hangfire.Dashboard.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m34_3 [file="FetchedJobsPage.cs", label="Hangfire.Dashboard.Pages.FetchedJobsPage", span=""];
m35_26 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                        disabled=\''disabled\''>\r\n                    <span class='' +\r\n''\''glyphicon glyphicon-repeat\''></span>\r\n                    '')", span="182-183"];
m35_27 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="1: Write(Strings.Common_RequeueJobs)", span="188-188"];
m35_29 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Url.To(''/jobs/enqueued/delete''))", span="199-199"];
m35_30 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="1: WriteLiteral(''\''\r\n                        data-loading-text=\'''')", span="204-204"];
m35_31 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="0: Write(Strings.Common_Deleting)", span="209-209"];
m35_32 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                        data-confirm=\'''')", span="214-214"];
m35_34 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                        disabled=\''disabled\''>\r\n                    <span class='' +\r\n''\''glyphicon glyphicon-remove\''></span>\r\n                    '')", span="224-225"];
m35_35 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Strings.Common_DeleteSelected)", span="230-230"];
m35_36 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n                </button>\r\n\r\n                '')", span="235-235"];
m35_37 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Html.PerPageSelector(pager))", span="240-240"];
m35_39 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="1: Write(Strings.Common_Id)", span="260-260"];
m35_40 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                            <th class=\''min-width\''>'')", span="265-265"];
m35_41 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Strings.Common_State)", span="270-270"];
m35_42 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                            <th>'')", span="275-275"];
m35_28 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="1: WriteLiteral(''\r\n                </button>\r\n\r\n                <button class=\''js-jobs-list-comman'' +\r\n''d btn btn-sm btn-default\''\r\n                        data-url=\'''')", span="193-194"];
m35_33 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Strings.Common_DeleteConfirm)", span="219-219"];
m35_38 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="1: WriteLiteral(@''\r\n            </div>\r\n\r\n            <div class=''''table-responsive''''>\r\n                <table class=''''table''''>\r\n                    <thead>\r\n                        <tr>\r\n                            <th class=''''min-width''''>\r\n                                <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                            </th>\r\n                            <th class=''''min-width''''>'')", span="245-255"];
m35_43 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Strings.Common_Job)", span="280-280"];
m35_91 [cluster="Hangfire.Dashboard.UrlHelper.Queue(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.Queue(string)", span="68-68"];
m35_0 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", span="32-32"];
m35_16 [cluster="lambda expression", color=red, community=0, file="FetchedJobsPage.generated.cs", label="1: new JobFilter(f, JobFilterScope.Type, null)", span="44-44"];
m35_15 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="44-44"];
m35_17 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="44-44"];
m35_21 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", color=green, community=0, file="FetchedJobsPage.generated.cs", label="0: filterInfo.ElectStateFilters", span="50-50"];
m35_20 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="FetchedJobsPage.generated.cs", label="var filterInfo = GetFilters(context.Job)", span="49-49"];
m35_76 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''    </div>\r\n</div>'')", span="490-490"];
m35_23 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", color=green, community=0, file="FetchedJobsPage.generated.cs", label="4: Exit Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="47-47"];
m35_22 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="FetchedJobsPage.generated.cs", label="filter.OnStateElection(context)", span="52-52"];
m35_24 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", color=green, community=0, file="FetchedJobsPage.generated.cs", label="0: Entry Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", span="98-98"];
m35_25 [cluster="Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", span="30-30"];
m35_44 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", color=green, community=0, file="FetchedJobsPage.generated.cs", label="0: Entry Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="29-29"];
m35_45 [cluster="Hangfire.States.StateHandlerCollection.GetHandlers(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.States.StateHandlerCollection.GetHandlers(string)", span="50-50"];
m35_46 [cluster="Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="FetchedJobsPage.generated.cs", label="0: Entry Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="25-25"];
m35_47 [cluster="Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="36-36"];
m35_1 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="FetchedJobsPage.generated.cs", label="handlers == null", span="34-34"];
m35_2 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="FetchedJobsPage.generated.cs", label="throw new ArgumentNullException(''handlers'');", span="34-34"];
m35_4 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="FetchedJobsPage.generated.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", span="32-32"];
m35_5 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="int.TryParse(Query(''count''), out perPage)", span="73-73"];
m35_6 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m35_7 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="FetchedJobsPage.generated.cs", label="0: filters == null", span="42-42"];
m35_8 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="FetchedJobsPage.generated.cs", label="0: throw new ArgumentNullException(''filters'');", span="42-42"];
m35_9 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="FetchedJobsPage.generated.cs", label="0: _getFiltersThunk = md => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="44-44"];
m35_10 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="FetchedJobsPage.generated.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m35_11 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="44-44"];
m35_12 [cluster="lambda expression", color=red, community=0, file="FetchedJobsPage.generated.cs", label="0: filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="44-44"];
m35_13 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="44-44"];
m35_14 [cluster="Unk.Select", file="FetchedJobsPage.generated.cs", label="Entry Unk.Select", span=""];
m35_19 [cluster="Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.States.DefaultStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="47-47"];
m35_48 [cluster="Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="28-28"];
m35_49 [cluster="Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="24-24"];
m35_50 [cluster="Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="29-29"];
m35_52 [cluster="Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="27-27"];
m35_53 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", file="FetchedJobsPage.generated.cs", label="return new JobFilterInfo(_getFiltersThunk(job));", span="100-100"];
m35_54 [cluster="Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", file="FetchedJobsPage.generated.cs", label="Exit Hangfire.States.DefaultStateChangeProcess.GetFilters(Hangfire.Common.Job)", span="98-98"];
m35_55 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
m35_56 [cluster="System.Func<T, TResult>.Invoke(T)", file="FetchedJobsPage.generated.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m35_57 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Hangfire.States.DefaultStateChangeProcess", span=""];
m35_59 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                                    <td colspan=\''3\''><em>'')", span="371-371"];
m35_60 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Strings.Common_JobExpired)", span="376-376"];
m35_61 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''</em></td>\r\n'')", span="381-381"];
m35_62 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                                    <td class=\''min-width\''>\r\n                     '' +\r\n''                   '')", span="393-394"];
m35_63 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Html.StateLabel(job.Value.State))", span="399-399"];
m35_64 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n                                    </td>\r\n'')", span="404-404"];
m35_65 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                                    <td>\r\n                                       '' +\r\n'' '')", span="408-409"];
m35_66 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Html.JobNameLink(job.Key, job.Value.Job))", span="414-414"];
m35_67 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n                                    </td>\r\n'')", span="419-419"];
m35_68 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                                    <td class=\''align-right\''>\r\n'')", span="423-423"];
m35_70 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Html.RelativeTime(job.Value.FetchedAt.Value))", span="436-436"];
m35_71 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                                    </td>\r\n'')", span="449-449"];
m35_72 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                            </tr>\r\n'')", span="459-459"];
m35_73 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n   '' +\r\n''         '')", span="469-470"];
m35_74 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Html.Paginator(pager))", span="475-475"];
m35_75 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n        </div>\r\n'')", span="480-480"];
m35_18 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m35_3 [cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="FetchedJobsPage.generated.cs", label="_handlers = handlers", span="36-36"];
m35_51 [cluster="Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="26-26"];
m35_58 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m35_69 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="job.Value.FetchedAt.HasValue", span="428-428"];
m35_77 [cluster="Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Exit Hangfire.Dashboard.Pages.FetchedJobsPage.Execute()", span="52-52"];
m35_99 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m35_92 [cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m35_83 [cluster="Hangfire.JobStorage.GetMonitoringApi()", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54"];
m35_93 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m35_79 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m35_87 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m35_86 [cluster="Hangfire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", span="30-30"];
m35_90 [cluster="Hangfire.Dashboard.UrlHelper.LinkToQueues()", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.LinkToQueues()", span="63-63"];
m35_80 [cluster="string.ToUpperInvariant()", file="FetchedJobsPage.generated.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m35_78 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m35_81 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m35_85 [cluster="Hangfire.Storage.IMonitoringApi.FetchedCount(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40"];
m35_82 [cluster="int.TryParse(string, out int)", file="FetchedJobsPage.generated.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m35_84 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m35_89 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FetchedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m35_98 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m35_95 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m35_94 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m35_96 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125"];
m35_97 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m35_88 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="FetchedJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m35_100 [file="FetchedJobsPage.generated.cs", label="Hangfire.Dashboard.Pages.FetchedJobsPage", span=""];
m37_0 [cluster="Hangfire.GlobalConfiguration.GlobalConfiguration()", file="GlobalConfiguration.cs", label="Entry Hangfire.GlobalConfiguration.GlobalConfiguration()", span="22-22"];
m37_1 [cluster="Hangfire.GlobalConfiguration.GlobalConfiguration()", file="GlobalConfiguration.cs", label="Exit Hangfire.GlobalConfiguration.GlobalConfiguration()", span="22-22"];
m38_22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="50-52"];
m38_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="48-48"];
m38_24 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="231-231"];
m38_6 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="25-25"];
m38_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="25-25"];
m38_8 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="29-29"];
m38_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=0, file="GlobalStateHandlers.cs", label="1: var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="31-33"];
m38_10 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=0, file="GlobalStateHandlers.cs", label="0: _connection.EnlistTransaction(Transaction.Current)", span="35-35"];
m38_12 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="GlobalStateHandlers.cs", label="command(_connection)", span="39-39"];
m38_14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="GlobalStateHandlers.cs", label="return true;", span="45-45"];
m38_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="GlobalStateHandlers.cs", label=_commandQueue, span="37-37"];
m38_13 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="GlobalStateHandlers.cs", label="transaction.Complete()", span="42-42"];
m38_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="29-29"];
m38_16 [cluster="TransactionScope.cstr", file="GlobalStateHandlers.cs", label="Entry TransactionScope.cstr", span=""];
m38_58 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="95-97"];
m38_54 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="GlobalStateHandlers.cs", label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="91-93"];
m38_84 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="128-128"];
m38_85 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="GlobalStateHandlers.cs", label="AddToSet(key, value, 0.0)", span="130-130"];
m38_86 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="128-128"];
m38_17 [cluster="TransactionOptions.cstr", file="GlobalStateHandlers.cs", label="Entry TransactionOptions.cstr", span=""];
m38_100 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="154-154"];
m38_101 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="156-158"];
m38_102 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="154-154"];
m38_41 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="GlobalStateHandlers.cs", label=JobPerformanceException, span="118-118"];
m38_87 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="133-133"];
m38_88 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="GlobalStateHandlers.cs", label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="135-140"];
m38_89 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="142-144"];
m38_90 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="133-133"];
m38_66 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="107-107"];
m38_67 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="109-111"];
m38_68 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="107-107"];
m38_147 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="GlobalStateHandlers.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m38_47 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="GlobalStateHandlers.cs", label="var stateData = state.GetData(method)", span="74-74"];
m38_36 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="GlobalStateHandlers.cs", label="var result = process.Run(performContext, jobData.Job)", span="109-109"];
m38_37 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="GlobalStateHandlers.cs", label="duration.Stop()", span="110-110"];
m38_38 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="GlobalStateHandlers.cs", label="state = new SucceededState(result, (long) latency, duration.ElapsedMilliseconds)", span="112-112"];
m38_39 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="GlobalStateHandlers.cs", label=OperationCanceledException, span="114-114"];
m38_40 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="GlobalStateHandlers.cs", label="throw;", span="116-116"];
m38_112 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="168-168"];
m38_113 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="GlobalStateHandlers.cs", label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="170-173"];
m38_114 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="175-177"];
m38_115 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="168-168"];
m38_145 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="GlobalStateHandlers.cs", label="_commandQueue.Enqueue(action)", span="233-233"];
m38_146 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="231-231"];
m38_57 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="95-97"];
m38_56 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="89-89"];
m38_18 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="GlobalStateHandlers.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m38_19 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="GlobalStateHandlers.cs", label="Entry Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", span="71-71"];
m38_78 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="121-121"];
m38_79 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="123-125"];
m38_80 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="121-121"];
m38_72 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="114-114"];
m38_73 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="116-118"];
m38_74 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="114-114"];
m38_50 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="76-86"];
m38_20 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="GlobalStateHandlers.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m38_28 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="GlobalStateHandlers.cs", label="return;", span="85-85"];
m38_52 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="76-86"];
m38_21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="48-48"];
m38_94 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="147-147"];
m38_95 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="149-151"];
m38_96 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="147-147"];
m38_25 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="50-52"];
m38_26 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="50-52"];
m38_32 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="55-55"];
m38_33 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="57-59"];
m38_27 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="50-52"];
m38_45 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="65-67"];
m38_31 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="57-59"];
m38_30 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="55-55"];
m38_34 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="57-59"];
m38_29 [cluster="Unk.Execute", file="GlobalStateHandlers.cs", label="Entry Unk.Execute", span=""];
m38_42 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="72-72"];
m38_44 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state.StateName, data = JobHelper.ToJson(stateData), id = jobId })", span="65-67"];
m38_35 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="57-59"];
m38_43 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="65-67"];
m38_46 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="GlobalStateHandlers.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m38_106 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="161-161"];
m38_107 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="163-165"];
m38_108 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="161-161"];
m38_53 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="89-89"];
m38_139 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="224-224"];
m38_140 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="226-228"];
m38_141 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="224-224"];
m38_49 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="72-72"];
m38_142 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="226-228"];
m38_51 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="GlobalStateHandlers.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m38_59 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Hangfire.Server.Worker", span=""];
m38_64 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="102-104"];
m38_63 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="102-104"];
m38_65 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="102-104"];
m38_70 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="109-111"];
m38_69 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="109-111"];
m38_71 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="109-111"];
m38_76 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="116-118"];
m38_75 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="116-118"];
m38_77 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="116-118"];
m38_82 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="123-125"];
m38_81 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="123-125"];
m38_83 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="123-125"];
m38_92 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="142-144"];
m38_91 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="142-144"];
m38_93 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="142-144"];
m38_98 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="149-151"];
m38_97 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="149-151"];
m38_99 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="149-151"];
m38_104 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="156-158"];
m38_103 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="156-158"];
m38_105 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="156-158"];
m38_110 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="163-165"];
m38_109 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="163-165"];
m38_111 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="163-165"];
m38_117 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="175-177"];
m38_116 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="175-177"];
m38_118 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="175-177"];
m38_125 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="var affectedRows = x.Execute(updateSql, new { key })", span="193-193"];
m38_127 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="197-197"];
m38_124 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="191-199"];
m38_126 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="affectedRows == 0", span="195-195"];
m38_128 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="191-199"];
m38_135 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="var affectedRows = x.Execute(updateSql, new { key })", span="215-215"];
m38_137 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="219-219"];
m38_134 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Entry lambda expression", span="213-221"];
m38_136 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="affectedRows == 0", span="217-217"];
m38_138 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="213-221"];
m38_143 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="226-228"];
m38_144 [cluster="lambda expression", file="GlobalStateHandlers.cs", label="Exit lambda expression", span="226-228"];
m38_55 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="95-97"];
m38_129 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="202-202"];
m38_130 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="GlobalStateHandlers.cs", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="204-209"];
m38_132 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="GlobalStateHandlers.cs", label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="213-221"];
m38_131 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="GlobalStateHandlers.cs", label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="210-211"];
m38_133 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="202-202"];
m38_0 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="GlobalStateHandlers.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28"];
m38_1 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", color=green, community=0, file="GlobalStateHandlers.cs", label="0: context == null", span="30-30"];
m38_3 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="GlobalStateHandlers.cs", label="_context = context", span="32-32"];
m38_2 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", color=green, community=0, file="GlobalStateHandlers.cs", label="0: throw new ArgumentNullException(''context'');", span="30-30"];
m38_4 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="GlobalStateHandlers.cs", label="Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28"];
m38_119 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="180-180"];
m38_120 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="GlobalStateHandlers.cs", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="182-187"];
m38_122 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="GlobalStateHandlers.cs", label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="191-199"];
m38_121 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="GlobalStateHandlers.cs", label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="188-189"];
m38_123 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="180-180"];
m38_60 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="GlobalStateHandlers.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="100-100"];
m38_61 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="GlobalStateHandlers.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="102-104"];
m38_62 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="GlobalStateHandlers.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="100-100"];
m38_48 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="GlobalStateHandlers.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m38_148 [file="GlobalStateHandlers.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m38_149 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_150 [file="GlobalStateHandlers.cs", label="System.TimeSpan", span=""];
m38_151 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_152 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_153 [file="GlobalStateHandlers.cs", label="HangFire.Common.States.JobState", span=""];
m38_154 [file="GlobalStateHandlers.cs", label=stateData, span=""];
m38_155 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_156 [file="GlobalStateHandlers.cs", label="HangFire.Common.States.JobState", span=""];
m38_157 [file="GlobalStateHandlers.cs", label=stateData, span=""];
m38_158 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_159 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_160 [file="GlobalStateHandlers.cs", label=enqueueJobSql, span=""];
m38_161 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_162 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_163 [file="GlobalStateHandlers.cs", label="System.TimeSpan", span=""];
m38_164 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_165 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_166 [file="GlobalStateHandlers.cs", label="System.TimeSpan", span=""];
m38_167 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_168 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_169 [file="GlobalStateHandlers.cs", label=double, span=""];
m38_170 [file="GlobalStateHandlers.cs", label=addSql, span=""];
m38_171 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_172 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_173 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_174 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_175 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_176 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_177 [file="GlobalStateHandlers.cs", label=int, span=""];
m38_178 [file="GlobalStateHandlers.cs", label=int, span=""];
m38_179 [file="GlobalStateHandlers.cs", label=trimSql, span=""];
m38_180 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_181 [file="GlobalStateHandlers.cs", label=updateSql, span=""];
m38_182 [file="GlobalStateHandlers.cs", label=insertSql, span=""];
m38_183 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_184 [file="GlobalStateHandlers.cs", label=updateSql, span=""];
m38_185 [file="GlobalStateHandlers.cs", label=insertSql, span=""];
m38_186 [file="GlobalStateHandlers.cs", label=string, span=""];
m38_187 [file="GlobalStateHandlers.cs", label="System.TimeSpan", span=""];
m40_73 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="HashCodeCombiner.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="45-45"];
m40_63 [cluster="HangFire.RetryJobsFilter.RetryJobsFilter()", file="HashCodeCombiner.cs", label="Entry HangFire.RetryJobsFilter.RetryJobsFilter()", span="6-6"];
m40_20 [cluster="ConsoleSample.RecurringJob.Perform()", file="HashCodeCombiner.cs", label="Entry ConsoleSample.RecurringJob.Perform()", span="48-48"];
m40_21 [cluster="ConsoleSample.RecurringJob.Perform()", file="HashCodeCombiner.cs", label="Console.WriteLine(''Performing recurring task...'')", span="50-50"];
m40_22 [cluster="ConsoleSample.RecurringJob.Perform()", file="HashCodeCombiner.cs", label="Exit ConsoleSample.RecurringJob.Perform()", span="48-48"];
m40_23 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Entry ConsoleSample.Program.Main()", span="56-56"];
m40_24 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="int concurrency = Environment.ProcessorCount * 20", span="58-58"];
m40_25 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="LogManager.LogFactory = new ConsoleLogFactory()", span="59-59"];
m40_31 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="var server = new BackgroundJobServer(''qqq'') { WorkersCount = concurrency}", span="68-68"];
m40_26 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="RedisFactory.Port = 6379", span="61-61"];
m40_27 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="RedisFactory.Db = 3", span="62-62"];
m40_28 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="GlobalJobFilters.Filters.Add(new HistoryStatisticsFilter())", span="64-64"];
m40_29 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="GlobalJobFilters.Filters.Add(new RetryJobsFilter())", span="65-65"];
m40_30 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="GlobalJobFilters.Filters.Add(new RecurringJobsFilter())", span="66-66"];
m40_32 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="server.Start()", span="70-70"];
m40_33 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Console.WriteLine(''HangFire Server has been started. Press Ctrl+C to exit...'')", span="72-72"];
m40_34 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="var count = 1", span="74-74"];
m40_35 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label=true, span="76-76"];
m40_42 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Perform.Async<ConsoleJob>(new { Number = count++ })", span="92-92"];
m40_55 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Perform.In<ConsoleJob>(TimeSpan.FromSeconds(seconds), new { Number = count++ })", span="114-114"];
m40_36 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="var command = Console.ReadLine()", span="78-78"];
m40_37 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="80-80"];
m40_38 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="85-85"];
m40_39 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="var workCount = int.Parse(command.Substring(4))", span="89-89"];
m40_47 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="102-102"];
m40_48 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="var workCount = int.Parse(command.Substring(6))", span="104-104"];
m40_53 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="111-111"];
m40_54 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="var seconds = int.Parse(command.Substring(2))", span="113-113"];
m40_56 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="117-117"];
m40_40 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="var i = 0", span="90-90"];
m40_41 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="i < workCount", span="90-90"];
m40_43 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="i++", span="90-90"];
m40_44 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="94-94"];
m40_45 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label=Exception, span="96-96"];
m40_46 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Console.WriteLine(ex.Message)", span="98-98"];
m40_49 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="var i = 0", span="105-105"];
m40_50 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="i < workCount", span="105-105"];
m40_52 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="i++", span="105-105"];
m40_51 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Perform.Async<ErrorJob>(new { ArticleId = 2, Product = ''Casio Privia PX-850'' })", span="107-107"];
m40_57 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Perform.Async<RecurringJob>()", span="119-119"];
m40_58 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Console.WriteLine(''Recurring job added'')", span="120-120"];
m40_59 [cluster="ConsoleSample.Program.Main()", file="HashCodeCombiner.cs", label="Exit ConsoleSample.Program.Main()", span="56-56"];
m40_10 [cluster="System.Exception.Exception()", file="HashCodeCombiner.cs", label="Entry System.Exception.Exception()", span="0-0"];
m40_74 [cluster="HangFire.Perform.Async<TJob>()", file="HashCodeCombiner.cs", label="Entry HangFire.Perform.Async<TJob>()", span="11-11"];
m40_72 [cluster="HangFire.Perform.Async<TJob>(object)", file="HashCodeCombiner.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="18-18"];
m40_19 [cluster="System.IO.FileLoadException.FileLoadException()", file="HashCodeCombiner.cs", label="Entry System.IO.FileLoadException.FileLoadException()", span="0-0"];
m40_71 [cluster="int.Parse(string)", file="HashCodeCombiner.cs", label="Entry int.Parse(string)", span="0-0"];
m40_11 [cluster="System.TimeSpan.FromSeconds(double)", file="HashCodeCombiner.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m40_65 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="HashCodeCombiner.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="14-14"];
m40_61 [cluster="HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", file="HashCodeCombiner.cs", label="Entry HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", span="6-6"];
m40_0 [cluster="ConsoleSample.ConsoleJob.Perform()", file="HashCodeCombiner.cs", label="Entry ConsoleSample.ConsoleJob.Perform()", span="17-17"];
m40_1 [cluster="ConsoleSample.ConsoleJob.Perform()", file="HashCodeCombiner.cs", label="int time", span="19-19"];
m40_2 [cluster="ConsoleSample.ConsoleJob.Perform()", file="HashCodeCombiner.cs", label=_random, span="20-20"];
m40_3 [cluster="ConsoleSample.ConsoleJob.Perform()", file="HashCodeCombiner.cs", label="time = _random.Next(10)", span="22-22"];
m40_4 [cluster="ConsoleSample.ConsoleJob.Perform()", file="HashCodeCombiner.cs", label="time < 5", span="25-25"];
m40_6 [cluster="ConsoleSample.ConsoleJob.Perform()", file="HashCodeCombiner.cs", label="Thread.Sleep(TimeSpan.FromSeconds(5 + time))", span="30-30"];
m40_5 [cluster="ConsoleSample.ConsoleJob.Perform()", file="HashCodeCombiner.cs", label="throw new Exception();", span="27-27"];
m40_7 [cluster="ConsoleSample.ConsoleJob.Perform()", file="HashCodeCombiner.cs", label="Console.WriteLine(''Finished task: '' + Number)", span="31-31"];
m40_8 [cluster="ConsoleSample.ConsoleJob.Perform()", file="HashCodeCombiner.cs", label="Exit ConsoleSample.ConsoleJob.Perform()", span="17-17"];
m40_12 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="HashCodeCombiner.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m40_69 [cluster="string.StartsWith(string, System.StringComparison)", file="HashCodeCombiner.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m40_18 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="HashCodeCombiner.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m40_64 [cluster="HangFire.RecurringJobsFilter.RecurringJobsFilter()", file="HashCodeCombiner.cs", label="Entry HangFire.RecurringJobsFilter.RecurringJobsFilter()", span="18-18"];
m40_67 [cluster="System.Console.ReadLine()", file="HashCodeCombiner.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m40_9 [cluster="System.Random.Next(int)", file="HashCodeCombiner.cs", label="Entry System.Random.Next(int)", span="0-0"];
m40_68 [cluster="string.Equals(string, System.StringComparison)", file="HashCodeCombiner.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m40_66 [cluster="HangFire.BackgroundJobServer.Start()", file="HashCodeCombiner.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="51-51"];
m40_62 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="HashCodeCombiner.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m40_13 [cluster="System.Console.WriteLine(string)", file="HashCodeCombiner.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m40_14 [cluster="ConsoleSample.ErrorJob.Perform()", file="HashCodeCombiner.cs", label="Entry ConsoleSample.ErrorJob.Perform()", span="38-38"];
m40_15 [cluster="ConsoleSample.ErrorJob.Perform()", file="HashCodeCombiner.cs", label="Console.WriteLine(''Beginning error task...'')", span="40-40"];
m40_16 [cluster="ConsoleSample.ErrorJob.Perform()", file="HashCodeCombiner.cs", label="throw new InvalidOperationException(null, new FileLoadException());", span="41-41"];
m40_17 [cluster="ConsoleSample.ErrorJob.Perform()", file="HashCodeCombiner.cs", label="Exit ConsoleSample.ErrorJob.Perform()", span="38-38"];
m40_60 [cluster="ConsoleLogFactory.cstr", file="HashCodeCombiner.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m40_70 [cluster="string.Substring(int)", file="HashCodeCombiner.cs", label="Entry string.Substring(int)", span="0-0"];
m40_75 [file="HashCodeCombiner.cs", label="ConsoleSample.ConsoleJob", span=""];
m41_86 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="HtmlHelper.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m41_52 [cluster="Hangfire.Dashboard.RazorPage.ToString()", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.RazorPage.ToString()", span="68-68"];
m41_18 [cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", span="51-51"];
m41_19 [cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", color=red, community=0, file="HtmlHelper.cs", label="0: items == null", span="53-53"];
m41_20 [cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", color=red, community=0, file="HtmlHelper.cs", label="0: throw new ArgumentNullException(nameof(items));", span="53-53"];
m41_21 [cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", file="HtmlHelper.cs", label="return RenderPartial(new SidebarMenu(items));", span="54-54"];
m41_22 [cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", span="51-51"];
m41_56 [cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", span="92-92"];
m41_57 [cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="HtmlHelper.cs", label="Guid guid", span="94-94"];
m41_58 [cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", color=green, community=0, file="HtmlHelper.cs", label="0: return new NonEscapedString(Guid.TryParse(jobId, out guid)\r\n                ? (shorten ? jobId.Substring(0, 8) + ''…'' : jobId)\r\n                : $''#{jobId}'');", span="95-97"];
m41_59 [cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", span="92-92"];
m41_119 [cluster="System.Text.StringBuilder.Append(int)", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.Append(int)", span="0-0"];
m41_130 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218"];
m41_131 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", color=red, community=0, file="HtmlHelper.cs", label="0: var label = queue != null \r\n                ? $''<a class=\''text-uppercase\'' href=\''{_page.Url.Queue(queue)}\''>{queue}</a>'' \r\n                : $''<span class=\''label label-danger\''><i>{Strings.Common_Unknown}</i></span>''", span="220-222"];
m41_132 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", color=green, community=0, file="HtmlHelper.cs", label="0: return new NonEscapedString(label);", span="224-224"];
m41_133 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218"];
m41_134 [cluster="Hangfire.Dashboard.UrlHelper.Queue(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.UrlHelper.Queue(string)", span="68-68"];
m41_35 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m41_36 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", color=red, community=0, file="HtmlHelper.cs", label="0: pager == null", span="71-71"];
m41_37 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", color=red, community=0, file="HtmlHelper.cs", label="0: throw new ArgumentNullException(nameof(pager));", span="71-71"];
m41_38 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="HtmlHelper.cs", label="return RenderPartial(new Paginator(pager));", span="72-72"];
m41_39 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m41_73 [cluster="string.IsNullOrWhiteSpace(string)", file="HtmlHelper.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m41_117 [cluster="System.Text.StringBuilder.Append(string)", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m41_126 [cluster="Unk.Join", file="HtmlHelper.cs", label="Entry Unk.Join", span=""];
m41_7 [cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m41_8 [cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="HtmlHelper.cs", label="0: items == null", span="42-42"];
m41_9 [cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="HtmlHelper.cs", label="0: throw new ArgumentNullException(nameof(items));", span="42-42"];
m41_10 [cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="return RenderPartial(new Breadcrumbs(title, items));", span="43-43"];
m41_11 [cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m41_74 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m41_122 [cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m41_123 [cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="HtmlHelper.cs", label="0: return String.Join('', '', properties.Select(x => $''{x.Key}: \''{x.Value}\''''));", span="215-215"];
m41_124 [cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m41_17 [cluster="Hangfire.Dashboard.Pages.SidebarMenu.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.Pages.SidebarMenu.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", span="24-24"];
m41_78 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58"];
m41_14 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m41_15 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="HtmlHelper.cs", label="return RenderPartial(new SidebarMenu(JobsSidebarMenu.Items));", span="48-48"];
m41_16 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m41_116 [cluster="System.Text.StringBuilder.StringBuilder()", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m41_143 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250"];
m41_144 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="HtmlHelper.cs", label="return new NonEscapedString(StackTraceFormatter.FormatHtml(stackTrace, StackTraceHtmlFragments));", span="252-252"];
m41_145 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250"];
m41_149 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="HtmlHelper.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m41_82 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255"];
m41_147 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="HtmlHelper.cs", label="return WebUtility.HtmlEncode(text);", span="257-257"];
m41_148 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255"];
m41_121 [cluster="System.Text.StringBuilder.ToString()", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m41_53 [cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87"];
m41_54 [cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="HtmlHelper.cs", label="return new NonEscapedString(value);", span="89-89"];
m41_55 [cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87"];
m41_0 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", span="34-34"];
m41_1 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", color=red, community=0, file="HtmlHelper.cs", label="0: page == null", span="36-36"];
m41_2 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", color=red, community=0, file="HtmlHelper.cs", label="0: throw new ArgumentNullException(nameof(page));", span="36-36"];
m41_3 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="HtmlHelper.cs", label="_page = page", span="37-37"];
m41_4 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", span="34-34"];
m41_23 [cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="57-57"];
m41_24 [cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", color=red, community=0, file="HtmlHelper.cs", label="0: metric == null", span="59-59"];
m41_25 [cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", color=red, community=0, file="HtmlHelper.cs", label="0: throw new ArgumentNullException(nameof(metric));", span="59-59"];
m41_26 [cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="HtmlHelper.cs", label="return RenderPartial(new BlockMetric(metric));", span="60-60"];
m41_27 [cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="57-57"];
m41_87 [cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150"];
m41_88 [cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", color=red, community=0, file="HtmlHelper.cs", label="0: return Raw($''<span data-moment-title=\''{JobHelper.ToTimestamp(time)}\''>{value}</span>'');", span="152-152"];
m41_89 [cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150"];
m41_6 [cluster="Unk.nameof", file="HtmlHelper.cs", label="Entry Unk.nameof", span=""];
m41_61 [cluster="string.Substring(int, int)", file="HtmlHelper.cs", label="Entry string.Substring(int, int)", span="0-0"];
m41_135 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227"];
m41_136 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", color=green, community=0, file="HtmlHelper.cs", label="0: var parts = serverId.Split(':')", span="229-229"];
m41_137 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", color=green, community=0, file="HtmlHelper.cs", label="0: var shortenedId = parts.Length > 1\r\n                ? String.Join('':'', parts.Take(parts.Length - 1))\r\n                : serverId", span="230-232"];
m41_138 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", color=red, community=1, file="HtmlHelper.cs", label="0: return new NonEscapedString(\r\n                $''<span class=\''labe label-defult text-uppercase\'' title=\''{serverId}\''>{shortenedId}</span>'');", span="234-235"];
m41_139 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227"];
m41_62 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="100-100"];
m41_63 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", color=green, community=0, file="HtmlHelper.cs", label="0: job == null", span="102-102"];
m41_65 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", color=red, community=0, file="HtmlHelper.cs", label="1: return job.ToString();", span="122-122"];
m41_64 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", color=red, community=0, file="HtmlHelper.cs", label="0: return Strings.Common_CannotFindTargetMethod;", span="104-104"];
m41_66 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="100-100"];
m41_142 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="HtmlHelper.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m41_90 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155"];
m41_91 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration == null", span="157-157"];
m41_94 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label=displaySign, span="160-160"];
m41_95 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", span="162-162"];
m41_96 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration = duration.Value.Duration()", span="165-165"];
m41_92 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="return null;", span="157-157"];
m41_93 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="var builder = new StringBuilder()", span="159-159"];
m41_98 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=red, community=0, file="HtmlHelper.cs", label="0: builder.Append($''{duration.Value.Days}d '')", span="169-169"];
m41_100 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=red, community=0, file="HtmlHelper.cs", label="0: builder.Append($''{duration.Value.Hours}h '')", span="174-174"];
m41_102 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=red, community=0, file="HtmlHelper.cs", label="1: builder.Append($''{duration.Value.Minutes}m '')", span="179-179"];
m41_105 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="builder.Append(duration.Value.Seconds)", span="186-186"];
m41_107 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=red, community=0, file="HtmlHelper.cs", label="0: builder.Append($''.{duration.Value.Milliseconds}'')", span="189-189"];
m41_108 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="builder.Append(''s '')", span="192-192"];
m41_110 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=red, community=0, file="HtmlHelper.cs", label="0: builder.Append($''{duration.Value.Milliseconds}ms '')", span="198-198"];
m41_111 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="builder.Length <= 1", span="203-203"];
m41_112 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="builder.Append('' <1ms '')", span="205-205"];
m41_113 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="builder.Remove(builder.Length - 1, 1)", span="208-208"];
m41_114 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="return builder.ToString();", span="210-210"];
m41_97 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.Days > 0", span="167-167"];
m41_99 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.Hours > 0", span="172-172"];
m41_101 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.Minutes > 0", span="177-177"];
m41_103 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.TotalHours < 1", span="182-182"];
m41_104 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.Seconds > 0", span="184-184"];
m41_106 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.Milliseconds > 0", span="187-187"];
m41_109 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.Milliseconds > 0", span="196-196"];
m41_115 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155"];
m41_141 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="HtmlHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m41_60 [cluster="System.Guid.TryParse(string, out System.Guid)", file="HtmlHelper.cs", label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0"];
m41_12 [cluster="Hangfire.Dashboard.Pages.Breadcrumbs.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.Pages.Breadcrumbs.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="6-6"];
m41_40 [cluster="Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", span="6-6"];
m41_29 [cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="63-63"];
m41_30 [cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", color=red, community=0, file="HtmlHelper.cs", label="0: metric == null", span="65-65"];
m41_31 [cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", color=red, community=0, file="HtmlHelper.cs", label="0: throw new ArgumentNullException(nameof(metric));", span="65-65"];
m41_32 [cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="HtmlHelper.cs", label="return RenderPartial(new InlineMetric(metric));", span="66-66"];
m41_33 [cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="63-63"];
m41_83 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m41_84 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", color=green, community=0, file="HtmlHelper.cs", label="2: return Raw($''<span data-moment=\''{JobHelper.ToTimestamp(value)}\''>{value}</span>'');", span="147-147"];
m41_85 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m41_28 [cluster="Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4"];
m41_118 [cluster="System.TimeSpan.Duration()", file="HtmlHelper.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m41_51 [cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22"];
m41_127 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="215-215"];
m41_128 [cluster="lambda expression", color=red, community=0, file="HtmlHelper.cs", label="0: $''{x.Key}: \''{x.Value}\''''", span="215-215"];
m41_129 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="215-215"];
m41_125 [cluster="Unk.Select", file="HtmlHelper.cs", label="Entry Unk.Select", span=""];
m41_140 [cluster="string.Split(params char[])", file="HtmlHelper.cs", label="Entry string.Split(params char[])", span="0-0"];
m41_68 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125"];
m41_69 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", color=green, community=0, file="HtmlHelper.cs", label="0: String.IsNullOrWhiteSpace(stateName)", span="127-127"];
m41_71 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", color=green, community=0, file="HtmlHelper.cs", label="0: return Raw($''<span class=\''label label-default\'' style=\''background-color: {JobHistoryRenderer.GetForegroundStateColor(stateName)};\''>{stateName}</span>'');", span="132-132"];
m41_70 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", color=red, community=0, file="HtmlHelper.cs", label="0: return Raw($''<em>{Strings.Common_NoState}</em>'');", span="129-129"];
m41_72 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125"];
m41_41 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m41_42 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", color=red, community=0, file="HtmlHelper.cs", label="0: pager == null", span="77-77"];
m41_43 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", color=red, community=0, file="HtmlHelper.cs", label="0: throw new ArgumentNullException(nameof(pager));", span="77-77"];
m41_44 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="HtmlHelper.cs", label="return RenderPartial(new PerPageSelector(pager));", span="78-78"];
m41_45 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m41_75 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m41_76 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", color=red, community=0, file="HtmlHelper.cs", label="0: return Raw($''<a href=\''{_page.Url.JobDetails(jobId)}\''>{JobId(jobId)}</a>'');", span="137-137"];
m41_77 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m41_79 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m41_80 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", color=red, community=0, file="HtmlHelper.cs", label="2: return Raw($''<a class=\''job-method\'' href=\''{_page.Url.JobDetails(jobId)}\''>{HtmlEncode(JobName(job))}</a>'');", span="142-142"];
m41_81 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m41_50 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="74-74"];
m41_67 [cluster="Hangfire.Common.Job.ToString()", file="HtmlHelper.cs", label="Entry Hangfire.Common.Job.ToString()", span="179-179"];
m41_146 [cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="HtmlHelper.cs", label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77"];
m41_120 [cluster="System.Text.StringBuilder.Remove(int, int)", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m41_34 [cluster="Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4"];
m41_13 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81"];
m41_47 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="HtmlHelper.cs", label="partialPage.Assign(_page)", span="83-83"];
m41_48 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="HtmlHelper.cs", label="return new NonEscapedString(partialPage.ToString());", span="84-84"];
m41_49 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="HtmlHelper.cs", label="Exit Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81"];
m41_46 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", file="HtmlHelper.cs", label="Entry Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", span="6-6"];
m41_150 [file="HtmlHelper.cs", label="Hangfire.Dashboard.HtmlHelper", span=""];
m42_0 [cluster="Hangfire.Dashboard.IDashboardDispatcher.Dispatch(Hangfire.Dashboard.DashboardContext)", file="IDashboardDispatcher.cs", label="Entry Hangfire.Dashboard.IDashboardDispatcher.Dispatch(Hangfire.Dashboard.DashboardContext)", span="23-23"];
m42_1 [cluster="Hangfire.Dashboard.IDashboardDispatcher.Dispatch(Hangfire.Dashboard.DashboardContext)", file="IDashboardDispatcher.cs", label="Exit Hangfire.Dashboard.IDashboardDispatcher.Dispatch(Hangfire.Dashboard.DashboardContext)", span="23-23"];
m43_39 [cluster="HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", span="151-151"];
m43_21 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m43_51 [cluster="System.Threading.Thread.Join()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m43_0 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m43_1 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="InfiniteLoopComponentFacts.cs", label="_storage = storage", span="36-36"];
m43_2 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="InfiniteLoopComponentFacts.cs", label="_pollInterval = pollInterval", span="37-37"];
m43_3 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m43_17 [cluster="HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", span="4-4"];
m43_38 [cluster="Unk.Info", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Info", span=""];
m43_41 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m43_16 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m43_18 [cluster="string.IsNullOrEmpty(string)", file="InfiniteLoopComponentFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m43_22 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="65-65"];
m43_23 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="Logger.Info(''Schedule poller has been started.'')", span="69-69"];
m43_24 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="int enqueued = 0", span="71-71"];
m43_25 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label=true, span="73-73"];
m43_29 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="enqueued++", span="85-85"];
m43_30 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="enqueued != 0", span="89-89"];
m43_31 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', enqueued)", span="91-91"];
m43_26 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="var wasEnqueued = false", span="75-75"];
m43_34 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="Logger.Info(''Schedule poller has been stopped.'')", span="101-101"];
m43_27 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="JobServer.RetryOnException(\r\n                        () =>\r\n                        {\r\n                            wasEnqueued = EnqueueNextScheduledJob();\r\n                        }, _cts.Token.WaitHandle)", span="77-81"];
m43_28 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="wasEnqueued && !_cts.IsCancellationRequested", span="83-83"];
m43_33 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="_cts.Token.WaitHandle.WaitOne(_pollInterval)", span="95-95"];
m43_32 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="enqueued = 0", span="92-92"];
m43_35 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label=Exception, span="103-103"];
m43_36 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="Logger.Fatal(\r\n                    ''Unexpected exception caught in the schedule poller. Scheduled jobs will not be added to their queues.'',\r\n                    ex)", span="105-107"];
m43_37 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="65-65"];
m43_40 [cluster="Unk.InfoFormat", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.InfoFormat", span=""];
m43_46 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="111-111"];
m43_47 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="InfiniteLoopComponentFacts.cs", label="_cts.Cancel()", span="113-113"];
m43_48 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="InfiniteLoopComponentFacts.cs", label="thread.Join()", span="114-114"];
m43_49 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="111-111"];
m43_42 [cluster="Unk.Fatal", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Fatal", span=""];
m43_4 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", span="40-40"];
m43_5 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="var connection = _storage.GetConnection()", span="42-42"];
m43_6 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="44-44"];
m43_7 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="var jobId = connection.Sets\r\n                    .GetFirstByLowestScore(''schedule'', 0, timestamp)", span="47-48"];
m43_10 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="var stateMachine = new StateMachine(connection)", span="55-55"];
m43_8 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="String.IsNullOrEmpty(jobId)", span="50-50"];
m43_12 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="stateMachine.ChangeState(jobId, enqueuedState, ScheduledState.Name)", span="58-58"];
m43_9 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="return false;", span="52-52"];
m43_11 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="var enqueuedState = new EnqueuedState(''Enqueued by the schedule poller'')", span="56-56"];
m43_13 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="return true;", span="60-60"];
m43_14 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", span="40-40"];
m43_50 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m43_43 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="78-81"];
m43_44 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="wasEnqueued = EnqueueNextScheduledJob()", span="80-80"];
m43_45 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="78-81"];
m43_19 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m43_20 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="31-31"];
m43_15 [cluster="HangFire.JobStorage.GetConnection()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.JobStorage.GetConnection()", span="45-45"];
m43_52 [file="InfiniteLoopComponentFacts.cs", label="HangFire.Server.Components.SchedulePoller", span=""];
m44_0 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="InvocationData.cs", label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="33-33"];
m44_1 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="InvocationData.cs", label="Exit Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="33-33"];
m45_0 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="IRecurringJobManager.cs", label="Entry Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
m45_1 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="IRecurringJobManager.cs", label="Exit Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
m45_4 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="IRecurringJobManager.cs", label="Entry Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
m45_5 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="IRecurringJobManager.cs", label="Exit Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
m45_2 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="IRecurringJobManager.cs", label="Entry Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
m45_3 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="IRecurringJobManager.cs", label="Exit Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
m46_32 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="Job.Obsolete.cs", label="client == null", span="135-135"];
m46_210 [cluster="System.Collections.Generic.List<T>.List()", file="Job.Obsolete.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m46_55 [cluster="Unk.TrueForAll", file="Job.Obsolete.cs", label="Entry Unk.TrueForAll", span=""];
m46_56 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="Job.Obsolete.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m46_57 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="Job.Obsolete.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m46_49 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="72-72"];
m46_50 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="Job.Obsolete.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m46_52 [cluster="Unk.Format", file="Job.Obsolete.cs", label="Entry Unk.Format", span=""];
m46_51 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Job.Obsolete.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m46_53 [cluster="Unk.GetValuesFromHash", file="Job.Obsolete.cs", label="Entry Unk.GetValuesFromHash", span=""];
m46_13 [cluster="HangFire.Web.JobStorage.FailedCount()", file="Job.Obsolete.cs", label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="32-32"];
m46_214 [cluster="Unk.TryParse", file="Job.Obsolete.cs", label="Entry Unk.TryParse", span=""];
m46_20 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="Job.Obsolete.cs", label=Redis, span="47-47"];
m46_21 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=green, community=0, file="Job.Obsolete.cs", label="0: var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="49-52"];
m46_23 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=red, community=0, file="Job.Obsolete.cs", label="1: Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="44-44"];
m46_22 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="Job.Obsolete.cs", label="return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="54-68"];
m46_24 [cluster="Unk.GetRangeFromSortedSet", file="Job.Obsolete.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m46_26 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="Job.Obsolete.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="111-111"];
m46_39 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", color=red, community=0, file="Job.Obsolete.cs", label="1: return client.Create(Job.FromExpression(methodCall), state);", span="155-155"];
m46_46 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", color=green, community=0, file="Job.Obsolete.cs", label="1: return client.Create(Job.FromExpression(methodCall), state);", span="175-175"];
m46_43 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="168-168"];
m46_44 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="client == null", span="173-173"];
m46_45 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="throw new ArgumentNullException(''client'');", span="173-173"];
m46_47 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="168-168"];
m46_41 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.Obsolete.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227"];
m46_42 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="Job.Obsolete.cs", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="65-65"];
m46_48 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="Job.Obsolete.cs", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="281-281"];
m46_40 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="148-148"];
m46_34 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="Job.Obsolete.cs", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="137-137"];
m46_64 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="93-93"];
m46_19 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="44-44"];
m46_282 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="Job.Obsolete.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m46_65 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="111-111"];
m46_66 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="Job.Obsolete.cs", label=Redis, span="113-113"];
m46_67 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="Job.Obsolete.cs", label="return GetTimelineStats(Redis, ''succeeded'');", span="115-115"];
m46_25 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="Job.Obsolete.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="81-81"];
m46_27 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="Job.Obsolete.cs", label="client == null", span="116-116"];
m46_256 [cluster="KeyValuePair<string, T>.cstr", file="Job.Obsolete.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m46_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m46_1 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="Job.Obsolete.cs", label=Redis, span="14-14"];
m46_3 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m46_2 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="Job.Obsolete.cs", label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16"];
m46_4 [cluster="Unk.GetSortedSetCount", file="Job.Obsolete.cs", label="Entry Unk.GetSortedSetCount", span=""];
m46_129 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="Job.Obsolete.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m46_7 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="Job.Obsolete.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24"];
m46_283 [cluster="Unk.CreatePipeline", file="Job.Obsolete.cs", label="Entry Unk.CreatePipeline", span=""];
m46_54 [cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="Job.Obsolete.cs", label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="96-96"];
m46_247 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="414-414"];
m46_248 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Job.Obsolete.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = redis.GetValuesFromHash(String.Format(''hangfire:job:{0}'', x), properties),\r\n                    State = redis.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', x), stateProperties)\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="421-431"];
m46_249 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="414-414"];
m46_178 [cluster="Unk.ContainsKey", file="Job.Obsolete.cs", label="Entry Unk.ContainsKey", span=""];
m46_77 [cluster="HangFire.Web.JobStorage.Servers()", file="Job.Obsolete.cs", label="var result = new List<ServerDto>(serverNames.Count)", span="132-132"];
m46_82 [cluster="HangFire.Web.JobStorage.Servers()", file="Job.Obsolete.cs", label="return result;", span="150-150"];
m46_83 [cluster="HangFire.Web.JobStorage.Servers()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="127-127"];
m46_155 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="Job.Obsolete.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m46_257 [cluster="Unk.selector", file="Job.Obsolete.cs", label="Entry Unk.selector", span=""];
m46_59 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="Job.Obsolete.cs", label="client == null", span="251-251"];
m46_141 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="353-353"];
m46_195 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="dates.Add(endDate)", span="360-360"];
m46_191 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var endDate = DateTime.UtcNow", span="356-356"];
m46_192 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var dates = new List<DateTime>()", span="357-357"];
m46_194 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="i < 24", span="358-358"];
m46_196 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="endDate = endDate.AddHours(-1)", span="361-361"];
m46_200 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var result = new Dictionary<DateTime, long>()", span="367-367"];
m46_193 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var i = 0", span="358-358"];
m46_198 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="364-364"];
m46_202 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="i < dates.Count", span="368-368"];
m46_206 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="result.Add(dates[i], value)", span="376-376"];
m46_197 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="i++", span="358-358"];
m46_199 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="365-365"];
m46_201 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var i = 0", span="368-368"];
m46_208 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="return result;", span="379-379"];
m46_207 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="i++", span="368-368"];
m46_203 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="long value", span="370-370"];
m46_204 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="371-371"];
m46_205 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="value = 0", span="373-373"];
m46_209 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="353-353"];
m46_87 [cluster="Unk.GetAllItemsFromList", file="Job.Obsolete.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m46_100 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="168-178"];
m46_102 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="182-182"];
m46_103 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", color=green, community=0, file="Job.Obsolete.cs", label="1: Redis", span="184-184"];
m46_101 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="Job.Obsolete.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m46_104 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="Job.Obsolete.cs", label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from, \r\n                    from + count - 1)", span="186-189"];
m46_88 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="Job.Obsolete.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="326-326"];
m46_179 [cluster="Unk.Where", file="Job.Obsolete.cs", label="Entry Unk.Where", span=""];
m46_157 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="307-307"];
m46_160 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Job.Obsolete.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="312-312"];
m46_159 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Job.Obsolete.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="311-311"];
m46_161 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Job.Obsolete.cs", label="String.IsNullOrEmpty(queue)", span="314-314"];
m46_163 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Job.Obsolete.cs", label="return JobState.Apply(\r\n                    Redis, \r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="319-322"];
m46_158 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Job.Obsolete.cs", label=Redis, span="309-309"];
m46_162 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Job.Obsolete.cs", label="return false;", span="316-316"];
m46_164 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="307-307"];
m46_125 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="Job.Obsolete.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m46_240 [cluster="System.DateTime.AddDays(double)", file="Job.Obsolete.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m46_78 [cluster="HangFire.Web.JobStorage.Servers()", file="Job.Obsolete.cs", label=serverNames, span="133-133"];
m46_79 [cluster="HangFire.Web.JobStorage.Servers()", file="Job.Obsolete.cs", label="var server = Redis.GetAllEntriesFromHash(\r\n                        String.Format(''hangfire:server:{0}'', serverName))", span="135-136"];
m46_80 [cluster="HangFire.Web.JobStorage.Servers()", file="Job.Obsolete.cs", label="var queues = Redis.GetAllItemsFromList(\r\n                        String.Format(''hangfire:server:{0}:queues'', serverName))", span="138-139"];
m46_241 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="395-395"];
m46_62 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="Job.Obsolete.cs", label="return client.ChangeState(jobId, state, fromState);", span="254-254"];
m46_98 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="344-344"];
m46_99 [cluster="Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", color=green, community=0, file="Job.Obsolete.cs", label="1: Entry Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="79-79"];
m46_108 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="196-203"];
m46_28 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="Job.Obsolete.cs", label="throw new ArgumentNullException(''client'');", span="116-116"];
m46_36 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="148-148"];
m46_254 [cluster="lambda expression", file="Job.Obsolete.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="428-430"];
m46_63 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="246-246"];
m46_316 [cluster="lambda expression", file="Job.Obsolete.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="470-470"];
m46_29 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="Job.Obsolete.cs", label="return client.Create(methodCall, new ScheduledState(delay));", span="118-118"];
m46_109 [cluster="lambda expression", file="Job.Obsolete.cs", label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="196-203"];
m46_127 [cluster="lambda expression", file="Job.Obsolete.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="224-230"];
m46_135 [cluster="lambda expression", file="Job.Obsolete.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Type = job[0],\r\n                    Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="261-267"];
m46_110 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="196-203"];
m46_300 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="461-461"];
m46_306 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="465-465"];
m46_319 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="473-473"];
m46_30 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="111-111"];
m46_38 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="throw new ArgumentNullException(''client'');", span="153-153"];
m46_37 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="client == null", span="153-153"];
m46_245 [cluster="lambda expression", file="Job.Obsolete.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="396-396"];
m46_325 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="480-480"];
m46_251 [cluster="lambda expression", file="Job.Obsolete.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = redis.GetValuesFromHash(String.Format(''hangfire:job:{0}'', x), properties),\r\n                    State = redis.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', x), stateProperties)\r\n                }", span="422-427"];
m46_253 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="428-430"];
m46_255 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="428-430"];
m46_258 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="430-430"];
m46_181 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="347-347"];
m46_185 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="347-347"];
m46_188 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="347-347"];
m46_315 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="470-470"];
m46_317 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="470-470"];
m46_126 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="224-230"];
m46_134 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="261-267"];
m46_128 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="224-230"];
m46_136 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="261-267"];
m46_299 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="461-461"];
m46_301 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="461-461"];
m46_305 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="465-465"];
m46_307 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="465-465"];
m46_318 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="473-473"];
m46_320 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="473-473"];
m46_244 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="396-396"];
m46_246 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="396-396"];
m46_324 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="480-480"];
m46_326 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="480-480"];
m46_250 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="422-427"];
m46_252 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="422-427"];
m46_260 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="430-430"];
m46_259 [cluster="lambda expression", file="Job.Obsolete.cs", label="y == null", span="430-430"];
m46_182 [cluster="lambda expression", file="Job.Obsolete.cs", label="!hiddenProperties.Contains(x.Key)", span="347-347"];
m46_183 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="347-347"];
m46_187 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="347-347"];
m46_186 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.Key", span="347-347"];
m46_190 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="347-347"];
m46_189 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.Value", span="347-347"];
m46_291 [cluster="lambda expression", file="Job.Obsolete.cs", label="stats.Servers = x", span="454-454"];
m46_297 [cluster="lambda expression", file="Job.Obsolete.cs", label="stats.Queues = x", span="458-458"];
m46_303 [cluster="lambda expression", file="Job.Obsolete.cs", label="stats.Scheduled = x", span="462-462"];
m46_309 [cluster="lambda expression", file="Job.Obsolete.cs", label="stats.Processing = x", span="466-466"];
m46_322 [cluster="lambda expression", file="Job.Obsolete.cs", label="stats.Failed = x", span="474-474"];
m46_328 [cluster="lambda expression", file="Job.Obsolete.cs", label="stats.Enqueued += x", span="481-481"];
m46_290 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="454-454"];
m46_292 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="454-454"];
m46_296 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="458-458"];
m46_298 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="458-458"];
m46_302 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="462-462"];
m46_304 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="462-462"];
m46_308 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="466-466"];
m46_310 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="466-466"];
m46_321 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="474-474"];
m46_323 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="474-474"];
m46_327 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="481-481"];
m46_329 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="481-481"];
m46_286 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="453-453"];
m46_293 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="457-457"];
m46_311 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="469-469"];
m46_217 [cluster="lambda expression", file="Job.Obsolete.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="364-364"];
m46_216 [cluster="lambda expression", file="Job.Obsolete.cs", label="Entry lambda expression", span="364-364"];
m46_288 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="453-453"];
m46_287 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.GetSetCount(''hangfire:servers'')", span="453-453"];
m46_295 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="457-457"];
m46_294 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.GetSetCount(''hangfire:queues'')", span="457-457"];
m46_313 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="469-469"];
m46_312 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="469-469"];
m46_218 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="364-364"];
m46_242 [cluster="lambda expression", file="Job.Obsolete.cs", label="x.ToString(''yyyy-MM-dd'')", span="395-395"];
m46_243 [cluster="lambda expression", file="Job.Obsolete.cs", label="Exit lambda expression", span="395-395"];
m46_74 [cluster="HangFire.Web.JobStorage.Servers()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="127-127"];
m46_75 [cluster="HangFire.Web.JobStorage.Servers()", file="Job.Obsolete.cs", label=Redis, span="129-129"];
m46_76 [cluster="HangFire.Web.JobStorage.Servers()", file="Job.Obsolete.cs", label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="131-131"];
m46_91 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", file="Job.Obsolete.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", span="335-335"];
m46_176 [cluster="Unk.ToList", file="Job.Obsolete.cs", label="Entry Unk.ToList", span=""];
m46_142 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="278-278"];
m46_144 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="Job.Obsolete.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="282-282"];
m46_143 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="Job.Obsolete.cs", label=Redis, span="280-280"];
m46_145 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="278-278"];
m46_31 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="Job.Obsolete.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="130-130"];
m46_92 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", file="Job.Obsolete.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="341-341"];
m46_94 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", color=green, community=0, file="Job.Obsolete.cs", label="0: client == null", span="351-351"];
m46_93 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", span="335-335"];
m46_95 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", color=green, community=0, file="Job.Obsolete.cs", label="0: throw new ArgumentNullException(''client'');", span="351-351"];
m46_96 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="Job.Obsolete.cs", label="var state = new AwaitingState(parentId, nextState, options)", span="353-353"];
m46_284 [cluster="Unk.QueueCommand", file="Job.Obsolete.cs", label="Entry Unk.QueueCommand", span=""];
m46_33 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="Job.Obsolete.cs", label="throw new ArgumentNullException(''client'');", span="135-135"];
m46_60 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="Job.Obsolete.cs", label="throw new ArgumentNullException(''client'');", span="251-251"];
m46_219 [cluster="System.DateTime.ToString(string)", file="Job.Obsolete.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m46_6 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="Job.Obsolete.cs", label=Redis, span="22-22"];
m46_105 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", color=green, community=0, file="Job.Obsolete.cs", label="1: return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="191-203"];
m46_106 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="182-182"];
m46_124 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="Job.Obsolete.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m46_213 [cluster="Unk.ElementAt", file="Job.Obsolete.cs", label="Entry Unk.ElementAt", span=""];
m46_68 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="111-111"];
m46_69 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="382-382"];
m46_72 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="Job.Obsolete.cs", label="return GetTimelineStats(Redis, ''failed'');", span="123-123"];
m46_70 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="119-119"];
m46_71 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="Job.Obsolete.cs", label=Redis, span="121-121"];
m46_73 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="119-119"];
m46_107 [cluster="Unk.GetRangeFromList", file="Job.Obsolete.cs", label="Entry Unk.GetRangeFromList", span=""];
m46_112 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="207-207"];
m46_121 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="235-241"];
m46_118 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="219-230"];
m46_117 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="var firstJobIds = Redis.GetRangeFromList(\r\n                        String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="216-217"];
m46_119 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="var length = Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="232-232"];
m46_120 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="var dequeued = Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="233-233"];
m46_115 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="212-212"];
m46_116 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label=queues, span="214-214"];
m46_114 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="211-211"];
m46_122 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="return result;", span="244-244"];
m46_113 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label=Redis, span="209-209"];
m46_123 [cluster="HangFire.Web.JobStorage.Queues()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="207-207"];
m46_89 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="Job.Obsolete.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="332-332"];
m46_111 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="Job.Obsolete.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5"];
m46_285 [cluster="Unk.Flush", file="Job.Obsolete.cs", label="Entry Unk.Flush", span=""];
m46_61 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="Job.Obsolete.cs", label="var state = new DeletedState()", span="253-253"];
m46_81 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", color=green, community=0, file="Job.Obsolete.cs", label="1: Entry Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="317-317"];
m46_265 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="442-442"];
m46_267 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="var stats = new StatisticsDto()", span="446-446"];
m46_277 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="var queueName = queue", span="478-478"];
m46_268 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="448-448"];
m46_266 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label=Redis, span="444-444"];
m46_270 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="452-454"];
m46_271 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''), \r\n                        x => stats.Queues = x)", span="456-458"];
m46_272 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''), \r\n                        x => stats.Scheduled = x)", span="460-462"];
m46_273 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''), \r\n                        x => stats.Processing = x)", span="464-466"];
m46_274 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''), \r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="468-470"];
m46_275 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="472-474"];
m46_278 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="479-481"];
m46_280 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="return stats;", span="487-487"];
m46_276 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label=queues, span="476-476"];
m46_269 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="var pipeline = Redis.CreatePipeline()", span="450-450"];
m46_279 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="pipeline.Flush()", span="484-484"];
m46_281 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="442-442"];
m46_261 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="434-434"];
m46_263 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="Job.Obsolete.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="438-438"];
m46_262 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="Job.Obsolete.cs", label=Redis, span="436-436"];
m46_264 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="434-434"];
m46_137 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="270-270"];
m46_139 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="Job.Obsolete.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="274-274"];
m46_138 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="Job.Obsolete.cs", label=Redis, span="272-272"];
m46_140 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="270-270"];
m46_35 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="130-130"];
m46_156 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="Job.Obsolete.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m46_211 [cluster="System.DateTime.AddHours(double)", file="Job.Obsolete.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m46_85 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="return ContinueWith(client, parentId, methodCall, nextState, JobContinuationOptions.OnlyOnSucceededState);", span="323-323"];
m46_225 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="dates.Add(endDate)", span="391-391"];
m46_221 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var endDate = DateTime.UtcNow.Date", span="385-385"];
m46_224 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="startDate <= endDate", span="389-389"];
m46_223 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var dates = new List<DateTime>()", span="387-387"];
m46_226 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="endDate = endDate.AddDays(-1)", span="392-392"];
m46_230 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var result = new Dictionary<DateTime, long>()", span="400-400"];
m46_222 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var startDate = endDate.AddDays(-7)", span="386-386"];
m46_227 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="395-395"];
m46_236 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="result.Add(dates[i], value)", span="408-408"];
m46_229 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="398-398"];
m46_231 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var i = 0", span="401-401"];
m46_238 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="return result;", span="411-411"];
m46_228 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="396-396"];
m46_232 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="i < stringDates.Count", span="401-401"];
m46_234 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="404-404"];
m46_235 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="value = 0", span="406-406"];
m46_237 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="i++", span="401-401"];
m46_233 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="long value", span="403-403"];
m46_239 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="382-382"];
m46_11 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.Obsolete.cs", label="return client.Create(methodCall, new EnqueuedState());", span="62-62"];
m46_12 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="56-56"];
m46_14 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="Job.Obsolete.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="73-73"];
m46_177 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m46_165 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="326-326"];
m46_173 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="342-349"];
m46_167 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="330-330"];
m46_170 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="333-333"];
m46_172 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="338-340"];
m46_171 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="335-336"];
m46_166 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label=Redis, span="328-328"];
m46_168 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label="job.Count == 0", span="331-331"];
m46_169 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label="return null;", span="331-331"];
m46_174 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="326-326"];
m46_215 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Job.Obsolete.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m46_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m46_8 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.Obsolete.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="56-56"];
m46_220 [cluster="string.Format(string, object, object)", file="Job.Obsolete.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m46_86 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="317-317"];
m46_180 [cluster="Unk.ToDictionary", file="Job.Obsolete.cs", label="Entry Unk.ToDictionary", span=""];
m46_90 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="Job.Obsolete.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="326-326"];
m46_289 [cluster="Unk.GetSetCount", file="Job.Obsolete.cs", label="Entry Unk.GetSetCount", span=""];
m46_9 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.Obsolete.cs", label="client == null", span="60-60"];
m46_58 [cluster="Unk.>", file="Job.Obsolete.cs", label="Entry Unk.>", span=""];
m46_15 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="36-36"];
m46_17 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="Job.Obsolete.cs", label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="40-40"];
m46_16 [cluster="HangFire.Web.JobStorage.ProcessingCount()", color=green, community=0, file="Job.Obsolete.cs", label="0: Redis", span="38-38"];
m46_18 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="36-36"];
m46_10 [cluster="Unk.GetListCount", file="Job.Obsolete.cs", label="Entry Unk.GetListCount", span=""];
m46_84 [cluster="Unk.GetAllItemsFromSet", file="Job.Obsolete.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m46_97 [cluster="Unk.GetRangeFromSortedSetDesc", file="Job.Obsolete.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m46_154 [cluster="string.IsNullOrEmpty(string)", file="Job.Obsolete.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m46_212 [cluster="Unk.GetValuesMap", file="Job.Obsolete.cs", label="Entry Unk.GetValuesMap", span=""];
m46_184 [cluster="Unk.Contains", file="Job.Obsolete.cs", label="Entry Unk.Contains", span=""];
m46_175 [cluster="Unk.Select", file="Job.Obsolete.cs", label="Entry Unk.Select", span=""];
m46_314 [cluster="Unk.GetValue", file="Job.Obsolete.cs", label="Entry Unk.GetValue", span=""];
m46_146 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="286-286"];
m46_149 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Job.Obsolete.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="292-292"];
m46_148 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Job.Obsolete.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="290-290"];
m46_150 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Job.Obsolete.cs", label="String.IsNullOrEmpty(queue)", span="293-293"];
m46_152 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Job.Obsolete.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="300-303"];
m46_147 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Job.Obsolete.cs", label=Redis, span="288-288"];
m46_151 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Job.Obsolete.cs", label="return false;", span="295-295"];
m46_153 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="286-286"];
m46_130 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="Job.Obsolete.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="248-248"];
m46_132 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="Job.Obsolete.cs", label="return GetJobsWithProperties(\r\n                Redis,\r\n                firstJobIds,\r\n                new[] { ''Type'', ''Args'' },\r\n                new[] { ''EnqueuedAt'', ''State'' },\r\n                (job, state) => new EnqueuedJobDto\r\n                {\r\n                    Type = job[0],\r\n                    Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="256-267"];
m46_131 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="Job.Obsolete.cs", label="var firstJobIds = Redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue), \r\n                from, \r\n                from + perPage - 1)", span="251-254"];
m46_133 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="Job.Obsolete.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="248-248"];
m46_336 [file="Job.Obsolete.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m46_337 [file="Job.Obsolete.cs", label=stats, span=""];
m46_332 [file="Job.Obsolete.cs", label=string, span=""];
m46_338 [file="Job.Obsolete.cs", label=queueName, span=""];
m46_333 [file="Job.Obsolete.cs", label=IRedisClient, span=""];
m46_334 [file="Job.Obsolete.cs", label="string[]", span=""];
m46_335 [file="Job.Obsolete.cs", label="string[]", span=""];
m46_330 [file="Job.Obsolete.cs", label=hiddenProperties, span=""];
m46_331 [file="Job.Obsolete.cs", label=string, span=""];
m49_5 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", file="JobFilterProviders.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="35-35"];
m49_7 [cluster="Hangfire.Common.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider()", file="JobFilterProviders.cs", label="Entry Hangfire.Common.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider()", span="32-32"];
m49_0 [cluster="Hangfire.Common.JobFilterProviders.JobFilterProviders()", file="JobFilterProviders.cs", label="Entry Hangfire.Common.JobFilterProviders.JobFilterProviders()", span="23-23"];
m49_1 [cluster="Hangfire.Common.JobFilterProviders.JobFilterProviders()", file="JobFilterProviders.cs", label="Providers = new JobFilterProviderCollection()", span="26-26"];
m49_2 [cluster="Hangfire.Common.JobFilterProviders.JobFilterProviders()", file="JobFilterProviders.cs", label="Providers.Add(GlobalJobFilters.Filters)", span="27-27"];
m49_3 [cluster="Hangfire.Common.JobFilterProviders.JobFilterProviders()", file="JobFilterProviders.cs", label="Providers.Add(new JobFilterAttributeFilterProvider())", span="28-28"];
m49_4 [cluster="Hangfire.Common.JobFilterProviders.JobFilterProviders()", file="JobFilterProviders.cs", label="Exit Hangfire.Common.JobFilterProviders.JobFilterProviders()", span="23-23"];
m49_6 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JobFilterProviders.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m50_0 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobLoadException.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="31-31"];
m50_1 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobLoadException.cs", label="Exit Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="31-31"];
m51_0 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JsonStats.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", span="36-36"];
m51_1 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", color=green, community=0, file="JsonStats.cs", label="0: context == null", span="42-42"];
m51_2 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", color=green, community=0, file="JsonStats.cs", label="0: throw new ArgumentNullException(''context'');", span="42-42"];
m51_3 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JsonStats.cs", label="storage == null", span="43-43"];
m51_4 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JsonStats.cs", label="throw new ArgumentNullException(''storage'');", span="43-43"];
m51_7 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JsonStats.cs", label="stateMachineFactory == null", span="45-45"];
m51_5 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JsonStats.cs", label="process == null", span="44-44"];
m51_6 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JsonStats.cs", label="throw new ArgumentNullException(''process'');", span="44-44"];
m51_8 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JsonStats.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="45-45"];
m51_53 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="JsonStats.cs", label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="115-115"];
m51_54 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="JsonStats.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="108-108"];
m51_55 [cluster="System.Random.Random(int)", file="JsonStats.cs", label="Entry System.Random.Random(int)", span="0-0"];
m51_15 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="_innerProcess.Execute(context)", span="57-57"];
m51_16 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="return;", span="58-58"];
m51_17 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label=OperationCanceledException, span="60-60"];
m51_18 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="throw;", span="62-62"];
m51_19 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label=Exception, span="64-64"];
m51_27 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51"];
m51_28 [cluster="Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="Entry Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26"];
m51_23 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="var logLevel = GetLogLevel(i)", span="70-70"];
m51_25 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="context.SleepOrThrow(nextTry)", span="83-83"];
m51_30 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="JsonStats.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="88-88"];
m51_31 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JsonStats.cs", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54"];
m51_33 [cluster="lambda expression", file="JsonStats.cs", label="Entry lambda expression", span="74-79"];
m51_36 [cluster="string.Format(string, params object[])", file="JsonStats.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m51_21 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="throw;", span="67-67"];
m51_24 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="_logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' process. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", span="72-80"];
m51_20 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="i >= MaxRetryAttempts - 1", span="67-67"];
m51_22 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="JsonStats.cs", label="var nextTry = DelayCallback(i)", span="69-69"];
m51_26 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="JsonStats.cs", label="4: i++", span="53-53"];
m51_29 [cluster="System.Func<T, TResult>.Invoke(T)", file="JsonStats.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m51_32 [cluster="Hangfire.Server.BackgroundProcessContext.SleepOrThrow(System.TimeSpan)", file="JsonStats.cs", label="Entry Hangfire.Server.BackgroundProcessContext.SleepOrThrow(System.TimeSpan)", span="29-29"];
m51_34 [cluster="lambda expression", file="JsonStats.cs", label="String.Format(\r\n                            ''Error occurred during execution of '{0}' process. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", span="74-79"];
m51_35 [cluster="lambda expression", file="JsonStats.cs", label="Exit lambda expression", span="74-79"];
m51_37 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="JsonStats.cs", label=i, span="90-90"];
m51_38 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="JsonStats.cs", label=0, span="92-92"];
m51_76 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonStats.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m51_80 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="JsonStats.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m51_39 [cluster="Hangfire.JobStorage.GetConnection()", file="JsonStats.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m51_41 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JsonStats.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m51_43 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="JsonStats.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m51_45 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="JsonStats.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m51_40 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JsonStats.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m51_42 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="JsonStats.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m51_44 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="JsonStats.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m51_59 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="jobData.EnsureLoaded()", span="146-146"];
m51_10 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JsonStats.cs", label="_storage = storage", span="48-48"];
m51_51 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="JsonStats.cs", label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="111-111"];
m51_49 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="Entry Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="132-132"];
m51_58 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="return null;", span="143-143"];
m51_12 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", color=red, community=0, file="JsonStats.cs", label="0: _stateMachineFactory = stateMachineFactory", span="50-50"];
m51_13 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", color=green, community=0, file="JsonStats.cs", label="1: Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", span="36-36"];
m51_14 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="JsonStats.cs", label="0: i <= MaxRetryAttempts", span="53-53"];
m51_61 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="151-151"];
m51_78 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonStats.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m51_79 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="JsonStats.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28"];
m51_73 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="JsonStats.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m51_48 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="JsonStats.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.ToString()", span="103-103"];
m51_47 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="JsonStats.cs", label="return _innerProcess.ToString();", span="105-105"];
m51_52 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="JsonStats.cs", label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="112-113"];
m51_56 [cluster="System.Guid.NewGuid()", file="JsonStats.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m51_60 [cluster="System.Math.Min(double, double)", file="JsonStats.cs", label="Entry System.Math.Min(double, double)", span="0-0"];
m51_57 [cluster="System.Guid.GetHashCode()", file="JsonStats.cs", label="Entry System.Guid.GetHashCode()", span="0-0"];
m51_63 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label=i, span=""];
m51_62 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="Hangfire.Server.AutomaticRetryProcess", span=""];
m51_65 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="157-157"];
m51_64 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label=nextTry, span=""];
m51_66 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label=OperationCanceledException, span="159-159"];
m51_67 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="throw;", span="161-161"];
m51_68 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label=JobPerformanceException, span="163-163"];
m51_69 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="165-168"];
m51_70 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label=Exception, span="170-170"];
m51_71 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal Hangfire Server exception occurred. Please, report it to Hangfire developers.''\r\n                };", span="172-175"];
m51_72 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="Exit Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="132-132"];
m51_75 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", file="JsonStats.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", span="35-35"];
m51_46 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="JsonStats.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="26-26"];
m51_9 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JsonStats.cs", label="_context = context", span="47-47"];
m51_11 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", color=red, community=0, file="JsonStats.cs", label="0: Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353"];
m51_77 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="JsonStats.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="20-20"];
m51_50 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="JsonStats.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="108-108"];
m51_74 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="JsonStats.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m51_81 [file="JsonStats.cs", label="Hangfire.Server.Worker", span=""];
m52_6 [cluster="Hangfire.Common.ExpressionUtil.ExpressionFingerprint.Equals(Hangfire.Common.ExpressionUtil.ExpressionFingerprint)", file="LambdaExpressionFingerprint.cs", label="Entry Hangfire.Common.ExpressionUtil.ExpressionFingerprint.Equals(Hangfire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m52_0 [cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs", label="Entry Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17"];
m52_1 [cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs", label="Exit Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17"];
m52_2 [cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="Entry Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="24-24"];
m52_3 [cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="LambdaExpressionFingerprint other = obj as LambdaExpressionFingerprint", span="26-26"];
m52_4 [cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", color=green, community=0, file="LambdaExpressionFingerprint.cs", label="0: return (other != null)\r\n                   && Equals(other);", span="27-28"];
m52_5 [cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="Exit Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="24-24"];
m52_7 [file="LambdaExpressionFingerprint.cs", label="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint", span=""];
m53_18 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="LatencyTimeoutAttribute.cs", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="56-56"];
m53_17 [cluster="Hangfire.States.DeletedState.DeletedState()", file="LatencyTimeoutAttribute.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="65-65"];
m53_6 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="LatencyTimeoutAttribute.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m53_0 [cluster="Hangfire.LatencyTimeoutAttribute.LatencyTimeoutAttribute(int)", file="LatencyTimeoutAttribute.cs", label="Entry Hangfire.LatencyTimeoutAttribute.LatencyTimeoutAttribute(int)", span="29-29"];
m53_1 [cluster="Hangfire.LatencyTimeoutAttribute.LatencyTimeoutAttribute(int)", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="1: timeoutInSeconds < 0", span="31-31"];
m53_2 [cluster="Hangfire.LatencyTimeoutAttribute.LatencyTimeoutAttribute(int)", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="1: throw new ArgumentOutOfRangeException(nameof(timeoutInSeconds), ''Timeout value must be equal or greater than zero.'');", span="33-33"];
m53_3 [cluster="Hangfire.LatencyTimeoutAttribute.LatencyTimeoutAttribute(int)", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="1: _timeoutInSeconds = timeoutInSeconds", span="36-36"];
m53_4 [cluster="Hangfire.LatencyTimeoutAttribute.LatencyTimeoutAttribute(int)", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="1: LogLevel = LogLevel.Debug", span="37-37"];
m53_5 [cluster="Hangfire.LatencyTimeoutAttribute.LatencyTimeoutAttribute(int)", file="LatencyTimeoutAttribute.cs", label="Exit Hangfire.LatencyTimeoutAttribute.LatencyTimeoutAttribute(int)", span="29-29"];
m53_19 [cluster="lambda expression", file="LatencyTimeoutAttribute.cs", label="Entry lambda expression", span="67-67"];
m53_20 [cluster="lambda expression", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="3: $''Background job '{context.BackgroundJob.Id}' has exceeded latency timeout of {_timeoutInSeconds} second(s) and will be deleted''", span="67-67"];
m53_21 [cluster="lambda expression", file="LatencyTimeoutAttribute.cs", label="Exit lambda expression", span="67-67"];
m53_8 [cluster="Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="LatencyTimeoutAttribute.cs", label="Entry Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="47-47"];
m53_9 [cluster="Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="0: var state = context.CandidateState as ProcessingState", span="49-49"];
m53_12 [cluster="Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="0: var elapsedTime = DateTime.UtcNow - context.BackgroundJob.CreatedAt", span="56-56"];
m53_14 [cluster="Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=1, file="LatencyTimeoutAttribute.cs", label="0: context.CandidateState = new DeletedState\r\n                {\r\n                    Reason = $''Background job has exceeded latency timeout of {_timeoutInSeconds} second(s)''\r\n                }", span="60-63"];
m53_15 [cluster="Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=1, file="LatencyTimeoutAttribute.cs", label="1: Logger.Log(\r\n                    LogLevel,\r\n                    () => $''Background job '{context.BackgroundJob.Id}' has exceeded latency timeout of {_timeoutInSeconds} second(s) and will be deleted'')", span="65-67"];
m53_10 [cluster="Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="0: state == null", span="50-50"];
m53_11 [cluster="Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="0: return;", span="53-53"];
m53_13 [cluster="Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="LatencyTimeoutAttribute.cs", label="0: elapsedTime.TotalSeconds > _timeoutInSeconds", span="58-58"];
m53_16 [cluster="Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="LatencyTimeoutAttribute.cs", label="Exit Hangfire.LatencyTimeoutAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="47-47"];
m53_22 [file="LatencyTimeoutAttribute.cs", label="Hangfire.LatencyTimeoutAttribute", span=""];
m53_23 [file="LatencyTimeoutAttribute.cs", label="Hangfire.States.ElectStateContext", span=""];
m54_0 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="LayoutPage.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m54_1 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="LayoutPage.cs", label="Title = title", span="6-6"];
m54_2 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="LayoutPage.cs", label="Exit Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m54_3 [file="LayoutPage.cs", label="Hangfire.Dashboard.Pages.LayoutPage", span=""];
m55_102 [cluster="System.Collections.Generic.List<T>.List()", file="LayoutPage.generated.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m55_111 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", span="190-190"];
m55_112 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", file="LayoutPage.generated.cs", label="return value;", span="192-192"];
m55_113 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.WrapIdentifier(string)", span="190-190"];
m55_106 [cluster="string.Format(string, object, object)", file="LayoutPage.generated.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m55_148 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="247-247"];
m55_149 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="LayoutPage.generated.cs", label="_enclosingString = ''\''''", span="249-249"];
m55_150 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="LayoutPage.generated.cs", label="_valueRenderer = WrapString", span="250-250"];
m55_151 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="247-247"];
m55_80 [cluster="System.Text.StringBuilder.Append(string)", file="LayoutPage.generated.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m55_131 [cluster="System.Type.GetInterfaces()", file="LayoutPage.generated.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m55_93 [cluster="Unk.Join", file="LayoutPage.generated.cs", label="Entry Unk.Join", span=""];
m55_100 [cluster="object.ToString()", file="LayoutPage.generated.cs", label="Entry object.ToString()", span="0-0"];
m55_208 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="369-369"];
m55_210 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="LayoutPage.generated.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="371-371"];
m55_211 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="369-369"];
m55_84 [cluster="char.IsUpper(char)", file="LayoutPage.generated.cs", label="Entry char.IsUpper(char)", span="0-0"];
m55_164 [cluster="string.Replace(string, string)", file="LayoutPage.generated.cs", label="Entry string.Replace(string, string)", span="0-0"];
m55_209 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="LayoutPage.generated.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m55_78 [cluster="System.Text.StringBuilder.StringBuilder()", file="LayoutPage.generated.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m55_82 [cluster="System.Text.StringBuilder.AppendLine()", file="LayoutPage.generated.cs", label="Entry System.Text.StringBuilder.AppendLine()", span="0-0"];
m55_165 [cluster="System.Func<T, TResult>.Invoke(T)", file="LayoutPage.generated.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m55_126 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="LayoutPage.generated.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m55_107 [cluster="System.Text.StringBuilder.ToString()", file="LayoutPage.generated.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m55_141 [cluster="Unk.GetGenericArguments", file="LayoutPage.generated.cs", label="Entry Unk.GetGenericArguments", span=""];
m55_99 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="286-286"];
m55_166 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", color=red, community=0, file="LayoutPage.generated.cs", label="0: type.IsEnum", span="288-288"];
m55_167 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", color=red, community=0, file="LayoutPage.generated.cs", label="0: return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = String.Empty,\r\n                        _valueRenderer = value => String.Format(\r\n                            ''{0}.{1}'',\r\n                            WrapType(type.Name),\r\n                            value)\r\n                    };", span="290-297"];
m55_168 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="IsNumericType(type)", span="300-300"];
m55_170 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="type == typeof(bool)", span="309-309"];
m55_172 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="type == typeof(char)", span="318-318"];
m55_174 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="type == typeof(string) || type == typeof(object)", span="326-326"];
m55_176 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="return new ArgumentRenderer\r\n                {\r\n                    _deserializationType = type,\r\n                };", span="334-337"];
m55_169 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = String.Empty,\r\n                        _valueRenderer = WrapIdentifier\r\n                    };", span="302-306"];
m55_171 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _valueRenderer = value => WrapKeyword(value.ToLowerInvariant()),\r\n                        _enclosingString = String.Empty,\r\n                    };", span="311-315"];
m55_173 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''''',\r\n                    };", span="320-323"];
m55_175 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''\'''',\r\n                    };", span="328-331"];
m55_177 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="286-286"];
m55_101 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", span="253-253"];
m55_152 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", color=red, community=0, file="LayoutPage.generated.cs", label="0: deserializedValue == null", span="255-255"];
m55_156 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", color=red, community=0, file="LayoutPage.generated.cs", label="1: builder.Append(WrapIdentifier(\r\n                        isJson ? ''FromJson'' : ''Deserialize''))", span="263-264"];
m55_158 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="LayoutPage.generated.cs", label="builder.Append(WrapString(Encode(''\'''' + rawValue.Replace(''\'''', ''\\\'''') + ''\'''')))", span="271-271"];
m55_159 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="LayoutPage.generated.cs", label="builder.Append(_valueRenderer(Encode(_enclosingString + deserializedValue + _enclosingString)))", span="275-275"];
m55_153 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", color=red, community=0, file="LayoutPage.generated.cs", label="0: return WrapKeyword(''null'');", span="257-257"];
m55_154 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", color=red, community=0, file="LayoutPage.generated.cs", label="0: var builder = new StringBuilder()", span="260-260"];
m55_155 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", color=red, community=0, file="LayoutPage.generated.cs", label="0: _deserializationType != null", span="261-261"];
m55_157 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", color=red, community=0, file="LayoutPage.generated.cs", label="1: builder.Append(''&lt;'')\r\n                        .Append(WrapType(Encode(_deserializationType.Name)))\r\n                        .Append(WrapIdentifier(''&gt;''))\r\n                        .Append(''('')", span="266-269"];
m55_161 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="LayoutPage.generated.cs", label="builder.Append('')'')", span="280-280"];
m55_162 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", color=red, community=0, file="LayoutPage.generated.cs", label="0: return builder.ToString();", span="283-283"];
m55_160 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", color=red, community=0, file="LayoutPage.generated.cs", label="1: _deserializationType != null", span="278-278"];
m55_163 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.Render(bool, string, string)", span="253-253"];
m55_97 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", span="223-223"];
m55_127 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", color=red, community=0, file="LayoutPage.generated.cs", label="0: type == typeof (string)", span="225-225"];
m55_129 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", file="LayoutPage.generated.cs", label="return type.GetInterfaces()\r\n                .Where(x => x.IsGenericType\r\n                            && x.GetGenericTypeDefinition() == typeof (IEnumerable<>))\r\n                .Select(x => x.GetGenericArguments()[0])\r\n                .FirstOrDefault();", span="227-231"];
m55_128 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", color=red, community=0, file="LayoutPage.generated.cs", label="1: return null;", span="225-225"];
m55_130 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.GetIEnumerableGenericArgument(System.Type)", span="223-223"];
m55_94 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="LayoutPage.generated.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m55_92 [cluster="Unk.ToArray", file="LayoutPage.generated.cs", label="Entry Unk.ToArray", span=""];
m55_132 [cluster="Unk.Where", file="LayoutPage.generated.cs", label="Entry Unk.Where", span=""];
m55_147 [cluster="string.Substring(int, int)", file="LayoutPage.generated.cs", label="Entry string.Substring(int, int)", span="0-0"];
m55_105 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="LayoutPage.generated.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m55_119 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", span="205-205"];
m55_120 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", file="LayoutPage.generated.cs", label="return Span(''string'', value);", span="207-207"];
m55_121 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.WrapString(string)", span="205-205"];
m55_116 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", span="210-210"];
m55_122 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", color=green, community=0, file="LayoutPage.generated.cs", label="0: return String.Format(\r\n                ''<span class=\''{0}\''>{1}</span>'', \r\n                @class, \r\n                value);", span="212-215"];
m55_123 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.Span(string, string)", span="210-210"];
m55_79 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", span="195-195"];
m55_114 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", file="LayoutPage.generated.cs", label="return Span(''keyword'', value);", span="197-197"];
m55_115 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.WrapKeyword(string)", span="195-195"];
m55_83 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", span="234-234"];
m55_142 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", color=red, community=0, file="LayoutPage.generated.cs", label="0: string name = t.Name", span="236-236"];
m55_143 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", color=green, community=0, file="LayoutPage.generated.cs", label="0: int index = name.IndexOf('`')", span="237-237"];
m55_144 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", file="LayoutPage.generated.cs", label="return index == -1 ? name : name.Substring(0, index);", span="238-238"];
m55_145 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.GetNameWithoutGenericArity(System.Type)", span="234-234"];
m55_103 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="LayoutPage.generated.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m55_182 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Entry lambda expression", span="313-313"];
m55_108 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Entry lambda expression", span="73-73"];
m55_109 [cluster="lambda expression", color=red, community=0, file="LayoutPage.generated.cs", label="4: WrapType(x.Name)", span="73-73"];
m55_110 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Exit lambda expression", span="73-73"];
m55_134 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Entry lambda expression", span="228-229"];
m55_138 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Entry lambda expression", span="230-230"];
m55_135 [cluster="lambda expression", file="LayoutPage.generated.cs", label="x.IsGenericType\r\n                            && x.GetGenericTypeDefinition() == typeof (IEnumerable<>)", span="228-229"];
m55_136 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Exit lambda expression", span="228-229"];
m55_139 [cluster="lambda expression", file="LayoutPage.generated.cs", label="x.GetGenericArguments()[0]", span="230-230"];
m55_140 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Exit lambda expression", span="230-230"];
m55_180 [cluster="lambda expression", file="LayoutPage.generated.cs", label="String.Format(\r\n                            ''{0}.{1}'',\r\n                            WrapType(type.Name),\r\n                            value)", span="293-296"];
m55_183 [cluster="lambda expression", file="LayoutPage.generated.cs", label="WrapKeyword(value.ToLowerInvariant())", span="313-313"];
m55_179 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Entry lambda expression", span="293-296"];
m55_181 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Exit lambda expression", span="293-296"];
m55_184 [cluster="lambda expression", file="LayoutPage.generated.cs", label="Exit lambda expression", span="313-313"];
m55_77 [cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22"];
m55_178 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="340-340"];
m55_186 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="type == null", span="342-342"];
m55_188 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="Type.GetTypeCode(type)", span="344-344"];
m55_202 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="IsNullableType(type)", span="360-360"];
m55_203 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="return IsNumericType(Nullable.GetUnderlyingType(type));", span="362-362"];
m55_187 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="return false;", span="342-342"];
m55_189 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.Byte", span="346-346"];
m55_201 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.Object", span="359-359"];
m55_190 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.Decimal", span="347-347"];
m55_191 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.Double", span="348-348"];
m55_192 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.Int16", span="349-349"];
m55_193 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.Int32", span="350-350"];
m55_194 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.Int64", span="351-351"];
m55_195 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.SByte", span="352-352"];
m55_196 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.Single", span="353-353"];
m55_197 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.UInt16", span="354-354"];
m55_198 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.UInt32", span="355-355"];
m55_199 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="TypeCode.UInt64", span="356-356"];
m55_200 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="return true;", span="357-357"];
m55_204 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="return false;", span="364-364"];
m55_206 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="return false;", span="366-366"];
m55_205 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="340-340"];
m55_133 [cluster="Unk.FirstOrDefault", file="LayoutPage.generated.cs", label="Entry Unk.FirstOrDefault", span=""];
m55_185 [cluster="string.ToLowerInvariant()", file="LayoutPage.generated.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m55_91 [cluster="Unk.Select", file="LayoutPage.generated.cs", label="Entry Unk.Select", span=""];
m55_88 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", span="200-200"];
m55_117 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", file="LayoutPage.generated.cs", label="return Span(''type'', value);", span="202-202"];
m55_118 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.WrapType(string)", span="200-200"];
m55_0 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", span="28-28"];
m55_1 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: job == null", span="30-30"];
m55_6 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.Append(Encode(job.Type.Namespace))", span="36-36"];
m55_10 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="!job.Method.IsStatic", span="41-41"];
m55_11 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var serviceName = GetNameWithoutGenericArity(job.Type)", span="43-43"];
m55_12 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: job.Type.IsInterface && serviceName[0] == 'I' && Char.IsUpper(serviceName[1])", span="45-45"];
m55_15 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.Append(WrapType(job.Type.ToGenericTypeString()))", span="52-52"];
m55_16 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.AppendFormat(\r\n                    '' {0} = Activate&lt;{1}&gt;();'',\r\n                    Encode(serviceName),\r\n                    WrapType(Encode(job.Type.ToGenericTypeString())))", span="53-56"];
m55_19 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.Append(WrapType(Encode(job.Type.ToGenericTypeString())))", span="64-64"];
m55_21 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.Append(Encode(job.Method.Name))", span="68-68"];
m55_22 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="job.Method.IsGenericMethod", span="70-70"];
m55_23 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="0: var genericArgumentTypes = job.Method.GetGenericArguments()\r\n                    .Select(x => WrapType(x.Name))\r\n                    .ToArray()", span="72-74"];
m55_26 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: var parameters = job.Method.GetParameters()", span="81-81"];
m55_33 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="1: i < job.Arguments.Length", span="91-91"];
m55_34 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var argument = job.Arguments[i]", span="93-93"];
m55_2 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="1: return new NonEscapedString(''<em>Can not find the target method.</em>'');", span="30-30"];
m55_3 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="1: var builder = new StringBuilder()", span="32-32"];
m55_4 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.Append(WrapKeyword(''using''))", span="34-34"];
m55_5 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.Append('' '')", span="35-35"];
m55_7 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.Append('';'')", span="37-37"];
m55_8 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="1: builder.AppendLine()", span="38-38"];
m55_9 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.AppendLine()", span="39-39"];
m55_17 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.AppendLine()", span="58-58"];
m55_18 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="0: builder.Append(Encode(serviceName))", span="60-60"];
m55_20 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: builder.Append(''.'')", span="67-67"];
m55_24 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: builder.AppendFormat(''&lt;{0}&gt;'', String.Join('', '', genericArgumentTypes))", span="76-76"];
m55_25 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: builder.Append(''('')", span="79-79"];
m55_63 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.AppendLine()", span="160-160"];
m55_64 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.Append(''    '')", span="161-161"];
m55_67 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="1: builder.Append('' '')", span="167-167"];
m55_68 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="0: builder.AppendFormat(\r\n                    ''<span title=\''{0}:\'' data-placement=\''{1}\''>'',\r\n                    parameter.Name,\r\n                    tooltipPosition)", span="170-173"];
m55_69 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="4: builder.Append(renderedArgument)", span="175-175"];
m55_70 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="2: builder.Append(''</span>'')", span="177-177"];
m55_72 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: builder.Append('','')", span="181-181"];
m55_74 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="builder.Append('');'')", span="185-185"];
m55_75 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="return new NonEscapedString(builder.ToString());", span="187-187"];
m55_13 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: serviceName = serviceName.Substring(1)", span="47-47"];
m55_14 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="3: serviceName = Char.ToLower(serviceName[0]) + serviceName.Substring(1)", span="50-50"];
m55_27 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var renderedArguments = new List<string>(parameters.Length)", span="82-82"];
m55_31 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="1: i < parameters.Length", span="87-87"];
m55_32 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var parameter = parameters[i]", span="89-89"];
m55_59 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var parameter = parameters[i]", span="154-154"];
m55_28 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var renderedArgumentsTotalLength = 0", span="83-83"];
m55_53 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="renderedArguments.Add(renderedArgument)", span="142-142"];
m55_55 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="renderedArguments.Add(Encode(''<NO VALUE>''))", span="147-147"];
m55_58 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="i < renderedArguments.Count", span="151-151"];
m55_61 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var renderedArgument = renderedArguments[i]", span="157-157"];
m55_71 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="2: i < renderedArguments.Count - 1", span="179-179"];
m55_29 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="int splitStringMinLength = 100", span="85-85"];
m55_54 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="renderedArgumentsTotalLength += renderedArgument.Length", span="143-143"];
m55_62 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="renderedArgumentsTotalLength > splitStringMinLength", span="158-158"];
m55_30 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="4: var i = 0", span="87-87"];
m55_56 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="1: i++", span="87-87"];
m55_57 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="int i = 0", span="151-151"];
m55_36 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var enumerableArgument = GetIEnumerableGenericArgument(parameter.ParameterType)", span="96-96"];
m55_39 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="argumentValue = JobHelper.FromJson(argument, parameter.ParameterType)", span="103-103"];
m55_46 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var argumentRenderer = ArgumentRenderer.GetRenderer(parameter.ParameterType)", span="121-121"];
m55_52 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="0: renderedArgument = String.Format(\r\n                                WrapKeyword(''new'') + ''{0} {{ {1} }}'',\r\n                                parameter.ParameterType.IsArray ? '' []'' : '''',\r\n                                String.Join('', '', renderedItems))", span="135-138"];
m55_35 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="string renderedArgument", span="94-94"];
m55_41 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="argumentValue = argument", span="109-109"];
m55_47 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="renderedArgument = argumentRenderer.Render(isJson, argumentValue.ToString(), argument)", span="122-122"];
m55_37 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="0: object argumentValue", span="98-98"];
m55_45 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="enumerableArgument == null", span="119-119"];
m55_50 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="0: var argumentRenderer = ArgumentRenderer.GetRenderer(enumerableArgument)", span="130-130"];
m55_38 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="bool isJson = true", span="99-99"];
m55_40 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label=Exception, span="105-105"];
m55_43 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="argumentValue == null", span="113-113"];
m55_42 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="isJson = false", span="110-110"];
m55_49 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: (IEnumerable) argumentValue", span="128-128"];
m55_51 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=green, community=0, file="LayoutPage.generated.cs", label="1: renderedItems.Add(argumentRenderer.Render(isJson, item.ToString(),\r\n                                    JobHelper.ToJson(item)))", span="131-132"];
m55_44 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="renderedArgument = WrapKeyword(''null'')", span="115-115"];
m55_48 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: var renderedItems = new List<string>()", span="126-126"];
m55_66 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", color=red, community=0, file="LayoutPage.generated.cs", label="0: i > 0", span="165-165"];
m55_73 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="i++", span="151-151"];
m55_60 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="var tooltipPosition = ''top''", span="155-155"];
m55_65 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="tooltipPosition = ''left''", span="163-163"];
m55_76 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.Render(Hangfire.Common.Job)", span="28-28"];
m55_86 [cluster="char.ToLower(char)", file="LayoutPage.generated.cs", label="Entry char.ToLower(char)", span="0-0"];
m55_90 [cluster="System.Reflection.MethodInfo.GetGenericArguments()", file="LayoutPage.generated.cs", label="Entry System.Reflection.MethodInfo.GetGenericArguments()", span="0-0"];
m55_96 [cluster="System.Collections.Generic.List<T>.List(int)", file="LayoutPage.generated.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m55_98 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="LayoutPage.generated.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m55_104 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LayoutPage.generated.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m55_137 [cluster="System.Type.GetGenericTypeDefinition()", file="LayoutPage.generated.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m55_146 [cluster="string.IndexOf(char)", file="LayoutPage.generated.cs", label="Entry string.IndexOf(char)", span="0-0"];
m55_81 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", span="218-218"];
m55_124 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", color=green, community=0, file="LayoutPage.generated.cs", label="0: return WebUtility.HtmlEncode(value);", span="220-220"];
m55_125 [cluster="Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.JobMethodCallRenderer.Encode(string)", span="218-218"];
m55_95 [cluster="System.Reflection.MethodBase.GetParameters()", file="LayoutPage.generated.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m55_87 [cluster="System.Type.ToGenericTypeString()", file="LayoutPage.generated.cs", label="Entry System.Type.ToGenericTypeString()", span="7-7"];
m55_207 [cluster="System.Type.GetTypeCode(System.Type)", file="LayoutPage.generated.cs", label="Entry System.Type.GetTypeCode(System.Type)", span="0-0"];
m55_89 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="LayoutPage.generated.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m55_85 [cluster="string.Substring(int)", file="LayoutPage.generated.cs", label="Entry string.Substring(int)", span="0-0"];
m55_212 [file="LayoutPage.generated.cs", label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", span=""];
m55_213 [file="LayoutPage.generated.cs", label="System.Type", span=""];
m56_9 [cluster="string.IsNullOrEmpty(string)", file="LocalRequestsOnlyAuthorizationFilter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m56_0 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", file="LocalRequestsOnlyAuthorizationFilter.cs", label="Entry Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", span="28-28"];
m56_1 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", color=red, community=0, file="LocalRequestsOnlyAuthorizationFilter.cs", label="0: String.IsNullOrEmpty(context.Request.RemoteIpAddress)", span="31-31"];
m56_3 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", color=red, community=0, file="LocalRequestsOnlyAuthorizationFilter.cs", label="1: context.Request.RemoteIpAddress == ''127.0.0.1'' || context.Request.RemoteIpAddress == ''::1''", span="35-35"];
m56_5 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", color=red, community=0, file="LocalRequestsOnlyAuthorizationFilter.cs", label="1: context.Request.RemoteIpAddress == context.Request.LocalIpAddress", span="39-39"];
m56_2 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", color=red, community=0, file="LocalRequestsOnlyAuthorizationFilter.cs", label="1: return false;", span="32-32"];
m56_4 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", color=red, community=0, file="LocalRequestsOnlyAuthorizationFilter.cs", label="1: return true;", span="36-36"];
m56_6 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", color=red, community=0, file="LocalRequestsOnlyAuthorizationFilter.cs", label="0: return true;", span="40-40"];
m56_7 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", color=red, community=0, file="LocalRequestsOnlyAuthorizationFilter.cs", label="0: return false;", span="42-42"];
m56_8 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", file="LocalRequestsOnlyAuthorizationFilter.cs", label="Exit Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)", span="28-28"];
m57_3 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", span="27-27"];
m57_5 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", color=green, community=0, file="MemberExpressionFingerprint.cs", label="0: return (other != null)\r\n                   && Equals(Member, other.Member)\r\n                   && Equals(other);", span="30-32"];
m57_4 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", file="MemberExpressionFingerprint.cs", label="MemberExpressionFingerprint other = obj as MemberExpressionFingerprint", span="29-29"];
m57_6 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", span="27-27"];
m57_0 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", span="18-18"];
m57_1 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", file="MemberExpressionFingerprint.cs", label="Member = member", span="21-21"];
m57_2 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", span="18-18"];
m57_13 [cluster="Hangfire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="50-50"];
m57_7 [cluster="object.Equals(object, object)", file="MemberExpressionFingerprint.cs", label="Entry object.Equals(object, object)", span="0-0"];
m57_14 [cluster="Hangfire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(Hangfire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(Hangfire.Common.ExpressionUtil.HashCodeCombiner)", span="26-26"];
m57_8 [cluster="Hangfire.Common.ExpressionUtil.ExpressionFingerprint.Equals(Hangfire.Common.ExpressionUtil.ExpressionFingerprint)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.ExpressionUtil.ExpressionFingerprint.Equals(Hangfire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m57_9 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(Hangfire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(Hangfire.Common.ExpressionUtil.HashCodeCombiner)", span="35-35"];
m57_10 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(Hangfire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs", label="combiner.AddObject(Member)", span="37-37"];
m57_11 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(Hangfire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs", label="base.AddToHashCodeCombiner(combiner)", span="38-38"];
m57_12 [cluster="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(Hangfire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(Hangfire.Common.ExpressionUtil.HashCodeCombiner)", span="35-35"];
m57_15 [file="MemberExpressionFingerprint.cs", label="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint", span=""];
m58_113 [cluster="Unk.EnqueueItemOnList", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m58_99 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m58_52 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8"];
m58_108 [cluster="Unk.SetRangeInHash", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m58_53 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="129-129"];
m58_82 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="var transaction = _redis.CreateTransaction()", span="132-132"];
m58_83 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="AppendHistory(transaction, jobId, state, appendToJob)", span="134-134"];
m58_84 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="transaction.Commit()", span="135-135"];
m58_85 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="129-129"];
m58_48 [cluster="System.TimeSpan.FromMinutes(double)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m58_75 [cluster="Unk.Apply", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.Apply", span=""];
m58_7 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", span="20-20"];
m58_11 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Descriptors.Add(stateName, descriptor)", span="23-23"];
m58_12 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", span="20-20"];
m58_31 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m58_32 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="state == null", span="60-60"];
m58_34 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="_redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', jobId), TimeSpan.FromMinutes(1))", span="62-63"];
m58_35 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="var currentState = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId), ''State'')", span="65-66"];
m58_38 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="73-73"];
m58_41 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="var oldState = state", span="80-80"];
m58_42 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="state = filter.OnStateChanged(_redis, jobId, oldState)", span="81-81"];
m58_44 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="AppendHistory(jobId, oldState, false)", span="85-85"];
m58_45 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="return ApplyState(jobId, currentState, state);", span="89-89"];
m58_33 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="throw new ArgumentNullException(''state'');", span="60-60"];
m58_36 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="currentState == null", span="68-68"];
m58_37 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="return false;", span="70-70"];
m58_39 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="return false;", span="75-75"];
m58_40 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label=_stateChangedFilters, span="78-78"];
m58_43 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="oldState != state", span="83-83"];
m58_46 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m58_104 [cluster="Unk.SetEntryInHash", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m58_47 [cluster="string.Format(string, object)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m58_112 [cluster="HangFire.JobHelper.ToJson(object)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="39-39"];
m58_100 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62"];
m58_14 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="31-31"];
m58_15 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit HangFire.States.StateMachine.StateMachine(IRedisClient)", span="31-31"];
m58_81 [cluster="Unk.RemoveEntry", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.RemoveEntry", span=""];
m58_73 [cluster="Unk.OnStateUnapplied", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.OnStateUnapplied", span=""];
m58_60 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId)))", span="107-108"];
m58_55 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", span="93-93"];
m58_56 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="var transaction = _redis.CreateTransaction()", span="98-98"];
m58_57 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="currentState != String.Empty", span="100-100"];
m58_58 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="_stateDescriptors.ContainsKey(currentState)", span="102-102"];
m58_59 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="_stateDescriptors[currentState].Unapply(transaction, jobId)", span="104-104"];
m58_62 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="filter.OnStateUnapplied(transaction, jobId, currentState)", span="112-112"];
m58_63 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="AppendHistory(transaction, jobId, newState, true)", span="116-116"];
m58_64 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="newState.Apply(transaction, jobId)", span="118-118"];
m58_66 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="filter.OnStateApplied(transaction, jobId, newState)", span="122-122"];
m58_67 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="return transaction.Commit();", span="125-125"];
m58_61 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label=_stateAppliedFilters, span="110-110"];
m58_65 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label=_stateAppliedFilters, span="120-120"];
m58_68 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", span="93-93"];
m58_8 [cluster="HangFire.States.ProcessingState.Descriptor.Descriptor()", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.ProcessingState.Descriptor.Descriptor()", span="37-37"];
m58_9 [cluster="HangFire.States.ScheduledState.Descriptor.Descriptor()", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.ScheduledState.Descriptor.Descriptor()", span="39-39"];
m58_16 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", span="40-40"];
m58_17 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="redis == null", span="46-46"];
m58_19 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="stateDescriptors == null", span="47-47"];
m58_21 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="stateChangedFilters == null", span="48-48"];
m58_23 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="stateAppliedFilters == null", span="49-49"];
m58_25 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="_redis = redis", span="51-51"];
m58_26 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="_stateDescriptors = stateDescriptors", span="52-52"];
m58_27 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="_stateChangedFilters = stateChangedFilters", span="53-53"];
m58_28 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="_stateAppliedFilters = stateAppliedFilters", span="54-54"];
m58_18 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="throw new ArgumentNullException(''redis'');", span="46-46"];
m58_20 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="throw new ArgumentNullException(''stateDescriptors'');", span="47-47"];
m58_22 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="throw new ArgumentNullException(''stateChangedFilters'');", span="48-48"];
m58_24 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="throw new ArgumentNullException(''stateAppliedFilters'');", span="49-49"];
m58_29 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", span="40-40"];
m58_76 [cluster="Unk.OnStateApplied", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.OnStateApplied", span=""];
m58_91 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="transaction.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName))", span="149-152"];
m58_86 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="139-139"];
m58_87 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="var properties = new Dictionary<string, string>(state.GetProperties())", span="142-142"];
m58_89 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="properties.Add(''State'', state.StateName)", span="145-145"];
m58_90 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label=appendToJob, span="147-147"];
m58_92 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties))", span="154-156"];
m58_93 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="properties.Add(''Reason'', state.Reason)", span="159-159"];
m58_95 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties)))", span="162-164"];
m58_88 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="var now = DateTime.UtcNow", span="143-143"];
m58_94 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="160-160"];
m58_96 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="139-139"];
m58_6 [cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="41-41"];
m58_97 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m58_71 [cluster="Unk.Unapply", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.Unapply", span=""];
m58_70 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m58_109 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry lambda expression", span="162-164"];
m58_79 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId))", span="107-108"];
m58_78 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry lambda expression", span="107-108"];
m58_80 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit lambda expression", span="107-108"];
m58_102 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName)", span="149-152"];
m58_106 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties)", span="154-156"];
m58_110 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties))", span="162-164"];
m58_101 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry lambda expression", span="149-152"];
m58_105 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry lambda expression", span="154-156"];
m58_103 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit lambda expression", span="149-152"];
m58_107 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit lambda expression", span="154-156"];
m58_111 [cluster="lambda expression", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit lambda expression", span="162-164"];
m58_51 [cluster="Unk.Contains", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.Contains", span=""];
m58_0 [cluster="HangFire.States.StateMachine.StateMachine()", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.StateMachine.StateMachine()", span="12-12"];
m58_1 [cluster="HangFire.States.StateMachine.StateMachine()", file="MsmqJobQueueMonitoringApiFacts.cs", label="RegisterStateDescriptor(FailedState.Name, new FailedState.Descriptor())", span="14-14"];
m58_2 [cluster="HangFire.States.StateMachine.StateMachine()", file="MsmqJobQueueMonitoringApiFacts.cs", label="RegisterStateDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="15-15"];
m58_3 [cluster="HangFire.States.StateMachine.StateMachine()", file="MsmqJobQueueMonitoringApiFacts.cs", label="RegisterStateDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="16-16"];
m58_4 [cluster="HangFire.States.StateMachine.StateMachine()", file="MsmqJobQueueMonitoringApiFacts.cs", label="RegisterStateDescriptor(SucceededState.Name, new SucceededState.Descriptor())", span="17-17"];
m58_5 [cluster="HangFire.States.StateMachine.StateMachine()", file="MsmqJobQueueMonitoringApiFacts.cs", label="Exit HangFire.States.StateMachine.StateMachine()", span="12-12"];
m58_50 [cluster="Unk.GetValueFromHash", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m58_77 [cluster="Unk.Commit", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.Commit", span=""];
m58_10 [cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="49-49"];
m58_72 [cluster="Unk.QueueCommand", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.QueueCommand", span=""];
m58_13 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m58_74 [cluster="Unk.AppendHistory", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.AppendHistory", span=""];
m58_54 [cluster="Unk.ApplyState", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.ApplyState", span=""];
m58_49 [cluster="Unk.AcquireLock", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.AcquireLock", span=""];
m58_69 [cluster="Unk.CreateTransaction", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry Unk.CreateTransaction", span=""];
m58_98 [cluster="HangFire.States.JobState.GetProperties()", file="MsmqJobQueueMonitoringApiFacts.cs", label="Entry HangFire.States.JobState.GetProperties()", span="18-18"];
m58_114 [file="MsmqJobQueueMonitoringApiFacts.cs", label="HangFire.States.StateMachine", span=""];
m58_115 [file="MsmqJobQueueMonitoringApiFacts.cs", label=string, span=""];
m58_116 [file="MsmqJobQueueMonitoringApiFacts.cs", label=string, span=""];
m58_117 [file="MsmqJobQueueMonitoringApiFacts.cs", label="HangFire.States.JobState", span=""];
m58_118 [file="MsmqJobQueueMonitoringApiFacts.cs", label=properties, span=""];
m61_9 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", file="OwinDashboardContext.cs", label="Entry Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", span="28-28"];
m61_0 [cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", file="OwinDashboardContext.cs", label="Entry Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", span="24-24"];
m61_1 [cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardContext.cs", label="1: environment == null", span="30-30"];
m61_2 [cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardContext.cs", label="0: throw new ArgumentNullException(nameof(environment));", span="30-30"];
m61_3 [cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardContext.cs", label="0: Environment = environment", span="32-32"];
m61_4 [cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardContext.cs", label="0: Request = new OwinDashboardRequest(environment)", span="33-33"];
m61_5 [cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardContext.cs", label="0: Response = new OwinDashboardResponse(environment)", span="34-34"];
m61_6 [cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", file="OwinDashboardContext.cs", label="Exit Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", span="24-24"];
m61_8 [cluster="Unk.nameof", file="OwinDashboardContext.cs", label="Entry Unk.nameof", span=""];
m61_10 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="OwinDashboardContext.cs", label="Entry Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", span="29-29"];
m61_11 [file="OwinDashboardContext.cs", label="Hangfire.Dashboard.OwinDashboardContext", span=""];
m62_16 [cluster="System.Collections.Generic.List<T>.List()", file="OwinDashboardRequest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m62_0 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", file="OwinDashboardRequest.cs", label="Entry Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", span="28-28"];
m62_1 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardRequest.cs", label="0: environment == null", span="30-30"];
m62_2 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardRequest.cs", label="0: throw new ArgumentNullException(nameof(environment));", span="30-30"];
m62_3 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardRequest.cs", label="0: _context = new OwinContext(environment)", span="31-31"];
m62_4 [cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", file="OwinDashboardRequest.cs", label="Exit Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", span="28-28"];
m62_14 [cluster="IOwinContext.ReadFormSafeAsync()", file="OwinDashboardRequest.cs", label="Entry IOwinContext.ReadFormSafeAsync()", span="15-15"];
m62_8 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetQuery(string)", file="OwinDashboardRequest.cs", label="Entry Hangfire.Dashboard.OwinDashboardRequest.GetQuery(string)", span="40-40"];
m62_9 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetQuery(string)", file="OwinDashboardRequest.cs", label="Exit Hangfire.Dashboard.OwinDashboardRequest.GetQuery(string)", span="40-40"];
m62_15 [cluster="Unk.GetValues", file="OwinDashboardRequest.cs", label="Entry Unk.GetValues", span=""];
m62_6 [cluster="Unk.nameof", file="OwinDashboardRequest.cs", label="Entry Unk.nameof", span=""];
m62_10 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", file="OwinDashboardRequest.cs", label="Entry Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", span="42-42"];
m62_11 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", color=red, community=0, file="OwinDashboardRequest.cs", label="1: var form = await _context.ReadFormSafeAsync()", span="44-44"];
m62_12 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", color=red, community=0, file="OwinDashboardRequest.cs", label="0: return form.GetValues(key) ?? new List<string>();", span="45-45"];
m62_13 [cluster="Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", file="OwinDashboardRequest.cs", label="Exit Hangfire.Dashboard.OwinDashboardRequest.GetFormValuesAsync(string)", span="42-42"];
m62_7 [cluster="OwinContext.cstr", file="OwinDashboardRequest.cs", label="Entry OwinContext.cstr", span=""];
m62_17 [file="OwinDashboardRequest.cs", label="Hangfire.Dashboard.OwinDashboardRequest", span=""];
m63_8 [cluster="Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", file="OwinDashboardResponse.cs", label="Entry Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", span="49-49"];
m63_9 [cluster="Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", color=red, community=0, file="OwinDashboardResponse.cs", label="0: _context.Response.Expires = value", span="51-51"];
m63_10 [cluster="Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", file="OwinDashboardResponse.cs", label="Exit Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", span="49-49"];
m63_11 [cluster="Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", file="OwinDashboardResponse.cs", label="Entry Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", span="54-54"];
m63_12 [cluster="Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", color=red, community=0, file="OwinDashboardResponse.cs", label="0: return _context.Response.WriteAsync(text);", span="56-56"];
m63_13 [cluster="Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", file="OwinDashboardResponse.cs", label="Exit Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", span="54-54"];
m63_14 [cluster="Unk.WriteAsync", file="OwinDashboardResponse.cs", label="Entry Unk.WriteAsync", span=""];
m63_6 [cluster="Unk.nameof", file="OwinDashboardResponse.cs", label="Entry Unk.nameof", span=""];
m63_7 [cluster="OwinContext.cstr", file="OwinDashboardResponse.cs", label="Entry OwinContext.cstr", span=""];
m63_0 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="OwinDashboardResponse.cs", label="Entry Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", span="29-29"];
m63_1 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardResponse.cs", label="0: environment == null", span="31-31"];
m63_2 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardResponse.cs", label="4: throw new ArgumentNullException(nameof(environment));", span="31-31"];
m63_3 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="OwinDashboardResponse.cs", label="0: _context = new OwinContext(environment)", span="32-32"];
m63_4 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="OwinDashboardResponse.cs", label="Exit Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", span="29-29"];
m63_15 [file="OwinDashboardResponse.cs", label="Hangfire.Dashboard.OwinDashboardResponse", span=""];
m64_11 [cluster="Unk.Seek", file="OwinRequestExtensions.cs", label="Entry Unk.Seek", span=""];
m64_12 [cluster="Unk.ReadFormAsync", file="OwinRequestExtensions.cs", label="Entry Unk.ReadFormAsync", span=""];
m64_10 [cluster="Unk.Remove", file="OwinRequestExtensions.cs", label="Entry Unk.Remove", span=""];
m64_0 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="OwinRequestExtensions.cs", label="Entry Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", span="15-15"];
m64_1 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="OwinRequestExtensions.cs", label="object previousForm = null", span="26-26"];
m64_2 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="OwinRequestExtensions.cs", label="context.Environment.ContainsKey(FormCollectionKey)", span="28-28"];
m64_3 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="OwinRequestExtensions.cs", label="previousForm = context.Environment[FormCollectionKey]", span="30-30"];
m64_4 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="OwinRequestExtensions.cs", label="context.Environment.Remove(FormCollectionKey)", span="31-31"];
m64_5 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="OwinRequestExtensions.cs", label="context.Request.Body.CanSeek", span="36-36"];
m64_6 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="OwinRequestExtensions.cs", label="context.Request.Body.Seek(0L, SeekOrigin.Begin)", span="38-38"];
m64_7 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="OwinRequestExtensions.cs", label="return await context.Request.ReadFormAsync();", span="41-41"];
m64_8 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="OwinRequestExtensions.cs", label="Exit Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", span="15-15"];
m64_9 [cluster="Unk.ContainsKey", file="OwinRequestExtensions.cs", label="Entry Unk.ContainsKey", span=""];
m65_0 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="PerformContextFacts.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41"];
m65_1 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="PerformContextFacts.cs", label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41"];
m66_30 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="PerformContextMock.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m66_4 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", span="65-65"];
m66_5 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="storage == null", span="70-70"];
m66_7 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="factory == null", span="71-71"];
m66_9 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="stateChanger == null", span="72-72"];
m66_11 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="_storage = storage", span="74-74"];
m66_12 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="_stateChanger = stateChanger", span="75-75"];
m66_13 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="_factory = factory", span="76-76"];
m66_6 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="throw new ArgumentNullException(''storage'');", span="70-70"];
m66_8 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="throw new ArgumentNullException(''factory'');", span="71-71"];
m66_10 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="throw new ArgumentNullException(''stateChanger'');", span="72-72"];
m66_14 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="PerformContextMock.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", span="65-65"];
m66_28 [cluster="Hangfire.JobStorage.GetConnection()", file="PerformContextMock.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m66_32 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="PerformContextMock.cs", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102"];
m66_33 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="PerformContextMock.cs", label="jobId == null", span="104-104"];
m66_35 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="PerformContextMock.cs", label="state == null", span="105-105"];
m66_38 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="PerformContextMock.cs", label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    _storage, \r\n                    connection, \r\n                    jobId, \r\n                    state, \r\n                    fromState != null ? new[] { fromState } : null))", span="109-114"];
m66_39 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="PerformContextMock.cs", label="return appliedState != null && appliedState.Name.Equals(state.Name, StringComparison.OrdinalIgnoreCase);", span="116-116"];
m66_34 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="PerformContextMock.cs", label="throw new ArgumentNullException(''jobId'');", span="104-104"];
m66_36 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="PerformContextMock.cs", label="throw new ArgumentNullException(''state'');", span="105-105"];
m66_37 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="PerformContextMock.cs", label="var connection = _storage.GetConnection()", span="107-107"];
m66_40 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="PerformContextMock.cs", label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102"];
m66_41 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="PerformContextMock.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m66_0 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="PerformContextMock.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="43-43"];
m66_1 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="PerformContextMock.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient()", span="43-43"];
m66_42 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="PerformContextMock.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m66_29 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m66_31 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="PerformContextMock.cs", label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="33-33"];
m66_43 [cluster="string.Equals(string, System.StringComparison)", file="PerformContextMock.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m66_16 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
m66_17 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="job == null", span="82-82"];
m66_19 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="state == null", span="83-83"];
m66_22 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="var context = new CreateContext(_storage, connection, job, state)", span="89-89"];
m66_18 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="throw new ArgumentNullException(''job'');", span="82-82"];
m66_20 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="throw new ArgumentNullException(''state'');", span="83-83"];
m66_21 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="var connection = _storage.GetConnection()", span="87-87"];
m66_23 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="var backroundJob = _factory.Create(context)", span="90-90"];
m66_24 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="return backroundJob != null ? backroundJob.Id : null;", span="92-92"];
m66_25 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label=Exception, span="95-95"];
m66_26 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="throw new CreateJobFailedException(''Job creation factory has failed. See inner exception for details'', ex);", span="97-97"];
m66_27 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="PerformContextMock.cs", label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
m66_2 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="PerformContextMock.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="53-53"];
m66_3 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="PerformContextMock.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="53-53"];
m66_44 [file="PerformContextMock.cs", label="Hangfire.BackgroundJobClient", span=""];
m68_20 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''</th>\r\n                            <th>'')", span="155-155"];
m68_92 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218"];
m68_36 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Strings.Common_NotAvailable)", span="245-245"];
m68_10 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="queues.Count == 0", span="95-95"];
m68_11 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="1: WriteLiteral(''            <div class=\''alert alert-warning\''>\r\n                '')", span="101-101"];
m68_12 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: Write(Strings.QueuesPage_NoQueues)", span="106-106"];
m68_13 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="111-111"];
m68_14 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: WriteLiteral(''            <div class=\''table-responsive\''>\r\n                <table class=\''table t'' +\r\n''able-striped\''>\r\n                    <thead>\r\n                        <tr>\r\n     '' +\r\n''                       <th style=\''min-width: 200px;\''>'')", span="123-125"];
m68_15 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: Write(Strings.QueuesPage_Table_Queue)", span="130-130"];
m68_16 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                            <th>'')", span="135-135"];
m68_17 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: Write(Strings.QueuesPage_Table_Length)", span="140-140"];
m68_0 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="Entry HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="15-15"];
m68_8 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="QueuesPage.generated.cs", label="1: Exit HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="15-15"];
m68_7 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="_contentType = contentType", span="25-25"];
m68_9 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: WriteLiteral(''</h1>\r\n\r\n'')", span="90-90"];
m68_18 [cluster="Unk.WriteResponse", file="QueuesPage.generated.cs", label="Entry Unk.WriteResponse", span=""];
m68_22 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", color=green, community=0, file="QueuesPage.generated.cs", label="0: WriteResource(response, _assembly, _resourceName)", span="43-43"];
m68_21 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="QueuesPage.generated.cs", label="Entry HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="41-41"];
m68_23 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="QueuesPage.generated.cs", label="Exit HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="41-41"];
m68_24 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="QueuesPage.generated.cs", label="1: Entry HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="46-46"];
m68_25 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="QueuesPage.generated.cs", label="0: var inputStream = assembly.GetManifestResourceStream(resourceName)", span="48-48"];
m68_26 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="QueuesPage.generated.cs", label="0: inputStream == null", span="50-50"];
m68_27 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="throw new ArgumentException(string.Format(\r\n                        @''Resource with name {0} not found in assembly {1}.'',\r\n                        resourceName, assembly));", span="52-54"];
m68_30 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=red, community=0, file="QueuesPage.generated.cs", label="1: readLength > 0", span="59-59"];
m68_29 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="var readLength = inputStream.Read(buffer, 0, buffer.Length)", span="58-58"];
m68_31 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=red, community=0, file="QueuesPage.generated.cs", label="0: response.Write(buffer, 0, readLength)", span="61-61"];
m68_34 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", color=green, community=0, file="QueuesPage.generated.cs", label="1: Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m68_33 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="Exit HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="46-46"];
m68_38 [cluster="System.IO.Stream.Read(byte[], int, int)", file="QueuesPage.generated.cs", label="Entry System.IO.Stream.Read(byte[], int, int)", span="0-0"];
m68_43 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: WriteLiteral(@''                                        <table class=''''table table-condensed table-inner''''>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th class=''''min-width''''>'')", span="294-297"];
m68_39 [cluster="Unk.Write", file="QueuesPage.generated.cs", label="Entry Unk.Write", span=""];
m68_44 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Strings.Common_Id)", span="302-302"];
m68_42 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: WriteLiteral(''\r\n                                        </em>\r\n'')", span="282-282"];
m68_41 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Strings.QueuesPage_NoJobs)", span="277-277"];
m68_82 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                </td>\r\n                            </tr>\r\n'')", span="547-547"];
m68_48 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: Write(Strings.Common_Job)", span="323-323"];
m68_47 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''</th>\r\n                                                    <th>'')", span="318-318"];
m68_49 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="1: WriteLiteral(''</th>\r\n                                                    <th class=\''align-right'' +\r\n'' min-width\''>'')", span="328-329"];
m68_50 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Strings.Common_Enqueued)", span="334-334"];
m68_51 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                                </tr>\r\n                   '' +\r\n''                         </thead>\r\n                                            <'' +\r\n''tbody>\r\n'')", span="339-341"];
m68_52 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="queue.FirstJobs", span="346-346"];
m68_1 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="contentType == null", span="20-20"];
m68_2 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''contentType'');", span="20-20"];
m68_3 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="assembly == null", span="21-21"];
m68_5 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="_assembly = assembly", span="23-23"];
m68_6 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="_resourceName = resourceName", span="24-24"];
m68_19 [cluster="System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", file="QueuesPage.generated.cs", label="Entry System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", span="0-0"];
m68_28 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=red, community=0, file="QueuesPage.generated.cs", label="0: var buffer = new byte[Math.Min(inputStream.Length, 4096)]", span="57-57"];
m68_32 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="readLength = inputStream.Read(buffer, 0, buffer.Length)", span="62-62"];
m68_35 [cluster="System.ArgumentException.ArgumentException(string)", file="QueuesPage.generated.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m68_37 [cluster="System.Math.Min(long, long)", file="QueuesPage.generated.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m68_40 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="HangFire.Dashboard.EmbeddedResourceDispatcher", span=""];
m68_45 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''</th>\r\n                                                    <th class=\''min-width\''>'' +\r\n'''')", span="307-308"];
m68_46 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Strings.Common_State)", span="313-313"];
m68_53 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                    <tr class=\'''')", span="352-352"];
m68_54 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(job.Value == null || !job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="357-357"];
m68_55 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\''>\r\n                                                        <td class=\''min-width\'''' +\r\n''>\r\n                                                            '')", span="362-363"];
m68_56 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Html.JobIdLink(job.Key))", span="368-368"];
m68_57 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\r\n'')", span="373-373"];
m68_59 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                                <span title=\'''')", span="384-384"];
m68_60 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Strings.Common_JobStateChanged_Text)", span="389-389"];
m68_61 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="394-394"];
m68_62 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                        </td>\r\n'')", span="404-404"];
m68_64 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                            <td colspan=\''3\''><em>'')", span="415-415"];
m68_65 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Strings.Common_JobExpired)", span="420-420"];
m68_66 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''</em></td>\r\n'')", span="425-425"];
m68_67 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                            <td class=\''min-width\'''' +\r\n''>\r\n                                                                '')", span="437-438"];
m68_68 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Html.StateLabel(job.Value.State))", span="443-443"];
m68_69 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\r\n                                                            </td>\r\n'')", span="448-448"];
m68_70 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                            <td>\r\n               '' +\r\n''                                                 '')", span="452-453"];
m68_71 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Html.JobNameLink(job.Key, job.Value.Job))", span="458-458"];
m68_72 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\r\n                                                            </td>\r\n'')", span="463-463"];
m68_73 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                            <td class=\''align-righ'' +\r\n''t min-width\''>\r\n'')", span="467-468"];
m68_75 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Html.RelativeTime(job.Value.EnqueuedAt.Value))", span="481-481"];
m68_76 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                                    <em>'')", span="496-496"];
m68_77 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Write(Strings.Common_NotAvailable)", span="501-501"];
m68_78 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''</em>\r\n'')", span="506-506"];
m68_79 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                            </td>\r\n'')", span="516-516"];
m68_80 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                                    </tr>\r\n'')", span="526-526"];
m68_81 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                            </tbody>\r\n                           '' +\r\n''             </table>\r\n'')", span="536-537"];
m68_83 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                    </tbody>\r\n                </table>\r\n            </div>\r\n'')", span="557-557"];
m68_84 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''    </div>\r\n</div>'')", span="567-567"];
m68_4 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''assembly'');", span="21-21"];
m68_58 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="job.Value != null && !job.Value.InEnqueuedState", span="378-378"];
m68_63 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="job.Value == null", span="409-409"];
m68_74 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="job.Value.EnqueuedAt.HasValue", span="473-473"];
m68_85 [cluster="Hangfire.Dashboard.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.Pages.QueuesPage.Execute()", span="46-46"];
m68_88 [cluster="Hangfire.JobStorage.GetMonitoringApi()", file="QueuesPage.generated.cs", label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54"];
m68_93 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m68_87 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m68_90 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m68_86 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m68_97 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m68_94 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m68_95 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125"];
m68_96 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m68_89 [cluster="Hangfire.Storage.IMonitoringApi.Queues()", file="QueuesPage.generated.cs", label="Entry Hangfire.Storage.IMonitoringApi.Queues()", span="24-24"];
m68_91 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m68_98 [file="QueuesPage.generated.cs", label="Hangfire.Dashboard.Pages.QueuesPage", span=""];
m71_587 [cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobManager.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m71_0 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="17-17"];
m71_1 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="RecurringJobManager.cs", label="var defaultProvider = new Mock<IPersistentJobQueueProvider>()", span="19-19"];
m71_2 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="RecurringJobManager.cs", label="defaultProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(new Mock<IPersistentJobQueue>().Object)", span="20-21"];
m71_3 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="RecurringJobManager.cs", label="_queueProviders = new PersistentJobQueueProviderCollection(defaultProvider.Object)", span="23-23"];
m71_153 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="162-162"];
m71_154 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var correctJobQueue = new Mock<IPersistentJobQueue>();\r\n                var correctProvider = new Mock<IPersistentJobQueueProvider>();\r\n                correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object);\r\n\r\n                _queueProviders.Add(correctProvider.Object, new [] { ''default'' });\r\n\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''));\r\n            })", span="164-176"];
m71_155 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="162-162"];
m71_726 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297"];
m71_627 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", span="722-722"];
m71_629 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                Commit(sql, x => x.RemoveSet(''set-1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n                Assert.Equal(''set-2'', record.Key);\r\n            })", span="727-739"];
m71_628 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="RecurringJobManager.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score]) values (@key, @value, 0.0)''", span="724-725"];
m71_630 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", span="722-722"];
m71_119 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="129-129"];
m71_121 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", color=green, community=0, file="RecurringJobManager.cs", label="0: UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="136-158"];
m71_120 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="RecurringJobManager.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="131-134"];
m71_122 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="129-129"];
m71_393 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="454-454"];
m71_394 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="456-468"];
m71_395 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="454-454"];
m71_614 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", span="712-712"];
m71_615 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null)));\r\n            })", span="714-718"];
m71_616 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", span="712-712"];
m71_211 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142"];
m71_419 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="489-489"];
m71_420 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="491-502"];
m71_421 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="489-489"];
m71_318 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168"];
m71_48 [cluster="Unk.ToString", file="RecurringJobManager.cs", label="Entry Unk.ToString", span=""];
m71_152 [cluster="Unk.AddJobState", file="RecurringJobManager.cs", label="Entry Unk.AddJobState", span=""];
m71_476 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="564-564"];
m71_477 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="566-577"];
m71_478 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="564-564"];
m71_782 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", span="897-897"];
m71_783 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="899-905"];
m71_784 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", span="897-897"];
m71_655 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275"];
m71_319 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="355-355"];
m71_320 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="357-368"];
m71_321 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="355-355"];
m71_559 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", span="653-653"];
m71_560 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                // Act\r\n                Commit(sql, x => x.RemoveHash(''some-hash''));\r\n\r\n                // Assert\r\n                var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="655-670"];
m71_561 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", span="653-653"];
m71_589 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", span="686-686"];
m71_590 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null)));\r\n\r\n                Assert.Equal(''items'', exception.ParamName);\r\n            })", span="688-694"];
m71_591 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", span="686-686"];
m71_637 [cluster="Unk.Execute", file="RecurringJobManager.cs", label="Entry Unk.Execute", span=""];
m71_407 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="472-472"];
m71_408 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="474-485"];
m71_409 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="472-472"];
m71_177 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="179-179"];
m71_178 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="RecurringJobManager.cs", label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="181-183"];
m71_179 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="179-179"];
m71_761 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308"];
m71_343 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="183-183"];
m71_50 [cluster="Unk.GetTestJob", file="RecurringJobManager.cs", label="Entry Unk.GetTestJob", span=""];
m71_816 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", span="935-935"];
m71_817 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="937-943"];
m71_818 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", span="935-935"];
m71_7 [cluster="Mock<IPersistentJobQueue>.cstr", file="RecurringJobManager.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m71_267 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="291-291"];
m71_268 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="293-302"];
m71_269 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="291-291"];
m71_829 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330"];
m71_193 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135"];
m71_795 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319"];
m71_514 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="610-610"];
m71_515 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="612-618"];
m71_516 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="610-610"];
m71_691 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286"];
m71_280 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163"];
m71_194 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="202-202"];
m71_195 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="204-218"];
m71_196 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="202-202"];
m71_293 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="323-323"];
m71_294 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="325-336"];
m71_295 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="323-323"];
m71_513 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224"];
m71_441 [cluster="Unk.ToArray", file="RecurringJobManager.cs", label="Entry Unk.ToArray", span=""];
m71_52 [cluster="System.DateTime.AddDays(double)", file="RecurringJobManager.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m71_4 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="RecurringJobManager.cs", label="HangFire.Web.StyleSheetHandler", span=""];
m71_5 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="RecurringJobManager.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m71_830 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", span="947-947"];
m71_832 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistList(''list-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''list-1'']);\r\n                Assert.NotNull(records[''list-2'']);\r\n            })", span="953-969"];
m71_831 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="949-951"];
m71_833 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", span="947-947"];
m71_692 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", span="794-794"];
m71_694 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1'']);\r\n                Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''set-2'']);\r\n            })", span="800-817"];
m71_693 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="RecurringJobManager.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="796-798"];
m71_695 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", span="794-794"];
m71_173 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="175-175"];
m71_20 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="30-30"];
m71_21 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: new SqlServerWriteOnlyTransaction(null, null, _queueProviders)", span="30-30"];
m71_22 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="30-30"];
m71_38 [cluster="lambda expression", file="RecurringJobManager.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54"];
m71_39 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55"];
m71_37 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="52-64"];
m71_40 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="57-57"];
m71_43 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62"];
m71_41 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: var job = GetTestJob(sql, jobId)", span="59-59"];
m71_55 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="57-57"];
m71_42 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1))", span="60-60"];
m71_44 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: Assert.Null(anotherJob.ExpireAt)", span="63-63"];
m71_56 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="57-57"];
m71_57 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="57-57"];
m71_45 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="52-64"];
m71_65 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m71_66 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78"];
m71_64 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="75-87"];
m71_67 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: Commit(sql, x => x.PersistJob(jobId))", span="80-80"];
m71_75 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: x.PersistJob(jobId)", span="80-80"];
m71_68 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: var job = GetTestJob(sql, jobId)", span="82-82"];
m71_70 [cluster="lambda expression", file="RecurringJobManager.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="85-85"];
m71_74 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="80-80"];
m71_69 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="1: Assert.Null(job.ExpireAt)", span="83-83"];
m71_76 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="80-80"];
m71_83 [cluster="lambda expression", file="RecurringJobManager.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="100-100"];
m71_84 [cluster="lambda expression", file="RecurringJobManager.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="101-101"];
m71_82 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="98-125"];
m71_88 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="106-107"];
m71_85 [cluster="lambda expression", file="RecurringJobManager.cs", label="var state = new Mock<IState>()", span="103-103"];
m71_87 [cluster="lambda expression", file="RecurringJobManager.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="105-105"];
m71_89 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="109-109"];
m71_111 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="106-106"];
m71_94 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: Assert.Null(anotherJob.StateName)", span="116-116"];
m71_93 [cluster="lambda expression", file="RecurringJobManager.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="115-115"];
m71_95 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Null(anotherJob.StateId)", span="117-117"];
m71_99 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="1: Assert.Equal(''Reason'', jobState.Reason)", span="122-122"];
m71_96 [cluster="lambda expression", file="RecurringJobManager.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="119-119"];
m71_98 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''State'', jobState.Name)", span="121-121"];
m71_100 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.NotNull(jobState.CreatedAt)", span="123-123"];
m71_112 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: x.SerializeData()", span="106-106"];
m71_113 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="106-106"];
m71_123 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="136-158"];
m71_125 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="1: var state = new Mock<IState>()", span="140-140"];
m71_124 [cluster="lambda expression", file="RecurringJobManager.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="138-138"];
m71_126 [cluster="lambda expression", file="RecurringJobManager.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="141-141"];
m71_127 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="0: state.Setup(x => x.Reason).Returns(''Reason'')", span="142-142"];
m71_128 [cluster="lambda expression", file="RecurringJobManager.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="143-144"];
m71_129 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="146-146"];
m71_150 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddJobState(jobId, state.Object)", span="146-146"];
m71_143 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="142-142"];
m71_144 [cluster="lambda expression", color=green, community=0, file="RecurringJobManager.cs", label="1: x.Reason", span="142-142"];
m71_145 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="142-142"];
m71_90 [cluster="lambda expression", file="RecurringJobManager.cs", label="var job = GetTestJob(sql, jobId)", span="111-111"];
m71_130 [cluster="lambda expression", file="RecurringJobManager.cs", label="var job = GetTestJob(sql, jobId)", span="148-148"];
m71_160 [cluster="lambda expression", file="RecurringJobManager.cs", label="_queueProviders.Add(correctProvider.Object, new [] { ''default'' })", span="171-171"];
m71_161 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="173-173"];
m71_184 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="191-191"];
m71_198 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="206-206"];
m71_216 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="226-230"];
m71_228 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="243-243"];
m71_242 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="258-258"];
m71_259 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="278-282"];
m71_271 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="295-295"];
m71_285 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="310-314"];
m71_297 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="327-331"];
m71_309 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="344-344"];
m71_323 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="359-363"];
m71_335 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="376-380"];
m71_348 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="393-397"];
m71_360 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="410-414"];
m71_372 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="427-427"];
m71_385 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="441-445"];
m71_397 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="458-463"];
m71_411 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="476-480"];
m71_423 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="493-497"];
m71_435 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="510-517"];
m71_454 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="532-538"];
m71_468 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="551-555"];
m71_480 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="568-572"];
m71_492 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="585-589"];
m71_504 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())))", span="602-603"];
m71_508 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>()))", span="603-603"];
m71_518 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)))", span="614-615"];
m71_522 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', null))", span="615-615"];
m71_531 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="626-630"];
m71_550 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null)))", span="647-648"];
m71_553 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.RemoveHash(null))", span="648-648"];
m71_563 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="658-662"];
m71_564 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.RemoveHash(''some-hash''))", span="665-665"];
m71_578 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>())))", span="678-679"];
m71_582 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.AddRangeToSet(null, new List<string>()))", span="679-679"];
m71_593 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null)))", span="690-691"];
m71_597 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.AddRangeToSet(''my-set'', null))", span="691-691"];
m71_607 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.AddRangeToSet(''my-set'', items))", span="704-704"];
m71_618 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null)))", span="716-717"];
m71_621 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.RemoveSet(null))", span="717-717"];
m71_633 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.RemoveSet(''set-1''))", span="735-735"];
m71_645 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5))))", span="747-748"];
m71_649 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5)))", span="748-748"];
m71_662 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)))", span="771-771"];
m71_681 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45))))", span="786-787"];
m71_685 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45)))", span="787-787"];
m71_698 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)))", span="810-810"];
m71_717 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45))))", span="825-826"];
m71_721 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45)))", span="826-826"];
m71_733 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)))", span="848-848"];
m71_752 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null)))", span="863-864"];
m71_756 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.PersistHash(null))", span="864-864"];
m71_768 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.PersistHash(''hash-1''))", span="887-887"];
m71_786 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null)))", span="901-902"];
m71_790 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.PersistSet(null))", span="902-902"];
m71_802 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.PersistSet(''set-1''))", span="925-925"];
m71_820 [cluster="lambda expression", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null)))", span="939-940"];
m71_824 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.PersistList(null))", span="940-940"];
m71_836 [cluster="lambda expression", file="RecurringJobManager.cs", label="Commit(sql, x => x.PersistList(''list-1''))", span="963-963"];
m71_11 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="20-20"];
m71_167 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="168-168"];
m71_217 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="232-232"];
m71_260 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="284-284"];
m71_286 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="316-316"];
m71_298 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="333-333"];
m71_336 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="382-382"];
m71_349 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="399-399"];
m71_361 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="416-416"];
m71_386 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="447-447"];
m71_398 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="465-465"];
m71_412 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="482-482"];
m71_424 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="499-499"];
m71_455 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="540-540"];
m71_469 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="557-557"];
m71_481 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="574-574"];
m71_493 [cluster="lambda expression", file="RecurringJobManager.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="591-591"];
m71_565 [cluster="lambda expression", file="RecurringJobManager.cs", label="var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single()", span="668-668"];
m71_608 [cluster="lambda expression", file="RecurringJobManager.cs", label="var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''')", span="706-706"];
m71_29 [cluster="lambda expression", file="RecurringJobManager.cs", label="new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null, null)", span="39-39"];
m71_133 [cluster="lambda expression", file="RecurringJobManager.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="152-152"];
m71_185 [cluster="lambda expression", file="RecurringJobManager.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="193-193"];
m71_199 [cluster="lambda expression", file="RecurringJobManager.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="208-208"];
m71_229 [cluster="lambda expression", file="RecurringJobManager.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="245-245"];
m71_243 [cluster="lambda expression", file="RecurringJobManager.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="260-260"];
m71_272 [cluster="lambda expression", file="RecurringJobManager.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="297-297"];
m71_310 [cluster="lambda expression", file="RecurringJobManager.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="346-346"];
m71_324 [cluster="lambda expression", file="RecurringJobManager.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="365-365"];
m71_373 [cluster="lambda expression", file="RecurringJobManager.cs", label="var record = sql.Query(''select * from HangFire.List'').Single()", span="429-429"];
m71_436 [cluster="lambda expression", file="RecurringJobManager.cs", label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="519-519"];
m71_532 [cluster="lambda expression", file="RecurringJobManager.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="632-635"];
m71_634 [cluster="lambda expression", file="RecurringJobManager.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="737-737"];
m71_663 [cluster="lambda expression", file="RecurringJobManager.cs", label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="774-774"];
m71_699 [cluster="lambda expression", file="RecurringJobManager.cs", label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="813-813"];
m71_734 [cluster="lambda expression", file="RecurringJobManager.cs", label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="851-851"];
m71_769 [cluster="lambda expression", file="RecurringJobManager.cs", label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="890-890"];
m71_803 [cluster="lambda expression", file="RecurringJobManager.cs", label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="928-928"];
m71_837 [cluster="lambda expression", file="RecurringJobManager.cs", label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="966-966"];
m71_97 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="120-120"];
m71_134 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="153-153"];
m71_209 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="206-206"];
m71_252 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="258-258"];
m71_664 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1''])", span="775-775"];
m71_665 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61))", span="776-776"];
m71_700 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1''])", span="814-814"];
m71_701 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61))", span="815-815"];
m71_735 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1''])", span="852-852"];
m71_736 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61))", span="853-853"];
m71_767 [cluster="lambda expression", file="RecurringJobManager.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="880-884"];
m71_801 [cluster="lambda expression", file="RecurringJobManager.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="918-922"];
m71_835 [cluster="lambda expression", file="RecurringJobManager.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="956-960"];
m71_204 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="216-216"];
m71_205 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="217-217"];
m71_248 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="268-268"];
m71_249 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="269-269"];
m71_131 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Null(job.StateName)", span="149-149"];
m71_132 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Null(job.StateId)", span="150-150"];
m71_666 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Null(records[''hash-2''])", span="777-777"];
m71_702 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Null(records[''set-2''])", span="816-816"];
m71_737 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Null(records[''list-2''])", span="854-854"];
m71_770 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Null(records[''hash-1''])", span="891-891"];
m71_804 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Null(records[''set-1''])", span="929-929"];
m71_838 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Null(records[''list-1''])", span="967-967"];
m71_72 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="75-87"];
m71_71 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="86-86"];
m71_116 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.SetJobState(jobId, state.Object)", span="109-109"];
m71_102 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="98-125"];
m71_86 [cluster="lambda expression", file="RecurringJobManager.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="104-104"];
m71_108 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="105-105"];
m71_115 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="109-109"];
m71_159 [cluster="lambda expression", file="RecurringJobManager.cs", label="correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object)", span="168-169"];
m71_511 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.SetRangeInHash(null, new Dictionary<string, string>())", span="603-603"];
m71_538 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="626-630"];
m71_569 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="658-662"];
m71_92 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.NotNull(job.StateId)", span="113-113"];
m71_101 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="124-124"];
m71_91 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''State'', job.StateName)", span="112-112"];
m71_135 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''State'', jobState.Name)", span="154-154"];
m71_136 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="155-155"];
m71_138 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="157-157"];
m71_186 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-key'', record.Key)", span="195-195"];
m71_187 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(1, record.Value)", span="196-196"];
m71_188 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="197-197"];
m71_200 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-key'', record.Key)", span="210-210"];
m71_201 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(1, record.Value)", span="211-211"];
m71_218 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(2, recordCount)", span="234-234"];
m71_230 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-key'', record.Key)", span="247-247"];
m71_231 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(-1, record.Value)", span="248-248"];
m71_232 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="249-249"];
m71_244 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-key'', record.Key)", span="262-262"];
m71_245 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(-1, record.Value)", span="263-263"];
m71_261 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(2, recordCount)", span="286-286"];
m71_273 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-key'', record.Key)", span="299-299"];
m71_274 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-value'', record.Value)", span="300-300"];
m71_275 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(0.0, record.Score, 2)", span="301-301"];
m71_287 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(2, recordCount)", span="318-318"];
m71_299 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(1, recordCount)", span="335-335"];
m71_311 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-key'', record.Key)", span="348-348"];
m71_312 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-value'', record.Value)", span="349-349"];
m71_313 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(3.2, record.Score, 3)", span="350-350"];
m71_325 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(3.2, record.Score, 3)", span="367-367"];
m71_337 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(0, recordCount)", span="384-384"];
m71_350 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(1, recordCount)", span="401-401"];
m71_362 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(1, recordCount)", span="418-418"];
m71_374 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-key'', record.Key)", span="431-431"];
m71_375 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''my-value'', record.Value)", span="432-432"];
m71_387 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(2, recordCount)", span="449-449"];
m71_399 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(0, recordCount)", span="467-467"];
m71_413 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(1, recordCount)", span="484-484"];
m71_425 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(1, recordCount)", span="501-501"];
m71_437 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(2, records.Length)", span="521-521"];
m71_438 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''1'', records[0].Value)", span="522-522"];
m71_439 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''2'', records[1].Value)", span="523-523"];
m71_456 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(2, recordCount)", span="542-542"];
m71_470 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(0, recordCount)", span="559-559"];
m71_482 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(0, recordCount)", span="576-576"];
m71_494 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(1, recordCount)", span="593-593"];
m71_505 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''key'', exception.ParamName)", span="605-605"];
m71_519 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="617-617"];
m71_533 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="637-637"];
m71_534 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="638-638"];
m71_566 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(0, count)", span="669-669"];
m71_579 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''key'', exception.ParamName)", span="681-681"];
m71_594 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''items'', exception.ParamName)", span="693-693"];
m71_609 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(items, records)", span="707-707"];
m71_635 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''set-2'', record.Key)", span="738-738"];
m71_646 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''key'', exception.ParamName)", span="750-750"];
m71_682 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''key'', exception.ParamName)", span="789-789"];
m71_718 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''key'', exception.ParamName)", span="828-828"];
m71_753 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''key'', exception.ParamName)", span="866-866"];
m71_787 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''key'', exception.ParamName)", span="904-904"];
m71_821 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.Equal(''key'', exception.ParamName)", span="942-942"];
m71_147 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.SerializeData()", span="143-143"];
m71_139 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="136-158"];
m71_140 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="141-141"];
m71_146 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="143-143"];
m71_149 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="146-146"];
m71_151 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="146-146"];
m71_156 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="164-176"];
m71_158 [cluster="lambda expression", file="RecurringJobManager.cs", label="var correctProvider = new Mock<IPersistentJobQueueProvider>()", span="167-167"];
m71_162 [cluster="lambda expression", file="RecurringJobManager.cs", label="correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''))", span="175-175"];
m71_169 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="173-173"];
m71_183 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="189-198"];
m71_190 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="191-191"];
m71_197 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="204-218"];
m71_208 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="206-206"];
m71_215 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="224-235"];
m71_220 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="226-230"];
m71_227 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="241-250"];
m71_234 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="243-243"];
m71_241 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="256-270"];
m71_251 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="258-258"];
m71_258 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="276-287"];
m71_263 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="278-282"];
m71_270 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="293-302"];
m71_277 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="295-295"];
m71_284 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="308-319"];
m71_289 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="310-314"];
m71_296 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="325-336"];
m71_301 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="327-331"];
m71_308 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="342-351"];
m71_315 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="344-344"];
m71_322 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="357-368"];
m71_327 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="359-363"];
m71_334 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="374-385"];
m71_339 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="376-380"];
m71_347 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="391-402"];
m71_352 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="393-397"];
m71_359 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="408-419"];
m71_364 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="410-414"];
m71_371 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="425-433"];
m71_377 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="427-427"];
m71_384 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="439-450"];
m71_389 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="441-445"];
m71_396 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="456-468"];
m71_401 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="458-463"];
m71_410 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="474-485"];
m71_415 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="476-480"];
m71_422 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="491-502"];
m71_427 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="493-497"];
m71_434 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="508-524"];
m71_442 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="510-517"];
m71_453 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="530-543"];
m71_458 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="532-538"];
m71_467 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="549-560"];
m71_472 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="551-555"];
m71_479 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="566-577"];
m71_484 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="568-572"];
m71_491 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="583-594"];
m71_496 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="585-589"];
m71_503 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="600-606"];
m71_507 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="603-603"];
m71_509 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="603-603"];
m71_510 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="603-603"];
m71_517 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="612-618"];
m71_521 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="615-615"];
m71_523 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="615-615"];
m71_524 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="615-615"];
m71_530 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="624-639"];
m71_537 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="626-630"];
m71_549 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="645-649"];
m71_551 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="645-649"];
m71_552 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="648-648"];
m71_554 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="648-648"];
m71_555 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="648-648"];
m71_562 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="655-670"];
m71_568 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="658-662"];
m71_571 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="665-665"];
m71_577 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="676-682"];
m71_581 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="679-679"];
m71_583 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="679-679"];
m71_584 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="679-679"];
m71_592 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="688-694"];
m71_596 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="691-691"];
m71_598 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="691-691"];
m71_599 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="691-691"];
m71_605 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="700-708"];
m71_606 [cluster="lambda expression", file="RecurringJobManager.cs", label="var items = new List<string> { ''1'', ''2'', ''3'' }", span="702-702"];
m71_611 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="704-704"];
m71_617 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="714-718"];
m71_619 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="714-718"];
m71_620 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="717-717"];
m71_622 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="717-717"];
m71_623 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="717-717"];
m71_631 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="727-739"];
m71_632 [cluster="lambda expression", file="RecurringJobManager.cs", label="sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="729-733"];
m71_638 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="735-735"];
m71_644 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="745-751"];
m71_648 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="748-748"];
m71_650 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="748-748"];
m71_651 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="748-748"];
m71_660 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="761-778"];
m71_661 [cluster="lambda expression", file="RecurringJobManager.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                })", span="764-768"];
m71_668 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="771-771"];
m71_680 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="784-790"];
m71_684 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="787-787"];
m71_686 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="787-787"];
m71_687 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="787-787"];
m71_696 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="800-817"];
m71_697 [cluster="lambda expression", file="RecurringJobManager.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="803-807"];
m71_704 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="810-810"];
m71_716 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="823-829"];
m71_720 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="826-826"];
m71_722 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="826-826"];
m71_723 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="826-826"];
m71_731 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="838-855"];
m71_732 [cluster="lambda expression", file="RecurringJobManager.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                })", span="841-845"];
m71_739 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="848-848"];
m71_751 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="861-867"];
m71_755 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="864-864"];
m71_757 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="864-864"];
m71_758 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="864-864"];
m71_766 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="877-893"];
m71_773 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="887-887"];
m71_785 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="899-905"];
m71_789 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="902-902"];
m71_791 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="902-902"];
m71_792 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="902-902"];
m71_800 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="915-931"];
m71_807 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="925-925"];
m71_819 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="937-943"];
m71_823 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="940-940"];
m71_825 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="940-940"];
m71_826 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="940-940"];
m71_834 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="953-969"];
m71_841 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="963-963"];
m71_10 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="20-20"];
m71_12 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="20-20"];
m71_28 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="39-39"];
m71_166 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="168-168"];
m71_168 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="168-168"];
m71_30 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="39-39"];
m71_137 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.NotNull(jobState.CreatedAt)", span="156-156"];
m71_202 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.NotNull(record.ExpireAt)", span="212-212"];
m71_203 [cluster="lambda expression", file="RecurringJobManager.cs", label="var expireAt = (DateTime) record.ExpireAt", span="214-214"];
m71_246 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.NotNull(record.ExpireAt)", span="264-264"];
m71_247 [cluster="lambda expression", file="RecurringJobManager.cs", label="var expireAt = (DateTime)record.ExpireAt", span="266-266"];
m71_540 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="635-635"];
m71_543 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="635-635"];
m71_671 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="774-774"];
m71_674 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="774-774"];
m71_707 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="813-813"];
m71_710 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="813-813"];
m71_742 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="851-851"];
m71_745 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="851-851"];
m71_776 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="890-890"];
m71_779 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="890-890"];
m71_771 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.NotNull(records[''hash-2''])", span="892-892"];
m71_810 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="928-928"];
m71_813 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="928-928"];
m71_805 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.NotNull(records[''set-2''])", span="930-930"];
m71_844 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="966-966"];
m71_847 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="966-966"];
m71_839 [cluster="lambda expression", file="RecurringJobManager.cs", label="Assert.NotNull(records[''list-2''])", span="968-968"];
m71_210 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="206-206"];
m71_253 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="258-258"];
m71_206 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="204-218"];
m71_250 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="256-270"];
m71_667 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="761-778"];
m71_703 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="800-817"];
m71_738 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="838-855"];
m71_117 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="109-109"];
m71_105 [cluster="lambda expression", file="RecurringJobManager.cs", label="Entry lambda expression", span="104-104"];
m71_110 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="105-105"];
m71_109 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.Reason", span="105-105"];
m71_157 [cluster="lambda expression", file="RecurringJobManager.cs", label="var correctJobQueue = new Mock<IPersistentJobQueue>()", span="166-166"];
m71_512 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="603-603"];
m71_539 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="626-630"];
m71_570 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="658-662"];
m71_189 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="189-198"];
m71_219 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="224-235"];
m71_233 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="241-250"];
m71_262 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="276-287"];
m71_276 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="293-302"];
m71_288 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="308-319"];
m71_300 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="325-336"];
m71_314 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="342-351"];
m71_326 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="357-368"];
m71_338 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="374-385"];
m71_351 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="391-402"];
m71_363 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="408-419"];
m71_376 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="425-433"];
m71_388 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="439-450"];
m71_400 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="456-468"];
m71_414 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="474-485"];
m71_426 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="491-502"];
m71_440 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="508-524"];
m71_457 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="530-543"];
m71_471 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="549-560"];
m71_483 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="566-577"];
m71_495 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="583-594"];
m71_506 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="600-606"];
m71_520 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="612-618"];
m71_535 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="624-639"];
m71_567 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="655-670"];
m71_580 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="676-682"];
m71_595 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="688-694"];
m71_610 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="700-708"];
m71_636 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="727-739"];
m71_647 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="745-751"];
m71_683 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="784-790"];
m71_719 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="823-829"];
m71_754 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="861-867"];
m71_788 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="899-905"];
m71_822 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="937-943"];
m71_148 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="143-143"];
m71_142 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="141-141"];
m71_141 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.Name", span="141-141"];
m71_163 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="164-176"];
m71_171 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="173-173"];
m71_170 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToQueue(''default'', ''1'')", span="173-173"];
m71_192 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="191-191"];
m71_191 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.IncrementCounter(''my-key'')", span="191-191"];
m71_223 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="226-230"];
m71_221 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.IncrementCounter(''my-key'')", span="228-228"];
m71_222 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.IncrementCounter(''my-key'')", span="229-229"];
m71_236 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="243-243"];
m71_235 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.DecrementCounter(''my-key'')", span="243-243"];
m71_266 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="278-282"];
m71_264 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.DecrementCounter(''my-key'')", span="280-280"];
m71_265 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.DecrementCounter(''my-key'')", span="281-281"];
m71_279 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="295-295"];
m71_278 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="295-295"];
m71_292 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="310-314"];
m71_290 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="312-312"];
m71_291 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''another-value'')", span="313-313"];
m71_304 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="327-331"];
m71_302 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="329-329"];
m71_303 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="330-330"];
m71_317 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="344-344"];
m71_316 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="344-344"];
m71_330 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="359-363"];
m71_328 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="361-361"];
m71_329 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="362-362"];
m71_342 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="376-380"];
m71_340 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="378-378"];
m71_341 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveFromSet(''my-key'', ''my-value'')", span="379-379"];
m71_355 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="393-397"];
m71_353 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="395-395"];
m71_354 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveFromSet(''my-key'', ''different-value'')", span="396-396"];
m71_367 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="410-414"];
m71_365 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="412-412"];
m71_366 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveFromSet(''different-key'', ''my-value'')", span="413-413"];
m71_379 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="427-427"];
m71_378 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="427-427"];
m71_392 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="441-445"];
m71_390 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="443-443"];
m71_391 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="444-444"];
m71_405 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="458-463"];
m71_402 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="460-460"];
m71_403 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="461-461"];
m71_404 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveFromList(''my-key'', ''my-value'')", span="462-462"];
m71_418 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="476-480"];
m71_416 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="478-478"];
m71_417 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveFromList(''my-key'', ''different-value'')", span="479-479"];
m71_430 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="493-497"];
m71_428 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="495-495"];
m71_429 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveFromList(''different-key'', ''my-value'')", span="496-496"];
m71_448 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="510-517"];
m71_443 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''0'')", span="512-512"];
m71_444 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''1'')", span="513-513"];
m71_445 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''2'')", span="514-514"];
m71_446 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''3'')", span="515-515"];
m71_447 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.TrimList(''my-key'', 1, 2)", span="516-516"];
m71_463 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="532-538"];
m71_459 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''0'')", span="534-534"];
m71_460 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''1'')", span="535-535"];
m71_461 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''2'')", span="536-536"];
m71_462 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.TrimList(''my-key'', 1, 100)", span="537-537"];
m71_475 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="551-555"];
m71_473 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''0'')", span="553-553"];
m71_474 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.TrimList(''my-key'', 1, 100)", span="554-554"];
m71_487 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="568-572"];
m71_485 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''0'')", span="570-570"];
m71_486 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.TrimList(''my-key'', 1, 0)", span="571-571"];
m71_499 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="585-589"];
m71_497 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.InsertToList(''my-key'', ''0'')", span="587-587"];
m71_498 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.TrimList(''another-key'', 1, 0)", span="588-588"];
m71_526 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="615-615"];
m71_525 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.SetRangeInHash(''some-hash'', null)", span="615-615"];
m71_557 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="648-648"];
m71_556 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveHash(null)", span="648-648"];
m71_573 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="665-665"];
m71_572 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveHash(''some-hash'')", span="665-665"];
m71_586 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="679-679"];
m71_585 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddRangeToSet(null, new List<string>())", span="679-679"];
m71_601 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="691-691"];
m71_600 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddRangeToSet(''my-set'', null)", span="691-691"];
m71_612 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.AddRangeToSet(''my-set'', items)", span="704-704"];
m71_613 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="704-704"];
m71_625 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="717-717"];
m71_624 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveSet(null)", span="717-717"];
m71_640 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="735-735"];
m71_639 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.RemoveSet(''set-1'')", span="735-735"];
m71_653 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="748-748"];
m71_652 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.ExpireHash(null, TimeSpan.FromMinutes(5))", span="748-748"];
m71_670 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="771-771"];
m71_669 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60))", span="771-771"];
m71_689 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="787-787"];
m71_688 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.ExpireSet(null, TimeSpan.FromSeconds(45))", span="787-787"];
m71_706 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="810-810"];
m71_705 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60))", span="810-810"];
m71_725 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="826-826"];
m71_724 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.ExpireList(null, TimeSpan.FromSeconds(45))", span="826-826"];
m71_741 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="848-848"];
m71_740 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.ExpireList(''list-1'', TimeSpan.FromMinutes(60))", span="848-848"];
m71_760 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="864-864"];
m71_759 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.PersistHash(null)", span="864-864"];
m71_772 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="877-893"];
m71_775 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="887-887"];
m71_774 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.PersistHash(''hash-1'')", span="887-887"];
m71_794 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="902-902"];
m71_793 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.PersistSet(null)", span="902-902"];
m71_806 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="915-931"];
m71_809 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="925-925"];
m71_808 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.PersistSet(''set-1'')", span="925-925"];
m71_828 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="940-940"];
m71_827 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.PersistList(null)", span="940-940"];
m71_840 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="953-969"];
m71_843 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="963-963"];
m71_842 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.PersistList(''list-1'')", span="963-963"];
m71_542 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="635-635"];
m71_541 [cluster="lambda expression", file="RecurringJobManager.cs", label="(string)x.Field", span="635-635"];
m71_545 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="635-635"];
m71_544 [cluster="lambda expression", file="RecurringJobManager.cs", label="(string)x.Value", span="635-635"];
m71_673 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="774-774"];
m71_672 [cluster="lambda expression", file="RecurringJobManager.cs", label="(string)x.Key", span="774-774"];
m71_676 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="774-774"];
m71_675 [cluster="lambda expression", file="RecurringJobManager.cs", label="(DateTime?)x.ExpireAt", span="774-774"];
m71_709 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="813-813"];
m71_708 [cluster="lambda expression", file="RecurringJobManager.cs", label="(string)x.Key", span="813-813"];
m71_712 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="813-813"];
m71_711 [cluster="lambda expression", file="RecurringJobManager.cs", label="(DateTime?)x.ExpireAt", span="813-813"];
m71_744 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="851-851"];
m71_743 [cluster="lambda expression", file="RecurringJobManager.cs", label="(string)x.Key", span="851-851"];
m71_747 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="851-851"];
m71_746 [cluster="lambda expression", file="RecurringJobManager.cs", label="(DateTime?)x.ExpireAt", span="851-851"];
m71_778 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="890-890"];
m71_777 [cluster="lambda expression", file="RecurringJobManager.cs", label="(string)x.Key", span="890-890"];
m71_781 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="890-890"];
m71_780 [cluster="lambda expression", file="RecurringJobManager.cs", label="(DateTime?)x.ExpireAt", span="890-890"];
m71_812 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="928-928"];
m71_811 [cluster="lambda expression", file="RecurringJobManager.cs", label="(string)x.Key", span="928-928"];
m71_815 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="928-928"];
m71_814 [cluster="lambda expression", file="RecurringJobManager.cs", label="(DateTime?)x.ExpireAt", span="928-928"];
m71_846 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="966-966"];
m71_845 [cluster="lambda expression", file="RecurringJobManager.cs", label="(string)x.Key", span="966-966"];
m71_849 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="966-966"];
m71_848 [cluster="lambda expression", file="RecurringJobManager.cs", label="(DateTime?)x.ExpireAt", span="966-966"];
m71_107 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="104-104"];
m71_106 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.Name", span="104-104"];
m71_174 [cluster="lambda expression", file="RecurringJobManager.cs", label="x.Enqueue(''default'', ''1'')", span="175-175"];
m71_175 [cluster="lambda expression", file="RecurringJobManager.cs", label="Exit lambda expression", span="175-175"];
m71_588 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252"];
m71_381 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="437-437"];
m71_382 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="439-450"];
m71_383 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="437-437"];
m71_368 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="423-423"];
m71_369 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="425-433"];
m71_370 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="423-423"];
m71_602 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", span="698-698"];
m71_603 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var items = new List<string> { ''1'', ''2'', ''3'' };\r\n\r\n                Commit(sql, x => x.AddRangeToSet(''my-set'', items));\r\n\r\n                var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''');\r\n                Assert.Equal(items, records);\r\n            })", span="700-708"];
m71_604 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", span="698-698"];
m71_406 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201"];
m71_8 [cluster="Unk.Returns", file="RecurringJobManager.cs", label="Entry Unk.Returns", span=""];
m71_796 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", span="909-909"];
m71_798 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistSet(''set-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''set-1'']);\r\n                Assert.NotNull(records[''set-2'']);\r\n            })", span="915-931"];
m71_797 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="911-913"];
m71_799 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", span="909-909"];
m71_356 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="406-406"];
m71_357 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="408-419"];
m71_358 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="406-406"];
m71_713 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", span="821-821"];
m71_714 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="823-829"];
m71_715 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", span="821-821"];
m71_103 [cluster="Mock<IState>.cstr", file="RecurringJobManager.cs", label="Entry Mock<IState>.cstr", span=""];
m71_51 [cluster="System.DateTime.AddMinutes(double)", file="RecurringJobManager.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m71_224 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="239-239"];
m71_225 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="241-250"];
m71_226 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="239-239"];
m71_859 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52"];
m71_36 [cluster="Unk.UseConnection", file="RecurringJobManager.cs", label="Entry Unk.UseConnection", span=""];
m71_237 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149"];
m71_118 [cluster="Unk.SetJobState", file="RecurringJobManager.cs", label="Entry Unk.SetJobState", span=""];
m71_488 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="581-581"];
m71_489 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="583-594"];
m71_490 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="581-581"];
m71_24 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="36-36"];
m71_25 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="RecurringJobManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null, null))", span="38-39"];
m71_26 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="RecurringJobManager.cs", label="Assert.Equal(''queueProviders'', exception.ParamName)", span="41-41"];
m71_27 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="36-36"];
m71_31 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m71_59 [cluster="Unk.ExpireJob", file="RecurringJobManager.cs", label="Entry Unk.ExpireJob", span=""];
m71_331 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="372-372"];
m71_332 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="374-385"];
m71_333 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="372-372"];
m71_15 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="27-27"];
m71_16 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", color=green, community=0, file="RecurringJobManager.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null, null, _queueProviders))", span="29-30"];
m71_17 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="RecurringJobManager.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="32-32"];
m71_18 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="27-27"];
m71_305 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="340-340"];
m71_306 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="342-351"];
m71_307 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="340-340"];
m71_46 [cluster="Unk.Query", file="RecurringJobManager.cs", label="Entry Unk.Query", span=""];
m71_854 [cluster="System.Action<T>.Invoke(T)", file="RecurringJobManager.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m71_558 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242"];
m71_238 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="254-254"];
m71_239 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="256-270"];
m71_240 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="254-254"];
m71_500 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="598-598"];
m71_501 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="600-606"];
m71_502 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="598-598"];
m71_727 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", span="833-833"];
m71_729 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1'']);\r\n                Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''list-2'']);\r\n            })", span="838-855"];
m71_728 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="RecurringJobManager.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key]) values (@key)''", span="835-836"];
m71_730 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", span="833-833"];
m71_164 [cluster="Unk.Add", file="RecurringJobManager.cs", label="Entry Unk.Add", span=""];
m71_73 [cluster="Unk.NotNull", file="RecurringJobManager.cs", label="Entry Unk.NotNull", span=""];
m71_32 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="45-45"];
m71_33 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", color=green, community=0, file="RecurringJobManager.cs", label="1: string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="47-50"];
m71_34 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", color=green, community=0, file="RecurringJobManager.cs", label="0: UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="52-64"];
m71_35 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="45-45"];
m71_762 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", span="871-871"];
m71_764 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistHash(''hash-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''hash-1'']);\r\n                Assert.NotNull(records[''hash-2'']);\r\n            })", span="877-893"];
m71_763 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="873-875"];
m71_765 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", span="871-871"];
m71_49 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", span="980-980"];
m71_855 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="RecurringJobManager.cs", label="var transaction = new SqlServerWriteOnlyTransaction(connection, null, _queueProviders)", span="984-984"];
m71_856 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="RecurringJobManager.cs", label="action(transaction)", span="986-986"];
m71_857 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="RecurringJobManager.cs", label="transaction.Commit()", span="987-987"];
m71_858 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", span="980-980"];
m71_180 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="187-187"];
m71_181 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="189-198"];
m71_182 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="187-187"];
m71_6 [cluster="Unk.Setup", file="RecurringJobManager.cs", label="Entry Unk.Setup", span=""];
m71_54 [cluster="Unk.Null", file="RecurringJobManager.cs", label="Entry Unk.Null", span=""];
m71_9 [cluster="PersistentJobQueueProviderCollection.cstr", file="RecurringJobManager.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m71_850 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="972-972"];
m71_851 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="RecurringJobManager.cs", label="var connection = ConnectionUtils.CreateConnection()", span="974-974"];
m71_852 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="RecurringJobManager.cs", label="action(connection)", span="976-976"];
m71_853 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="972-972"];
m71_656 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", span="755-755"];
m71_658 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1'']);\r\n                Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''hash-2'']);\r\n            })", span="761-778"];
m71_657 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="RecurringJobManager.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="757-759"];
m71_659 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", span="755-755"];
m71_464 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="547-547"];
m71_465 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="549-560"];
m71_466 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="547-547"];
m71_207 [cluster="System.DateTime.AddHours(double)", file="RecurringJobManager.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m71_212 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="222-222"];
m71_213 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="224-235"];
m71_214 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="222-222"];
m71_748 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", span="859-859"];
m71_749 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="861-867"];
m71_750 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", span="859-859"];
m71_450 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="528-528"];
m71_451 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="530-543"];
m71_452 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="528-528"];
m71_14 [cluster="Unk.GetJobQueue", file="RecurringJobManager.cs", label="Entry Unk.GetJobQueue", span=""];
m71_431 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="506-506"];
m71_432 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="508-524"];
m71_433 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="506-506"];
m71_165 [cluster="Unk.Verify", file="RecurringJobManager.cs", label="Entry Unk.Verify", span=""];
m71_255 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="274-274"];
m71_256 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="276-287"];
m71_257 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="274-274"];
m71_449 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209"];
m71_654 [cluster="System.TimeSpan.FromMinutes(double)", file="RecurringJobManager.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m71_536 [cluster="Unk.ToDictionary", file="RecurringJobManager.cs", label="Entry Unk.ToDictionary", span=""];
m71_281 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="306-306"];
m71_282 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="308-319"];
m71_283 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="306-306"];
m71_23 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39"];
m71_78 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="91-91"];
m71_79 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", color=green, community=0, file="RecurringJobManager.cs", label="1: string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="93-96"];
m71_80 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", color=green, community=0, file="RecurringJobManager.cs", label="0: UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="98-125"];
m71_81 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="91-91"];
m71_60 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="68-68"];
m71_61 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", color=green, community=0, file="RecurringJobManager.cs", label="0: string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="70-73"];
m71_62 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", color=green, community=0, file="RecurringJobManager.cs", label="0: UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="75-87"];
m71_63 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="68-68"];
m71_254 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156"];
m71_626 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265"];
m71_13 [cluster="Unk.>", file="RecurringJobManager.cs", label="Entry Unk.>", span=""];
m71_690 [cluster="System.TimeSpan.FromSeconds(double)", file="RecurringJobManager.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m71_172 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127"];
m71_58 [cluster="System.TimeSpan.FromDays(double)", file="RecurringJobManager.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m71_176 [cluster="Unk.Enqueue", file="RecurringJobManager.cs", label="Entry Unk.Enqueue", span=""];
m71_527 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="622-622"];
m71_528 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="624-639"];
m71_529 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="622-622"];
m71_104 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m71_574 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", span="674-674"];
m71_575 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="676-682"];
m71_576 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", span="674-674"];
m71_114 [cluster="Unk.SerializeData", file="RecurringJobManager.cs", label="Entry Unk.SerializeData", span=""];
m71_344 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="389-389"];
m71_345 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="391-402"];
m71_346 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="389-389"];
m71_641 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", span="743-743"];
m71_642 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="745-751"];
m71_643 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", span="743-743"];
m71_47 [cluster="Unk.Single", file="RecurringJobManager.cs", label="Entry Unk.Single", span=""];
m71_53 [cluster="Unk.True", file="RecurringJobManager.cs", label="Entry Unk.True", span=""];
m71_77 [cluster="Unk.PersistJob", file="RecurringJobManager.cs", label="Entry Unk.PersistJob", span=""];
m71_677 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", span="782-782"];
m71_678 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="784-790"];
m71_679 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", span="782-782"];
m71_380 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193"];
m71_546 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", span="643-643"];
m71_547 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null)));\r\n            })", span="645-649"];
m71_548 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobManager.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", span="643-643"];
m71_860 [file="RecurringJobManager.cs", label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", span=""];
m71_861 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_862 [file="RecurringJobManager.cs", label=jobId, span=""];
m71_863 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_864 [file="RecurringJobManager.cs", label=jobId, span=""];
m71_865 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_868 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_869 [file="RecurringJobManager.cs", label=jobId, span=""];
m71_870 [file="RecurringJobManager.cs", label=state, span=""];
m71_871 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_872 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_873 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_874 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_875 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_877 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_879 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_881 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_883 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_885 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_887 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_889 [file="RecurringJobManager.cs", label=SqlConnection, span=""];
m71_886 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_888 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_890 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_866 [file="RecurringJobManager.cs", label=jobId, span=""];
m71_867 [file="RecurringJobManager.cs", label=state, span=""];
m71_878 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_880 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_882 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_884 [file="RecurringJobManager.cs", label=arrangeSql, span=""];
m71_876 [file="RecurringJobManager.cs", label=items, span=""];
m72_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManagerExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m72_8 [cluster="HangFire.States.ProcessingState.SerializeData()", file="RecurringJobManagerExtensions.cs", label="Entry HangFire.States.ProcessingState.SerializeData()", span="39-39"];
m72_9 [cluster="HangFire.States.ProcessingState.SerializeData()", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="1: return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.ToStringTimestamp(StartedAt) },\r\n                { ''ServerName'', ServerName }\r\n            };", span="41-45"];
m72_10 [cluster="HangFire.States.ProcessingState.SerializeData()", file="RecurringJobManagerExtensions.cs", label="Exit HangFire.States.ProcessingState.SerializeData()", span="39-39"];
m72_6 [cluster="string.IsNullOrWhiteSpace(string)", file="RecurringJobManagerExtensions.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m72_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManagerExtensions.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m72_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="0: String.IsNullOrWhiteSpace(serverName)", span="28-28"];
m72_3 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="1: ServerName = serverName", span="30-30"];
m72_2 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="0: throw new ArgumentNullException(''serverName'');", span="28-28"];
m72_4 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=red, community=0, file="RecurringJobManagerExtensions.cs", label="1: StartedAt = DateTime.UtcNow", span="31-31"];
m72_5 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManagerExtensions.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m72_12 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RecurringJobManagerExtensions.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m72_13 [file="RecurringJobManagerExtensions.cs", label="HangFire.States.ProcessingState", span=""];
m73_86 [cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m73_190 [cluster="long.Parse(string)", file="RecurringJobOptionsFacts.cs", label="Entry long.Parse(string)", span="0-0"];
m73_247 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="343-343"];
m73_248 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="346-365"];
m73_249 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="343-343"];
m73_311 [cluster="Dictionary<string, string>.cstr", file="RecurringJobOptionsFacts.cs", label="Entry Dictionary<string, string>.cstr", span=""];
m73_274 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="457-457"];
m73_327 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var endDate = DateTime.UtcNow", span="460-460"];
m73_334 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="468-468"];
m73_335 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="469-469"];
m73_328 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var dates = new List<DateTime>()", span="461-461"];
m73_331 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="dates.Add(endDate)", span="464-464"];
m73_332 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="endDate = endDate.AddHours(-1)", span="465-465"];
m73_329 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var i = 0", span="462-462"];
m73_338 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="i < dates.Count", span="472-472"];
m73_342 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="result.Add(dates[i], value)", span="480-480"];
m73_330 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="i < 24", span="462-462"];
m73_333 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="i++", span="462-462"];
m73_336 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="471-471"];
m73_340 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="475-475"];
m73_337 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var i = 0", span="472-472"];
m73_344 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="return result;", span="483-483"];
m73_343 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="i++", span="472-472"];
m73_339 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="long value", span="474-474"];
m73_341 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="value = 0", span="477-477"];
m73_345 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="457-457"];
m73_122 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="486-486"];
m73_356 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var endDate = DateTime.UtcNow.Date", span="489-489"];
m73_363 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="500-500"];
m73_364 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="502-502"];
m73_357 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var startDate = endDate.AddDays(-7)", span="490-490"];
m73_359 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="startDate <= endDate", span="493-493"];
m73_360 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="dates.Add(endDate)", span="495-495"];
m73_361 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="endDate = endDate.AddDays(-1)", span="496-496"];
m73_358 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var dates = new List<DateTime>()", span="491-491"];
m73_362 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="499-499"];
m73_371 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="result.Add(dates[i], value)", span="512-512"];
m73_367 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="i < stringDates.Count", span="505-505"];
m73_365 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="504-504"];
m73_369 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="508-508"];
m73_366 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="var i = 0", span="505-505"];
m73_373 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="return result;", span="515-515"];
m73_372 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="i++", span="505-505"];
m73_368 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="long value", span="507-507"];
m73_370 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="value = 0", span="510-510"];
m73_374 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="486-486"];
m73_165 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m73_257 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="368-368"];
m73_258 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'', ''Fetched'' },\r\n                    null,\r\n                    (job, jobData, state) => new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    });\r\n            });", span="371-388"];
m73_259 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="368-368"];
m73_349 [cluster="Unk.TryParse", file="RecurringJobOptionsFacts.cs", label="Entry Unk.TryParse", span=""];
m73_61 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m73_56 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m73_62 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m73_164 [cluster="int.Parse(string)", file="RecurringJobOptionsFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m73_275 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="396-396"];
m73_276 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => GetHourlyTimelineStats(redis, ''failed''));", span="398-398"];
m73_277 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="396-396"];
m73_515 [cluster="Unk.GetClient", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetClient", span=""];
m73_433 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="580-580"];
m73_434 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n\r\n                var queues = redis.GetAllItemsFromSet(''hangfire:queues'');\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''));\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:deleted''),\r\n                        x => stats.Deleted = long.Parse(x ?? ''0''));\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:recurring-jobs''),\r\n                        x => stats.Recurring = x);\r\n\r\n                    foreach (var queue in queues)\r\n                    {\r\n                        var queueName = queue;\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x);\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return stats;\r\n            });", span="582-634"];
m73_435 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="580-580"];
m73_22 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51"];
m73_23 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => \r\n                redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)));", span="53-54"];
m73_24 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51"];
m73_55 [cluster="Unk.GetJobsWithProperties", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m73_57 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m73_421 [cluster="KeyValuePair<string, T>.cstr", file="RecurringJobOptionsFacts.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m73_91 [cluster="JobList<ScheduledJobDto>.cstr", file="RecurringJobOptionsFacts.cs", label="Entry JobList<ScheduledJobDto>.cstr", span=""];
m73_88 [cluster="Unk.CreatePipeline", file="RecurringJobOptionsFacts.cs", label="Entry Unk.CreatePipeline", span=""];
m73_522 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m73_516 [cluster="Unk.action", file="RecurringJobOptionsFacts.cs", label="Entry Unk.action", span=""];
m73_402 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m73_281 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="401-401"];
m73_282 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var job = redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId));\r\n                if (job.Count == 0) return null;\r\n\r\n                var hiddenProperties = new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' };\r\n\r\n                var historyList = redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId));\r\n\r\n                var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList();\r\n\r\n                var stateHistory = new List<StateHistoryDto>(history.Count);\r\n                foreach (var entry in history)\r\n                {\r\n                    var dto = new StateHistoryDto\r\n                    {\r\n                        StateName = entry[''State''],\r\n                        Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                        CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                    };\r\n\r\n                    // Each history item contains all of the information,\r\n                    // but other code should not know this. We'll remove\r\n                    // unwanted keys.\r\n                    var stateData = new Dictionary<string, string>(entry);\r\n                    stateData.Remove(''State'');\r\n                    stateData.Remove(''Reason'');\r\n                    stateData.Remove(''CreatedAt'');\r\n\r\n                    dto.Data = stateData;\r\n                    stateHistory.Add(dto);\r\n                }\r\n\r\n                // For compatibility\r\n                if (!job.ContainsKey(''Method'')) job.Add(''Method'', null);\r\n                if (!job.ContainsKey(''ParameterTypes'')) job.Add(''ParameterTypes'', null);\r\n\r\n                return new JobDetailsDto\r\n                {\r\n                    Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                    CreatedAt =\r\n                        job.ContainsKey(''CreatedAt'')\r\n                            ? JobHelper.FromStringTimestamp(job[''CreatedAt''])\r\n                            : (DateTime?) null,\r\n                    Properties =\r\n                        job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = stateHistory\r\n                };\r\n            });", span="403-454"];
m73_283 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="401-401"];
m73_309 [cluster="Unk.ContainsKey", file="RecurringJobOptionsFacts.cs", label="Entry Unk.ContainsKey", span=""];
m73_113 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m73_423 [cluster="Unk.selector", file="RecurringJobOptionsFacts.cs", label="Entry Unk.selector", span=""];
m73_427 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="575-575"];
m73_428 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => redis.GetListCount(''hangfire:succeeded''));", span="577-577"];
m73_429 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="575-575"];
m73_407 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m73_454 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m73_85 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m73_163 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m73_307 [cluster="List<StateHistoryDto>.cstr", file="RecurringJobOptionsFacts.cs", label="Entry List<StateHistoryDto>.cstr", span=""];
m73_315 [cluster="Unk.Where", file="RecurringJobOptionsFacts.cs", label="Entry Unk.Where", span=""];
m73_191 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="263-263"];
m73_192 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var deletedJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:deleted'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    deletedJobIds,\r\n                    null,\r\n                    new[] { ''DeletedAt'', ''State'' },\r\n                    (job, jobData, state) => new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="265-283"];
m73_193 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="263-263"];
m73_375 [cluster="System.DateTime.AddDays(double)", file="RecurringJobOptionsFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m73_222 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="518-518"];
m73_382 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="jobIds.Count == 0", span="525-525"];
m73_384 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="527-527"];
m73_385 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="528-528"];
m73_386 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="properties = properties ?? new string[0]", span="530-530"];
m73_387 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="var pipeline = redis.CreatePipeline()", span="532-532"];
m73_388 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label=jobIds, span="534-534"];
m73_391 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="stateProperties != null", span="544-544"];
m73_392 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="546-548"];
m73_394 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null)\r\n                        ? default(T)\r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="555-572"];
m73_383 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="525-525"];
m73_390 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id),\r\n                            properties.Union(new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="538-542"];
m73_393 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="pipeline.Flush()", span="552-552"];
m73_389 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="var id = jobId", span="536-536"];
m73_395 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="518-518"];
m73_422 [cluster="Unk.TrueForAll", file="RecurringJobOptionsFacts.cs", label="Entry Unk.TrueForAll", span=""];
m73_9 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", span="637-637"];
m73_512 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="RecurringJobOptionsFacts.cs", label="var redis = _connectionPool.GetClient()", span="639-639"];
m73_513 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="RecurringJobOptionsFacts.cs", label="return action(redis);", span="641-641"];
m73_514 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", span="637-637"];
m73_313 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m73_112 [cluster="KeyValuePair<string, ScheduledJobDto>.cstr", file="RecurringJobOptionsFacts.cs", label="Entry KeyValuePair<string, ScheduledJobDto>.cstr", span=""];
m73_0 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", span="32-32"];
m73_1 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", color=red, community=0, file="RecurringJobOptionsFacts.cs", label="0: connectionPool == null", span="34-34"];
m73_3 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", color=red, community=0, file="RecurringJobOptionsFacts.cs", label="0: _connectionPool = connectionPool", span="36-36"];
m73_2 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", color=red, community=0, file="RecurringJobOptionsFacts.cs", label="0: throw new ArgumentNullException(''connectionPool'');", span="34-34"];
m73_4 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", span="32-32"];
m73_201 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m73_509 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="627-627"];
m73_10 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="41-42"];
m73_11 [cluster="lambda expression", color=red, community=0, file="RecurringJobOptionsFacts.cs", label="0: redis.GetSortedSetCount(''hangfire:schedule'')", span="42-42"];
m73_12 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="41-42"];
m73_18 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="48-48"];
m73_17 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="47-48"];
m73_19 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="47-48"];
m73_26 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="54-54"];
m73_25 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="53-54"];
m73_27 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="53-54"];
m73_31 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="59-59"];
m73_32 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="redis.GetSortedSetCount(''hangfire:failed'')", span="59-59"];
m73_33 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="59-59"];
m73_37 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="64-64"];
m73_38 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="redis.GetSortedSetCount(''hangfire:processing'')", span="64-64"];
m73_39 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="64-64"];
m73_43 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="69-69"];
m73_44 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="redis.GetListCount(''hangfire:deleted'')", span="69-69"];
m73_45 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="69-69"];
m73_50 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="77-80"];
m73_49 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="75-94"];
m73_51 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());", span="82-93"];
m73_52 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="75-94"];
m73_58 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="86-93"];
m73_64 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="93-93"];
m73_59 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }", span="86-93"];
m73_60 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="86-93"];
m73_65 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.Value.StartedAt", span="93-93"];
m73_66 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="93-93"];
m73_72 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var scheduledJobs = redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="101-104"];
m73_71 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="99-151"];
m73_77 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var pipeline = redis.CreatePipeline()", span="114-114"];
m73_73 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="scheduledJobs.Count == 0", span="106-106"];
m73_78 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label=scheduledJobs, span="116-116"];
m73_83 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return new JobList<ScheduledJobDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());", span="136-150"];
m73_74 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());", span="108-108"];
m73_75 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var jobs = new Dictionary<string, List<string>>()", span="111-111"];
m73_76 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var states = new Dictionary<string, List<String>>()", span="112-112"];
m73_80 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                            x => jobs.Add(job.Key, x))", span="120-124"];
m73_100 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="jobs.Add(job.Key, x)", span="124-124"];
m73_110 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="137-149"];
m73_81 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' }),\r\n                            x => states.Add(job.Key, x))", span="126-130"];
m73_107 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="states.Add(job.Key, x)", span="130-130"];
m73_82 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.Flush()", span="133-133"];
m73_79 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var job = scheduledJob", span="118-118"];
m73_95 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' })", span="121-123"];
m73_104 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' })", span="127-129"];
m73_94 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="121-123"];
m73_99 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="124-124"];
m73_103 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="127-129"];
m73_106 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="130-130"];
m73_84 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="99-151"];
m73_109 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="137-149"];
m73_96 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="121-123"];
m73_101 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="124-124"];
m73_105 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="127-129"];
m73_108 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="130-130"];
m73_111 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="137-149"];
m73_119 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="156-156"];
m73_120 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="GetTimelineStats(redis, ''succeeded'')", span="156-156"];
m73_121 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="156-156"];
m73_126 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="161-161"];
m73_127 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="GetTimelineStats(redis, ''failed'')", span="161-161"];
m73_128 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="161-161"];
m73_132 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="166-207"];
m73_133 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'')", span="168-168"];
m73_138 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var pipeline = redis.CreatePipeline()", span="178-178"];
m73_134 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="serverNames.Count == 0", span="170-170"];
m73_139 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label=serverNames, span="180-180"];
m73_144 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="199-206"];
m73_135 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return new List<ServerDto>();", span="172-172"];
m73_136 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var servers = new Dictionary<string, List<string>>()", span="175-175"];
m73_137 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var queues = new Dictionary<string, List<string>>()", span="176-176"];
m73_141 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="184-188"];
m73_151 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="servers.Add(name, x)", span="188-188"];
m73_161 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="199-206"];
m73_142 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="190-193"];
m73_158 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="queues.Add(name, x)", span="193-193"];
m73_143 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.Flush()", span="196-196"];
m73_140 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var name = serverName", span="182-182"];
m73_148 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="185-187"];
m73_154 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="191-192"];
m73_147 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="185-187"];
m73_150 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="188-188"];
m73_153 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="191-192"];
m73_157 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="193-193"];
m73_145 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="166-207"];
m73_160 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="199-206"];
m73_149 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="185-187"];
m73_152 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="188-188"];
m73_155 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="191-192"];
m73_159 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="193-193"];
m73_162 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="199-206"];
m73_170 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var failedJobIds = redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="214-217"];
m73_169 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="212-234"];
m73_171 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    failedJobIds,\r\n                    null,\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                    (job, jobData, state) => new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="219-233"];
m73_172 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="212-234"];
m73_174 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="224-233"];
m73_175 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="224-233"];
m73_176 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="224-233"];
m73_182 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="241-244"];
m73_181 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="239-260"];
m73_183 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="246-259"];
m73_184 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="239-260"];
m73_186 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="251-259"];
m73_187 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="251-259"];
m73_188 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="251-259"];
m73_195 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var deletedJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:deleted'',\r\n                    from,\r\n                    from + count - 1)", span="267-270"];
m73_194 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="265-283"];
m73_196 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    deletedJobIds,\r\n                    null,\r\n                    new[] { ''DeletedAt'', ''State'' },\r\n                    (job, jobData, state) => new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="272-282"];
m73_197 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="265-283"];
m73_198 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="277-282"];
m73_199 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="277-282"];
m73_200 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="277-282"];
m73_205 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="288-340"];
m73_206 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="290-290"];
m73_212 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var pipeline = redis.CreatePipeline()", span="299-299"];
m73_217 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var jobs = GetJobsWithProperties(\r\n                        redis,\r\n                        firstJobIds,\r\n                        new[] { ''State'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, jobData, state) => new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="317-328"];
m73_207 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="291-291"];
m73_208 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label=queues, span="293-293"];
m73_218 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Fetched = fetched\r\n                    })", span="330-336"];
m73_219 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return result;", span="339-339"];
m73_209 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="IList<string> firstJobIds = null", span="295-295"];
m73_213 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="301-304"];
m73_226 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="302-303"];
m73_214 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="306-308"];
m73_232 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="307-307"];
m73_215 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => fetched = x)", span="310-312"];
m73_238 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="311-311"];
m73_210 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="long length = 0", span="296-296"];
m73_211 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="long fetched = 0", span="297-297"];
m73_216 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.Flush()", span="314-314"];
m73_225 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="302-303"];
m73_228 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="304-304"];
m73_231 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="307-307"];
m73_234 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="308-308"];
m73_237 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="311-311"];
m73_240 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="312-312"];
m73_243 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="322-328"];
m73_220 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="288-340"];
m73_227 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="302-303"];
m73_229 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="firstJobIds = x", span="304-304"];
m73_230 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="304-304"];
m73_233 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="307-307"];
m73_235 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="length = x", span="308-308"];
m73_236 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="308-308"];
m73_239 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="311-311"];
m73_241 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="fetched = x", span="312-312"];
m73_242 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="312-312"];
m73_244 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="322-328"];
m73_245 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="322-328"];
m73_251 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="348-351"];
m73_250 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="346-365"];
m73_252 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="353-364"];
m73_253 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="346-365"];
m73_254 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="358-364"];
m73_255 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="358-364"];
m73_256 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="358-364"];
m73_261 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="373-375"];
m73_260 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="371-388"];
m73_262 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'', ''Fetched'' },\r\n                    null,\r\n                    (job, jobData, state) => new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    });", span="377-387"];
m73_263 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="371-388"];
m73_264 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="382-387"];
m73_265 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    }", span="382-387"];
m73_266 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="382-387"];
m73_271 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="393-393"];
m73_272 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="GetHourlyTimelineStats(redis, ''succeeded'')", span="393-393"];
m73_273 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="393-393"];
m73_278 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="398-398"];
m73_279 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="GetHourlyTimelineStats(redis, ''failed'')", span="398-398"];
m73_280 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="398-398"];
m73_285 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var job = redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="405-405"];
m73_289 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var historyList = redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="410-411"];
m73_284 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="403-454"];
m73_286 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="job.Count == 0", span="406-406"];
m73_300 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="!job.ContainsKey(''Method'')", span="440-440"];
m73_301 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="job.Add(''Method'', null)", span="440-440"];
m73_302 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="!job.ContainsKey(''ParameterTypes'')", span="441-441"];
m73_303 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="job.Add(''ParameterTypes'', null)", span="441-441"];
m73_304 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return new JobDetailsDto\r\n                {\r\n                    Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                    CreatedAt =\r\n                        job.ContainsKey(''CreatedAt'')\r\n                            ? JobHelper.FromStringTimestamp(job[''CreatedAt''])\r\n                            : (DateTime?) null,\r\n                    Properties =\r\n                        job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = stateHistory\r\n                };", span="443-453"];
m73_287 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return null;", span="406-406"];
m73_288 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var hiddenProperties = new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' }", span="408-408"];
m73_318 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="!hiddenProperties.Contains(x.Key)", span="451-451"];
m73_290 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="413-415"];
m73_291 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var stateHistory = new List<StateHistoryDto>(history.Count)", span="417-417"];
m73_292 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label=history, span="418-418"];
m73_299 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stateHistory.Add(dto)", span="436-436"];
m73_293 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var dto = new StateHistoryDto\r\n                    {\r\n                        StateName = entry[''State''],\r\n                        Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                        CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                    }", span="420-425"];
m73_294 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var stateData = new Dictionary<string, string>(entry)", span="430-430"];
m73_298 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="dto.Data = stateData", span="435-435"];
m73_295 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stateData.Remove(''State'')", span="431-431"];
m73_296 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stateData.Remove(''Reason'')", span="432-432"];
m73_297 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stateData.Remove(''CreatedAt'')", span="433-433"];
m73_305 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="403-454"];
m73_317 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="451-451"];
m73_321 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="451-451"];
m73_324 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="451-451"];
m73_319 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="451-451"];
m73_322 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.Key", span="451-451"];
m73_323 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="451-451"];
m73_325 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.Value", span="451-451"];
m73_326 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="451-451"];
m73_352 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="468-468"];
m73_351 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="468-468"];
m73_353 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="468-468"];
m73_380 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="500-500"];
m73_376 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="499-499"];
m73_379 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="500-500"];
m73_377 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.ToString(''yyyy-MM-dd'')", span="499-499"];
m73_378 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="499-499"];
m73_381 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="500-500"];
m73_409 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="547-547"];
m73_419 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null)\r\n                        ? default(T)\r\n                        : selector(x.Method, x.Job, x.State))", span="567-571"];
m73_404 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="!jobs.ContainsKey(id)", span="542-542"];
m73_405 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="jobs.Add(id, x)", span="542-542"];
m73_416 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="556-566"];
m73_412 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="!states.ContainsKey(id)", span="548-548"];
m73_413 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="states.Add(id, x)", span="548-548"];
m73_399 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id),\r\n                            properties.Union(new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray())", span="539-541"];
m73_398 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="539-541"];
m73_403 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="542-542"];
m73_408 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="547-547"];
m73_411 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="548-548"];
m73_415 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="556-566"];
m73_418 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="567-571"];
m73_400 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="539-541"];
m73_406 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="542-542"];
m73_410 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="547-547"];
m73_414 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="548-548"];
m73_417 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="556-566"];
m73_420 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="567-571"];
m73_424 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="569-569"];
m73_425 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="y == null", span="569-569"];
m73_426 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="569-569"];
m73_430 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="577-577"];
m73_431 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="redis.GetListCount(''hangfire:succeeded'')", span="577-577"];
m73_432 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="577-577"];
m73_436 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="582-634"];
m73_437 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var stats = new StatisticsDto()", span="584-584"];
m73_438 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="586-586"];
m73_439 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var pipeline = redis.CreatePipeline()", span="588-588"];
m73_440 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="590-592"];
m73_460 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stats.Servers = x", span="592-592"];
m73_441 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="594-596"];
m73_466 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stats.Queues = x", span="596-596"];
m73_442 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="598-600"];
m73_472 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stats.Scheduled = x", span="600-600"];
m73_443 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="602-604"];
m73_478 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stats.Processing = x", span="604-604"];
m73_444 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="606-608"];
m73_485 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="608-608"];
m73_445 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="610-612"];
m73_492 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stats.Failed = x", span="612-612"];
m73_446 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:deleted''),\r\n                        x => stats.Deleted = long.Parse(x ?? ''0''))", span="614-616"];
m73_498 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stats.Deleted = long.Parse(x ?? ''0'')", span="616-616"];
m73_447 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:recurring-jobs''),\r\n                        x => stats.Recurring = x)", span="618-620"];
m73_504 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stats.Recurring = x", span="620-620"];
m73_450 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="625-627"];
m73_510 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="stats.Enqueued += x", span="627-627"];
m73_452 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="return stats;", span="633-633"];
m73_448 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label=queues, span="622-622"];
m73_451 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="pipeline.Flush()", span="630-630"];
m73_455 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="591-591"];
m73_459 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="592-592"];
m73_462 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="595-595"];
m73_465 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="596-596"];
m73_468 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="599-599"];
m73_471 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="600-600"];
m73_474 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="603-603"];
m73_477 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="604-604"];
m73_480 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="607-607"];
m73_484 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="608-608"];
m73_488 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="611-611"];
m73_491 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="612-612"];
m73_494 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="615-615"];
m73_497 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="616-616"];
m73_500 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="619-619"];
m73_503 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="620-620"];
m73_449 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="var queueName = queue", span="624-624"];
m73_507 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="626-626"];
m73_506 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Entry lambda expression", span="626-626"];
m73_453 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="582-634"];
m73_456 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetSetCount(''hangfire:servers'')", span="591-591"];
m73_457 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="591-591"];
m73_461 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="592-592"];
m73_463 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetSetCount(''hangfire:queues'')", span="595-595"];
m73_464 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="595-595"];
m73_467 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="596-596"];
m73_469 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="599-599"];
m73_470 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="599-599"];
m73_473 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="600-600"];
m73_475 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="603-603"];
m73_476 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="603-603"];
m73_479 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="604-604"];
m73_481 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="607-607"];
m73_482 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="607-607"];
m73_486 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="608-608"];
m73_489 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="611-611"];
m73_490 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="611-611"];
m73_493 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="612-612"];
m73_495 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetValue(''hangfire:stats:deleted'')", span="615-615"];
m73_496 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="615-615"];
m73_499 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="616-616"];
m73_501 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="x.GetSortedSetCount(''hangfire:recurring-jobs'')", span="619-619"];
m73_502 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="619-619"];
m73_505 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="620-620"];
m73_508 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="626-626"];
m73_511 [cluster="lambda expression", file="RecurringJobOptionsFacts.cs", label="Exit lambda expression", span="627-627"];
m73_53 [cluster="Unk.GetRangeFromSortedSet", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m73_223 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m73_224 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m73_93 [cluster="Unk.ToList", file="RecurringJobOptionsFacts.cs", label="Entry Unk.ToList", span=""];
m73_97 [cluster="Unk.Format", file="RecurringJobOptionsFacts.cs", label="Entry Unk.Format", span=""];
m73_89 [cluster="Unk.QueueCommand", file="RecurringJobOptionsFacts.cs", label="Entry Unk.QueueCommand", span=""];
m73_115 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645"];
m73_517 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptionsFacts.cs", label="return new InvocationData(\r\n                    type,\r\n                    method,\r\n                    parameterTypes,\r\n                    arguments).Deserialize();", span="650-654"];
m73_518 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptionsFacts.cs", label=Exception, span="656-656"];
m73_519 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptionsFacts.cs", label="return null;", span="658-658"];
m73_520 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645"];
m73_166 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="210-210"];
m73_167 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var failedJobIds = redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    failedJobIds,\r\n                    null,\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                    (job, jobData, state) => new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="212-234"];
m73_168 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="210-210"];
m73_267 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m73_354 [cluster="System.DateTime.ToString(string)", file="RecurringJobOptionsFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m73_70 [cluster="Unk.UseConnection", file="RecurringJobOptionsFacts.cs", label="Entry Unk.UseConnection", span=""];
m73_221 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RecurringJobOptionsFacts.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m73_348 [cluster="Unk.ElementAt", file="RecurringJobOptionsFacts.cs", label="Entry Unk.ElementAt", span=""];
m73_129 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164"];
m73_130 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'');\r\n\r\n                if (serverNames.Count == 0)\r\n                {\r\n                    return new List<ServerDto>();\r\n                }\r\n\r\n                var servers = new Dictionary<string, List<string>>();\r\n                var queues = new Dictionary<string, List<string>>();\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    foreach (var serverName in serverNames)\r\n                    {\r\n                        var name = serverName;\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x));\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x));\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();\r\n            });", span="166-207"];
m73_131 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164"];
m73_40 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67"];
m73_41 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => redis.GetListCount(''hangfire:deleted''));", span="69-69"];
m73_42 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67"];
m73_185 [cluster="Unk.GetRangeFromList", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetRangeFromList", span=""];
m73_178 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="237-237"];
m73_179 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="239-260"];
m73_180 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="237-237"];
m73_116 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154"];
m73_117 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => GetTimelineStats(redis, ''succeeded''));", span="156-156"];
m73_118 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154"];
m73_90 [cluster="Unk.Flush", file="RecurringJobOptionsFacts.cs", label="Entry Unk.Flush", span=""];
m73_487 [cluster="Unk.Parse", file="RecurringJobOptionsFacts.cs", label="Entry Unk.Parse", span=""];
m73_102 [cluster="Unk.Add", file="RecurringJobOptionsFacts.cs", label="Entry Unk.Add", span=""];
m73_63 [cluster="string.Equals(string, System.StringComparison)", file="RecurringJobOptionsFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m73_28 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57"];
m73_29 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:failed''));", span="59-59"];
m73_30 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57"];
m73_346 [cluster="System.DateTime.AddHours(double)", file="RecurringJobOptionsFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m73_46 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="72-72"];
m73_47 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());\r\n            });", span="75-94"];
m73_48 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="72-72"];
m73_13 [cluster="Unk.GetSortedSetCount", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetSortedSetCount", span=""];
m73_189 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m73_34 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62"];
m73_35 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:processing''));", span="64-64"];
m73_36 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62"];
m73_401 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m73_312 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m73_397 [cluster="JobList<T>.cstr", file="RecurringJobOptionsFacts.cs", label="Entry JobList<T>.cstr", span=""];
m73_350 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m73_521 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m73_268 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391"];
m73_269 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => GetHourlyTimelineStats(redis, ''succeeded''));", span="393-393"];
m73_270 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391"];
m73_355 [cluster="string.Format(string, object, object)", file="RecurringJobOptionsFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m73_306 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m73_316 [cluster="Unk.ToDictionary", file="RecurringJobOptionsFacts.cs", label="Entry Unk.ToDictionary", span=""];
m73_310 [cluster="Unk.FromStringTimestamp", file="RecurringJobOptionsFacts.cs", label="Entry Unk.FromStringTimestamp", span=""];
m73_396 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m73_458 [cluster="Unk.GetSetCount", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetSetCount", span=""];
m73_114 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45"];
m73_20 [cluster="string.Format(string, object)", file="RecurringJobOptionsFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m73_123 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="159-159"];
m73_124 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => GetTimelineStats(redis, ''failed''));", span="161-161"];
m73_125 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="159-159"];
m73_246 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m73_177 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m73_202 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="286-286"];
m73_203 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var queues = redis.GetAllItemsFromSet(''hangfire:queues'');\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count);\r\n\r\n                foreach (var queue in queues)\r\n                {\r\n                    IList<string> firstJobIds = null;\r\n                    long length = 0;\r\n                    long fetched = 0;\r\n\r\n                    using (var pipeline = redis.CreatePipeline())\r\n                    {\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => fetched = x);\r\n\r\n                        pipeline.Flush();\r\n                    }\r\n\r\n                    var jobs = GetJobsWithProperties(\r\n                        redis,\r\n                        firstJobIds,\r\n                        new[] { ''State'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, jobData, state) => new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        });\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Fetched = fetched\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="288-340"];
m73_204 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="286-286"];
m73_314 [cluster="Unk.TryToGetJob", file="RecurringJobOptionsFacts.cs", label="Entry Unk.TryToGetJob", span=""];
m73_21 [cluster="Unk.GetListCount", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetListCount", span=""];
m73_67 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m73_68 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis =>\r\n            {\r\n                var scheduledJobs = redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                if (scheduledJobs.Count == 0)\r\n                {\r\n                    return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());\r\n                }\r\n\r\n                var jobs = new Dictionary<string, List<string>>();\r\n                var states = new Dictionary<string, List<String>>();\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    foreach (var scheduledJob in scheduledJobs)\r\n                    {\r\n                        var job = scheduledJob;\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                            x => jobs.Add(job.Key, x));\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' }),\r\n                            x => states.Add(job.Key, x));\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return new JobList<ScheduledJobDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());\r\n            });", span="99-151"];
m73_69 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m73_87 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobOptionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m73_54 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m73_14 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="45-45"];
m73_15 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RecurringJobOptionsFacts.cs", label="return UseConnection(redis => \r\n                redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue)));", span="47-48"];
m73_16 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="45-45"];
m73_347 [cluster="Unk.GetValuesMap", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetValuesMap", span=""];
m73_6 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39"];
m73_7 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", color=red, community=0, file="RecurringJobOptionsFacts.cs", label="0: return UseConnection(redis => \r\n                redis.GetSortedSetCount(''hangfire:schedule''));", span="41-42"];
m73_8 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RecurringJobOptionsFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39"];
m73_156 [cluster="Unk.GetAllItemsFromList", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m73_320 [cluster="Unk.Contains", file="RecurringJobOptionsFacts.cs", label="Entry Unk.Contains", span=""];
m73_92 [cluster="Unk.Select", file="RecurringJobOptionsFacts.cs", label="Entry Unk.Select", span=""];
m73_308 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="RecurringJobOptionsFacts.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m73_146 [cluster="Unk.GetAllItemsFromSet", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m73_173 [cluster="Unk.GetRangeFromSortedSetDesc", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m73_483 [cluster="Unk.GetValue", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetValue", span=""];
m73_98 [cluster="Unk.GetValuesFromHash", file="RecurringJobOptionsFacts.cs", label="Entry Unk.GetValuesFromHash", span=""];
m73_523 [file="RecurringJobOptionsFacts.cs", label="HangFire.Redis.RedisMonitoringApi", span=""];
m73_524 [file="RecurringJobOptionsFacts.cs", label=string, span=""];
m73_525 [file="RecurringJobOptionsFacts.cs", label=string, span=""];
m73_526 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_527 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_528 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_529 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_530 [file="RecurringJobOptionsFacts.cs", label=job, span=""];
m73_531 [file="RecurringJobOptionsFacts.cs", label=jobs, span=""];
m73_532 [file="RecurringJobOptionsFacts.cs", label=states, span=""];
m73_533 [file="RecurringJobOptionsFacts.cs", label=name, span=""];
m73_534 [file="RecurringJobOptionsFacts.cs", label=servers, span=""];
m73_535 [file="RecurringJobOptionsFacts.cs", label=queues, span=""];
m73_536 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_537 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_538 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_539 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_540 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_541 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_542 [file="RecurringJobOptionsFacts.cs", label=queue, span=""];
m73_543 [file="RecurringJobOptionsFacts.cs", label=string, span=""];
m73_544 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_545 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_546 [file="RecurringJobOptionsFacts.cs", label=string, span=""];
m73_547 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_548 [file="RecurringJobOptionsFacts.cs", label=int, span=""];
m73_549 [file="RecurringJobOptionsFacts.cs", label=string, span=""];
m73_550 [file="RecurringJobOptionsFacts.cs", label=hiddenProperties, span=""];
m73_551 [file="RecurringJobOptionsFacts.cs", label=string, span=""];
m73_552 [file="RecurringJobOptionsFacts.cs", label=string, span=""];
m73_553 [file="RecurringJobOptionsFacts.cs", label="string[]", span=""];
m73_554 [file="RecurringJobOptionsFacts.cs", label=id, span=""];
m73_555 [file="RecurringJobOptionsFacts.cs", label=jobs, span=""];
m73_556 [file="RecurringJobOptionsFacts.cs", label="string[]", span=""];
m73_557 [file="RecurringJobOptionsFacts.cs", label=states, span=""];
m73_558 [file="RecurringJobOptionsFacts.cs", label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m73_559 [file="RecurringJobOptionsFacts.cs", label=stats, span=""];
m73_560 [file="RecurringJobOptionsFacts.cs", label=queueName, span=""];
m74_0 [cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14"];
m74_3 [cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: Exit HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14"];
m74_2 [cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RecurringJobsPage.generated.cs", label="LogEvents = true", span="17-17"];
m74_1 [cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RecurringJobsPage.generated.cs", label="Attempts = DefaultRetryAttempts", span="16-16"];
m74_4 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="35-35"];
m74_25 [cluster="Unk.OnScenarioStart", file="RecurringJobsPage.generated.cs", label="Entry Unk.OnScenarioStart", span=""];
m74_29 [cluster="System.Random.Random()", file="RecurringJobsPage.generated.cs", label="Entry System.Random.Random()", span="0-0"];
m74_14 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label="Logger.WarnFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        failedState.Exception,\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay)", span="61-67"];
m74_16 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", color=red, community=0, file="RecurringJobsPage.generated.cs", label="0: Logger.ErrorFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred.'',\r\n                        failedState.Exception,\r\n                        context.JobId)", span="74-77"];
m74_15 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label=LogEvents, span="72-72"];
m74_17 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="35-35"];
m74_23 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RecurringJobsPage.generated.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m74_22 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m74_19 [cluster="HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83"];
m74_26 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", span="66-66"];
m74_27 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", file="RecurringJobsPage.generated.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m74_28 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", span="66-66"];
m74_30 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="71-71"];
m74_89 [cluster="Unk.And", file="RecurringJobsPage.generated.cs", label="Entry Unk.And", span=""];
m74_99 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", span="225-225"];
m74_100 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the succeeded list'', ((string[])(null)))", span="227-227"];
m74_101 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="229-229"];
m74_102 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="231-231"];
m74_103 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="1: testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="233-233"];
m74_104 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="RecurringJobsPage.generated.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="235-235"];
m74_106 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: this.ScenarioCleanup()", span="239-239"];
m74_105 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''the job should be removed from the succeeded list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="237-237"];
m74_107 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", span="225-225"];
m74_5 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label="var failedState = context.CandidateState as FailedState", span="37-37"];
m74_9 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label="retryAttempt <= Attempts", span="46-46"];
m74_10 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", color=green, community=0, file="RecurringJobsPage.generated.cs", label="1: var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="48-48"];
m74_11 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="50-50"];
m74_12 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label="context.CandidateState = new ScheduledState(delay)\r\n                {\r\n                    Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n                }", span="54-57"];
m74_31 [cluster="System.Random.Next(int)", file="RecurringJobsPage.generated.cs", label="Entry System.Random.Next(int)", span="0-0"];
m74_32 [cluster="System.Math.Round(double)", file="RecurringJobsPage.generated.cs", label="Entry System.Math.Round(double)", span="0-0"];
m74_33 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="RecurringJobsPage.generated.cs", label="HangFire.AutomaticRetryAttribute", span=""];
m74_20 [cluster="System.TimeSpan.FromSeconds(double)", file="RecurringJobsPage.generated.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m74_13 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label=LogEvents, span="59-59"];
m74_21 [cluster="HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49"];
m74_44 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m74_49 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: table1.AddRow(new string[] {\r\n                        ''SucceededAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115"];
m74_48 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112"];
m74_50 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''properties table should contain the following items:'', ((string)(null)), table1, ''Then '')", span="117-117"];
m74_47 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="108-108"];
m74_51 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="this.ScenarioCleanup()", span="119-119"];
m74_45 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="104-104"];
m74_46 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="106-106"];
m74_52 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m74_7 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", color=red, community=0, file="RecurringJobsPage.generated.cs", label="0: return;", span="41-41"];
m74_72 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", span="164-164"];
m74_73 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the succeeded list'', ((string[])(null)))", span="166-166"];
m74_74 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="168-168"];
m74_75 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="170-170"];
m74_78 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="RecurringJobsPage.generated.cs", label="this.ScenarioCleanup()", span="176-176"];
m74_76 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="RecurringJobsPage.generated.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="172-172"];
m74_77 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''the job should be added to the succeeded list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="174-174"];
m74_79 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", span="164-164"];
m74_63 [cluster="Unk.When", file="RecurringJobsPage.generated.cs", label="Entry Unk.When", span=""];
m74_90 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204"];
m74_91 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should change the stats'', ((string[])(null)))", span="206-206"];
m74_92 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="208-208"];
m74_93 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: this.FeatureBackground()", span="210-210"];
m74_94 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="212-212"];
m74_95 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="214-214"];
m74_96 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: testRunner.Then(''it should decrease the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="216-216"];
m74_97 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: this.ScenarioCleanup()", span="218-218"];
m74_98 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204"];
m74_80 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", span="183-183"];
m74_81 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should persist the job data'', ((string[])(null)))", span="185-185"];
m74_82 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="187-187"];
m74_83 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="189-189"];
m74_87 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="RecurringJobsPage.generated.cs", label="this.ScenarioCleanup()", span="197-197"];
m74_84 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="RecurringJobsPage.generated.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="191-191"];
m74_85 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="RecurringJobsPage.generated.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193"];
m74_86 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''it should persist the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="195-195"];
m74_88 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", span="183-183"];
m74_54 [cluster="Unk.AddRow", file="RecurringJobsPage.generated.cs", label="Entry Unk.AddRow", span=""];
m74_55 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", span="126-126"];
m74_56 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should expire the job data'', ((string[])(null)))", span="128-128"];
m74_57 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="130-130"];
m74_58 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="132-132"];
m74_61 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="RecurringJobsPage.generated.cs", label="this.ScenarioCleanup()", span="138-138"];
m74_59 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="RecurringJobsPage.generated.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="134-134"];
m74_60 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''it should expire the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="136-136"];
m74_62 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", span="126-126"];
m74_35 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85"];
m74_36 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Succeeded\''', ((string[])(null)))", span="87-87"];
m74_37 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="89-89"];
m74_38 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="91-91"];
m74_40 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="RecurringJobsPage.generated.cs", label="this.ScenarioCleanup()", span="95-95"];
m74_39 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''the state name should be equal to \'Succeeded\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93"];
m74_41 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85"];
m74_64 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", span="145-145"];
m74_65 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should change the stats'', ((string[])(null)))", span="147-147"];
m74_66 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="149-149"];
m74_70 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: this.ScenarioCleanup()", span="157-157"];
m74_69 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''it should increase the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="155-155"];
m74_67 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="151-151"];
m74_68 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="RecurringJobsPage.generated.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="153-153"];
m74_71 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", span="145-145"];
m74_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="RecurringJobsPage.generated.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m74_24 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m74_43 [cluster="Unk.Then", file="RecurringJobsPage.generated.cs", label="Entry Unk.Then", span=""];
m74_34 [cluster="Unk.Given", file="RecurringJobsPage.generated.cs", label="Entry Unk.Given", span=""];
m74_6 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="RecurringJobsPage.generated.cs", label="failedState == null", span="38-38"];
m74_53 [cluster="TechTalk.SpecFlow.Table.cstr", file="RecurringJobsPage.generated.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m74_8 [cluster="Unk.OnFeatureStart", file="RecurringJobsPage.generated.cs", label="Entry Unk.OnFeatureStart", span=""];
m74_18 [cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54"];
m74_108 [file="RecurringJobsPage.generated.cs", label="HangFire.Tests.States.SucceededStateFeature", span=""];
m75_105 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m75_95 [cluster="Hangfire.JobStorage.GetConnection()", file="RetriesPage.generated.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m75_0 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.RetriesPage.Execute()", span="58-58"];
m75_1 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="WriteLiteral(''\r\n'')", span="62-62"];
m75_2 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Layout = new LayoutPage(Strings.RetriesPage_Title)", span="75-75"];
m75_3 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="int from, perPage", span="77-77"];
m75_4 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="int.TryParse(Query(''from''), out from)", span="79-79"];
m75_5 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="int.TryParse(Query(''count''), out perPage)", span="80-80"];
m75_11 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="pager = new Pager(@from, perPage, storageConnection.GetSetCount(''retries''))", span="91-91"];
m75_6 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="Pager pager = null", span="82-82"];
m75_7 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="List<string> jobIds = null", span="83-83"];
m75_14 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: pager == null", span="105-105"];
m75_40 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="Write(Html.PerPageSelector(pager))", span="260-260"];
m75_87 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="Write(Html.Paginator(pager))", span="526-526"];
m75_8 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="var connection = Storage.GetConnection()", span="85-85"];
m75_21 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="jobIds.Count == 0", span="149-149"];
m75_54 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: jobIds", span="341-341"];
m75_9 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="var storageConnection = connection as JobStorageConnection", span="87-87"];
m75_10 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="storageConnection != null", span="89-89"];
m75_12 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="jobIds = storageConnection.GetRangeFromSet(''retries'', pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1)", span="92-92"];
m75_13 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="WriteLiteral(''\r\n'')", span="100-100"];
m75_15 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        '')", span="111-111"];
m75_18 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''    <div class=\''row\''>\r\n        <div class=\''col-md-12\''>\r\n            <h1 class=\''pa'' +\r\n''ge-header\''>'')", span="133-134"];
m75_16 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: Write(Html.Raw(String.Format(Strings.RetriesPage_Warning_Html, Url.To(''/jobs/scheduled''))))", span="116-116"];
m75_17 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\r\n    </div>\r\n'')", span="121-121"];
m75_19 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.RetriesPage_Title)", span="139-139"];
m75_20 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''</h1>\r\n'')", span="144-144"];
m75_22 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''                <div class=\''alert alert-success\''>\r\n                    '')", span="155-155"];
m75_25 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="1: WriteLiteral(''                <div class=\''js-jobs-list\''>\r\n                    <div class=\''btn-t'' +\r\n''oolbar btn-toolbar-top\''>\r\n                        <button class=\''js-jobs-list-co'' +\r\n''mmand btn btn-sm btn-primary\''\r\n                                data-url=\'''')", span="177-179"];
m75_23 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.RetriesPage_NoJobs)", span="160-160"];
m75_24 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\r\n                </div>\r\n'')", span="165-165"];
m75_26 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: Write(Url.To(''/jobs/scheduled/enqueue''))", span="184-184"];
m75_27 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\''\r\n                                data-loading-text=\'''')", span="189-189"];
m75_28 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_Enqueueing)", span="194-194"];
m75_29 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=1, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\''\r\n                                disabled=\''disabled\''>\r\n                        '' +\r\n''    <span class=\''glyphicon glyphicon-repeat\''></span>\r\n                          '' +\r\n''  '')", span="199-201"];
m75_30 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_EnqueueButton_Text)", span="206-206"];
m75_31 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\r\n                        </button>\r\n\r\n                        <button class=\''js-'' +\r\n''jobs-list-command btn btn-sm btn-default\''\r\n                                data-'' +\r\n''url=\'''')", span="211-213"];
m75_32 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: Write(Url.To(''/jobs/scheduled/delete''))", span="218-218"];
m75_33 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\''\r\n                                data-loading-text=\'''')", span="223-223"];
m75_34 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_Deleting)", span="228-228"];
m75_35 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\''\r\n                                data-confirm=\'''')", span="233-233"];
m75_36 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_DeleteConfirm)", span="238-238"];
m75_37 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=1, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\''\r\n                                disabled=\''disabled\''>\r\n                        '' +\r\n''    <span class=\''glyphicon glyphicon-remove\''></span>\r\n                          '' +\r\n''  '')", span="243-245"];
m75_38 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_DeleteSelected)", span="250-250"];
m75_39 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\r\n                        </button>\r\n\r\n                        '')", span="255-255"];
m75_41 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(@''\r\n                    </div>\r\n\r\n                    <div class=''''table-responsive''''>\r\n                        <table class=''''table table-hover''''>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=''''min-width''''>\r\n                                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                    </th>\r\n                                    <th class=''''min-width''''>'')", span="265-275"];
m75_42 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_Id)", span="280-280"];
m75_43 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                    <th class=\''min-width\''>'')", span="285-285"];
m75_44 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_State)", span="290-290"];
m75_45 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                    <th>'')", span="295-295"];
m75_46 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_Job)", span="300-300"];
m75_47 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                    <th>'')", span="305-305"];
m75_48 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_Reason)", span="310-310"];
m75_49 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                    <th class=\''align-right\''>'')", span="315-315"];
m75_50 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Strings.Common_Retry)", span="320-320"];
m75_51 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                    <th class=\''align-right\''>'')", span="325-325"];
m75_52 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="1: Write(Strings.Common_Created)", span="330-330"];
m75_53 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=1, file="RetriesPage.generated.cs", label="0: WriteLiteral(''</th>\r\n                                </tr>\r\n                            </thead'' +\r\n''>\r\n                            <tbody>\r\n'')", span="335-336"];
m75_55 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: JobData jobData", span="343-343"];
m75_86 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=1, file="RetriesPage.generated.cs", label="0: WriteLiteral(''                            </tbody>\r\n                        </table>\r\n         '' +\r\n''           </div>\r\n\r\n                    '')", span="520-521"];
m75_58 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: jobData = connection.GetJobData(jobId)", span="348-348"];
m75_59 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: stateData = connection.GetStateData(jobId)", span="349-349"];
m75_63 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: Write(jobId)", span="373-373"];
m75_65 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="1: Write(Html.JobIdLink(jobId))", span="385-385"];
m75_73 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="1: Write(Html.JobNameLink(jobId, jobData.Job))", span="435-435"];
m75_56 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: StateData stateData", span="344-344"];
m75_57 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: var connection = Storage.GetConnection()", span="346-346"];
m75_61 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(jobData != null ? ''hover'' : null)", span="361-361"];
m75_67 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: jobData == null", span="395-395"];
m75_70 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Html.StateLabel(jobData.State))", span="420-420"];
m75_83 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Html.RelativeTime(jobData.CreatedAt))", span="495-495"];
m75_60 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="1: WriteLiteral(''                                    <tr class=\''js-jobs-list-row '')", span="356-356"];
m75_76 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(stateData?.Reason)", span="450-450"];
m75_79 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: stateData != null && stateData.Data.ContainsKey(''EnqueueAt'')", span="464-464"];
m75_80 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: Write(Html.RelativeTime(JobHelper.DeserializeDateTime(stateData.Data[''EnqueueAt''])))", span="472-472"];
m75_62 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="1: WriteLiteral(''\''>\r\n                                        <td>\r\n                               '' +\r\n''             <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' '' +\r\n''value=\'''')", span="366-368"];
m75_64 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\'' />\r\n                                        </td>\r\n                            '' +\r\n''            <td class=\''min-width\''>\r\n                                            '' +\r\n'''')", span="378-380"];
m75_66 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="WriteLiteral(''\r\n                                        </td>\r\n'')", span="390-390"];
m75_68 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=green, community=0, file="RetriesPage.generated.cs", label="1: WriteLiteral(''                                            <td colspan=\''5\''><em>Job expired.</em>'' +\r\n''</td>\r\n'')", span="401-402"];
m75_69 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=1, file="RetriesPage.generated.cs", label="0: WriteLiteral(''                                            <td class=\''min-width\''>\r\n             '' +\r\n''                                   '')", span="414-415"];
m75_71 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="1: WriteLiteral(''\r\n                                            </td>\r\n'')", span="425-425"];
m75_72 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=1, file="RetriesPage.generated.cs", label="0: WriteLiteral(''                                            <td>\r\n                               '' +\r\n''                 '')", span="429-430"];
m75_74 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="1: WriteLiteral(''\r\n                                            </td>\r\n'')", span="440-440"];
m75_75 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=1, file="RetriesPage.generated.cs", label="0: WriteLiteral(''                                            <td>\r\n                               '' +\r\n''                 '')", span="444-445"];
m75_77 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="1: WriteLiteral(''\r\n                                            </td>\r\n'')", span="455-455"];
m75_78 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''                                            <td class=\''align-right\''>\r\n'')", span="459-459"];
m75_81 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="1: WriteLiteral(''                                            </td>\r\n'')", span="485-485"];
m75_82 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=1, file="RetriesPage.generated.cs", label="0: WriteLiteral(''                                            <td class=\''align-right\''>\r\n           '' +\r\n''                                     '')", span="489-490"];
m75_84 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''\r\n                                            </td>\r\n'')", span="500-500"];
m75_85 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", color=red, community=0, file="RetriesPage.generated.cs", label="0: WriteLiteral(''                                    </tr>\r\n'')", span="510-510"];
m75_88 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="WriteLiteral(''\r\n                </div>\r\n'')", span="531-531"];
m75_89 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="WriteLiteral(''        </div>\r\n    </div>\r\n'')", span="541-541"];
m75_90 [cluster="Hangfire.Dashboard.Pages.RetriesPage.Execute()", file="RetriesPage.generated.cs", label="Exit Hangfire.Dashboard.Pages.RetriesPage.Execute()", span="58-58"];
m75_112 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m75_100 [cluster="string.Format(string, object)", file="RetriesPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m75_99 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m75_92 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m75_98 [cluster="Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", file="RetriesPage.generated.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", span="58-58"];
m75_91 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m75_101 [cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87"];
m75_93 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m75_104 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m75_94 [cluster="int.TryParse(string, out int)", file="RetriesPage.generated.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m75_96 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m75_110 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m75_111 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m75_109 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RetriesPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m75_106 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m75_103 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m75_107 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125"];
m75_108 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m75_102 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RetriesPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m75_97 [cluster="Hangfire.Storage.JobStorageConnection.GetSetCount(string)", file="RetriesPage.generated.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetSetCount(string)", span="53-53"];
m75_113 [file="RetriesPage.generated.cs", label="Hangfire.Dashboard.Pages.RetriesPage", span=""];
m76_25 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Exit lambda expression", span="23-23"];
m76_0 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ScheduledJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13"];
m76_1 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ScheduledJobsPage.generated.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatingContext(null))", span="15-16"];
m76_2 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ScheduledJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13"];
m76_19 [cluster="Mock<IState>.cstr", file="ScheduledJobsPage.generated.cs", label="Entry Mock<IState>.cstr", span=""];
m76_20 [cluster="Mock<IStateMachineFactory>.cstr", file="ScheduledJobsPage.generated.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m76_29 [cluster="Unk.CollectScenarioErrors", file="ScheduledJobsPage.generated.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m76_65 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="153-153"];
m76_66 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job by the \'checked\' flag in the \'Fetched\' state should not be re-queue'' +\r\n                    ''d'', new string[] {\r\n                        ''checkpoint-2''})", span="155-157"];
m76_67 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="159-159"];
m76_68 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="161-161"];
m76_69 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="163-163"];
m76_70 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.And(''it was fetched a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="165-165"];
m76_71 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="167-167"];
m76_72 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="169-169"];
m76_76 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: this.ScenarioCleanup()", span="177-177"];
m76_75 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175"];
m76_73 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="171-171"];
m76_74 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="173-173"];
m76_77 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="153-153"];
m76_53 [cluster="Unk.And", file="ScheduledJobsPage.generated.cs", label="Entry Unk.And", span=""];
m76_112 [cluster="Unk.But", file="ScheduledJobsPage.generated.cs", label="Entry Unk.But", span=""];
m76_26 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="67-67"];
m76_27 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="ScheduledJobsPage.generated.cs", label="testRunner.CollectScenarioErrors()", span="69-69"];
m76_78 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="185-185"];
m76_79 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out jobs in the \'Fetched\' state should be re-queued'', new string[] {\r\n                        ''checkpoint-2''})", span="187-188"];
m76_80 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="190-190"];
m76_81 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="192-192"];
m76_82 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="194-194"];
m76_84 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="198-198"];
m76_83 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="196-196"];
m76_85 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="200-200"];
m76_87 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: testRunner.And(''the job does not have the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="204-204"];
m76_86 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="202-202"];
m76_88 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioCleanup()", span="206-206"];
m76_89 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="185-185"];
m76_3 [cluster="Unk.>", file="ScheduledJobsPage.generated.cs", label="Entry Unk.>", span=""];
m76_28 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="67-67"];
m76_22 [cluster="Unk.False", file="ScheduledJobsPage.generated.cs", label="Entry Unk.False", span=""];
m76_23 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Entry lambda expression", span="23-23"];
m76_24 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="TestMethod()", span="23-23"];
m76_7 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="ScheduledJobsPage.generated.cs", label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m76_90 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="215-215"];
m76_91 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job\'s state is changed to the Enqueued when the job is being timed out after proc'' +\r\n                    ''eeding to the Processing state'', new string[] {\r\n                        ''checkpoint-3''})", span="217-219"];
m76_92 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="221-221"];
m76_94 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.And(''its state is Processing'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="225-225"];
m76_93 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="ScheduledJobsPage.generated.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="223-223"];
m76_95 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="227-227"];
m76_96 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="229-229"];
m76_97 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="ScheduledJobsPage.generated.cs", label="testRunner.Then(''the job moved to the Enqueued state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="231-231"];
m76_99 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioCleanup()", span="235-235"];
m76_98 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="233-233"];
m76_100 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="215-215"];
m76_40 [cluster="Unk.When", file="ScheduledJobsPage.generated.cs", label="Entry Unk.When", span=""];
m76_122 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="291-291"];
m76_123 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When the server could not find the job\'s type, the job is moved to the Failed sta'' +\r\n                    ''te'', ((string[])(null)))", span="293-294"];
m76_124 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="296-296"];
m76_126 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="300-300"];
m76_125 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="298-298"];
m76_127 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="302-302"];
m76_129 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="306-306"];
m76_128 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.Then(''the job moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="304-304"];
m76_130 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioCleanup()", span="308-308"];
m76_131 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="291-291"];
m76_101 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="243-243"];
m76_102 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job in the Succeeded state does not move to the Enqueued state'', new string[] {\r\n                        ''checkpoint-4''})", span="245-246"];
m76_103 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="248-248"];
m76_105 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="252-252"];
m76_104 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="250-250"];
m76_106 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="254-254"];
m76_108 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="258-258"];
m76_107 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="256-256"];
m76_109 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="260-260"];
m76_110 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: this.ScenarioCleanup()", span="262-262"];
m76_111 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="243-243"];
m76_42 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="98-98"];
m76_48 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="111-111"];
m76_47 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="ScheduledJobsPage.generated.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="109-109"];
m76_49 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="113-113"];
m76_50 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="115-115"];
m76_51 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: this.ScenarioCleanup()", span="117-117"];
m76_44 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="103-103"];
m76_46 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''it was checked a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="107-107"];
m76_43 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="ScheduledJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Non-timed out job in the \'Checked\' state should not be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="100-101"];
m76_45 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="ScheduledJobsPage.generated.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="105-105"];
m76_52 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="98-98"];
m76_54 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="125-125"];
m76_55 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed job in the \'Checked\' state should be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="127-128"];
m76_56 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="130-130"];
m76_57 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="132-132"];
m76_58 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="134-134"];
m76_59 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="136-136"];
m76_60 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="ScheduledJobsPage.generated.cs", label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="138-138"];
m76_61 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="140-140"];
m76_62 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="142-142"];
m76_63 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioCleanup()", span="144-144"];
m76_64 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="125-125"];
m76_4 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Entry lambda expression", span="16-16"];
m76_5 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="new CreatingContext(null)", span="16-16"];
m76_6 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Exit lambda expression", span="16-16"];
m76_21 [cluster="CreateContext.cstr", file="ScheduledJobsPage.generated.cs", label="Entry CreateContext.cstr", span=""];
m76_38 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ScheduledJobsPage.generated.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m76_8 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="ScheduledJobsPage.generated.cs", label="Entry Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20"];
m76_9 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="ScheduledJobsPage.generated.cs", label="var connection = new Mock<IStorageConnection>()", span="22-22"];
m76_10 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="ScheduledJobsPage.generated.cs", label="var job = Job.FromExpression(() => TestMethod())", span="23-23"];
m76_13 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="ScheduledJobsPage.generated.cs", label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="27-28"];
m76_11 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="ScheduledJobsPage.generated.cs", label="var state = new Mock<IState>()", span="24-24"];
m76_12 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="ScheduledJobsPage.generated.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25"];
m76_14 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="ScheduledJobsPage.generated.cs", label="var context = new CreatingContext(createContext)", span="29-29"];
m76_15 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=red, community=0, file="ScheduledJobsPage.generated.cs", label="0: Assert.False(context.Canceled)", span="31-31"];
m76_16 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="ScheduledJobsPage.generated.cs", label="Exit Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20"];
m76_30 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="77-77"];
m76_34 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="86-86"];
m76_33 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="84-84"];
m76_35 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.Then(''it marks the job as \'checked\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="88-88"];
m76_36 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: this.ScenarioCleanup()", span="90-90"];
m76_32 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="82-82"];
m76_31 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="ScheduledJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''A job in the implicit \'Dequeued\' state moved to the \'Checked\' state'', new string[] {\r\n                        ''checkpoint-1-1''})", span="79-80"];
m76_37 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="77-77"];
m76_41 [cluster="Unk.Then", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Then", span=""];
m76_39 [cluster="Unk.Given", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Given", span=""];
m76_132 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="315-315"];
m76_138 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="327-327"];
m76_134 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="319-319"];
m76_141 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioCleanup()", span="333-333"];
m76_139 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="329-329"];
m76_136 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="323-323"];
m76_137 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="325-325"];
m76_133 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Succeeded job of non-existing type will not be moved to the failed state'', ((string[])(null)))", span="317-317"];
m76_135 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="321-321"];
m76_140 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="331-331"];
m76_142 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="315-315"];
m76_17 [cluster="Mock<IStorageConnection>.cstr", file="ScheduledJobsPage.generated.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m76_18 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ScheduledJobsPage.generated.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m76_113 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", span="269-269"];
m76_115 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="273-273"];
m76_114 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="ScheduledJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job is being enqueued on its actual queue after timing out'', ((string[])(null)))", span="271-271"];
m76_116 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''a dequeued job from the \'test\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="275-275"];
m76_118 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="279-279"];
m76_117 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="ScheduledJobsPage.generated.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="277-277"];
m76_119 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="ScheduledJobsPage.generated.cs", label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="281-281"];
m76_120 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="ScheduledJobsPage.generated.cs", label="this.ScenarioCleanup()", span="283-283"];
m76_121 [cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", span="269-269"];
m76_143 [file="ScheduledJobsPage.generated.cs", label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", span=""];
m77_0 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="ScheduledStateFacts.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m77_1 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="ScheduledStateFacts.cs", label="InEnqueuedState = true", span="9-9"];
m77_2 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="ScheduledStateFacts.cs", label="Exit HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m77_3 [file="ScheduledStateFacts.cs", label="HangFire.Storage.Monitoring.EnqueuedJobDto", span=""];
m78_23 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m78_42 [cluster="Unk.>", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.>", span=""];
m78_41 [cluster="Mock<IState>.cstr", file="ScheduledStateHandlerFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m78_24 [cluster="Unk.AddToSet", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.AddToSet", span=""];
m78_11 [cluster="Hangfire.States.ScheduledState.Handler.Handler()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.States.ScheduledState.Handler.Handler()", span="161-161"];
m78_6 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="ScheduledStateHandlerFacts.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m78_18 [cluster="Unk.Apply", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.Apply", span=""];
m78_25 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="46-46"];
m78_26 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs", label="var handler = new ScheduledState.Handler()", span="48-48"];
m78_27 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs", label="handler.Unapply(_context.Object, _transaction.Object)", span="49-49"];
m78_28 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs", label="_transaction.Verify(x => x.RemoveFromSet(''schedule'', JobId))", span="51-51"];
m78_29 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="46-46"];
m78_4 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="11-11"];
m78_30 [cluster="Unk.Unapply", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.Unapply", span=""];
m78_34 [cluster="Unk.RemoveFromSet", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.RemoveFromSet", span=""];
m78_13 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="36-36"];
m78_14 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="var handler = new ScheduledState.Handler()", span="38-38"];
m78_15 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="handler.Apply(_context.Object, _transaction.Object)", span="39-39"];
m78_16 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="_transaction.Verify(x => x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(_enqueueAt)))", span="41-42"];
m78_17 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="36-36"];
m78_7 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", span="29-29"];
m78_8 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs", label="var handler = new ScheduledState.Handler()", span="31-31"];
m78_9 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs", label="Assert.Equal(ScheduledState.StateName, handler.StateName)", span="32-32"];
m78_10 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", span="29-29"];
m78_35 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", span="55-55"];
m78_36 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs", label="var handler = new ScheduledState.Handler()", span="57-57"];
m78_37 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs", label="_context.NewStateObject = null", span="58-58"];
m78_39 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => handler.Apply(_context.Object, _transaction.Object))", span="61-62"];
m78_38 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs", label="_context.NewState = new Mock<IState>()", span="59-59"];
m78_40 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", span="55-55"];
m78_43 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Entry lambda expression", span="62-62"];
m78_20 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Entry lambda expression", span="41-42"];
m78_21 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(_enqueueAt))", span="41-42"];
m78_22 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Exit lambda expression", span="41-42"];
m78_31 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Entry lambda expression", span="51-51"];
m78_32 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="x.RemoveFromSet(''schedule'', JobId)", span="51-51"];
m78_33 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Exit lambda expression", span="51-51"];
m78_44 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="handler.Apply(_context.Object, _transaction.Object)", span="62-62"];
m78_45 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Exit lambda expression", span="62-62"];
m78_0 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="17-17"];
m78_1 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", color=red, community=1, file="ScheduledStateHandlerFacts.cs", label="1: _context = new ApplyStateContextMock\r\n            {\r\n                BackgroundJob = { Id = JobId },\r\n                NewStateObject = new ScheduledState(_enqueueAt)\r\n            }", span="19-23"];
m78_2 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="25-25"];
m78_3 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="17-17"];
m78_5 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="81-81"];
m78_19 [cluster="Unk.Verify", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.Verify", span=""];
m78_46 [file="ScheduledStateHandlerFacts.cs", label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", span=""];
m78_47 [file="ScheduledStateHandlerFacts.cs", label=handler, span=""];
m79_0 [cluster="Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", file="ServerExceptionContext.cs", label="Entry Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", span="26-26"];
m79_1 [cluster="Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", file="ServerExceptionContext.cs", label="Exception = exception", span="31-31"];
m79_2 [cluster="Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", file="ServerExceptionContext.cs", label="Exit Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", span="26-26"];
m79_3 [file="ServerExceptionContext.cs", label="Hangfire.Server.ServerExceptionContext", span=""];
m80_20 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m80_21 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="42-42"];
m80_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerHeartbeatFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m80_0 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="28-28"];
m80_1 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="Exit Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="28-28"];
m80_22 [cluster="Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="73-73"];
m80_23 [cluster="Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="transaction.RemoveFromSet(''schedule'', context.JobId)", span="75-75"];
m80_24 [cluster="Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="Exit Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="73-73"];
m80_10 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m80_25 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m80_11 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="59-59"];
m80_12 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="var scheduledState = context.NewState as ScheduledState", span="61-61"];
m80_16 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="70-70"];
m80_13 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="scheduledState == null", span="62-62"];
m80_15 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="var timestamp = JobHelper.ToTimestamp(scheduledState.EnqueueAt)", span="69-69"];
m80_14 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Scheduled state.'',\r\n                        typeof(Handler).FullName));", span="64-66"];
m80_17 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeatFacts.cs", label="Exit Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="59-59"];
m80_6 [cluster="Hangfire.States.ScheduledState.SerializeData()", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.States.ScheduledState.SerializeData()", span="48-48"];
m80_7 [cluster="Hangfire.States.ScheduledState.SerializeData()", file="ServerHeartbeatFacts.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueueAt'', JobHelper.SerializeDateTime(EnqueueAt) },\r\n                { ''ScheduledAt'', JobHelper.SerializeDateTime(ScheduledAt) }\r\n            };", span="50-54"];
m80_8 [cluster="Hangfire.States.ScheduledState.SerializeData()", file="ServerHeartbeatFacts.cs", label="Exit Hangfire.States.ScheduledState.SerializeData()", span="48-48"];
m80_19 [cluster="string.Format(string, object)", file="ServerHeartbeatFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m80_18 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ServerHeartbeatFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m80_2 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="34-34"];
m80_3 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="ServerHeartbeatFacts.cs", label="EnqueueAt = enqueueAt", span="36-36"];
m80_4 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="ServerHeartbeatFacts.cs", label="ScheduledAt = DateTime.UtcNow", span="37-37"];
m80_5 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="ServerHeartbeatFacts.cs", label="Exit Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="34-34"];
m80_26 [file="ServerHeartbeatFacts.cs", label="Hangfire.States.ScheduledState", span=""];
m83_13 [cluster="Hangfire.Logging.ILog.Info(string)", file="ServerWatchdog.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204"];
m83_11 [cluster="Hangfire.JobStorage.GetConnection()", file="ServerWatchdog.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m83_15 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="ServerWatchdog.cs", label="Entry Hangfire.Server.ServerWatchdog.ToString()", span="51-51"];
m83_16 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="ServerWatchdog.cs", label="return GetType().Name;", span="53-53"];
m83_17 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.ToString()", span="51-51"];
m83_4 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="Entry Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m83_5 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="var connection = context.Storage.GetConnection()", span="39-39"];
m83_9 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="context.Wait(_checkInterval)", span="48-48"];
m83_6 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="var serversRemoved = connection.RemoveTimedOutServers(_serverTimeout)", span="41-41"];
m83_7 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="serversRemoved != 0", span="42-42"];
m83_8 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="ServerWatchdog.cs", label="0: Logger.Info($''{serversRemoved} servers were removed due to timeout'')", span="44-44"];
m83_10 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m83_14 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="ServerWatchdog.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="54-54"];
m83_12 [cluster="Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.cs", label="Entry Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="50-50"];
m83_0 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="ServerWatchdog.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", span="31-31"];
m83_1 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="ServerWatchdog.cs", label="_checkInterval = checkInterval", span="33-33"];
m83_2 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="ServerWatchdog.cs", label="_serverTimeout = serverTimeout", span="34-34"];
m83_3 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", span="31-31"];
m83_18 [cluster="object.GetType()", file="ServerWatchdog.cs", label="Entry object.GetType()", span="0-0"];
m83_19 [file="ServerWatchdog.cs", label="Hangfire.Server.ServerWatchdog", span=""];
m86_22 [cluster="string.Format(string, object)", file="SqlServerFetchedJob.cs", label="Entry string.Format(string, object)", span="0-0"];
m86_23 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217"];
m86_24 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m86_25 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="246-246"];
m86_133 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="238-238"];
m86_134 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerFetchedJob.cs", label="return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value, Timeout = _options.TransactionTimeout })\r\n                : new TransactionScope();", span="240-243"];
m86_135 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="238-238"];
m86_29 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerFetchedJob.cs", label="_existingConnection = existingConnection", span="100-100"];
m86_26 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="SqlServerFetchedJob.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66"];
m86_30 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="SqlServerFetchedJob.cs", label="Entry HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71"];
m86_31 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="SqlServerFetchedJob.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m86_27 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="SqlServerFetchedJob.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m86_28 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="SqlServerFetchedJob.cs", label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66"];
m86_32 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="SqlServerFetchedJob.cs", label="testRunner.And(''the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77"];
m86_119 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerFetchedJob.cs", label="_existingConnection != null", span="219-219"];
m86_120 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerFetchedJob.cs", label="return _existingConnection;", span="221-221"];
m86_121 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerFetchedJob.cs", label="var connection = new SqlConnection(_connectionString)", span="224-224"];
m86_122 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerFetchedJob.cs", label="connection.Open()", span="225-225"];
m86_123 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerFetchedJob.cs", label="return connection;", span="227-227"];
m86_124 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217"];
m86_38 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="113-113"];
m86_39 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerFetchedJob.cs", label="return new SqlServerConnection(this);", span="115-115"];
m86_40 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="113-113"];
m86_21 [cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerFetchedJob.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m86_127 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230"];
m86_128 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerFetchedJob.cs", label="connection != null && !ReferenceEquals(connection, _existingConnection)", span="232-232"];
m86_129 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerFetchedJob.cs", label="connection.Dispose()", span="234-234"];
m86_130 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230"];
m86_145 [cluster="string.Contains(string)", file="SqlServerFetchedJob.cs", label="Entry string.Contains(string)", span="0-0"];
m86_142 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", span="31-31"];
m86_155 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m86_76 [cluster="System.Text.StringBuilder.Append(string)", file="SqlServerFetchedJob.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m86_72 [cluster="Unk.ToDictionary", file="SqlServerFetchedJob.cs", label="Entry Unk.ToDictionary", span=""];
m86_42 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerFetchedJob.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the failed set'', ((string[])(null)))", span="95-95"];
m86_43 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerFetchedJob.cs", label="this.ScenarioSetup(scenarioInfo)", span="97-97"];
m86_44 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerFetchedJob.cs", label="this.FeatureBackground()", span="99-99"];
m86_45 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerFetchedJob.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="101-101"];
m86_33 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="SqlServerFetchedJob.cs", label="Exit HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71"];
m86_163 [cluster="Metric.cstr", file="SqlServerFetchedJob.cs", label="Entry Metric.cstr", span=""];
m86_36 [cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="108-108"];
m86_37 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36"];
m86_35 [cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerFetchedJob.cs", label="return new SqlServerMonitoringApi(this, _options.DashboardJobListLimit);", span="110-110"];
m86_0 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerFetchedJob.cs", label="Entry HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m86_1 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerFetchedJob.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m86_2 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="57-57"];
m86_3 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="nameOrConnectionString == null", span="59-59"];
m86_4 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''nameOrConnectionString'');", span="59-59"];
m86_75 [cluster="Unk.Append", file="SqlServerFetchedJob.cs", label="Entry Unk.Append", span=""];
m86_5 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="options == null", span="60-60"];
m86_161 [cluster="Unk.>", file="SqlServerFetchedJob.cs", label="Entry Unk.>", span=""];
m86_73 [cluster="System.Text.StringBuilder.StringBuilder()", file="SqlServerFetchedJob.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m86_103 [cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerFetchedJob.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m86_48 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerFetchedJob.cs", label="Exit HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="93-93"];
m86_50 [cluster="Unk.When", file="SqlServerFetchedJob.cs", label="Entry Unk.When", span=""];
m86_49 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="SqlServerFetchedJob.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m86_51 [cluster="Unk.Then", file="SqlServerFetchedJob.cs", label="Entry Unk.Then", span=""];
m86_126 [cluster="Unk.Open", file="SqlServerFetchedJob.cs", label="Entry Unk.Open", span=""];
m86_83 [cluster="Unk.Trim", file="SqlServerFetchedJob.cs", label="Entry Unk.Trim", span=""];
m86_131 [cluster="Unk.ReferenceEquals", file="SqlServerFetchedJob.cs", label="Entry Unk.ReferenceEquals", span=""];
m86_125 [cluster="SqlConnection.cstr", file="SqlServerFetchedJob.cs", label="Entry SqlConnection.cstr", span=""];
m86_90 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m86_91 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerFetchedJob.cs", label="UseConnection(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            })", span="175-179"];
m86_92 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m86_104 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="197-197"];
m86_105 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerFetchedJob.cs", label="UseTransaction(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            }, null)", span="199-203"];
m86_106 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="197-197"];
m86_18 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="SqlServerFetchedJob.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", span="56-56"];
m86_19 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="252-252"];
m86_20 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", span="257-257"];
m86_146 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerFetchedJob.cs", label="var connectionStringSetting = ConfigurationManager.ConnectionStrings[connectionStringName]", span="259-259"];
m86_147 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerFetchedJob.cs", label="return connectionStringSetting != null;", span="261-261"];
m86_148 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", span="257-257"];
m86_136 [cluster="TransactionScope.cstr", file="SqlServerFetchedJob.cs", label="Entry TransactionScope.cstr", span=""];
m86_98 [cluster="System.Action<T>.Invoke(T)", file="SqlServerFetchedJob.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m86_164 [cluster="Unk.ToString", file="SqlServerFetchedJob.cs", label="Entry Unk.ToString", span=""];
m86_13 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="options.PrepareSchemaIfNecessary", span="79-79"];
m86_7 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="_options = options", span="62-62"];
m86_141 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27"];
m86_118 [cluster="Unk.Complete", file="SqlServerFetchedJob.cs", label="Entry Unk.Complete", span=""];
m86_41 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33"];
m86_46 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="50-50"];
m86_47 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m86_132 [cluster="Unk.Dispose", file="SqlServerFetchedJob.cs", label="Entry Unk.Dispose", span=""];
m86_53 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerFetchedJob.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the failed set'', ((string[])(null)))", span="114-114"];
m86_52 [cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m86_54 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.ToString()", span="130-130"];
m86_55 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="132-132"];
m86_56 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value, StringComparer.OrdinalIgnoreCase)", span="136-139"];
m86_57 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="var builder = new StringBuilder()", span="141-141"];
m86_58 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="143-143"];
m86_59 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="parts.ContainsKey(alias)", span="145-145"];
m86_60 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="builder.Append(parts[alias])", span="147-147"];
m86_70 [cluster="string.Split(char[], System.StringSplitOptions)", file="SqlServerFetchedJob.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m86_137 [cluster="TransactionOptions.cstr", file="SqlServerFetchedJob.cs", label="Entry TransactionOptions.cstr", span=""];
m86_165 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="289-306"];
m86_77 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="137-137"];
m86_80 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="138-138"];
m86_84 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="139-139"];
m86_87 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="139-139"];
m86_94 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="175-179"];
m86_108 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="199-203"];
m86_78 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="137-137"];
m86_79 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="137-137"];
m86_82 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="138-138"];
m86_81 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="138-138"];
m86_86 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="139-139"];
m86_85 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="x.Key", span="139-139"];
m86_89 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="139-139"];
m86_88 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="x.Value", span="139-139"];
m86_95 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="action(connection)", span="177-177"];
m86_153 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="272-283"];
m86_169 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="294-305"];
m86_97 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="175-179"];
m86_109 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="action(connection)", span="201-201"];
m86_111 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="199-203"];
m86_96 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="return true;", span="178-178"];
m86_150 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="var sqlStorage = page.Storage as SqlServerStorage", span="269-269"];
m86_151 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="sqlStorage == null", span="270-270"];
m86_154 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="267-284"];
m86_156 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="272-283"];
m86_166 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="var sqlStorage = page.Storage as SqlServerStorage", span="291-291"];
m86_167 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="sqlStorage == null", span="292-292"];
m86_170 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="289-306"];
m86_171 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="294-305"];
m86_110 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="return true;", span="202-202"];
m86_149 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="267-284"];
m86_152 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="return new Metric(''???'');", span="270-270"];
m86_160 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="272-283"];
m86_157 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping'''", span="274-276"];
m86_158 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="278-280"];
m86_168 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="return new Metric(''???'');", span="292-292"];
m86_172 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background'''", span="296-298"];
m86_173 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="300-302"];
m86_159 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="return new Metric(value.ToString(''N0''));", span="282-282"];
m86_174 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="return new Metric(value.ToString(''N0''));", span="304-304"];
m86_175 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="294-305"];
m86_138 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerFetchedJob.cs", label="var defaultQueueProvider = new SqlServerJobQueueProvider(this, _options)", span="248-248"];
m86_139 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerFetchedJob.cs", label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="249-249"];
m86_140 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="246-246"];
m86_34 [cluster="Unk.Given", file="SqlServerFetchedJob.cs", label="Entry Unk.Given", span=""];
m86_71 [cluster="Unk.Select", file="SqlServerFetchedJob.cs", label="Entry Unk.Select", span=""];
m86_64 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="parts.ContainsKey(alias)", span="156-156"];
m86_65 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="builder.Append(parts[alias])", span="158-158"];
m86_66 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="return builder.Length != 0\r\n                    ? String.Format(''SQL Server: {0}'', builder)\r\n                    : canNotParseMessage;", span="163-165"];
m86_68 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="return canNotParseMessage;", span="169-169"];
m86_61 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="HangFire.Tests.States.FailedStateFeature", span=""];
m86_62 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="builder.Append(''@'')", span="152-152"];
m86_63 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="new[] { ''Database'', ''Initial Catalog'' }", span="154-154"];
m86_67 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label=Exception, span="167-167"];
m86_69 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.ToString()", span="130-130"];
m86_9 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerFetchedJob.cs", label="1: _connectionString = nameOrConnectionString", span="66-66"];
m86_10 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="IsConnectionStringInConfiguration(nameOrConnectionString)", span="68-68"];
m86_11 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="_connectionString = ConfigurationManager.ConnectionStrings[nameOrConnectionString].ConnectionString", span="70-70"];
m86_12 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerFetchedJob.cs", label="throw new ArgumentException(\r\n                    string.Format(''Could not find connection string with name '{0}' in application config file'',\r\n                                  nameOrConnectionString));", span="74-76"];
m86_8 [cluster="Unk.OnFeatureStart", file="SqlServerFetchedJob.cs", label="Entry Unk.OnFeatureStart", span=""];
m86_14 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="SqlServerFetchedJob.cs", label="Entry HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46"];
m86_16 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", color=red, community=0, file="SqlServerFetchedJob.cs", label="3: HangFire.Tests.States.FailedStateFeature.FeatureSetup(null)", span="51-51"];
m86_15 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", color=red, community=0, file="SqlServerFetchedJob.cs", label="0: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Failed state''))", span="48-49"];
m86_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SqlServerFetchedJob.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m86_17 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="SqlServerFetchedJob.cs", label="Exit HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46"];
m86_162 [cluster="Unk.Single", file="SqlServerFetchedJob.cs", label="Entry Unk.Single", span=""];
m86_93 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="182-182"];
m86_100 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerFetchedJob.cs", label="connection = CreateAndOpenConnection()", span="188-188"];
m86_99 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerFetchedJob.cs", label="SqlConnection connection = null", span="184-184"];
m86_101 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerFetchedJob.cs", label="return func(connection);", span="189-189"];
m86_102 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="182-182"];
m86_143 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerFetchedJob.cs", label="return nameOrConnectionString.Contains('';'');", span="254-254"];
m86_144 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="252-252"];
m86_107 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="206-206"];
m86_112 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerFetchedJob.cs", label="var transaction = CreateTransaction(isolationLevel ?? _options.TransactionIsolationLevel)", span="208-208"];
m86_113 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerFetchedJob.cs", label="var result = UseConnection(func)", span="210-210"];
m86_114 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerFetchedJob.cs", label="transaction.Complete()", span="211-211"];
m86_115 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerFetchedJob.cs", label="return result;", span="213-213"];
m86_116 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="206-206"];
m86_117 [cluster="Unk.CreateTransaction", file="SqlServerFetchedJob.cs", label="Entry Unk.CreateTransaction", span=""];
m86_74 [cluster="Unk.ContainsKey", file="SqlServerFetchedJob.cs", label="Entry Unk.ContainsKey", span=""];
m86_176 [file="SqlServerFetchedJob.cs", label="Hangfire.SqlServer.SqlServerStorage", span=""];
m86_177 [file="SqlServerFetchedJob.cs", label="System.Action<SqlConnection>", span=""];
m86_178 [file="SqlServerFetchedJob.cs", label="System.Action<SqlConnection>", span=""];
m88_48 [cluster="int.ToString(System.IFormatProvider)", file="SqlServerJobQueue.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m88_38 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="228-228"];
m88_10 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="50-50"];
m88_11 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="3: queues == null", span="52-52"];
m88_4 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs", label="throw new ArgumentNullException(nameof(options));", span="43-43"];
m88_5 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: _storage = storage", span="45-45"];
m88_6 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: _options = options", span="46-46"];
m88_7 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="40-40"];
m88_8 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="SqlServerJobQueue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="66-66"];
m88_9 [cluster="Unk.nameof", file="SqlServerJobQueue.cs", label="Entry Unk.nameof", span=""];
m88_40 [cluster="System.TimeSpan.Negate()", file="SqlServerJobQueue.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m88_41 [cluster="Unk.>", file="SqlServerJobQueue.cs", label="Entry Unk.>", span=""];
m88_0 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="SqlServerJobQueue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="36-36"];
m88_3 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="SqlServerJobQueue.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="43-43"];
m88_1 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="SqlServerJobQueue.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="36-36"];
m88_2 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="SqlServerJobQueue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="43-43"];
m88_47 [cluster="SqlServerFetchedJob.cstr", file="SqlServerJobQueue.cs", label="Entry SqlServerFetchedJob.cstr", span=""];
m88_44 [cluster="Unk.ReleaseConnection", file="SqlServerJobQueue.cs", label="Entry Unk.ReleaseConnection", span=""];
m88_12 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: throw new ArgumentNullException(nameof(queues));", span="52-52"];
m88_13 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="1: queues.Length == 0", span="53-53"];
m88_45 [cluster="Unk.Rollback", file="SqlServerJobQueue.cs", label="Entry Unk.Rollback", span=""];
m88_37 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerJobQueue.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m88_46 [cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.TimeSpan)", file="SqlServerJobQueue.cs", label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.TimeSpan)", span="0-0"];
m88_43 [cluster="Unk.Dispose", file="SqlServerJobQueue.cs", label="Entry Unk.Dispose", span=""];
m88_39 [cluster="Unk.BeginTransaction", file="SqlServerJobQueue.cs", label="Entry Unk.BeginTransaction", span=""];
m88_49 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", span="111-111"];
m88_50 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", file="SqlServerJobQueue.cs", label="string enqueueJobSql =\r\n$@''insert into [{_storage.SchemaName}].JobQueue (JobId, Queue) values (@jobId, @queue)''", span="114-115"];
m88_51 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", file="SqlServerJobQueue.cs", label="connection.Execute(\r\n                enqueueJobSql, \r\n                new { jobId = jobId, queue = queue }\r\n#if !NETFULL\r\n                , transaction\r\n#endif\r\n                )", span="117-123"];
m88_52 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", file="SqlServerJobQueue.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", span="111-111"];
m88_36 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerJobQueue.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m88_53 [cluster="Unk.Execute", file="SqlServerJobQueue.cs", label="Entry Unk.Execute", span=""];
m88_42 [cluster="Unk.SingleOrDefault", file="SqlServerJobQueue.cs", label="Entry Unk.SingleOrDefault", span=""];
m88_14 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: throw new ArgumentException(''Queue array must be non-empty.'', nameof(queues));", span="53-53"];
m88_15 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="FetchedJob fetchedJob", span="55-55"];
m88_16 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="1: DbConnection connection", span="56-56"];
m88_17 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="DbTransaction transaction", span="57-57"];
m88_34 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: return new SqlServerFetchedJob(\r\n                _storage,\r\n                connection,\r\n                transaction,\r\n                fetchedJob.JobId.ToString(CultureInfo.InvariantCulture),\r\n                fetchedJob.Queue);", span="100-105"];
m88_22 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="fetchedJob = connection.Query<FetchedJob>(\r\n                               fetchJobSqlTemplate,\r\n#pragma warning disable 618\r\n                               new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds },\r\n#pragma warning restore 618\r\n                               transaction)\r\n                               .SingleOrDefault()", span="74-80"];
m88_20 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="connection = _storage.CreateAndOpenConnection()", span="69-69"];
m88_21 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="transaction = connection.BeginTransaction(IsolationLevel.ReadCommitted)", span="70-70"];
m88_33 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="fetchedJob == null", span="98-98"];
m88_26 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="4: throw;", span="86-86"];
m88_25 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="_storage.ReleaseConnection(connection)", span="85-85"];
m88_18 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="string fetchJobSqlTemplate =\r\n$@''delete top (1) from [{_storage.SchemaName}].JobQueue with (readpast, updlock, rowlock)\r\noutput DELETED.Id, DELETED.JobId, DELETED.Queue\r\nwhere (FetchedAt is null or FetchedAt < DATEADD(second, @timeout, GETUTCDATE()))\r\nand Queue in @queues''", span="59-63"];
m88_30 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="_storage.ReleaseConnection(connection)", span="93-93"];
m88_31 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="WaitHandle.WaitAny(new []{ cancellationToken.WaitHandle, NewItemInQueueEvent },_options.QueuePollInterval)", span="95-95"];
m88_19 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="67-67"];
m88_23 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label=DbException, span="82-82"];
m88_27 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="fetchedJob == null", span="89-89"];
m88_24 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="transaction.Dispose()", span="84-84"];
m88_28 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="transaction.Rollback()", span="91-91"];
m88_29 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="transaction.Dispose()", span="92-92"];
m88_32 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="96-96"];
m88_35 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="50-50"];
m88_54 [file="SqlServerJobQueue.cs", label="Hangfire.SqlServer.SqlServerJobQueue", span=""];
m89_15 [cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", span="43-43"];
m89_17 [cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="4: throw new InvalidOperationException(''Can not release a distributed lock: it was not acquired.'');", span="47-47"];
m89_16 [cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="SqlServerMonitoringApi.cs", label="!filterContext.Items.ContainsKey(''DistributedLock'')", span="45-45"];
m89_18 [cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="SqlServerMonitoringApi.cs", label="var distributedLock = (IDisposable)filterContext.Items[''DistributedLock'']", span="50-50"];
m89_19 [cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="SqlServerMonitoringApi.cs", label="distributedLock.Dispose()", span="51-51"];
m89_20 [cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", span="43-43"];
m89_22 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerMonitoringApi.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m89_23 [cluster="System.IDisposable.Dispose()", file="SqlServerMonitoringApi.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m89_21 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m90_0 [cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StackTraceFormatter.cs", label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20"];
m90_1 [cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StackTraceFormatter.cs", label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20"];
m92_0 [cluster="Hangfire.Dashboard.Resources.Strings.Strings()", file="Strings.Designer.cs", label="Entry Hangfire.Dashboard.Resources.Strings.Strings()", span="33-33"];
m92_1 [cluster="Hangfire.Dashboard.Resources.Strings.Strings()", file="Strings.Designer.cs", label="Exit Hangfire.Dashboard.Resources.Strings.Strings()", span="33-33"];
m93_86 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m93_0 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.Pages.SucceededJobs.Execute()", span="46-46"];
m93_35 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="2: succeededJobs", span="228-228"];
m93_8 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="var succeededJobs = monitor.SucceededJobs(pager.FromRecord, pager.RecordsPerPage)", span="70-70"];
m93_34 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="222-223"];
m93_68 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                </tr>\r\n'')", span="443-443"];
m93_36 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''                                <tr class=\''js-jobs-list-row '')", span="234-234"];
m93_69 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n                '')", span="453-454"];
m93_37 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: Write(job.Value == null || !job.Value.InSucceededState ? ''obsolete-data'' : null)", span="239-239"];
m93_12 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="1: Write(Strings.SucceededJobsPage_Title)", span="91-91"];
m93_11 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n    </div>\r\n    <div class=\''col-md-9\''>\r\n        <h1 class=\''page-header\''>'')", span="86-86"];
m93_13 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''</h1>\r\n\r\n'')", span="96-96"];
m93_14 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="pager.TotalPageCount == 0", span="101-101"];
m93_17 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''\r\n            </div>\r\n'')", span="117-117"];
m93_16 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Strings.SucceededJobsPage_NoJobs)", span="112-112"];
m93_72 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''    </div>\r\n</div>'')", span="474-474"];
m93_19 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: Write(Url.To(''/jobs/succeeded/requeue''))", span="136-136"];
m93_18 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="129-131"];
m93_20 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="141-141"];
m93_21 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: Write(Strings.Common_Enqueueing)", span="146-146"];
m93_22 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-repeat\''></span>\r\n                        '')", span="151-152"];
m93_26 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(@''\r\n                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="172-182"];
m93_25 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Html.PerPageSelector(pager))", span="167-167"];
m93_27 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Strings.Common_Id)", span="187-187"];
m93_28 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''</th>\r\n                                <th>'')", span="192-192"];
m93_29 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: Write(Strings.Common_Job)", span="197-197"];
m93_30 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="202-202"];
m93_31 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: Write(Strings.SucceededJobsPage_Table_TotalDuration)", span="207-207"];
m93_32 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="4: WriteLiteral(''</th>\r\n                                <th class=\''align-right\''>'')", span="212-212"];
m93_33 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="4: Write(Strings.SucceededJobsPage_Table_Succeeded)", span="217-217"];
m93_38 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral('' '')", span="244-244"];
m93_39 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="4: Write(job.Value != null && job.Value.InSucceededState ? ''hover'' : null)", span="249-249"];
m93_40 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''>\r\n                                    <td>\r\n'')", span="254-254"];
m93_41 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value == null || job.Value.InSucceededState", span="259-259"];
m93_45 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="4: WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\''>\r\n                                        '')", span="286-287"];
m93_44 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\'' />\r\n'')", span="276-276"];
m93_46 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Html.JobIdLink(job.Key))", span="292-292"];
m93_48 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: job.Value != null && !job.Value.InSucceededState", span="302-302"];
m93_47 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n'')", span="297-297"];
m93_49 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                            <span title=\'''')", span="308-308"];
m93_52 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                    </td>\r\n\r\n'')", span="328-328"];
m93_53 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="4: job.Value == null", span="333-333"];
m93_54 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''                                        <td colspan=\''3\''>\r\n                       '' +\r\n''                     <em>'')", span="339-340"];
m93_57 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="1: WriteLiteral(''                                        <td>\r\n                                   '' +\r\n''         '')", span="362-363"];
m93_58 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Html.JobNameLink(job.Key, job.Value.Job))", span="368-368"];
m93_50 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="1: Write(Strings.Common_JobStateChanged_Text)", span="313-313"];
m93_51 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="4: WriteLiteral(''\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="318-318"];
m93_55 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Strings.Common_JobExpired)", span="345-345"];
m93_59 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="4: WriteLiteral(''\r\n                                        </td>\r\n'')", span="373-373"];
m93_60 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                        <td class=\''min-width align-right\''>\r\n'')", span="377-377"];
m93_7 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="var pager = new Pager(from, perPage, monitor.SucceededListCount())", span="69-69"];
m93_6 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="var monitor = Storage.GetMonitoringApi()", span="68-68"];
m93_9 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-3\''>\r\n        '')", span="76-76"];
m93_56 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''</em>\r\n                                        </td>\r\n'')", span="350-350"];
m93_67 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                        </td>\r\n'')", span="433-433"];
m93_70 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Html.Paginator(pager))", span="459-459"];
m93_1 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n'')", span="50-50"];
m93_2 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Layout = new LayoutPage(Strings.SucceededJobsPage_Title)", span="61-61"];
m93_4 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="int.TryParse(Query(''from''), out from)", span="65-65"];
m93_5 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="int.TryParse(Query(''count''), out perPage)", span="66-66"];
m93_10 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Html.JobsSidebar())", span="81-81"];
m93_15 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                '')", span="107-107"];
m93_23 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Strings.Common_RequeueJobs)", span="157-157"];
m93_24 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n                    </button>\r\n\r\n                    '')", span="162-162"];
m93_42 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                            <input type=\''checkbox\'' class=\''js-jobs'' +\r\n''-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="265-266"];
m93_43 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(job.Key)", span="271-271"];
m93_62 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Html.ToHumanDuration(TimeSpan.FromMilliseconds(job.Value.TotalDuration.Value), false))", span="390-390"];
m93_63 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                        </td>\r\n'')", span="403-403"];
m93_64 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                        <td class=\''min-width align-right\''>\r\n'')", span="407-407"];
m93_66 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Html.RelativeTime(job.Value.SucceededAt.Value))", span="420-420"];
m93_71 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="464-464"];
m93_61 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value.TotalDuration.HasValue", span="382-382"];
m93_65 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value.SucceededAt.HasValue", span="412-412"];
m93_3 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="int from, perPage", span="63-63"];
m93_73 [cluster="Hangfire.Dashboard.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Exit Hangfire.Dashboard.Pages.SucceededJobs.Execute()", span="46-46"];
m93_85 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m93_87 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m93_79 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m93_77 [cluster="int.TryParse(string, out int)", file="SucceededJobs1.generated.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m93_82 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m93_89 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155"];
m93_74 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m93_91 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m93_80 [cluster="Hangfire.Storage.IMonitoringApi.SucceededListCount()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Storage.IMonitoringApi.SucceededListCount()", span="44-44"];
m93_88 [cluster="System.TimeSpan.FromMilliseconds(double)", file="SucceededJobs1.generated.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m93_90 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m93_76 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m93_81 [cluster="Hangfire.Storage.IMonitoringApi.SucceededJobs(int, int)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Storage.IMonitoringApi.SucceededJobs(int, int)", span="34-34"];
m93_78 [cluster="Hangfire.JobStorage.GetMonitoringApi()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54"];
m93_83 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m93_84 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m93_75 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m93_92 [file="SucceededJobs1.generated.cs", label="Hangfire.Dashboard.Pages.SucceededJobs", span=""];
m95_40 [cluster="Unk.Join", file="TypeExtensions.cs", label="Entry Unk.Join", span=""];
m95_20 [cluster="string.Replace(char, char)", file="TypeExtensions.cs", label="Entry string.Replace(char, char)", span="0-0"];
m95_21 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", span="40-40"];
m95_22 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", color=red, community=0, file="TypeExtensions.cs", label="2: var genericArguments = type .GetTypeInfo().GetAllGenericArguments()", span="42-42"];
m95_25 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", color=red, community=1, file="TypeExtensions.cs", label="4: typeName = rgx.Replace(typeName, match =>\r\n            {\r\n                var currentGenericArgumentNumbers = int.Parse(match.Value.Substring(1));\r\n                var currentArguments = string.Join('','', genericArguments.Take(currentGenericArgumentNumbers).Select(ToGenericTypeString));\r\n                genericArguments = genericArguments.Skip(currentGenericArgumentNumbers).ToArray();\r\n                return string.Concat(''<'', currentArguments, ''>'');\r\n            })", span="48-54"];
m95_23 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", color=red, community=0, file="TypeExtensions.cs", label="1: string regexForGenericArguments = @''`[1-9]\d*''", span="44-44"];
m95_24 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", color=red, community=0, file="TypeExtensions.cs", label="0: var rgx = new Regex(regexForGenericArguments)", span="46-46"];
m95_26 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", color=red, community=0, file="TypeExtensions.cs", label="0: return typeName;", span="56-56"];
m95_27 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", span="40-40"];
m95_6 [cluster="System.Type.GetFullNameWithoutNamespace()", file="TypeExtensions.cs", label="Entry System.Type.GetFullNameWithoutNamespace()", span="23-23"];
m95_17 [cluster="Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", span="35-35"];
m95_18 [cluster="Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", color=red, community=0, file="TypeExtensions.cs", label="0: return typeName.Replace('+', '.');", span="37-37"];
m95_19 [cluster="Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", span="35-35"];
m95_37 [cluster="int.Parse(string)", file="TypeExtensions.cs", label="Entry int.Parse(string)", span="0-0"];
m95_28 [cluster="System.Reflection.TypeInfo.GetAllGenericArguments()", file="TypeExtensions.cs", label="Entry System.Reflection.TypeInfo.GetAllGenericArguments()", span="59-59"];
m95_16 [cluster="string.Substring(int)", file="TypeExtensions.cs", label="Entry string.Substring(int)", span="0-0"];
m95_9 [cluster="string.ReplaceGenericParametersInGenericTypeName(System.Type)", file="TypeExtensions.cs", label="Entry string.ReplaceGenericParametersInGenericTypeName(System.Type)", span="40-40"];
m95_38 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="TypeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m95_0 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="9-9"];
m95_1 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=red, community=0, file="TypeExtensions.cs", label="4: !type.GetTypeInfo().IsGenericType", span="11-11"];
m95_2 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=red, community=1, file="TypeExtensions.cs", label="0: return type.GetFullNameWithoutNamespace()\r\n                        .ReplacePlusWithDotInNestedTypeName();", span="13-14"];
m95_3 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=red, community=1, file="TypeExtensions.cs", label="0: return type.GetGenericTypeDefinition()\r\n                    .GetFullNameWithoutNamespace()\r\n                    .ReplacePlusWithDotInNestedTypeName()\r\n                    .ReplaceGenericParametersInGenericTypeName(type);", span="17-20"];
m95_4 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="9-9"];
m95_31 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="48-54"];
m95_33 [cluster="lambda expression", color=red, community=0, file="TypeExtensions.cs", label="4: var currentArguments = string.Join('','', genericArguments.Take(currentGenericArgumentNumbers).Select(ToGenericTypeString))", span="51-51"];
m95_34 [cluster="lambda expression", color=red, community=0, file="TypeExtensions.cs", label="0: genericArguments = genericArguments.Skip(currentGenericArgumentNumbers).ToArray()", span="52-52"];
m95_32 [cluster="lambda expression", color=red, community=0, file="TypeExtensions.cs", label="4: var currentGenericArgumentNumbers = int.Parse(match.Value.Substring(1))", span="50-50"];
m95_35 [cluster="lambda expression", color=red, community=0, file="TypeExtensions.cs", label="1: return string.Concat(''<'', currentArguments, ''>'');", span="53-53"];
m95_36 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="48-54"];
m95_5 [cluster="System.Type.GetTypeInfo()", file="TypeExtensions.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m95_39 [cluster="Unk.Select", file="TypeExtensions.cs", label="Entry Unk.Select", span=""];
m95_30 [cluster="Unk.Replace", file="TypeExtensions.cs", label="Entry Unk.Replace", span=""];
m95_7 [cluster="string.ReplacePlusWithDotInNestedTypeName()", file="TypeExtensions.cs", label="Entry string.ReplacePlusWithDotInNestedTypeName()", span="35-35"];
m95_43 [cluster="string.Concat(string, string, string)", file="TypeExtensions.cs", label="Entry string.Concat(string, string, string)", span="0-0"];
m95_8 [cluster="System.Type.GetGenericTypeDefinition()", file="TypeExtensions.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m95_10 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="23-23"];
m95_11 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", color=red, community=0, file="TypeExtensions.cs", label="0: type.IsGenericParameter", span="25-25"];
m95_12 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", color=red, community=0, file="TypeExtensions.cs", label="2: return type.Name;", span="27-27"];
m95_14 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", color=red, community=0, file="TypeExtensions.cs", label="1: return type.FullName.Substring(type.Namespace.Length + dotLength);", span="32-32"];
m95_13 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", color=red, community=0, file="TypeExtensions.cs", label="0: int dotLength = 1", span="30-30"];
m95_15 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="23-23"];
m95_29 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", file="TypeExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
m95_44 [cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", span="59-59"];
m95_45 [cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", color=red, community=0, file="TypeExtensions.cs", label="0: return type.GenericTypeArguments.Length > 0 ? type.GenericTypeArguments : type.GenericTypeParameters;", span="61-61"];
m95_46 [cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", span="59-59"];
m95_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="TypeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m95_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="TypeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m95_47 [file="TypeExtensions.cs", label=genericArguments, span=""];
m96_7 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", file="TypeExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", span="19-19"];
m96_8 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(NonGenericClass.NestedGenericClass<,>).ToGenericTypeString(), ''NonGenericClass.NestedGenericClass<T1,T2>'')", span="21-21"];
m96_9 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(GenericClass<>).ToGenericTypeString(), ''GenericClass<T0>'')", span="22-22"];
m96_10 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(GenericClass<>.NestedNonGenericClass).ToGenericTypeString(), ''GenericClass<T0>.NestedNonGenericClass'')", span="23-23"];
m96_11 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(GenericClass<>.NestedNonGenericClass.DoubleNestedGenericClass<,,>).ToGenericTypeString(), ''GenericClass<T0>.NestedNonGenericClass.DoubleNestedGenericClass<T1,T2,T3>'')", span="24-24"];
m96_12 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", file="TypeExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", span="19-19"];
m96_0 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", file="TypeExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", span="11-11"];
m96_1 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(NonGenericClass).ToGenericTypeString(), ''NonGenericClass'')", span="13-13"];
m96_2 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(NonGenericClass.NestedNonGenericClass).ToGenericTypeString(), ''NonGenericClass.NestedNonGenericClass'')", span="14-14"];
m96_3 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(NonGenericClass.NestedNonGenericClass.DoubleNestedNonGenericClass).ToGenericTypeString(), ''NonGenericClass.NestedNonGenericClass.DoubleNestedNonGenericClass'')", span="15-15"];
m96_4 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", file="TypeExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsNonGenericNestedClassName_WithDot()", span="11-11"];
m96_13 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", file="TypeExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", span="28-28"];
m96_14 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(NonGenericClass.NestedGenericClass<Assert, List<Assert>>).ToGenericTypeString(), ''NonGenericClass.NestedGenericClass<Assert,List<Assert>>'')", span="30-30"];
m96_15 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(GenericClass<Assert>).ToGenericTypeString(), ''GenericClass<Assert>'')", span="31-31"];
m96_16 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(GenericClass<List<Assert>>.NestedNonGenericClass).ToGenericTypeString(), ''GenericClass<List<Assert>>.NestedNonGenericClass'')", span="32-32"];
m96_17 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", color=red, community=0, file="TypeExtensionsFacts.cs", label="0: Assert.Equal(typeof(GenericClass<List<GenericClass<List<Assert>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert, List<Assert>, Stack<Assert>>>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert, List<Assert>, Stack<Assert>>).ToGenericTypeString(), ''GenericClass<List<GenericClass<List<Assert>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert,List<Assert>,Stack<Assert>>>>.NestedNonGenericClass.DoubleNestedGenericClass<Assert,List<Assert>,Stack<Assert>>'')", span="33-33"];
m96_18 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", file="TypeExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsClosedGenericNestedClassName_WithGivenTypes()", span="28-28"];
m96_5 [cluster="System.Type.ToGenericTypeString()", file="TypeExtensionsFacts.cs", label="Entry System.Type.ToGenericTypeString()", span="9-9"];
m97_8 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="Worker.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65"];
m97_9 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="Worker.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65"];
m97_0 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="Worker.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35"];
m97_1 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="Worker.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35"];
m97_10 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="Worker.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73"];
m97_11 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="Worker.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73"];
m97_4 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", file="Worker.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="50-50"];
m97_5 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", file="Worker.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="50-50"];
m97_2 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="Worker.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="42-42"];
m97_3 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="Worker.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="42-42"];
m97_12 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="Worker.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
m97_13 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="Worker.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
m97_6 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="Worker.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57"];
m97_7 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="Worker.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57"];
m98_162 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="158-158"];
m98_163 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="160-160"];
m98_164 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="162-162"];
m98_165 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="_stateChanger.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.NewState is ProcessingState &&\r\n                ctx.ExpectedStates.ElementAt(0) == EnqueuedState.StateName &&\r\n                ctx.ExpectedStates.ElementAt(1) == ProcessingState.StateName)))", span="164-167"];
m98_166 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="158-158"];
m98_13 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m98_292 [cluster="System.Exception.Exception()", file="WorkerFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m98_250 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="245-245"];
m98_251 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="248-248"];
m98_252 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsAny<PerformContext>()))\r\n                .Throws(exception)", span="249-251"];
m98_255 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="_stateChanger.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is FailedState &&\r\n                ((FailedState) ctx.NewState).Exception == exception)))", span="259-262"];
m98_253 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="253-253"];
m98_254 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="256-256"];
m98_256 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="245-245"];
m98_58 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", span="63-63"];
m98_59 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", file="WorkerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_queues, null, _stateChanger.Object))", span="65-66"];
m98_60 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", file="WorkerFacts.cs", label="Assert.Equal(''performer'', exception.ParamName)", span="68-68"];
m98_61 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", span="63-63"];
m98_173 [cluster="Unk.ElementAt", file="WorkerFacts.cs", label="Entry Unk.ElementAt", span=""];
m98_239 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="233-233"];
m98_240 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="235-235"];
m98_241 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="237-237"];
m98_242 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="_stateChanger.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.NewState is SucceededState &&\r\n                ctx.ExpectedStates.ElementAt(0) == ProcessingState.StateName)))", span="239-241"];
m98_243 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="233-233"];
m98_120 [cluster="Unk.Requeue", file="WorkerFacts.cs", label="Entry Unk.Requeue", span=""];
m98_174 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="171-171"];
m98_175 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_stateChanger\r\n                .Setup(x => x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.NewState is ProcessingState)))\r\n                .Returns<IState>(null)", span="174-176"];
m98_176 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="178-178"];
m98_177 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="181-181"];
m98_178 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_performer.Verify(x => x.Perform(It.IsAny<PerformContext>()), Times.Never)", span="184-184"];
m98_179 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="171-171"];
m98_189 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="188-188"];
m98_190 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="190-190"];
m98_191 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="192-192"];
m98_192 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="_performer.Verify(x => x.Perform(It.IsNotNull<PerformContext>()))", span="194-194"];
m98_193 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="188-188"];
m98_226 [cluster="Unk.DoesNotThrow", file="WorkerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m98_257 [cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m98_22 [cluster="Unk.>", file="WorkerFacts.cs", label="Entry Unk.>", span=""];
m98_101 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="106-106"];
m98_102 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_stateChanger\r\n                .Setup(x => x.ChangeState(It.IsAny<StateChangeContext>()))\r\n                .Throws<InvalidOperationException>()", span="108-110"];
m98_103 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="112-112"];
m98_104 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => worker.Execute(_context.Object))", span="114-115"];
m98_105 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue(), Times.Never)", span="117-117"];
m98_106 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="118-118"];
m98_107 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="106-106"];
m98_219 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="217-217"];
m98_220 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_performer.Setup(x => x.Perform(It.IsAny<PerformContext>()))\r\n                .Throws<JobAbortedException>()", span="220-221"];
m98_221 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="223-223"];
m98_222 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Assert.DoesNotThrow(() => worker.Execute(_context.Object))", span="226-226"];
m98_223 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="228-228"];
m98_224 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue(), Times.Never)", span="229-229"];
m98_225 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="217-217"];
m98_78 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="302-302"];
m98_302 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="return new Worker(_queues, _performer.Object, _stateChanger.Object);", span="304-304"];
m98_303 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="302-302"];
m98_18 [cluster="Mock<IFetchedJob>.cstr", file="WorkerFacts.cs", label="Entry Mock<IFetchedJob>.cstr", span=""];
m98_268 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="266-266"];
m98_269 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="269-269"];
m98_270 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsAny<PerformContext>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="270-272"];
m98_271 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="274-274"];
m98_272 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="277-277"];
m98_273 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="_stateChanger.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is FailedState)))", span="280-282"];
m98_274 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="266-266"];
m98_26 [cluster="Unk.GetConnection", file="WorkerFacts.cs", label="Entry Unk.GetConnection", span=""];
m98_45 [cluster="Unk.ChangeState", file="WorkerFacts.cs", label="Entry Unk.ChangeState", span=""];
m98_0 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="26-26"];
m98_1 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_context = new BackgroundProcessContextMock()", span="28-28"];
m98_2 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_queues = new[] {''critical''}", span="29-29"];
m98_3 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_performer = new Mock<IBackgroundJobPerformer>()", span="30-30"];
m98_4 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="32-32"];
m98_5 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33"];
m98_6 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_fetchedJob = new Mock<IFetchedJob>()", span="35-35"];
m98_7 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_fetchedJob.Setup(x => x.JobId).Returns(JobId)", span="36-36"];
m98_8 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection\r\n                .Setup(x => x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_fetchedJob.Object)", span="38-40"];
m98_9 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="42-46"];
m98_10 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateChanger = new Mock<IBackgroundJobStateChanger>()", span="48-48"];
m98_11 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateChanger.Setup(x => x.ChangeState(It.IsAny<StateChangeContext>()))\r\n                .Returns<StateChangeContext>(ctx => ctx.NewState)", span="49-50"];
m98_12 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="26-26"];
m98_128 [cluster="Unk.InSequence", file="WorkerFacts.cs", label="Entry Unk.InSequence", span=""];
m98_16 [cluster="Unk.Setup", file="WorkerFacts.cs", label="Entry Unk.Setup", span=""];
m98_87 [cluster="Unk.Dispose", file="WorkerFacts.cs", label="Entry Unk.Dispose", span=""];
m98_258 [cluster="Unk.Throws", file="WorkerFacts.cs", label="Entry Unk.Throws", span=""];
m98_33 [cluster="Unk.FetchNextJob", file="WorkerFacts.cs", label="Entry Unk.FetchNextJob", span=""];
m98_14 [cluster="Mock<IBackgroundJobPerformer>.cstr", file="WorkerFacts.cs", label="Entry Mock<IBackgroundJobPerformer>.cstr", span=""];
m98_49 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenQueuesCollectionNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenQueuesCollectionNull()", span="54-54"];
m98_50 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenQueuesCollectionNull()", file="WorkerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null, _performer.Object, _stateChanger.Object))", span="56-57"];
m98_51 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenQueuesCollectionNull()", file="WorkerFacts.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="59-59"];
m98_52 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenQueuesCollectionNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenQueuesCollectionNull()", span="54-54"];
m98_72 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="81-81"];
m98_73 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="83-83"];
m98_74 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="85-85"];
m98_75 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_context.Storage.Verify(x => x.GetConnection(), Times.Once)", span="87-87"];
m98_76 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="88-88"];
m98_77 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="81-81"];
m98_141 [cluster="Unk.Perform", file="WorkerFacts.cs", label="Entry Unk.Perform", span=""];
m98_285 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="286-286"];
m98_286 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException(''asd'', new Exception()) })", span="289-290"];
m98_287 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="292-292"];
m98_288 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="295-295"];
m98_289 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="_stateChanger.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.NewState is FailedState)))", span="298-299"];
m98_290 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="286-286"];
m98_100 [cluster="Unk.RemoveFromQueue", file="WorkerFacts.cs", label="Entry Unk.RemoveFromQueue", span=""];
m98_21 [cluster="Mock<IBackgroundJobStateChanger>.cstr", file="WorkerFacts.cs", label="Entry Mock<IBackgroundJobStateChanger>.cstr", span=""];
m98_299 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="298-299"];
m98_23 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="33-33"];
m98_27 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="36-36"];
m98_30 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="39-39"];
m98_34 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="42-42"];
m98_38 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="45-45"];
m98_42 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="49-49"];
m98_46 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="50-50"];
m98_24 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="33-33"];
m98_25 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="33-33"];
m98_28 [cluster="lambda expression", file="WorkerFacts.cs", label="x.JobId", span="36-36"];
m98_29 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="36-36"];
m98_31 [cluster="lambda expression", file="WorkerFacts.cs", label="x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>())", span="39-39"];
m98_32 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="39-39"];
m98_35 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetJobData(JobId)", span="42-42"];
m98_36 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="42-42"];
m98_39 [cluster="lambda expression", file="WorkerFacts.cs", label="Method()", span="45-45"];
m98_40 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="45-45"];
m98_43 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.IsAny<StateChangeContext>())", span="49-49"];
m98_44 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="49-49"];
m98_47 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.NewState", span="50-50"];
m98_48 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="50-50"];
m98_54 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="57-57"];
m98_55 [cluster="lambda expression", file="WorkerFacts.cs", label="new Worker(null, _performer.Object, _stateChanger.Object)", span="57-57"];
m98_56 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="57-57"];
m98_62 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="66-66"];
m98_63 [cluster="lambda expression", file="WorkerFacts.cs", label="new Worker(_queues, null, _stateChanger.Object)", span="66-66"];
m98_64 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="66-66"];
m98_69 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="75-75"];
m98_70 [cluster="lambda expression", file="WorkerFacts.cs", label="new Worker(_queues, _performer.Object, null)", span="75-75"];
m98_71 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="75-75"];
m98_81 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="87-87"];
m98_84 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="88-88"];
m98_82 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="87-87"];
m98_83 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="87-87"];
m98_85 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Dispose()", span="88-88"];
m98_86 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="88-88"];
m98_94 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="99-99"];
m98_97 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="102-102"];
m98_95 [cluster="lambda expression", file="WorkerFacts.cs", label="x.FetchNextJob(_queues, _context.CancellationTokenSource.Token)", span="99-99"];
m98_96 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="99-99"];
m98_98 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="102-102"];
m98_99 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="102-102"];
m98_108 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="109-109"];
m98_112 [cluster="lambda expression", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="115-115"];
m98_111 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="115-115"];
m98_114 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="117-117"];
m98_117 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="118-118"];
m98_109 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.IsAny<StateChangeContext>())", span="109-109"];
m98_110 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="109-109"];
m98_113 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="115-115"];
m98_115 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="117-117"];
m98_116 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="117-117"];
m98_118 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="118-118"];
m98_119 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="118-118"];
m98_129 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="126-126"];
m98_135 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="128-128"];
m98_138 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="130-130"];
m98_142 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="134-134"];
m98_148 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="136-136"];
m98_130 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.BackgroundJobId == JobId && ctx.NewState is ProcessingState))", span="126-126"];
m98_131 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="126-126"];
m98_132 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="126-126"];
m98_133 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.BackgroundJobId == JobId && ctx.NewState is ProcessingState", span="126-126"];
m98_134 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="126-126"];
m98_136 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.NewState", span="128-128"];
m98_137 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="128-128"];
m98_139 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Perform(It.IsAny<PerformContext>())", span="130-130"];
m98_140 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="130-130"];
m98_143 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.BackgroundJobId == JobId && ctx.NewState is SucceededState))", span="134-134"];
m98_144 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="134-134"];
m98_145 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="134-134"];
m98_146 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.BackgroundJobId == JobId && ctx.NewState is SucceededState", span="134-134"];
m98_147 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="134-134"];
m98_149 [cluster="lambda expression", file="WorkerFacts.cs", label="context.NewState", span="136-136"];
m98_150 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="136-136"];
m98_156 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="153-154"];
m98_157 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.NewState is ProcessingState && (((ProcessingState) ctx.NewState).ServerId == _context.ServerId)))", span="153-154"];
m98_158 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="153-154"];
m98_159 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="153-154"];
m98_160 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.NewState is ProcessingState && (((ProcessingState) ctx.NewState).ServerId == _context.ServerId)", span="154-154"];
m98_161 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="153-154"];
m98_167 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="164-167"];
m98_168 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.NewState is ProcessingState &&\r\n                ctx.ExpectedStates.ElementAt(0) == EnqueuedState.StateName &&\r\n                ctx.ExpectedStates.ElementAt(1) == ProcessingState.StateName))", span="164-167"];
m98_169 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="164-167"];
m98_170 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="164-167"];
m98_171 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.NewState is ProcessingState &&\r\n                ctx.ExpectedStates.ElementAt(0) == EnqueuedState.StateName &&\r\n                ctx.ExpectedStates.ElementAt(1) == ProcessingState.StateName", span="165-167"];
m98_172 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="164-167"];
m98_180 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="175-175"];
m98_186 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="184-184"];
m98_181 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.NewState is ProcessingState))", span="175-175"];
m98_182 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="175-175"];
m98_183 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="175-175"];
m98_184 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.NewState is ProcessingState", span="175-175"];
m98_185 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="175-175"];
m98_187 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Perform(It.IsAny<PerformContext>())", span="184-184"];
m98_188 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="184-184"];
m98_194 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="194-194"];
m98_195 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Perform(It.IsNotNull<PerformContext>())", span="194-194"];
m98_196 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="194-194"];
m98_204 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="201-201"];
m98_208 [cluster="lambda expression", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="207-207"];
m98_207 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="207-207"];
m98_210 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="211-211"];
m98_216 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="213-213"];
m98_205 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Perform(It.IsAny<PerformContext>())", span="201-201"];
m98_206 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="201-201"];
m98_209 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="207-207"];
m98_211 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.NewState is FailedState))", span="211-211"];
m98_212 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="211-211"];
m98_213 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="211-211"];
m98_214 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.NewState is FailedState", span="211-211"];
m98_215 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="211-211"];
m98_217 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="213-213"];
m98_218 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="213-213"];
m98_227 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="220-220"];
m98_231 [cluster="lambda expression", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="226-226"];
m98_230 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="226-226"];
m98_233 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="228-228"];
m98_236 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="229-229"];
m98_228 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Perform(It.IsAny<PerformContext>())", span="220-220"];
m98_229 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="220-220"];
m98_232 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="226-226"];
m98_234 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="228-228"];
m98_235 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="228-228"];
m98_237 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="229-229"];
m98_238 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="229-229"];
m98_244 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="239-241"];
m98_245 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.NewState is SucceededState &&\r\n                ctx.ExpectedStates.ElementAt(0) == ProcessingState.StateName))", span="239-241"];
m98_246 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="239-241"];
m98_247 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="239-241"];
m98_248 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.NewState is SucceededState &&\r\n                ctx.ExpectedStates.ElementAt(0) == ProcessingState.StateName", span="240-241"];
m98_249 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="239-241"];
m98_263 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is FailedState &&\r\n                ((FailedState) ctx.NewState).Exception == exception))", span="259-262"];
m98_266 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is FailedState &&\r\n                ((FailedState) ctx.NewState).Exception == exception", span="260-262"];
m98_259 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="250-250"];
m98_262 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="259-262"];
m98_260 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Perform(It.IsAny<PerformContext>())", span="250-250"];
m98_261 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="250-250"];
m98_264 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="259-262"];
m98_265 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="259-262"];
m98_267 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="259-262"];
m98_276 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="271-271"];
m98_279 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="280-282"];
m98_277 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Perform(It.IsAny<PerformContext>())", span="271-271"];
m98_278 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="271-271"];
m98_280 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is FailedState))", span="280-282"];
m98_281 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="280-282"];
m98_282 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="280-282"];
m98_283 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is FailedState", span="281-282"];
m98_284 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="280-282"];
m98_293 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="289-289"];
m98_296 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="298-299"];
m98_294 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetJobData(JobId)", span="289-289"];
m98_295 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="289-289"];
m98_297 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.NewState is FailedState))", span="298-299"];
m98_298 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="298-299"];
m98_300 [cluster="lambda expression", file="WorkerFacts.cs", label="ctx.NewState is FailedState", span="299-299"];
m98_301 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="298-299"];
m98_57 [cluster="Worker.cstr", file="WorkerFacts.cs", label="Entry Worker.cstr", span=""];
m98_19 [cluster="Hangfire.Storage.JobData.JobData()", file="WorkerFacts.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m98_151 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="147-147"];
m98_152 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="149-149"];
m98_153 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="151-151"];
m98_154 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="_stateChanger.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.NewState is ProcessingState && (((ProcessingState) ctx.NewState).ServerId == _context.ServerId))))", span="153-154"];
m98_155 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="147-147"];
m98_80 [cluster="Unk.Verify", file="WorkerFacts.cs", label="Entry Unk.Verify", span=""];
m98_65 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateChangeProcess_IsNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateChangeProcess_IsNull()", span="72-72"];
m98_66 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateChangeProcess_IsNull()", file="WorkerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_queues, _performer.Object, null))", span="74-75"];
m98_67 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateChangeProcess_IsNull()", file="WorkerFacts.cs", label="Assert.Equal(''stateChanger'', exception.ParamName)", span="77-77"];
m98_68 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateChangeProcess_IsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateChangeProcess_IsNull()", span="72-72"];
m98_121 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="122-122"];
m98_122 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_stateChanger\r\n                .Setup(x => x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.BackgroundJobId == JobId && ctx.NewState is ProcessingState)))\r\n                .InSequence()\r\n                .Returns<StateChangeContext>(ctx => ctx.NewState)", span="125-128"];
m98_123 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_performer.Setup(x => x.Perform(It.IsAny<PerformContext>()))\r\n                .InSequence()", span="130-131"];
m98_124 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_stateChanger\r\n                .Setup(x => x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.BackgroundJobId == JobId && ctx.NewState is SucceededState)))\r\n                .InSequence()\r\n                .Returns<StateChangeContext>(context => context.NewState)", span="133-136"];
m98_125 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="138-138"];
m98_126 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="141-141"];
m98_127 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="122-122"];
m98_88 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="92-92"];
m98_89 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="94-94"];
m98_90 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="96-96"];
m98_91 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="_connection.Verify(\r\n                x => x.FetchNextJob(_queues, _context.CancellationTokenSource.Token),\r\n                Times.Once)", span="98-100"];
m98_92 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="102-102"];
m98_93 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="92-92"];
m98_291 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="WorkerFacts.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="31-31"];
m98_275 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="WorkerFacts.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m98_197 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="198-198"];
m98_198 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_performer.Setup(x => x.Perform(It.IsAny<PerformContext>()))\r\n                .Throws<OperationCanceledException>()", span="201-202"];
m98_199 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="204-204"];
m98_200 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Assert.Throws<OperationCanceledException>(() => worker.Execute(_context.Object))", span="207-207"];
m98_201 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_stateChanger.Verify(\r\n                x => x.ChangeState(It.Is<StateChangeContext>(ctx => ctx.NewState is FailedState)),\r\n                Times.Never)", span="210-212"];
m98_202 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="213-213"];
m98_203 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="198-198"];
m98_17 [cluster="Unk.Returns", file="WorkerFacts.cs", label="Entry Unk.Returns", span=""];
m98_41 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="307-307"];
m98_304 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="307-307"];
m98_79 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="WorkerFacts.cs", label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76"];
m98_15 [cluster="Mock<IStorageConnection>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m98_37 [cluster="Unk.GetJobData", file="WorkerFacts.cs", label="Entry Unk.GetJobData", span=""];
m98_20 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233"];
m98_305 [file="WorkerFacts.cs", label="Hangfire.Core.Tests.Server.WorkerFacts", span=""];
m98_306 [file="WorkerFacts.cs", label=worker, span=""];
m98_307 [file="WorkerFacts.cs", label=worker, span=""];
m98_308 [file="WorkerFacts.cs", label=worker, span=""];
m98_309 [file="WorkerFacts.cs", label=exception, span=""];
m100_0 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="Entry Hangfire.Dashboard.Pages.InlineMetric.Execute()", span="29-29"];
m100_1 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="WriteLiteral(''\r\n'')", span="33-33"];
m100_2 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="var metric = DashboardMetric.Func(this)", span="41-41"];
m100_3 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="var className = metric == null ? ''metric-null'' : metric.Style.ToClassName()", span="42-42"];
m100_4 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="var highlighted = metric != null && metric.Highlighted ? ''highlighted'' : null", span="43-43"];
m100_12 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", color=red, community=0, file="_InlineMetric.generated.cs", label="0: Write(metric?.Value)", span="84-84"];
m100_8 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="Write(className)", span="64-64"];
m100_5 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="WriteLiteral(''<span data-metric=\'''')", span="49-49"];
m100_10 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="Write(highlighted)", span="74-74"];
m100_6 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="Write(DashboardMetric.Name)", span="54-54"];
m100_7 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="WriteLiteral(''\'' class=\''metric '')", span="59-59"];
m100_9 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="WriteLiteral('' '')", span="69-69"];
m100_11 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="WriteLiteral(''\''>'')", span="79-79"];
m100_13 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="WriteLiteral(''</span>'')", span="89-89"];
m100_14 [cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="_InlineMetric.generated.cs", label="Exit Hangfire.Dashboard.Pages.InlineMetric.Execute()", span="29-29"];
m100_16 [cluster="System.Func<T, TResult>.Invoke(T)", file="_InlineMetric.generated.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m100_15 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="_InlineMetric.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m100_17 [cluster="Hangfire.Dashboard.MetricStyle.ToClassName()", file="_InlineMetric.generated.cs", label="Entry Hangfire.Dashboard.MetricStyle.ToClassName()", span="43-43"];
m100_18 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="_InlineMetric.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m100_19 [file="_InlineMetric.generated.cs", label="Hangfire.Dashboard.Pages.InlineMetric", span=""];
m101_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="_PerPageSelector.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m101_0 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="_PerPageSelector.generated.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m101_1 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="_PerPageSelector.generated.cs", label="exception == null", span="28-28"];
m101_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="_PerPageSelector.generated.cs", label="Exception = exception", span="31-31"];
m101_2 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="_PerPageSelector.generated.cs", label="throw new ArgumentNullException(''exception'');", span="28-28"];
m101_3 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="_PerPageSelector.generated.cs", label="FailedAt = DateTime.UtcNow", span="30-30"];
m101_5 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="_PerPageSelector.generated.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m101_13 [cluster="System.Exception.ToString()", file="_PerPageSelector.generated.cs", label="Entry System.Exception.ToString()", span="0-0"];
m101_7 [cluster="HangFire.States.FailedState.SerializeData()", file="_PerPageSelector.generated.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="39-39"];
m101_8 [cluster="HangFire.States.FailedState.SerializeData()", color=red, community=0, file="_PerPageSelector.generated.cs", label="0: return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.ToStringTimestamp(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="41-47"];
m101_9 [cluster="HangFire.States.FailedState.SerializeData()", file="_PerPageSelector.generated.cs", label="Exit HangFire.States.FailedState.SerializeData()", span="39-39"];
m101_11 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="_PerPageSelector.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m101_12 [cluster="System.Exception.GetType()", file="_PerPageSelector.generated.cs", label="Entry System.Exception.GetType()", span="0-0"];
m101_14 [file="_PerPageSelector.generated.cs", label="HangFire.States.FailedState", span=""];
n24 -> n13  [color=red, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
n24 -> n14  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
n24 -> n15  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
n24 -> n16  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
n24 -> n17  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
n24 -> n18  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
n24 -> n19  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [color=red, key=0, style=solid];
n2 -> n4  [color=red, key=1, label="Hangfire.JobStorage", style=dashed];
n2 -> n5  [color=red, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
n2 -> n6  [color=red, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
n2 -> n7  [color=red, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
n2 -> n8  [color=red, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
n2 -> n9  [color=red, key=1, label="Hangfire.BackgroundJob", style=dashed];
n2 -> n10  [color=red, key=1, label="Hangfire.BackgroundJob", style=dashed];
n2 -> n11  [color=red, key=1, label="Hangfire.States.IState", style=dashed];
n2 -> n12  [color=red, key=1, label="Hangfire.States.IState", style=dashed];
n2 -> n13  [color=red, key=1, label="Hangfire.BackgroundJob", style=dashed];
n2 -> n14  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n2 -> n15  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
n2 -> n16  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
n2 -> n17  [color=darkseagreen4, key=1, label=string, style=dashed];
n2 -> n18  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n5  [color=red, key=0, style=solid];
n4 -> n20  [color=red, key=0, style=solid];
n4 -> n21  [color=red, key=2, style=dotted];
n4 -> n22  [color=red, key=2, style=dotted];
n5 -> n6  [color=red, key=0, style=solid];
n5 -> n7  [color=red, key=0, style=solid];
n6 -> n20  [color=red, key=0, style=solid];
n6 -> n21  [color=red, key=2, style=dotted];
n6 -> n22  [color=red, key=2, style=dotted];
n7 -> n8  [color=red, key=0, style=solid];
n7 -> n9  [color=red, key=0, style=solid];
n8 -> n20  [color=red, key=0, style=solid];
n8 -> n21  [color=red, key=2, style=dotted];
n8 -> n22  [color=red, key=2, style=dotted];
n9 -> n10  [color=red, key=0, style=solid];
n9 -> n11  [color=red, key=0, style=solid];
n10 -> n20  [color=red, key=0, style=solid];
n10 -> n21  [color=red, key=2, style=dotted];
n10 -> n22  [color=red, key=2, style=dotted];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n13  [color=red, key=0, style=solid];
n12 -> n20  [color=red, key=0, style=solid];
n12 -> n21  [color=red, key=2, style=dotted];
n12 -> n22  [color=red, key=2, style=dotted];
n13 -> n14  [color=red, key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n23  [key=2, style=dotted];
n20 -> n2  [color=blue, key=0, style=bold];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d6  [color=green, key=2, style=dotted];
d8 -> d10  [color=green, key=1, label=expected, style=dashed];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [color=green, key=0, style=solid];
d9 -> d12  [key=2, style=dotted];
d11 -> d7  [color=blue, key=0, style=bold];
d27 -> d28  [color=green, key=0, style=solid];
d27 -> d30  [color=green, key=2, style=dotted];
d26 -> d27  [color=green, key=0, style=solid];
d26 -> d28  [color=darkseagreen4, key=1, label=expected, style=dashed];
d28 -> d6  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d30 -> d19  [color=darkorchid, key=3, label="Property variable Hangfire.Storage.IWriteOnlyTransaction Transaction", style=bold];
d40 -> d41  [color=green, key=0, style=solid];
d40 -> d6  [color=green, key=2, style=dotted];
d38 -> d40  [color=green, key=1, label=expected, style=dashed];
d38 -> d39  [key=0, style=solid];
d38 -> d42  [key=2, style=dotted];
d39 -> d40  [color=green, key=0, style=solid];
d39 -> d43  [key=2, style=dotted];
d41 -> d37  [color=blue, key=0, style=bold];
d45 -> d46  [color=green, key=0, style=solid];
d45 -> d47  [color=green, key=1, label=day, style=dashed];
d44 -> d45  [color=green, key=0, style=solid];
d46 -> d48  [color=green, key=1, label=expected, style=dashed];
d46 -> d47  [key=0, style=solid];
d46 -> d42  [key=2, style=dotted];
d47 -> d48  [color=green, key=0, style=solid];
d47 -> d50  [key=2, style=dotted];
d47 -> d20  [color=darkorchid, key=3, label="Property variable Hangfire.States.IState NewState", style=bold];
d48 -> d49  [color=green, key=0, style=solid];
d48 -> d6  [color=green, key=2, style=dotted];
d49 -> d44  [color=blue, key=0, style=bold];
d7 -> d8  [key=0, style=solid];
d3 -> d6  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d16 -> d6  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d22 -> d6  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d34 -> d6  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d56 -> d6  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d65 -> d6  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d71 -> d6  [key=2, style=dotted];
d71 -> d72  [key=0, style=solid];
d78 -> d6  [key=2, style=dotted];
d78 -> d79  [key=0, style=solid];
d86 -> d6  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d95 -> d6  [key=2, style=dotted];
d95 -> d96  [key=0, style=solid];
d101 -> d6  [key=2, style=dotted];
d101 -> d102  [key=0, style=solid];
d108 -> d6  [key=2, style=dotted];
d108 -> d109  [key=0, style=solid];
d116 -> d6  [key=2, style=dotted];
d116 -> d117  [key=0, style=solid];
d125 -> d6  [key=2, style=dotted];
d125 -> d126  [key=0, style=solid];
d135 -> d6  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d29 -> d25  [color=blue, key=0, style=bold];
d19 -> d20  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d20 -> d22  [color=darkseagreen4, key=1, label=expected, style=dashed];
d20 -> d21  [key=0, style=solid];
d1 -> d3  [color=darkseagreen4, key=1, label=expected, style=dashed];
d1 -> d2  [key=0, style=solid];
d2 -> d3  [key=0, style=solid];
d2 -> d5  [key=2, style=dotted];
d4 -> d0  [color=blue, key=0, style=bold];
d14 -> d16  [color=darkseagreen4, key=1, label=expected, style=dashed];
d14 -> d15  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d15 -> d18  [key=2, style=dotted];
d17 -> d13  [color=blue, key=0, style=bold];
d21 -> d22  [key=0, style=solid];
d21 -> d24  [key=2, style=dotted];
d23 -> d19  [color=blue, key=0, style=bold];
d32 -> d34  [color=darkseagreen4, key=1, label=expected, style=dashed];
d32 -> d33  [key=0, style=solid];
d33 -> d34  [key=0, style=solid];
d33 -> d36  [key=2, style=dotted];
d35 -> d31  [color=blue, key=0, style=bold];
d54 -> d56  [color=darkseagreen4, key=1, label=expected, style=dashed];
d54 -> d42  [key=2, style=dotted];
d54 -> d55  [key=0, style=solid];
d55 -> d56  [key=0, style=solid];
d55 -> d58  [key=2, style=dotted];
d57 -> d51  [color=blue, key=0, style=bold];
d63 -> d65  [color=darkseagreen4, key=1, label=expected, style=dashed];
d63 -> d42  [key=2, style=dotted];
d63 -> d64  [key=0, style=solid];
d64 -> d65  [key=0, style=solid];
d64 -> d67  [key=2, style=dotted];
d66 -> d59  [color=blue, key=0, style=bold];
d69 -> d71  [color=darkseagreen4, key=1, label=expected, style=dashed];
d69 -> d70  [key=0, style=solid];
d70 -> d71  [key=0, style=solid];
d70 -> d73  [key=2, style=dotted];
d72 -> d68  [color=blue, key=0, style=bold];
d76 -> d78  [color=darkseagreen4, key=1, label=expected, style=dashed];
d76 -> d42  [key=2, style=dotted];
d76 -> d77  [key=0, style=solid];
d77 -> d78  [key=0, style=solid];
d77 -> d80  [key=2, style=dotted];
d79 -> d74  [color=blue, key=0, style=bold];
d84 -> d86  [color=darkseagreen4, key=1, label=expected, style=dashed];
d84 -> d42  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d85 -> d86  [key=0, style=solid];
d85 -> d88  [key=2, style=dotted];
d87 -> d81  [color=blue, key=0, style=bold];
d93 -> d95  [color=darkseagreen4, key=1, label=expected, style=dashed];
d93 -> d42  [key=2, style=dotted];
d93 -> d94  [key=0, style=solid];
d94 -> d95  [key=0, style=solid];
d94 -> d97  [key=2, style=dotted];
d96 -> d89  [color=blue, key=0, style=bold];
d99 -> d101  [color=darkseagreen4, key=1, label=expected, style=dashed];
d99 -> d100  [key=0, style=solid];
d100 -> d101  [key=0, style=solid];
d100 -> d103  [key=2, style=dotted];
d102 -> d98  [color=blue, key=0, style=bold];
d106 -> d108  [color=darkseagreen4, key=1, label=expected, style=dashed];
d106 -> d42  [key=2, style=dotted];
d106 -> d107  [key=0, style=solid];
d107 -> d108  [key=0, style=solid];
d107 -> d110  [key=2, style=dotted];
d109 -> d104  [color=blue, key=0, style=bold];
d114 -> d116  [color=darkseagreen4, key=1, label=expected, style=dashed];
d114 -> d42  [key=2, style=dotted];
d114 -> d115  [key=0, style=solid];
d115 -> d116  [key=0, style=solid];
d115 -> d118  [key=2, style=dotted];
d117 -> d111  [color=blue, key=0, style=bold];
d123 -> d125  [color=darkseagreen4, key=1, label=expected, style=dashed];
d123 -> d42  [key=2, style=dotted];
d123 -> d124  [key=0, style=solid];
d124 -> d125  [key=0, style=solid];
d124 -> d127  [key=2, style=dotted];
d126 -> d119  [color=blue, key=0, style=bold];
d133 -> d135  [color=darkseagreen4, key=1, label=expected, style=dashed];
d133 -> d42  [key=2, style=dotted];
d133 -> d134  [key=0, style=solid];
d134 -> d135  [key=0, style=solid];
d134 -> d137  [key=2, style=dotted];
d136 -> d128  [color=blue, key=0, style=bold];
d0 -> d1  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d52 -> d54  [color=darkseagreen4, key=1, label=day, style=dashed];
d52 -> d55  [color=darkseagreen4, key=1, label=day, style=dashed];
d52 -> d53  [key=0, style=solid];
d53 -> d54  [key=0, style=solid];
d53 -> d55  [color=darkseagreen4, key=1, label=hour, style=dashed];
d51 -> d52  [key=0, style=solid];
d60 -> d63  [color=darkseagreen4, key=1, label=day, style=dashed];
d60 -> d64  [color=darkseagreen4, key=1, label=day, style=dashed];
d60 -> d61  [key=0, style=solid];
d61 -> d63  [color=darkseagreen4, key=1, label=hour, style=dashed];
d61 -> d64  [color=darkseagreen4, key=1, label=hour, style=dashed];
d61 -> d62  [key=0, style=solid];
d62 -> d63  [key=0, style=solid];
d62 -> d64  [color=darkseagreen4, key=1, label=minute, style=dashed];
d59 -> d60  [key=0, style=solid];
d68 -> d69  [key=0, style=solid];
d75 -> d76  [key=0, style=solid];
d75 -> d77  [color=darkseagreen4, key=1, label=day, style=dashed];
d74 -> d75  [key=0, style=solid];
d82 -> d84  [color=darkseagreen4, key=1, label=day, style=dashed];
d82 -> d85  [color=darkseagreen4, key=1, label=day, style=dashed];
d82 -> d83  [key=0, style=solid];
d83 -> d84  [key=0, style=solid];
d83 -> d85  [color=darkseagreen4, key=1, label=hour, style=dashed];
d81 -> d82  [key=0, style=solid];
d90 -> d93  [color=darkseagreen4, key=1, label=day, style=dashed];
d90 -> d94  [color=darkseagreen4, key=1, label=day, style=dashed];
d90 -> d91  [key=0, style=solid];
d91 -> d93  [color=darkseagreen4, key=1, label=hour, style=dashed];
d91 -> d94  [color=darkseagreen4, key=1, label=hour, style=dashed];
d91 -> d92  [key=0, style=solid];
d92 -> d93  [key=0, style=solid];
d92 -> d94  [color=darkseagreen4, key=1, label=minute, style=dashed];
d89 -> d90  [key=0, style=solid];
d98 -> d99  [key=0, style=solid];
d105 -> d106  [key=0, style=solid];
d105 -> d107  [color=darkseagreen4, key=1, label=month, style=dashed];
d104 -> d105  [key=0, style=solid];
d112 -> d114  [color=darkseagreen4, key=1, label=month, style=dashed];
d112 -> d115  [color=darkseagreen4, key=1, label=month, style=dashed];
d112 -> d113  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d113 -> d115  [color=darkseagreen4, key=1, label=day, style=dashed];
d111 -> d112  [key=0, style=solid];
d120 -> d123  [color=darkseagreen4, key=1, label=month, style=dashed];
d120 -> d124  [color=darkseagreen4, key=1, label=month, style=dashed];
d120 -> d121  [key=0, style=solid];
d121 -> d123  [color=darkseagreen4, key=1, label=day, style=dashed];
d121 -> d124  [color=darkseagreen4, key=1, label=day, style=dashed];
d121 -> d122  [key=0, style=solid];
d122 -> d123  [key=0, style=solid];
d122 -> d124  [color=darkseagreen4, key=1, label=hour, style=dashed];
d119 -> d120  [key=0, style=solid];
d129 -> d133  [color=darkseagreen4, key=1, label=month, style=dashed];
d129 -> d134  [color=darkseagreen4, key=1, label=month, style=dashed];
d129 -> d130  [key=0, style=solid];
d130 -> d133  [color=darkseagreen4, key=1, label=day, style=dashed];
d130 -> d134  [color=darkseagreen4, key=1, label=day, style=dashed];
d130 -> d131  [key=0, style=solid];
d131 -> d133  [color=darkseagreen4, key=1, label=hour, style=dashed];
d131 -> d134  [color=darkseagreen4, key=1, label=hour, style=dashed];
d131 -> d132  [key=0, style=solid];
d132 -> d133  [key=0, style=solid];
d132 -> d134  [color=darkseagreen4, key=1, label=minute, style=dashed];
d128 -> d129  [key=0, style=solid];
m0_7 -> m0_8  [color=red, key=0, style=solid];
m0_8 -> m0_9  [color=red, key=0, style=solid];
m0_8 -> m0_10  [color=red, key=2, style=dotted];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=red, key=0, style=solid];
m0_0 -> m0_2  [color=red, key=1, label=IServiceScope, style=dashed];
m0_0 -> m0_3  [color=red, key=1, label=IServiceScope, style=dashed];
m0_1 -> m0_2  [color=red, key=0, style=solid];
m0_1 -> m0_3  [color=red, key=0, style=solid];
m0_2 -> m0_4  [color=red, key=0, style=solid];
m0_2 -> n21  [color=red, key=2, style=dotted];
m0_2 -> m0_6  [color=red, key=2, style=dotted];
m0_3 -> m0_4  [color=red, key=0, style=solid];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [color=red, key=0, style=solid];
m0_12 -> m0_13  [color=red, key=0, style=solid];
m0_12 -> m0_14  [color=red, key=2, style=dotted];
m0_13 -> m0_11  [color=blue, key=0, style=bold];
m0_15 -> m0_3  [color=red, key=1, label="Hangfire.AspNetCore.AspNetCoreJobActivatorScope", style=dashed];
m0_15 -> m0_8  [color=red, key=1, label="Hangfire.AspNetCore.AspNetCoreJobActivatorScope", style=dashed];
m0_15 -> m0_12  [color=red, key=1, label="Hangfire.AspNetCore.AspNetCoreJobActivatorScope", style=dashed];
m1_7 -> m1_8  [color=red, key=0, style=solid];
m1_8 -> m1_9  [color=red, key=0, style=solid];
m1_8 -> m1_10  [color=red, key=2, style=dotted];
m1_8 -> m1_11  [color=red, key=2, style=dotted];
m1_9 -> m1_7  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_0 -> m1_2  [color=red, key=1, label=ILoggerFactory, style=dashed];
m1_0 -> m1_3  [color=red, key=1, label=ILoggerFactory, style=dashed];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m1_1 -> m1_3  [color=red, key=0, style=solid];
m1_2 -> m1_4  [color=red, key=0, style=solid];
m1_2 -> n21  [color=red, key=2, style=dotted];
m1_2 -> m1_6  [color=red, key=2, style=dotted];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_12 -> m1_3  [color=red, key=1, label="Hangfire.AspNetCore.AspNetCoreLogProvider", style=dashed];
m1_12 -> m1_8  [color=red, key=1, label="Hangfire.AspNetCore.AspNetCoreLogProvider", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [color=blue, key=0, style=bold];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerProcess", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerProcess", style=dashed];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_11  [key=2, style=dotted];
m4_4 -> m4_12  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_8  [key=0, style=solid];
m4_2 -> n21  [key=2, style=dotted];
m4_2 -> m4_10  [key=2, style=dotted];
m4_8 -> m4_0  [color=blue, key=0, style=bold];
m4_32 -> m4_14  [color=darkorchid, key=3, label="Parameter variable int i", style=bold];
m4_32 -> m4_38  [key=0, style=solid];
m4_32 -> m4_40  [color=darkorchid, key=3, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel", style=bold];
m4_32 -> m4_42  [color=darkorchid, key=3, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel", style=bold];
m4_32 -> m4_44  [color=darkorchid, key=3, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel", style=bold];
m4_32 -> m4_45  [color=darkorchid, key=3, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel", style=bold];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_41  [key=0, style=solid];
m4_38 -> m4_43  [key=0, style=solid];
m4_40 -> m4_46  [key=0, style=solid];
m4_42 -> m4_46  [key=0, style=solid];
m4_44 -> m4_46  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_46 -> m4_32  [color=blue, key=0, style=bold];
m4_13 -> m4_26  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_13 -> m4_27  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_16  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_26 -> m4_27  [color=green, key=0, style=solid];
m4_26 -> m4_34  [color=green, key=2, style=dotted];
m4_23 -> m4_26  [color=green, key=1, label=nextTry, style=dashed];
m4_23 -> m4_25  [color=green, key=1, label=nextTry, style=dashed];
m4_23 -> m4_36  [color=green, key=1, label=nextTry, style=dashed];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_31  [key=2, style=dotted];
m4_25 -> m4_26  [color=green, key=0, style=solid];
m4_25 -> m4_33  [color=green, key=2, style=dotted];
m4_25 -> m4_35  [color=green, key=1, label="lambda expression", style=dashed];
m4_27 -> m4_28  [color=green, key=0, style=solid];
m4_27 -> m4_29  [color=green, key=0, style=solid];
m4_28 -> m4_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_28 -> m4_15  [key=0, style=solid];
m4_14 -> m4_25  [color=green, key=1, label=i, style=dashed];
m4_14 -> m4_36  [color=green, key=1, label=i, style=dashed];
m4_14 -> m4_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_14 -> m4_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_14 -> m4_14  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_14 -> m4_24  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_24 -> m4_32  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_30  [key=2, style=dotted];
m4_21 -> m4_23  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_15 -> m4_29  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_17 -> m4_29  [key=0, style=solid];
m4_19 -> m4_29  [key=0, style=solid];
m4_22 -> m4_29  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_29 -> m4_13  [color=blue, key=0, style=bold];
m4_47 -> m4_48  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_50  [key=2, style=dotted];
m4_49 -> m4_47  [color=blue, key=0, style=bold];
m4_35 -> m4_36  [color=green, key=0, style=solid];
m4_36 -> m4_37  [color=green, key=0, style=solid];
m4_37 -> m4_35  [color=blue, key=0, style=bold];
m4_51 -> m4_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_51 -> m4_52  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_61  [key=2, style=dotted];
m4_54 -> m4_62  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_59  [key=2, style=dotted];
m4_53 -> m4_60  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_56  [key=2, style=dotted];
m4_52 -> m4_57  [key=2, style=dotted];
m4_52 -> m4_58  [key=2, style=dotted];
m4_55 -> m4_51  [color=blue, key=0, style=bold];
m4_63 -> m4_25  [color=green, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_36  [color=green, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_23  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_3  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_4  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_5  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_6  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_7  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_15  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_16  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_21  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_48  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_63 -> m4_54  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m4_64 -> m4_36  [color=green, key=1, label=i, style=dashed];
m4_65 -> m4_36  [color=green, key=1, label=nextTry, style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [color=red, key=0, style=solid];
m5_1 -> m5_109  [key=2, style=dotted];
m5_2 -> m5_3  [color=red, key=0, style=solid];
m5_2 -> m5_110  [color=red, key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_111  [key=2, style=dotted];
m5_4 -> m5_112  [key=2, style=dotted];
m5_4 -> m5_11  [color=darkseagreen4, key=1, label=from, style=dashed];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_111  [key=2, style=dotted];
m5_5 -> m5_112  [key=2, style=dotted];
m5_5 -> m5_11  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_114  [key=2, style=dotted];
m5_11 -> m5_115  [key=2, style=dotted];
m5_11 -> m5_40  [color=darkseagreen4, key=1, label=pager, style=dashed];
m5_11 -> m5_102  [color=darkseagreen4, key=1, label=pager, style=dashed];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_18  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m5_6 -> m5_24  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m5_6 -> m5_52  [color=red, key=1, label=jobIds, style=dashed];
m5_6 -> m5_6  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.List<string> jobIds", style=bold];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_40  [color=darkseagreen4, key=1, label=pager, style=dashed];
m5_7 -> m5_102  [color=darkseagreen4, key=1, label=pager, style=dashed];
m5_7 -> m5_6  [color=darkorchid, key=3, label="Local variable Hangfire.Dashboard.Pager pager", style=bold];
m5_18 -> m5_19  [color=red, key=0, style=solid];
m5_18 -> m5_24  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_104  [color=red, key=0, style=solid];
m5_52 -> m5_53  [color=red, key=0, style=solid];
m5_52 -> m5_101  [color=red, key=0, style=solid];
m5_52 -> m5_57  [color=red, key=1, label=jobId, style=dashed];
m5_52 -> m5_58  [color=red, key=1, label=jobId, style=dashed];
m5_52 -> m5_64  [color=red, key=1, label=jobId, style=dashed];
m5_52 -> m5_66  [color=red, key=1, label=jobId, style=dashed];
m5_52 -> m5_73  [color=red, key=1, label=jobId, style=dashed];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_113  [key=2, style=dotted];
m5_40 -> m5_41  [color=red, key=0, style=solid];
m5_40 -> m5_120  [key=2, style=dotted];
m5_40 -> m5_118  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_130  [key=2, style=dotted];
m5_102 -> m5_118  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m5_9 -> m5_12  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_13  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_116  [key=2, style=dotted];
m5_12 -> m5_18  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m5_12 -> m5_24  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m5_12 -> m5_52  [color=red, key=1, label=jobIds, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_109  [key=2, style=dotted];
m5_14 -> m5_15  [color=red, key=0, style=solid];
m5_14 -> m5_117  [key=2, style=dotted];
m5_14 -> m5_118  [key=2, style=dotted];
m5_15 -> m5_16  [color=red, key=0, style=solid];
m5_15 -> m5_109  [color=red, key=2, style=dotted];
m5_16 -> m5_17  [color=red, key=0, style=solid];
m5_16 -> m5_118  [color=red, key=2, style=dotted];
m5_17 -> m5_18  [color=red, key=0, style=solid];
m5_17 -> m5_109  [color=red, key=2, style=dotted];
m5_19 -> m5_20  [color=red, key=0, style=solid];
m5_19 -> m5_109  [color=red, key=2, style=dotted];
m5_20 -> m5_21  [color=red, key=0, style=solid];
m5_20 -> m5_118  [color=red, key=2, style=dotted];
m5_21 -> m5_22  [color=red, key=0, style=solid];
m5_21 -> m5_109  [color=red, key=2, style=dotted];
m5_22 -> m5_23  [color=red, key=0, style=solid];
m5_22 -> m5_118  [color=red, key=2, style=dotted];
m5_23 -> m5_107  [color=red, key=0, style=solid];
m5_23 -> m5_109  [color=red, key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_109  [key=2, style=dotted];
m5_104 -> m5_105  [color=red, key=0, style=solid];
m5_104 -> m5_109  [color=red, key=2, style=dotted];
m5_26 -> m5_27  [color=red, key=0, style=solid];
m5_26 -> m5_119  [key=2, style=dotted];
m5_26 -> m5_118  [key=2, style=dotted];
m5_27 -> m5_28  [color=red, key=0, style=solid];
m5_27 -> m5_109  [color=red, key=2, style=dotted];
m5_28 -> m5_29  [color=red, key=0, style=solid];
m5_28 -> m5_118  [color=red, key=2, style=dotted];
m5_29 -> m5_30  [color=red, key=0, style=solid];
m5_29 -> m5_109  [color=red, key=2, style=dotted];
m5_30 -> m5_31  [color=red, key=0, style=solid];
m5_30 -> m5_118  [color=red, key=2, style=dotted];
m5_31 -> m5_32  [color=red, key=0, style=solid];
m5_31 -> m5_109  [color=red, key=2, style=dotted];
m5_32 -> m5_33  [color=red, key=0, style=solid];
m5_32 -> m5_119  [key=2, style=dotted];
m5_32 -> m5_118  [key=2, style=dotted];
m5_33 -> m5_34  [color=red, key=0, style=solid];
m5_33 -> m5_109  [color=red, key=2, style=dotted];
m5_34 -> m5_35  [color=red, key=0, style=solid];
m5_34 -> m5_118  [color=red, key=2, style=dotted];
m5_35 -> m5_36  [color=red, key=0, style=solid];
m5_35 -> m5_109  [color=red, key=2, style=dotted];
m5_36 -> m5_37  [color=red, key=0, style=solid];
m5_36 -> m5_118  [color=red, key=2, style=dotted];
m5_37 -> m5_38  [color=red, key=0, style=solid];
m5_37 -> m5_109  [color=red, key=2, style=dotted];
m5_38 -> m5_39  [color=red, key=0, style=solid];
m5_38 -> m5_118  [color=red, key=2, style=dotted];
m5_39 -> m5_40  [color=red, key=0, style=solid];
m5_39 -> m5_109  [color=red, key=2, style=dotted];
m5_41 -> m5_42  [color=red, key=0, style=solid];
m5_41 -> m5_109  [color=red, key=2, style=dotted];
m5_42 -> m5_43  [color=red, key=0, style=solid];
m5_42 -> m5_118  [color=red, key=2, style=dotted];
m5_43 -> m5_44  [color=red, key=0, style=solid];
m5_43 -> m5_109  [color=red, key=2, style=dotted];
m5_44 -> m5_45  [color=red, key=0, style=solid];
m5_44 -> m5_118  [color=red, key=2, style=dotted];
m5_45 -> m5_46  [color=red, key=0, style=solid];
m5_45 -> m5_109  [color=red, key=2, style=dotted];
m5_46 -> m5_47  [color=red, key=0, style=solid];
m5_46 -> m5_118  [color=red, key=2, style=dotted];
m5_47 -> m5_48  [color=red, key=0, style=solid];
m5_47 -> m5_109  [color=red, key=2, style=dotted];
m5_48 -> m5_49  [color=red, key=0, style=solid];
m5_48 -> m5_118  [color=red, key=2, style=dotted];
m5_49 -> m5_50  [color=red, key=0, style=solid];
m5_49 -> m5_109  [color=red, key=2, style=dotted];
m5_50 -> m5_51  [color=red, key=0, style=solid];
m5_50 -> m5_118  [color=red, key=2, style=dotted];
m5_51 -> m5_52  [color=red, key=0, style=solid];
m5_51 -> m5_109  [color=red, key=2, style=dotted];
m5_53 -> m5_54  [color=red, key=0, style=solid];
m5_101 -> m5_102  [color=red, key=0, style=solid];
m5_101 -> m5_109  [color=red, key=2, style=dotted];
m5_57 -> m5_58  [color=red, key=0, style=solid];
m5_57 -> m5_121  [color=red, key=2, style=dotted];
m5_57 -> m5_62  [color=red, key=1, label=jobData, style=dashed];
m5_57 -> m5_68  [color=red, key=1, label=jobData, style=dashed];
m5_57 -> m5_73  [color=red, key=1, label=jobData, style=dashed];
m5_57 -> m5_98  [color=red, key=1, label=jobData, style=dashed];
m5_58 -> m5_59  [color=red, key=0, style=solid];
m5_58 -> m5_122  [color=red, key=2, style=dotted];
m5_58 -> m5_60  [color=red, key=1, label=stateData, style=dashed];
m5_58 -> m5_76  [color=red, key=1, label=stateData, style=dashed];
m5_58 -> m5_78  [color=red, key=1, label=stateData, style=dashed];
m5_58 -> m5_87  [color=red, key=1, label=stateData, style=dashed];
m5_64 -> m5_65  [color=red, key=0, style=solid];
m5_64 -> m5_118  [color=red, key=2, style=dotted];
m5_66 -> m5_67  [color=red, key=0, style=solid];
m5_66 -> m5_123  [color=red, key=2, style=dotted];
m5_66 -> m5_118  [color=red, key=2, style=dotted];
m5_73 -> m5_74  [color=red, key=0, style=solid];
m5_73 -> m5_124  [color=red, key=2, style=dotted];
m5_73 -> m5_118  [color=red, key=2, style=dotted];
m5_54 -> m5_55  [color=red, key=0, style=solid];
m5_55 -> m5_56  [color=red, key=0, style=solid];
m5_55 -> m5_85  [color=red, key=1, label=parentStateData, style=dashed];
m5_55 -> m5_89  [color=red, key=1, label=parentStateData, style=dashed];
m5_55 -> m5_91  [color=red, key=1, label=parentStateData, style=dashed];
m5_55 -> m5_6  [color=red, key=3, label="Local variable Hangfire.Storage.StateData parentStateData", style=bold];
m5_56 -> m5_57  [color=red, key=0, style=solid];
m5_56 -> m5_113  [color=red, key=2, style=dotted];
m5_56 -> m5_58  [color=red, key=1, label=connection, style=dashed];
m5_56 -> m5_60  [color=red, key=1, label=connection, style=dashed];
m5_85 -> m5_86  [color=red, key=0, style=solid];
m5_85 -> m5_93  [color=red, key=0, style=solid];
m5_89 -> m5_90  [color=red, key=0, style=solid];
m5_89 -> m5_128  [color=red, key=2, style=dotted];
m5_89 -> m5_118  [color=red, key=2, style=dotted];
m5_91 -> m5_92  [color=red, key=0, style=solid];
m5_91 -> m5_118  [color=red, key=2, style=dotted];
m5_60 -> m5_61  [color=red, key=0, style=solid];
m5_60 -> m5_122  [color=red, key=2, style=dotted];
m5_60 -> m5_85  [color=red, key=1, label=parentStateData, style=dashed];
m5_60 -> m5_89  [color=red, key=1, label=parentStateData, style=dashed];
m5_60 -> m5_91  [color=red, key=1, label=parentStateData, style=dashed];
m5_62 -> m5_63  [color=red, key=0, style=solid];
m5_62 -> m5_118  [color=red, key=2, style=dotted];
m5_68 -> m5_69  [color=red, key=0, style=solid];
m5_68 -> m5_72  [color=red, key=0, style=solid];
m5_98 -> m5_99  [color=red, key=0, style=solid];
m5_98 -> m5_129  [color=red, key=2, style=dotted];
m5_98 -> m5_118  [color=red, key=2, style=dotted];
m5_59 -> m5_60  [color=red, key=0, style=solid];
m5_59 -> m5_61  [color=red, key=0, style=solid];
m5_76 -> m5_77  [color=red, key=0, style=solid];
m5_76 -> m5_80  [color=red, key=0, style=solid];
m5_76 -> m5_125  [color=red, key=2, style=dotted];
m5_76 -> m5_126  [color=red, key=2, style=dotted];
m5_78 -> m5_79  [color=red, key=0, style=solid];
m5_78 -> m5_118  [color=red, key=2, style=dotted];
m5_87 -> m5_88  [color=red, key=0, style=solid];
m5_87 -> m5_127  [color=red, key=2, style=dotted];
m5_87 -> m5_118  [color=red, key=2, style=dotted];
m5_61 -> m5_62  [color=red, key=0, style=solid];
m5_61 -> m5_109  [color=red, key=2, style=dotted];
m5_63 -> m5_64  [color=red, key=0, style=solid];
m5_63 -> m5_109  [color=red, key=2, style=dotted];
m5_65 -> m5_66  [color=red, key=0, style=solid];
m5_65 -> m5_109  [color=red, key=2, style=dotted];
m5_67 -> m5_68  [color=red, key=0, style=solid];
m5_67 -> m5_109  [color=red, key=2, style=dotted];
m5_69 -> m5_70  [color=red, key=0, style=solid];
m5_69 -> m5_109  [color=red, key=2, style=dotted];
m5_72 -> m5_73  [color=red, key=0, style=solid];
m5_72 -> m5_109  [color=red, key=2, style=dotted];
m5_70 -> m5_71  [color=red, key=0, style=solid];
m5_70 -> m5_118  [color=red, key=2, style=dotted];
m5_71 -> m5_100  [color=red, key=0, style=solid];
m5_71 -> m5_109  [color=red, key=2, style=dotted];
m5_74 -> m5_75  [color=red, key=0, style=solid];
m5_74 -> m5_109  [color=red, key=2, style=dotted];
m5_75 -> m5_76  [color=red, key=0, style=solid];
m5_75 -> m5_109  [color=red, key=2, style=dotted];
m5_77 -> m5_78  [color=red, key=0, style=solid];
m5_77 -> m5_109  [color=red, key=2, style=dotted];
m5_80 -> m5_81  [color=red, key=0, style=solid];
m5_80 -> m5_109  [color=red, key=2, style=dotted];
m5_79 -> m5_83  [color=red, key=0, style=solid];
m5_79 -> m5_109  [color=red, key=2, style=dotted];
m5_81 -> m5_82  [color=red, key=0, style=solid];
m5_81 -> m5_118  [color=red, key=2, style=dotted];
m5_82 -> m5_83  [color=red, key=0, style=solid];
m5_82 -> m5_109  [color=red, key=2, style=dotted];
m5_83 -> m5_84  [color=red, key=0, style=solid];
m5_83 -> m5_109  [color=red, key=2, style=dotted];
m5_84 -> m5_85  [color=red, key=0, style=solid];
m5_84 -> m5_109  [color=red, key=2, style=dotted];
m5_86 -> m5_87  [color=red, key=0, style=solid];
m5_86 -> m5_109  [color=red, key=2, style=dotted];
m5_93 -> m5_94  [color=red, key=0, style=solid];
m5_93 -> m5_109  [color=red, key=2, style=dotted];
m5_88 -> m5_89  [color=red, key=0, style=solid];
m5_88 -> m5_109  [color=red, key=2, style=dotted];
m5_90 -> m5_91  [color=red, key=0, style=solid];
m5_90 -> m5_109  [color=red, key=2, style=dotted];
m5_92 -> m5_96  [color=red, key=0, style=solid];
m5_92 -> m5_109  [color=red, key=2, style=dotted];
m5_94 -> m5_95  [color=red, key=0, style=solid];
m5_94 -> m5_118  [color=red, key=2, style=dotted];
m5_95 -> m5_96  [color=red, key=0, style=solid];
m5_95 -> m5_109  [color=red, key=2, style=dotted];
m5_96 -> m5_97  [color=red, key=0, style=solid];
m5_96 -> m5_109  [color=red, key=2, style=dotted];
m5_97 -> m5_98  [color=red, key=0, style=solid];
m5_97 -> m5_109  [color=red, key=2, style=dotted];
m5_99 -> m5_100  [color=red, key=0, style=solid];
m5_99 -> m5_109  [color=red, key=2, style=dotted];
m5_100 -> m5_52  [color=red, key=0, style=solid];
m5_100 -> m5_109  [color=red, key=2, style=dotted];
m5_103 -> m5_107  [key=0, style=solid];
m5_103 -> m5_109  [key=2, style=dotted];
m5_105 -> m5_106  [color=red, key=0, style=solid];
m5_105 -> m5_118  [color=red, key=2, style=dotted];
m5_106 -> m5_107  [color=red, key=0, style=solid];
m5_106 -> m5_109  [color=red, key=2, style=dotted];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_109  [key=2, style=dotted];
m5_108 -> m5_0  [color=blue, key=0, style=bold];
m5_131 -> m5_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_2  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_13  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_14  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_15  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_16  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_17  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_19  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_20  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_21  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_22  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_23  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_27  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_28  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_29  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_30  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_31  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_33  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_34  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_35  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_36  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_37  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_38  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_39  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_41  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_42  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_43  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_44  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_45  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_46  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_47  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_48  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_49  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_50  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_51  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_56  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_61  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_62  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_63  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_64  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_65  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_66  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_67  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_69  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_70  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_71  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_72  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_73  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_74  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_75  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_77  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_78  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_79  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_80  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_81  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_82  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_83  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_84  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_86  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_87  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_88  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_89  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_90  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_91  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_92  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_93  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_94  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_95  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_96  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_97  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_98  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_99  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_100  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_101  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_102  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_103  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_104  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_105  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_106  [color=red, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m5_131 -> m5_107  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.AwaitingJobsPage", style=dashed];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_0 -> m6_2  [color=green, key=1, label=string, style=dashed];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_4  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_1 -> m6_3  [color=green, key=0, style=solid];
m6_2 -> m6_6  [color=green, key=0, style=solid];
m6_2 -> n21  [color=green, key=2, style=dotted];
m6_2 -> m6_8  [color=green, key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_0  [color=blue, key=0, style=bold];
m6_9 -> m6_3  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJob", style=dashed];
m6_9 -> m6_4  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJob", style=dashed];
m6_9 -> m6_5  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJob", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_9  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_10  [key=2, style=dotted];
m8_6 -> m8_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_11  [key=2, style=dotted];
m8_7 -> m8_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_8 -> m8_4  [color=blue, key=0, style=bold];
m8_76 -> m8_77  [key=0, style=solid];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_9  [key=2, style=dotted];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_81  [key=2, style=dotted];
m8_78 -> m8_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_11  [key=2, style=dotted];
m8_79 -> m8_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_80 -> m8_76  [color=blue, key=0, style=bold];
m8_125 -> m8_126  [key=0, style=solid];
m8_126 -> m8_127  [key=0, style=solid];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_131  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_132  [key=2, style=dotted];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_133  [key=2, style=dotted];
m8_130 -> m8_125  [color=blue, key=0, style=bold];
m8_49 -> m8_50  [key=0, style=solid];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_9  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_54  [key=2, style=dotted];
m8_51 -> m8_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_11  [key=2, style=dotted];
m8_52 -> m8_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_53 -> m8_49  [color=blue, key=0, style=bold];
m8_116 -> m8_117  [key=0, style=solid];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_9  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_121  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_11  [key=2, style=dotted];
m8_119 -> m8_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_120 -> m8_116  [color=blue, key=0, style=bold];
m8_98 -> m8_99  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_9  [key=2, style=dotted];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_103  [key=2, style=dotted];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_11  [key=2, style=dotted];
m8_101 -> m8_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_102 -> m8_98  [color=blue, key=0, style=bold];
m8_88 -> m8_89  [key=0, style=solid];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_9  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_93  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_11  [key=2, style=dotted];
m8_91 -> m8_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_92 -> m8_88  [color=blue, key=0, style=bold];
m8_15 -> m8_139  [key=0, style=solid];
m8_139 -> m8_15  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_136 -> m8_137  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=2, style=dotted];
m8_14 -> m8_12  [color=blue, key=0, style=bold];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_19  [key=2, style=dotted];
m8_17 -> m8_20  [key=2, style=dotted];
m8_18 -> m8_16  [color=blue, key=0, style=bold];
m8_27 -> m8_28  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_15  [key=2, style=dotted];
m8_29 -> m8_27  [color=blue, key=0, style=bold];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_19  [key=2, style=dotted];
m8_31 -> m8_20  [key=2, style=dotted];
m8_32 -> m8_30  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_15  [key=2, style=dotted];
m8_42 -> m8_40  [color=blue, key=0, style=bold];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_19  [key=2, style=dotted];
m8_44 -> m8_20  [key=2, style=dotted];
m8_44 -> m8_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_45 -> m8_43  [color=blue, key=0, style=bold];
m8_46 -> m8_47  [key=0, style=solid];
m8_47 -> m8_48  [key=0, style=solid];
m8_48 -> m8_46  [color=blue, key=0, style=bold];
m8_55 -> m8_56  [key=0, style=solid];
m8_58 -> m8_59  [key=0, style=solid];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_15  [key=2, style=dotted];
m8_57 -> m8_55  [color=blue, key=0, style=bold];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_19  [key=2, style=dotted];
m8_59 -> m8_20  [key=2, style=dotted];
m8_60 -> m8_58  [color=blue, key=0, style=bold];
m8_67 -> m8_68  [key=0, style=solid];
m8_70 -> m8_71  [key=0, style=solid];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_15  [key=2, style=dotted];
m8_69 -> m8_67  [color=blue, key=0, style=bold];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_19  [key=2, style=dotted];
m8_71 -> m8_20  [key=2, style=dotted];
m8_71 -> m8_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_72 -> m8_70  [color=blue, key=0, style=bold];
m8_73 -> m8_74  [key=0, style=solid];
m8_74 -> m8_75  [key=0, style=solid];
m8_75 -> m8_73  [color=blue, key=0, style=bold];
m8_82 -> m8_83  [key=0, style=solid];
m8_85 -> m8_86  [key=0, style=solid];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_15  [key=2, style=dotted];
m8_84 -> m8_82  [color=blue, key=0, style=bold];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_19  [key=2, style=dotted];
m8_86 -> m8_20  [key=2, style=dotted];
m8_87 -> m8_85  [color=blue, key=0, style=bold];
m8_94 -> m8_95  [key=0, style=solid];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_19  [key=2, style=dotted];
m8_95 -> m8_97  [key=2, style=dotted];
m8_96 -> m8_94  [color=blue, key=0, style=bold];
m8_104 -> m8_105  [key=0, style=solid];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_19  [key=2, style=dotted];
m8_105 -> m8_97  [key=2, style=dotted];
m8_106 -> m8_104  [color=blue, key=0, style=bold];
m8_113 -> m8_114  [key=0, style=solid];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_19  [key=2, style=dotted];
m8_114 -> m8_97  [key=2, style=dotted];
m8_115 -> m8_113  [color=blue, key=0, style=bold];
m8_122 -> m8_123  [key=0, style=solid];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_19  [key=2, style=dotted];
m8_123 -> m8_97  [key=2, style=dotted];
m8_124 -> m8_122  [color=blue, key=0, style=bold];
m8_137 -> m8_138  [key=0, style=solid];
m8_138 -> m8_136  [color=blue, key=0, style=bold];
m8_107 -> m8_108  [key=0, style=solid];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_9  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_112  [key=2, style=dotted];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_11  [key=2, style=dotted];
m8_110 -> m8_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_111 -> m8_107  [color=blue, key=0, style=bold];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_9  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_26  [key=2, style=dotted];
m8_23 -> m8_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_11  [key=2, style=dotted];
m8_24 -> m8_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_25 -> m8_21  [color=blue, key=0, style=bold];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_9  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> n23  [key=2, style=dotted];
m8_63 -> m8_66  [key=2, style=dotted];
m8_63 -> m8_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_11  [key=2, style=dotted];
m8_64 -> m8_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_65 -> m8_61  [color=blue, key=0, style=bold];
m8_9 -> m8_134  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_135 -> m8_9  [color=blue, key=0, style=bold];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_9  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> n23  [key=2, style=dotted];
m8_35 -> m8_39  [key=2, style=dotted];
m8_35 -> m8_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_11  [key=2, style=dotted];
m8_36 -> m8_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_37 -> m8_33  [color=blue, key=0, style=bold];
m8_140 -> m8_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_99  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_108  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_110  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_119  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m8_140 -> m8_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_7  [key=2, style=dotted];
m9_5 -> m9_0  [color=blue, key=0, style=bold];
m9_11 -> m9_16  [key=0, style=solid];
m9_16 -> m9_11  [color=blue, key=0, style=bold];
m9_12 -> m9_13  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=2, style=dotted];
m9_10 -> m9_8  [color=blue, key=0, style=bold];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=2, style=dotted];
m9_14 -> m9_12  [color=blue, key=0, style=bold];
m9_17 -> m9_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobMock", style=dashed];
m9_17 -> m9_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobMock", style=dashed];
m9_17 -> m9_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobMock", style=dashed];
m9_17 -> m9_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobMock", style=dashed];
m9_17 -> m9_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobMock", style=dashed];
m10_46 -> m10_47  [key=0, style=solid];
m10_47 -> m10_13  [key=2, style=dotted];
m10_47 -> m10_37  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_50  [key=2, style=dotted];
m10_49 -> m10_46  [color=blue, key=0, style=bold];
m10_31 -> m10_32  [key=0, style=solid];
m10_32 -> m10_13  [key=2, style=dotted];
m10_32 -> m10_37  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_34  [color=darkseagreen4, key=1, label=checkedTimestamp, style=dashed];
m10_33 -> m10_38  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_39  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_40  [key=2, style=dotted];
m10_35 -> m10_41  [key=2, style=dotted];
m10_36 -> m10_31  [color=blue, key=0, style=bold];
m10_42 -> m10_43  [key=0, style=solid];
m10_43 -> m10_13  [key=2, style=dotted];
m10_43 -> m10_37  [key=2, style=dotted];
m10_43 -> m10_44  [key=0, style=solid];
m10_44 -> m10_38  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_45 -> m10_42  [color=blue, key=0, style=bold];
m10_51 -> m10_52  [color=green, key=0, style=solid];
m10_52 -> m10_53  [color=green, key=0, style=solid];
m10_52 -> m10_13  [color=green, key=2, style=dotted];
m10_52 -> m10_37  [color=green, key=2, style=dotted];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_38  [key=2, style=dotted];
m10_54 -> m10_51  [color=blue, key=0, style=bold];
m10_0 -> m10_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_6 -> m10_13  [key=2, style=dotted];
m10_6 -> m10_8  [key=0, style=solid];
m10_6 -> m10_12  [key=2, style=dotted];
m10_7 -> m10_13  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_14  [key=2, style=dotted];
m10_7 -> m10_15  [key=2, style=dotted];
m10_4 -> m10_6  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_9  [key=2, style=dotted];
m10_1 -> m10_7  [color=darkseagreen4, key=1, label=time, style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_3 -> m10_7  [key=0, style=solid];
m10_3 -> m10_10  [key=2, style=dotted];
m10_5 -> m10_7  [key=0, style=solid];
m10_5 -> m10_11  [key=2, style=dotted];
m10_2 -> m10_4  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_9  [key=2, style=dotted];
m10_8 -> m10_0  [color=blue, key=0, style=bold];
m10_55 -> m10_56  [key=0, style=solid];
m10_56 -> m10_13  [key=2, style=dotted];
m10_56 -> m10_37  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_50  [key=2, style=dotted];
m10_58 -> m10_55  [color=blue, key=0, style=bold];
m10_16 -> m10_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_16 -> m10_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_22 -> m10_13  [key=2, style=dotted];
m10_22 -> m10_24  [key=0, style=solid];
m10_22 -> m10_12  [key=2, style=dotted];
m10_23 -> m10_13  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_14  [key=2, style=dotted];
m10_23 -> m10_15  [key=2, style=dotted];
m10_23 -> m10_48  [color=darkorchid, key=3, label="Field variable Hangfire.BackgroundJobServerOptions _options", style=bold];
m10_20 -> m10_22  [key=0, style=solid];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_9  [key=2, style=dotted];
m10_17 -> m10_23  [color=darkseagreen4, key=1, label=time, style=dashed];
m10_17 -> m10_18  [key=0, style=solid];
m10_19 -> m10_23  [key=0, style=solid];
m10_19 -> m10_10  [key=2, style=dotted];
m10_21 -> m10_23  [key=0, style=solid];
m10_21 -> m10_11  [key=2, style=dotted];
m10_18 -> m10_20  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_9  [key=2, style=dotted];
m10_24 -> m10_16  [color=blue, key=0, style=bold];
m12_28 -> m12_30  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m12_28 -> m12_31  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m12_28 -> m12_29  [key=0, style=solid];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_34  [key=2, style=dotted];
m12_30 -> m12_28  [color=blue, key=0, style=bold];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_34  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_33  [key=2, style=dotted];
m12_29 -> m12_31  [key=2, style=dotted];
m12_32 -> m12_28  [color=blue, key=0, style=bold];
m12_32 -> m12_33  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_12  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_27  [key=2, style=dotted];
m12_38 -> m12_39  [color=green, key=0, style=solid];
m12_38 -> m12_54  [color=green, key=2, style=dotted];
m12_38 -> m12_41  [color=green, key=1, label=builder, style=dashed];
m12_38 -> m12_42  [color=green, key=1, label=builder, style=dashed];
m12_38 -> m12_43  [color=green, key=1, label=builder, style=dashed];
m12_38 -> m12_46  [color=green, key=1, label=builder, style=dashed];
m12_38 -> m12_47  [color=green, key=1, label=builder, style=dashed];
m12_38 -> m12_40  [key=2, style=dotted];
m12_37 -> m12_38  [color=green, key=0, style=solid];
m12_37 -> m12_51  [key=2, style=dotted];
m12_37 -> m12_52  [key=2, style=dotted];
m12_37 -> m12_53  [key=2, style=dotted];
m12_37 -> m12_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_37 -> m12_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_37 -> m12_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_37 -> m12_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_37 -> m12_40  [color=darkseagreen4, key=1, label=parts, style=dashed];
m12_37 -> m12_41  [color=darkseagreen4, key=1, label=parts, style=dashed];
m12_37 -> m12_45  [color=darkseagreen4, key=1, label=parts, style=dashed];
m12_37 -> m12_46  [color=darkseagreen4, key=1, label=parts, style=dashed];
m12_39 -> m12_40  [color=green, key=0, style=solid];
m12_39 -> m12_42  [color=green, key=0, style=solid];
m12_39 -> m12_41  [color=green, key=1, label=alias, style=dashed];
m12_39 -> m12_37  [color=blue, key=0, style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_56  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_44  [key=0, style=solid];
m12_42 -> m12_25  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_57  [key=2, style=dotted];
m12_43 -> m12_31  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_56  [key=2, style=dotted];
m12_47 -> m12_50  [key=0, style=solid];
m12_47 -> m12_58  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_40 -> m12_39  [color=green, key=0, style=solid];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_55  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_47  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m12_36 -> m12_49  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m12_36 -> m12_32  [color=blue, key=0, style=bold];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_44  [key=0, style=solid];
m12_45 -> m12_55  [key=2, style=dotted];
m12_45 -> m12_41  [color=blue, key=0, style=bold];
m12_44 -> m12_46  [color=darkseagreen4, key=1, label=alias, style=dashed];
m12_44 -> m12_47  [key=0, style=solid];
m12_44 -> m12_45  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_47  [color=blue, key=0, style=bold];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_26  [key=2, style=dotted];
m12_48 -> m12_50  [key=2, style=dotted];
m12_50 -> m12_35  [color=blue, key=0, style=bold];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_69  [color=blue, key=0, style=bold];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_58  [key=2, style=dotted];
m12_72 -> m12_76  [key=2, style=dotted];
m12_72 -> m12_74  [color=darkseagreen4, key=1, label=connection, style=dashed];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_25  [key=2, style=dotted];
m12_73 -> m12_75  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_73 -> m12_77  [key=2, style=dotted];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_59  [key=2, style=dotted];
m12_74 -> m12_60  [key=2, style=dotted];
m12_74 -> m12_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_31  [key=2, style=dotted];
m12_75 -> m12_14  [color=blue, key=0, style=bold];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_27  [key=2, style=dotted];
m12_77 -> m12_71  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_23  [key=2, style=dotted];
m12_21 -> m12_14  [key=2, style=dotted];
m12_21 -> m12_25  [key=2, style=dotted];
m12_21 -> m12_29  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_22 -> m12_20  [color=blue, key=0, style=bold];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_26  [key=2, style=dotted];
m12_22 -> m12_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_19 -> m12_416  [key=0, style=solid];
m12_57 -> m12_51  [color=blue, key=0, style=bold];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_25  [key=2, style=dotted];
m12_53 -> m12_55  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_25 -> m12_417  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_27  [key=2, style=dotted];
m12_417 -> m12_418  [key=0, style=solid];
m12_417 -> m12_419  [key=2, style=dotted];
m12_418 -> m12_25  [color=blue, key=0, style=bold];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_31  [key=2, style=dotted];
m12_58 -> m12_420  [key=0, style=solid];
m12_67 -> m12_68  [key=0, style=solid];
m12_376 -> m12_377  [key=0, style=solid];
m12_377 -> m12_378  [key=0, style=solid];
m12_377 -> m12_59  [key=2, style=dotted];
m12_377 -> m12_26  [key=2, style=dotted];
m12_377 -> m12_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_378 -> m12_379  [key=0, style=solid];
m12_378 -> m12_58  [key=2, style=dotted];
m12_378 -> m12_381  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_379 -> m12_380  [key=0, style=solid];
m12_379 -> m12_25  [key=2, style=dotted];
m12_379 -> m12_387  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_381 -> m12_382  [key=0, style=solid];
m12_381 -> m12_46  [key=2, style=dotted];
m12_381 -> m12_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_380 -> m12_381  [key=0, style=solid];
m12_380 -> m12_26  [key=2, style=dotted];
m12_380 -> m12_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_382 -> m12_376  [color=blue, key=0, style=bold];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_25  [key=2, style=dotted];
m12_33 -> m12_38  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_26  [key=2, style=dotted];
m12_34 -> m12_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_27  [key=2, style=dotted];
m12_170 -> m12_171  [key=0, style=solid];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_58  [key=2, style=dotted];
m12_171 -> m12_173  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_171 -> m12_176  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_58  [key=2, style=dotted];
m12_172 -> m12_174  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_172 -> m12_175  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_59  [key=2, style=dotted];
m12_173 -> m12_118  [key=2, style=dotted];
m12_173 -> m12_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_176 -> m12_177  [key=0, style=solid];
m12_176 -> m12_59  [key=2, style=dotted];
m12_176 -> m12_118  [key=2, style=dotted];
m12_176 -> m12_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_59  [key=2, style=dotted];
m12_174 -> m12_118  [key=2, style=dotted];
m12_174 -> m12_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_175 -> m12_176  [key=0, style=solid];
m12_175 -> m12_59  [key=2, style=dotted];
m12_175 -> m12_118  [key=2, style=dotted];
m12_175 -> m12_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_177 -> m12_178  [key=0, style=solid];
m12_177 -> m12_25  [key=2, style=dotted];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_31  [key=2, style=dotted];
m12_179 -> m12_170  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_9  [key=2, style=dotted];
m12_1 -> m12_5  [color=darkseagreen4, key=1, label=workerContext, style=dashed];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_10  [key=2, style=dotted];
m12_2 -> m12_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m12_2 -> m12_7  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m12_2 -> m12_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_2 -> m12_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_12  [key=2, style=dotted];
m12_5 -> m12_13  [key=2, style=dotted];
m12_5 -> m12_7  [color=green, key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_11  [key=2, style=dotted];
m12_4 -> m12_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_4 -> m12_12  [key=0, style=solid];
m12_4 -> n21  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_14  [key=2, style=dotted];
m12_6 -> m12_12  [key=0, style=solid];
m12_6 -> n21  [key=2, style=dotted];
m12_7 -> m12_8  [color=green, key=0, style=solid];
m12_7 -> m12_15  [key=2, style=dotted];
m12_8 -> m12_0  [color=blue, key=0, style=bold];
m12_8 -> m12_9  [key=0, style=solid];
m12_26 -> m12_24  [color=blue, key=0, style=bold];
m12_109 -> m12_110  [key=0, style=solid];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_58  [key=2, style=dotted];
m12_110 -> m12_113  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_58  [key=2, style=dotted];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_59  [key=2, style=dotted];
m12_113 -> m12_118  [key=2, style=dotted];
m12_113 -> m12_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_59  [key=2, style=dotted];
m12_112 -> m12_118  [key=2, style=dotted];
m12_112 -> m12_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_59  [key=2, style=dotted];
m12_114 -> m12_26  [key=2, style=dotted];
m12_114 -> m12_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_25  [key=2, style=dotted];
m12_115 -> m12_129  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_26  [key=2, style=dotted];
m12_116 -> m12_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_117 -> m12_109  [color=blue, key=0, style=bold];
m12_296 -> m12_297  [key=0, style=solid];
m12_297 -> m12_298  [key=0, style=solid];
m12_297 -> m12_58  [key=2, style=dotted];
m12_297 -> m12_300  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_298 -> m12_299  [key=0, style=solid];
m12_298 -> m12_261  [key=2, style=dotted];
m12_298 -> m12_300  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_298 -> m12_308  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_298 -> m12_311  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_300 -> m12_301  [key=0, style=solid];
m12_300 -> m12_59  [key=2, style=dotted];
m12_300 -> m12_138  [key=2, style=dotted];
m12_300 -> m12_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_300 -> m12_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_299 -> m12_300  [key=0, style=solid];
m12_299 -> m12_59  [key=2, style=dotted];
m12_299 -> m12_262  [key=2, style=dotted];
m12_299 -> m12_304  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_301 -> m12_302  [key=0, style=solid];
m12_301 -> m12_25  [key=2, style=dotted];
m12_301 -> m12_317  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_302 -> m12_303  [key=0, style=solid];
m12_302 -> m12_139  [key=2, style=dotted];
m12_302 -> m12_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_303 -> m12_296  [color=blue, key=0, style=bold];
m12_392 -> m12_393  [key=0, style=solid];
m12_393 -> m12_394  [key=0, style=solid];
m12_393 -> m12_58  [key=2, style=dotted];
m12_394 -> m12_395  [key=0, style=solid];
m12_394 -> m12_59  [key=2, style=dotted];
m12_394 -> m12_26  [key=2, style=dotted];
m12_394 -> m12_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_395 -> m12_396  [key=0, style=solid];
m12_395 -> m12_25  [key=2, style=dotted];
m12_395 -> m12_402  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_396 -> m12_397  [key=0, style=solid];
m12_396 -> m12_26  [key=2, style=dotted];
m12_396 -> m12_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_397 -> m12_392  [color=blue, key=0, style=bold];
m12_420 -> m12_421  [key=0, style=solid];
m12_420 -> m12_424  [key=2, style=dotted];
m12_420 -> m12_422  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_421 -> m12_422  [key=0, style=solid];
m12_421 -> m12_425  [key=2, style=dotted];
m12_422 -> m12_423  [key=0, style=solid];
m12_423 -> m12_58  [color=blue, key=0, style=bold];
m12_404 -> m12_405  [key=0, style=solid];
m12_405 -> m12_406  [key=0, style=solid];
m12_405 -> m12_58  [key=2, style=dotted];
m12_406 -> m12_407  [key=0, style=solid];
m12_406 -> m12_59  [key=2, style=dotted];
m12_406 -> m12_26  [key=2, style=dotted];
m12_406 -> m12_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_407 -> m12_408  [key=0, style=solid];
m12_407 -> m12_25  [key=2, style=dotted];
m12_407 -> m12_414  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_408 -> m12_409  [key=0, style=solid];
m12_408 -> m12_26  [key=2, style=dotted];
m12_408 -> m12_413  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_409 -> m12_404  [color=blue, key=0, style=bold];
m12_92 -> m12_93  [key=0, style=solid];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_58  [key=2, style=dotted];
m12_93 -> m12_97  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_59  [key=2, style=dotted];
m12_94 -> m12_26  [key=2, style=dotted];
m12_94 -> m12_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_46  [key=2, style=dotted];
m12_97 -> m12_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_25  [key=2, style=dotted];
m12_95 -> m12_103  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_26  [key=2, style=dotted];
m12_96 -> m12_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_98 -> m12_92  [color=blue, key=0, style=bold];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_59  [key=2, style=dotted];
m12_54 -> m12_60  [key=2, style=dotted];
m12_54 -> m12_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_152 -> m12_153  [key=0, style=solid];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_58  [key=2, style=dotted];
m12_153 -> m12_156  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_154 -> m12_155  [key=0, style=solid];
m12_154 -> m12_59  [key=2, style=dotted];
m12_154 -> m12_118  [key=2, style=dotted];
m12_154 -> m12_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_59  [key=2, style=dotted];
m12_156 -> m12_118  [key=2, style=dotted];
m12_156 -> m12_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_59  [key=2, style=dotted];
m12_155 -> m12_118  [key=2, style=dotted];
m12_155 -> m12_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_25  [key=2, style=dotted];
m12_158 -> m12_159  [key=0, style=solid];
m12_158 -> m12_31  [key=2, style=dotted];
m12_159 -> m12_152  [color=blue, key=0, style=bold];
m12_253 -> m12_254  [key=0, style=solid];
m12_254 -> m12_255  [key=0, style=solid];
m12_254 -> m12_58  [key=2, style=dotted];
m12_254 -> m12_259  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_255 -> m12_256  [key=0, style=solid];
m12_255 -> m12_261  [key=2, style=dotted];
m12_255 -> m12_259  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_255 -> m12_270  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_255 -> m12_273  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_46  [key=2, style=dotted];
m12_259 -> m12_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_256 -> m12_257  [key=0, style=solid];
m12_256 -> m12_59  [key=2, style=dotted];
m12_256 -> m12_262  [key=2, style=dotted];
m12_256 -> m12_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_25  [key=2, style=dotted];
m12_257 -> m12_267  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_26  [key=2, style=dotted];
m12_258 -> m12_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_260 -> m12_253  [color=blue, key=0, style=bold];
m12_131 -> m12_132  [key=0, style=solid];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_59  [key=2, style=dotted];
m12_132 -> m12_26  [key=2, style=dotted];
m12_132 -> m12_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_58  [key=2, style=dotted];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_59  [key=2, style=dotted];
m12_134 -> m12_138  [key=2, style=dotted];
m12_134 -> m12_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_134 -> m12_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_135 -> m12_136  [key=0, style=solid];
m12_135 -> m12_25  [key=2, style=dotted];
m12_135 -> m12_150  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_139  [key=2, style=dotted];
m12_136 -> m12_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_137 -> m12_131  [color=blue, key=0, style=bold];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_26  [key=2, style=dotted];
m12_65 -> m12_67  [key=2, style=dotted];
m12_65 -> m12_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_81 -> m12_82  [key=0, style=solid];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_59  [key=2, style=dotted];
m12_82 -> m12_26  [key=2, style=dotted];
m12_82 -> m12_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_25  [key=2, style=dotted];
m12_83 -> m12_90  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_26  [key=2, style=dotted];
m12_84 -> m12_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_85 -> m12_81  [color=blue, key=0, style=bold];
m12_51 -> m12_52  [key=0, style=solid];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_58  [key=2, style=dotted];
m12_52 -> m12_56  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_46  [key=2, style=dotted];
m12_56 -> m12_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_319 -> m12_320  [key=0, style=solid];
m12_320 -> m12_321  [key=0, style=solid];
m12_320 -> m12_58  [key=2, style=dotted];
m12_320 -> m12_326  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_321 -> m12_322  [key=0, style=solid];
m12_321 -> m12_58  [key=2, style=dotted];
m12_321 -> m12_323  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_326 -> m12_327  [key=0, style=solid];
m12_326 -> m12_46  [key=2, style=dotted];
m12_326 -> m12_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_322 -> m12_323  [key=0, style=solid];
m12_322 -> m12_59  [key=2, style=dotted];
m12_322 -> m12_26  [key=2, style=dotted];
m12_322 -> m12_328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_323 -> m12_324  [key=0, style=solid];
m12_323 -> m12_59  [key=2, style=dotted];
m12_323 -> m12_138  [key=2, style=dotted];
m12_323 -> m12_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_323 -> m12_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_324 -> m12_325  [key=0, style=solid];
m12_324 -> m12_25  [key=2, style=dotted];
m12_324 -> m12_338  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_325 -> m12_326  [key=0, style=solid];
m12_325 -> m12_139  [key=2, style=dotted];
m12_325 -> m12_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_327 -> m12_319  [color=blue, key=0, style=bold];
m12_14 -> m12_72  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_19  [key=2, style=dotted];
m12_17 -> m12_14  [key=2, style=dotted];
m12_18 -> m12_16  [color=blue, key=0, style=bold];
m12_212 -> m12_213  [key=0, style=solid];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_58  [key=2, style=dotted];
m12_213 -> m12_218  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_58  [key=2, style=dotted];
m12_218 -> m12_219  [key=0, style=solid];
m12_218 -> m12_46  [key=2, style=dotted];
m12_218 -> m12_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_215 -> m12_216  [key=0, style=solid];
m12_215 -> m12_59  [key=2, style=dotted];
m12_215 -> m12_138  [key=2, style=dotted];
m12_215 -> m12_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_215 -> m12_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_216 -> m12_217  [key=0, style=solid];
m12_216 -> m12_25  [key=2, style=dotted];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_31  [key=2, style=dotted];
m12_219 -> m12_212  [color=blue, key=0, style=bold];
m12_59 -> m12_60  [key=0, style=solid];
m12_416 -> m12_19  [color=blue, key=0, style=bold];
m12_24 -> m12_20  [color=blue, key=0, style=bold];
m12_24 -> m12_25  [key=0, style=solid];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_14  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_15  [key=2, style=dotted];
m12_12 -> m12_2  [color=blue, key=0, style=bold];
m12_192 -> m12_193  [key=0, style=solid];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_58  [key=2, style=dotted];
m12_193 -> m12_198  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_59  [key=2, style=dotted];
m12_194 -> m12_138  [key=2, style=dotted];
m12_194 -> m12_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_194 -> m12_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_46  [key=2, style=dotted];
m12_198 -> m12_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_195 -> m12_196  [key=0, style=solid];
m12_195 -> m12_25  [key=2, style=dotted];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_31  [key=2, style=dotted];
m12_197 -> m12_198  [key=0, style=solid];
m12_197 -> m12_46  [key=2, style=dotted];
m12_197 -> m12_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_199 -> m12_192  [color=blue, key=0, style=bold];
m12_69 -> m12_70  [key=0, style=solid];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_59  [color=blue, key=0, style=bold];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_62  [color=blue, key=0, style=bold];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_26  [key=2, style=dotted];
m12_62 -> m12_50  [key=2, style=dotted];
m12_63 -> m12_61  [color=blue, key=0, style=bold];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_65  [key=2, style=dotted];
m12_66 -> m12_64  [color=blue, key=0, style=bold];
m12_66 -> m12_67  [key=0, style=solid];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_66  [color=blue, key=0, style=bold];
m12_70 -> m12_68  [color=blue, key=0, style=bold];
m12_70 -> m12_71  [key=0, style=solid];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_7  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_78 -> m12_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_78 -> m12_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_78 -> m12_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_78 -> m12_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_78 -> m12_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_78 -> m12_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_78 -> m12_31  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_78 -> m12_37  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_78 -> m12_72  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_26  [key=2, style=dotted];
m12_79 -> m12_50  [key=2, style=dotted];
m12_80 -> m12_78  [color=blue, key=0, style=bold];
m12_86 -> m12_87  [key=0, style=solid];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_31  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_26  [key=2, style=dotted];
m12_87 -> m12_50  [key=2, style=dotted];
m12_88 -> m12_86  [color=blue, key=0, style=bold];
m12_91 -> m12_89  [color=blue, key=0, style=bold];
m12_99 -> m12_100  [key=0, style=solid];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_31  [key=2, style=dotted];
m12_102 -> m12_103  [key=0, style=solid];
m12_105 -> m12_106  [key=0, style=solid];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_26  [key=2, style=dotted];
m12_100 -> m12_50  [key=2, style=dotted];
m12_101 -> m12_99  [color=blue, key=0, style=bold];
m12_104 -> m12_102  [color=blue, key=0, style=bold];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_26  [key=2, style=dotted];
m12_106 -> m12_108  [key=2, style=dotted];
m12_107 -> m12_105  [color=blue, key=0, style=bold];
m12_119 -> m12_120  [key=0, style=solid];
m12_122 -> m12_123  [key=0, style=solid];
m12_125 -> m12_126  [key=0, style=solid];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_31  [key=2, style=dotted];
m12_128 -> m12_129  [key=0, style=solid];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_26  [key=2, style=dotted];
m12_120 -> m12_108  [key=2, style=dotted];
m12_121 -> m12_119  [color=blue, key=0, style=bold];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_26  [key=2, style=dotted];
m12_123 -> m12_108  [key=2, style=dotted];
m12_124 -> m12_122  [color=blue, key=0, style=bold];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_26  [key=2, style=dotted];
m12_126 -> m12_50  [key=2, style=dotted];
m12_127 -> m12_125  [color=blue, key=0, style=bold];
m12_130 -> m12_128  [color=blue, key=0, style=bold];
m12_140 -> m12_141  [key=0, style=solid];
m12_143 -> m12_144  [key=0, style=solid];
m12_146 -> m12_147  [key=0, style=solid];
m12_150 -> m12_151  [key=0, style=solid];
m12_150 -> m12_31  [key=2, style=dotted];
m12_149 -> m12_150  [key=0, style=solid];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_26  [key=2, style=dotted];
m12_141 -> m12_50  [key=2, style=dotted];
m12_142 -> m12_140  [color=blue, key=0, style=bold];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_26  [key=2, style=dotted];
m12_144 -> m12_108  [key=2, style=dotted];
m12_145 -> m12_143  [color=blue, key=0, style=bold];
m12_147 -> m12_148  [key=0, style=solid];
m12_148 -> m12_146  [color=blue, key=0, style=bold];
m12_151 -> m12_149  [color=blue, key=0, style=bold];
m12_160 -> m12_161  [key=0, style=solid];
m12_164 -> m12_165  [key=0, style=solid];
m12_167 -> m12_168  [key=0, style=solid];
m12_161 -> m12_162  [key=0, style=solid];
m12_161 -> m12_26  [key=2, style=dotted];
m12_161 -> m12_163  [key=2, style=dotted];
m12_162 -> m12_160  [color=blue, key=0, style=bold];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_26  [key=2, style=dotted];
m12_165 -> m12_50  [key=2, style=dotted];
m12_166 -> m12_164  [color=blue, key=0, style=bold];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_26  [key=2, style=dotted];
m12_168 -> m12_67  [key=2, style=dotted];
m12_169 -> m12_167  [color=blue, key=0, style=bold];
m12_180 -> m12_181  [key=0, style=solid];
m12_183 -> m12_184  [key=0, style=solid];
m12_186 -> m12_187  [key=0, style=solid];
m12_189 -> m12_190  [key=0, style=solid];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_26  [key=2, style=dotted];
m12_181 -> m12_163  [key=2, style=dotted];
m12_182 -> m12_180  [color=blue, key=0, style=bold];
m12_184 -> m12_185  [key=0, style=solid];
m12_184 -> m12_26  [key=2, style=dotted];
m12_184 -> m12_163  [key=2, style=dotted];
m12_185 -> m12_183  [color=blue, key=0, style=bold];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_26  [key=2, style=dotted];
m12_187 -> m12_67  [key=2, style=dotted];
m12_188 -> m12_186  [color=blue, key=0, style=bold];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_26  [key=2, style=dotted];
m12_190 -> m12_67  [key=2, style=dotted];
m12_191 -> m12_189  [color=blue, key=0, style=bold];
m12_200 -> m12_201  [key=0, style=solid];
m12_203 -> m12_204  [key=0, style=solid];
m12_206 -> m12_207  [key=0, style=solid];
m12_209 -> m12_210  [key=0, style=solid];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_26  [key=2, style=dotted];
m12_201 -> m12_163  [key=2, style=dotted];
m12_202 -> m12_200  [color=blue, key=0, style=bold];
m12_204 -> m12_205  [key=0, style=solid];
m12_205 -> m12_203  [color=blue, key=0, style=bold];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_26  [key=2, style=dotted];
m12_207 -> m12_50  [key=2, style=dotted];
m12_208 -> m12_206  [color=blue, key=0, style=bold];
m12_210 -> m12_211  [key=0, style=solid];
m12_210 -> m12_26  [key=2, style=dotted];
m12_210 -> m12_67  [key=2, style=dotted];
m12_211 -> m12_209  [color=blue, key=0, style=bold];
m12_220 -> m12_221  [key=0, style=solid];
m12_223 -> m12_224  [key=0, style=solid];
m12_226 -> m12_227  [key=0, style=solid];
m12_221 -> m12_222  [key=0, style=solid];
m12_221 -> m12_26  [key=2, style=dotted];
m12_221 -> m12_163  [key=2, style=dotted];
m12_222 -> m12_220  [color=blue, key=0, style=bold];
m12_224 -> m12_225  [key=0, style=solid];
m12_225 -> m12_223  [color=blue, key=0, style=bold];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_26  [key=2, style=dotted];
m12_227 -> m12_67  [key=2, style=dotted];
m12_227 -> m12_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_228 -> m12_226  [color=blue, key=0, style=bold];
m12_229 -> m12_230  [key=0, style=solid];
m12_230 -> m12_231  [key=0, style=solid];
m12_231 -> m12_229  [color=blue, key=0, style=bold];
m12_241 -> m12_242  [key=0, style=solid];
m12_245 -> m12_246  [key=0, style=solid];
m12_245 -> m12_31  [key=2, style=dotted];
m12_244 -> m12_245  [key=0, style=solid];
m12_247 -> m12_248  [key=0, style=solid];
m12_250 -> m12_251  [key=0, style=solid];
m12_242 -> m12_243  [key=0, style=solid];
m12_242 -> m12_26  [key=2, style=dotted];
m12_242 -> m12_163  [key=2, style=dotted];
m12_243 -> m12_241  [color=blue, key=0, style=bold];
m12_246 -> m12_244  [color=blue, key=0, style=bold];
m12_248 -> m12_249  [key=0, style=solid];
m12_248 -> m12_26  [key=2, style=dotted];
m12_248 -> m12_50  [key=2, style=dotted];
m12_249 -> m12_247  [color=blue, key=0, style=bold];
m12_251 -> m12_252  [key=0, style=solid];
m12_251 -> m12_26  [key=2, style=dotted];
m12_251 -> m12_67  [key=2, style=dotted];
m12_252 -> m12_250  [color=blue, key=0, style=bold];
m12_270 -> m12_271  [key=0, style=solid];
m12_270 -> m12_26  [key=2, style=dotted];
m12_270 -> m12_67  [key=2, style=dotted];
m12_270 -> m12_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_273 -> m12_274  [key=0, style=solid];
m12_263 -> m12_264  [key=0, style=solid];
m12_267 -> m12_268  [key=0, style=solid];
m12_267 -> m12_31  [key=2, style=dotted];
m12_266 -> m12_267  [key=0, style=solid];
m12_269 -> m12_270  [key=0, style=solid];
m12_264 -> m12_265  [key=0, style=solid];
m12_264 -> m12_26  [key=2, style=dotted];
m12_264 -> m12_50  [key=2, style=dotted];
m12_265 -> m12_263  [color=blue, key=0, style=bold];
m12_268 -> m12_266  [color=blue, key=0, style=bold];
m12_271 -> m12_269  [color=blue, key=0, style=bold];
m12_272 -> m12_273  [key=0, style=solid];
m12_274 -> m12_272  [color=blue, key=0, style=bold];
m12_291 -> m12_292  [key=0, style=solid];
m12_291 -> m12_26  [key=2, style=dotted];
m12_291 -> m12_67  [key=2, style=dotted];
m12_291 -> m12_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_294 -> m12_295  [key=0, style=solid];
m12_284 -> m12_285  [key=0, style=solid];
m12_288 -> m12_289  [key=0, style=solid];
m12_288 -> m12_31  [key=2, style=dotted];
m12_287 -> m12_288  [key=0, style=solid];
m12_290 -> m12_291  [key=0, style=solid];
m12_285 -> m12_286  [key=0, style=solid];
m12_285 -> m12_26  [key=2, style=dotted];
m12_285 -> m12_50  [key=2, style=dotted];
m12_286 -> m12_284  [color=blue, key=0, style=bold];
m12_289 -> m12_287  [color=blue, key=0, style=bold];
m12_292 -> m12_290  [color=blue, key=0, style=bold];
m12_293 -> m12_294  [key=0, style=solid];
m12_295 -> m12_293  [color=blue, key=0, style=bold];
m12_308 -> m12_309  [key=0, style=solid];
m12_308 -> m12_26  [key=2, style=dotted];
m12_308 -> m12_67  [key=2, style=dotted];
m12_308 -> m12_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_311 -> m12_312  [key=0, style=solid];
m12_304 -> m12_305  [key=0, style=solid];
m12_307 -> m12_308  [key=0, style=solid];
m12_313 -> m12_314  [key=0, style=solid];
m12_317 -> m12_318  [key=0, style=solid];
m12_317 -> m12_31  [key=2, style=dotted];
m12_316 -> m12_317  [key=0, style=solid];
m12_305 -> m12_306  [key=0, style=solid];
m12_305 -> m12_26  [key=2, style=dotted];
m12_305 -> m12_50  [key=2, style=dotted];
m12_306 -> m12_304  [color=blue, key=0, style=bold];
m12_309 -> m12_307  [color=blue, key=0, style=bold];
m12_310 -> m12_311  [key=0, style=solid];
m12_312 -> m12_310  [color=blue, key=0, style=bold];
m12_314 -> m12_315  [key=0, style=solid];
m12_315 -> m12_313  [color=blue, key=0, style=bold];
m12_318 -> m12_316  [color=blue, key=0, style=bold];
m12_328 -> m12_329  [key=0, style=solid];
m12_331 -> m12_332  [key=0, style=solid];
m12_334 -> m12_335  [key=0, style=solid];
m12_338 -> m12_339  [key=0, style=solid];
m12_338 -> m12_31  [key=2, style=dotted];
m12_337 -> m12_338  [key=0, style=solid];
m12_340 -> m12_341  [key=0, style=solid];
m12_329 -> m12_330  [key=0, style=solid];
m12_329 -> m12_26  [key=2, style=dotted];
m12_329 -> m12_50  [key=2, style=dotted];
m12_330 -> m12_328  [color=blue, key=0, style=bold];
m12_332 -> m12_333  [key=0, style=solid];
m12_332 -> m12_26  [key=2, style=dotted];
m12_332 -> m12_67  [key=2, style=dotted];
m12_333 -> m12_331  [color=blue, key=0, style=bold];
m12_335 -> m12_336  [key=0, style=solid];
m12_336 -> m12_334  [color=blue, key=0, style=bold];
m12_339 -> m12_337  [color=blue, key=0, style=bold];
m12_341 -> m12_342  [key=0, style=solid];
m12_341 -> m12_26  [key=2, style=dotted];
m12_341 -> m12_67  [key=2, style=dotted];
m12_341 -> m12_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_342 -> m12_340  [color=blue, key=0, style=bold];
m12_343 -> m12_344  [key=0, style=solid];
m12_344 -> m12_345  [key=0, style=solid];
m12_345 -> m12_343  [color=blue, key=0, style=bold];
m12_353 -> m12_354  [key=0, style=solid];
m12_357 -> m12_358  [key=0, style=solid];
m12_357 -> m12_31  [key=2, style=dotted];
m12_356 -> m12_357  [key=0, style=solid];
m12_354 -> m12_355  [key=0, style=solid];
m12_354 -> m12_26  [key=2, style=dotted];
m12_354 -> m12_67  [key=2, style=dotted];
m12_355 -> m12_353  [color=blue, key=0, style=bold];
m12_358 -> m12_356  [color=blue, key=0, style=bold];
m12_367 -> m12_368  [key=0, style=solid];
m12_370 -> m12_371  [key=0, style=solid];
m12_374 -> m12_375  [key=0, style=solid];
m12_374 -> m12_31  [key=2, style=dotted];
m12_373 -> m12_374  [key=0, style=solid];
m12_368 -> m12_369  [key=0, style=solid];
m12_368 -> m12_26  [key=2, style=dotted];
m12_368 -> m12_67  [key=2, style=dotted];
m12_369 -> m12_367  [color=blue, key=0, style=bold];
m12_371 -> m12_372  [key=0, style=solid];
m12_371 -> m12_26  [key=2, style=dotted];
m12_371 -> m12_50  [key=2, style=dotted];
m12_372 -> m12_370  [color=blue, key=0, style=bold];
m12_375 -> m12_373  [color=blue, key=0, style=bold];
m12_383 -> m12_384  [key=0, style=solid];
m12_387 -> m12_388  [key=0, style=solid];
m12_387 -> m12_31  [key=2, style=dotted];
m12_386 -> m12_387  [key=0, style=solid];
m12_389 -> m12_390  [key=0, style=solid];
m12_384 -> m12_385  [key=0, style=solid];
m12_384 -> m12_26  [key=2, style=dotted];
m12_384 -> m12_50  [key=2, style=dotted];
m12_385 -> m12_383  [color=blue, key=0, style=bold];
m12_388 -> m12_386  [color=blue, key=0, style=bold];
m12_390 -> m12_391  [key=0, style=solid];
m12_390 -> m12_26  [key=2, style=dotted];
m12_390 -> m12_108  [key=2, style=dotted];
m12_391 -> m12_389  [color=blue, key=0, style=bold];
m12_398 -> m12_399  [key=0, style=solid];
m12_402 -> m12_403  [key=0, style=solid];
m12_402 -> m12_31  [key=2, style=dotted];
m12_401 -> m12_402  [key=0, style=solid];
m12_399 -> m12_400  [key=0, style=solid];
m12_399 -> m12_26  [key=2, style=dotted];
m12_399 -> m12_163  [key=2, style=dotted];
m12_400 -> m12_398  [color=blue, key=0, style=bold];
m12_403 -> m12_401  [color=blue, key=0, style=bold];
m12_410 -> m12_411  [key=0, style=solid];
m12_414 -> m12_415  [key=0, style=solid];
m12_414 -> m12_31  [key=2, style=dotted];
m12_413 -> m12_414  [key=0, style=solid];
m12_411 -> m12_412  [key=0, style=solid];
m12_411 -> m12_26  [key=2, style=dotted];
m12_411 -> m12_67  [key=2, style=dotted];
m12_412 -> m12_410  [color=blue, key=0, style=bold];
m12_415 -> m12_413  [color=blue, key=0, style=bold];
m12_60 -> m12_51  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_359 -> m12_360  [key=0, style=solid];
m12_360 -> m12_361  [key=0, style=solid];
m12_360 -> m12_58  [key=2, style=dotted];
m12_361 -> m12_362  [key=0, style=solid];
m12_361 -> m12_59  [key=2, style=dotted];
m12_361 -> m12_26  [key=2, style=dotted];
m12_361 -> m12_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_362 -> m12_363  [key=0, style=solid];
m12_362 -> m12_59  [key=2, style=dotted];
m12_362 -> m12_26  [key=2, style=dotted];
m12_362 -> m12_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_363 -> m12_364  [key=0, style=solid];
m12_363 -> m12_25  [key=2, style=dotted];
m12_363 -> m12_374  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_364 -> m12_365  [key=0, style=solid];
m12_364 -> m12_26  [key=2, style=dotted];
m12_364 -> m12_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_365 -> m12_366  [key=0, style=solid];
m12_365 -> m12_26  [key=2, style=dotted];
m12_366 -> m12_359  [color=blue, key=0, style=bold];
m12_346 -> m12_347  [key=0, style=solid];
m12_347 -> m12_348  [key=0, style=solid];
m12_347 -> m12_58  [key=2, style=dotted];
m12_348 -> m12_349  [key=0, style=solid];
m12_348 -> m12_59  [key=2, style=dotted];
m12_348 -> m12_26  [key=2, style=dotted];
m12_348 -> m12_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_349 -> m12_350  [key=0, style=solid];
m12_349 -> m12_25  [key=2, style=dotted];
m12_349 -> m12_357  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_350 -> m12_351  [key=0, style=solid];
m12_350 -> m12_26  [key=2, style=dotted];
m12_350 -> m12_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_351 -> m12_352  [key=0, style=solid];
m12_351 -> m12_26  [key=2, style=dotted];
m12_352 -> m12_346  [color=blue, key=0, style=bold];
m12_232 -> m12_233  [key=0, style=solid];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_58  [key=2, style=dotted];
m12_233 -> m12_239  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_234 -> m12_235  [key=0, style=solid];
m12_234 -> m12_59  [key=2, style=dotted];
m12_234 -> m12_26  [key=2, style=dotted];
m12_234 -> m12_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_239 -> m12_240  [key=0, style=solid];
m12_239 -> m12_46  [key=2, style=dotted];
m12_239 -> m12_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_25  [key=2, style=dotted];
m12_235 -> m12_245  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_236 -> m12_237  [key=0, style=solid];
m12_236 -> m12_26  [key=2, style=dotted];
m12_236 -> m12_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_237 -> m12_238  [key=0, style=solid];
m12_237 -> m12_26  [key=2, style=dotted];
m12_238 -> m12_239  [key=0, style=solid];
m12_238 -> m12_46  [key=2, style=dotted];
m12_238 -> m12_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_240 -> m12_232  [color=blue, key=0, style=bold];
m12_275 -> m12_276  [key=0, style=solid];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_58  [key=2, style=dotted];
m12_276 -> m12_282  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_277 -> m12_278  [key=0, style=solid];
m12_277 -> m12_58  [key=2, style=dotted];
m12_282 -> m12_283  [key=0, style=solid];
m12_282 -> m12_46  [key=2, style=dotted];
m12_282 -> m12_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_278 -> m12_279  [key=0, style=solid];
m12_278 -> m12_261  [key=2, style=dotted];
m12_278 -> m12_282  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_278 -> m12_291  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_278 -> m12_294  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_279 -> m12_280  [key=0, style=solid];
m12_279 -> m12_59  [key=2, style=dotted];
m12_279 -> m12_262  [key=2, style=dotted];
m12_279 -> m12_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_280 -> m12_281  [key=0, style=solid];
m12_280 -> m12_25  [key=2, style=dotted];
m12_280 -> m12_288  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_281 -> m12_282  [key=0, style=solid];
m12_281 -> m12_26  [key=2, style=dotted];
m12_281 -> m12_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_283 -> m12_275  [color=blue, key=0, style=bold];
m12_426 -> m12_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_21  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_33  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_42  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_44  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_83  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_110  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_111  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_114  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_129  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_132  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_133  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_150  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_153  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_158  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_172  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_193  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_195  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_196  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_197  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_213  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_214  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_216  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_217  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_233  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_235  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_236  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_245  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_238  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_254  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_256  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_257  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_258  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_267  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_276  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_277  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_279  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_280  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_281  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_288  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_297  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_299  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_301  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_302  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_317  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_320  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_321  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_322  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_324  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_325  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_338  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_347  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_349  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_350  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_357  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_360  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_362  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_363  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_364  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_374  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_377  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_378  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_379  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_380  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_387  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_393  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_395  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_396  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_402  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_405  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_407  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_408  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_414  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_417  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_426 -> m12_421  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_427 -> m12_29  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_428 -> m12_38  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_429 -> m12_90  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_430 -> m12_103  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_431 -> m12_129  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_432 -> m12_150  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_433 -> m12_245  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_434 -> m12_267  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_435 -> m12_270  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_435 -> m12_273  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_436 -> m12_288  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_437 -> m12_291  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_437 -> m12_294  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_438 -> m12_308  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_438 -> m12_311  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_439 -> m12_317  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_440 -> m12_338  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_441 -> m12_357  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_442 -> m12_374  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_443 -> m12_387  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_444 -> m12_402  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_445 -> m12_414  [color=darkseagreen4, key=1, label=process, style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_4  [key=2, style=dotted];
m13_1 -> m13_5  [key=2, style=dotted];
m13_1 -> m13_6  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_7  [key=2, style=dotted];
m13_3 -> m13_0  [color=blue, key=0, style=bold];
m13_44 -> m13_45  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_31  [key=2, style=dotted];
m13_45 -> m13_47  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_45 -> m13_50  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_32  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_33  [key=2, style=dotted];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_52  [key=2, style=dotted];
m13_50 -> m13_53  [key=2, style=dotted];
m13_50 -> m13_54  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_37  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_38  [key=2, style=dotted];
m13_51 -> m13_44  [color=blue, key=0, style=bold];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> d6  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_31  [key=2, style=dotted];
m13_19 -> m13_21  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_19 -> m13_22  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_19 -> m13_25  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_19 -> m13_26  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_19 -> m13_28  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_32  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_33  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_34  [key=2, style=dotted];
m13_22 -> m13_35  [key=2, style=dotted];
m13_22 -> m13_36  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_39  [key=2, style=dotted];
m13_25 -> d6  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_40  [key=2, style=dotted];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_41  [key=2, style=dotted];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_37  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_38  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_42  [key=2, style=dotted];
m13_29 -> m13_43  [key=2, style=dotted];
m13_30 -> m13_18  [color=blue, key=0, style=bold];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_34  [key=2, style=dotted];
m13_59 -> m13_35  [key=2, style=dotted];
m13_59 -> m13_36  [key=2, style=dotted];
m13_55 -> m13_56  [key=0, style=solid];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_31  [key=2, style=dotted];
m13_56 -> m13_58  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_56 -> m13_59  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_56 -> m13_62  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_56 -> m13_63  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_56 -> m13_64  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_32  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_33  [key=2, style=dotted];
m13_62 -> m13_63  [key=0, style=solid];
m13_62 -> m13_39  [key=2, style=dotted];
m13_62 -> d6  [key=2, style=dotted];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_39  [key=2, style=dotted];
m13_63 -> d6  [key=2, style=dotted];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_41  [key=2, style=dotted];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_37  [key=2, style=dotted];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_38  [key=2, style=dotted];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_42  [key=2, style=dotted];
m13_65 -> m13_43  [key=2, style=dotted];
m13_66 -> m13_55  [color=blue, key=0, style=bold];
m13_37 -> m13_77  [key=0, style=solid];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_17  [key=2, style=dotted];
m13_78 -> m13_37  [color=blue, key=0, style=bold];
m13_14 -> m13_15  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=2, style=dotted];
m13_16 -> m13_14  [color=blue, key=0, style=bold];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_35  [key=2, style=dotted];
m13_72 -> m13_36  [key=2, style=dotted];
m13_67 -> m13_68  [key=0, style=solid];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_31  [key=2, style=dotted];
m13_68 -> m13_70  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_68 -> m13_71  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_68 -> m13_72  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_68 -> m13_75  [color=darkseagreen4, key=1, label=redis, style=dashed];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_32  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_33  [key=2, style=dotted];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_34  [key=2, style=dotted];
m13_71 -> m13_35  [key=2, style=dotted];
m13_71 -> m13_36  [key=2, style=dotted];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_39  [key=2, style=dotted];
m13_75 -> d6  [key=2, style=dotted];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_37  [key=2, style=dotted];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_38  [key=2, style=dotted];
m13_76 -> m13_67  [color=blue, key=0, style=bold];
m13_8 -> m13_9  [key=0, style=solid];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_12  [key=2, style=dotted];
m13_9 -> m13_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> d6  [key=2, style=dotted];
m13_11 -> m13_8  [color=blue, key=0, style=bold];
m13_79 -> m13_1  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_2  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_23  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_24  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_48  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_49  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_60  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_61  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_73  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_74  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m13_79 -> m13_77  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m14_2 -> m14_3  [color=green, key=0, style=solid];
m14_3 -> m14_4  [color=green, key=0, style=solid];
m14_4 -> m14_5  [color=green, key=0, style=solid];
m14_4 -> m14_6  [color=green, key=2, style=dotted];
m14_5 -> m14_2  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m14_7 -> m14_4  [color=green, key=1, label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", style=dashed];
m15_19 -> m15_20  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_22  [key=2, style=dotted];
m15_20 -> m15_23  [key=2, style=dotted];
m15_21 -> m15_19  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_10  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_9  [key=0, style=solid];
m15_5 -> m15_11  [key=2, style=dotted];
m15_5 -> m15_7  [color=darkseagreen4, key=1, label=queuePath, style=dashed];
m15_5 -> m15_8  [color=darkseagreen4, key=1, label=queuePath, style=dashed];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [key=0, style=solid];
m15_6 -> m15_12  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_13  [key=2, style=dotted];
m15_8 -> m15_5  [key=0, style=solid];
m15_8 -> m15_14  [key=2, style=dotted];
m15_9 -> m15_3  [color=blue, key=0, style=bold];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_19  [color=darkorchid, key=3, label="Parameter variable string queue", style=bold];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_26  [key=2, style=dotted];
m15_25 -> m15_23  [color=blue, key=0, style=bold];
m15_15 -> m15_16  [key=0, style=solid];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_18  [key=2, style=dotted];
m15_17 -> m15_15  [color=blue, key=0, style=bold];
m15_27 -> m15_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute", style=dashed];
m15_27 -> m15_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.Tests.CleanMsmqQueueAttribute", style=dashed];
m17_131 -> m17_132  [key=0, style=solid];
m17_131 -> m17_134  [color=darkseagreen4, key=1, label=double, style=dashed];
m17_131 -> m17_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_131 -> m17_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_132 -> m17_133  [key=0, style=solid];
m17_132 -> m17_134  [key=0, style=solid];
m17_134 -> m17_135  [key=0, style=solid];
m17_134 -> m17_136  [key=0, style=solid];
m17_136 -> m17_137  [key=0, style=solid];
m17_136 -> m17_45  [key=2, style=dotted];
m17_136 -> m17_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_133 -> m17_137  [key=0, style=solid];
m17_133 -> n21  [key=2, style=dotted];
m17_135 -> m17_137  [key=0, style=solid];
m17_135 -> m17_138  [key=2, style=dotted];
m17_137 -> m17_131  [color=blue, key=0, style=bold];
m17_261 -> m17_262  [key=0, style=solid];
m17_261 -> m17_265  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_261 -> m17_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_262 -> m17_263  [key=0, style=solid];
m17_262 -> m17_264  [key=0, style=solid];
m17_265 -> m17_266  [key=0, style=solid];
m17_265 -> m17_45  [key=2, style=dotted];
m17_265 -> m17_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_263 -> m17_266  [key=0, style=solid];
m17_263 -> n21  [key=2, style=dotted];
m17_264 -> m17_265  [key=0, style=solid];
m17_264 -> m17_268  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_266 -> m17_261  [color=blue, key=0, style=bold];
m17_172 -> m17_173  [key=0, style=solid];
m17_172 -> m17_175  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m17_172 -> m17_177  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m17_172 -> m17_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_172 -> m17_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_173 -> m17_174  [key=0, style=solid];
m17_173 -> m17_175  [key=0, style=solid];
m17_175 -> m17_176  [key=0, style=solid];
m17_175 -> m17_177  [key=0, style=solid];
m17_177 -> m17_178  [key=0, style=solid];
m17_177 -> m17_180  [key=2, style=dotted];
m17_177 -> m17_182  [color=darkseagreen4, key=1, label=data, style=dashed];
m17_178 -> m17_179  [key=0, style=solid];
m17_178 -> m17_107  [key=2, style=dotted];
m17_178 -> m17_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_174 -> m17_179  [key=0, style=solid];
m17_174 -> n21  [key=2, style=dotted];
m17_176 -> m17_179  [key=0, style=solid];
m17_176 -> n21  [key=2, style=dotted];
m17_179 -> m17_172  [color=blue, key=0, style=bold];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_18  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m17_15 -> m17_20  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m17_15 -> m17_22  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_18  [key=0, style=solid];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_24  [key=2, style=dotted];
m17_18 -> m17_25  [key=2, style=dotted];
m17_18 -> m17_26  [key=2, style=dotted];
m17_18 -> m17_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_18 -> m17_21  [color=darkseagreen4, key=1, label=providers, style=dashed];
m17_20 -> m17_23  [key=0, style=solid];
m17_20 -> m17_27  [key=2, style=dotted];
m17_20 -> m17_28  [key=2, style=dotted];
m17_20 -> m17_14  [key=2, style=dotted];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_30  [key=2, style=dotted];
m17_17 -> m17_23  [key=0, style=solid];
m17_17 -> n21  [key=2, style=dotted];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_21  [key=0, style=solid];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_29  [key=2, style=dotted];
m17_23 -> m17_15  [color=blue, key=0, style=bold];
m17_192 -> m17_193  [key=0, style=solid];
m17_192 -> m17_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_192 -> m17_198  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_193 -> m17_194  [key=0, style=solid];
m17_193 -> m17_195  [key=0, style=solid];
m17_195 -> m17_196  [key=0, style=solid];
m17_195 -> m17_107  [key=2, style=dotted];
m17_195 -> m17_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_194 -> m17_196  [key=0, style=solid];
m17_194 -> n21  [key=2, style=dotted];
m17_196 -> m17_192  [color=blue, key=0, style=bold];
m17_220 -> m17_221  [key=0, style=solid];
m17_220 -> m17_224  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_220 -> m17_227  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_221 -> m17_222  [key=0, style=solid];
m17_221 -> m17_223  [key=0, style=solid];
m17_224 -> m17_225  [key=0, style=solid];
m17_224 -> m17_45  [key=2, style=dotted];
m17_224 -> m17_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_222 -> m17_225  [key=0, style=solid];
m17_222 -> n21  [key=2, style=dotted];
m17_223 -> m17_224  [key=0, style=solid];
m17_223 -> m17_227  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_225 -> m17_220  [color=blue, key=0, style=bold];
m17_293 -> m17_294  [key=0, style=solid];
m17_293 -> m17_297  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_293 -> m17_300  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_294 -> m17_295  [key=0, style=solid];
m17_294 -> m17_296  [key=0, style=solid];
m17_297 -> m17_298  [key=0, style=solid];
m17_297 -> m17_45  [key=2, style=dotted];
m17_297 -> m17_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_295 -> m17_298  [key=0, style=solid];
m17_295 -> n21  [key=2, style=dotted];
m17_296 -> m17_297  [key=0, style=solid];
m17_296 -> m17_300  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_298 -> m17_293  [color=blue, key=0, style=bold];
m17_314 -> m17_315  [key=0, style=solid];
m17_314 -> m17_318  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_314 -> m17_321  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_315 -> m17_316  [key=0, style=solid];
m17_315 -> m17_317  [key=0, style=solid];
m17_318 -> m17_319  [key=0, style=solid];
m17_318 -> m17_45  [key=2, style=dotted];
m17_318 -> m17_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_316 -> m17_319  [key=0, style=solid];
m17_316 -> n21  [key=2, style=dotted];
m17_317 -> m17_318  [key=0, style=solid];
m17_317 -> m17_321  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_319 -> m17_314  [color=blue, key=0, style=bold];
m17_252 -> m17_253  [key=0, style=solid];
m17_252 -> m17_256  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_252 -> m17_259  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_253 -> m17_254  [key=0, style=solid];
m17_253 -> m17_255  [key=0, style=solid];
m17_256 -> m17_257  [key=0, style=solid];
m17_256 -> m17_45  [key=2, style=dotted];
m17_256 -> m17_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_254 -> m17_257  [key=0, style=solid];
m17_254 -> n21  [key=2, style=dotted];
m17_255 -> m17_256  [key=0, style=solid];
m17_255 -> m17_259  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_257 -> m17_252  [color=blue, key=0, style=bold];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_63 -> m17_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_66  [key=0, style=solid];
m17_67 -> m17_68  [key=0, style=solid];
m17_67 -> m17_45  [key=2, style=dotted];
m17_67 -> m17_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_65 -> m17_68  [key=0, style=solid];
m17_65 -> n21  [key=2, style=dotted];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_70  [color=darkseagreen4, key=1, label=sql, style=dashed];
m17_68 -> m17_63  [color=blue, key=0, style=bold];
m17_155 -> m17_156  [key=0, style=solid];
m17_155 -> m17_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_155 -> m17_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_156 -> m17_157  [key=0, style=solid];
m17_156 -> m17_158  [key=0, style=solid];
m17_158 -> m17_159  [key=0, style=solid];
m17_158 -> m17_160  [key=2, style=dotted];
m17_158 -> m17_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_157 -> m17_159  [key=0, style=solid];
m17_157 -> n21  [key=2, style=dotted];
m17_159 -> m17_155  [color=blue, key=0, style=bold];
m17_10 -> m17_11  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_13  [key=2, style=dotted];
m17_11 -> m17_14  [key=2, style=dotted];
m17_12 -> m17_10  [color=blue, key=0, style=bold];
m17_100 -> m17_101  [key=0, style=solid];
m17_100 -> m17_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_100 -> m17_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_100 -> m17_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_101 -> m17_102  [key=0, style=solid];
m17_101 -> m17_103  [key=0, style=solid];
m17_103 -> m17_104  [key=0, style=solid];
m17_103 -> m17_105  [key=0, style=solid];
m17_105 -> m17_106  [key=0, style=solid];
m17_105 -> m17_107  [key=2, style=dotted];
m17_105 -> m17_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_102 -> m17_106  [key=0, style=solid];
m17_102 -> n21  [key=2, style=dotted];
m17_104 -> m17_106  [key=0, style=solid];
m17_104 -> n21  [key=2, style=dotted];
m17_106 -> m17_100  [color=blue, key=0, style=bold];
m17_6 -> m17_7  [key=0, style=solid];
m17_230 -> m17_231  [key=0, style=solid];
m17_230 -> m17_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_230 -> m17_237  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_231 -> m17_232  [key=0, style=solid];
m17_231 -> m17_233  [key=0, style=solid];
m17_234 -> m17_235  [key=0, style=solid];
m17_234 -> m17_45  [key=2, style=dotted];
m17_234 -> m17_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_232 -> m17_235  [key=0, style=solid];
m17_232 -> n21  [key=2, style=dotted];
m17_233 -> m17_234  [key=0, style=solid];
m17_233 -> m17_237  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_235 -> m17_230  [color=blue, key=0, style=bold];
m17_243 -> m17_244  [key=0, style=solid];
m17_243 -> m17_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_243 -> m17_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_244 -> m17_245  [key=0, style=solid];
m17_244 -> m17_246  [key=0, style=solid];
m17_247 -> m17_248  [key=0, style=solid];
m17_247 -> m17_45  [key=2, style=dotted];
m17_247 -> m17_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_245 -> m17_248  [key=0, style=solid];
m17_245 -> n21  [key=2, style=dotted];
m17_246 -> m17_247  [key=0, style=solid];
m17_246 -> m17_250  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_248 -> m17_243  [color=blue, key=0, style=bold];
m17_111 -> m17_112  [key=0, style=solid];
m17_111 -> m17_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_111 -> m17_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_111 -> m17_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_112 -> m17_113  [key=0, style=solid];
m17_112 -> m17_114  [key=0, style=solid];
m17_114 -> m17_115  [key=0, style=solid];
m17_114 -> m17_116  [key=0, style=solid];
m17_116 -> m17_117  [key=0, style=solid];
m17_116 -> m17_45  [key=2, style=dotted];
m17_116 -> m17_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_113 -> m17_117  [key=0, style=solid];
m17_113 -> n21  [key=2, style=dotted];
m17_115 -> m17_117  [key=0, style=solid];
m17_115 -> n21  [key=2, style=dotted];
m17_117 -> m17_111  [color=blue, key=0, style=bold];
m17_184 -> m17_185  [key=0, style=solid];
m17_184 -> m17_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_184 -> m17_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_185 -> m17_186  [key=0, style=solid];
m17_185 -> m17_187  [key=0, style=solid];
m17_187 -> m17_188  [key=0, style=solid];
m17_187 -> m17_107  [key=2, style=dotted];
m17_187 -> m17_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_186 -> m17_188  [key=0, style=solid];
m17_186 -> n21  [key=2, style=dotted];
m17_188 -> m17_184  [color=blue, key=0, style=bold];
m17_85 -> m17_86  [key=0, style=solid];
m17_85 -> m17_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_85 -> m17_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_86 -> m17_87  [key=0, style=solid];
m17_86 -> m17_88  [key=0, style=solid];
m17_89 -> m17_90  [key=0, style=solid];
m17_89 -> m17_45  [key=2, style=dotted];
m17_89 -> m17_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_87 -> m17_90  [key=0, style=solid];
m17_87 -> n21  [key=2, style=dotted];
m17_88 -> m17_89  [key=0, style=solid];
m17_88 -> m17_92  [color=darkseagreen4, key=1, label=sql, style=dashed];
m17_90 -> m17_85  [color=blue, key=0, style=bold];
m17_305 -> m17_306  [key=0, style=solid];
m17_305 -> m17_309  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_305 -> m17_312  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_306 -> m17_307  [key=0, style=solid];
m17_306 -> m17_308  [key=0, style=solid];
m17_309 -> m17_310  [key=0, style=solid];
m17_309 -> m17_45  [key=2, style=dotted];
m17_309 -> m17_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_307 -> m17_310  [key=0, style=solid];
m17_307 -> n21  [key=2, style=dotted];
m17_308 -> m17_309  [key=0, style=solid];
m17_308 -> m17_312  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_310 -> m17_305  [color=blue, key=0, style=bold];
m17_35 -> m17_36  [key=0, style=solid];
m17_35 -> m17_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_35 -> m17_41  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m17_35 -> m17_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_35 -> m17_47  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m17_35 -> m17_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_35 -> m17_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_35 -> m17_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_38  [key=0, style=solid];
m17_38 -> m17_39  [key=0, style=solid];
m17_38 -> m17_40  [key=0, style=solid];
m17_41 -> m17_42  [key=0, style=solid];
m17_41 -> m17_44  [key=2, style=dotted];
m17_41 -> m17_47  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m17_42 -> m17_43  [key=0, style=solid];
m17_42 -> m17_45  [key=2, style=dotted];
m17_42 -> m17_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_42 -> m17_42  [color=darkorchid, key=3, label="Local variable int timesExecuted", style=bold];
m17_37 -> m17_43  [key=0, style=solid];
m17_37 -> n21  [key=2, style=dotted];
m17_39 -> m17_43  [key=0, style=solid];
m17_39 -> n21  [key=2, style=dotted];
m17_40 -> m17_41  [key=0, style=solid];
m17_40 -> m17_42  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m17_40 -> m17_47  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m17_43 -> m17_35  [color=blue, key=0, style=bold];
m17_320 -> m17_321  [key=0, style=solid];
m17_31 -> m17_32  [key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_34  [key=2, style=dotted];
m17_33 -> m17_31  [color=blue, key=0, style=bold];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> m17_57  [key=2, style=dotted];
m17_47 -> m17_58  [key=2, style=dotted];
m17_47 -> m17_59  [key=2, style=dotted];
m17_47 -> m17_60  [key=2, style=dotted];
m17_47 -> m17_61  [key=2, style=dotted];
m17_47 -> m17_52  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m17_47 -> m17_55  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m17_48 -> m17_49  [key=0, style=solid];
m17_48 -> m17_55  [key=0, style=solid];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_52  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m17_49 -> m17_54  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m17_51 -> m17_52  [key=0, style=solid];
m17_51 -> m17_53  [key=0, style=solid];
m17_46 -> m17_47  [key=0, style=solid];
m17_46 -> m17_54  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_62  [key=2, style=dotted];
m17_52 -> m17_51  [key=0, style=solid];
m17_52 -> m17_52  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m17_55 -> m17_56  [key=0, style=solid];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_52  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m17_53 -> m17_54  [key=0, style=solid];
m17_56 -> m17_46  [color=blue, key=0, style=bold];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_59  [key=2, style=dotted];
m17_70 -> m17_82  [key=2, style=dotted];
m17_70 -> m17_73  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_70 -> m17_74  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_70 -> m17_80  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_69 -> m17_70  [key=0, style=solid];
m17_71 -> m17_72  [key=0, style=solid];
m17_71 -> m17_73  [key=0, style=solid];
m17_73 -> m17_74  [key=0, style=solid];
m17_73 -> m17_59  [key=2, style=dotted];
m17_73 -> m17_77  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m17_74 -> m17_75  [key=0, style=solid];
m17_80 -> m17_81  [key=0, style=solid];
m17_80 -> m17_84  [key=2, style=dotted];
m17_72 -> m17_81  [key=0, style=solid];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_80  [key=0, style=solid];
m17_77 -> m17_83  [key=2, style=dotted];
m17_75 -> m17_76  [key=0, style=solid];
m17_76 -> m17_77  [key=0, style=solid];
m17_78 -> m17_79  [key=0, style=solid];
m17_79 -> m17_80  [key=0, style=solid];
m17_81 -> m17_69  [color=blue, key=0, style=bold];
m17_92 -> m17_93  [key=0, style=solid];
m17_92 -> m17_59  [key=2, style=dotted];
m17_92 -> m17_82  [key=2, style=dotted];
m17_92 -> m17_95  [color=darkseagreen4, key=1, label=sqlState, style=dashed];
m17_92 -> m17_96  [color=darkseagreen4, key=1, label=sqlState, style=dashed];
m17_91 -> m17_92  [key=0, style=solid];
m17_93 -> m17_94  [key=0, style=solid];
m17_93 -> m17_95  [key=0, style=solid];
m17_95 -> m17_96  [key=0, style=solid];
m17_95 -> m17_98  [key=2, style=dotted];
m17_95 -> m17_59  [key=2, style=dotted];
m17_96 -> m17_97  [key=0, style=solid];
m17_96 -> m17_99  [key=2, style=dotted];
m17_94 -> m17_97  [key=0, style=solid];
m17_97 -> m17_91  [color=blue, key=0, style=bold];
m17_109 -> m17_110  [key=0, style=solid];
m17_109 -> m17_62  [key=2, style=dotted];
m17_108 -> m17_109  [key=0, style=solid];
m17_110 -> m17_108  [color=blue, key=0, style=bold];
m17_119 -> m17_120  [key=0, style=solid];
m17_119 -> m17_59  [key=2, style=dotted];
m17_119 -> m17_82  [key=2, style=dotted];
m17_118 -> m17_119  [key=0, style=solid];
m17_120 -> m17_118  [color=blue, key=0, style=bold];
m17_127 -> m17_128  [key=0, style=solid];
m17_127 -> m17_59  [key=2, style=dotted];
m17_126 -> m17_127  [key=0, style=solid];
m17_128 -> m17_129  [key=0, style=solid];
m17_128 -> m17_130  [key=2, style=dotted];
m17_129 -> m17_126  [color=blue, key=0, style=bold];
m17_140 -> m17_141  [key=0, style=solid];
m17_140 -> m17_59  [key=2, style=dotted];
m17_140 -> m17_82  [key=2, style=dotted];
m17_139 -> m17_140  [key=0, style=solid];
m17_141 -> m17_139  [color=blue, key=0, style=bold];
m17_152 -> m17_153  [key=0, style=solid];
m17_152 -> m17_154  [key=0, style=solid];
m17_153 -> m17_152  [key=0, style=solid];
m17_153 -> m17_62  [key=2, style=dotted];
m17_153 -> m17_153  [color=darkseagreen4, key=1, label=keyValuePair, style=dashed];
m17_151 -> m17_152  [key=0, style=solid];
m17_151 -> m17_153  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m17_154 -> m17_151  [color=blue, key=0, style=bold];
m17_162 -> m17_163  [key=0, style=solid];
m17_162 -> m17_59  [key=2, style=dotted];
m17_162 -> m17_165  [key=2, style=dotted];
m17_162 -> m17_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_162 -> m17_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_161 -> m17_162  [key=0, style=solid];
m17_163 -> m17_164  [key=0, style=solid];
m17_166 -> m17_167  [key=0, style=solid];
m17_169 -> m17_170  [key=0, style=solid];
m17_164 -> m17_161  [color=blue, key=0, style=bold];
m17_167 -> m17_168  [key=0, style=solid];
m17_168 -> m17_166  [color=blue, key=0, style=bold];
m17_170 -> m17_171  [key=0, style=solid];
m17_171 -> m17_169  [color=blue, key=0, style=bold];
m17_182 -> m17_183  [key=0, style=solid];
m17_182 -> m17_57  [key=2, style=dotted];
m17_182 -> m17_62  [key=2, style=dotted];
m17_181 -> m17_182  [key=0, style=solid];
m17_183 -> m17_181  [color=blue, key=0, style=bold];
m17_190 -> m17_191  [key=0, style=solid];
m17_190 -> m17_62  [key=2, style=dotted];
m17_189 -> m17_190  [key=0, style=solid];
m17_191 -> m17_189  [color=blue, key=0, style=bold];
m17_198 -> m17_199  [key=0, style=solid];
m17_198 -> m17_62  [key=2, style=dotted];
m17_197 -> m17_198  [key=0, style=solid];
m17_199 -> m17_197  [color=blue, key=0, style=bold];
m17_207 -> m17_208  [key=0, style=solid];
m17_208 -> m17_209  [key=0, style=solid];
m17_208 -> m17_210  [key=2, style=dotted];
m17_208 -> m17_58  [key=2, style=dotted];
m17_208 -> m17_62  [key=2, style=dotted];
m17_208 -> m17_208  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_209 -> m17_207  [color=blue, key=0, style=bold];
m17_217 -> m17_218  [key=0, style=solid];
m17_217 -> m17_59  [key=2, style=dotted];
m17_217 -> m17_219  [key=2, style=dotted];
m17_216 -> m17_217  [key=0, style=solid];
m17_218 -> m17_216  [color=blue, key=0, style=bold];
m17_227 -> m17_228  [key=0, style=solid];
m17_227 -> m17_59  [key=2, style=dotted];
m17_227 -> m17_229  [key=2, style=dotted];
m17_226 -> m17_227  [key=0, style=solid];
m17_228 -> m17_226  [color=blue, key=0, style=bold];
m17_237 -> m17_238  [key=0, style=solid];
m17_237 -> m17_59  [key=2, style=dotted];
m17_237 -> m17_60  [key=2, style=dotted];
m17_237 -> m17_240  [color=darkseagreen4, key=1, label=result, style=dashed];
m17_236 -> m17_237  [key=0, style=solid];
m17_238 -> m17_239  [key=0, style=solid];
m17_238 -> m17_240  [key=0, style=solid];
m17_240 -> m17_241  [key=0, style=solid];
m17_239 -> m17_241  [key=0, style=solid];
m17_239 -> m17_242  [key=2, style=dotted];
m17_241 -> m17_236  [color=blue, key=0, style=bold];
m17_250 -> m17_251  [key=0, style=solid];
m17_250 -> m17_59  [key=2, style=dotted];
m17_250 -> m17_60  [key=2, style=dotted];
m17_249 -> m17_250  [key=0, style=solid];
m17_251 -> m17_249  [color=blue, key=0, style=bold];
m17_259 -> m17_260  [key=0, style=solid];
m17_259 -> m17_59  [key=2, style=dotted];
m17_259 -> m17_60  [key=2, style=dotted];
m17_258 -> m17_259  [key=0, style=solid];
m17_260 -> m17_258  [color=blue, key=0, style=bold];
m17_268 -> m17_269  [key=0, style=solid];
m17_268 -> m17_59  [key=2, style=dotted];
m17_268 -> m17_60  [key=2, style=dotted];
m17_268 -> m17_271  [color=darkseagreen4, key=1, label=result, style=dashed];
m17_267 -> m17_268  [key=0, style=solid];
m17_269 -> m17_270  [key=0, style=solid];
m17_269 -> m17_271  [key=0, style=solid];
m17_271 -> m17_272  [key=0, style=solid];
m17_270 -> m17_272  [key=0, style=solid];
m17_270 -> m17_242  [key=2, style=dotted];
m17_272 -> m17_267  [color=blue, key=0, style=bold];
m17_282 -> m17_283  [key=0, style=solid];
m17_282 -> m17_59  [key=2, style=dotted];
m17_282 -> m17_82  [key=2, style=dotted];
m17_281 -> m17_282  [key=0, style=solid];
m17_283 -> m17_281  [color=blue, key=0, style=bold];
m17_291 -> m17_292  [key=0, style=solid];
m17_291 -> m17_59  [key=2, style=dotted];
m17_291 -> m17_60  [key=2, style=dotted];
m17_290 -> m17_291  [key=0, style=solid];
m17_292 -> m17_290  [color=blue, key=0, style=bold];
m17_300 -> m17_301  [key=0, style=solid];
m17_300 -> m17_59  [key=2, style=dotted];
m17_300 -> m17_60  [key=2, style=dotted];
m17_300 -> m17_303  [color=darkseagreen4, key=1, label=result, style=dashed];
m17_299 -> m17_300  [key=0, style=solid];
m17_301 -> m17_302  [key=0, style=solid];
m17_301 -> m17_303  [key=0, style=solid];
m17_303 -> m17_304  [key=0, style=solid];
m17_302 -> m17_304  [key=0, style=solid];
m17_302 -> m17_242  [key=2, style=dotted];
m17_304 -> m17_299  [color=blue, key=0, style=bold];
m17_312 -> m17_313  [key=0, style=solid];
m17_312 -> m17_59  [key=2, style=dotted];
m17_312 -> m17_229  [key=2, style=dotted];
m17_311 -> m17_312  [key=0, style=solid];
m17_313 -> m17_311  [color=blue, key=0, style=bold];
m17_321 -> m17_322  [key=0, style=solid];
m17_321 -> m17_59  [key=2, style=dotted];
m17_321 -> m17_229  [key=2, style=dotted];
m17_322 -> m17_320  [color=blue, key=0, style=bold];
m17_142 -> m17_143  [key=0, style=solid];
m17_142 -> m17_145  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m17_142 -> m17_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_142 -> m17_152  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m17_142 -> m17_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_143 -> m17_144  [key=0, style=solid];
m17_143 -> m17_145  [key=0, style=solid];
m17_145 -> m17_146  [key=0, style=solid];
m17_145 -> m17_147  [key=0, style=solid];
m17_148 -> m17_149  [key=0, style=solid];
m17_148 -> m17_150  [key=2, style=dotted];
m17_148 -> m17_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_144 -> m17_149  [key=0, style=solid];
m17_144 -> n21  [key=2, style=dotted];
m17_146 -> m17_149  [key=0, style=solid];
m17_146 -> n21  [key=2, style=dotted];
m17_147 -> m17_148  [key=0, style=solid];
m17_147 -> m17_153  [color=darkseagreen4, key=1, label=sql, style=dashed];
m17_149 -> m17_142  [color=blue, key=0, style=bold];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_9  [key=2, style=dotted];
m17_7 -> m17_3  [color=darkseagreen4, key=1, label="Hangfire.Client.ClientExceptionContext", style=dashed];
m17_8 -> m17_6  [color=blue, key=0, style=bold];
m17_273 -> m17_274  [key=0, style=solid];
m17_273 -> m17_276  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_273 -> m17_279  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_273 -> m17_282  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_274 -> m17_275  [key=0, style=solid];
m17_274 -> m17_276  [key=0, style=solid];
m17_276 -> m17_277  [key=0, style=solid];
m17_276 -> m17_278  [key=0, style=solid];
m17_279 -> m17_280  [key=0, style=solid];
m17_279 -> m17_45  [key=2, style=dotted];
m17_279 -> m17_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_275 -> m17_280  [key=0, style=solid];
m17_275 -> n21  [key=2, style=dotted];
m17_277 -> m17_280  [key=0, style=solid];
m17_277 -> n21  [key=2, style=dotted];
m17_278 -> m17_279  [key=0, style=solid];
m17_278 -> m17_282  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_280 -> m17_273  [color=blue, key=0, style=bold];
m17_211 -> m17_212  [key=0, style=solid];
m17_211 -> m17_214  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_211 -> m17_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_212 -> m17_213  [key=0, style=solid];
m17_212 -> m17_214  [key=0, style=solid];
m17_214 -> m17_215  [key=0, style=solid];
m17_214 -> m17_45  [key=2, style=dotted];
m17_214 -> m17_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_213 -> m17_215  [key=0, style=solid];
m17_213 -> n21  [key=2, style=dotted];
m17_215 -> m17_211  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [color=green, key=0, style=solid];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m17_0 -> m17_2  [color=green, key=1, label="System.Exception", style=dashed];
m17_1 -> m17_2  [color=green, key=0, style=solid];
m17_1 -> m17_3  [color=green, key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_2 -> m17_4  [color=green, key=0, style=solid];
m17_2 -> n21  [color=green, key=2, style=dotted];
m17_2 -> m17_6  [color=green, key=2, style=dotted];
m17_4 -> m17_0  [color=blue, key=0, style=bold];
m17_121 -> m17_122  [key=0, style=solid];
m17_121 -> m17_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_121 -> m17_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_122 -> m17_123  [key=0, style=solid];
m17_122 -> m17_124  [key=0, style=solid];
m17_124 -> m17_125  [key=0, style=solid];
m17_124 -> m17_45  [key=2, style=dotted];
m17_124 -> m17_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_123 -> m17_125  [key=0, style=solid];
m17_123 -> n21  [key=2, style=dotted];
m17_125 -> m17_121  [color=blue, key=0, style=bold];
m17_284 -> m17_285  [key=0, style=solid];
m17_284 -> m17_288  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_284 -> m17_291  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_285 -> m17_286  [key=0, style=solid];
m17_285 -> m17_287  [key=0, style=solid];
m17_288 -> m17_289  [key=0, style=solid];
m17_288 -> m17_45  [key=2, style=dotted];
m17_288 -> m17_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_286 -> m17_289  [key=0, style=solid];
m17_286 -> n21  [key=2, style=dotted];
m17_287 -> m17_288  [key=0, style=solid];
m17_287 -> m17_291  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_289 -> m17_284  [color=blue, key=0, style=bold];
m17_200 -> m17_201  [key=0, style=solid];
m17_201 -> m17_202  [key=0, style=solid];
m17_201 -> m17_203  [key=0, style=solid];
m17_201 -> m17_205  [key=2, style=dotted];
m17_201 -> m17_201  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_202 -> m17_204  [key=0, style=solid];
m17_202 -> m17_206  [key=2, style=dotted];
m17_203 -> m17_204  [key=0, style=solid];
m17_203 -> m17_107  [key=2, style=dotted];
m17_203 -> m17_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_203 -> m17_208  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_204 -> m17_200  [color=blue, key=0, style=bold];
m17_323 -> m17_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_18  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_42  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_67  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_89  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_105  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_116  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_124  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_136  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_148  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_158  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_178  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_187  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_195  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_203  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_214  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_224  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_234  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_247  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_265  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_288  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_297  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_309  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_323 -> m17_318  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m17_324 -> m17_47  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m17_325 -> m17_47  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_326 -> m17_47  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m17_327 -> m17_47  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m17_328 -> m17_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_328 -> m17_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_328 -> m17_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_329 -> m17_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_330 -> m17_70  [color=darkseagreen4, key=1, label=sql, style=dashed];
m17_331 -> m17_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_332 -> m17_92  [color=darkseagreen4, key=1, label=sql, style=dashed];
m17_333 -> m17_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_334 -> m17_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_335 -> m17_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_336 -> m17_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_337 -> m17_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_338 -> m17_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_339 -> m17_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_340 -> m17_140  [color=darkseagreen4, key=1, label=double, style=dashed];
m17_341 -> m17_140  [color=darkseagreen4, key=1, label=double, style=dashed];
m17_342 -> m17_152  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m17_343 -> m17_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_344 -> m17_153  [color=darkseagreen4, key=1, label=sql, style=dashed];
m17_345 -> m17_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_346 -> m17_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_347 -> m17_182  [color=darkseagreen4, key=1, label=data, style=dashed];
m17_348 -> m17_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_349 -> m17_198  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_350 -> m17_208  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_351 -> m17_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_352 -> m17_227  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_353 -> m17_227  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_354 -> m17_227  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_355 -> m17_227  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_356 -> m17_237  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_357 -> m17_237  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_358 -> m17_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_359 -> m17_250  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_360 -> m17_259  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_361 -> m17_259  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_362 -> m17_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_363 -> m17_268  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_364 -> m17_282  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_365 -> m17_282  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_366 -> m17_282  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_367 -> m17_291  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_368 -> m17_291  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_369 -> m17_300  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_370 -> m17_300  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_371 -> m17_312  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_372 -> m17_312  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_373 -> m17_312  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_374 -> m17_312  [color=darkseagreen4, key=1, label=query, style=dashed];
m17_375 -> m17_321  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_376 -> m17_321  [color=darkseagreen4, key=1, label=query, style=dashed];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_2  [color=darkseagreen4, key=1, label=HttpRequestBase, style=dashed];
m18_0 -> m18_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_7 -> m18_7  [color=green, key=1, label=sbIndex, style=dashed];
m18_7 -> m18_8  [color=green, key=0, style=solid];
m18_4 -> m18_7  [color=green, key=1, label=sbIndex, style=dashed];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_6  [color=darkseagreen4, key=1, label=sbIndex, style=dashed];
m18_6 -> m18_7  [color=green, key=0, style=solid];
m18_6 -> m18_16  [key=2, style=dotted];
m18_8 -> m18_8  [color=darkseagreen4, key=1, label=pathInfoIndex, style=dashed];
m18_8 -> m18_5  [key=0, style=solid];
m18_1 -> m18_4  [color=darkseagreen4, key=1, label=sb, style=dashed];
m18_1 -> m18_6  [color=darkseagreen4, key=1, label=sb, style=dashed];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_14  [key=2, style=dotted];
m18_1 -> m18_5  [color=darkseagreen4, key=1, label=sb, style=dashed];
m18_1 -> m18_9  [color=darkseagreen4, key=1, label=sb, style=dashed];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_8  [color=darkseagreen4, key=1, label=pathInfoIndex, style=dashed];
m18_3 -> m18_5  [color=darkseagreen4, key=1, label=pathInfoIndex, style=dashed];
m18_3 -> m18_2  [color=blue, key=0, style=bold];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_9  [key=0, style=solid];
m18_5 -> m18_15  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_5  [color=darkseagreen4, key=1, label=pathInfo, style=dashed];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_17  [key=2, style=dotted];
m18_9 -> m18_11  [color=darkseagreen4, key=1, label=basePath, style=dashed];
m18_9 -> m18_12  [color=darkseagreen4, key=1, label=basePath, style=dashed];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_19  [key=2, style=dotted];
m18_10 -> m18_12  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_18  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_11  [color=darkseagreen4, key=1, label=basePath, style=dashed];
m18_13 -> m18_0  [color=blue, key=0, style=bold];
m20_23 -> m20_24  [key=0, style=solid];
m20_23 -> m20_25  [color=red, key=1, label=string, style=dashed];
m20_24 -> m20_25  [color=red, key=0, style=solid];
m20_24 -> m20_5  [key=2, style=dotted];
m20_24 -> m20_6  [key=2, style=dotted];
m20_25 -> m20_26  [color=red, key=0, style=solid];
m20_25 -> m20_5  [color=red, key=2, style=dotted];
m20_25 -> m20_11  [color=red, key=2, style=dotted];
m20_26 -> m20_23  [color=blue, key=0, style=bold];
m20_7 -> m20_8  [key=0, style=solid];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_5  [key=2, style=dotted];
m20_8 -> m20_6  [key=2, style=dotted];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_5  [key=2, style=dotted];
m20_9 -> m20_11  [key=2, style=dotted];
m20_10 -> m20_7  [color=blue, key=0, style=bold];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_5  [key=2, style=dotted];
m20_3 -> m20_6  [key=2, style=dotted];
m20_4 -> m20_2  [color=blue, key=0, style=bold];
m20_40 -> m20_41  [color=red, key=0, style=solid];
m20_41 -> m20_42  [color=red, key=0, style=solid];
m20_41 -> m20_5  [color=red, key=2, style=dotted];
m20_41 -> m20_35  [color=red, key=2, style=dotted];
m20_42 -> m20_43  [color=red, key=0, style=solid];
m20_42 -> m20_44  [color=red, key=2, style=dotted];
m20_43 -> m20_40  [color=blue, key=0, style=bold];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_17  [color=red, key=1, label=string, style=dashed];
m20_16 -> m20_17  [color=red, key=0, style=solid];
m20_16 -> m20_6  [key=2, style=dotted];
m20_17 -> m20_18  [color=red, key=0, style=solid];
m20_17 -> m20_5  [color=red, key=2, style=dotted];
m20_17 -> m20_11  [color=red, key=2, style=dotted];
m20_17 -> m20_17  [color=red, key=3, label="Local variable object instance", style=bold];
m20_18 -> m20_15  [color=blue, key=0, style=bold];
m20_37 -> m20_38  [color=red, key=0, style=solid];
m20_38 -> m20_39  [color=red, key=0, style=solid];
m20_38 -> m20_5  [color=red, key=2, style=dotted];
m20_38 -> m20_30  [color=red, key=2, style=dotted];
m20_39 -> m20_37  [color=blue, key=0, style=bold];
m20_12 -> m20_13  [key=0, style=solid];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_5  [key=2, style=dotted];
m20_13 -> m20_11  [key=2, style=dotted];
m20_14 -> m20_12  [color=blue, key=0, style=bold];
m20_31 -> m20_32  [color=red, key=0, style=solid];
m20_32 -> m20_33  [color=red, key=0, style=solid];
m20_32 -> m20_5  [color=red, key=2, style=dotted];
m20_32 -> m20_35  [color=red, key=2, style=dotted];
m20_33 -> m20_34  [color=red, key=0, style=solid];
m20_33 -> m20_36  [color=red, key=2, style=dotted];
m20_34 -> m20_31  [color=blue, key=0, style=bold];
m20_19 -> m20_20  [color=red, key=0, style=solid];
m20_20 -> m20_21  [color=red, key=0, style=solid];
m20_20 -> m20_22  [color=red, key=2, style=dotted];
m20_20 -> m20_6  [color=red, key=2, style=dotted];
m20_21 -> m20_19  [color=blue, key=0, style=bold];
m20_51 -> m20_52  [color=red, key=0, style=solid];
m20_51 -> m20_53  [color=red, key=1, label=int, style=dashed];
m20_52 -> m20_53  [color=red, key=0, style=solid];
m20_52 -> m20_5  [color=red, key=2, style=dotted];
m20_52 -> m20_49  [color=red, key=2, style=dotted];
m20_53 -> m20_54  [color=red, key=0, style=solid];
m20_53 -> m20_50  [color=red, key=2, style=dotted];
m20_54 -> m20_51  [color=blue, key=0, style=bold];
m20_27 -> m20_28  [key=0, style=solid];
m20_28 -> m20_29  [key=0, style=solid];
m20_28 -> m20_5  [key=2, style=dotted];
m20_28 -> m20_30  [key=2, style=dotted];
m20_29 -> m20_27  [color=blue, key=0, style=bold];
m20_45 -> m20_46  [key=0, style=solid];
m20_46 -> m20_47  [key=0, style=solid];
m20_46 -> m20_5  [key=2, style=dotted];
m20_46 -> m20_49  [key=2, style=dotted];
m20_47 -> m20_48  [key=0, style=solid];
m20_47 -> m20_50  [key=2, style=dotted];
m20_48 -> m20_45  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [color=blue, key=0, style=bold];
m22_4 -> m22_5  [key=0, style=solid];
m22_5 -> m22_4  [color=blue, key=0, style=bold];
m22_2 -> m22_3  [key=0, style=solid];
m22_3 -> m22_2  [color=blue, key=0, style=bold];
m24_601 -> m24_602  [key=0, style=solid];
m24_602 -> m24_603  [key=0, style=solid];
m24_602 -> m24_45  [key=2, style=dotted];
m24_602 -> m24_604  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_603 -> m24_601  [color=blue, key=0, style=bold];
m24_789 -> m24_790  [key=0, style=solid];
m24_791 -> m24_792  [key=0, style=solid];
m24_791 -> m24_104  [key=2, style=dotted];
m24_791 -> m24_793  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_790 -> m24_791  [key=0, style=solid];
m24_790 -> m24_563  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_790 -> m24_794  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_792 -> m24_789  [color=blue, key=0, style=bold];
m24_457 -> m24_458  [key=0, style=solid];
m24_458 -> m24_459  [key=0, style=solid];
m24_458 -> m24_45  [key=2, style=dotted];
m24_458 -> m24_460  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_459 -> m24_457  [color=blue, key=0, style=bold];
m24_343 -> m24_344  [key=0, style=solid];
m24_344 -> m24_345  [key=0, style=solid];
m24_344 -> m24_45  [key=2, style=dotted];
m24_344 -> m24_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_345 -> m24_343  [color=blue, key=0, style=bold];
m24_718 -> m24_719  [key=0, style=solid];
m24_719 -> m24_720  [key=0, style=solid];
m24_719 -> m24_45  [key=2, style=dotted];
m24_719 -> m24_721  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_720 -> m24_718  [color=blue, key=0, style=bold];
m24_646 -> m24_647  [key=0, style=solid];
m24_648 -> m24_649  [key=0, style=solid];
m24_648 -> m24_104  [key=2, style=dotted];
m24_648 -> m24_650  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_647 -> m24_648  [key=0, style=solid];
m24_647 -> m24_647  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_647 -> m24_651  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_649 -> m24_646  [color=blue, key=0, style=bold];
m24_843 -> m24_844  [key=0, style=solid];
m24_845 -> m24_846  [key=0, style=solid];
m24_845 -> m24_104  [key=2, style=dotted];
m24_845 -> m24_847  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_844 -> m24_845  [key=0, style=solid];
m24_844 -> m24_844  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_844 -> m24_848  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_846 -> m24_843  [color=blue, key=0, style=bold];
m24_250 -> m24_251  [key=0, style=solid];
m24_251 -> m24_252  [key=0, style=solid];
m24_251 -> m24_45  [key=2, style=dotted];
m24_251 -> m24_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_252 -> m24_250  [color=blue, key=0, style=bold];
m24_322 -> m24_323  [key=0, style=solid];
m24_324 -> m24_325  [key=0, style=solid];
m24_324 -> m24_104  [key=2, style=dotted];
m24_324 -> m24_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_323 -> m24_324  [key=0, style=solid];
m24_323 -> m24_327  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_323 -> m24_323  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_325 -> m24_322  [color=blue, key=0, style=bold];
m24_283 -> m24_284  [key=0, style=solid];
m24_285 -> m24_286  [key=0, style=solid];
m24_285 -> m24_104  [key=2, style=dotted];
m24_285 -> m24_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_284 -> m24_285  [key=0, style=solid];
m24_284 -> m24_261  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_284 -> m24_288  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_286 -> m24_283  [color=blue, key=0, style=bold];
m24_836 -> m24_837  [key=0, style=solid];
m24_837 -> m24_838  [key=0, style=solid];
m24_837 -> m24_45  [key=2, style=dotted];
m24_837 -> m24_839  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_838 -> m24_836  [color=blue, key=0, style=bold];
m24_188 -> m24_189  [key=0, style=solid];
m24_189 -> m24_190  [key=0, style=solid];
m24_189 -> m24_45  [key=2, style=dotted];
m24_189 -> m24_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_190 -> m24_188  [color=blue, key=0, style=bold];
m24_862 -> m24_863  [key=0, style=solid];
m24_863 -> m24_864  [key=0, style=solid];
m24_863 -> m24_45  [key=2, style=dotted];
m24_863 -> m24_865  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_864 -> m24_862  [color=blue, key=0, style=bold];
m24_698 -> m24_699  [key=0, style=solid];
m24_700 -> m24_701  [key=0, style=solid];
m24_700 -> m24_104  [key=2, style=dotted];
m24_700 -> m24_702  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_699 -> m24_700  [key=0, style=solid];
m24_699 -> m24_699  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_699 -> m24_703  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_701 -> m24_698  [color=blue, key=0, style=bold];
m24_260 -> m24_261  [key=0, style=solid];
m24_262 -> m24_263  [key=0, style=solid];
m24_262 -> m24_104  [key=2, style=dotted];
m24_262 -> m24_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_261 -> m24_262  [key=0, style=solid];
m24_261 -> m24_261  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_261 -> m24_265  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_263 -> m24_260  [color=blue, key=0, style=bold];
m24_332 -> m24_333  [key=0, style=solid];
m24_333 -> m24_334  [key=0, style=solid];
m24_333 -> m24_45  [key=2, style=dotted];
m24_333 -> m24_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_334 -> m24_332  [color=blue, key=0, style=bold];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_4  [color=darkseagreen4, key=1, label=provider, style=dashed];
m24_2 -> m24_5  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>", style=dashed];
m24_2 -> m24_7  [key=2, style=dotted];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_8  [key=2, style=dotted];
m24_3 -> m24_9  [key=2, style=dotted];
m24_3 -> m24_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_10  [key=2, style=dotted];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_0  [color=blue, key=0, style=bold];
m24_6 -> m24_2  [color=blue, key=0, style=bold];
m24_409 -> m24_410  [key=0, style=solid];
m24_410 -> m24_411  [key=0, style=solid];
m24_410 -> m24_45  [key=2, style=dotted];
m24_410 -> m24_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_411 -> m24_409  [color=blue, key=0, style=bold];
m24_751 -> m24_752  [key=0, style=solid];
m24_753 -> m24_754  [key=0, style=solid];
m24_753 -> m24_104  [key=2, style=dotted];
m24_753 -> m24_755  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_752 -> m24_753  [key=0, style=solid];
m24_752 -> m24_752  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_752 -> m24_756  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_754 -> m24_751  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [color=green, key=0, style=solid];
m24_1 -> m24_0  [color=blue, key=0, style=bold];
m24_1 -> m24_2  [color=green, key=0, style=solid];
m24_1 -> m24_6  [color=green, key=2, style=dotted];
m24_218 -> m24_219  [key=0, style=solid];
m24_220 -> m24_221  [key=0, style=solid];
m24_220 -> m24_104  [key=2, style=dotted];
m24_220 -> m24_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_219 -> m24_220  [key=0, style=solid];
m24_219 -> m24_206  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_219 -> m24_224  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_221 -> m24_218  [color=blue, key=0, style=bold];
m24_637 -> m24_638  [key=0, style=solid];
m24_639 -> m24_640  [key=0, style=solid];
m24_639 -> m24_104  [key=2, style=dotted];
m24_639 -> m24_641  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_638 -> m24_639  [key=0, style=solid];
m24_638 -> m24_638  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_638 -> m24_642  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_640 -> m24_637  [color=blue, key=0, style=bold];
m24_826 -> m24_827  [key=0, style=solid];
m24_827 -> m24_828  [key=0, style=solid];
m24_827 -> m24_45  [key=2, style=dotted];
m24_827 -> m24_829  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_828 -> m24_826  [color=blue, key=0, style=bold];
m24_381 -> m24_382  [key=0, style=solid];
m24_382 -> m24_383  [key=0, style=solid];
m24_382 -> m24_45  [key=2, style=dotted];
m24_382 -> m24_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_383 -> m24_381  [color=blue, key=0, style=bold];
m24_305 -> m24_306  [key=0, style=solid];
m24_306 -> m24_307  [key=0, style=solid];
m24_306 -> m24_45  [key=2, style=dotted];
m24_306 -> m24_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_307 -> m24_305  [color=blue, key=0, style=bold];
m24_229 -> m24_230  [key=0, style=solid];
m24_231 -> m24_232  [key=0, style=solid];
m24_231 -> m24_104  [key=2, style=dotted];
m24_231 -> m24_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_230 -> m24_231  [key=0, style=solid];
m24_230 -> m24_167  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_230 -> m24_234  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_232 -> m24_229  [color=blue, key=0, style=bold];
m24_869 -> m24_870  [key=0, style=solid];
m24_871 -> m24_872  [key=0, style=solid];
m24_871 -> m24_104  [key=2, style=dotted];
m24_871 -> m24_873  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_870 -> m24_871  [key=0, style=solid];
m24_870 -> m24_870  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_870 -> m24_874  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_872 -> m24_869  [color=blue, key=0, style=bold];
m24_7 -> m24_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m24_7 -> m24_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m24_7 -> m24_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m24_545 -> m24_546  [key=0, style=solid];
m24_546 -> m24_547  [key=0, style=solid];
m24_546 -> m24_45  [key=2, style=dotted];
m24_546 -> m24_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_547 -> m24_545  [color=blue, key=0, style=bold];
m24_490 -> m24_491  [key=0, style=solid];
m24_491 -> m24_492  [key=0, style=solid];
m24_491 -> m24_45  [key=2, style=dotted];
m24_491 -> m24_493  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_492 -> m24_490  [color=blue, key=0, style=bold];
m24_198 -> m24_199  [key=0, style=solid];
m24_199 -> m24_200  [key=0, style=solid];
m24_199 -> m24_45  [key=2, style=dotted];
m24_199 -> m24_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_200 -> m24_198  [color=blue, key=0, style=bold];
m24_555 -> m24_556  [key=0, style=solid];
m24_556 -> m24_557  [key=0, style=solid];
m24_556 -> m24_45  [key=2, style=dotted];
m24_556 -> m24_558  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_557 -> m24_555  [color=blue, key=0, style=bold];
m24_419 -> m24_420  [key=0, style=solid];
m24_421 -> m24_422  [key=0, style=solid];
m24_421 -> m24_104  [key=2, style=dotted];
m24_421 -> m24_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_420 -> m24_421  [key=0, style=solid];
m24_420 -> m24_420  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_420 -> m24_424  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_422 -> m24_419  [color=blue, key=0, style=bold];
m24_15 -> m24_16  [color=green, key=0, style=solid];
m24_16 -> m24_17  [color=green, key=0, style=solid];
m24_16 -> m24_19  [color=green, key=2, style=dotted];
m24_16 -> m24_21  [color=green, key=1, label="lambda expression", style=dashed];
m24_17 -> m24_18  [key=0, style=solid];
m24_17 -> m24_20  [key=2, style=dotted];
m24_18 -> m24_15  [color=blue, key=0, style=bold];
m24_562 -> m24_563  [key=0, style=solid];
m24_564 -> m24_565  [key=0, style=solid];
m24_564 -> m24_104  [key=2, style=dotted];
m24_564 -> m24_566  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_563 -> m24_564  [key=0, style=solid];
m24_563 -> m24_563  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_563 -> m24_567  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_565 -> m24_562  [color=blue, key=0, style=bold];
m24_761 -> m24_762  [key=0, style=solid];
m24_762 -> m24_763  [key=0, style=solid];
m24_762 -> m24_45  [key=2, style=dotted];
m24_762 -> m24_764  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_763 -> m24_761  [color=blue, key=0, style=bold];
m24_772 -> m24_773  [key=0, style=solid];
m24_773 -> m24_774  [key=0, style=solid];
m24_773 -> m24_45  [key=2, style=dotted];
m24_773 -> m24_775  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_774 -> m24_772  [color=blue, key=0, style=bold];
m24_691 -> m24_692  [key=0, style=solid];
m24_692 -> m24_693  [key=0, style=solid];
m24_692 -> m24_45  [key=2, style=dotted];
m24_692 -> m24_694  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_693 -> m24_691  [color=blue, key=0, style=bold];
m24_391 -> m24_392  [key=0, style=solid];
m24_392 -> m24_393  [key=0, style=solid];
m24_392 -> m24_104  [key=2, style=dotted];
m24_392 -> m24_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_393 -> m24_391  [color=blue, key=0, style=bold];
m24_542 -> m24_543  [key=0, style=solid];
m24_21 -> m24_22  [color=green, key=0, style=solid];
m24_22 -> m24_23  [color=green, key=0, style=solid];
m24_22 -> m24_24  [color=green, key=2, style=dotted];
m24_23 -> m24_21  [color=blue, key=0, style=bold];
m24_33 -> m24_34  [key=0, style=solid];
m24_33 -> m24_37  [key=2, style=dotted];
m24_33 -> m24_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_49 -> m24_50  [key=0, style=solid];
m24_49 -> m24_52  [key=2, style=dotted];
m24_50 -> m24_19  [key=2, style=dotted];
m24_50 -> m24_51  [key=0, style=solid];
m24_50 -> m24_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_78 -> m24_19  [key=2, style=dotted];
m24_78 -> m24_79  [key=0, style=solid];
m24_78 -> m24_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_90 -> m24_19  [key=2, style=dotted];
m24_90 -> m24_91  [key=0, style=solid];
m24_90 -> m24_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_152 -> m24_19  [key=2, style=dotted];
m24_152 -> m24_153  [key=0, style=solid];
m24_152 -> m24_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_192 -> m24_19  [key=2, style=dotted];
m24_192 -> m24_193  [key=0, style=solid];
m24_192 -> m24_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_243 -> m24_19  [key=2, style=dotted];
m24_243 -> m24_244  [key=0, style=solid];
m24_243 -> m24_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_254 -> m24_19  [key=2, style=dotted];
m24_254 -> m24_255  [key=0, style=solid];
m24_254 -> m24_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_298 -> m24_19  [key=2, style=dotted];
m24_298 -> m24_299  [key=0, style=solid];
m24_298 -> m24_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_309 -> m24_19  [key=2, style=dotted];
m24_309 -> m24_310  [key=0, style=solid];
m24_309 -> m24_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_327 -> m24_19  [key=2, style=dotted];
m24_327 -> m24_328  [key=0, style=solid];
m24_327 -> m24_131  [key=2, style=dotted];
m24_336 -> m24_19  [key=2, style=dotted];
m24_336 -> m24_337  [key=0, style=solid];
m24_336 -> m24_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_347 -> m24_19  [key=2, style=dotted];
m24_347 -> m24_348  [key=0, style=solid];
m24_347 -> m24_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_373 -> m24_19  [key=2, style=dotted];
m24_373 -> m24_374  [key=0, style=solid];
m24_373 -> m24_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_385 -> m24_19  [key=2, style=dotted];
m24_385 -> m24_386  [key=0, style=solid];
m24_385 -> m24_388  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_413 -> m24_19  [key=2, style=dotted];
m24_413 -> m24_414  [key=0, style=solid];
m24_413 -> m24_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_434 -> m24_19  [key=2, style=dotted];
m24_434 -> m24_435  [key=0, style=solid];
m24_434 -> m24_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_461 -> m24_19  [key=2, style=dotted];
m24_461 -> m24_462  [key=0, style=solid];
m24_461 -> m24_463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_484 -> m24_19  [key=2, style=dotted];
m24_484 -> m24_485  [key=0, style=solid];
m24_484 -> m24_486  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_513 -> m24_19  [key=2, style=dotted];
m24_513 -> m24_514  [key=0, style=solid];
m24_513 -> m24_516  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_524 -> m24_19  [key=2, style=dotted];
m24_524 -> m24_525  [key=0, style=solid];
m24_524 -> m24_527  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_549 -> m24_19  [key=2, style=dotted];
m24_549 -> m24_550  [key=0, style=solid];
m24_549 -> m24_551  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_578 -> m24_19  [key=2, style=dotted];
m24_578 -> m24_579  [key=0, style=solid];
m24_578 -> m24_580  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_605 -> m24_19  [key=2, style=dotted];
m24_605 -> m24_606  [key=0, style=solid];
m24_605 -> m24_607  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_624 -> m24_19  [key=2, style=dotted];
m24_624 -> m24_625  [key=0, style=solid];
m24_624 -> m24_626  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_659 -> m24_19  [key=2, style=dotted];
m24_659 -> m24_660  [key=0, style=solid];
m24_659 -> m24_661  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_685 -> m24_19  [key=2, style=dotted];
m24_685 -> m24_686  [key=0, style=solid];
m24_685 -> m24_687  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_712 -> m24_19  [key=2, style=dotted];
m24_712 -> m24_713  [key=0, style=solid];
m24_712 -> m24_714  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_738 -> m24_19  [key=2, style=dotted];
m24_738 -> m24_739  [key=0, style=solid];
m24_738 -> m24_740  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_765 -> m24_19  [key=2, style=dotted];
m24_765 -> m24_766  [key=0, style=solid];
m24_765 -> m24_768  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_776 -> m24_19  [key=2, style=dotted];
m24_776 -> m24_777  [key=0, style=solid];
m24_776 -> m24_779  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_802 -> m24_19  [key=2, style=dotted];
m24_802 -> m24_803  [key=0, style=solid];
m24_802 -> m24_805  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_830 -> m24_19  [key=2, style=dotted];
m24_830 -> m24_831  [key=0, style=solid];
m24_830 -> m24_832  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_856 -> m24_19  [key=2, style=dotted];
m24_856 -> m24_857  [key=0, style=solid];
m24_856 -> m24_858  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_11 -> m24_12  [key=0, style=solid];
m24_29 -> m24_30  [key=0, style=solid];
m24_29 -> m24_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_30 -> m24_33  [color=darkseagreen4, key=1, label=token, style=dashed];
m24_30 -> m24_31  [key=0, style=solid];
m24_30 -> m24_35  [key=2, style=dotted];
m24_30 -> m24_32  [color=darkseagreen4, key=1, label=token, style=dashed];
m24_30 -> m24_39  [color=darkseagreen4, key=1, label=token, style=dashed];
m24_32 -> m24_33  [key=0, style=solid];
m24_32 -> m24_36  [key=2, style=dotted];
m24_31 -> m24_33  [color=darkseagreen4, key=1, label=queues, style=dashed];
m24_31 -> m24_32  [key=0, style=solid];
m24_31 -> m24_39  [color=darkseagreen4, key=1, label=queues, style=dashed];
m24_34 -> m24_29  [color=blue, key=0, style=bold];
m24_38 -> m24_39  [key=0, style=solid];
m24_46 -> m24_50  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_46 -> m24_47  [key=0, style=solid];
m24_46 -> m24_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_48 -> m24_49  [key=0, style=solid];
m24_48 -> m24_7  [key=2, style=dotted];
m24_59 -> m24_60  [key=0, style=solid];
m24_68 -> m24_69  [key=0, style=solid];
m24_77 -> m24_78  [key=0, style=solid];
m24_77 -> m24_82  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_89 -> m24_90  [key=0, style=solid];
m24_89 -> m24_94  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_105 -> m24_106  [key=0, style=solid];
m24_105 -> m24_107  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_105 -> m24_110  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_105 -> m24_123  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_151 -> m24_152  [key=0, style=solid];
m24_151 -> m24_155  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_161 -> m24_162  [key=0, style=solid];
m24_170 -> m24_171  [key=0, style=solid];
m24_170 -> m24_172  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_170 -> m24_173  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_191 -> m24_192  [key=0, style=solid];
m24_191 -> m24_195  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_201 -> m24_202  [key=0, style=solid];
m24_209 -> m24_210  [key=0, style=solid];
m24_209 -> m24_211  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_209 -> m24_212  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_222 -> m24_223  [key=0, style=solid];
m24_222 -> m24_224  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_222 -> m24_225  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_233 -> m24_234  [key=0, style=solid];
m24_233 -> m24_235  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_242 -> m24_243  [key=0, style=solid];
m24_242 -> m24_247  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_253 -> m24_254  [key=0, style=solid];
m24_253 -> m24_258  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_264 -> m24_265  [key=0, style=solid];
m24_264 -> m24_267  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_264 -> m24_268  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_275 -> m24_276  [key=0, style=solid];
m24_275 -> m24_278  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_275 -> m24_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_275 -> m24_280  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_287 -> m24_288  [key=0, style=solid];
m24_287 -> m24_290  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_287 -> m24_291  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_297 -> m24_298  [key=0, style=solid];
m24_297 -> m24_302  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_308 -> m24_309  [key=0, style=solid];
m24_308 -> m24_313  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_318 -> m24_319  [key=0, style=solid];
m24_326 -> m24_327  [key=0, style=solid];
m24_326 -> m24_328  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_335 -> m24_336  [key=0, style=solid];
m24_335 -> m24_340  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_346 -> m24_347  [key=0, style=solid];
m24_346 -> m24_350  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_355 -> m24_356  [key=0, style=solid];
m24_363 -> m24_364  [key=0, style=solid];
m24_363 -> m24_365  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_372 -> m24_373  [key=0, style=solid];
m24_372 -> m24_377  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_384 -> m24_385  [key=0, style=solid];
m24_384 -> m24_389  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_394 -> m24_395  [key=0, style=solid];
m24_394 -> m24_396  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_394 -> m24_397  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_394 -> m24_402  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_394 -> m24_403  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_412 -> m24_413  [key=0, style=solid];
m24_412 -> m24_416  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_423 -> m24_424  [key=0, style=solid];
m24_423 -> m24_425  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_423 -> m24_426  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_433 -> m24_434  [key=0, style=solid];
m24_433 -> m24_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_444 -> m24_445  [key=0, style=solid];
m24_444 -> m24_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_444 -> m24_447  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_460 -> m24_461  [key=0, style=solid];
m24_460 -> m24_464  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_472 -> m24_473  [key=0, style=solid];
m24_472 -> m24_474  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_472 -> m24_475  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_483 -> m24_484  [key=0, style=solid];
m24_483 -> m24_487  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_493 -> m24_494  [key=0, style=solid];
m24_502 -> m24_503  [key=0, style=solid];
m24_502 -> m24_504  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_512 -> m24_513  [key=0, style=solid];
m24_512 -> m24_517  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_523 -> m24_524  [key=0, style=solid];
m24_523 -> m24_528  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_533 -> m24_534  [key=0, style=solid];
m24_533 -> m24_535  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m24_548 -> m24_549  [key=0, style=solid];
m24_548 -> m24_552  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_558 -> m24_559  [key=0, style=solid];
m24_566 -> m24_567  [key=0, style=solid];
m24_566 -> m24_568  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_577 -> m24_578  [key=0, style=solid];
m24_577 -> m24_581  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_587 -> m24_588  [key=0, style=solid];
m24_595 -> m24_596  [key=0, style=solid];
m24_595 -> m24_597  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_604 -> m24_605  [key=0, style=solid];
m24_604 -> m24_608  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_615 -> m24_616  [key=0, style=solid];
m24_615 -> m24_617  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_623 -> m24_624  [key=0, style=solid];
m24_623 -> m24_627  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_633 -> m24_634  [key=0, style=solid];
m24_641 -> m24_642  [key=0, style=solid];
m24_641 -> m24_643  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_650 -> m24_651  [key=0, style=solid];
m24_650 -> m24_652  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_658 -> m24_659  [key=0, style=solid];
m24_658 -> m24_662  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_668 -> m24_669  [key=0, style=solid];
m24_676 -> m24_677  [key=0, style=solid];
m24_676 -> m24_678  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_684 -> m24_685  [key=0, style=solid];
m24_684 -> m24_688  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_694 -> m24_695  [key=0, style=solid];
m24_702 -> m24_703  [key=0, style=solid];
m24_702 -> m24_704  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_711 -> m24_712  [key=0, style=solid];
m24_711 -> m24_715  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_721 -> m24_722  [key=0, style=solid];
m24_729 -> m24_730  [key=0, style=solid];
m24_729 -> m24_731  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_737 -> m24_738  [key=0, style=solid];
m24_737 -> m24_741  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_747 -> m24_748  [key=0, style=solid];
m24_755 -> m24_756  [key=0, style=solid];
m24_755 -> m24_757  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_764 -> m24_765  [key=0, style=solid];
m24_764 -> m24_769  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_775 -> m24_776  [key=0, style=solid];
m24_775 -> m24_780  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_785 -> m24_786  [key=0, style=solid];
m24_793 -> m24_794  [key=0, style=solid];
m24_793 -> m24_795  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_801 -> m24_802  [key=0, style=solid];
m24_801 -> m24_806  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_812 -> m24_813  [key=0, style=solid];
m24_821 -> m24_822  [key=0, style=solid];
m24_821 -> m24_823  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_829 -> m24_830  [key=0, style=solid];
m24_829 -> m24_833  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_839 -> m24_840  [key=0, style=solid];
m24_847 -> m24_848  [key=0, style=solid];
m24_847 -> m24_849  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_855 -> m24_856  [key=0, style=solid];
m24_855 -> m24_859  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_865 -> m24_866  [key=0, style=solid];
m24_873 -> m24_874  [key=0, style=solid];
m24_873 -> m24_875  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_897 -> m24_898  [key=0, style=solid];
m24_79 -> m24_20  [key=2, style=dotted];
m24_79 -> m24_80  [key=0, style=solid];
m24_91 -> m24_20  [key=2, style=dotted];
m24_91 -> m24_92  [key=0, style=solid];
m24_112 -> m24_20  [key=2, style=dotted];
m24_112 -> m24_113  [key=0, style=solid];
m24_111 -> m24_20  [key=2, style=dotted];
m24_111 -> m24_112  [key=0, style=solid];
m24_111 -> m24_132  [key=2, style=dotted];
m24_113 -> m24_20  [key=2, style=dotted];
m24_113 -> m24_114  [key=0, style=solid];
m24_114 -> m24_20  [key=2, style=dotted];
m24_114 -> m24_115  [key=0, style=solid];
m24_118 -> m24_20  [key=2, style=dotted];
m24_118 -> m24_119  [key=0, style=solid];
m24_119 -> m24_20  [key=2, style=dotted];
m24_119 -> m24_120  [key=0, style=solid];
m24_120 -> m24_20  [key=2, style=dotted];
m24_120 -> m24_121  [key=0, style=solid];
m24_124 -> m24_20  [key=2, style=dotted];
m24_124 -> m24_125  [key=0, style=solid];
m24_125 -> m24_20  [key=2, style=dotted];
m24_125 -> m24_126  [key=0, style=solid];
m24_176 -> m24_20  [key=2, style=dotted];
m24_176 -> m24_177  [key=0, style=solid];
m24_177 -> m24_20  [key=2, style=dotted];
m24_177 -> m24_178  [key=0, style=solid];
m24_214 -> m24_20  [key=2, style=dotted];
m24_214 -> m24_215  [key=0, style=solid];
m24_215 -> m24_20  [key=2, style=dotted];
m24_215 -> m24_216  [key=0, style=solid];
m24_216 -> m24_20  [key=2, style=dotted];
m24_216 -> m24_217  [key=0, style=solid];
m24_227 -> m24_20  [key=2, style=dotted];
m24_227 -> m24_228  [key=0, style=solid];
m24_244 -> m24_20  [key=2, style=dotted];
m24_244 -> m24_245  [key=0, style=solid];
m24_255 -> m24_20  [key=2, style=dotted];
m24_255 -> m24_256  [key=0, style=solid];
m24_269 -> m24_20  [key=2, style=dotted];
m24_269 -> m24_270  [key=0, style=solid];
m24_281 -> m24_20  [key=2, style=dotted];
m24_281 -> m24_282  [key=0, style=solid];
m24_292 -> m24_20  [key=2, style=dotted];
m24_292 -> m24_293  [key=0, style=solid];
m24_299 -> m24_20  [key=2, style=dotted];
m24_299 -> m24_300  [key=0, style=solid];
m24_310 -> m24_20  [key=2, style=dotted];
m24_310 -> m24_311  [key=0, style=solid];
m24_329 -> m24_20  [key=2, style=dotted];
m24_329 -> m24_330  [key=0, style=solid];
m24_337 -> m24_20  [key=2, style=dotted];
m24_337 -> m24_338  [key=0, style=solid];
m24_366 -> m24_20  [key=2, style=dotted];
m24_366 -> m24_367  [key=0, style=solid];
m24_374 -> m24_20  [key=2, style=dotted];
m24_374 -> m24_375  [key=0, style=solid];
m24_386 -> m24_20  [key=2, style=dotted];
m24_386 -> m24_387  [key=0, style=solid];
m24_398 -> m24_20  [key=2, style=dotted];
m24_398 -> m24_399  [key=0, style=solid];
m24_404 -> m24_20  [key=2, style=dotted];
m24_404 -> m24_405  [key=0, style=solid];
m24_449 -> m24_20  [key=2, style=dotted];
m24_449 -> m24_450  [key=0, style=solid];
m24_476 -> m24_20  [key=2, style=dotted];
m24_476 -> m24_477  [key=0, style=solid];
m24_496 -> m24_20  [key=2, style=dotted];
m24_496 -> m24_497  [key=0, style=solid];
m24_505 -> m24_20  [key=2, style=dotted];
m24_505 -> m24_506  [key=0, style=solid];
m24_514 -> m24_20  [key=2, style=dotted];
m24_514 -> m24_515  [key=0, style=solid];
m24_525 -> m24_20  [key=2, style=dotted];
m24_525 -> m24_526  [key=0, style=solid];
m24_536 -> m24_20  [key=2, style=dotted];
m24_536 -> m24_537  [key=0, style=solid];
m24_537 -> m24_20  [key=2, style=dotted];
m24_537 -> m24_538  [key=0, style=solid];
m24_570 -> m24_20  [key=2, style=dotted];
m24_570 -> m24_571  [key=0, style=solid];
m24_571 -> m24_20  [key=2, style=dotted];
m24_571 -> m24_572  [key=0, style=solid];
m24_572 -> m24_20  [key=2, style=dotted];
m24_572 -> m24_573  [key=0, style=solid];
m24_589 -> m24_20  [key=2, style=dotted];
m24_589 -> m24_590  [key=0, style=solid];
m24_598 -> m24_20  [key=2, style=dotted];
m24_598 -> m24_599  [key=0, style=solid];
m24_618 -> m24_20  [key=2, style=dotted];
m24_618 -> m24_619  [key=0, style=solid];
m24_635 -> m24_20  [key=2, style=dotted];
m24_635 -> m24_636  [key=0, style=solid];
m24_644 -> m24_20  [key=2, style=dotted];
m24_644 -> m24_645  [key=0, style=solid];
m24_653 -> m24_20  [key=2, style=dotted];
m24_653 -> m24_654  [key=0, style=solid];
m24_670 -> m24_20  [key=2, style=dotted];
m24_670 -> m24_671  [key=0, style=solid];
m24_679 -> m24_20  [key=2, style=dotted];
m24_679 -> m24_680  [key=0, style=solid];
m24_723 -> m24_20  [key=2, style=dotted];
m24_723 -> m24_724  [key=0, style=solid];
m24_732 -> m24_20  [key=2, style=dotted];
m24_732 -> m24_733  [key=0, style=solid];
m24_766 -> m24_20  [key=2, style=dotted];
m24_766 -> m24_767  [key=0, style=solid];
m24_777 -> m24_20  [key=2, style=dotted];
m24_777 -> m24_778  [key=0, style=solid];
m24_796 -> m24_20  [key=2, style=dotted];
m24_796 -> m24_797  [key=0, style=solid];
m24_803 -> m24_20  [key=2, style=dotted];
m24_803 -> m24_804  [key=0, style=solid];
m24_824 -> m24_20  [key=2, style=dotted];
m24_824 -> m24_825  [key=0, style=solid];
m24_850 -> m24_20  [key=2, style=dotted];
m24_850 -> m24_851  [key=0, style=solid];
m24_47 -> m24_50  [color=darkseagreen4, key=1, label=token, style=dashed];
m24_47 -> m24_48  [key=0, style=solid];
m24_47 -> m24_35  [key=2, style=dotted];
m24_47 -> m24_54  [color=darkseagreen4, key=1, label=token, style=dashed];
m24_51 -> m24_46  [color=blue, key=0, style=bold];
m24_53 -> m24_54  [key=0, style=solid];
m24_81 -> m24_82  [key=0, style=solid];
m24_93 -> m24_94  [key=0, style=solid];
m24_153 -> m24_151  [color=blue, key=0, style=bold];
m24_154 -> m24_155  [key=0, style=solid];
m24_193 -> m24_191  [color=blue, key=0, style=bold];
m24_194 -> m24_195  [key=0, style=solid];
m24_246 -> m24_247  [key=0, style=solid];
m24_257 -> m24_258  [key=0, style=solid];
m24_301 -> m24_302  [key=0, style=solid];
m24_312 -> m24_313  [key=0, style=solid];
m24_328 -> m24_329  [key=0, style=solid];
m24_328 -> m24_132  [key=2, style=dotted];
m24_328 -> m24_331  [key=2, style=dotted];
m24_339 -> m24_340  [key=0, style=solid];
m24_348 -> m24_346  [color=blue, key=0, style=bold];
m24_349 -> m24_350  [key=0, style=solid];
m24_376 -> m24_377  [key=0, style=solid];
m24_388 -> m24_389  [key=0, style=solid];
m24_414 -> m24_412  [color=blue, key=0, style=bold];
m24_415 -> m24_416  [key=0, style=solid];
m24_435 -> m24_433  [color=blue, key=0, style=bold];
m24_436 -> m24_437  [key=0, style=solid];
m24_462 -> m24_460  [color=blue, key=0, style=bold];
m24_463 -> m24_464  [key=0, style=solid];
m24_485 -> m24_483  [color=blue, key=0, style=bold];
m24_486 -> m24_487  [key=0, style=solid];
m24_516 -> m24_517  [key=0, style=solid];
m24_527 -> m24_528  [key=0, style=solid];
m24_550 -> m24_548  [color=blue, key=0, style=bold];
m24_551 -> m24_552  [key=0, style=solid];
m24_579 -> m24_577  [color=blue, key=0, style=bold];
m24_580 -> m24_581  [key=0, style=solid];
m24_606 -> m24_604  [color=blue, key=0, style=bold];
m24_607 -> m24_608  [key=0, style=solid];
m24_625 -> m24_623  [color=blue, key=0, style=bold];
m24_626 -> m24_627  [key=0, style=solid];
m24_660 -> m24_658  [color=blue, key=0, style=bold];
m24_661 -> m24_662  [key=0, style=solid];
m24_686 -> m24_684  [color=blue, key=0, style=bold];
m24_687 -> m24_688  [key=0, style=solid];
m24_713 -> m24_711  [color=blue, key=0, style=bold];
m24_714 -> m24_715  [key=0, style=solid];
m24_739 -> m24_737  [color=blue, key=0, style=bold];
m24_740 -> m24_741  [key=0, style=solid];
m24_768 -> m24_769  [key=0, style=solid];
m24_779 -> m24_780  [key=0, style=solid];
m24_805 -> m24_806  [key=0, style=solid];
m24_831 -> m24_829  [color=blue, key=0, style=bold];
m24_832 -> m24_833  [key=0, style=solid];
m24_857 -> m24_855  [color=blue, key=0, style=bold];
m24_858 -> m24_859  [key=0, style=solid];
m24_13 -> m24_11  [color=blue, key=0, style=bold];
m24_12 -> m24_13  [key=0, style=solid];
m24_12 -> m24_14  [key=2, style=dotted];
m24_39 -> m24_40  [key=0, style=solid];
m24_39 -> m24_41  [key=2, style=dotted];
m24_40 -> m24_38  [color=blue, key=0, style=bold];
m24_54 -> m24_36  [key=2, style=dotted];
m24_54 -> m24_55  [key=0, style=solid];
m24_62 -> m24_59  [color=blue, key=0, style=bold];
m24_60 -> m24_61  [key=0, style=solid];
m24_60 -> m24_63  [key=2, style=dotted];
m24_71 -> m24_68  [color=blue, key=0, style=bold];
m24_69 -> m24_70  [key=0, style=solid];
m24_69 -> m24_72  [key=2, style=dotted];
m24_69 -> m24_73  [key=2, style=dotted];
m24_80 -> m24_77  [color=blue, key=0, style=bold];
m24_82 -> m24_83  [key=0, style=solid];
m24_82 -> m24_84  [key=2, style=dotted];
m24_82 -> m24_85  [key=2, style=dotted];
m24_98 -> m24_100  [key=2, style=dotted];
m24_98 -> m24_99  [key=0, style=solid];
m24_140 -> m24_100  [key=2, style=dotted];
m24_140 -> m24_141  [key=0, style=solid];
m24_186 -> m24_100  [key=2, style=dotted];
m24_186 -> m24_187  [key=0, style=solid];
m24_92 -> m24_89  [color=blue, key=0, style=bold];
m24_94 -> m24_95  [key=0, style=solid];
m24_94 -> m24_96  [key=2, style=dotted];
m24_94 -> m24_85  [key=2, style=dotted];
m24_94 -> m24_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_126 -> m24_105  [color=blue, key=0, style=bold];
m24_106 -> m24_112  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m24_106 -> m24_107  [key=0, style=solid];
m24_106 -> m24_127  [key=2, style=dotted];
m24_106 -> m24_121  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m24_106 -> m24_122  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m24_107 -> m24_111  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m24_107 -> m24_108  [key=0, style=solid];
m24_107 -> m24_96  [key=2, style=dotted];
m24_107 -> m24_84  [key=2, style=dotted];
m24_107 -> m24_128  [key=2, style=dotted];
m24_107 -> m24_85  [key=2, style=dotted];
m24_107 -> m24_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_107 -> m24_109  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m24_107 -> m24_123  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m24_110 -> m24_112  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m24_110 -> m24_111  [key=0, style=solid];
m24_110 -> m24_113  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m24_110 -> m24_114  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m24_110 -> m24_131  [key=2, style=dotted];
m24_110 -> m24_130  [key=2, style=dotted];
m24_110 -> m24_115  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m24_110 -> m24_116  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m24_110 -> m24_121  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m24_110 -> m24_122  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m24_123 -> m24_124  [key=0, style=solid];
m24_123 -> m24_125  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_123 -> m24_130  [key=2, style=dotted];
m24_123 -> m24_138  [key=2, style=dotted];
m24_123 -> m24_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_123 -> m24_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_155 -> m24_156  [key=0, style=solid];
m24_155 -> m24_157  [key=2, style=dotted];
m24_164 -> m24_161  [color=blue, key=0, style=bold];
m24_162 -> m24_163  [key=0, style=solid];
m24_162 -> m24_157  [key=2, style=dotted];
m24_172 -> m24_131  [key=2, style=dotted];
m24_172 -> m24_173  [key=0, style=solid];
m24_172 -> m24_182  [key=2, style=dotted];
m24_172 -> m24_183  [key=2, style=dotted];
m24_172 -> m24_130  [key=2, style=dotted];
m24_181 -> m24_170  [color=blue, key=0, style=bold];
m24_171 -> m24_172  [key=0, style=solid];
m24_171 -> m24_96  [key=2, style=dotted];
m24_171 -> m24_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_173 -> m24_176  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_173 -> m24_177  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_173 -> m24_174  [key=0, style=solid];
m24_173 -> d42  [key=2, style=dotted];
m24_173 -> m24_157  [key=2, style=dotted];
m24_173 -> m24_175  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_173 -> m24_178  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_173 -> m24_179  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_173 -> m24_180  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_195 -> m24_196  [key=0, style=solid];
m24_195 -> m24_197  [key=2, style=dotted];
m24_204 -> m24_201  [color=blue, key=0, style=bold];
m24_202 -> m24_203  [key=0, style=solid];
m24_202 -> m24_197  [key=2, style=dotted];
m24_211 -> m24_131  [key=2, style=dotted];
m24_211 -> m24_212  [key=0, style=solid];
m24_211 -> m24_183  [key=2, style=dotted];
m24_211 -> m24_130  [key=2, style=dotted];
m24_217 -> m24_209  [color=blue, key=0, style=bold];
m24_210 -> m24_211  [key=0, style=solid];
m24_210 -> m24_84  [key=2, style=dotted];
m24_212 -> m24_214  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_212 -> m24_215  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_212 -> m24_216  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_212 -> m24_213  [key=0, style=solid];
m24_212 -> d42  [key=2, style=dotted];
m24_212 -> m24_197  [key=2, style=dotted];
m24_224 -> m24_131  [key=2, style=dotted];
m24_224 -> m24_225  [key=0, style=solid];
m24_224 -> m24_183  [key=2, style=dotted];
m24_224 -> m24_130  [key=2, style=dotted];
m24_228 -> m24_222  [color=blue, key=0, style=bold];
m24_223 -> m24_224  [key=0, style=solid];
m24_223 -> m24_84  [key=2, style=dotted];
m24_225 -> m24_227  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_225 -> m24_226  [key=0, style=solid];
m24_225 -> d42  [key=2, style=dotted];
m24_225 -> m24_197  [key=2, style=dotted];
m24_234 -> m24_131  [key=2, style=dotted];
m24_234 -> m24_235  [key=0, style=solid];
m24_234 -> m24_238  [key=2, style=dotted];
m24_234 -> m24_183  [key=2, style=dotted];
m24_234 -> m24_130  [key=2, style=dotted];
m24_237 -> m24_233  [color=blue, key=0, style=bold];
m24_235 -> m24_236  [key=0, style=solid];
m24_235 -> d42  [key=2, style=dotted];
m24_235 -> m24_157  [key=2, style=dotted];
m24_245 -> m24_242  [color=blue, key=0, style=bold];
m24_247 -> m24_248  [key=0, style=solid];
m24_247 -> m24_249  [key=2, style=dotted];
m24_256 -> m24_253  [color=blue, key=0, style=bold];
m24_258 -> m24_259  [key=0, style=solid];
m24_258 -> m24_249  [key=2, style=dotted];
m24_265 -> m24_131  [key=2, style=dotted];
m24_265 -> m24_266  [key=0, style=solid];
m24_265 -> m24_130  [key=2, style=dotted];
m24_270 -> m24_264  [color=blue, key=0, style=bold];
m24_267 -> m24_268  [key=0, style=solid];
m24_267 -> m24_249  [key=2, style=dotted];
m24_268 -> m24_269  [key=0, style=solid];
m24_268 -> m24_131  [key=2, style=dotted];
m24_268 -> m24_130  [key=2, style=dotted];
m24_276 -> m24_131  [key=2, style=dotted];
m24_276 -> m24_277  [key=0, style=solid];
m24_276 -> m24_130  [key=2, style=dotted];
m24_282 -> m24_275  [color=blue, key=0, style=bold];
m24_278 -> m24_279  [key=0, style=solid];
m24_278 -> m24_249  [key=2, style=dotted];
m24_279 -> m24_280  [key=0, style=solid];
m24_279 -> m24_249  [key=2, style=dotted];
m24_280 -> m24_281  [key=0, style=solid];
m24_280 -> m24_131  [key=2, style=dotted];
m24_280 -> m24_130  [key=2, style=dotted];
m24_288 -> m24_131  [key=2, style=dotted];
m24_288 -> m24_289  [key=0, style=solid];
m24_288 -> m24_130  [key=2, style=dotted];
m24_293 -> m24_287  [color=blue, key=0, style=bold];
m24_290 -> m24_291  [key=0, style=solid];
m24_290 -> m24_249  [key=2, style=dotted];
m24_291 -> m24_292  [key=0, style=solid];
m24_291 -> m24_131  [key=2, style=dotted];
m24_291 -> m24_130  [key=2, style=dotted];
m24_300 -> m24_297  [color=blue, key=0, style=bold];
m24_302 -> m24_303  [key=0, style=solid];
m24_302 -> m24_304  [key=2, style=dotted];
m24_311 -> m24_308  [color=blue, key=0, style=bold];
m24_313 -> m24_314  [key=0, style=solid];
m24_313 -> m24_304  [key=2, style=dotted];
m24_321 -> m24_318  [color=blue, key=0, style=bold];
m24_319 -> m24_320  [key=0, style=solid];
m24_319 -> m24_304  [key=2, style=dotted];
m24_330 -> m24_326  [color=blue, key=0, style=bold];
m24_338 -> m24_335  [color=blue, key=0, style=bold];
m24_340 -> m24_341  [key=0, style=solid];
m24_340 -> m24_342  [key=2, style=dotted];
m24_350 -> m24_351  [key=0, style=solid];
m24_350 -> m24_342  [key=2, style=dotted];
m24_358 -> m24_355  [color=blue, key=0, style=bold];
m24_356 -> m24_357  [key=0, style=solid];
m24_356 -> m24_342  [key=2, style=dotted];
m24_364 -> m24_365  [key=0, style=solid];
m24_364 -> m24_368  [key=2, style=dotted];
m24_367 -> m24_363  [color=blue, key=0, style=bold];
m24_365 -> m24_366  [key=0, style=solid];
m24_365 -> m24_342  [key=2, style=dotted];
m24_375 -> m24_372  [color=blue, key=0, style=bold];
m24_377 -> m24_378  [key=0, style=solid];
m24_377 -> m24_379  [key=2, style=dotted];
m24_377 -> m24_380  [key=2, style=dotted];
m24_387 -> m24_384  [color=blue, key=0, style=bold];
m24_389 -> m24_390  [key=0, style=solid];
m24_389 -> m24_380  [key=2, style=dotted];
m24_406 -> m24_394  [color=blue, key=0, style=bold];
m24_395 -> m24_396  [key=0, style=solid];
m24_395 -> m24_379  [key=2, style=dotted];
m24_396 -> m24_397  [key=0, style=solid];
m24_396 -> m24_380  [key=2, style=dotted];
m24_397 -> m24_398  [key=0, style=solid];
m24_397 -> m24_131  [key=2, style=dotted];
m24_397 -> m24_130  [key=2, style=dotted];
m24_397 -> m24_399  [color=darkseagreen4, key=1, label=server, style=dashed];
m24_397 -> m24_400  [color=darkseagreen4, key=1, label=server, style=dashed];
m24_402 -> m24_403  [key=0, style=solid];
m24_402 -> m24_380  [key=2, style=dotted];
m24_403 -> m24_404  [key=0, style=solid];
m24_403 -> m24_131  [key=2, style=dotted];
m24_403 -> m24_130  [key=2, style=dotted];
m24_403 -> m24_405  [color=darkseagreen4, key=1, label=sameServer, style=dashed];
m24_416 -> m24_417  [key=0, style=solid];
m24_416 -> m24_418  [key=2, style=dotted];
m24_424 -> m24_425  [key=0, style=solid];
m24_424 -> m24_368  [key=2, style=dotted];
m24_428 -> m24_423  [color=blue, key=0, style=bold];
m24_425 -> m24_426  [key=0, style=solid];
m24_425 -> m24_418  [key=2, style=dotted];
m24_426 -> m24_131  [key=2, style=dotted];
m24_426 -> m24_427  [key=0, style=solid];
m24_426 -> m24_130  [key=2, style=dotted];
m24_437 -> m24_438  [key=0, style=solid];
m24_437 -> m24_439  [key=2, style=dotted];
m24_445 -> m24_446  [key=0, style=solid];
m24_445 -> m24_368  [key=2, style=dotted];
m24_450 -> m24_444  [color=blue, key=0, style=bold];
m24_446 -> m24_447  [key=0, style=solid];
m24_446 -> m24_439  [key=2, style=dotted];
m24_447 -> m24_449  [color=darkseagreen4, key=1, label=servers, style=dashed];
m24_447 -> m24_448  [key=0, style=solid];
m24_447 -> m24_130  [key=2, style=dotted];
m24_447 -> m24_138  [key=2, style=dotted];
m24_447 -> m24_451  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_447 -> m24_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_464 -> m24_465  [key=0, style=solid];
m24_464 -> m24_466  [key=2, style=dotted];
m24_464 -> m24_467  [key=2, style=dotted];
m24_473 -> m24_474  [key=0, style=solid];
m24_473 -> m24_135  [key=2, style=dotted];
m24_473 -> m24_478  [key=2, style=dotted];
m24_473 -> m24_368  [key=2, style=dotted];
m24_477 -> m24_472  [color=blue, key=0, style=bold];
m24_474 -> m24_475  [key=0, style=solid];
m24_474 -> m24_479  [key=2, style=dotted];
m24_474 -> m24_467  [key=2, style=dotted];
m24_475 -> m24_476  [key=0, style=solid];
m24_475 -> m24_131  [key=2, style=dotted];
m24_475 -> m24_130  [key=2, style=dotted];
m24_487 -> m24_488  [key=0, style=solid];
m24_487 -> m24_489  [key=2, style=dotted];
m24_497 -> m24_493  [color=blue, key=0, style=bold];
m24_494 -> m24_496  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_494 -> m24_495  [key=0, style=solid];
m24_494 -> m24_489  [key=2, style=dotted];
m24_503 -> m24_504  [key=0, style=solid];
m24_503 -> m24_368  [key=2, style=dotted];
m24_508 -> m24_502  [color=blue, key=0, style=bold];
m24_504 -> m24_505  [key=0, style=solid];
m24_504 -> m24_489  [key=2, style=dotted];
m24_504 -> m24_506  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_504 -> m24_507  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_515 -> m24_512  [color=blue, key=0, style=bold];
m24_517 -> m24_518  [key=0, style=solid];
m24_517 -> m24_84  [key=2, style=dotted];
m24_517 -> m24_519  [key=2, style=dotted];
m24_526 -> m24_523  [color=blue, key=0, style=bold];
m24_528 -> m24_529  [key=0, style=solid];
m24_528 -> m24_519  [key=2, style=dotted];
m24_538 -> m24_533  [color=blue, key=0, style=bold];
m24_534 -> m24_535  [key=0, style=solid];
m24_534 -> m24_84  [key=2, style=dotted];
m24_534 -> m24_519  [key=2, style=dotted];
m24_535 -> m24_536  [key=0, style=solid];
m24_535 -> m24_537  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_535 -> m24_130  [key=2, style=dotted];
m24_535 -> m24_138  [key=2, style=dotted];
m24_535 -> m24_539  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_535 -> m24_542  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_552 -> m24_553  [key=0, style=solid];
m24_552 -> m24_554  [key=2, style=dotted];
m24_561 -> m24_558  [color=blue, key=0, style=bold];
m24_559 -> m24_560  [key=0, style=solid];
m24_559 -> m24_554  [key=2, style=dotted];
m24_567 -> m24_568  [key=0, style=solid];
m24_567 -> m24_368  [key=2, style=dotted];
m24_573 -> m24_566  [color=blue, key=0, style=bold];
m24_568 -> m24_570  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_568 -> m24_571  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_568 -> m24_572  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_568 -> m24_569  [key=0, style=solid];
m24_568 -> m24_554  [key=2, style=dotted];
m24_581 -> m24_582  [key=0, style=solid];
m24_581 -> m24_583  [key=2, style=dotted];
m24_590 -> m24_587  [color=blue, key=0, style=bold];
m24_588 -> m24_589  [key=0, style=solid];
m24_588 -> m24_583  [key=2, style=dotted];
m24_596 -> m24_597  [key=0, style=solid];
m24_596 -> m24_600  [key=2, style=dotted];
m24_596 -> m24_368  [key=2, style=dotted];
m24_599 -> m24_595  [color=blue, key=0, style=bold];
m24_597 -> m24_598  [key=0, style=solid];
m24_597 -> m24_583  [key=2, style=dotted];
m24_608 -> m24_609  [key=0, style=solid];
m24_608 -> m24_610  [key=2, style=dotted];
m24_616 -> m24_617  [key=0, style=solid];
m24_616 -> m24_600  [key=2, style=dotted];
m24_616 -> m24_368  [key=2, style=dotted];
m24_619 -> m24_615  [color=blue, key=0, style=bold];
m24_617 -> m24_618  [key=0, style=solid];
m24_617 -> m24_610  [key=2, style=dotted];
m24_627 -> m24_628  [key=0, style=solid];
m24_627 -> m24_629  [key=2, style=dotted];
m24_636 -> m24_633  [color=blue, key=0, style=bold];
m24_634 -> m24_635  [key=0, style=solid];
m24_634 -> m24_629  [key=2, style=dotted];
m24_642 -> m24_643  [key=0, style=solid];
m24_642 -> m24_368  [key=2, style=dotted];
m24_645 -> m24_641  [color=blue, key=0, style=bold];
m24_643 -> m24_644  [key=0, style=solid];
m24_643 -> m24_629  [key=2, style=dotted];
m24_651 -> m24_652  [key=0, style=solid];
m24_651 -> m24_368  [key=2, style=dotted];
m24_654 -> m24_650  [color=blue, key=0, style=bold];
m24_652 -> m24_653  [key=0, style=solid];
m24_652 -> m24_629  [key=2, style=dotted];
m24_662 -> m24_663  [key=0, style=solid];
m24_662 -> m24_664  [key=2, style=dotted];
m24_671 -> m24_668  [color=blue, key=0, style=bold];
m24_669 -> m24_670  [key=0, style=solid];
m24_669 -> m24_664  [key=2, style=dotted];
m24_677 -> m24_678  [key=0, style=solid];
m24_677 -> m24_368  [key=2, style=dotted];
m24_680 -> m24_676  [color=blue, key=0, style=bold];
m24_678 -> m24_679  [key=0, style=solid];
m24_678 -> m24_664  [key=2, style=dotted];
m24_688 -> m24_689  [key=0, style=solid];
m24_688 -> m24_690  [key=2, style=dotted];
m24_697 -> m24_694  [color=blue, key=0, style=bold];
m24_695 -> m24_696  [key=0, style=solid];
m24_695 -> m24_690  [key=2, style=dotted];
m24_703 -> m24_704  [key=0, style=solid];
m24_703 -> m24_478  [key=2, style=dotted];
m24_703 -> m24_368  [key=2, style=dotted];
m24_707 -> m24_702  [color=blue, key=0, style=bold];
m24_704 -> m24_705  [key=0, style=solid];
m24_704 -> m24_690  [key=2, style=dotted];
m24_704 -> m24_706  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_715 -> m24_716  [key=0, style=solid];
m24_715 -> m24_717  [key=2, style=dotted];
m24_724 -> m24_721  [color=blue, key=0, style=bold];
m24_722 -> m24_723  [key=0, style=solid];
m24_722 -> m24_717  [key=2, style=dotted];
m24_730 -> m24_731  [key=0, style=solid];
m24_730 -> m24_368  [key=2, style=dotted];
m24_733 -> m24_729  [color=blue, key=0, style=bold];
m24_731 -> m24_732  [key=0, style=solid];
m24_731 -> m24_717  [key=2, style=dotted];
m24_741 -> m24_742  [key=0, style=solid];
m24_741 -> m24_743  [key=2, style=dotted];
m24_750 -> m24_747  [color=blue, key=0, style=bold];
m24_748 -> m24_749  [key=0, style=solid];
m24_748 -> m24_743  [key=2, style=dotted];
m24_756 -> m24_757  [key=0, style=solid];
m24_756 -> m24_478  [key=2, style=dotted];
m24_756 -> m24_368  [key=2, style=dotted];
m24_760 -> m24_755  [color=blue, key=0, style=bold];
m24_757 -> m24_758  [key=0, style=solid];
m24_757 -> m24_743  [key=2, style=dotted];
m24_757 -> m24_759  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_767 -> m24_764  [color=blue, key=0, style=bold];
m24_769 -> m24_770  [key=0, style=solid];
m24_769 -> m24_771  [key=2, style=dotted];
m24_778 -> m24_775  [color=blue, key=0, style=bold];
m24_780 -> m24_781  [key=0, style=solid];
m24_780 -> m24_771  [key=2, style=dotted];
m24_788 -> m24_785  [color=blue, key=0, style=bold];
m24_786 -> m24_787  [key=0, style=solid];
m24_786 -> m24_771  [key=2, style=dotted];
m24_794 -> m24_795  [key=0, style=solid];
m24_794 -> m24_368  [key=2, style=dotted];
m24_797 -> m24_793  [color=blue, key=0, style=bold];
m24_795 -> m24_796  [key=0, style=solid];
m24_795 -> m24_771  [key=2, style=dotted];
m24_804 -> m24_801  [color=blue, key=0, style=bold];
m24_806 -> m24_807  [key=0, style=solid];
m24_806 -> m24_808  [key=2, style=dotted];
m24_815 -> m24_812  [color=blue, key=0, style=bold];
m24_813 -> m24_814  [key=0, style=solid];
m24_813 -> m24_808  [key=2, style=dotted];
m24_822 -> m24_823  [key=0, style=solid];
m24_822 -> m24_368  [key=2, style=dotted];
m24_825 -> m24_821  [color=blue, key=0, style=bold];
m24_823 -> m24_824  [key=0, style=solid];
m24_823 -> m24_808  [key=2, style=dotted];
m24_833 -> m24_834  [key=0, style=solid];
m24_833 -> m24_835  [key=2, style=dotted];
m24_842 -> m24_839  [color=blue, key=0, style=bold];
m24_840 -> m24_841  [key=0, style=solid];
m24_840 -> m24_835  [key=2, style=dotted];
m24_848 -> m24_849  [key=0, style=solid];
m24_848 -> m24_368  [key=2, style=dotted];
m24_851 -> m24_847  [color=blue, key=0, style=bold];
m24_849 -> m24_850  [key=0, style=solid];
m24_849 -> m24_835  [key=2, style=dotted];
m24_859 -> m24_860  [key=0, style=solid];
m24_859 -> m24_861  [key=2, style=dotted];
m24_868 -> m24_865  [color=blue, key=0, style=bold];
m24_866 -> m24_867  [key=0, style=solid];
m24_866 -> m24_861  [key=2, style=dotted];
m24_874 -> m24_875  [key=0, style=solid];
m24_874 -> m24_136  [key=2, style=dotted];
m24_874 -> m24_368  [key=2, style=dotted];
m24_878 -> m24_873  [color=blue, key=0, style=bold];
m24_875 -> m24_876  [key=0, style=solid];
m24_875 -> m24_861  [key=2, style=dotted];
m24_875 -> m24_877  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_899 -> m24_897  [color=blue, key=0, style=bold];
m24_898 -> m24_899  [key=0, style=solid];
m24_115 -> m24_116  [key=0, style=solid];
m24_115 -> m24_133  [key=2, style=dotted];
m24_115 -> m24_117  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m24_117 -> m24_118  [key=0, style=solid];
m24_117 -> m24_119  [color=darkseagreen4, key=1, label=job, style=dashed];
m24_117 -> m24_120  [color=darkseagreen4, key=1, label=job, style=dashed];
m24_117 -> m24_134  [key=2, style=dotted];
m24_121 -> m24_122  [key=0, style=solid];
m24_121 -> m24_135  [key=2, style=dotted];
m24_121 -> m24_136  [key=2, style=dotted];
m24_121 -> m24_137  [key=2, style=dotted];
m24_175 -> m24_176  [key=0, style=solid];
m24_175 -> m24_64  [key=2, style=dotted];
m24_178 -> m24_179  [key=0, style=solid];
m24_178 -> m24_165  [key=2, style=dotted];
m24_213 -> m24_214  [key=0, style=solid];
m24_213 -> m24_64  [key=2, style=dotted];
m24_226 -> m24_227  [key=0, style=solid];
m24_226 -> m24_64  [key=2, style=dotted];
m24_399 -> m24_400  [key=0, style=solid];
m24_399 -> m24_407  [key=2, style=dotted];
m24_399 -> m24_137  [key=2, style=dotted];
m24_405 -> m24_406  [key=0, style=solid];
m24_405 -> m24_408  [key=2, style=dotted];
m24_448 -> m24_449  [key=0, style=solid];
m24_448 -> m24_429  [key=2, style=dotted];
m24_495 -> m24_496  [key=0, style=solid];
m24_495 -> m24_64  [key=2, style=dotted];
m24_506 -> m24_507  [key=0, style=solid];
m24_506 -> m24_408  [key=2, style=dotted];
m24_569 -> m24_570  [key=0, style=solid];
m24_569 -> m24_64  [key=2, style=dotted];
m24_55 -> m24_53  [color=blue, key=0, style=bold];
m24_83 -> m24_81  [color=blue, key=0, style=bold];
m24_95 -> m24_93  [color=blue, key=0, style=bold];
m24_156 -> m24_154  [color=blue, key=0, style=bold];
m24_196 -> m24_194  [color=blue, key=0, style=bold];
m24_248 -> m24_246  [color=blue, key=0, style=bold];
m24_259 -> m24_257  [color=blue, key=0, style=bold];
m24_303 -> m24_301  [color=blue, key=0, style=bold];
m24_314 -> m24_312  [color=blue, key=0, style=bold];
m24_341 -> m24_339  [color=blue, key=0, style=bold];
m24_351 -> m24_349  [color=blue, key=0, style=bold];
m24_378 -> m24_376  [color=blue, key=0, style=bold];
m24_390 -> m24_388  [color=blue, key=0, style=bold];
m24_417 -> m24_415  [color=blue, key=0, style=bold];
m24_438 -> m24_436  [color=blue, key=0, style=bold];
m24_465 -> m24_463  [color=blue, key=0, style=bold];
m24_488 -> m24_486  [color=blue, key=0, style=bold];
m24_518 -> m24_516  [color=blue, key=0, style=bold];
m24_529 -> m24_527  [color=blue, key=0, style=bold];
m24_553 -> m24_551  [color=blue, key=0, style=bold];
m24_582 -> m24_580  [color=blue, key=0, style=bold];
m24_609 -> m24_607  [color=blue, key=0, style=bold];
m24_628 -> m24_626  [color=blue, key=0, style=bold];
m24_663 -> m24_661  [color=blue, key=0, style=bold];
m24_689 -> m24_687  [color=blue, key=0, style=bold];
m24_716 -> m24_714  [color=blue, key=0, style=bold];
m24_742 -> m24_740  [color=blue, key=0, style=bold];
m24_770 -> m24_768  [color=blue, key=0, style=bold];
m24_781 -> m24_779  [color=blue, key=0, style=bold];
m24_807 -> m24_805  [color=blue, key=0, style=bold];
m24_834 -> m24_832  [color=blue, key=0, style=bold];
m24_860 -> m24_858  [color=blue, key=0, style=bold];
m24_61 -> m24_62  [key=0, style=solid];
m24_61 -> m24_64  [key=2, style=dotted];
m24_70 -> m24_71  [key=0, style=solid];
m24_70 -> m24_64  [key=2, style=dotted];
m24_97 -> m24_98  [key=0, style=solid];
m24_99 -> m24_97  [color=blue, key=0, style=bold];
m24_139 -> m24_140  [key=0, style=solid];
m24_141 -> m24_139  [color=blue, key=0, style=bold];
m24_185 -> m24_186  [key=0, style=solid];
m24_187 -> m24_185  [color=blue, key=0, style=bold];
m24_122 -> m24_123  [key=0, style=solid];
m24_122 -> m24_135  [key=2, style=dotted];
m24_122 -> m24_136  [key=2, style=dotted];
m24_122 -> m24_137  [key=2, style=dotted];
m24_108 -> m24_109  [key=0, style=solid];
m24_108 -> m24_64  [key=2, style=dotted];
m24_109 -> m24_110  [key=0, style=solid];
m24_109 -> m24_129  [key=2, style=dotted];
m24_116 -> m24_117  [key=0, style=solid];
m24_142 -> m24_143  [key=0, style=solid];
m24_145 -> m24_146  [key=0, style=solid];
m24_163 -> m24_164  [key=0, style=solid];
m24_163 -> m24_165  [key=2, style=dotted];
m24_180 -> m24_181  [key=0, style=solid];
m24_180 -> m24_136  [key=2, style=dotted];
m24_180 -> m24_137  [key=2, style=dotted];
m24_174 -> m24_175  [key=0, style=solid];
m24_174 -> m24_64  [key=2, style=dotted];
m24_179 -> m24_180  [key=0, style=solid];
m24_179 -> m24_136  [key=2, style=dotted];
m24_179 -> m24_137  [key=2, style=dotted];
m24_203 -> m24_204  [key=0, style=solid];
m24_203 -> m24_165  [key=2, style=dotted];
m24_236 -> m24_237  [key=0, style=solid];
m24_236 -> m24_64  [key=2, style=dotted];
m24_266 -> m24_267  [key=0, style=solid];
m24_266 -> m24_268  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m24_266 -> m24_132  [key=2, style=dotted];
m24_277 -> m24_278  [key=0, style=solid];
m24_277 -> m24_279  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m24_277 -> m24_280  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m24_277 -> m24_132  [key=2, style=dotted];
m24_289 -> m24_290  [key=0, style=solid];
m24_289 -> m24_291  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m24_289 -> m24_132  [key=2, style=dotted];
m24_320 -> m24_321  [key=0, style=solid];
m24_320 -> m24_165  [key=2, style=dotted];
m24_357 -> m24_358  [key=0, style=solid];
m24_357 -> m24_165  [key=2, style=dotted];
m24_400 -> m24_401  [key=0, style=solid];
m24_400 -> m24_64  [key=2, style=dotted];
m24_401 -> m24_402  [key=0, style=solid];
m24_401 -> m24_379  [key=2, style=dotted];
m24_427 -> m24_428  [key=0, style=solid];
m24_427 -> m24_429  [key=2, style=dotted];
m24_451 -> m24_452  [key=0, style=solid];
m24_454 -> m24_455  [key=0, style=solid];
m24_507 -> m24_508  [key=0, style=solid];
m24_507 -> m24_408  [key=2, style=dotted];
m24_539 -> m24_540  [key=0, style=solid];
m24_560 -> m24_561  [key=0, style=solid];
m24_560 -> m24_165  [key=2, style=dotted];
m24_696 -> m24_697  [key=0, style=solid];
m24_696 -> m24_137  [key=2, style=dotted];
m24_706 -> m24_707  [key=0, style=solid];
m24_706 -> m24_466  [key=2, style=dotted];
m24_706 -> m24_137  [key=2, style=dotted];
m24_705 -> m24_466  [key=2, style=dotted];
m24_705 -> m24_706  [key=0, style=solid];
m24_705 -> m24_137  [key=2, style=dotted];
m24_749 -> m24_750  [key=0, style=solid];
m24_749 -> m24_137  [key=2, style=dotted];
m24_759 -> m24_760  [key=0, style=solid];
m24_759 -> m24_466  [key=2, style=dotted];
m24_759 -> m24_137  [key=2, style=dotted];
m24_758 -> m24_466  [key=2, style=dotted];
m24_758 -> m24_759  [key=0, style=solid];
m24_758 -> m24_137  [key=2, style=dotted];
m24_787 -> m24_788  [key=0, style=solid];
m24_787 -> m24_165  [key=2, style=dotted];
m24_814 -> m24_815  [key=0, style=solid];
m24_814 -> m24_816  [key=2, style=dotted];
m24_841 -> m24_842  [key=0, style=solid];
m24_841 -> m24_816  [key=2, style=dotted];
m24_867 -> m24_868  [key=0, style=solid];
m24_867 -> m24_137  [key=2, style=dotted];
m24_877 -> m24_878  [key=0, style=solid];
m24_877 -> m24_466  [key=2, style=dotted];
m24_877 -> m24_137  [key=2, style=dotted];
m24_876 -> m24_466  [key=2, style=dotted];
m24_876 -> m24_877  [key=0, style=solid];
m24_876 -> m24_137  [key=2, style=dotted];
m24_144 -> m24_142  [color=blue, key=0, style=bold];
m24_143 -> m24_144  [key=0, style=solid];
m24_147 -> m24_145  [color=blue, key=0, style=bold];
m24_146 -> m24_147  [key=0, style=solid];
m24_453 -> m24_451  [color=blue, key=0, style=bold];
m24_452 -> m24_453  [key=0, style=solid];
m24_456 -> m24_454  [color=blue, key=0, style=bold];
m24_455 -> m24_456  [key=0, style=solid];
m24_541 -> m24_539  [color=blue, key=0, style=bold];
m24_540 -> m24_541  [key=0, style=solid];
m24_543 -> m24_544  [key=0, style=solid];
m24_544 -> m24_542  [color=blue, key=0, style=bold];
m24_672 -> m24_673  [key=0, style=solid];
m24_674 -> m24_675  [key=0, style=solid];
m24_674 -> m24_104  [key=2, style=dotted];
m24_674 -> m24_676  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_673 -> m24_674  [key=0, style=solid];
m24_673 -> m24_673  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_673 -> m24_677  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_675 -> m24_672  [color=blue, key=0, style=bold];
m24_369 -> m24_370  [key=0, style=solid];
m24_370 -> m24_371  [key=0, style=solid];
m24_370 -> m24_45  [key=2, style=dotted];
m24_370 -> m24_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_371 -> m24_369  [color=blue, key=0, style=bold];
m24_480 -> m24_481  [key=0, style=solid];
m24_481 -> m24_482  [key=0, style=solid];
m24_481 -> m24_45  [key=2, style=dotted];
m24_481 -> m24_483  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_482 -> m24_480  [color=blue, key=0, style=bold];
m24_879 -> m24_883  [color=darkseagreen4, key=1, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m24_879 -> m24_880  [key=0, style=solid];
m24_882 -> m24_24  [key=2, style=dotted];
m24_882 -> m24_883  [key=0, style=solid];
m24_881 -> m24_882  [key=0, style=solid];
m24_881 -> m24_886  [key=2, style=dotted];
m24_883 -> m24_884  [key=0, style=solid];
m24_883 -> m24_887  [key=2, style=dotted];
m24_880 -> m24_881  [key=0, style=solid];
m24_880 -> m24_883  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m24_880 -> m24_885  [key=2, style=dotted];
m24_884 -> m24_879  [color=blue, key=0, style=bold];
m24_239 -> m24_240  [key=0, style=solid];
m24_240 -> m24_241  [key=0, style=solid];
m24_240 -> m24_45  [key=2, style=dotted];
m24_240 -> m24_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_241 -> m24_239  [color=blue, key=0, style=bold];
m24_158 -> m24_159  [key=0, style=solid];
m24_159 -> m24_160  [key=0, style=solid];
m24_159 -> m24_45  [key=2, style=dotted];
m24_159 -> m24_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_160 -> m24_158  [color=blue, key=0, style=bold];
m24_56 -> m24_57  [key=0, style=solid];
m24_57 -> m24_58  [key=0, style=solid];
m24_57 -> m24_45  [key=2, style=dotted];
m24_57 -> m24_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_58 -> m24_56  [color=blue, key=0, style=bold];
m24_315 -> m24_316  [key=0, style=solid];
m24_316 -> m24_317  [key=0, style=solid];
m24_316 -> m24_45  [key=2, style=dotted];
m24_316 -> m24_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_317 -> m24_315  [color=blue, key=0, style=bold];
m24_708 -> m24_709  [key=0, style=solid];
m24_709 -> m24_710  [key=0, style=solid];
m24_709 -> m24_45  [key=2, style=dotted];
m24_709 -> m24_711  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_710 -> m24_708  [color=blue, key=0, style=bold];
m24_100 -> m24_87  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m24_100 -> m24_102  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m24_100 -> m24_168  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m24_100 -> m24_900  [key=0, style=solid];
m24_900 -> m24_100  [color=blue, key=0, style=bold];
m24_509 -> m24_510  [key=0, style=solid];
m24_510 -> m24_511  [key=0, style=solid];
m24_510 -> m24_45  [key=2, style=dotted];
m24_510 -> m24_512  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_511 -> m24_509  [color=blue, key=0, style=bold];
m24_86 -> m24_87  [key=0, style=solid];
m24_87 -> m24_88  [key=0, style=solid];
m24_87 -> m24_45  [key=2, style=dotted];
m24_87 -> m24_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_88 -> m24_86  [color=blue, key=0, style=bold];
m24_591 -> m24_592  [key=0, style=solid];
m24_593 -> m24_594  [key=0, style=solid];
m24_593 -> m24_104  [key=2, style=dotted];
m24_593 -> m24_595  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_592 -> m24_593  [key=0, style=solid];
m24_592 -> m24_592  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_592 -> m24_596  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_594 -> m24_591  [color=blue, key=0, style=bold];
m24_744 -> m24_745  [key=0, style=solid];
m24_745 -> m24_746  [key=0, style=solid];
m24_745 -> m24_45  [key=2, style=dotted];
m24_745 -> m24_747  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_746 -> m24_744  [color=blue, key=0, style=bold];
m24_468 -> m24_469  [key=0, style=solid];
m24_470 -> m24_471  [key=0, style=solid];
m24_470 -> m24_104  [key=2, style=dotted];
m24_470 -> m24_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_469 -> m24_470  [key=0, style=solid];
m24_469 -> m24_469  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_469 -> m24_473  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_471 -> m24_468  [color=blue, key=0, style=bold];
m24_734 -> m24_735  [key=0, style=solid];
m24_735 -> m24_736  [key=0, style=solid];
m24_735 -> m24_45  [key=2, style=dotted];
m24_735 -> m24_737  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_736 -> m24_734  [color=blue, key=0, style=bold];
m24_205 -> m24_206  [key=0, style=solid];
m24_207 -> m24_208  [key=0, style=solid];
m24_207 -> m24_104  [key=2, style=dotted];
m24_207 -> m24_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_206 -> m24_207  [key=0, style=solid];
m24_206 -> m24_206  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_206 -> m24_211  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_208 -> m24_205  [color=blue, key=0, style=bold];
m24_782 -> m24_783  [key=0, style=solid];
m24_783 -> m24_784  [key=0, style=solid];
m24_783 -> m24_45  [key=2, style=dotted];
m24_783 -> m24_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_784 -> m24_782  [color=blue, key=0, style=bold];
m24_42 -> m24_43  [key=0, style=solid];
m24_43 -> m24_44  [key=0, style=solid];
m24_43 -> m24_45  [key=2, style=dotted];
m24_43 -> m24_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_44 -> m24_42  [color=blue, key=0, style=bold];
m24_655 -> m24_656  [key=0, style=solid];
m24_656 -> m24_657  [key=0, style=solid];
m24_656 -> m24_45  [key=2, style=dotted];
m24_656 -> m24_658  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_657 -> m24_655  [color=blue, key=0, style=bold];
m24_25 -> m24_26  [key=0, style=solid];
m24_26 -> m24_27  [key=0, style=solid];
m24_26 -> m24_28  [key=2, style=dotted];
m24_26 -> m24_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_27 -> m24_25  [color=blue, key=0, style=bold];
m24_498 -> m24_499  [key=0, style=solid];
m24_500 -> m24_501  [key=0, style=solid];
m24_500 -> m24_104  [key=2, style=dotted];
m24_500 -> m24_502  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_499 -> m24_500  [key=0, style=solid];
m24_499 -> m24_499  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_499 -> m24_503  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_501 -> m24_498  [color=blue, key=0, style=bold];
m24_520 -> m24_521  [key=0, style=solid];
m24_521 -> m24_522  [key=0, style=solid];
m24_521 -> m24_45  [key=2, style=dotted];
m24_521 -> m24_523  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_522 -> m24_520  [color=blue, key=0, style=bold];
m24_665 -> m24_666  [key=0, style=solid];
m24_666 -> m24_667  [key=0, style=solid];
m24_666 -> m24_45  [key=2, style=dotted];
m24_666 -> m24_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_667 -> m24_665  [color=blue, key=0, style=bold];
m24_681 -> m24_682  [key=0, style=solid];
m24_682 -> m24_683  [key=0, style=solid];
m24_682 -> m24_45  [key=2, style=dotted];
m24_682 -> m24_684  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_683 -> m24_681  [color=blue, key=0, style=bold];
m24_620 -> m24_621  [key=0, style=solid];
m24_621 -> m24_622  [key=0, style=solid];
m24_621 -> m24_45  [key=2, style=dotted];
m24_621 -> m24_623  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_622 -> m24_620  [color=blue, key=0, style=bold];
m24_28 -> m24_26  [color=darkorchid, key=3, label="Parameter variable System.Action<Hangfire.SqlServer.SqlServerConnection> action", style=bold];
m24_28 -> m24_888  [key=0, style=solid];
m24_28 -> m24_892  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m24_890 -> m24_891  [key=0, style=solid];
m24_890 -> m24_8  [key=2, style=dotted];
m24_890 -> m24_9  [key=2, style=dotted];
m24_890 -> m24_897  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_889 -> m24_890  [key=0, style=solid];
m24_889 -> m24_894  [key=2, style=dotted];
m24_889 -> m24_891  [color=darkseagreen4, key=1, label=storage, style=dashed];
m24_891 -> m24_892  [key=0, style=solid];
m24_891 -> m24_895  [key=2, style=dotted];
m24_888 -> m24_889  [key=0, style=solid];
m24_888 -> m24_885  [key=2, style=dotted];
m24_892 -> m24_893  [key=0, style=solid];
m24_892 -> m24_896  [key=2, style=dotted];
m24_893 -> m24_28  [color=blue, key=0, style=bold];
m24_798 -> m24_799  [key=0, style=solid];
m24_799 -> m24_800  [key=0, style=solid];
m24_799 -> m24_45  [key=2, style=dotted];
m24_799 -> m24_801  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_800 -> m24_798  [color=blue, key=0, style=bold];
m24_294 -> m24_295  [key=0, style=solid];
m24_295 -> m24_296  [key=0, style=solid];
m24_295 -> m24_45  [key=2, style=dotted];
m24_295 -> m24_297  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_296 -> m24_294  [color=blue, key=0, style=bold];
m24_817 -> m24_818  [key=0, style=solid];
m24_819 -> m24_820  [key=0, style=solid];
m24_819 -> m24_104  [key=2, style=dotted];
m24_819 -> m24_821  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_818 -> m24_819  [key=0, style=solid];
m24_818 -> m24_818  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_818 -> m24_822  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_820 -> m24_817  [color=blue, key=0, style=bold];
m24_74 -> m24_75  [key=0, style=solid];
m24_75 -> m24_76  [key=0, style=solid];
m24_75 -> m24_45  [key=2, style=dotted];
m24_75 -> m24_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_76 -> m24_74  [color=blue, key=0, style=bold];
m24_630 -> m24_631  [key=0, style=solid];
m24_631 -> m24_632  [key=0, style=solid];
m24_631 -> m24_45  [key=2, style=dotted];
m24_631 -> m24_633  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_632 -> m24_630  [color=blue, key=0, style=bold];
m24_852 -> m24_853  [key=0, style=solid];
m24_853 -> m24_854  [key=0, style=solid];
m24_853 -> m24_45  [key=2, style=dotted];
m24_853 -> m24_855  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_854 -> m24_852  [color=blue, key=0, style=bold];
m24_65 -> m24_66  [key=0, style=solid];
m24_66 -> m24_67  [key=0, style=solid];
m24_66 -> m24_45  [key=2, style=dotted];
m24_66 -> m24_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_67 -> m24_65  [color=blue, key=0, style=bold];
m24_574 -> m24_575  [key=0, style=solid];
m24_575 -> m24_576  [key=0, style=solid];
m24_575 -> m24_45  [key=2, style=dotted];
m24_575 -> m24_577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_576 -> m24_574  [color=blue, key=0, style=bold];
m24_359 -> m24_360  [key=0, style=solid];
m24_361 -> m24_362  [key=0, style=solid];
m24_361 -> m24_104  [key=2, style=dotted];
m24_361 -> m24_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_360 -> m24_361  [key=0, style=solid];
m24_360 -> m24_360  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_360 -> m24_364  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_362 -> m24_359  [color=blue, key=0, style=bold];
m24_611 -> m24_612  [key=0, style=solid];
m24_613 -> m24_614  [key=0, style=solid];
m24_613 -> m24_104  [key=2, style=dotted];
m24_613 -> m24_615  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_612 -> m24_613  [key=0, style=solid];
m24_612 -> m24_612  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_612 -> m24_616  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_614 -> m24_611  [color=blue, key=0, style=bold];
m24_271 -> m24_272  [key=0, style=solid];
m24_273 -> m24_274  [key=0, style=solid];
m24_273 -> m24_104  [key=2, style=dotted];
m24_273 -> m24_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_272 -> m24_273  [key=0, style=solid];
m24_272 -> m24_261  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_272 -> m24_276  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_274 -> m24_271  [color=blue, key=0, style=bold];
m24_440 -> m24_441  [key=0, style=solid];
m24_442 -> m24_443  [key=0, style=solid];
m24_442 -> m24_104  [key=2, style=dotted];
m24_442 -> m24_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_441 -> m24_442  [key=0, style=solid];
m24_441 -> m24_441  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_441 -> m24_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_443 -> m24_440  [color=blue, key=0, style=bold];
m24_809 -> m24_810  [key=0, style=solid];
m24_810 -> m24_811  [key=0, style=solid];
m24_810 -> m24_45  [key=2, style=dotted];
m24_810 -> m24_812  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_811 -> m24_809  [color=blue, key=0, style=bold];
m24_530 -> m24_531  [key=0, style=solid];
m24_531 -> m24_532  [key=0, style=solid];
m24_531 -> m24_104  [key=2, style=dotted];
m24_531 -> m24_533  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_532 -> m24_530  [color=blue, key=0, style=bold];
m24_166 -> m24_167  [key=0, style=solid];
m24_168 -> m24_169  [key=0, style=solid];
m24_168 -> m24_104  [key=2, style=dotted];
m24_168 -> m24_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_167 -> m24_168  [key=0, style=solid];
m24_167 -> m24_167  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_167 -> m24_172  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_169 -> m24_166  [color=blue, key=0, style=bold];
m24_430 -> m24_431  [key=0, style=solid];
m24_431 -> m24_432  [key=0, style=solid];
m24_431 -> m24_45  [key=2, style=dotted];
m24_431 -> m24_433  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_432 -> m24_430  [color=blue, key=0, style=bold];
m24_725 -> m24_726  [key=0, style=solid];
m24_727 -> m24_728  [key=0, style=solid];
m24_727 -> m24_104  [key=2, style=dotted];
m24_727 -> m24_729  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_726 -> m24_727  [key=0, style=solid];
m24_726 -> m24_726  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m24_726 -> m24_730  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_728 -> m24_725  [color=blue, key=0, style=bold];
m24_148 -> m24_149  [key=0, style=solid];
m24_149 -> m24_150  [key=0, style=solid];
m24_149 -> m24_45  [key=2, style=dotted];
m24_149 -> m24_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_150 -> m24_148  [color=blue, key=0, style=bold];
m24_101 -> m24_102  [key=0, style=solid];
m24_102 -> m24_103  [key=0, style=solid];
m24_102 -> m24_104  [key=2, style=dotted];
m24_102 -> m24_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_103 -> m24_101  [color=blue, key=0, style=bold];
m24_352 -> m24_353  [key=0, style=solid];
m24_353 -> m24_354  [key=0, style=solid];
m24_353 -> m24_45  [key=2, style=dotted];
m24_353 -> m24_355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_354 -> m24_352  [color=blue, key=0, style=bold];
m24_584 -> m24_585  [key=0, style=solid];
m24_585 -> m24_586  [key=0, style=solid];
m24_585 -> m24_45  [key=2, style=dotted];
m24_585 -> m24_587  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_586 -> m24_584  [color=blue, key=0, style=bold];
m24_901 -> m24_1  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_26  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_43  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_49  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_57  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_66  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_87  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_102  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_149  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_159  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_168  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_199  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_207  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_231  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_240  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_251  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_262  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_273  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_285  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_295  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_306  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_316  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_324  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_333  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_344  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_353  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_370  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_392  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_421  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_431  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_442  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_470  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_481  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_491  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_500  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_510  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_521  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_546  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_556  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_564  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_575  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_585  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_593  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_613  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_621  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_631  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_639  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_656  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_666  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_674  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_682  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_692  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_700  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_719  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_727  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_735  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_745  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_753  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_773  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_783  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_791  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_799  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_810  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_819  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_837  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_845  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_853  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_863  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_871  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_901 -> m24_890  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m24_921 -> m24_327  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_902 -> m24_39  [color=darkseagreen4, key=1, label=token, style=dashed];
m24_903 -> m24_39  [color=darkseagreen4, key=1, label=queues, style=dashed];
m24_904 -> m24_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_905 -> m24_54  [color=darkseagreen4, key=1, label=token, style=dashed];
m24_906 -> m24_82  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_907 -> m24_94  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_908 -> m24_155  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_909 -> m24_172  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_910 -> m24_195  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_911 -> m24_211  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_912 -> m24_224  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_913 -> m24_234  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_914 -> m24_247  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_915 -> m24_258  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_916 -> m24_265  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_917 -> m24_276  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_918 -> m24_288  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_919 -> m24_302  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_920 -> m24_313  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_922 -> m24_340  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_923 -> m24_350  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_924 -> m24_364  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_925 -> m24_377  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_926 -> m24_389  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_927 -> m24_416  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_928 -> m24_424  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_929 -> m24_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_930 -> m24_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_931 -> m24_464  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_932 -> m24_473  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_933 -> m24_487  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_934 -> m24_503  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_935 -> m24_517  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_936 -> m24_528  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_937 -> m24_552  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_938 -> m24_567  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_939 -> m24_581  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_940 -> m24_596  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_941 -> m24_608  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_942 -> m24_616  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_943 -> m24_627  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_944 -> m24_642  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_945 -> m24_651  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_946 -> m24_662  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_947 -> m24_677  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_948 -> m24_688  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_949 -> m24_703  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_950 -> m24_715  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_951 -> m24_730  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_952 -> m24_741  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_953 -> m24_756  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_954 -> m24_769  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_955 -> m24_780  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_956 -> m24_794  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_957 -> m24_806  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_958 -> m24_822  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_959 -> m24_833  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_960 -> m24_848  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m24_961 -> m24_859  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m24_962 -> m24_874  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m25_47 -> m25_48  [key=0, style=solid];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_50  [key=2, style=dotted];
m25_49 -> m25_47  [color=blue, key=0, style=bold];
m25_51 -> m25_52  [key=0, style=solid];
m25_52 -> m25_53  [key=0, style=solid];
m25_52 -> m25_58  [key=0, style=solid];
m25_52 -> m25_59  [key=0, style=solid];
m25_52 -> m25_61  [key=0, style=solid];
m25_53 -> m25_54  [key=0, style=solid];
m25_58 -> m25_61  [key=0, style=solid];
m25_59 -> m25_60  [color=red, key=0, style=solid];
m25_54 -> m25_55  [key=0, style=solid];
m25_54 -> m25_62  [key=2, style=dotted];
m25_54 -> m25_57  [color=darkseagreen4, key=1, label=worker, style=dashed];
m25_55 -> m25_53  [key=0, style=solid];
m25_55 -> m25_56  [key=0, style=solid];
m25_57 -> m25_52  [key=0, style=solid];
m25_57 -> m25_64  [key=2, style=dotted];
m25_56 -> m25_57  [key=0, style=solid];
m25_56 -> m25_63  [key=2, style=dotted];
m25_60 -> m25_61  [color=red, key=0, style=solid];
m25_60 -> m25_65  [color=red, key=2, style=dotted];
m25_60 -> m25_66  [color=red, key=2, style=dotted];
m25_61 -> m25_51  [color=blue, key=0, style=bold];
m25_23 -> m25_24  [key=0, style=solid];
m25_24 -> m25_25  [key=0, style=solid];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_29  [key=2, style=dotted];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_28  [key=0, style=solid];
m25_27 -> m25_26  [key=0, style=solid];
m25_27 -> m25_30  [key=2, style=dotted];
m25_28 -> m25_23  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_0 -> m25_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_0 -> m25_6  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m25_0 -> m25_9  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_13  [key=2, style=dotted];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_15  [key=2, style=dotted];
m25_3 -> m25_16  [key=2, style=dotted];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_8  [key=0, style=solid];
m25_5 -> m25_5  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_17  [key=2, style=dotted];
m25_6 -> m25_18  [key=2, style=dotted];
m25_6 -> m25_19  [key=2, style=dotted];
m25_9 -> m25_10  [color=red, key=0, style=solid];
m25_9 -> m25_20  [key=2, style=dotted];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_14  [key=2, style=dotted];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_6  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_4 -> m25_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_7 -> m25_5  [key=0, style=solid];
m25_7 -> m25_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_16  [key=2, style=dotted];
m25_10 -> m25_11  [color=red, key=0, style=solid];
m25_10 -> m25_21  [color=red, key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_22  [key=2, style=dotted];
m25_12 -> m25_0  [color=blue, key=0, style=bold];
m25_31 -> m25_32  [key=0, style=solid];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_34  [key=0, style=solid];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_23  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_34 -> m25_42  [key=2, style=dotted];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_37  [color=red, key=0, style=solid];
m25_36 -> m25_35  [key=0, style=solid];
m25_36 -> m25_43  [key=2, style=dotted];
m25_37 -> m25_38  [color=red, key=0, style=solid];
m25_37 -> m25_16  [color=red, key=2, style=dotted];
m25_38 -> m25_39  [key=0, style=solid];
m25_38 -> m25_44  [key=2, style=dotted];
m25_39 -> m25_40  [color=red, key=0, style=solid];
m25_39 -> m25_45  [key=2, style=dotted];
m25_40 -> m25_41  [color=red, key=0, style=solid];
m25_40 -> m25_46  [color=red, key=2, style=dotted];
m25_41 -> m25_31  [color=blue, key=0, style=bold];
m25_67 -> m25_1  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_2  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_6  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_8  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_9  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_10  [color=red, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_11  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_24  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_25  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_26  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_32  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_33  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_34  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_35  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_37  [color=red, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_38  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_40  [color=red, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_54  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_56  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m25_67 -> m25_60  [color=red, key=1, label="HangFire.Server.JobManager", style=dashed];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_29  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m26_26 -> m26_30  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m26_26 -> m26_31  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m26_26 -> m26_32  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m26_26 -> m26_34  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m26_26 -> m26_35  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m26_26 -> m26_36  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m26_26 -> m26_37  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m26_26 -> m26_39  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m26_26 -> m26_40  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m26_26 -> m26_41  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m26_26 -> m26_42  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_24  [key=2, style=dotted];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_31  [key=0, style=solid];
m26_30 -> m26_29  [key=0, style=solid];
m26_30 -> m26_44  [key=2, style=dotted];
m26_31 -> m26_32  [key=0, style=solid];
m26_31 -> m26_33  [key=0, style=solid];
m26_31 -> m26_45  [key=2, style=dotted];
m26_32 -> m26_31  [key=0, style=solid];
m26_32 -> m26_46  [key=2, style=dotted];
m26_34 -> m26_33  [key=0, style=solid];
m26_34 -> m26_47  [key=2, style=dotted];
m26_35 -> m26_36  [key=0, style=solid];
m26_35 -> m26_48  [key=2, style=dotted];
m26_36 -> m26_37  [key=0, style=solid];
m26_36 -> m26_38  [key=0, style=solid];
m26_36 -> m26_45  [key=2, style=dotted];
m26_37 -> m26_36  [key=0, style=solid];
m26_37 -> m26_49  [key=2, style=dotted];
m26_39 -> m26_38  [key=0, style=solid];
m26_39 -> m26_50  [key=2, style=dotted];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_42  [key=0, style=solid];
m26_41 -> m26_43  [key=0, style=solid];
m26_41 -> m26_51  [key=2, style=dotted];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_52  [key=2, style=dotted];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_33  [color=darkseagreen4, key=1, label=filters, style=dashed];
m26_28 -> m26_38  [color=darkseagreen4, key=1, label=filters, style=dashed];
m26_33 -> m26_34  [key=0, style=solid];
m26_33 -> m26_35  [key=0, style=solid];
m26_38 -> m26_39  [key=0, style=solid];
m26_38 -> m26_40  [key=0, style=solid];
m26_43 -> m26_26  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_3  [color=darkseagreen4, key=1, label="Hangfire.States.StateHandlerCollection", style=dashed];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=0, style=solid];
m26_3 -> m26_4  [key=0, style=solid];
m26_2 -> m26_4  [key=0, style=solid];
m26_2 -> n21  [key=2, style=dotted];
m26_4 -> m26_0  [color=blue, key=0, style=bold];
m26_15 -> m26_16  [key=0, style=solid];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_14  [key=2, style=dotted];
m26_12 -> m26_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_11 -> m26_12  [key=0, style=solid];
m26_13 -> m26_11  [color=blue, key=0, style=bold];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_18  [key=2, style=dotted];
m26_17 -> m26_15  [color=blue, key=0, style=bold];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_22  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_24  [key=2, style=dotted];
m26_22 -> m26_21  [key=0, style=solid];
m26_22 -> m26_25  [key=2, style=dotted];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_23  [key=0, style=solid];
m26_23 -> m26_19  [color=blue, key=0, style=bold];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m26_6 -> m26_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_8 -> m26_10  [key=0, style=solid];
m26_8 -> n21  [key=2, style=dotted];
m26_10 -> m26_6  [color=blue, key=0, style=bold];
m26_24 -> m26_53  [key=0, style=solid];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_55  [key=2, style=dotted];
m26_53 -> m26_56  [key=2, style=dotted];
m26_54 -> m26_24  [color=blue, key=0, style=bold];
m26_57 -> m26_3  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m26_57 -> m26_9  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m26_57 -> m26_20  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m26_57 -> m26_27  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m26_57 -> m26_31  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m26_57 -> m26_36  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m26_57 -> m26_53  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m26_58 -> m26_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m27_45 -> m27_51  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m27_45 -> m27_59  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m27_45 -> m27_46  [key=0, style=solid];
m27_45 -> m27_47  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m27_45 -> m27_48  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m27_45 -> m27_54  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m27_45 -> m27_55  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m27_45 -> m27_50  [color=darkorchid, key=3, label="method methodReturn HangFire.Filters.CreatedContext InvokeClientFilter", style=bold];
m27_24 -> m27_65  [key=0, style=solid];
m27_24 -> m27_66  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientExceptionContext", style=dashed];
m27_65 -> m27_31  [key=2, style=dotted];
m27_65 -> m27_66  [key=0, style=solid];
m27_65 -> m27_67  [key=0, style=solid];
m27_66 -> m27_65  [key=0, style=solid];
m27_66 -> m27_68  [key=2, style=dotted];
m27_67 -> m27_24  [color=blue, key=0, style=bold];
m27_44 -> m27_42  [color=blue, key=0, style=bold];
m27_43 -> m27_45  [key=2, style=dotted];
m27_43 -> m27_44  [key=0, style=solid];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_2  [color=blue, key=0, style=bold];
m27_47 -> m27_48  [key=0, style=solid];
m27_47 -> m27_49  [key=0, style=solid];
m27_58 -> m27_59  [color=green, key=0, style=solid];
m27_58 -> m27_60  [color=green, key=0, style=solid];
m27_51 -> m27_58  [color=green, key=0, style=solid];
m27_51 -> m27_52  [key=0, style=solid];
m27_51 -> m27_63  [key=2, style=dotted];
m27_53 -> m27_58  [color=green, key=1, label=wasError, style=dashed];
m27_53 -> m27_54  [key=0, style=solid];
m27_53 -> m27_7  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m27_53 -> m27_8  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m27_53 -> m27_16  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m27_53 -> m27_21  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m27_53 -> m27_27  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m27_53 -> m27_36  [color=red, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m27_56 -> m27_58  [color=green, key=0, style=solid];
m27_56 -> m27_57  [key=0, style=solid];
m27_59 -> m27_60  [key=0, style=solid];
m27_59 -> m27_64  [key=2, style=dotted];
m27_60 -> m27_61  [key=0, style=solid];
m27_50 -> m27_51  [key=0, style=solid];
m27_52 -> m27_53  [key=0, style=solid];
m27_54 -> m27_56  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m27_54 -> m27_59  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m27_54 -> m27_60  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m27_54 -> m27_55  [key=0, style=solid];
m27_54 -> m27_39  [key=2, style=dotted];
m27_55 -> m27_56  [key=0, style=solid];
m27_55 -> m27_64  [key=2, style=dotted];
m27_57 -> m27_61  [key=0, style=solid];
m27_46 -> m27_47  [key=0, style=solid];
m27_46 -> m27_62  [key=2, style=dotted];
m27_48 -> m27_61  [key=0, style=solid];
m27_48 -> m27_39  [key=2, style=dotted];
m27_49 -> m27_50  [key=0, style=solid];
m27_49 -> m27_49  [color=darkorchid, key=3, label="Local variable bool wasError", style=bold];
m27_61 -> m27_45  [color=blue, key=0, style=bold];
m27_31 -> m27_32  [key=0, style=solid];
m27_31 -> m27_44  [key=2, style=dotted];
m27_23 -> m27_30  [key=0, style=solid];
m27_23 -> m27_36  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m27_23 -> m27_12  [color=darkorchid, key=3, label="Parameter variable Hangfire.Server.BackgroundProcessContext context", style=bold];
m27_23 -> m27_35  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m27_23 -> m27_41  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_43  [key=2, style=dotted];
m27_30 -> m27_33  [color=darkseagreen4, key=1, label=connection, style=dashed];
m27_30 -> m27_36  [color=red, key=1, label=connection, style=dashed];
m27_30 -> m27_38  [color=darkseagreen4, key=1, label=connection, style=dashed];
m27_36 -> m27_37  [color=red, key=0, style=solid];
m27_36 -> m27_47  [color=red, key=2, style=dotted];
m27_36 -> m27_48  [color=red, key=2, style=dotted];
m27_36 -> m27_26  [color=red, key=2, style=dotted];
m27_36 -> m27_49  [color=red, key=2, style=dotted];
m27_36 -> m27_39  [key=2, style=dotted];
m27_33 -> m27_34  [key=0, style=solid];
m27_33 -> m27_46  [key=2, style=dotted];
m27_33 -> m27_36  [color=red, key=1, label=jobId, style=dashed];
m27_33 -> m27_39  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m27_38 -> m27_39  [key=0, style=solid];
m27_38 -> m27_50  [key=2, style=dotted];
m27_38 -> m27_40  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_45  [key=2, style=dotted];
m27_34 -> m27_35  [key=0, style=solid];
m27_34 -> m27_36  [color=red, key=0, style=solid];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_51  [key=2, style=dotted];
m27_35 -> m27_42  [key=0, style=solid];
m27_35 -> m27_36  [key=0, style=solid];
m27_35 -> m27_38  [key=2, style=dotted];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_41  [key=0, style=solid];
m27_37 -> m27_34  [color=blue, key=0, style=bold];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_40  [color=blue, key=0, style=bold];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_52  [key=2, style=dotted];
m27_40 -> m27_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m27_40 -> m27_27  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m27_42 -> m27_23  [color=blue, key=0, style=bold];
m27_42 -> m27_43  [key=0, style=solid];
m27_29 -> m27_22  [color=blue, key=0, style=bold];
m27_5 -> m27_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m27_5 -> m27_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m27_5 -> m27_6  [color=red, key=0, style=solid];
m27_5 -> m27_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m27_5 -> m27_7  [color=red, key=0, style=solid];
m27_10 -> m27_11  [key=0, style=solid];
m27_11 -> m27_12  [key=0, style=solid];
m27_8 -> m27_10  [key=0, style=solid];
m27_8 -> m27_9  [key=0, style=solid];
m27_6 -> m27_8  [key=0, style=solid];
m27_6 -> m27_7  [key=0, style=solid];
m27_6 -> m27_9  [color=red, key=0, style=solid];
m27_6 -> n21  [color=red, key=2, style=dotted];
m27_6 -> m27_11  [color=red, key=2, style=dotted];
m27_9 -> m27_12  [key=0, style=solid];
m27_9 -> n21  [key=2, style=dotted];
m27_9 -> m27_4  [color=blue, key=0, style=bold];
m27_7 -> m27_12  [key=0, style=solid];
m27_7 -> n21  [key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_12 -> m27_5  [color=blue, key=0, style=bold];
m27_12 -> m27_13  [color=red, key=0, style=solid];
m27_12 -> m27_14  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m27_12 -> m27_16  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m27_12 -> m27_18  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m27_12 -> m27_21  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m27_26 -> m27_27  [key=0, style=solid];
m27_26 -> m27_26  [color=darkorchid, key=3, label="Local variable System.Func<HangFire.Filters.CreatedContext> continuation", style=bold];
m27_27 -> m27_28  [key=0, style=solid];
m27_27 -> m27_29  [key=2, style=dotted];
m27_27 -> m27_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_27 -> m27_31  [key=2, style=dotted];
m27_27 -> m27_32  [key=2, style=dotted];
m27_28 -> m27_26  [color=blue, key=0, style=bold];
m27_28 -> m27_29  [key=0, style=solid];
m27_28 -> m27_33  [key=2, style=dotted];
m27_22 -> m27_25  [key=0, style=solid];
m27_22 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m27_22 -> m27_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m27_22 -> m27_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m27_22 -> m27_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m27_22 -> m27_12  [color=blue, key=0, style=bold];
m27_25 -> m27_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_30  [key=2, style=dotted];
m27_25 -> m27_27  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_17  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m27_14 -> m27_22  [color=red, key=0, style=solid];
m27_14 -> n21  [color=red, key=2, style=dotted];
m27_14 -> m27_11  [color=red, key=2, style=dotted];
m27_15 -> m27_22  [key=2, style=dotted];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_21  [key=0, style=solid];
m27_15 -> m27_17  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m27_15 -> m27_19  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m27_15 -> m27_20  [color=red, key=1, label=jobsEnqueued, style=dashed];
m27_15 -> m27_15  [color=darkorchid, key=3, label="Local variable int jobsEnqueued", style=bold];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_19  [key=0, style=solid];
m27_16 -> m27_23  [key=2, style=dotted];
m27_18 -> m27_19  [key=0, style=solid];
m27_18 -> m27_24  [key=2, style=dotted];
m27_18 -> m27_16  [key=0, style=solid];
m27_17 -> m27_18  [key=0, style=solid];
m27_17 -> m27_23  [key=2, style=dotted];
m27_17 -> m27_19  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m27_17 -> m27_17  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m27_17 -> m27_20  [color=red, key=1, label=jobsEnqueued, style=dashed];
m27_19 -> m27_21  [key=0, style=solid];
m27_19 -> m27_20  [color=red, key=0, style=solid];
m27_20 -> m27_21  [color=red, key=0, style=solid];
m27_20 -> m27_24  [color=red, key=2, style=dotted];
m27_21 -> m27_14  [color=blue, key=0, style=bold];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_25  [key=2, style=dotted];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_0  [color=blue, key=0, style=bold];
m27_13 -> m27_14  [color=red, key=0, style=solid];
m27_13 -> m27_15  [color=red, key=0, style=solid];
m27_4 -> m27_5  [color=red, key=0, style=solid];
m27_4 -> m27_6  [color=red, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m27_4 -> m27_7  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m27_4 -> m27_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m27_72 -> m27_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m27_73 -> m27_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m27_74 -> m27_43  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m27_71 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m27_70 -> m27_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m27_69 -> m27_15  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m27_69 -> m27_10  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m27_69 -> m27_11  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m27_69 -> m27_18  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m29_20 -> m29_21  [color=red, key=0, style=solid];
m29_20 -> m29_68  [color=red, key=2, style=dotted];
m29_51 -> m29_52  [color=red, key=0, style=solid];
m29_51 -> m29_55  [color=red, key=0, style=solid];
m29_51 -> m29_51  [color=red, key=1, label=job, style=dashed];
m29_51 -> m29_56  [color=red, key=1, label=job, style=dashed];
m29_26 -> m29_27  [color=red, key=0, style=solid];
m29_26 -> m29_68  [color=red, key=2, style=dotted];
m29_83 -> m29_46  [key=2, style=dotted];
m29_83 -> m29_84  [key=0, style=solid];
m29_83 -> m29_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_12 -> m29_13  [color=red, key=0, style=solid];
m29_12 -> m29_77  [color=red, key=2, style=dotted];
m29_13 -> m29_16  [key=2, style=dotted];
m29_13 -> m29_14  [color=red, key=0, style=solid];
m29_13 -> m29_15  [key=2, style=dotted];
m29_13 -> m29_68  [color=red, key=2, style=dotted];
m29_14 -> m29_12  [color=blue, key=0, style=bold];
m29_14 -> m29_15  [color=red, key=0, style=solid];
m29_14 -> m29_18  [key=0, style=solid];
m29_6 -> m29_7  [key=0, style=solid];
m29_6 -> m29_72  [key=2, style=dotted];
m29_6 -> m29_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m29_16 -> m29_17  [color=red, key=0, style=solid];
m29_16 -> m29_77  [color=red, key=2, style=dotted];
m29_25 -> m29_26  [color=red, key=0, style=solid];
m29_25 -> m29_79  [key=2, style=dotted];
m29_25 -> m29_77  [key=2, style=dotted];
m29_78 -> m29_79  [color=green, key=0, style=solid];
m29_69 -> m29_70  [color=green, key=0, style=solid];
m29_76 -> m29_74  [color=blue, key=0, style=bold];
m29_37 -> m29_38  [color=red, key=0, style=solid];
m29_37 -> m29_46  [key=2, style=dotted];
m29_37 -> m29_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_37 -> m29_77  [color=red, key=2, style=dotted];
m29_37 -> m29_37  [color=red, key=1, label=job, style=dashed];
m29_37 -> m29_39  [color=red, key=1, label=job, style=dashed];
m29_36 -> m29_37  [color=red, key=0, style=solid];
m29_36 -> m29_46  [color=green, key=2, style=dotted];
m29_36 -> m29_48  [color=green, key=1, label="lambda expression", style=dashed];
m29_36 -> m29_68  [color=red, key=2, style=dotted];
m29_28 -> m29_36  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m29_28 -> m29_49  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m29_28 -> m29_29  [color=red, key=0, style=solid];
m29_28 -> m29_30  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m29_28 -> m29_31  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m29_28 -> m29_32  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m29_28 -> m29_33  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m29_28 -> m29_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m29_28 -> m29_37  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_28 -> m29_53  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_28 -> m29_68  [color=red, key=2, style=dotted];
m29_29 -> m29_36  [color=green, key=1, label=jobId, style=dashed];
m29_29 -> m29_49  [color=green, key=1, label=jobId, style=dashed];
m29_29 -> m29_39  [color=green, key=1, label=jobId, style=dashed];
m29_29 -> m29_30  [color=red, key=0, style=solid];
m29_29 -> m29_41  [key=2, style=dotted];
m29_29 -> m29_42  [key=2, style=dotted];
m29_29 -> m29_37  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m29_29 -> m29_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m29_29 -> m29_77  [color=red, key=2, style=dotted];
m29_35 -> m29_36  [color=red, key=0, style=solid];
m29_35 -> m29_16  [key=2, style=dotted];
m29_35 -> m29_37  [color=red, key=1, label=job, style=dashed];
m29_35 -> m29_38  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m29_35 -> m29_77  [color=red, key=2, style=dotted];
m29_35 -> m29_35  [color=red, key=1, label=job, style=dashed];
m29_39 -> m29_40  [color=red, key=0, style=solid];
m29_39 -> m29_43  [color=red, key=0, style=solid];
m29_39 -> m29_39  [color=red, key=1, label=job, style=dashed];
m29_39 -> m29_41  [color=red, key=1, label=job, style=dashed];
m29_39 -> m29_44  [color=red, key=1, label=job, style=dashed];
m29_38 -> m29_39  [color=red, key=0, style=solid];
m29_38 -> m29_47  [key=2, style=dotted];
m29_38 -> m29_68  [color=red, key=2, style=dotted];
m29_30 -> m29_31  [color=red, key=0, style=solid];
m29_30 -> m29_43  [key=2, style=dotted];
m29_30 -> m29_68  [color=red, key=2, style=dotted];
m29_31 -> m29_32  [color=red, key=0, style=solid];
m29_31 -> m29_43  [key=2, style=dotted];
m29_31 -> m29_77  [color=red, key=2, style=dotted];
m29_32 -> m29_33  [color=red, key=0, style=solid];
m29_32 -> m29_43  [key=2, style=dotted];
m29_32 -> m29_68  [color=red, key=2, style=dotted];
m29_33 -> m29_34  [color=red, key=0, style=solid];
m29_33 -> m29_44  [key=2, style=dotted];
m29_33 -> m29_43  [key=2, style=dotted];
m29_33 -> m29_63  [color=red, key=0, style=solid];
m29_33 -> m29_35  [color=red, key=1, label=job, style=dashed];
m29_34 -> m29_35  [color=red, key=0, style=solid];
m29_34 -> m29_45  [key=2, style=dotted];
m29_34 -> m29_43  [key=2, style=dotted];
m29_34 -> m29_68  [color=red, key=2, style=dotted];
m29_40 -> m29_28  [color=blue, key=0, style=bold];
m29_40 -> m29_41  [color=red, key=0, style=solid];
m29_40 -> m29_68  [color=red, key=2, style=dotted];
m29_95 -> m29_96  [color=green, key=0, style=solid];
m29_96 -> m29_97  [color=green, key=0, style=solid];
m29_96 -> m29_25  [color=green, key=2, style=dotted];
m29_96 -> m29_45  [color=green, key=2, style=dotted];
m29_96 -> m29_98  [color=green, key=2, style=dotted];
m29_97 -> m29_95  [color=blue, key=0, style=bold];
m29_55 -> m29_56  [color=red, key=0, style=solid];
m29_55 -> m29_68  [color=red, key=2, style=dotted];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_73  [key=2, style=dotted];
m29_7 -> m29_74  [key=2, style=dotted];
m29_7 -> m29_14  [color=darkseagreen4, key=1, label=pager, style=dashed];
m29_7 -> m29_25  [color=darkseagreen4, key=1, label=pager, style=dashed];
m29_7 -> m29_64  [color=darkseagreen4, key=1, label=pager, style=dashed];
m29_21 -> m29_22  [color=red, key=0, style=solid];
m29_21 -> m29_77  [color=red, key=2, style=dotted];
m29_70 -> m29_71  [color=green, key=0, style=solid];
m29_70 -> m29_25  [color=green, key=2, style=dotted];
m29_70 -> m29_72  [color=green, key=2, style=dotted];
m29_70 -> m29_73  [color=green, key=2, style=dotted];
m29_70 -> m29_45  [color=green, key=2, style=dotted];
m29_70 -> m29_51  [color=green, key=2, style=dotted];
m29_0 -> m29_1  [key=0, style=solid];
m29_0 -> m29_2  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m29_0 -> m29_3  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m29_0 -> m29_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m29_1 -> m29_2  [color=red, key=0, style=solid];
m29_1 -> m29_68  [key=2, style=dotted];
m29_2 -> m29_3  [color=red, key=0, style=solid];
m29_2 -> m29_6  [key=2, style=dotted];
m29_2 -> m29_69  [color=red, key=2, style=dotted];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_7  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_70  [key=2, style=dotted];
m29_4 -> m29_71  [key=2, style=dotted];
m29_4 -> m29_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m29_5 -> m29_0  [color=blue, key=0, style=bold];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_70  [key=2, style=dotted];
m29_5 -> m29_71  [key=2, style=dotted];
m29_5 -> m29_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m29_138 -> m29_139  [color=green, key=0, style=solid];
m29_138 -> m29_46  [color=green, key=2, style=dotted];
m29_138 -> m29_149  [color=green, key=1, label="lambda expression", style=dashed];
m29_136 -> m29_137  [color=green, key=0, style=solid];
m29_136 -> m29_46  [color=green, key=2, style=dotted];
m29_136 -> m29_141  [color=green, key=1, label="lambda expression", style=dashed];
m29_134 -> m29_136  [color=green, key=1, label=string, style=dashed];
m29_134 -> m29_142  [color=green, key=1, label=string, style=dashed];
m29_134 -> m29_137  [color=green, key=1, label=string, style=dashed];
m29_134 -> m29_146  [color=green, key=1, label=string, style=dashed];
m29_134 -> m29_138  [color=green, key=1, label=string, style=dashed];
m29_134 -> m29_150  [color=green, key=1, label=string, style=dashed];
m29_134 -> m29_135  [key=0, style=solid];
m29_135 -> m29_136  [color=green, key=0, style=solid];
m29_135 -> m29_137  [color=green, key=1, label=transaction, style=dashed];
m29_135 -> m29_138  [color=green, key=1, label=transaction, style=dashed];
m29_135 -> m29_16  [key=2, style=dotted];
m29_135 -> m29_139  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m29_137 -> m29_138  [color=green, key=0, style=solid];
m29_137 -> m29_46  [color=green, key=2, style=dotted];
m29_137 -> m29_145  [color=green, key=1, label="lambda expression", style=dashed];
m29_139 -> m29_47  [key=2, style=dotted];
m29_139 -> m29_140  [key=0, style=solid];
m29_140 -> m29_134  [color=blue, key=0, style=bold];
m29_42 -> m29_43  [color=red, key=0, style=solid];
m29_42 -> m29_68  [color=red, key=2, style=dotted];
m29_15 -> m29_16  [color=red, key=0, style=solid];
m29_15 -> m29_68  [color=red, key=2, style=dotted];
m29_71 -> m29_69  [color=blue, key=0, style=bold];
m29_56 -> m29_58  [color=green, key=1, label=string, style=dashed];
m29_56 -> m29_66  [color=green, key=1, label=string, style=dashed];
m29_56 -> m29_59  [color=red, key=1, label=job, style=dashed];
m29_56 -> m29_70  [color=green, key=1, label=string, style=dashed];
m29_56 -> m29_57  [color=red, key=0, style=solid];
m29_56 -> m29_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m29_56 -> m29_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_56 -> m29_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_56 -> m29_81  [color=red, key=2, style=dotted];
m29_56 -> m29_77  [color=red, key=2, style=dotted];
m29_56 -> m29_56  [color=red, key=1, label=job, style=dashed];
m29_58 -> m29_59  [color=red, key=0, style=solid];
m29_58 -> m29_46  [color=green, key=2, style=dotted];
m29_58 -> m29_65  [color=green, key=1, label="lambda expression", style=dashed];
m29_58 -> m29_68  [color=red, key=2, style=dotted];
m29_57 -> m29_58  [color=red, key=0, style=solid];
m29_57 -> m29_59  [color=green, key=1, label=transaction, style=dashed];
m29_57 -> m29_63  [color=green, key=1, label=transaction, style=dashed];
m29_57 -> m29_16  [key=2, style=dotted];
m29_57 -> m29_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m29_57 -> m29_68  [color=red, key=2, style=dotted];
m29_59 -> m29_60  [color=red, key=0, style=solid];
m29_59 -> m29_46  [color=green, key=2, style=dotted];
m29_59 -> m29_69  [color=green, key=1, label="lambda expression", style=dashed];
m29_59 -> m29_61  [color=red, key=0, style=solid];
m29_59 -> m29_59  [color=red, key=1, label=job, style=dashed];
m29_60 -> m29_63  [color=green, key=0, style=solid];
m29_60 -> m29_61  [color=red, key=0, style=solid];
m29_60 -> m29_82  [color=red, key=2, style=dotted];
m29_60 -> m29_77  [color=red, key=2, style=dotted];
m29_60 -> m29_60  [color=red, key=1, label=job, style=dashed];
m29_63 -> m29_64  [color=red, key=0, style=solid];
m29_63 -> m29_47  [color=green, key=2, style=dotted];
m29_63 -> m29_68  [color=red, key=2, style=dotted];
m29_62 -> m29_46  [key=2, style=dotted];
m29_62 -> m29_60  [key=0, style=solid];
m29_62 -> m29_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_62 -> m29_33  [color=red, key=0, style=solid];
m29_62 -> m29_68  [color=red, key=2, style=dotted];
m29_61 -> m29_62  [color=red, key=0, style=solid];
m29_61 -> m29_75  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m29_61 -> m29_68  [color=red, key=2, style=dotted];
m29_64 -> m29_56  [color=blue, key=0, style=bold];
m29_64 -> m29_65  [key=0, style=solid];
m29_64 -> m29_83  [key=2, style=dotted];
m29_64 -> m29_77  [key=2, style=dotted];
m29_99 -> m29_100  [color=green, key=0, style=solid];
m29_99 -> m29_111  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_100 -> m29_101  [color=green, key=0, style=solid];
m29_100 -> m29_116  [color=green, key=2, style=dotted];
m29_100 -> m29_104  [color=green, key=1, label=serverNames, style=dashed];
m29_101 -> m29_102  [color=green, key=0, style=solid];
m29_101 -> m29_72  [color=green, key=2, style=dotted];
m29_101 -> m29_106  [color=green, key=1, label=heartbeats, style=dashed];
m29_101 -> m29_128  [color=green, key=1, label=heartbeats, style=dashed];
m29_101 -> m29_109  [color=green, key=1, label=heartbeats, style=dashed];
m29_104 -> m29_105  [color=green, key=0, style=solid];
m29_104 -> m29_107  [color=green, key=0, style=solid];
m29_102 -> m29_103  [color=green, key=0, style=solid];
m29_102 -> m29_111  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m29_106 -> m29_104  [color=green, key=0, style=solid];
m29_106 -> m29_46  [color=green, key=2, style=dotted];
m29_106 -> m29_122  [color=green, key=1, label="lambda expression", style=dashed];
m29_106 -> m29_127  [color=green, key=1, label="lambda expression", style=dashed];
m29_109 -> m29_110  [color=green, key=0, style=solid];
m29_109 -> m29_114  [color=green, key=0, style=solid];
m29_103 -> m29_104  [color=green, key=0, style=solid];
m29_103 -> m29_106  [color=green, key=1, label=pipeline, style=dashed];
m29_103 -> m29_117  [color=green, key=2, style=dotted];
m29_103 -> m29_107  [color=green, key=1, label=pipeline, style=dashed];
m29_105 -> m29_106  [color=green, key=0, style=solid];
m29_105 -> m29_128  [color=green, key=1, label=name, style=dashed];
m29_105 -> m29_123  [color=green, key=1, label=name, style=dashed];
m29_107 -> m29_108  [color=green, key=0, style=solid];
m29_107 -> m29_118  [color=green, key=2, style=dotted];
m29_111 -> m29_109  [color=green, key=0, style=solid];
m29_111 -> m29_112  [key=0, style=solid];
m29_111 -> m29_121  [key=2, style=dotted];
m29_108 -> m29_109  [color=green, key=0, style=solid];
m29_108 -> m29_114  [color=green, key=1, label=removedServerCount, style=dashed];
m29_108 -> m29_113  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m29_113 -> m29_109  [color=green, key=0, style=solid];
m29_113 -> m29_114  [color=green, key=1, label=removedServerCount, style=dashed];
m29_113 -> m29_113  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m29_110 -> m29_111  [key=0, style=solid];
m29_110 -> m29_110  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m29_110 -> m29_119  [key=2, style=dotted];
m29_110 -> m29_120  [key=2, style=dotted];
m29_110 -> m29_112  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m29_114 -> m29_115  [color=green, key=0, style=solid];
m29_112 -> m29_81  [key=2, style=dotted];
m29_112 -> m29_113  [key=0, style=solid];
m29_112 -> m29_112  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m29_115 -> m29_99  [color=blue, key=0, style=bold];
m29_11 -> m29_12  [color=red, key=0, style=solid];
m29_11 -> m29_68  [color=red, key=2, style=dotted];
m29_82 -> m29_83  [color=green, key=0, style=solid];
m29_82 -> m29_16  [color=green, key=2, style=dotted];
m29_82 -> m29_84  [color=green, key=1, label=transaction, style=dashed];
m29_82 -> m29_85  [color=green, key=1, label=transaction, style=dashed];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_75  [key=2, style=dotted];
m29_8 -> m29_33  [color=red, key=1, label=jobs, style=dashed];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> m29_11  [key=2, style=dotted];
m29_9 -> m29_68  [key=2, style=dotted];
m29_10 -> m29_8  [color=blue, key=0, style=bold];
m29_10 -> m29_11  [color=red, key=0, style=solid];
m29_10 -> m29_76  [key=2, style=dotted];
m29_10 -> m29_77  [key=2, style=dotted];
m29_18 -> m29_19  [key=0, style=solid];
m29_18 -> m29_68  [key=2, style=dotted];
m29_18 -> m29_20  [key=2, style=dotted];
m29_18 -> m29_21  [key=2, style=dotted];
m29_17 -> m29_66  [color=red, key=0, style=solid];
m29_17 -> m29_68  [color=red, key=2, style=dotted];
m29_17 -> m29_18  [key=0, style=solid];
m29_19 -> m29_20  [color=red, key=0, style=solid];
m29_19 -> m29_78  [key=2, style=dotted];
m29_19 -> m29_77  [key=2, style=dotted];
m29_19 -> m29_17  [color=blue, key=0, style=bold];
m29_22 -> m29_23  [color=red, key=0, style=solid];
m29_22 -> m29_68  [color=red, key=2, style=dotted];
m29_23 -> m29_24  [color=red, key=0, style=solid];
m29_23 -> m29_77  [color=red, key=2, style=dotted];
m29_23 -> m29_25  [key=2, style=dotted];
m29_23 -> m29_26  [key=2, style=dotted];
m29_23 -> m29_27  [key=2, style=dotted];
m29_24 -> m29_25  [color=red, key=0, style=solid];
m29_24 -> m29_68  [color=red, key=2, style=dotted];
m29_24 -> m29_22  [color=blue, key=0, style=bold];
m29_27 -> m29_28  [color=red, key=0, style=solid];
m29_27 -> m29_77  [color=red, key=2, style=dotted];
m29_43 -> m29_44  [color=red, key=0, style=solid];
m29_43 -> m29_68  [color=red, key=2, style=dotted];
m29_41 -> m29_42  [color=red, key=0, style=solid];
m29_41 -> m29_77  [color=red, key=2, style=dotted];
m29_41 -> m29_41  [color=red, key=1, label=job, style=dashed];
m29_41 -> m29_44  [color=red, key=1, label=job, style=dashed];
m29_44 -> m29_45  [color=red, key=0, style=solid];
m29_44 -> m29_80  [color=red, key=2, style=dotted];
m29_44 -> m29_77  [color=red, key=2, style=dotted];
m29_44 -> m29_44  [color=red, key=1, label=job, style=dashed];
m29_44 -> m29_46  [color=red, key=1, label=job, style=dashed];
m29_45 -> m29_46  [color=red, key=0, style=solid];
m29_45 -> m29_68  [key=2, style=dotted];
m29_46 -> m29_47  [color=red, key=0, style=solid];
m29_46 -> m29_50  [color=red, key=0, style=solid];
m29_46 -> m29_46  [color=red, key=1, label=job, style=dashed];
m29_46 -> m29_51  [color=red, key=1, label=job, style=dashed];
m29_47 -> m29_48  [color=red, key=0, style=solid];
m29_47 -> m29_68  [color=red, key=2, style=dotted];
m29_50 -> m29_51  [color=red, key=0, style=solid];
m29_50 -> m29_68  [color=red, key=2, style=dotted];
m29_50 -> m29_48  [color=blue, key=0, style=bold];
m29_48 -> m29_49  [color=green, key=0, style=solid];
m29_48 -> m29_77  [color=red, key=2, style=dotted];
m29_49 -> m29_50  [color=green, key=0, style=solid];
m29_49 -> m29_68  [color=red, key=2, style=dotted];
m29_49 -> m29_25  [color=green, key=2, style=dotted];
m29_49 -> m29_51  [color=green, key=2, style=dotted];
m29_52 -> m29_53  [color=red, key=0, style=solid];
m29_52 -> m29_68  [color=red, key=2, style=dotted];
m29_53 -> m29_54  [color=red, key=0, style=solid];
m29_53 -> m29_77  [color=red, key=2, style=dotted];
m29_53 -> m29_25  [key=2, style=dotted];
m29_53 -> m29_55  [key=2, style=dotted];
m29_54 -> m29_62  [color=red, key=0, style=solid];
m29_54 -> m29_68  [color=red, key=2, style=dotted];
m29_54 -> m29_52  [color=blue, key=0, style=bold];
m29_65 -> m29_66  [color=green, key=0, style=solid];
m29_65 -> m29_68  [key=2, style=dotted];
m29_66 -> m29_67  [color=green, key=0, style=solid];
m29_66 -> m29_68  [color=green, key=2, style=dotted];
m29_67 -> m29_0  [color=blue, key=0, style=bold];
m29_67 -> m29_65  [color=blue, key=0, style=bold];
m29_74 -> m29_75  [key=0, style=solid];
m29_128 -> m29_129  [color=green, key=0, style=solid];
m29_128 -> m29_130  [color=green, key=2, style=dotted];
m29_128 -> m29_131  [color=green, key=2, style=dotted];
m29_128 -> m29_132  [color=green, key=2, style=dotted];
m29_128 -> m29_133  [color=green, key=2, style=dotted];
m29_122 -> m29_123  [color=green, key=0, style=solid];
m29_127 -> m29_128  [color=green, key=0, style=solid];
m29_129 -> m29_127  [color=blue, key=0, style=bold];
m29_123 -> m29_124  [color=green, key=0, style=solid];
m29_123 -> m29_125  [color=green, key=2, style=dotted];
m29_123 -> m29_126  [color=green, key=2, style=dotted];
m29_124 -> m29_122  [color=blue, key=0, style=bold];
m29_141 -> m29_142  [color=green, key=0, style=solid];
m29_142 -> m29_143  [color=green, key=0, style=solid];
m29_142 -> m29_25  [color=green, key=2, style=dotted];
m29_142 -> m29_144  [color=green, key=2, style=dotted];
m29_143 -> m29_141  [color=blue, key=0, style=bold];
m29_145 -> m29_146  [color=green, key=0, style=solid];
m29_146 -> m29_147  [color=green, key=0, style=solid];
m29_146 -> m29_25  [color=green, key=2, style=dotted];
m29_146 -> m29_148  [color=green, key=2, style=dotted];
m29_147 -> m29_145  [color=blue, key=0, style=bold];
m29_149 -> m29_150  [color=green, key=0, style=solid];
m29_150 -> m29_151  [color=green, key=0, style=solid];
m29_150 -> m29_25  [color=green, key=2, style=dotted];
m29_150 -> m29_148  [color=green, key=2, style=dotted];
m29_151 -> m29_149  [color=blue, key=0, style=bold];
m29_75 -> m29_25  [key=2, style=dotted];
m29_75 -> m29_76  [key=0, style=solid];
m29_75 -> m29_77  [key=2, style=dotted];
m29_92 -> m29_25  [key=2, style=dotted];
m29_92 -> m29_93  [key=0, style=solid];
m29_92 -> m29_94  [key=2, style=dotted];
m29_88 -> m29_89  [key=0, style=solid];
m29_88 -> m29_90  [key=2, style=dotted];
m29_87 -> m29_88  [key=0, style=solid];
m29_91 -> m29_92  [key=0, style=solid];
m29_93 -> m29_91  [color=blue, key=0, style=bold];
m29_89 -> m29_87  [color=blue, key=0, style=bold];
m29_79 -> m29_80  [color=green, key=0, style=solid];
m29_79 -> m29_81  [color=green, key=2, style=dotted];
m29_80 -> m29_78  [color=blue, key=0, style=bold];
m29_81 -> m29_82  [color=green, key=0, style=solid];
m29_81 -> m29_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_81 -> m29_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_81 -> m29_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_81 -> m29_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_84 -> m29_46  [key=2, style=dotted];
m29_84 -> m29_85  [key=0, style=solid];
m29_84 -> m29_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_84 -> m29_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_2  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_11  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_12  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_13  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_15  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_16  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_17  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_20  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_21  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_22  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_23  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_24  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_26  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_27  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_28  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_29  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_30  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_31  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_32  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_34  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_35  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_36  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_37  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_38  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_40  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_41  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_42  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_43  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_44  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_45  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_47  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_48  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_49  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_50  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_52  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_53  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_54  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_55  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_56  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_57  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_58  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_60  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_61  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_62  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_63  [color=red, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_84 -> m29_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m29_85 -> m29_47  [key=2, style=dotted];
m29_85 -> m29_86  [key=0, style=solid];
m29_86 -> m29_81  [color=blue, key=0, style=bold];
m29_153 -> m29_49  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m29_154 -> m29_49  [color=green, key=1, label=jobId, style=dashed];
m29_154 -> m29_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m29_156 -> m29_66  [color=green, key=1, label=string, style=dashed];
m29_156 -> m29_70  [color=green, key=1, label=string, style=dashed];
m29_156 -> m29_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_157 -> m29_70  [color=green, key=1, label=int, style=dashed];
m29_152 -> m29_79  [color=green, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_96  [color=green, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_100  [color=green, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_103  [color=green, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_35  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_57  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_2  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_13  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_18  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_152 -> m29_112  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageConnection", style=dashed];
m29_160 -> m29_128  [color=green, key=1, label=name, style=dashed];
m29_160 -> m29_123  [color=green, key=1, label=name, style=dashed];
m29_161 -> m29_128  [color=green, key=1, label=heartbeats, style=dashed];
m29_162 -> m29_142  [color=green, key=1, label=string, style=dashed];
m29_163 -> m29_142  [color=green, key=1, label=string, style=dashed];
m29_163 -> m29_146  [color=green, key=1, label=string, style=dashed];
m29_163 -> m29_150  [color=green, key=1, label=string, style=dashed];
m29_155 -> m29_53  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m29_158 -> m29_75  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m29_159 -> m29_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_159 -> m29_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_0 -> m32_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_0 -> m32_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_51  [key=2, style=dotted];
m32_1 -> m32_7  [color=darkseagreen4, key=1, label=time, style=dashed];
m32_2 -> m32_3  [key=0, style=solid];
m32_2 -> m32_52  [key=2, style=dotted];
m32_2 -> m32_53  [key=2, style=dotted];
m32_2 -> m32_54  [key=2, style=dotted];
m32_2 -> m32_55  [key=2, style=dotted];
m32_2 -> m32_4  [key=0, style=solid];
m32_2 -> m32_9  [key=2, style=dotted];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_7  [key=0, style=solid];
m32_3 -> m32_10  [key=2, style=dotted];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_56  [key=2, style=dotted];
m32_4 -> m32_9  [color=darkseagreen4, key=1, label=from, style=dashed];
m32_4 -> m32_6  [key=0, style=solid];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_56  [key=2, style=dotted];
m32_5 -> m32_9  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m32_5 -> m32_7  [key=0, style=solid];
m32_5 -> m32_11  [key=2, style=dotted];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_58  [key=2, style=dotted];
m32_9 -> m32_59  [key=2, style=dotted];
m32_9 -> m32_55  [key=2, style=dotted];
m32_9 -> m32_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m32_9 -> m32_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m32_9 -> m32_49  [color=darkseagreen4, key=1, label=pager, style=dashed];
m32_6 -> m32_7  [key=0, style=solid];
m32_6 -> m32_13  [key=2, style=dotted];
m32_6 -> m32_8  [key=0, style=solid];
m32_6 -> m32_12  [key=2, style=dotted];
m32_7 -> m32_8  [key=0, style=solid];
m32_7 -> m32_13  [key=2, style=dotted];
m32_7 -> m32_14  [key=2, style=dotted];
m32_7 -> m32_15  [key=2, style=dotted];
m32_8 -> m32_9  [key=0, style=solid];
m32_8 -> m32_57  [key=2, style=dotted];
m32_8 -> m32_10  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m32_8 -> m32_0  [color=blue, key=0, style=bold];
m32_10 -> m32_11  [key=0, style=solid];
m32_10 -> m32_60  [key=2, style=dotted];
m32_10 -> m32_19  [color=darkseagreen4, key=1, label=enqueuedJobs, style=dashed];
m32_12 -> m32_13  [key=0, style=solid];
m32_12 -> m32_14  [key=0, style=solid];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_62  [key=2, style=dotted];
m32_17 -> m32_63  [key=2, style=dotted];
m32_17 -> m32_64  [key=2, style=dotted];
m32_17 -> m32_23  [color=darkseagreen4, key=1, label=time, style=dashed];
m32_49 -> m32_50  [key=0, style=solid];
m32_49 -> m32_70  [key=2, style=dotted];
m32_49 -> m32_63  [key=2, style=dotted];
m32_49 -> m32_64  [key=2, style=dotted];
m32_49 -> m32_46  [color=blue, key=0, style=bold];
m32_11 -> m32_12  [key=0, style=solid];
m32_11 -> m32_51  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_48  [key=0, style=solid];
m32_19 -> m32_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_19 -> m32_23  [key=0, style=solid];
m32_19 -> m32_10  [key=2, style=dotted];
m32_13 -> m32_50  [key=0, style=solid];
m32_13 -> m32_51  [key=2, style=dotted];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_51  [key=2, style=dotted];
m32_15 -> m32_16  [key=0, style=solid];
m32_15 -> m32_55  [key=2, style=dotted];
m32_15 -> m32_61  [key=2, style=dotted];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_51  [key=2, style=dotted];
m32_16 -> m32_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_16 -> m32_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_16 -> m32_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_51  [key=2, style=dotted];
m32_18 -> m32_20  [key=0, style=solid];
m32_18 -> m32_9  [key=2, style=dotted];
m32_20 -> m32_21  [key=0, style=solid];
m32_20 -> m32_51  [key=2, style=dotted];
m32_20 -> m32_22  [key=0, style=solid];
m32_20 -> m32_9  [key=2, style=dotted];
m32_48 -> m32_49  [key=0, style=solid];
m32_48 -> m32_51  [key=2, style=dotted];
m32_48 -> m32_50  [key=2, style=dotted];
m32_21 -> m32_22  [key=0, style=solid];
m32_21 -> m32_61  [key=2, style=dotted];
m32_21 -> m32_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_21 -> m32_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_21 -> m32_11  [key=2, style=dotted];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_51  [key=2, style=dotted];
m32_22 -> m32_13  [key=2, style=dotted];
m32_22 -> m32_24  [key=0, style=solid];
m32_22 -> m32_12  [key=2, style=dotted];
m32_23 -> m32_24  [key=0, style=solid];
m32_23 -> m32_61  [key=2, style=dotted];
m32_23 -> m32_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_23 -> m32_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_23 -> m32_13  [key=2, style=dotted];
m32_23 -> m32_14  [key=2, style=dotted];
m32_23 -> m32_15  [key=2, style=dotted];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_51  [key=2, style=dotted];
m32_24 -> m32_16  [color=blue, key=0, style=bold];
m32_25 -> m32_26  [key=0, style=solid];
m32_25 -> m32_55  [key=2, style=dotted];
m32_25 -> m32_61  [key=2, style=dotted];
m32_25 -> m32_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_25 -> m32_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_51  [key=2, style=dotted];
m32_27 -> m32_28  [key=0, style=solid];
m32_27 -> m32_65  [key=2, style=dotted];
m32_27 -> m32_64  [key=2, style=dotted];
m32_27 -> m32_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_27 -> m32_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_51  [key=2, style=dotted];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_31  [key=0, style=solid];
m32_29 -> m32_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_29 -> m32_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_30 -> m32_31  [key=0, style=solid];
m32_30 -> m32_51  [key=2, style=dotted];
m32_31 -> m32_32  [key=0, style=solid];
m32_31 -> m32_51  [key=2, style=dotted];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_66  [key=2, style=dotted];
m32_32 -> m32_67  [key=2, style=dotted];
m32_32 -> m32_61  [key=2, style=dotted];
m32_32 -> m32_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_32 -> m32_34  [color=darkseagreen4, key=1, label=checkedTimestamp, style=dashed];
m32_32 -> m32_13  [key=2, style=dotted];
m32_32 -> m32_37  [key=2, style=dotted];
m32_33 -> m32_34  [key=0, style=solid];
m32_33 -> m32_51  [key=2, style=dotted];
m32_33 -> m32_38  [key=2, style=dotted];
m32_34 -> m32_35  [color=green, key=0, style=solid];
m32_34 -> m32_61  [key=2, style=dotted];
m32_34 -> m32_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_34 -> m32_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_34 -> m32_39  [key=2, style=dotted];
m32_35 -> m32_36  [color=green, key=0, style=solid];
m32_35 -> m32_51  [key=2, style=dotted];
m32_35 -> m32_40  [color=green, key=2, style=dotted];
m32_35 -> m32_41  [color=green, key=2, style=dotted];
m32_36 -> m32_37  [key=0, style=solid];
m32_36 -> m32_55  [key=2, style=dotted];
m32_36 -> m32_61  [key=2, style=dotted];
m32_36 -> m32_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_36 -> m32_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_36 -> m32_31  [color=blue, key=0, style=bold];
m32_37 -> m32_38  [key=0, style=solid];
m32_37 -> m32_51  [key=2, style=dotted];
m32_38 -> m32_39  [key=0, style=solid];
m32_38 -> m32_68  [key=2, style=dotted];
m32_38 -> m32_64  [key=2, style=dotted];
m32_38 -> m32_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_38 -> m32_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_39 -> m32_40  [key=0, style=solid];
m32_39 -> m32_51  [key=2, style=dotted];
m32_40 -> m32_41  [key=0, style=solid];
m32_40 -> m32_46  [key=0, style=solid];
m32_40 -> m32_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_40 -> m32_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_41 -> m32_42  [key=0, style=solid];
m32_41 -> m32_51  [key=2, style=dotted];
m32_46 -> m32_47  [key=0, style=solid];
m32_46 -> m32_51  [key=2, style=dotted];
m32_42 -> m32_43  [key=0, style=solid];
m32_42 -> m32_69  [key=2, style=dotted];
m32_42 -> m32_61  [key=2, style=dotted];
m32_42 -> m32_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_42 -> m32_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_51  [key=2, style=dotted];
m32_43 -> m32_13  [key=2, style=dotted];
m32_43 -> m32_37  [key=2, style=dotted];
m32_43 -> m32_43  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m32_44 -> m32_45  [key=0, style=solid];
m32_44 -> m32_61  [key=2, style=dotted];
m32_44 -> m32_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_44 -> m32_38  [key=2, style=dotted];
m32_45 -> m32_47  [key=0, style=solid];
m32_45 -> m32_51  [key=2, style=dotted];
m32_45 -> m32_42  [color=blue, key=0, style=bold];
m32_47 -> m32_19  [key=0, style=solid];
m32_47 -> m32_51  [key=2, style=dotted];
m32_47 -> m32_13  [key=2, style=dotted];
m32_47 -> m32_37  [key=2, style=dotted];
m32_47 -> m32_48  [key=0, style=solid];
m32_50 -> m32_0  [color=blue, key=0, style=bold];
m32_58 -> m32_55  [color=blue, key=0, style=bold];
m32_56 -> m32_13  [key=2, style=dotted];
m32_56 -> m32_37  [key=2, style=dotted];
m32_56 -> m32_57  [key=0, style=solid];
m32_51 -> m32_52  [key=0, style=solid];
m32_53 -> m32_38  [key=2, style=dotted];
m32_53 -> m32_54  [key=0, style=solid];
m32_54 -> m32_51  [color=blue, key=0, style=bold];
m32_52 -> m32_13  [key=2, style=dotted];
m32_52 -> m32_37  [key=2, style=dotted];
m32_52 -> m32_53  [key=0, style=solid];
m32_55 -> m32_56  [key=0, style=solid];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_50  [key=2, style=dotted];
m32_71 -> m32_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m32_71 -> m32_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_2  [color=red, key=0, style=solid];
m33_1 -> m33_97  [key=2, style=dotted];
m33_2 -> m33_3  [color=red, key=0, style=solid];
m33_2 -> m33_98  [color=red, key=2, style=dotted];
m33_3 -> m33_4  [key=0, style=solid];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_99  [key=2, style=dotted];
m33_4 -> m33_100  [key=2, style=dotted];
m33_4 -> m33_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_99  [key=2, style=dotted];
m33_5 -> m33_100  [key=2, style=dotted];
m33_5 -> m33_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_102  [key=2, style=dotted];
m33_7 -> m33_103  [key=2, style=dotted];
m33_7 -> m33_14  [color=darkseagreen4, key=1, label=pager, style=dashed];
m33_7 -> m33_36  [color=darkseagreen4, key=1, label=pager, style=dashed];
m33_7 -> m33_93  [color=darkseagreen4, key=1, label=pager, style=dashed];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_101  [key=2, style=dotted];
m33_6 -> m33_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_104  [key=2, style=dotted];
m33_8 -> m33_45  [color=green, key=1, label=failedJobs, style=dashed];
m33_14 -> m33_15  [color=green, key=0, style=solid];
m33_14 -> m33_18  [color=red, key=0, style=solid];
m33_36 -> m33_37  [color=green, key=0, style=solid];
m33_36 -> m33_109  [key=2, style=dotted];
m33_36 -> m33_106  [key=2, style=dotted];
m33_93 -> m33_94  [key=0, style=solid];
m33_93 -> m33_115  [key=2, style=dotted];
m33_93 -> m33_106  [key=2, style=dotted];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_97  [key=2, style=dotted];
m33_45 -> m33_46  [color=green, key=0, style=solid];
m33_45 -> m33_92  [color=green, key=0, style=solid];
m33_45 -> m33_47  [color=green, key=1, label=job, style=dashed];
m33_10 -> m33_11  [color=red, key=0, style=solid];
m33_10 -> m33_105  [key=2, style=dotted];
m33_10 -> m33_106  [key=2, style=dotted];
m33_11 -> m33_12  [color=green, key=0, style=solid];
m33_11 -> m33_97  [color=red, key=2, style=dotted];
m33_12 -> m33_13  [color=green, key=0, style=solid];
m33_12 -> m33_106  [color=green, key=2, style=dotted];
m33_13 -> m33_14  [color=green, key=0, style=solid];
m33_13 -> m33_97  [color=green, key=2, style=dotted];
m33_15 -> m33_16  [color=green, key=0, style=solid];
m33_15 -> m33_97  [color=green, key=2, style=dotted];
m33_18 -> m33_19  [color=green, key=0, style=solid];
m33_18 -> m33_97  [color=red, key=2, style=dotted];
m33_16 -> m33_17  [color=red, key=0, style=solid];
m33_16 -> m33_106  [color=red, key=2, style=dotted];
m33_17 -> m33_95  [color=red, key=0, style=solid];
m33_17 -> m33_97  [color=red, key=2, style=dotted];
m33_19 -> m33_20  [color=green, key=0, style=solid];
m33_19 -> m33_107  [color=green, key=2, style=dotted];
m33_19 -> m33_106  [color=green, key=2, style=dotted];
m33_20 -> m33_21  [color=green, key=0, style=solid];
m33_20 -> m33_97  [color=green, key=2, style=dotted];
m33_21 -> m33_22  [color=green, key=0, style=solid];
m33_21 -> m33_97  [color=green, key=2, style=dotted];
m33_22 -> m33_23  [color=green, key=0, style=solid];
m33_22 -> m33_108  [color=green, key=2, style=dotted];
m33_22 -> m33_106  [color=green, key=2, style=dotted];
m33_23 -> m33_24  [color=red, key=0, style=solid];
m33_23 -> m33_97  [color=red, key=2, style=dotted];
m33_24 -> m33_25  [color=green, key=0, style=solid];
m33_24 -> m33_106  [color=red, key=2, style=dotted];
m33_25 -> m33_26  [color=green, key=0, style=solid];
m33_25 -> m33_97  [color=green, key=2, style=dotted];
m33_26 -> m33_27  [color=green, key=0, style=solid];
m33_26 -> m33_106  [color=green, key=2, style=dotted];
m33_27 -> m33_28  [color=red, key=0, style=solid];
m33_27 -> m33_97  [color=red, key=2, style=dotted];
m33_28 -> m33_29  [color=red, key=0, style=solid];
m33_28 -> m33_108  [color=red, key=2, style=dotted];
m33_28 -> m33_106  [color=red, key=2, style=dotted];
m33_29 -> m33_30  [color=red, key=0, style=solid];
m33_29 -> m33_97  [color=red, key=2, style=dotted];
m33_30 -> m33_31  [color=red, key=0, style=solid];
m33_30 -> m33_106  [color=red, key=2, style=dotted];
m33_31 -> m33_32  [color=red, key=0, style=solid];
m33_31 -> m33_97  [color=red, key=2, style=dotted];
m33_32 -> m33_33  [color=red, key=0, style=solid];
m33_32 -> m33_106  [color=red, key=2, style=dotted];
m33_33 -> m33_34  [color=red, key=0, style=solid];
m33_33 -> m33_97  [color=red, key=2, style=dotted];
m33_34 -> m33_35  [color=red, key=0, style=solid];
m33_34 -> m33_106  [color=red, key=2, style=dotted];
m33_35 -> m33_36  [color=red, key=0, style=solid];
m33_35 -> m33_97  [color=red, key=2, style=dotted];
m33_37 -> m33_38  [color=green, key=0, style=solid];
m33_37 -> m33_97  [color=green, key=2, style=dotted];
m33_38 -> m33_39  [color=red, key=0, style=solid];
m33_38 -> m33_106  [color=red, key=2, style=dotted];
m33_39 -> m33_40  [color=red, key=0, style=solid];
m33_39 -> m33_97  [color=red, key=2, style=dotted];
m33_40 -> m33_41  [color=red, key=0, style=solid];
m33_40 -> m33_106  [color=red, key=2, style=dotted];
m33_41 -> m33_42  [color=red, key=0, style=solid];
m33_41 -> m33_97  [color=red, key=2, style=dotted];
m33_42 -> m33_43  [color=red, key=0, style=solid];
m33_42 -> m33_106  [color=red, key=2, style=dotted];
m33_43 -> m33_44  [color=red, key=0, style=solid];
m33_43 -> m33_97  [color=red, key=2, style=dotted];
m33_44 -> m33_45  [color=green, key=0, style=solid];
m33_44 -> m33_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_44 -> m33_81  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_44 -> m33_44  [color=darkorchid, key=3, label="Local variable int index", style=bold];
m33_76 -> m33_77  [color=red, key=0, style=solid];
m33_76 -> m33_106  [color=red, key=2, style=dotted];
m33_81 -> m33_82  [color=red, key=0, style=solid];
m33_81 -> m33_106  [color=red, key=2, style=dotted];
m33_81 -> m33_81  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_46 -> m33_47  [color=green, key=0, style=solid];
m33_46 -> m33_97  [color=green, key=2, style=dotted];
m33_92 -> m33_93  [color=red, key=0, style=solid];
m33_92 -> m33_97  [color=red, key=2, style=dotted];
m33_47 -> m33_48  [color=red, key=0, style=solid];
m33_47 -> m33_106  [color=red, key=2, style=dotted];
m33_47 -> m33_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_47 -> m33_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_48 -> m33_49  [color=red, key=0, style=solid];
m33_48 -> m33_97  [key=2, style=dotted];
m33_49 -> m33_50  [color=red, key=0, style=solid];
m33_49 -> m33_106  [color=red, key=2, style=dotted];
m33_49 -> m33_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_49 -> m33_51  [color=green, key=1, label=job, style=dashed];
m33_50 -> m33_51  [color=green, key=0, style=solid];
m33_50 -> m33_97  [color=red, key=2, style=dotted];
m33_51 -> m33_52  [color=green, key=0, style=solid];
m33_51 -> m33_106  [color=green, key=2, style=dotted];
m33_51 -> m33_51  [color=green, key=1, label=job, style=dashed];
m33_51 -> m33_53  [color=green, key=1, label=job, style=dashed];
m33_52 -> m33_53  [color=red, key=0, style=solid];
m33_52 -> m33_97  [key=2, style=dotted];
m33_53 -> m33_54  [color=red, key=0, style=solid];
m33_53 -> m33_57  [color=red, key=0, style=solid];
m33_53 -> m33_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_53 -> m33_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_53 -> m33_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_54 -> m33_55  [color=red, key=0, style=solid];
m33_54 -> m33_97  [color=red, key=2, style=dotted];
m33_57 -> m33_58  [color=red, key=0, style=solid];
m33_57 -> m33_97  [color=red, key=2, style=dotted];
m33_55 -> m33_56  [color=red, key=0, style=solid];
m33_55 -> m33_106  [color=red, key=2, style=dotted];
m33_55 -> m33_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_55 -> m33_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_58 -> m33_59  [color=red, key=0, style=solid];
m33_58 -> m33_106  [color=red, key=2, style=dotted];
m33_58 -> m33_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_58 -> m33_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_56 -> m33_57  [color=red, key=0, style=solid];
m33_56 -> m33_97  [color=red, key=2, style=dotted];
m33_59 -> m33_60  [color=red, key=0, style=solid];
m33_59 -> m33_97  [color=red, key=2, style=dotted];
m33_60 -> m33_61  [color=red, key=0, style=solid];
m33_60 -> m33_110  [color=red, key=2, style=dotted];
m33_60 -> m33_106  [color=red, key=2, style=dotted];
m33_60 -> m33_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_60 -> m33_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_61 -> m33_62  [color=red, key=0, style=solid];
m33_61 -> m33_97  [key=2, style=dotted];
m33_62 -> m33_63  [color=red, key=0, style=solid];
m33_62 -> m33_66  [color=green, key=0, style=solid];
m33_62 -> m33_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_62 -> m33_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_63 -> m33_64  [color=red, key=0, style=solid];
m33_63 -> m33_97  [color=red, key=2, style=dotted];
m33_66 -> m33_67  [color=green, key=0, style=solid];
m33_66 -> m33_97  [color=green, key=2, style=dotted];
m33_67 -> m33_68  [color=red, key=0, style=solid];
m33_67 -> m33_69  [color=green, key=0, style=solid];
m33_67 -> m33_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_67 -> m33_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_64 -> m33_65  [color=green, key=0, style=solid];
m33_64 -> m33_106  [color=red, key=2, style=dotted];
m33_65 -> m33_66  [color=green, key=0, style=solid];
m33_65 -> m33_97  [color=green, key=2, style=dotted];
m33_68 -> m33_69  [color=green, key=0, style=solid];
m33_68 -> m33_111  [color=red, key=2, style=dotted];
m33_68 -> m33_106  [color=red, key=2, style=dotted];
m33_68 -> m33_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_68 -> m33_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_69 -> m33_70  [color=green, key=0, style=solid];
m33_69 -> m33_97  [color=green, key=2, style=dotted];
m33_70 -> m33_71  [color=red, key=0, style=solid];
m33_70 -> m33_112  [color=red, key=2, style=dotted];
m33_70 -> m33_106  [color=red, key=2, style=dotted];
m33_70 -> m33_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_70 -> m33_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_71 -> m33_72  [color=red, key=0, style=solid];
m33_71 -> m33_97  [color=red, key=2, style=dotted];
m33_72 -> m33_73  [color=red, key=0, style=solid];
m33_72 -> m33_78  [color=red, key=0, style=solid];
m33_72 -> m33_113  [color=red, key=2, style=dotted];
m33_72 -> m33_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_72 -> m33_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_72 -> m33_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_73 -> m33_74  [color=red, key=0, style=solid];
m33_73 -> m33_97  [color=red, key=2, style=dotted];
m33_78 -> m33_79  [color=red, key=0, style=solid];
m33_78 -> m33_97  [color=red, key=2, style=dotted];
m33_74 -> m33_75  [color=red, key=0, style=solid];
m33_74 -> m33_106  [color=red, key=2, style=dotted];
m33_74 -> m33_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_74 -> m33_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_79 -> m33_80  [color=red, key=0, style=solid];
m33_79 -> m33_45  [color=green, key=0, style=solid];
m33_79 -> m33_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_79 -> m33_83  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_75 -> m33_76  [color=red, key=0, style=solid];
m33_75 -> m33_97  [key=2, style=dotted];
m33_77 -> m33_78  [color=red, key=0, style=solid];
m33_77 -> m33_97  [color=red, key=2, style=dotted];
m33_80 -> m33_81  [color=red, key=0, style=solid];
m33_80 -> m33_97  [color=red, key=2, style=dotted];
m33_83 -> m33_84  [color=red, key=0, style=solid];
m33_83 -> m33_106  [color=red, key=2, style=dotted];
m33_83 -> m33_83  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_83 -> m33_85  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_82 -> m33_83  [color=red, key=0, style=solid];
m33_82 -> m33_97  [color=red, key=2, style=dotted];
m33_84 -> m33_85  [color=red, key=0, style=solid];
m33_84 -> m33_97  [color=red, key=2, style=dotted];
m33_85 -> m33_86  [color=red, key=0, style=solid];
m33_85 -> m33_106  [color=red, key=2, style=dotted];
m33_85 -> m33_85  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_85 -> m33_87  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_86 -> m33_87  [color=red, key=0, style=solid];
m33_86 -> m33_97  [color=red, key=2, style=dotted];
m33_87 -> m33_88  [color=red, key=0, style=solid];
m33_87 -> m33_91  [color=red, key=0, style=solid];
m33_87 -> m33_113  [color=red, key=2, style=dotted];
m33_87 -> m33_87  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_87 -> m33_89  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_88 -> m33_89  [color=red, key=0, style=solid];
m33_88 -> m33_97  [color=red, key=2, style=dotted];
m33_91 -> m33_45  [color=green, key=0, style=solid];
m33_91 -> m33_97  [color=red, key=2, style=dotted];
m33_89 -> m33_90  [color=red, key=0, style=solid];
m33_89 -> m33_114  [color=red, key=2, style=dotted];
m33_89 -> m33_106  [color=red, key=2, style=dotted];
m33_89 -> m33_89  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_90 -> m33_91  [color=red, key=0, style=solid];
m33_90 -> m33_97  [key=2, style=dotted];
m33_94 -> m33_95  [key=0, style=solid];
m33_94 -> m33_97  [key=2, style=dotted];
m33_95 -> m33_96  [key=0, style=solid];
m33_95 -> m33_97  [key=2, style=dotted];
m33_96 -> m33_0  [color=blue, key=0, style=bold];
m33_116 -> m33_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_12  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_13  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_15  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_19  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_20  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_21  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_22  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_25  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_26  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_36  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_37  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_39  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_41  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_46  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_51  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_56  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_58  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_59  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_61  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_63  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_65  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_66  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_69  [color=green, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_74  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_75  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_76  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_77  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_78  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_81  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_82  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_83  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_84  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_85  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_86  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_88  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_89  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_90  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_91  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_92  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_93  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_94  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_95  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
m34_3 -> m34_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_26 -> m35_27  [color=green, key=0, style=solid];
m35_26 -> m35_29  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m35_26 -> m35_30  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m35_26 -> m35_31  [color=red, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m35_26 -> m35_32  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m35_26 -> m35_34  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m35_26 -> m35_35  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m35_26 -> m35_36  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m35_26 -> m35_37  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m35_26 -> m35_39  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m35_26 -> m35_40  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m35_26 -> m35_41  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m35_26 -> m35_42  [color=darkseagreen4, key=1, label="Hangfire.Storage.IWriteOnlyTransaction", style=dashed];
m35_26 -> m35_78  [key=2, style=dotted];
m35_27 -> m35_28  [color=green, key=0, style=solid];
m35_27 -> m35_24  [key=2, style=dotted];
m35_27 -> m35_88  [color=green, key=2, style=dotted];
m35_29 -> m35_30  [color=green, key=0, style=solid];
m35_29 -> m35_31  [color=red, key=0, style=solid];
m35_29 -> m35_88  [key=2, style=dotted];
m35_29 -> m35_93  [key=2, style=dotted];
m35_30 -> m35_29  [key=0, style=solid];
m35_30 -> m35_44  [key=2, style=dotted];
m35_30 -> m35_31  [color=green, key=0, style=solid];
m35_30 -> m35_78  [color=green, key=2, style=dotted];
m35_31 -> m35_32  [color=green, key=0, style=solid];
m35_31 -> m35_33  [color=red, key=0, style=solid];
m35_31 -> m35_45  [color=red, key=2, style=dotted];
m35_31 -> m35_88  [color=green, key=2, style=dotted];
m35_32 -> m35_31  [color=red, key=0, style=solid];
m35_32 -> m35_46  [key=2, style=dotted];
m35_32 -> m35_78  [key=2, style=dotted];
m35_32 -> m35_33  [key=0, style=solid];
m35_34 -> m35_33  [key=0, style=solid];
m35_34 -> m35_47  [key=2, style=dotted];
m35_34 -> m35_78  [key=2, style=dotted];
m35_34 -> m35_35  [key=0, style=solid];
m35_35 -> m35_36  [key=0, style=solid];
m35_35 -> m35_48  [key=2, style=dotted];
m35_35 -> m35_88  [key=2, style=dotted];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_38  [key=0, style=solid];
m35_36 -> m35_45  [key=2, style=dotted];
m35_36 -> m35_78  [key=2, style=dotted];
m35_37 -> m35_36  [key=0, style=solid];
m35_37 -> m35_49  [key=2, style=dotted];
m35_37 -> m35_38  [color=green, key=0, style=solid];
m35_37 -> m35_88  [key=2, style=dotted];
m35_37 -> m35_94  [key=2, style=dotted];
m35_39 -> m35_38  [key=0, style=solid];
m35_39 -> m35_50  [key=2, style=dotted];
m35_39 -> m35_40  [color=green, key=0, style=solid];
m35_39 -> m35_88  [color=green, key=2, style=dotted];
m35_40 -> m35_41  [key=0, style=solid];
m35_40 -> m35_42  [key=0, style=solid];
m35_40 -> m35_78  [key=2, style=dotted];
m35_41 -> m35_43  [key=0, style=solid];
m35_41 -> m35_51  [key=2, style=dotted];
m35_41 -> m35_42  [color=green, key=0, style=solid];
m35_41 -> m35_88  [key=2, style=dotted];
m35_42 -> m35_43  [color=green, key=0, style=solid];
m35_42 -> m35_52  [key=2, style=dotted];
m35_42 -> m35_78  [color=green, key=2, style=dotted];
m35_28 -> m35_29  [color=green, key=0, style=solid];
m35_28 -> m35_33  [color=darkseagreen4, key=1, label=filters, style=dashed];
m35_28 -> m35_38  [color=darkseagreen4, key=1, label=filters, style=dashed];
m35_28 -> m35_78  [color=green, key=2, style=dotted];
m35_33 -> m35_34  [key=0, style=solid];
m35_33 -> m35_35  [key=0, style=solid];
m35_33 -> m35_88  [key=2, style=dotted];
m35_38 -> m35_39  [color=green, key=0, style=solid];
m35_38 -> m35_40  [key=0, style=solid];
m35_38 -> m35_78  [color=green, key=2, style=dotted];
m35_43 -> m35_26  [color=blue, key=0, style=bold];
m35_43 -> m35_44  [color=green, key=0, style=solid];
m35_43 -> m35_88  [key=2, style=dotted];
m35_0 -> m35_1  [key=0, style=solid];
m35_0 -> m35_3  [color=darkseagreen4, key=1, label="Hangfire.States.StateHandlerCollection", style=dashed];
m35_16 -> m35_17  [color=red, key=0, style=solid];
m35_16 -> m35_88  [color=green, key=2, style=dotted];
m35_16 -> m35_18  [color=red, key=2, style=dotted];
m35_15 -> m35_16  [color=red, key=0, style=solid];
m35_15 -> m35_78  [key=2, style=dotted];
m35_17 -> m35_18  [key=0, style=solid];
m35_17 -> m35_78  [key=2, style=dotted];
m35_17 -> m35_15  [color=blue, key=0, style=bold];
m35_21 -> m35_76  [color=green, key=0, style=solid];
m35_21 -> m35_78  [color=green, key=2, style=dotted];
m35_21 -> m35_22  [key=0, style=solid];
m35_21 -> m35_23  [key=0, style=solid];
m35_20 -> m35_21  [color=green, key=0, style=solid];
m35_20 -> m35_88  [key=2, style=dotted];
m35_20 -> m35_24  [key=2, style=dotted];
m35_76 -> m35_77  [key=0, style=solid];
m35_76 -> m35_78  [key=2, style=dotted];
m35_23 -> m35_24  [color=green, key=0, style=solid];
m35_23 -> m35_93  [color=green, key=2, style=dotted];
m35_23 -> m35_88  [color=green, key=2, style=dotted];
m35_23 -> m35_19  [color=blue, key=0, style=bold];
m35_22 -> m35_23  [color=green, key=0, style=solid];
m35_22 -> m35_78  [key=2, style=dotted];
m35_22 -> m35_21  [key=0, style=solid];
m35_22 -> m35_25  [key=2, style=dotted];
m35_24 -> m35_25  [color=green, key=0, style=solid];
m35_24 -> m35_78  [color=green, key=2, style=dotted];
m35_24 -> m35_53  [key=0, style=solid];
m35_25 -> m35_88  [key=2, style=dotted];
m35_25 -> m35_26  [key=0, style=solid];
m35_44 -> m35_45  [color=green, key=0, style=solid];
m35_44 -> m35_78  [color=green, key=2, style=dotted];
m35_45 -> m35_46  [color=green, key=0, style=solid];
m35_45 -> m35_88  [key=2, style=dotted];
m35_46 -> m35_47  [color=green, key=0, style=solid];
m35_46 -> m35_78  [color=green, key=2, style=dotted];
m35_47 -> m35_48  [key=0, style=solid];
m35_47 -> m35_73  [key=0, style=solid];
m35_47 -> m35_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_1 -> m35_78  [key=2, style=dotted];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_3  [key=0, style=solid];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_79  [key=2, style=dotted];
m35_2 -> m35_80  [key=2, style=dotted];
m35_2 -> m35_4  [key=0, style=solid];
m35_2 -> n21  [key=2, style=dotted];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_81  [key=2, style=dotted];
m35_4 -> m35_82  [key=2, style=dotted];
m35_4 -> m35_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m35_4 -> m35_0  [color=blue, key=0, style=bold];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_81  [key=2, style=dotted];
m35_5 -> m35_82  [key=2, style=dotted];
m35_5 -> m35_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m35_6 -> m35_7  [color=red, key=0, style=solid];
m35_6 -> m35_83  [key=2, style=dotted];
m35_6 -> m35_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m35_6 -> m35_9  [color=red, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m35_6 -> m35_12  [color=red, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m35_7 -> m35_37  [color=darkseagreen4, key=1, label=pager, style=dashed];
m35_7 -> m35_8  [color=red, key=0, style=solid];
m35_7 -> m35_84  [key=2, style=dotted];
m35_7 -> m35_85  [key=2, style=dotted];
m35_7 -> m35_18  [color=darkseagreen4, key=1, label=pager, style=dashed];
m35_7 -> m35_74  [color=darkseagreen4, key=1, label=pager, style=dashed];
m35_7 -> m35_9  [color=red, key=0, style=solid];
m35_8 -> m35_47  [color=darkseagreen4, key=1, label=fetchedJobs, style=dashed];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_86  [key=2, style=dotted];
m35_8 -> m35_10  [color=red, key=0, style=solid];
m35_8 -> n21  [color=red, key=2, style=dotted];
m35_9 -> m35_78  [key=2, style=dotted];
m35_9 -> m35_10  [color=red, key=0, style=solid];
m35_10 -> m35_88  [key=2, style=dotted];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_87  [key=2, style=dotted];
m35_10 -> m35_6  [color=blue, key=0, style=bold];
m35_11 -> m35_78  [key=2, style=dotted];
m35_11 -> m35_12  [color=red, key=0, style=solid];
m35_12 -> m35_88  [key=2, style=dotted];
m35_12 -> m35_13  [color=red, key=0, style=solid];
m35_12 -> m35_89  [key=2, style=dotted];
m35_12 -> m35_90  [key=2, style=dotted];
m35_12 -> m35_80  [key=2, style=dotted];
m35_12 -> m35_91  [key=2, style=dotted];
m35_12 -> m35_92  [key=2, style=dotted];
m35_12 -> m35_14  [color=red, key=2, style=dotted];
m35_12 -> m35_15  [color=red, key=1, label="lambda expression", style=dashed];
m35_13 -> m35_78  [key=2, style=dotted];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_11  [color=blue, key=0, style=bold];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_88  [key=2, style=dotted];
m35_14 -> m35_80  [key=2, style=dotted];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_78  [key=2, style=dotted];
m35_19 -> m35_22  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m35_48 -> m35_78  [key=2, style=dotted];
m35_48 -> m35_49  [key=0, style=solid];
m35_49 -> m35_88  [key=2, style=dotted];
m35_49 -> m35_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_50 -> m35_78  [key=2, style=dotted];
m35_50 -> m35_51  [key=0, style=solid];
m35_52 -> m35_78  [key=2, style=dotted];
m35_52 -> m35_53  [key=0, style=solid];
m35_53 -> m35_88  [key=2, style=dotted];
m35_53 -> m35_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_53 -> m35_54  [key=0, style=solid];
m35_53 -> m35_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_53 -> m35_55  [key=2, style=dotted];
m35_54 -> m35_78  [key=2, style=dotted];
m35_54 -> m35_55  [key=0, style=solid];
m35_54 -> m35_24  [color=blue, key=0, style=bold];
m35_55 -> m35_78  [key=2, style=dotted];
m35_55 -> m35_56  [key=0, style=solid];
m35_56 -> m35_88  [key=2, style=dotted];
m35_56 -> m35_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_56 -> m35_57  [key=0, style=solid];
m35_56 -> m35_95  [key=2, style=dotted];
m35_56 -> m35_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_57 -> m35_78  [key=2, style=dotted];
m35_57 -> m35_58  [key=0, style=solid];
m35_57 -> m35_3  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m35_57 -> m35_9  [color=red, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m35_57 -> m35_20  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m35_57 -> m35_27  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m35_57 -> m35_31  [color=red, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m35_57 -> m35_36  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m35_57 -> m35_53  [color=darkseagreen4, key=1, label="Hangfire.States.DefaultStateChangeProcess", style=dashed];
m35_59 -> m35_78  [key=2, style=dotted];
m35_59 -> m35_60  [key=0, style=solid];
m35_60 -> m35_88  [key=2, style=dotted];
m35_60 -> m35_61  [key=0, style=solid];
m35_61 -> m35_78  [key=2, style=dotted];
m35_61 -> m35_72  [key=0, style=solid];
m35_62 -> m35_78  [key=2, style=dotted];
m35_62 -> m35_63  [key=0, style=solid];
m35_63 -> m35_88  [key=2, style=dotted];
m35_63 -> m35_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_63 -> m35_64  [key=0, style=solid];
m35_63 -> m35_96  [key=2, style=dotted];
m35_63 -> m35_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_64 -> m35_78  [key=2, style=dotted];
m35_64 -> m35_65  [key=0, style=solid];
m35_65 -> m35_78  [key=2, style=dotted];
m35_65 -> m35_66  [key=0, style=solid];
m35_66 -> m35_88  [key=2, style=dotted];
m35_66 -> m35_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_66 -> m35_67  [key=0, style=solid];
m35_66 -> m35_97  [key=2, style=dotted];
m35_66 -> m35_69  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_67 -> m35_78  [key=2, style=dotted];
m35_67 -> m35_68  [key=0, style=solid];
m35_68 -> m35_78  [key=2, style=dotted];
m35_68 -> m35_69  [key=0, style=solid];
m35_70 -> m35_88  [key=2, style=dotted];
m35_70 -> m35_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_70 -> m35_71  [key=0, style=solid];
m35_70 -> m35_98  [key=2, style=dotted];
m35_71 -> m35_78  [key=2, style=dotted];
m35_71 -> m35_72  [key=0, style=solid];
m35_72 -> m35_78  [key=2, style=dotted];
m35_72 -> m35_47  [key=0, style=solid];
m35_73 -> m35_78  [key=2, style=dotted];
m35_73 -> m35_74  [key=0, style=solid];
m35_74 -> m35_88  [key=2, style=dotted];
m35_74 -> m35_75  [key=0, style=solid];
m35_74 -> m35_99  [key=2, style=dotted];
m35_75 -> m35_76  [key=0, style=solid];
m35_75 -> m35_78  [key=2, style=dotted];
m35_18 -> m35_22  [key=0, style=solid];
m35_18 -> m35_19  [key=0, style=solid];
m35_3 -> m35_4  [key=0, style=solid];
m35_51 -> m35_52  [key=0, style=solid];
m35_51 -> m35_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_51 -> m35_55  [key=0, style=solid];
m35_51 -> m35_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_51 -> m35_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_62  [key=0, style=solid];
m35_58 -> m35_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_58 -> m35_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_58 -> m35_12  [color=red, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m35_69 -> m35_70  [key=0, style=solid];
m35_69 -> m35_71  [key=0, style=solid];
m35_69 -> m35_69  [color=darkseagreen4, key=1, label=job, style=dashed];
m35_77 -> m35_0  [color=blue, key=0, style=bold];
m35_100 -> m35_16  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_21  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_23  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_24  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_27  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_28  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_30  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_31  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_38  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_39  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_42  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_44  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_46  [color=green, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_12  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_13  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_14  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_36  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_41  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_45  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_53  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_56  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_59  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_61  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_63  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_67  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_72  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_74  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_75  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m35_100 -> m35_76  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FetchedJobsPage", style=dashed];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_0  [color=blue, key=0, style=bold];
m38_22 -> m38_23  [key=0, style=solid];
m38_22 -> m38_24  [key=2, style=dotted];
m38_22 -> m38_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_23 -> m38_24  [key=0, style=solid];
m38_23 -> m38_21  [color=blue, key=0, style=bold];
m38_24 -> m38_22  [color=blue, key=0, style=bold];
m38_24 -> m38_145  [key=0, style=solid];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_8  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m38_6 -> m38_9  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m38_7 -> m38_8  [key=0, style=solid];
m38_7 -> m38_17  [key=2, style=dotted];
m38_7 -> m38_9  [color=darkseagreen4, key=1, label=connection, style=dashed];
m38_7 -> m38_6  [color=blue, key=0, style=bold];
m38_8 -> m38_9  [color=red, key=0, style=solid];
m38_8 -> m38_18  [key=2, style=dotted];
m38_8 -> m38_10  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m38_8 -> m38_12  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m38_8 -> m38_14  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m38_9 -> m38_10  [color=red, key=0, style=solid];
m38_9 -> m38_19  [key=2, style=dotted];
m38_9 -> m38_16  [color=red, key=2, style=dotted];
m38_9 -> m38_17  [color=red, key=2, style=dotted];
m38_9 -> m38_13  [color=red, key=1, label=transaction, style=dashed];
m38_10 -> m38_11  [color=red, key=0, style=solid];
m38_10 -> m38_13  [key=0, style=solid];
m38_10 -> m38_16  [key=0, style=solid];
m38_10 -> m38_20  [key=2, style=dotted];
m38_10 -> m38_18  [color=red, key=2, style=dotted];
m38_12 -> m38_16  [key=0, style=solid];
m38_12 -> m38_20  [key=2, style=dotted];
m38_12 -> m38_11  [key=0, style=solid];
m38_12 -> m38_19  [key=2, style=dotted];
m38_14 -> m38_15  [key=0, style=solid];
m38_14 -> m38_21  [key=2, style=dotted];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_13  [key=0, style=solid];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_20  [key=2, style=dotted];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_8  [color=blue, key=0, style=bold];
m38_16 -> m38_6  [color=blue, key=0, style=bold];
m38_58 -> m38_59  [key=0, style=solid];
m38_58 -> m38_29  [key=2, style=dotted];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_58  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
m38_84 -> m38_85  [key=0, style=solid];
m38_85 -> m38_86  [key=0, style=solid];
m38_85 -> m38_87  [key=2, style=dotted];
m38_86 -> m38_84  [color=blue, key=0, style=bold];
m38_100 -> m38_101  [key=0, style=solid];
m38_100 -> m38_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_101 -> m38_102  [key=0, style=solid];
m38_101 -> m38_24  [key=2, style=dotted];
m38_101 -> m38_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_102 -> m38_100  [color=blue, key=0, style=bold];
m38_41 -> m38_42  [key=0, style=solid];
m38_87 -> m38_88  [key=0, style=solid];
m38_87 -> m38_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_87 -> m38_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_88 -> m38_89  [key=0, style=solid];
m38_88 -> m38_92  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m38_89 -> m38_90  [key=0, style=solid];
m38_89 -> m38_24  [key=2, style=dotted];
m38_89 -> m38_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_90 -> m38_87  [color=blue, key=0, style=bold];
m38_66 -> m38_67  [key=0, style=solid];
m38_66 -> m38_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_67 -> m38_68  [key=0, style=solid];
m38_67 -> m38_24  [key=2, style=dotted];
m38_67 -> m38_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_68 -> m38_66  [color=blue, key=0, style=bold];
m38_47 -> m38_48  [key=0, style=solid];
m38_47 -> m38_41  [key=2, style=dotted];
m38_47 -> m38_51  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_38  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_36 -> m38_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_36 -> m38_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_36 -> m38_55  [key=2, style=dotted];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_41  [key=2, style=dotted];
m38_37 -> m38_44  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m38_37 -> m38_56  [key=2, style=dotted];
m38_38 -> m38_39  [key=0, style=solid];
m38_38 -> m38_24  [key=2, style=dotted];
m38_38 -> m38_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_38 -> m38_45  [key=0, style=solid];
m38_38 -> m38_41  [key=0, style=solid];
m38_38 -> m38_57  [key=2, style=dotted];
m38_39 -> m38_40  [key=0, style=solid];
m38_39 -> m38_42  [key=2, style=dotted];
m38_40 -> m38_36  [color=blue, key=0, style=bold];
m38_40 -> m38_46  [key=0, style=solid];
m38_112 -> m38_113  [key=0, style=solid];
m38_112 -> m38_114  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_112 -> m38_117  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_113 -> m38_114  [key=0, style=solid];
m38_113 -> m38_117  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m38_114 -> m38_115  [key=0, style=solid];
m38_114 -> m38_24  [key=2, style=dotted];
m38_114 -> m38_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_115 -> m38_112  [color=blue, key=0, style=bold];
m38_145 -> m38_146  [key=0, style=solid];
m38_145 -> m38_147  [key=2, style=dotted];
m38_146 -> m38_24  [color=blue, key=0, style=bold];
m38_57 -> m38_58  [key=0, style=solid];
m38_56 -> m38_53  [color=blue, key=0, style=bold];
m38_19 -> m38_25  [key=0, style=solid];
m38_19 -> m38_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_19 -> m38_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_19 -> m38_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_19 -> m38_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_19 -> m38_36  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m38_19 -> m38_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_78 -> m38_79  [key=0, style=solid];
m38_78 -> m38_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_79 -> m38_80  [key=0, style=solid];
m38_79 -> m38_24  [key=2, style=dotted];
m38_79 -> m38_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_80 -> m38_78  [color=blue, key=0, style=bold];
m38_72 -> m38_73  [key=0, style=solid];
m38_72 -> m38_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_73 -> m38_74  [key=0, style=solid];
m38_73 -> m38_24  [key=2, style=dotted];
m38_73 -> m38_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_74 -> m38_72  [color=blue, key=0, style=bold];
m38_50 -> m38_51  [key=0, style=solid];
m38_28 -> m38_46  [key=0, style=solid];
m38_52 -> m38_50  [color=blue, key=0, style=bold];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_94 -> m38_95  [key=0, style=solid];
m38_94 -> m38_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_95 -> m38_96  [key=0, style=solid];
m38_95 -> m38_24  [key=2, style=dotted];
m38_95 -> m38_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_96 -> m38_94  [color=blue, key=0, style=bold];
m38_25 -> m38_26  [key=0, style=solid];
m38_25 -> m38_47  [key=2, style=dotted];
m38_25 -> m38_27  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m38_25 -> m38_45  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m38_26 -> m38_27  [key=0, style=solid];
m38_26 -> m38_48  [key=2, style=dotted];
m38_26 -> m38_28  [key=2, style=dotted];
m38_26 -> m38_29  [key=2, style=dotted];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_52  [key=2, style=dotted];
m38_32 -> m38_30  [color=blue, key=0, style=bold];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_53  [key=2, style=dotted];
m38_33 -> m38_36  [color=darkseagreen4, key=1, label=performContext, style=dashed];
m38_27 -> m38_28  [key=0, style=solid];
m38_27 -> m38_29  [key=0, style=solid];
m38_27 -> m38_49  [key=2, style=dotted];
m38_27 -> m38_25  [color=blue, key=0, style=bold];
m38_45 -> m38_46  [key=0, style=solid];
m38_45 -> m38_49  [key=2, style=dotted];
m38_45 -> m38_43  [color=blue, key=0, style=bold];
m38_31 -> m38_32  [key=0, style=solid];
m38_31 -> m38_51  [key=2, style=dotted];
m38_31 -> m38_24  [key=2, style=dotted];
m38_31 -> m38_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_30 -> m38_33  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m38_30 -> m38_31  [key=0, style=solid];
m38_30 -> m38_50  [key=2, style=dotted];
m38_30 -> m38_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_30 -> m38_36  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m38_34 -> m38_35  [key=0, style=solid];
m38_34 -> m38_38  [color=darkseagreen4, key=1, label=latency, style=dashed];
m38_34 -> m38_29  [key=2, style=dotted];
m38_29 -> m38_30  [key=0, style=solid];
m38_42 -> m38_45  [key=0, style=solid];
m38_42 -> m38_58  [key=2, style=dotted];
m38_42 -> m38_47  [key=0, style=solid];
m38_42 -> m38_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_42 -> m38_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_44 -> m38_45  [key=0, style=solid];
m38_44 -> m38_58  [key=2, style=dotted];
m38_44 -> m38_46  [key=2, style=dotted];
m38_44 -> m38_29  [key=2, style=dotted];
m38_35 -> m38_36  [key=0, style=solid];
m38_35 -> m38_38  [color=darkseagreen4, key=1, label=duration, style=dashed];
m38_35 -> m38_54  [key=2, style=dotted];
m38_35 -> m38_37  [color=darkseagreen4, key=1, label=duration, style=dashed];
m38_35 -> m38_33  [color=blue, key=0, style=bold];
m38_43 -> m38_44  [key=0, style=solid];
m38_46 -> m38_19  [color=blue, key=0, style=bold];
m38_106 -> m38_107  [key=0, style=solid];
m38_106 -> m38_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_107 -> m38_108  [key=0, style=solid];
m38_107 -> m38_24  [key=2, style=dotted];
m38_107 -> m38_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_108 -> m38_106  [color=blue, key=0, style=bold];
m38_53 -> m38_54  [key=0, style=solid];
m38_53 -> m38_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_53 -> m38_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_139 -> m38_140  [key=0, style=solid];
m38_139 -> m38_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_140 -> m38_141  [key=0, style=solid];
m38_140 -> m38_24  [key=2, style=dotted];
m38_140 -> m38_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_141 -> m38_139  [color=blue, key=0, style=bold];
m38_49 -> m38_42  [color=blue, key=0, style=bold];
m38_142 -> m38_143  [key=0, style=solid];
m38_51 -> m38_52  [key=0, style=solid];
m38_51 -> m38_46  [key=2, style=dotted];
m38_51 -> m38_29  [key=2, style=dotted];
m38_59 -> m38_57  [color=blue, key=0, style=bold];
m38_59 -> m38_3  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m38_59 -> m38_7  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m38_59 -> m38_8  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m38_59 -> m38_9  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m38_59 -> m38_23  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m38_59 -> m38_25  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m38_59 -> m38_26  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m38_59 -> m38_32  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m38_59 -> m38_33  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m38_64 -> m38_65  [key=0, style=solid];
m38_64 -> m38_29  [key=2, style=dotted];
m38_63 -> m38_64  [key=0, style=solid];
m38_65 -> m38_63  [color=blue, key=0, style=bold];
m38_70 -> m38_71  [key=0, style=solid];
m38_70 -> m38_28  [key=2, style=dotted];
m38_70 -> m38_29  [key=2, style=dotted];
m38_69 -> m38_70  [key=0, style=solid];
m38_71 -> m38_69  [color=blue, key=0, style=bold];
m38_76 -> m38_77  [key=0, style=solid];
m38_76 -> m38_29  [key=2, style=dotted];
m38_75 -> m38_76  [key=0, style=solid];
m38_77 -> m38_75  [color=blue, key=0, style=bold];
m38_82 -> m38_83  [key=0, style=solid];
m38_82 -> m38_28  [key=2, style=dotted];
m38_82 -> m38_29  [key=2, style=dotted];
m38_81 -> m38_82  [key=0, style=solid];
m38_83 -> m38_81  [color=blue, key=0, style=bold];
m38_92 -> m38_93  [key=0, style=solid];
m38_92 -> m38_29  [key=2, style=dotted];
m38_91 -> m38_92  [key=0, style=solid];
m38_93 -> m38_91  [color=blue, key=0, style=bold];
m38_98 -> m38_99  [key=0, style=solid];
m38_98 -> m38_29  [key=2, style=dotted];
m38_97 -> m38_98  [key=0, style=solid];
m38_99 -> m38_97  [color=blue, key=0, style=bold];
m38_104 -> m38_105  [key=0, style=solid];
m38_104 -> m38_29  [key=2, style=dotted];
m38_103 -> m38_104  [key=0, style=solid];
m38_105 -> m38_103  [color=blue, key=0, style=bold];
m38_110 -> m38_111  [key=0, style=solid];
m38_110 -> m38_29  [key=2, style=dotted];
m38_109 -> m38_110  [key=0, style=solid];
m38_111 -> m38_109  [color=blue, key=0, style=bold];
m38_117 -> m38_118  [key=0, style=solid];
m38_117 -> m38_29  [key=2, style=dotted];
m38_116 -> m38_117  [key=0, style=solid];
m38_118 -> m38_116  [color=blue, key=0, style=bold];
m38_125 -> m38_126  [key=0, style=solid];
m38_125 -> m38_29  [key=2, style=dotted];
m38_127 -> m38_128  [key=0, style=solid];
m38_127 -> m38_29  [key=2, style=dotted];
m38_124 -> m38_125  [key=0, style=solid];
m38_124 -> m38_127  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_126 -> m38_127  [key=0, style=solid];
m38_126 -> m38_128  [key=0, style=solid];
m38_128 -> m38_124  [color=blue, key=0, style=bold];
m38_135 -> m38_136  [key=0, style=solid];
m38_135 -> m38_29  [key=2, style=dotted];
m38_137 -> m38_138  [key=0, style=solid];
m38_137 -> m38_29  [key=2, style=dotted];
m38_134 -> m38_135  [key=0, style=solid];
m38_134 -> m38_137  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m38_136 -> m38_137  [key=0, style=solid];
m38_136 -> m38_138  [key=0, style=solid];
m38_138 -> m38_134  [color=blue, key=0, style=bold];
m38_143 -> m38_144  [key=0, style=solid];
m38_143 -> m38_28  [key=2, style=dotted];
m38_143 -> m38_29  [key=2, style=dotted];
m38_144 -> m38_142  [color=blue, key=0, style=bold];
m38_55 -> m38_56  [key=0, style=solid];
m38_55 -> m38_24  [key=2, style=dotted];
m38_55 -> m38_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_129 -> m38_130  [key=0, style=solid];
m38_129 -> m38_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_129 -> m38_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_129 -> m38_137  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_130 -> m38_131  [key=0, style=solid];
m38_130 -> m38_132  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m38_130 -> m38_137  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m38_132 -> m38_133  [key=0, style=solid];
m38_132 -> m38_24  [key=2, style=dotted];
m38_132 -> m38_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_131 -> m38_132  [key=0, style=solid];
m38_131 -> m38_135  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m38_131 -> m38_137  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m38_133 -> m38_129  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [color=green, key=0, style=solid];
m38_0 -> m38_3  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m38_1 -> m38_2  [color=green, key=0, style=solid];
m38_1 -> m38_3  [color=green, key=0, style=solid];
m38_3 -> m38_4  [key=0, style=solid];
m38_2 -> m38_4  [color=green, key=0, style=solid];
m38_2 -> n21  [color=green, key=2, style=dotted];
m38_4 -> m38_0  [color=blue, key=0, style=bold];
m38_119 -> m38_120  [key=0, style=solid];
m38_119 -> m38_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_119 -> m38_125  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_119 -> m38_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_120 -> m38_121  [key=0, style=solid];
m38_120 -> m38_122  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m38_120 -> m38_127  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m38_122 -> m38_123  [key=0, style=solid];
m38_122 -> m38_24  [key=2, style=dotted];
m38_122 -> m38_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_121 -> m38_122  [key=0, style=solid];
m38_121 -> m38_125  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m38_121 -> m38_127  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m38_123 -> m38_119  [color=blue, key=0, style=bold];
m38_60 -> m38_61  [key=0, style=solid];
m38_60 -> m38_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_61 -> m38_62  [key=0, style=solid];
m38_61 -> m38_24  [key=2, style=dotted];
m38_61 -> m38_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_62 -> m38_60  [color=blue, key=0, style=bold];
m38_48 -> m38_49  [key=0, style=solid];
m38_48 -> m38_24  [key=2, style=dotted];
m38_48 -> m38_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_148 -> m38_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_10  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_22  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_31  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_38  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_39  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_48  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_55  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_61  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_67  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_73  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_79  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_85  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_89  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_95  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_101  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_107  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_114  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_122  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_132  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_140  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_148 -> m38_145  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m38_149 -> m38_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_150 -> m38_26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m38_151 -> m38_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_152 -> m38_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_153 -> m38_44  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m38_154 -> m38_44  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m38_155 -> m38_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_156 -> m38_51  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m38_157 -> m38_51  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m38_158 -> m38_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_159 -> m38_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_160 -> m38_58  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
m38_161 -> m38_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_162 -> m38_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_163 -> m38_70  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m38_164 -> m38_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_165 -> m38_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_166 -> m38_82  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m38_167 -> m38_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_168 -> m38_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_169 -> m38_92  [color=darkseagreen4, key=1, label=double, style=dashed];
m38_170 -> m38_92  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m38_171 -> m38_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_172 -> m38_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_173 -> m38_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_174 -> m38_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_175 -> m38_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_176 -> m38_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_177 -> m38_117  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_178 -> m38_117  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_179 -> m38_117  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m38_180 -> m38_125  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_180 -> m38_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_181 -> m38_125  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m38_181 -> m38_127  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m38_182 -> m38_127  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m38_183 -> m38_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_183 -> m38_137  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_184 -> m38_135  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m38_184 -> m38_137  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m38_185 -> m38_137  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m38_186 -> m38_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_187 -> m38_143  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m40_20 -> m40_21  [key=0, style=solid];
m40_21 -> m40_22  [key=0, style=solid];
m40_21 -> m40_13  [key=2, style=dotted];
m40_22 -> m40_20  [color=blue, key=0, style=bold];
m40_23 -> m40_24  [key=0, style=solid];
m40_24 -> m40_25  [key=0, style=solid];
m40_24 -> m40_31  [color=darkseagreen4, key=1, label=concurrency, style=dashed];
m40_25 -> m40_26  [key=0, style=solid];
m40_25 -> m40_60  [key=2, style=dotted];
m40_31 -> m40_32  [key=0, style=solid];
m40_31 -> m40_65  [key=2, style=dotted];
m40_26 -> m40_27  [key=0, style=solid];
m40_27 -> m40_28  [key=0, style=solid];
m40_28 -> m40_29  [key=0, style=solid];
m40_28 -> m40_61  [key=2, style=dotted];
m40_28 -> m40_62  [key=2, style=dotted];
m40_29 -> m40_30  [key=0, style=solid];
m40_29 -> m40_63  [key=2, style=dotted];
m40_29 -> m40_62  [key=2, style=dotted];
m40_30 -> m40_31  [key=0, style=solid];
m40_30 -> m40_64  [key=2, style=dotted];
m40_30 -> m40_62  [key=2, style=dotted];
m40_32 -> m40_33  [key=0, style=solid];
m40_32 -> m40_66  [key=2, style=dotted];
m40_33 -> m40_34  [key=0, style=solid];
m40_33 -> m40_13  [key=2, style=dotted];
m40_34 -> m40_35  [key=0, style=solid];
m40_34 -> m40_42  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_34 -> m40_55  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_35 -> m40_36  [key=0, style=solid];
m40_35 -> m40_59  [key=0, style=solid];
m40_42 -> m40_43  [key=0, style=solid];
m40_42 -> m40_72  [key=2, style=dotted];
m40_42 -> m40_42  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_42 -> m40_55  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_55 -> m40_56  [key=0, style=solid];
m40_55 -> m40_11  [key=2, style=dotted];
m40_55 -> m40_73  [key=2, style=dotted];
m40_55 -> m40_55  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_36 -> m40_37  [key=0, style=solid];
m40_36 -> m40_67  [key=2, style=dotted];
m40_36 -> m40_38  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_39  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_47  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_48  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_53  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_54  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_56  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_37 -> m40_38  [key=0, style=solid];
m40_37 -> m40_59  [key=0, style=solid];
m40_37 -> m40_68  [key=2, style=dotted];
m40_38 -> m40_39  [key=0, style=solid];
m40_38 -> m40_47  [key=0, style=solid];
m40_38 -> m40_69  [key=2, style=dotted];
m40_39 -> m40_40  [key=0, style=solid];
m40_39 -> m40_70  [key=2, style=dotted];
m40_39 -> m40_71  [key=2, style=dotted];
m40_39 -> m40_41  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m40_47 -> m40_48  [key=0, style=solid];
m40_47 -> m40_53  [key=0, style=solid];
m40_47 -> m40_69  [key=2, style=dotted];
m40_48 -> m40_49  [key=0, style=solid];
m40_48 -> m40_70  [key=2, style=dotted];
m40_48 -> m40_71  [key=2, style=dotted];
m40_48 -> m40_50  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m40_53 -> m40_54  [key=0, style=solid];
m40_53 -> m40_56  [key=0, style=solid];
m40_53 -> m40_69  [key=2, style=dotted];
m40_54 -> m40_55  [key=0, style=solid];
m40_54 -> m40_70  [key=2, style=dotted];
m40_54 -> m40_71  [key=2, style=dotted];
m40_56 -> m40_57  [key=0, style=solid];
m40_56 -> m40_35  [key=0, style=solid];
m40_56 -> m40_69  [key=2, style=dotted];
m40_40 -> m40_41  [key=0, style=solid];
m40_40 -> m40_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_41 -> m40_42  [key=0, style=solid];
m40_41 -> m40_44  [key=0, style=solid];
m40_43 -> m40_41  [key=0, style=solid];
m40_43 -> m40_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_44 -> m40_45  [key=0, style=solid];
m40_44 -> m40_47  [key=0, style=solid];
m40_44 -> m40_13  [key=2, style=dotted];
m40_45 -> m40_46  [key=0, style=solid];
m40_46 -> m40_47  [key=0, style=solid];
m40_46 -> m40_13  [key=2, style=dotted];
m40_49 -> m40_50  [key=0, style=solid];
m40_49 -> m40_52  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_50 -> m40_51  [key=0, style=solid];
m40_50 -> m40_53  [key=0, style=solid];
m40_52 -> m40_50  [key=0, style=solid];
m40_52 -> m40_52  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_51 -> m40_52  [key=0, style=solid];
m40_51 -> m40_72  [key=2, style=dotted];
m40_57 -> m40_58  [key=0, style=solid];
m40_57 -> m40_74  [key=2, style=dotted];
m40_58 -> m40_35  [key=0, style=solid];
m40_58 -> m40_13  [key=2, style=dotted];
m40_59 -> m40_23  [color=blue, key=0, style=bold];
m40_74 -> m40_74  [color=darkorchid, key=3, label="Field variable long _combinedHash64", style=bold];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_2  [key=0, style=solid];
m40_2 -> m40_3  [key=0, style=solid];
m40_3 -> m40_4  [key=0, style=solid];
m40_3 -> m40_9  [key=2, style=dotted];
m40_3 -> m40_6  [color=darkseagreen4, key=1, label=time, style=dashed];
m40_4 -> m40_5  [key=0, style=solid];
m40_4 -> m40_6  [key=0, style=solid];
m40_6 -> m40_7  [key=0, style=solid];
m40_6 -> m40_11  [key=2, style=dotted];
m40_6 -> m40_12  [key=2, style=dotted];
m40_5 -> m40_8  [key=0, style=solid];
m40_5 -> m40_10  [key=2, style=dotted];
m40_7 -> m40_8  [key=0, style=solid];
m40_7 -> m40_13  [key=2, style=dotted];
m40_8 -> m40_0  [color=blue, key=0, style=bold];
m40_14 -> m40_15  [key=0, style=solid];
m40_15 -> m40_16  [key=0, style=solid];
m40_15 -> m40_13  [key=2, style=dotted];
m40_16 -> m40_17  [key=0, style=solid];
m40_16 -> m40_18  [key=2, style=dotted];
m40_16 -> m40_19  [key=2, style=dotted];
m40_17 -> m40_14  [color=blue, key=0, style=bold];
m40_75 -> m40_7  [color=darkseagreen4, key=1, label="ConsoleSample.ConsoleJob", style=dashed];
m41_18 -> m41_19  [color=red, key=0, style=solid];
m41_18 -> m41_20  [color=red, key=1, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>", style=dashed];
m41_18 -> m41_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>", style=dashed];
m41_18 -> m41_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString SidebarMenu", style=bold];
m41_19 -> m41_20  [color=red, key=0, style=solid];
m41_19 -> m41_21  [color=red, key=0, style=solid];
m41_20 -> m41_22  [color=red, key=0, style=solid];
m41_20 -> n21  [color=red, key=2, style=dotted];
m41_20 -> m41_6  [color=red, key=2, style=dotted];
m41_21 -> m41_22  [key=0, style=solid];
m41_21 -> m41_17  [key=2, style=dotted];
m41_21 -> m41_13  [key=2, style=dotted];
m41_22 -> m41_18  [color=blue, key=0, style=bold];
m41_56 -> m41_57  [key=0, style=solid];
m41_56 -> m41_58  [color=green, key=1, label=string, style=dashed];
m41_56 -> m41_75  [color=darkorchid, key=3, label="Parameter variable string jobId", style=bold];
m41_57 -> m41_58  [color=green, key=0, style=solid];
m41_58 -> m41_59  [color=green, key=0, style=solid];
m41_58 -> m41_51  [color=green, key=2, style=dotted];
m41_58 -> m41_60  [color=green, key=2, style=dotted];
m41_58 -> m41_61  [color=green, key=2, style=dotted];
m41_59 -> m41_56  [color=blue, key=0, style=bold];
m41_130 -> m41_131  [color=red, key=0, style=solid];
m41_131 -> m41_132  [color=green, key=0, style=solid];
m41_131 -> m41_134  [color=red, key=2, style=dotted];
m41_132 -> m41_133  [color=green, key=0, style=solid];
m41_132 -> m41_51  [color=green, key=2, style=dotted];
m41_133 -> m41_130  [color=blue, key=0, style=bold];
m41_35 -> m41_36  [color=red, key=0, style=solid];
m41_35 -> m41_37  [color=red, key=1, label="Hangfire.Dashboard.Pager", style=dashed];
m41_35 -> m41_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pager", style=dashed];
m41_35 -> m41_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString Paginator", style=bold];
m41_36 -> m41_37  [color=red, key=0, style=solid];
m41_36 -> m41_38  [color=red, key=0, style=solid];
m41_37 -> m41_39  [color=red, key=0, style=solid];
m41_37 -> n21  [color=red, key=2, style=dotted];
m41_37 -> m41_6  [color=red, key=2, style=dotted];
m41_38 -> m41_39  [key=0, style=solid];
m41_38 -> m41_40  [key=2, style=dotted];
m41_38 -> m41_13  [key=2, style=dotted];
m41_39 -> m41_35  [color=blue, key=0, style=bold];
m41_7 -> m41_8  [color=red, key=0, style=solid];
m41_7 -> m41_9  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m41_7 -> m41_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_7 -> m41_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString Breadcrumbs", style=bold];
m41_8 -> m41_9  [color=red, key=0, style=solid];
m41_8 -> m41_10  [color=red, key=0, style=solid];
m41_9 -> m41_11  [color=red, key=0, style=solid];
m41_9 -> n21  [color=red, key=2, style=dotted];
m41_9 -> m41_6  [color=red, key=2, style=dotted];
m41_10 -> m41_11  [key=0, style=solid];
m41_10 -> m41_12  [key=2, style=dotted];
m41_10 -> m41_13  [key=2, style=dotted];
m41_11 -> m41_7  [color=blue, key=0, style=bold];
m41_122 -> m41_123  [color=red, key=0, style=solid];
m41_123 -> m41_124  [color=red, key=0, style=solid];
m41_123 -> m41_125  [color=red, key=2, style=dotted];
m41_123 -> m41_126  [color=red, key=2, style=dotted];
m41_123 -> m41_127  [color=red, key=1, label="lambda expression", style=dashed];
m41_124 -> m41_122  [color=blue, key=0, style=bold];
m41_14 -> m41_15  [key=0, style=solid];
m41_14 -> m41_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobsSidebar", style=bold];
m41_15 -> m41_16  [key=0, style=solid];
m41_15 -> m41_17  [key=2, style=dotted];
m41_15 -> m41_13  [key=2, style=dotted];
m41_16 -> m41_14  [color=blue, key=0, style=bold];
m41_143 -> m41_144  [key=0, style=solid];
m41_144 -> m41_145  [key=0, style=solid];
m41_144 -> m41_51  [key=2, style=dotted];
m41_144 -> m41_146  [key=2, style=dotted];
m41_145 -> m41_143  [color=blue, key=0, style=bold];
m41_82 -> m41_147  [key=0, style=solid];
m41_82 -> m41_62  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m41_147 -> m41_148  [key=0, style=solid];
m41_147 -> m41_149  [key=2, style=dotted];
m41_148 -> m41_82  [color=blue, key=0, style=bold];
m41_53 -> m41_54  [key=0, style=solid];
m41_54 -> m41_55  [key=0, style=solid];
m41_54 -> m41_51  [key=2, style=dotted];
m41_55 -> m41_53  [color=blue, key=0, style=bold];
m41_0 -> m41_1  [color=red, key=0, style=solid];
m41_0 -> m41_2  [color=red, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m41_0 -> m41_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m41_1 -> m41_2  [color=red, key=0, style=solid];
m41_1 -> m41_3  [color=red, key=0, style=solid];
m41_2 -> m41_4  [color=red, key=0, style=solid];
m41_2 -> n21  [color=red, key=2, style=dotted];
m41_2 -> m41_6  [color=red, key=2, style=dotted];
m41_3 -> m41_4  [key=0, style=solid];
m41_4 -> m41_0  [color=blue, key=0, style=bold];
m41_23 -> m41_24  [color=red, key=0, style=solid];
m41_23 -> m41_25  [color=red, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m41_23 -> m41_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m41_23 -> m41_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString BlockMetric", style=bold];
m41_24 -> m41_25  [color=red, key=0, style=solid];
m41_24 -> m41_26  [color=red, key=0, style=solid];
m41_25 -> m41_27  [color=red, key=0, style=solid];
m41_25 -> n21  [color=red, key=2, style=dotted];
m41_25 -> m41_6  [color=red, key=2, style=dotted];
m41_26 -> m41_27  [key=0, style=solid];
m41_26 -> m41_28  [key=2, style=dotted];
m41_26 -> m41_13  [key=2, style=dotted];
m41_27 -> m41_23  [color=blue, key=0, style=bold];
m41_87 -> m41_88  [color=red, key=0, style=solid];
m41_87 -> m41_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString MomentTitle", style=bold];
m41_88 -> m41_89  [color=red, key=0, style=solid];
m41_88 -> m41_86  [color=red, key=2, style=dotted];
m41_88 -> m41_53  [color=red, key=2, style=dotted];
m41_89 -> m41_87  [color=blue, key=0, style=bold];
m41_135 -> m41_136  [color=green, key=0, style=solid];
m41_135 -> m41_137  [color=green, key=1, label=string, style=dashed];
m41_135 -> m41_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_136 -> m41_137  [color=green, key=0, style=solid];
m41_136 -> m41_140  [color=green, key=2, style=dotted];
m41_137 -> m41_138  [color=green, key=0, style=solid];
m41_137 -> m41_141  [color=green, key=2, style=dotted];
m41_137 -> m41_142  [color=green, key=2, style=dotted];
m41_138 -> m41_139  [color=red, key=0, style=solid];
m41_138 -> m41_51  [color=red, key=2, style=dotted];
m41_139 -> m41_135  [color=blue, key=0, style=bold];
m41_62 -> m41_63  [color=green, key=0, style=solid];
m41_62 -> m41_65  [color=red, key=1, label="Hangfire.Common.Job", style=dashed];
m41_62 -> m41_79  [color=darkorchid, key=3, label="Parameter variable Hangfire.Common.Job job", style=bold];
m41_63 -> m41_64  [color=green, key=0, style=solid];
m41_63 -> m41_65  [color=green, key=0, style=solid];
m41_65 -> m41_66  [color=red, key=0, style=solid];
m41_65 -> m41_67  [color=red, key=2, style=dotted];
m41_64 -> m41_66  [color=red, key=0, style=solid];
m41_66 -> m41_62  [color=blue, key=0, style=bold];
m41_90 -> m41_91  [key=0, style=solid];
m41_90 -> m41_94  [color=darkseagreen4, key=1, label=bool, style=dashed];
m41_90 -> m41_95  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_90 -> m41_96  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_91 -> m41_92  [key=0, style=solid];
m41_91 -> m41_93  [key=0, style=solid];
m41_94 -> m41_95  [key=0, style=solid];
m41_94 -> m41_96  [key=0, style=solid];
m41_95 -> m41_96  [key=0, style=solid];
m41_95 -> m41_117  [key=2, style=dotted];
m41_96 -> m41_97  [key=0, style=solid];
m41_96 -> m41_118  [key=2, style=dotted];
m41_96 -> m41_96  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_98  [color=red, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_99  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_100  [color=red, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_101  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_102  [color=red, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_103  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_104  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_105  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_106  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_107  [color=red, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_109  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m41_96 -> m41_110  [color=red, key=1, label="System.TimeSpan?", style=dashed];
m41_92 -> m41_115  [key=0, style=solid];
m41_93 -> m41_94  [key=0, style=solid];
m41_93 -> m41_116  [key=2, style=dotted];
m41_93 -> m41_95  [color=darkseagreen4, key=1, label=builder, style=dashed];
m41_93 -> m41_98  [color=red, key=1, label=builder, style=dashed];
m41_93 -> m41_100  [color=red, key=1, label=builder, style=dashed];
m41_93 -> m41_102  [color=red, key=1, label=builder, style=dashed];
m41_93 -> m41_105  [color=darkseagreen4, key=1, label=builder, style=dashed];
m41_93 -> m41_107  [color=red, key=1, label=builder, style=dashed];
m41_93 -> m41_108  [color=darkseagreen4, key=1, label=builder, style=dashed];
m41_93 -> m41_110  [color=red, key=1, label=builder, style=dashed];
m41_93 -> m41_111  [color=darkseagreen4, key=1, label=builder, style=dashed];
m41_93 -> m41_112  [color=darkseagreen4, key=1, label=builder, style=dashed];
m41_93 -> m41_113  [color=darkseagreen4, key=1, label=builder, style=dashed];
m41_93 -> m41_114  [color=darkseagreen4, key=1, label=builder, style=dashed];
m41_98 -> m41_99  [color=red, key=0, style=solid];
m41_98 -> m41_117  [color=red, key=2, style=dotted];
m41_100 -> m41_101  [color=red, key=0, style=solid];
m41_100 -> m41_117  [color=red, key=2, style=dotted];
m41_102 -> m41_103  [color=red, key=0, style=solid];
m41_102 -> m41_117  [color=red, key=2, style=dotted];
m41_105 -> m41_106  [key=0, style=solid];
m41_105 -> m41_119  [key=2, style=dotted];
m41_107 -> m41_108  [color=red, key=0, style=solid];
m41_107 -> m41_117  [color=red, key=2, style=dotted];
m41_108 -> m41_111  [key=0, style=solid];
m41_108 -> m41_117  [key=2, style=dotted];
m41_110 -> m41_111  [color=red, key=0, style=solid];
m41_110 -> m41_117  [color=red, key=2, style=dotted];
m41_111 -> m41_112  [key=0, style=solid];
m41_111 -> m41_113  [key=0, style=solid];
m41_112 -> m41_113  [key=0, style=solid];
m41_112 -> m41_117  [key=2, style=dotted];
m41_113 -> m41_114  [key=0, style=solid];
m41_113 -> m41_120  [key=2, style=dotted];
m41_114 -> m41_115  [key=0, style=solid];
m41_114 -> m41_121  [key=2, style=dotted];
m41_97 -> m41_98  [color=red, key=0, style=solid];
m41_97 -> m41_99  [key=0, style=solid];
m41_99 -> m41_100  [color=red, key=0, style=solid];
m41_99 -> m41_101  [key=0, style=solid];
m41_101 -> m41_102  [color=red, key=0, style=solid];
m41_101 -> m41_103  [key=0, style=solid];
m41_103 -> m41_104  [key=0, style=solid];
m41_103 -> m41_111  [key=0, style=solid];
m41_104 -> m41_105  [key=0, style=solid];
m41_104 -> m41_109  [key=0, style=solid];
m41_106 -> m41_107  [color=red, key=0, style=solid];
m41_106 -> m41_108  [key=0, style=solid];
m41_109 -> m41_110  [color=red, key=0, style=solid];
m41_109 -> m41_111  [key=0, style=solid];
m41_115 -> m41_90  [color=blue, key=0, style=bold];
m41_29 -> m41_30  [color=red, key=0, style=solid];
m41_29 -> m41_31  [color=red, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m41_29 -> m41_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m41_29 -> m41_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString InlineMetric", style=bold];
m41_30 -> m41_31  [color=red, key=0, style=solid];
m41_30 -> m41_32  [color=red, key=0, style=solid];
m41_31 -> m41_33  [color=red, key=0, style=solid];
m41_31 -> n21  [color=red, key=2, style=dotted];
m41_31 -> m41_6  [color=red, key=2, style=dotted];
m41_32 -> m41_33  [key=0, style=solid];
m41_32 -> m41_34  [key=2, style=dotted];
m41_32 -> m41_13  [key=2, style=dotted];
m41_33 -> m41_29  [color=blue, key=0, style=bold];
m41_83 -> m41_84  [color=green, key=0, style=solid];
m41_83 -> m41_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString RelativeTime", style=bold];
m41_84 -> m41_85  [color=green, key=0, style=solid];
m41_84 -> m41_86  [color=green, key=2, style=dotted];
m41_84 -> m41_53  [color=green, key=2, style=dotted];
m41_85 -> m41_83  [color=blue, key=0, style=bold];
m41_127 -> m41_128  [color=red, key=0, style=solid];
m41_128 -> m41_129  [color=red, key=0, style=solid];
m41_128 -> m41_128  [color=red, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m41_129 -> m41_127  [color=blue, key=0, style=bold];
m41_68 -> m41_69  [color=green, key=0, style=solid];
m41_68 -> m41_71  [color=green, key=1, label=string, style=dashed];
m41_68 -> m41_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString StateLabel", style=bold];
m41_69 -> m41_70  [color=green, key=0, style=solid];
m41_69 -> m41_71  [color=green, key=0, style=solid];
m41_69 -> m41_73  [color=green, key=2, style=dotted];
m41_71 -> m41_72  [color=green, key=0, style=solid];
m41_71 -> m41_74  [color=green, key=2, style=dotted];
m41_71 -> m41_53  [color=green, key=2, style=dotted];
m41_70 -> m41_72  [color=red, key=0, style=solid];
m41_70 -> m41_53  [color=red, key=2, style=dotted];
m41_72 -> m41_68  [color=blue, key=0, style=bold];
m41_41 -> m41_42  [color=red, key=0, style=solid];
m41_41 -> m41_43  [color=red, key=1, label="Hangfire.Dashboard.Pager", style=dashed];
m41_41 -> m41_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pager", style=dashed];
m41_41 -> m41_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString PerPageSelector", style=bold];
m41_42 -> m41_43  [color=red, key=0, style=solid];
m41_42 -> m41_44  [color=red, key=0, style=solid];
m41_43 -> m41_45  [color=red, key=0, style=solid];
m41_43 -> n21  [color=red, key=2, style=dotted];
m41_43 -> m41_6  [color=red, key=2, style=dotted];
m41_44 -> m41_45  [key=0, style=solid];
m41_44 -> m41_46  [key=2, style=dotted];
m41_44 -> m41_13  [key=2, style=dotted];
m41_45 -> m41_41  [color=blue, key=0, style=bold];
m41_75 -> m41_76  [color=red, key=0, style=solid];
m41_75 -> m41_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobIdLink", style=bold];
m41_76 -> m41_77  [color=red, key=0, style=solid];
m41_76 -> m41_78  [color=red, key=2, style=dotted];
m41_76 -> m41_56  [color=red, key=2, style=dotted];
m41_76 -> m41_53  [color=red, key=2, style=dotted];
m41_77 -> m41_75  [color=blue, key=0, style=bold];
m41_79 -> m41_80  [color=red, key=0, style=solid];
m41_79 -> m41_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobNameLink", style=bold];
m41_80 -> m41_81  [color=red, key=0, style=solid];
m41_80 -> m41_78  [color=red, key=2, style=dotted];
m41_80 -> m41_62  [color=red, key=2, style=dotted];
m41_80 -> m41_82  [color=red, key=2, style=dotted];
m41_80 -> m41_53  [color=red, key=2, style=dotted];
m41_81 -> m41_79  [color=blue, key=0, style=bold];
m41_13 -> m41_47  [key=0, style=solid];
m41_13 -> m41_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m41_47 -> m41_48  [key=0, style=solid];
m41_47 -> m41_50  [key=2, style=dotted];
m41_48 -> m41_49  [key=0, style=solid];
m41_48 -> m41_51  [key=2, style=dotted];
m41_48 -> m41_52  [key=2, style=dotted];
m41_49 -> m41_13  [color=blue, key=0, style=bold];
m41_150 -> m41_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_71  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_76  [color=red, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_84  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_88  [color=red, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m41_150 -> m41_131  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_0  [color=blue, key=0, style=bold];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m43_1 -> m43_2  [key=0, style=solid];
m43_2 -> m43_3  [key=0, style=solid];
m43_3 -> m43_0  [color=blue, key=0, style=bold];
m43_22 -> m43_23  [key=0, style=solid];
m43_23 -> m43_24  [key=0, style=solid];
m43_23 -> m43_38  [key=2, style=dotted];
m43_24 -> m43_25  [key=0, style=solid];
m43_24 -> m43_29  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m43_24 -> m43_30  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m43_24 -> m43_31  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m43_25 -> m43_26  [key=0, style=solid];
m43_25 -> m43_34  [key=0, style=solid];
m43_29 -> m43_25  [key=0, style=solid];
m43_29 -> m43_29  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m43_29 -> m43_30  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m43_29 -> m43_31  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m43_30 -> m43_31  [key=0, style=solid];
m43_30 -> m43_33  [key=0, style=solid];
m43_31 -> m43_32  [key=0, style=solid];
m43_31 -> m43_40  [key=2, style=dotted];
m43_26 -> m43_27  [key=0, style=solid];
m43_34 -> m43_35  [key=0, style=solid];
m43_34 -> m43_37  [key=0, style=solid];
m43_34 -> m43_38  [key=2, style=dotted];
m43_27 -> m43_28  [key=0, style=solid];
m43_27 -> m43_39  [key=2, style=dotted];
m43_27 -> m43_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_28 -> m43_29  [key=0, style=solid];
m43_28 -> m43_30  [key=0, style=solid];
m43_33 -> m43_25  [key=0, style=solid];
m43_33 -> m43_34  [key=0, style=solid];
m43_33 -> m43_41  [key=2, style=dotted];
m43_32 -> m43_33  [key=0, style=solid];
m43_35 -> m43_36  [key=0, style=solid];
m43_36 -> m43_37  [key=0, style=solid];
m43_36 -> m43_42  [key=2, style=dotted];
m43_37 -> m43_22  [color=blue, key=0, style=bold];
m43_46 -> m43_47  [key=0, style=solid];
m43_46 -> m43_48  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m43_47 -> m43_48  [key=0, style=solid];
m43_47 -> m43_50  [key=2, style=dotted];
m43_48 -> m43_49  [key=0, style=solid];
m43_48 -> m43_51  [key=2, style=dotted];
m43_49 -> m43_46  [color=blue, key=0, style=bold];
m43_4 -> m43_5  [key=0, style=solid];
m43_5 -> m43_6  [key=0, style=solid];
m43_5 -> m43_15  [key=2, style=dotted];
m43_5 -> m43_7  [color=darkseagreen4, key=1, label=connection, style=dashed];
m43_5 -> m43_10  [color=darkseagreen4, key=1, label=connection, style=dashed];
m43_6 -> m43_7  [key=0, style=solid];
m43_6 -> m43_16  [key=2, style=dotted];
m43_7 -> m43_8  [key=0, style=solid];
m43_7 -> m43_17  [key=2, style=dotted];
m43_7 -> m43_12  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m43_10 -> m43_11  [key=0, style=solid];
m43_10 -> m43_19  [key=2, style=dotted];
m43_10 -> m43_12  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_10  [key=0, style=solid];
m43_8 -> m43_18  [key=2, style=dotted];
m43_12 -> m43_13  [key=0, style=solid];
m43_12 -> m43_21  [key=2, style=dotted];
m43_9 -> m43_14  [key=0, style=solid];
m43_11 -> m43_12  [key=0, style=solid];
m43_11 -> m43_20  [key=2, style=dotted];
m43_13 -> m43_14  [key=0, style=solid];
m43_14 -> m43_4  [color=blue, key=0, style=bold];
m43_43 -> m43_44  [key=0, style=solid];
m43_44 -> m43_45  [key=0, style=solid];
m43_44 -> m43_4  [key=2, style=dotted];
m43_45 -> m43_43  [color=blue, key=0, style=bold];
m43_52 -> m43_1  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m43_52 -> m43_2  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m43_52 -> m43_5  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m43_52 -> m43_27  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m43_52 -> m43_44  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m43_52 -> m43_28  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m43_52 -> m43_33  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m43_52 -> m43_47  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m44_0 -> m44_1  [key=0, style=solid];
m44_1 -> m44_0  [color=blue, key=0, style=bold];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_0  [color=blue, key=0, style=bold];
m45_4 -> m45_5  [key=0, style=solid];
m45_5 -> m45_4  [color=blue, key=0, style=bold];
m45_2 -> m45_3  [key=0, style=solid];
m45_3 -> m45_2  [color=blue, key=0, style=bold];
m46_32 -> m46_33  [key=0, style=solid];
m46_32 -> m46_34  [key=0, style=solid];
m46_55 -> m46_56  [key=0, style=solid];
m46_55 -> m46_58  [color=darkorchid, key=3, label="method methodReturn bool Delete", style=bold];
m46_56 -> m46_57  [key=0, style=solid];
m46_56 -> m46_58  [key=2, style=dotted];
m46_57 -> m46_55  [color=blue, key=0, style=bold];
m46_49 -> m46_50  [key=0, style=solid];
m46_49 -> m46_52  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_49 -> m46_39  [color=blue, key=0, style=bold];
m46_50 -> m46_51  [key=0, style=solid];
m46_50 -> m46_52  [key=0, style=solid];
m46_52 -> m46_53  [key=0, style=solid];
m46_52 -> m46_54  [key=2, style=dotted];
m46_51 -> m46_53  [key=0, style=solid];
m46_51 -> n21  [key=2, style=dotted];
m46_53 -> m46_49  [color=blue, key=0, style=bold];
m46_13 -> m46_4  [key=2, style=dotted];
m46_13 -> m46_14  [key=0, style=solid];
m46_20 -> m46_21  [color=green, key=0, style=solid];
m46_20 -> m46_23  [color=red, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_20 -> m46_7  [color=darkorchid, key=3, label="method methodReturn string Schedule", style=bold];
m46_21 -> m46_22  [color=green, key=0, style=solid];
m46_21 -> m46_23  [color=red, key=0, style=solid];
m46_21 -> m46_24  [color=green, key=2, style=dotted];
m46_23 -> m46_24  [color=red, key=0, style=solid];
m46_23 -> m46_25  [color=red, key=2, style=dotted];
m46_23 -> m46_7  [color=red, key=2, style=dotted];
m46_23 -> m46_23  [color=red, key=1, label="System.DateTimeOffset", style=dashed];
m46_23 -> m46_19  [color=blue, key=0, style=bold];
m46_22 -> m46_24  [key=0, style=solid];
m46_22 -> n21  [key=2, style=dotted];
m46_22 -> m46_23  [key=0, style=solid];
m46_22 -> m46_25  [key=2, style=dotted];
m46_22 -> m46_26  [key=2, style=dotted];
m46_22 -> m46_27  [key=2, style=dotted];
m46_22 -> m46_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_22 -> m46_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_24 -> m46_20  [color=blue, key=0, style=bold];
m46_26 -> m46_27  [key=0, style=solid];
m46_26 -> m46_29  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_26 -> m46_13  [color=darkorchid, key=3, label="method methodReturn string Schedule", style=bold];
m46_39 -> m46_41  [color=darkseagreen4, key=1, label=int, style=dashed];
m46_39 -> m46_40  [color=red, key=0, style=solid];
m46_39 -> m46_42  [color=red, key=2, style=dotted];
m46_46 -> m46_47  [color=green, key=0, style=solid];
m46_46 -> m46_55  [color=green, key=2, style=dotted];
m46_46 -> m46_56  [color=green, key=2, style=dotted];
m46_46 -> m46_57  [color=green, key=2, style=dotted];
m46_46 -> m46_58  [color=green, key=2, style=dotted];
m46_46 -> m46_59  [color=green, key=2, style=dotted];
m46_46 -> m46_60  [color=green, key=2, style=dotted];
m46_46 -> m46_62  [color=green, key=1, label="lambda expression", style=dashed];
m46_46 -> m46_48  [key=2, style=dotted];
m46_46 -> m46_42  [key=2, style=dotted];
m46_43 -> m46_46  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_43 -> m46_44  [key=0, style=solid];
m46_43 -> m46_48  [key=0, style=solid];
m46_43 -> m46_45  [color=darkseagreen4, key=1, label=scheduledJob, style=dashed];
m46_43 -> m46_47  [color=darkseagreen4, key=1, label=scheduledJob, style=dashed];
m46_44 -> m46_46  [color=green, key=1, label=job, style=dashed];
m46_44 -> m46_45  [key=0, style=solid];
m46_44 -> m46_52  [key=2, style=dotted];
m46_44 -> m46_53  [key=2, style=dotted];
m46_45 -> m46_46  [color=green, key=0, style=solid];
m46_45 -> m46_52  [key=2, style=dotted];
m46_45 -> m46_54  [key=2, style=dotted];
m46_45 -> m46_47  [key=0, style=solid];
m46_45 -> n21  [key=2, style=dotted];
m46_47 -> m46_43  [color=blue, key=0, style=bold];
m46_47 -> m46_61  [key=2, style=dotted];
m46_41 -> m46_43  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m46_41 -> m46_42  [key=0, style=solid];
m46_41 -> m46_50  [key=2, style=dotted];
m46_42 -> m46_43  [key=0, style=solid];
m46_42 -> m46_47  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_42 -> m46_51  [key=2, style=dotted];
m46_42 -> m46_48  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_48 -> m46_49  [key=0, style=solid];
m46_40 -> m46_41  [key=0, style=solid];
m46_40 -> m46_36  [color=blue, key=0, style=bold];
m46_34 -> m46_35  [key=0, style=solid];
m46_34 -> m46_25  [key=2, style=dotted];
m46_34 -> m46_13  [key=2, style=dotted];
m46_34 -> m46_34  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m46_64 -> m46_62  [color=blue, key=0, style=bold];
m46_19 -> m46_21  [color=green, key=1, label=int, style=dashed];
m46_19 -> m46_20  [key=0, style=solid];
m46_65 -> m46_66  [key=0, style=solid];
m46_65 -> m46_48  [color=darkorchid, key=3, label="method methodReturn bool Requeue", style=bold];
m46_66 -> m46_67  [key=0, style=solid];
m46_66 -> m46_68  [key=2, style=dotted];
m46_67 -> m46_65  [color=blue, key=0, style=bold];
m46_67 -> m46_69  [key=2, style=dotted];
m46_67 -> m46_68  [key=0, style=solid];
m46_27 -> m46_28  [key=0, style=solid];
m46_27 -> m46_29  [key=0, style=solid];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_3  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_0 -> m46_7  [color=darkorchid, key=3, label="method methodReturn string Enqueue", style=bold];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_3  [key=0, style=solid];
m46_3 -> m46_4  [key=0, style=solid];
m46_3 -> m46_6  [key=2, style=dotted];
m46_3 -> m46_7  [key=2, style=dotted];
m46_3 -> m46_0  [color=blue, key=0, style=bold];
m46_2 -> m46_4  [key=0, style=solid];
m46_2 -> n21  [key=2, style=dotted];
m46_2 -> m46_3  [key=0, style=solid];
m46_4 -> m46_0  [color=blue, key=0, style=bold];
m46_7 -> m46_10  [key=2, style=dotted];
m46_7 -> m46_9  [key=2, style=dotted];
m46_7 -> m46_8  [key=0, style=solid];
m46_247 -> m46_254  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m46_247 -> m46_251  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m46_247 -> m46_248  [key=0, style=solid];
m46_248 -> m46_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_248 -> m46_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_248 -> m46_249  [key=0, style=solid];
m46_248 -> m46_175  [key=2, style=dotted];
m46_248 -> m46_176  [key=2, style=dotted];
m46_249 -> m46_247  [color=blue, key=0, style=bold];
m46_77 -> m46_82  [key=0, style=solid];
m46_77 -> m46_84  [color=darkorchid, key=3, label="method methodReturn string ContinueWith", style=bold];
m46_77 -> m46_81  [color=green, key=1, label=result, style=dashed];
m46_77 -> m46_78  [key=0, style=solid];
m46_77 -> m46_85  [key=2, style=dotted];
m46_82 -> m46_83  [key=0, style=solid];
m46_82 -> m46_84  [key=2, style=dotted];
m46_83 -> m46_77  [color=blue, key=0, style=bold];
m46_83 -> m46_74  [color=blue, key=0, style=bold];
m46_59 -> m46_60  [key=0, style=solid];
m46_59 -> m46_61  [key=0, style=solid];
m46_141 -> m46_191  [key=0, style=solid];
m46_141 -> m46_198  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_141 -> m46_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_141 -> m46_199  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m46_195 -> m46_91  [key=2, style=dotted];
m46_195 -> m46_196  [key=0, style=solid];
m46_191 -> m46_195  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m46_191 -> m46_192  [key=0, style=solid];
m46_191 -> m46_196  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m46_192 -> m46_195  [color=darkseagreen4, key=1, label=dates, style=dashed];
m46_192 -> m46_193  [key=0, style=solid];
m46_192 -> m46_210  [key=2, style=dotted];
m46_192 -> m46_198  [color=darkseagreen4, key=1, label=dates, style=dashed];
m46_192 -> m46_202  [color=darkseagreen4, key=1, label=dates, style=dashed];
m46_192 -> m46_206  [color=darkseagreen4, key=1, label=dates, style=dashed];
m46_194 -> m46_195  [key=0, style=solid];
m46_194 -> m46_198  [key=0, style=solid];
m46_196 -> m46_196  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m46_196 -> m46_197  [key=0, style=solid];
m46_196 -> m46_211  [key=2, style=dotted];
m46_200 -> m46_51  [key=2, style=dotted];
m46_200 -> m46_201  [key=0, style=solid];
m46_200 -> m46_206  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_200 -> m46_208  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_193 -> m46_194  [key=0, style=solid];
m46_193 -> m46_197  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_198 -> m46_175  [key=2, style=dotted];
m46_198 -> m46_176  [key=2, style=dotted];
m46_198 -> m46_199  [key=0, style=solid];
m46_198 -> m46_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_202 -> m46_203  [key=0, style=solid];
m46_202 -> m46_208  [key=0, style=solid];
m46_206 -> m46_207  [key=0, style=solid];
m46_206 -> m46_215  [key=2, style=dotted];
m46_197 -> m46_194  [key=0, style=solid];
m46_197 -> m46_197  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_199 -> m46_200  [key=0, style=solid];
m46_199 -> m46_212  [key=2, style=dotted];
m46_199 -> m46_204  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m46_201 -> m46_202  [key=0, style=solid];
m46_201 -> m46_206  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_201 -> m46_204  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_201 -> m46_207  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_208 -> m46_209  [key=0, style=solid];
m46_207 -> m46_202  [key=0, style=solid];
m46_207 -> m46_207  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_203 -> m46_204  [key=0, style=solid];
m46_204 -> m46_206  [key=0, style=solid];
m46_204 -> m46_205  [key=0, style=solid];
m46_204 -> m46_213  [key=2, style=dotted];
m46_204 -> m46_214  [key=2, style=dotted];
m46_205 -> m46_206  [key=0, style=solid];
m46_209 -> m46_141  [color=blue, key=0, style=bold];
m46_87 -> m46_100  [key=0, style=solid];
m46_87 -> m46_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_87 -> m46_103  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_100 -> m46_101  [key=0, style=solid];
m46_100 -> m46_102  [key=0, style=solid];
m46_100 -> m46_98  [color=blue, key=0, style=bold];
m46_102 -> m46_103  [color=green, key=0, style=solid];
m46_102 -> m46_99  [key=2, style=dotted];
m46_102 -> m46_104  [color=darkseagreen4, key=1, label=int, style=dashed];
m46_103 -> m46_104  [color=green, key=0, style=solid];
m46_103 -> m46_48  [key=2, style=dotted];
m46_103 -> m46_42  [key=2, style=dotted];
m46_101 -> m46_104  [key=0, style=solid];
m46_101 -> n21  [key=2, style=dotted];
m46_104 -> m46_87  [color=blue, key=0, style=bold];
m46_104 -> m46_105  [color=green, key=0, style=solid];
m46_104 -> m46_107  [key=2, style=dotted];
m46_88 -> m46_89  [key=0, style=solid];
m46_88 -> m46_84  [color=darkorchid, key=3, label="method methodReturn string ContinueWith", style=bold];
m46_157 -> m46_159  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_157 -> m46_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_157 -> m46_158  [key=0, style=solid];
m46_160 -> m46_59  [key=2, style=dotted];
m46_160 -> m46_161  [key=0, style=solid];
m46_160 -> m46_163  [color=darkseagreen4, key=1, label=queue, style=dashed];
m46_159 -> m46_54  [key=2, style=dotted];
m46_159 -> m46_160  [key=0, style=solid];
m46_159 -> m46_9  [key=2, style=dotted];
m46_161 -> m46_162  [key=0, style=solid];
m46_161 -> m46_163  [key=0, style=solid];
m46_161 -> m46_154  [key=2, style=dotted];
m46_163 -> m46_164  [key=0, style=solid];
m46_163 -> m46_155  [key=2, style=dotted];
m46_163 -> m46_156  [key=2, style=dotted];
m46_158 -> m46_159  [key=0, style=solid];
m46_162 -> m46_164  [key=0, style=solid];
m46_164 -> m46_157  [color=blue, key=0, style=bold];
m46_78 -> m46_79  [key=0, style=solid];
m46_78 -> m46_81  [color=darkorchid, key=3, label="method methodReturn string ContinueWith", style=bold];
m46_78 -> m46_82  [key=0, style=solid];
m46_78 -> m46_80  [color=darkseagreen4, key=1, label=serverName, style=dashed];
m46_79 -> m46_80  [key=0, style=solid];
m46_79 -> m46_6  [key=2, style=dotted];
m46_79 -> m46_81  [key=2, style=dotted];
m46_79 -> m46_52  [key=2, style=dotted];
m46_79 -> m46_86  [key=2, style=dotted];
m46_80 -> m46_78  [color=blue, key=0, style=bold];
m46_80 -> m46_81  [color=green, key=0, style=solid];
m46_80 -> m46_52  [key=2, style=dotted];
m46_80 -> m46_87  [key=2, style=dotted];
m46_241 -> m46_242  [key=0, style=solid];
m46_62 -> m46_63  [key=0, style=solid];
m46_62 -> m46_54  [key=2, style=dotted];
m46_98 -> m46_99  [color=green, key=0, style=solid];
m46_98 -> m46_84  [color=blue, key=0, style=bold];
m46_99 -> m46_100  [color=green, key=0, style=solid];
m46_99 -> m46_101  [color=green, key=2, style=dotted];
m46_99 -> m46_33  [color=green, key=2, style=dotted];
m46_99 -> m46_32  [color=green, key=2, style=dotted];
m46_99 -> m46_34  [color=green, key=2, style=dotted];
m46_99 -> m46_35  [color=green, key=2, style=dotted];
m46_108 -> m46_109  [key=0, style=solid];
m46_28 -> m46_29  [key=0, style=solid];
m46_28 -> m46_30  [key=0, style=solid];
m46_28 -> n21  [key=2, style=dotted];
m46_36 -> m46_37  [key=0, style=solid];
m46_36 -> m46_39  [color=red, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_254 -> m46_55  [key=2, style=dotted];
m46_254 -> m46_255  [key=0, style=solid];
m46_254 -> m46_256  [key=2, style=dotted];
m46_254 -> m46_257  [key=2, style=dotted];
m46_254 -> m46_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_63 -> m46_64  [key=0, style=solid];
m46_63 -> m46_58  [color=blue, key=0, style=bold];
m46_316 -> m46_89  [key=2, style=dotted];
m46_316 -> m46_317  [key=0, style=solid];
m46_29 -> m46_33  [key=2, style=dotted];
m46_29 -> m46_32  [key=2, style=dotted];
m46_29 -> m46_34  [key=2, style=dotted];
m46_29 -> m46_35  [key=2, style=dotted];
m46_29 -> m46_30  [key=0, style=solid];
m46_29 -> m46_31  [key=2, style=dotted];
m46_29 -> m46_19  [key=2, style=dotted];
m46_29 -> m46_13  [key=2, style=dotted];
m46_109 -> m46_33  [key=2, style=dotted];
m46_109 -> m46_32  [key=2, style=dotted];
m46_109 -> m46_34  [key=2, style=dotted];
m46_109 -> m46_35  [key=2, style=dotted];
m46_109 -> m46_110  [key=0, style=solid];
m46_109 -> m46_111  [key=2, style=dotted];
m46_127 -> m46_32  [key=2, style=dotted];
m46_127 -> m46_34  [key=2, style=dotted];
m46_127 -> m46_35  [key=2, style=dotted];
m46_127 -> m46_128  [key=0, style=solid];
m46_127 -> m46_129  [key=2, style=dotted];
m46_135 -> m46_32  [key=2, style=dotted];
m46_135 -> m46_34  [key=2, style=dotted];
m46_135 -> m46_35  [key=2, style=dotted];
m46_135 -> m46_136  [key=0, style=solid];
m46_135 -> m46_129  [key=2, style=dotted];
m46_110 -> m46_108  [color=blue, key=0, style=bold];
m46_300 -> m46_4  [key=2, style=dotted];
m46_300 -> m46_301  [key=0, style=solid];
m46_306 -> m46_4  [key=2, style=dotted];
m46_306 -> m46_307  [key=0, style=solid];
m46_319 -> m46_4  [key=2, style=dotted];
m46_319 -> m46_320  [key=0, style=solid];
m46_30 -> m46_28  [color=blue, key=0, style=bold];
m46_30 -> m46_26  [color=blue, key=0, style=bold];
m46_38 -> m46_36  [color=blue, key=0, style=bold];
m46_38 -> m46_40  [key=0, style=solid];
m46_38 -> n21  [key=2, style=dotted];
m46_37 -> m46_38  [key=0, style=solid];
m46_37 -> m46_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>", style=dashed];
m46_37 -> m46_39  [color=red, key=0, style=solid];
m46_245 -> m46_52  [key=2, style=dotted];
m46_245 -> m46_246  [key=0, style=solid];
m46_325 -> m46_52  [key=2, style=dotted];
m46_325 -> m46_326  [key=0, style=solid];
m46_325 -> m46_10  [key=2, style=dotted];
m46_251 -> m46_53  [key=2, style=dotted];
m46_251 -> m46_252  [key=0, style=solid];
m46_251 -> m46_9  [key=2, style=dotted];
m46_253 -> m46_254  [key=0, style=solid];
m46_255 -> m46_253  [color=blue, key=0, style=bold];
m46_258 -> m46_259  [key=0, style=solid];
m46_181 -> m46_182  [key=0, style=solid];
m46_185 -> m46_186  [key=0, style=solid];
m46_188 -> m46_189  [key=0, style=solid];
m46_315 -> m46_316  [key=0, style=solid];
m46_317 -> m46_315  [color=blue, key=0, style=bold];
m46_126 -> m46_127  [key=0, style=solid];
m46_134 -> m46_135  [key=0, style=solid];
m46_128 -> m46_126  [color=blue, key=0, style=bold];
m46_136 -> m46_134  [color=blue, key=0, style=bold];
m46_299 -> m46_300  [key=0, style=solid];
m46_301 -> m46_299  [color=blue, key=0, style=bold];
m46_305 -> m46_306  [key=0, style=solid];
m46_307 -> m46_305  [color=blue, key=0, style=bold];
m46_318 -> m46_319  [key=0, style=solid];
m46_320 -> m46_318  [color=blue, key=0, style=bold];
m46_244 -> m46_245  [key=0, style=solid];
m46_246 -> m46_244  [color=blue, key=0, style=bold];
m46_324 -> m46_325  [key=0, style=solid];
m46_326 -> m46_324  [color=blue, key=0, style=bold];
m46_250 -> m46_251  [key=0, style=solid];
m46_252 -> m46_250  [color=blue, key=0, style=bold];
m46_260 -> m46_258  [color=blue, key=0, style=bold];
m46_259 -> m46_260  [key=0, style=solid];
m46_182 -> m46_183  [key=0, style=solid];
m46_182 -> m46_184  [key=2, style=dotted];
m46_183 -> m46_181  [color=blue, key=0, style=bold];
m46_187 -> m46_185  [color=blue, key=0, style=bold];
m46_186 -> m46_187  [key=0, style=solid];
m46_190 -> m46_188  [color=blue, key=0, style=bold];
m46_189 -> m46_190  [key=0, style=solid];
m46_291 -> m46_292  [key=0, style=solid];
m46_297 -> m46_298  [key=0, style=solid];
m46_303 -> m46_304  [key=0, style=solid];
m46_309 -> m46_310  [key=0, style=solid];
m46_322 -> m46_323  [key=0, style=solid];
m46_328 -> m46_329  [key=0, style=solid];
m46_290 -> m46_291  [key=0, style=solid];
m46_292 -> m46_290  [color=blue, key=0, style=bold];
m46_296 -> m46_297  [key=0, style=solid];
m46_298 -> m46_296  [color=blue, key=0, style=bold];
m46_302 -> m46_303  [key=0, style=solid];
m46_304 -> m46_302  [color=blue, key=0, style=bold];
m46_308 -> m46_309  [key=0, style=solid];
m46_310 -> m46_308  [color=blue, key=0, style=bold];
m46_321 -> m46_322  [key=0, style=solid];
m46_323 -> m46_321  [color=blue, key=0, style=bold];
m46_327 -> m46_328  [key=0, style=solid];
m46_329 -> m46_327  [color=blue, key=0, style=bold];
m46_286 -> m46_287  [key=0, style=solid];
m46_293 -> m46_294  [key=0, style=solid];
m46_311 -> m46_312  [key=0, style=solid];
m46_217 -> m46_218  [key=0, style=solid];
m46_217 -> m46_219  [key=2, style=dotted];
m46_217 -> m46_220  [key=2, style=dotted];
m46_216 -> m46_217  [key=0, style=solid];
m46_288 -> m46_286  [color=blue, key=0, style=bold];
m46_287 -> m46_288  [key=0, style=solid];
m46_287 -> m46_289  [key=2, style=dotted];
m46_295 -> m46_293  [color=blue, key=0, style=bold];
m46_294 -> m46_295  [key=0, style=solid];
m46_294 -> m46_289  [key=2, style=dotted];
m46_313 -> m46_311  [color=blue, key=0, style=bold];
m46_312 -> m46_313  [key=0, style=solid];
m46_312 -> m46_314  [key=2, style=dotted];
m46_218 -> m46_216  [color=blue, key=0, style=bold];
m46_242 -> m46_219  [key=2, style=dotted];
m46_242 -> m46_243  [key=0, style=solid];
m46_243 -> m46_241  [color=blue, key=0, style=bold];
m46_74 -> m46_75  [key=0, style=solid];
m46_74 -> m46_77  [color=darkorchid, key=3, label="method methodReturn string ContinueWith", style=bold];
m46_75 -> m46_76  [key=0, style=solid];
m46_75 -> m46_6  [key=2, style=dotted];
m46_75 -> m46_77  [key=2, style=dotted];
m46_76 -> m46_74  [color=blue, key=0, style=bold];
m46_76 -> m46_77  [key=0, style=solid];
m46_76 -> m46_78  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m46_76 -> m46_84  [key=2, style=dotted];
m46_91 -> m46_92  [key=0, style=solid];
m46_91 -> m46_87  [color=darkorchid, key=3, label="method methodReturn string ContinueWith", style=bold];
m46_142 -> m46_143  [key=0, style=solid];
m46_144 -> m46_141  [key=2, style=dotted];
m46_144 -> m46_145  [key=0, style=solid];
m46_143 -> m46_144  [key=0, style=solid];
m46_145 -> m46_142  [color=blue, key=0, style=bold];
m46_31 -> m46_32  [key=0, style=solid];
m46_31 -> m46_34  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_31 -> m46_13  [color=darkorchid, key=3, label="method methodReturn string Schedule", style=bold];
m46_92 -> m46_94  [color=green, key=1, label=int, style=dashed];
m46_92 -> m46_93  [key=0, style=solid];
m46_92 -> m46_6  [key=2, style=dotted];
m46_92 -> m46_87  [key=2, style=dotted];
m46_94 -> m46_95  [color=green, key=0, style=solid];
m46_94 -> m46_97  [color=green, key=2, style=dotted];
m46_94 -> m46_96  [key=0, style=solid];
m46_93 -> m46_94  [color=green, key=0, style=solid];
m46_93 -> m46_91  [color=blue, key=0, style=bold];
m46_95 -> m46_96  [color=green, key=0, style=solid];
m46_95 -> m46_25  [color=green, key=2, style=dotted];
m46_95 -> m46_98  [color=green, key=1, label="lambda expression", style=dashed];
m46_95 -> n21  [key=2, style=dotted];
m46_96 -> m46_92  [color=blue, key=0, style=bold];
m46_96 -> m46_97  [key=0, style=solid];
m46_96 -> m46_99  [key=2, style=dotted];
m46_33 -> m46_35  [key=0, style=solid];
m46_33 -> n21  [key=2, style=dotted];
m46_60 -> m46_63  [key=0, style=solid];
m46_60 -> n21  [key=2, style=dotted];
m46_6 -> m46_7  [key=0, style=solid];
m46_105 -> m46_106  [color=green, key=0, style=solid];
m46_105 -> m46_25  [color=green, key=2, style=dotted];
m46_105 -> m46_108  [color=green, key=1, label="lambda expression", style=dashed];
m46_106 -> m46_102  [color=blue, key=0, style=bold];
m46_68 -> m46_69  [key=0, style=solid];
m46_68 -> m46_72  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_68 -> m46_65  [color=blue, key=0, style=bold];
m46_69 -> m46_70  [key=0, style=solid];
m46_69 -> m46_71  [key=0, style=solid];
m46_69 -> m46_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_69 -> m46_221  [key=0, style=solid];
m46_69 -> m46_228  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_69 -> m46_229  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m46_72 -> m46_73  [key=0, style=solid];
m46_72 -> m46_54  [key=2, style=dotted];
m46_72 -> m46_69  [key=2, style=dotted];
m46_70 -> m46_73  [key=0, style=solid];
m46_70 -> n21  [key=2, style=dotted];
m46_70 -> m46_71  [key=0, style=solid];
m46_71 -> m46_72  [key=0, style=solid];
m46_71 -> m46_6  [key=2, style=dotted];
m46_73 -> m46_68  [color=blue, key=0, style=bold];
m46_73 -> m46_70  [color=blue, key=0, style=bold];
m46_112 -> m46_113  [key=0, style=solid];
m46_121 -> m46_91  [key=2, style=dotted];
m46_121 -> m46_116  [key=0, style=solid];
m46_121 -> m46_125  [key=2, style=dotted];
m46_118 -> m46_25  [key=2, style=dotted];
m46_118 -> m46_121  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m46_118 -> m46_119  [key=0, style=solid];
m46_118 -> m46_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_117 -> m46_52  [key=2, style=dotted];
m46_117 -> m46_118  [key=0, style=solid];
m46_117 -> m46_107  [key=2, style=dotted];
m46_119 -> m46_52  [key=2, style=dotted];
m46_119 -> m46_121  [color=darkseagreen4, key=1, label=length, style=dashed];
m46_119 -> m46_120  [key=0, style=solid];
m46_119 -> m46_10  [key=2, style=dotted];
m46_120 -> m46_52  [key=2, style=dotted];
m46_120 -> m46_121  [key=0, style=solid];
m46_120 -> m46_10  [key=2, style=dotted];
m46_115 -> m46_121  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_115 -> m46_116  [key=0, style=solid];
m46_115 -> m46_124  [key=2, style=dotted];
m46_115 -> m46_122  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_116 -> m46_121  [color=darkseagreen4, key=1, label=queue, style=dashed];
m46_116 -> m46_117  [key=0, style=solid];
m46_116 -> m46_119  [color=darkseagreen4, key=1, label=queue, style=dashed];
m46_116 -> m46_120  [color=darkseagreen4, key=1, label=queue, style=dashed];
m46_116 -> m46_122  [key=0, style=solid];
m46_114 -> m46_84  [key=2, style=dotted];
m46_114 -> m46_115  [key=0, style=solid];
m46_114 -> m46_116  [color=darkseagreen4, key=1, label=queues, style=dashed];
m46_122 -> m46_123  [key=0, style=solid];
m46_113 -> m46_114  [key=0, style=solid];
m46_123 -> m46_112  [color=blue, key=0, style=bold];
m46_89 -> m46_90  [key=0, style=solid];
m46_89 -> m46_6  [key=2, style=dotted];
m46_89 -> m46_84  [key=2, style=dotted];
m46_61 -> m46_62  [key=0, style=solid];
m46_61 -> m46_64  [key=2, style=dotted];
m46_81 -> m46_78  [color=green, key=0, style=solid];
m46_81 -> m46_88  [color=green, key=2, style=dotted];
m46_81 -> m46_89  [color=green, key=2, style=dotted];
m46_81 -> m46_90  [color=green, key=2, style=dotted];
m46_81 -> m46_91  [color=green, key=2, style=dotted];
m46_81 -> m46_85  [key=0, style=solid];
m46_81 -> m46_87  [color=darkorchid, key=3, label="method methodReturn string ContinueWith", style=bold];
m46_265 -> m46_266  [key=0, style=solid];
m46_267 -> m46_316  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_268  [key=0, style=solid];
m46_267 -> m46_282  [key=2, style=dotted];
m46_267 -> m46_270  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_291  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_271  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_297  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_272  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_303  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_273  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_309  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_274  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_275  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_322  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_278  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_328  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_267 -> m46_280  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_277 -> m46_325  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m46_277 -> m46_278  [key=0, style=solid];
m46_268 -> m46_84  [key=2, style=dotted];
m46_268 -> m46_269  [key=0, style=solid];
m46_268 -> m46_276  [color=darkseagreen4, key=1, label=queues, style=dashed];
m46_266 -> m46_267  [key=0, style=solid];
m46_270 -> m46_271  [key=0, style=solid];
m46_270 -> m46_284  [key=2, style=dotted];
m46_270 -> m46_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_270 -> m46_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_271 -> m46_272  [key=0, style=solid];
m46_271 -> m46_284  [key=2, style=dotted];
m46_271 -> m46_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_271 -> m46_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_272 -> m46_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_272 -> m46_273  [key=0, style=solid];
m46_272 -> m46_284  [key=2, style=dotted];
m46_272 -> m46_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_273 -> m46_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_273 -> m46_274  [key=0, style=solid];
m46_273 -> m46_284  [key=2, style=dotted];
m46_273 -> m46_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_274 -> m46_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_274 -> m46_275  [key=0, style=solid];
m46_274 -> m46_284  [key=2, style=dotted];
m46_274 -> m46_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_275 -> m46_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_275 -> m46_276  [key=0, style=solid];
m46_275 -> m46_284  [key=2, style=dotted];
m46_275 -> m46_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_278 -> m46_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_278 -> m46_276  [key=0, style=solid];
m46_278 -> m46_284  [key=2, style=dotted];
m46_278 -> m46_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_280 -> m46_281  [key=0, style=solid];
m46_276 -> m46_277  [key=0, style=solid];
m46_276 -> m46_279  [key=0, style=solid];
m46_269 -> m46_270  [key=0, style=solid];
m46_269 -> m46_271  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m46_269 -> m46_272  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m46_269 -> m46_273  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m46_269 -> m46_274  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m46_269 -> m46_275  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m46_269 -> m46_278  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m46_269 -> m46_283  [key=2, style=dotted];
m46_269 -> m46_279  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m46_279 -> m46_280  [key=0, style=solid];
m46_279 -> m46_285  [key=2, style=dotted];
m46_281 -> m46_265  [color=blue, key=0, style=bold];
m46_261 -> m46_262  [key=0, style=solid];
m46_263 -> m46_10  [key=2, style=dotted];
m46_263 -> m46_264  [key=0, style=solid];
m46_262 -> m46_263  [key=0, style=solid];
m46_264 -> m46_261  [color=blue, key=0, style=bold];
m46_137 -> m46_138  [key=0, style=solid];
m46_139 -> m46_141  [key=2, style=dotted];
m46_139 -> m46_140  [key=0, style=solid];
m46_138 -> m46_139  [key=0, style=solid];
m46_140 -> m46_137  [color=blue, key=0, style=bold];
m46_35 -> m46_31  [color=blue, key=0, style=bold];
m46_85 -> m46_86  [key=0, style=solid];
m46_85 -> m46_87  [key=2, style=dotted];
m46_225 -> m46_91  [key=2, style=dotted];
m46_225 -> m46_226  [key=0, style=solid];
m46_221 -> m46_225  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m46_221 -> m46_222  [key=0, style=solid];
m46_221 -> m46_224  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m46_221 -> m46_226  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m46_224 -> m46_225  [key=0, style=solid];
m46_224 -> m46_227  [key=0, style=solid];
m46_223 -> m46_225  [color=darkseagreen4, key=1, label=dates, style=dashed];
m46_223 -> m46_224  [key=0, style=solid];
m46_223 -> m46_210  [key=2, style=dotted];
m46_223 -> m46_227  [color=darkseagreen4, key=1, label=dates, style=dashed];
m46_223 -> m46_236  [color=darkseagreen4, key=1, label=dates, style=dashed];
m46_226 -> m46_224  [key=0, style=solid];
m46_226 -> m46_226  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m46_226 -> m46_240  [key=2, style=dotted];
m46_230 -> m46_51  [key=2, style=dotted];
m46_230 -> m46_231  [key=0, style=solid];
m46_230 -> m46_236  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_230 -> m46_238  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_222 -> m46_224  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m46_222 -> m46_223  [key=0, style=solid];
m46_222 -> m46_240  [key=2, style=dotted];
m46_227 -> m46_175  [key=2, style=dotted];
m46_227 -> m46_176  [key=2, style=dotted];
m46_227 -> m46_228  [key=0, style=solid];
m46_227 -> m46_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_227 -> m46_232  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m46_236 -> m46_237  [key=0, style=solid];
m46_236 -> m46_215  [key=2, style=dotted];
m46_229 -> m46_230  [key=0, style=solid];
m46_229 -> m46_212  [key=2, style=dotted];
m46_229 -> m46_234  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m46_231 -> m46_236  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_231 -> m46_232  [key=0, style=solid];
m46_231 -> m46_234  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_231 -> m46_237  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_238 -> m46_239  [key=0, style=solid];
m46_228 -> m46_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_228 -> m46_175  [key=2, style=dotted];
m46_228 -> m46_176  [key=2, style=dotted];
m46_228 -> m46_229  [key=0, style=solid];
m46_232 -> m46_238  [key=0, style=solid];
m46_232 -> m46_233  [key=0, style=solid];
m46_234 -> m46_236  [key=0, style=solid];
m46_234 -> m46_235  [key=0, style=solid];
m46_234 -> m46_213  [key=2, style=dotted];
m46_234 -> m46_214  [key=2, style=dotted];
m46_235 -> m46_236  [key=0, style=solid];
m46_237 -> m46_232  [key=0, style=solid];
m46_237 -> m46_237  [color=darkseagreen4, key=1, label=i, style=dashed];
m46_233 -> m46_234  [key=0, style=solid];
m46_239 -> m46_69  [color=blue, key=0, style=bold];
m46_11 -> m46_12  [key=0, style=solid];
m46_11 -> m46_6  [key=2, style=dotted];
m46_11 -> m46_13  [key=2, style=dotted];
m46_12 -> m46_13  [key=0, style=solid];
m46_12 -> m46_8  [color=blue, key=0, style=bold];
m46_14 -> m46_11  [color=blue, key=0, style=bold];
m46_14 -> m46_15  [key=0, style=solid];
m46_14 -> m46_17  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_14 -> m46_7  [color=darkorchid, key=3, label="method methodReturn string Schedule", style=bold];
m46_165 -> m46_167  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_165 -> m46_171  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_165 -> m46_166  [key=0, style=solid];
m46_173 -> m46_58  [key=2, style=dotted];
m46_173 -> m46_174  [key=0, style=solid];
m46_173 -> m46_177  [key=2, style=dotted];
m46_173 -> m46_178  [key=2, style=dotted];
m46_173 -> m46_179  [key=2, style=dotted];
m46_173 -> m46_180  [key=2, style=dotted];
m46_173 -> m46_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_173 -> m46_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_173 -> m46_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_167 -> m46_173  [color=darkseagreen4, key=1, label=job, style=dashed];
m46_167 -> m46_86  [key=2, style=dotted];
m46_167 -> m46_168  [key=0, style=solid];
m46_167 -> m46_9  [key=2, style=dotted];
m46_170 -> m46_173  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m46_170 -> m46_171  [key=0, style=solid];
m46_170 -> m46_182  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m46_172 -> m46_173  [key=0, style=solid];
m46_172 -> m46_175  [key=2, style=dotted];
m46_172 -> m46_176  [key=2, style=dotted];
m46_171 -> m46_87  [key=2, style=dotted];
m46_171 -> m46_172  [key=0, style=solid];
m46_171 -> m46_9  [key=2, style=dotted];
m46_166 -> m46_167  [key=0, style=solid];
m46_168 -> m46_170  [key=0, style=solid];
m46_168 -> m46_169  [key=0, style=solid];
m46_169 -> m46_174  [key=0, style=solid];
m46_174 -> m46_165  [color=blue, key=0, style=bold];
m46_5 -> m46_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_5 -> m46_6  [key=0, style=solid];
m46_8 -> m46_5  [color=blue, key=0, style=bold];
m46_8 -> m46_9  [key=0, style=solid];
m46_8 -> m46_11  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_8 -> m46_13  [color=darkorchid, key=3, label="method methodReturn string Enqueue", style=bold];
m46_86 -> m46_81  [color=blue, key=0, style=bold];
m46_90 -> m46_88  [color=blue, key=0, style=bold];
m46_9 -> m46_10  [key=0, style=solid];
m46_9 -> m46_11  [key=0, style=solid];
m46_58 -> m46_59  [key=0, style=solid];
m46_58 -> m46_62  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_15 -> m46_16  [color=green, key=0, style=solid];
m46_15 -> m46_17  [key=0, style=solid];
m46_17 -> m46_18  [key=0, style=solid];
m46_17 -> m46_19  [key=2, style=dotted];
m46_17 -> m46_7  [key=2, style=dotted];
m46_17 -> m46_4  [key=2, style=dotted];
m46_16 -> m46_18  [key=0, style=solid];
m46_16 -> n21  [key=2, style=dotted];
m46_16 -> m46_17  [color=green, key=0, style=solid];
m46_18 -> m46_14  [color=blue, key=0, style=bold];
m46_18 -> m46_15  [color=blue, key=0, style=bold];
m46_10 -> m46_12  [key=0, style=solid];
m46_10 -> n21  [key=2, style=dotted];
m46_84 -> m46_94  [key=0, style=solid];
m46_84 -> m46_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_84 -> m46_97  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m46_97 -> m46_98  [key=0, style=solid];
m46_97 -> m46_41  [key=2, style=dotted];
m46_97 -> m46_42  [key=2, style=dotted];
m46_146 -> m46_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_146 -> m46_152  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_146 -> m46_147  [key=0, style=solid];
m46_149 -> m46_59  [key=2, style=dotted];
m46_149 -> m46_150  [key=0, style=solid];
m46_149 -> m46_152  [color=darkseagreen4, key=1, label=queue, style=dashed];
m46_148 -> m46_54  [key=2, style=dotted];
m46_148 -> m46_149  [key=0, style=solid];
m46_148 -> m46_9  [key=2, style=dotted];
m46_150 -> m46_151  [key=0, style=solid];
m46_150 -> m46_152  [key=0, style=solid];
m46_150 -> m46_154  [key=2, style=dotted];
m46_152 -> m46_153  [key=0, style=solid];
m46_152 -> m46_155  [key=2, style=dotted];
m46_152 -> m46_156  [key=2, style=dotted];
m46_147 -> m46_148  [key=0, style=solid];
m46_151 -> m46_153  [key=0, style=solid];
m46_153 -> m46_146  [color=blue, key=0, style=bold];
m46_130 -> m46_131  [key=0, style=solid];
m46_132 -> m46_25  [key=2, style=dotted];
m46_132 -> m46_133  [key=0, style=solid];
m46_132 -> m46_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_131 -> m46_132  [key=0, style=solid];
m46_131 -> m46_107  [key=2, style=dotted];
m46_131 -> m46_9  [key=2, style=dotted];
m46_133 -> m46_130  [color=blue, key=0, style=bold];
m46_336 -> m46_254  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m46_337 -> m46_316  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_337 -> m46_291  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_337 -> m46_297  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_337 -> m46_303  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_337 -> m46_309  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_337 -> m46_322  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_337 -> m46_328  [color=darkseagreen4, key=1, label=stats, style=dashed];
m46_332 -> m46_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_338 -> m46_325  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m46_333 -> m46_251  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m46_334 -> m46_251  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_335 -> m46_251  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_330 -> m46_182  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m46_331 -> m46_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_0 -> m49_1  [key=0, style=solid];
m49_1 -> m49_2  [key=0, style=solid];
m49_1 -> m49_5  [key=2, style=dotted];
m49_2 -> m49_3  [key=0, style=solid];
m49_2 -> m49_6  [key=2, style=dotted];
m49_3 -> m49_4  [key=0, style=solid];
m49_3 -> m49_7  [key=2, style=dotted];
m49_3 -> m49_6  [key=2, style=dotted];
m49_4 -> m49_0  [color=blue, key=0, style=bold];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_0  [color=blue, key=0, style=bold];
m51_0 -> m51_1  [color=green, key=0, style=solid];
m51_0 -> m51_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m51_0 -> m51_5  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m51_0 -> m51_7  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m51_0 -> m51_9  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m51_0 -> m51_10  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m51_0 -> m51_11  [color=red, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m51_0 -> m51_12  [color=red, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m51_1 -> m51_2  [color=green, key=0, style=solid];
m51_1 -> m51_3  [color=green, key=0, style=solid];
m51_2 -> m51_8  [color=green, key=0, style=solid];
m51_2 -> n21  [color=green, key=2, style=dotted];
m51_2 -> m51_13  [key=0, style=solid];
m51_3 -> m51_4  [key=0, style=solid];
m51_3 -> m51_5  [key=0, style=solid];
m51_4 -> m51_5  [key=0, style=solid];
m51_4 -> m51_10  [key=2, style=dotted];
m51_4 -> m51_11  [key=2, style=dotted];
m51_4 -> m51_13  [key=0, style=solid];
m51_4 -> n21  [key=2, style=dotted];
m51_7 -> m51_8  [key=0, style=solid];
m51_7 -> m51_9  [key=0, style=solid];
m51_5 -> m51_6  [key=0, style=solid];
m51_5 -> m51_7  [key=0, style=solid];
m51_6 -> m51_7  [key=0, style=solid];
m51_6 -> m51_13  [key=0, style=solid];
m51_6 -> n21  [key=2, style=dotted];
m51_8 -> m51_0  [color=blue, key=0, style=bold];
m51_8 -> m51_13  [key=0, style=solid];
m51_8 -> n21  [key=2, style=dotted];
m51_53 -> m51_54  [key=0, style=solid];
m51_53 -> m51_60  [key=2, style=dotted];
m51_53 -> m51_61  [key=2, style=dotted];
m51_54 -> m51_55  [key=0, style=solid];
m51_54 -> m51_50  [color=blue, key=0, style=bold];
m51_55 -> m51_53  [color=blue, key=0, style=bold];
m51_15 -> m51_16  [key=0, style=solid];
m51_15 -> m51_17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_15 -> m51_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_15 -> m51_28  [key=2, style=dotted];
m51_16 -> m51_17  [key=0, style=solid];
m51_16 -> m51_39  [key=2, style=dotted];
m51_16 -> m51_19  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_16 -> m51_27  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_16 -> m51_28  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_17 -> m51_18  [key=0, style=solid];
m51_17 -> m51_40  [key=2, style=dotted];
m51_17 -> m51_23  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_17 -> m51_25  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_17 -> m51_27  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_17 -> m51_28  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_17 -> m51_30  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_17 -> m51_31  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_17 -> m51_33  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_17 -> m51_36  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_18 -> m51_19  [key=0, style=solid];
m51_18 -> m51_41  [key=2, style=dotted];
m51_18 -> m51_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_18 -> m51_21  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_18 -> m51_24  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_18 -> m51_27  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_19 -> m51_20  [key=0, style=solid];
m51_19 -> m51_42  [key=2, style=dotted];
m51_19 -> m51_23  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m51_19 -> m51_30  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m51_27 -> m51_28  [key=0, style=solid];
m51_27 -> m51_48  [key=2, style=dotted];
m51_27 -> m51_12  [color=blue, key=0, style=bold];
m51_28 -> m51_29  [key=0, style=solid];
m51_28 -> m51_49  [key=2, style=dotted];
m51_28 -> m51_30  [color=darkseagreen4, key=1, label=state, style=dashed];
m51_23 -> m51_24  [key=0, style=solid];
m51_23 -> m51_27  [key=0, style=solid];
m51_23 -> m51_46  [key=2, style=dotted];
m51_23 -> m51_30  [key=2, style=dotted];
m51_25 -> m51_26  [color=green, key=0, style=solid];
m51_25 -> m51_47  [key=2, style=dotted];
m51_25 -> m51_32  [key=2, style=dotted];
m51_30 -> m51_31  [key=0, style=solid];
m51_30 -> m51_50  [key=2, style=dotted];
m51_30 -> m51_37  [key=0, style=solid];
m51_31 -> m51_32  [key=0, style=solid];
m51_31 -> m51_34  [key=0, style=solid];
m51_31 -> m51_38  [key=0, style=solid];
m51_31 -> m51_47  [key=2, style=dotted];
m51_33 -> m51_38  [key=0, style=solid];
m51_33 -> m51_47  [key=2, style=dotted];
m51_33 -> m51_34  [key=0, style=solid];
m51_36 -> m51_37  [key=0, style=solid];
m51_36 -> m51_52  [key=2, style=dotted];
m51_21 -> m51_22  [key=0, style=solid];
m51_21 -> m51_44  [key=2, style=dotted];
m51_21 -> m51_23  [color=darkseagreen4, key=1, label=linkedCts, style=dashed];
m51_21 -> m51_27  [key=0, style=solid];
m51_24 -> m51_25  [key=0, style=solid];
m51_24 -> m51_41  [key=2, style=dotted];
m51_24 -> m51_24  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_24 -> m51_27  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_24 -> m51_31  [key=2, style=dotted];
m51_24 -> m51_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_20 -> m51_21  [key=0, style=solid];
m51_20 -> m51_43  [key=2, style=dotted];
m51_20 -> m51_22  [key=0, style=solid];
m51_22 -> m51_23  [key=0, style=solid];
m51_22 -> m51_45  [key=2, style=dotted];
m51_22 -> m51_29  [key=2, style=dotted];
m51_22 -> m51_24  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m51_22 -> m51_34  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m51_22 -> m51_25  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m51_26 -> m51_38  [key=0, style=solid];
m51_26 -> m51_14  [color=green, key=0, style=solid];
m51_26 -> m51_26  [color=green, key=1, label=i, style=dashed];
m51_29 -> m51_30  [key=0, style=solid];
m51_29 -> m51_31  [key=0, style=solid];
m51_32 -> m51_33  [key=0, style=solid];
m51_34 -> m51_35  [key=0, style=solid];
m51_34 -> m51_36  [key=2, style=dotted];
m51_35 -> m51_36  [key=0, style=solid];
m51_35 -> m51_51  [key=2, style=dotted];
m51_35 -> m51_33  [color=blue, key=0, style=bold];
m51_37 -> m51_38  [key=0, style=solid];
m51_37 -> m51_40  [key=0, style=solid];
m51_37 -> m51_42  [key=0, style=solid];
m51_38 -> m51_15  [color=blue, key=0, style=bold];
m51_38 -> m51_39  [key=0, style=solid];
m51_39 -> m51_44  [key=0, style=solid];
m51_41 -> m51_44  [key=0, style=solid];
m51_43 -> m51_44  [key=0, style=solid];
m51_45 -> m51_44  [key=0, style=solid];
m51_40 -> m51_41  [key=0, style=solid];
m51_42 -> m51_43  [key=0, style=solid];
m51_44 -> m51_30  [color=blue, key=0, style=bold];
m51_59 -> m51_60  [key=0, style=solid];
m51_59 -> m51_74  [key=2, style=dotted];
m51_10 -> m51_11  [color=red, key=0, style=solid];
m51_51 -> m51_52  [key=0, style=solid];
m51_51 -> m51_55  [key=2, style=dotted];
m51_51 -> m51_56  [key=2, style=dotted];
m51_51 -> m51_57  [key=2, style=dotted];
m51_49 -> m51_56  [key=0, style=solid];
m51_49 -> m51_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m51_58 -> m51_72  [key=0, style=solid];
m51_12 -> m51_13  [color=red, key=0, style=solid];
m51_12 -> m51_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m51_12 -> m51_25  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m51_13 -> m51_14  [color=green, key=0, style=solid];
m51_13 -> m51_20  [color=green, key=1, label=i, style=dashed];
m51_13 -> m51_22  [color=green, key=1, label=i, style=dashed];
m51_13 -> m51_23  [color=green, key=1, label=i, style=dashed];
m51_13 -> m51_24  [color=green, key=1, label=i, style=dashed];
m51_13 -> m51_34  [color=green, key=1, label=i, style=dashed];
m51_13 -> m51_26  [color=green, key=1, label=i, style=dashed];
m51_13 -> m51_0  [color=blue, key=0, style=bold];
m51_14 -> m51_15  [color=green, key=0, style=solid];
m51_14 -> m51_27  [color=green, key=0, style=solid];
m51_61 -> m51_62  [key=0, style=solid];
m51_61 -> m51_65  [color=darkseagreen4, key=1, label=latency, style=dashed];
m51_48 -> m51_46  [color=blue, key=0, style=bold];
m51_47 -> m51_48  [key=0, style=solid];
m51_47 -> m51_49  [key=2, style=dotted];
m51_52 -> m51_53  [key=0, style=solid];
m51_52 -> m51_58  [key=2, style=dotted];
m51_52 -> m51_59  [key=2, style=dotted];
m51_56 -> m51_57  [key=0, style=solid];
m51_56 -> m51_73  [key=2, style=dotted];
m51_56 -> m51_59  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m51_56 -> m51_60  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m51_56 -> m51_61  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m51_56 -> m51_63  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m51_60 -> m51_61  [key=0, style=solid];
m51_60 -> m51_75  [key=2, style=dotted];
m51_60 -> m51_63  [color=darkseagreen4, key=1, label=performContext, style=dashed];
m51_57 -> m51_58  [key=0, style=solid];
m51_57 -> m51_59  [key=0, style=solid];
m51_63 -> m51_64  [key=0, style=solid];
m51_63 -> m51_77  [key=2, style=dotted];
m51_63 -> m51_65  [color=darkseagreen4, key=1, label=result, style=dashed];
m51_63 -> m51_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m51_62 -> m51_63  [key=0, style=solid];
m51_62 -> m51_76  [key=2, style=dotted];
m51_62 -> m51_64  [color=darkseagreen4, key=1, label=duration, style=dashed];
m51_62 -> m51_65  [color=darkseagreen4, key=1, label=duration, style=dashed];
m51_62 -> m51_14  [color=green, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_3  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_20  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_22  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_24  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_34  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_4  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_5  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_6  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_7  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_15  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_47  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_62 -> m51_53  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m51_65 -> m51_72  [key=0, style=solid];
m51_65 -> m51_79  [key=2, style=dotted];
m51_64 -> m51_65  [key=0, style=solid];
m51_64 -> m51_78  [key=2, style=dotted];
m51_64 -> m51_34  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m51_66 -> m51_67  [key=0, style=solid];
m51_67 -> m51_72  [key=0, style=solid];
m51_68 -> m51_69  [key=0, style=solid];
m51_69 -> m51_72  [key=0, style=solid];
m51_69 -> m51_80  [key=2, style=dotted];
m51_70 -> m51_71  [key=0, style=solid];
m51_71 -> m51_72  [key=0, style=solid];
m51_71 -> m51_80  [key=2, style=dotted];
m51_72 -> m51_49  [color=blue, key=0, style=bold];
m51_46 -> m51_47  [key=0, style=solid];
m51_9 -> m51_10  [key=0, style=solid];
m51_11 -> m51_12  [color=red, key=0, style=solid];
m51_50 -> m51_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m51_50 -> m51_51  [key=0, style=solid];
m51_81 -> m51_9  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_10  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_11  [color=red, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_12  [color=red, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_16  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_17  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_19  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_22  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_27  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_28  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_54  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_60  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m51_81 -> m51_63  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m52_0 -> m52_1  [key=0, style=solid];
m52_1 -> m52_0  [color=blue, key=0, style=bold];
m52_2 -> m52_3  [key=0, style=solid];
m52_3 -> m52_4  [color=green, key=0, style=solid];
m52_4 -> m52_5  [color=green, key=0, style=solid];
m52_4 -> m52_6  [color=green, key=2, style=dotted];
m52_5 -> m52_2  [color=blue, key=0, style=bold];
m52_7 -> m52_4  [color=green, key=1, label="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint", style=dashed];
m53_0 -> m53_1  [color=red, key=0, style=solid];
m53_0 -> m53_2  [color=red, key=1, label=int, style=dashed];
m53_0 -> m53_3  [color=red, key=1, label=int, style=dashed];
m53_1 -> m53_2  [color=red, key=0, style=solid];
m53_1 -> m53_3  [color=red, key=0, style=solid];
m53_2 -> m53_5  [color=red, key=0, style=solid];
m53_2 -> m53_6  [color=red, key=2, style=dotted];
m53_2 -> n22  [color=red, key=2, style=dotted];
m53_3 -> m53_4  [color=red, key=0, style=solid];
m53_4 -> m53_5  [color=red, key=0, style=solid];
m53_5 -> m53_0  [color=blue, key=0, style=bold];
m53_19 -> m53_20  [color=red, key=0, style=solid];
m53_20 -> m53_21  [color=red, key=0, style=solid];
m53_21 -> m53_19  [color=blue, key=0, style=bold];
m53_8 -> m53_9  [color=red, key=0, style=solid];
m53_8 -> m53_12  [color=red, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m53_8 -> m53_14  [color=red, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m53_8 -> m53_15  [color=red, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m53_8 -> m53_20  [color=red, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m53_9 -> m53_10  [color=red, key=0, style=solid];
m53_12 -> m53_13  [color=red, key=0, style=solid];
m53_14 -> m53_15  [color=red, key=0, style=solid];
m53_14 -> m53_17  [color=red, key=2, style=dotted];
m53_15 -> m53_16  [color=red, key=0, style=solid];
m53_15 -> m53_18  [color=red, key=2, style=dotted];
m53_15 -> m53_19  [color=red, key=1, label="lambda expression", style=dashed];
m53_10 -> m53_11  [color=red, key=0, style=solid];
m53_10 -> m53_12  [color=red, key=0, style=solid];
m53_11 -> m53_16  [color=red, key=0, style=solid];
m53_13 -> m53_14  [color=red, key=0, style=solid];
m53_13 -> m53_16  [color=red, key=0, style=solid];
m53_13 -> m53_13  [color=red, key=1, label=elapsedTime, style=dashed];
m53_16 -> m53_8  [color=blue, key=0, style=bold];
m53_22 -> m53_3  [color=red, key=1, label="Hangfire.LatencyTimeoutAttribute", style=dashed];
m53_22 -> m53_4  [color=red, key=1, label="Hangfire.LatencyTimeoutAttribute", style=dashed];
m53_22 -> m53_13  [color=red, key=1, label="Hangfire.LatencyTimeoutAttribute", style=dashed];
m53_22 -> m53_14  [color=red, key=1, label="Hangfire.LatencyTimeoutAttribute", style=dashed];
m53_22 -> m53_15  [color=red, key=1, label="Hangfire.LatencyTimeoutAttribute", style=dashed];
m53_22 -> m53_20  [color=red, key=1, label="Hangfire.LatencyTimeoutAttribute", style=dashed];
m53_23 -> m53_20  [color=red, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m54_0 -> m54_1  [key=0, style=solid];
m54_1 -> m54_2  [key=0, style=solid];
m54_2 -> m54_0  [color=blue, key=0, style=bold];
m54_3 -> m54_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m55_111 -> m55_112  [key=0, style=solid];
m55_112 -> m55_113  [key=0, style=solid];
m55_113 -> m55_111  [color=blue, key=0, style=bold];
m55_148 -> m55_149  [key=0, style=solid];
m55_149 -> m55_150  [key=0, style=solid];
m55_150 -> m55_151  [key=0, style=solid];
m55_151 -> m55_148  [color=blue, key=0, style=bold];
m55_208 -> m55_210  [key=0, style=solid];
m55_210 -> m55_211  [key=0, style=solid];
m55_210 -> m55_137  [key=2, style=dotted];
m55_211 -> m55_208  [color=blue, key=0, style=bold];
m55_99 -> m55_166  [color=red, key=0, style=solid];
m55_99 -> m55_167  [color=red, key=1, label="System.Type", style=dashed];
m55_99 -> m55_180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_99 -> m55_168  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_99 -> m55_170  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_99 -> m55_172  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_99 -> m55_174  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_99 -> m55_176  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_166 -> m55_167  [color=red, key=0, style=solid];
m55_166 -> m55_168  [color=red, key=0, style=solid];
m55_167 -> m55_177  [color=red, key=0, style=solid];
m55_167 -> m55_148  [color=red, key=2, style=dotted];
m55_167 -> m55_180  [color=red, key=1, label=string, style=dashed];
m55_168 -> m55_169  [key=0, style=solid];
m55_168 -> m55_170  [key=0, style=solid];
m55_168 -> m55_178  [key=2, style=dotted];
m55_170 -> m55_171  [key=0, style=solid];
m55_170 -> m55_172  [key=0, style=solid];
m55_172 -> m55_173  [key=0, style=solid];
m55_172 -> m55_174  [key=0, style=solid];
m55_174 -> m55_175  [key=0, style=solid];
m55_174 -> m55_176  [key=0, style=solid];
m55_176 -> m55_177  [key=0, style=solid];
m55_176 -> m55_148  [key=2, style=dotted];
m55_169 -> m55_177  [key=0, style=solid];
m55_169 -> m55_148  [key=2, style=dotted];
m55_171 -> m55_177  [key=0, style=solid];
m55_171 -> m55_148  [key=2, style=dotted];
m55_171 -> m55_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_173 -> m55_177  [key=0, style=solid];
m55_173 -> m55_148  [key=2, style=dotted];
m55_175 -> m55_177  [key=0, style=solid];
m55_175 -> m55_148  [key=2, style=dotted];
m55_177 -> m55_99  [color=blue, key=0, style=bold];
m55_101 -> m55_152  [color=red, key=0, style=solid];
m55_101 -> m55_156  [color=darkseagreen4, key=1, label=bool, style=dashed];
m55_101 -> m55_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_101 -> m55_159  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_152 -> m55_153  [color=red, key=0, style=solid];
m55_152 -> m55_154  [color=red, key=0, style=solid];
m55_156 -> m55_157  [color=red, key=0, style=solid];
m55_156 -> m55_111  [color=red, key=2, style=dotted];
m55_156 -> m55_80  [color=red, key=2, style=dotted];
m55_158 -> m55_160  [color=red, key=0, style=solid];
m55_158 -> m55_164  [key=2, style=dotted];
m55_158 -> m55_81  [key=2, style=dotted];
m55_158 -> m55_119  [key=2, style=dotted];
m55_158 -> m55_80  [key=2, style=dotted];
m55_159 -> m55_160  [color=red, key=0, style=solid];
m55_159 -> m55_81  [key=2, style=dotted];
m55_159 -> m55_165  [key=2, style=dotted];
m55_159 -> m55_80  [key=2, style=dotted];
m55_153 -> m55_163  [color=red, key=0, style=solid];
m55_153 -> m55_79  [color=red, key=2, style=dotted];
m55_154 -> m55_155  [color=red, key=0, style=solid];
m55_154 -> m55_78  [color=red, key=2, style=dotted];
m55_154 -> m55_156  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_154 -> m55_157  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_154 -> m55_158  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_154 -> m55_159  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_154 -> m55_161  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_154 -> m55_162  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_155 -> m55_156  [color=red, key=0, style=solid];
m55_155 -> m55_159  [color=red, key=0, style=solid];
m55_157 -> m55_158  [color=red, key=0, style=solid];
m55_157 -> m55_80  [color=red, key=2, style=dotted];
m55_157 -> m55_81  [color=red, key=2, style=dotted];
m55_157 -> m55_88  [color=red, key=2, style=dotted];
m55_157 -> m55_111  [color=red, key=2, style=dotted];
m55_161 -> m55_162  [color=red, key=0, style=solid];
m55_161 -> m55_80  [key=2, style=dotted];
m55_162 -> m55_163  [color=red, key=0, style=solid];
m55_162 -> m55_107  [color=red, key=2, style=dotted];
m55_160 -> m55_161  [color=red, key=0, style=solid];
m55_160 -> m55_162  [color=red, key=0, style=solid];
m55_163 -> m55_101  [color=blue, key=0, style=bold];
m55_97 -> m55_127  [color=red, key=0, style=solid];
m55_97 -> m55_129  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_127 -> m55_128  [color=red, key=0, style=solid];
m55_127 -> m55_129  [color=red, key=0, style=solid];
m55_129 -> m55_130  [key=0, style=solid];
m55_129 -> m55_131  [key=2, style=dotted];
m55_129 -> m55_132  [key=2, style=dotted];
m55_129 -> m55_91  [key=2, style=dotted];
m55_129 -> m55_133  [key=2, style=dotted];
m55_129 -> m55_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m55_129 -> m55_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m55_128 -> m55_130  [color=red, key=0, style=solid];
m55_130 -> m55_97  [color=blue, key=0, style=bold];
m55_119 -> m55_120  [key=0, style=solid];
m55_120 -> m55_121  [key=0, style=solid];
m55_120 -> m55_116  [key=2, style=dotted];
m55_121 -> m55_119  [color=blue, key=0, style=bold];
m55_116 -> m55_122  [color=green, key=0, style=solid];
m55_122 -> m55_123  [color=green, key=0, style=solid];
m55_122 -> m55_106  [color=green, key=2, style=dotted];
m55_123 -> m55_116  [color=blue, key=0, style=bold];
m55_79 -> m55_114  [key=0, style=solid];
m55_114 -> m55_115  [key=0, style=solid];
m55_114 -> m55_116  [key=2, style=dotted];
m55_115 -> m55_79  [color=blue, key=0, style=bold];
m55_83 -> m55_142  [color=red, key=0, style=solid];
m55_142 -> m55_143  [color=green, key=0, style=solid];
m55_142 -> m55_144  [color=darkseagreen4, key=1, label=name, style=dashed];
m55_143 -> m55_144  [color=green, key=0, style=solid];
m55_143 -> m55_146  [color=green, key=2, style=dotted];
m55_144 -> m55_145  [key=0, style=solid];
m55_144 -> m55_147  [key=2, style=dotted];
m55_145 -> m55_83  [color=blue, key=0, style=bold];
m55_182 -> m55_183  [key=0, style=solid];
m55_108 -> m55_109  [color=red, key=0, style=solid];
m55_109 -> m55_110  [color=red, key=0, style=solid];
m55_109 -> m55_88  [color=red, key=2, style=dotted];
m55_110 -> m55_108  [color=blue, key=0, style=bold];
m55_134 -> m55_135  [key=0, style=solid];
m55_138 -> m55_139  [key=0, style=solid];
m55_135 -> m55_136  [key=0, style=solid];
m55_135 -> m55_137  [key=2, style=dotted];
m55_136 -> m55_134  [color=blue, key=0, style=bold];
m55_139 -> m55_140  [key=0, style=solid];
m55_139 -> m55_141  [key=2, style=dotted];
m55_140 -> m55_138  [color=blue, key=0, style=bold];
m55_180 -> m55_181  [key=0, style=solid];
m55_180 -> m55_88  [key=2, style=dotted];
m55_180 -> m55_106  [key=2, style=dotted];
m55_183 -> m55_184  [key=0, style=solid];
m55_183 -> m55_185  [key=2, style=dotted];
m55_183 -> m55_79  [key=2, style=dotted];
m55_179 -> m55_180  [key=0, style=solid];
m55_181 -> m55_179  [color=blue, key=0, style=bold];
m55_184 -> m55_182  [color=blue, key=0, style=bold];
m55_178 -> m55_186  [key=0, style=solid];
m55_178 -> m55_188  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_178 -> m55_202  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_178 -> m55_203  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m55_186 -> m55_187  [key=0, style=solid];
m55_186 -> m55_188  [key=0, style=solid];
m55_188 -> m55_189  [key=0, style=solid];
m55_188 -> m55_201  [key=0, style=solid];
m55_188 -> m55_207  [key=2, style=dotted];
m55_202 -> m55_203  [key=0, style=solid];
m55_202 -> m55_204  [key=0, style=solid];
m55_202 -> m55_208  [key=2, style=dotted];
m55_203 -> m55_205  [key=0, style=solid];
m55_203 -> m55_209  [key=2, style=dotted];
m55_203 -> m55_178  [key=2, style=dotted];
m55_187 -> m55_205  [key=0, style=solid];
m55_189 -> m55_190  [key=0, style=solid];
m55_201 -> m55_202  [key=0, style=solid];
m55_190 -> m55_191  [key=0, style=solid];
m55_191 -> m55_192  [key=0, style=solid];
m55_192 -> m55_193  [key=0, style=solid];
m55_193 -> m55_194  [key=0, style=solid];
m55_194 -> m55_195  [key=0, style=solid];
m55_195 -> m55_196  [key=0, style=solid];
m55_196 -> m55_197  [key=0, style=solid];
m55_197 -> m55_198  [key=0, style=solid];
m55_198 -> m55_199  [key=0, style=solid];
m55_199 -> m55_200  [key=0, style=solid];
m55_200 -> m55_205  [key=0, style=solid];
m55_204 -> m55_205  [key=0, style=solid];
m55_206 -> m55_205  [key=0, style=solid];
m55_205 -> m55_178  [color=blue, key=0, style=bold];
m55_88 -> m55_117  [key=0, style=solid];
m55_117 -> m55_118  [key=0, style=solid];
m55_117 -> m55_116  [key=2, style=dotted];
m55_118 -> m55_88  [color=blue, key=0, style=bold];
m55_0 -> m55_23  [color=red, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_33  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_1  [color=red, key=0, style=solid];
m55_0 -> m55_6  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_10  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_11  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_12  [color=red, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_15  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_16  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_19  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_21  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_22  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_26  [color=red, key=1, label="Hangfire.Common.Job", style=dashed];
m55_0 -> m55_34  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_1 -> m55_2  [color=red, key=0, style=solid];
m55_1 -> m55_3  [color=red, key=0, style=solid];
m55_6 -> m55_7  [key=0, style=solid];
m55_6 -> m55_81  [key=2, style=dotted];
m55_6 -> m55_80  [key=2, style=dotted];
m55_10 -> m55_11  [key=0, style=solid];
m55_10 -> m55_19  [key=0, style=solid];
m55_11 -> m55_12  [color=red, key=0, style=solid];
m55_11 -> m55_83  [key=2, style=dotted];
m55_11 -> m55_13  [color=darkseagreen4, key=1, label=serviceName, style=dashed];
m55_11 -> m55_14  [color=green, key=1, label=serviceName, style=dashed];
m55_12 -> m55_13  [color=red, key=0, style=solid];
m55_12 -> m55_14  [color=green, key=0, style=solid];
m55_12 -> m55_84  [color=red, key=2, style=dotted];
m55_15 -> m55_16  [key=0, style=solid];
m55_15 -> m55_87  [key=2, style=dotted];
m55_15 -> m55_88  [key=2, style=dotted];
m55_15 -> m55_80  [key=2, style=dotted];
m55_16 -> m55_17  [key=0, style=solid];
m55_16 -> m55_81  [key=2, style=dotted];
m55_16 -> m55_87  [key=2, style=dotted];
m55_16 -> m55_88  [key=2, style=dotted];
m55_16 -> m55_89  [key=2, style=dotted];
m55_19 -> m55_20  [color=red, key=0, style=solid];
m55_19 -> m55_87  [key=2, style=dotted];
m55_19 -> m55_81  [key=2, style=dotted];
m55_19 -> m55_88  [key=2, style=dotted];
m55_19 -> m55_80  [key=2, style=dotted];
m55_21 -> m55_22  [key=0, style=solid];
m55_21 -> m55_81  [key=2, style=dotted];
m55_21 -> m55_80  [key=2, style=dotted];
m55_22 -> m55_23  [color=green, key=0, style=solid];
m55_22 -> m55_25  [color=red, key=0, style=solid];
m55_23 -> m55_24  [color=green, key=0, style=solid];
m55_23 -> m55_90  [color=green, key=2, style=dotted];
m55_23 -> m55_91  [color=green, key=2, style=dotted];
m55_23 -> m55_92  [color=green, key=2, style=dotted];
m55_23 -> m55_108  [color=green, key=1, label="lambda expression", style=dashed];
m55_26 -> m55_27  [color=red, key=0, style=solid];
m55_26 -> m55_95  [color=red, key=2, style=dotted];
m55_26 -> m55_31  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m55_26 -> m55_32  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m55_26 -> m55_59  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m55_33 -> m55_34  [color=green, key=0, style=solid];
m55_33 -> m55_55  [color=green, key=0, style=solid];
m55_34 -> m55_35  [key=0, style=solid];
m55_34 -> m55_39  [color=darkseagreen4, key=1, label=argument, style=dashed];
m55_34 -> m55_41  [color=darkseagreen4, key=1, label=argument, style=dashed];
m55_34 -> m55_47  [color=darkseagreen4, key=1, label=argument, style=dashed];
m55_2 -> m55_76  [color=red, key=0, style=solid];
m55_2 -> m55_77  [color=red, key=2, style=dotted];
m55_3 -> m55_4  [color=red, key=0, style=solid];
m55_3 -> m55_78  [color=red, key=2, style=dotted];
m55_3 -> m55_5  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_6  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_7  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_8  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_9  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_15  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_16  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_17  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_18  [color=green, key=1, label=builder, style=dashed];
m55_3 -> m55_19  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_20  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_21  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_24  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_25  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_63  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_64  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_67  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_68  [color=green, key=1, label=builder, style=dashed];
m55_3 -> m55_69  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_70  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_72  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_74  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_3 -> m55_75  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_4 -> m55_5  [key=0, style=solid];
m55_4 -> m55_79  [key=2, style=dotted];
m55_4 -> m55_80  [key=2, style=dotted];
m55_5 -> m55_6  [key=0, style=solid];
m55_5 -> m55_80  [key=2, style=dotted];
m55_7 -> m55_8  [color=red, key=0, style=solid];
m55_7 -> m55_80  [key=2, style=dotted];
m55_8 -> m55_9  [color=red, key=0, style=solid];
m55_8 -> m55_82  [color=red, key=2, style=dotted];
m55_9 -> m55_10  [key=0, style=solid];
m55_9 -> m55_82  [key=2, style=dotted];
m55_17 -> m55_18  [color=green, key=0, style=solid];
m55_17 -> m55_82  [key=2, style=dotted];
m55_18 -> m55_20  [color=green, key=0, style=solid];
m55_18 -> m55_81  [color=green, key=2, style=dotted];
m55_18 -> m55_80  [color=green, key=2, style=dotted];
m55_20 -> m55_21  [color=red, key=0, style=solid];
m55_20 -> m55_80  [color=red, key=2, style=dotted];
m55_24 -> m55_25  [color=red, key=0, style=solid];
m55_24 -> m55_93  [color=red, key=2, style=dotted];
m55_24 -> m55_94  [color=red, key=2, style=dotted];
m55_25 -> m55_26  [color=red, key=0, style=solid];
m55_25 -> m55_80  [color=red, key=2, style=dotted];
m55_63 -> m55_64  [key=0, style=solid];
m55_63 -> m55_82  [key=2, style=dotted];
m55_64 -> m55_65  [key=0, style=solid];
m55_64 -> m55_80  [key=2, style=dotted];
m55_67 -> m55_68  [color=green, key=0, style=solid];
m55_67 -> m55_80  [color=red, key=2, style=dotted];
m55_68 -> m55_69  [color=green, key=0, style=solid];
m55_68 -> m55_89  [color=green, key=2, style=dotted];
m55_69 -> m55_70  [color=red, key=0, style=solid];
m55_69 -> m55_80  [color=red, key=2, style=dotted];
m55_70 -> m55_71  [color=green, key=0, style=solid];
m55_70 -> m55_80  [color=red, key=2, style=dotted];
m55_72 -> m55_73  [color=red, key=0, style=solid];
m55_72 -> m55_80  [color=red, key=2, style=dotted];
m55_74 -> m55_75  [key=0, style=solid];
m55_74 -> m55_80  [key=2, style=dotted];
m55_75 -> m55_76  [key=0, style=solid];
m55_75 -> m55_77  [key=2, style=dotted];
m55_75 -> m55_107  [key=2, style=dotted];
m55_13 -> m55_14  [color=green, key=0, style=solid];
m55_13 -> m55_85  [color=red, key=2, style=dotted];
m55_13 -> m55_13  [color=darkseagreen4, key=1, label=serviceName, style=dashed];
m55_14 -> m55_15  [color=green, key=0, style=solid];
m55_14 -> m55_86  [color=green, key=2, style=dotted];
m55_14 -> m55_85  [color=green, key=2, style=dotted];
m55_14 -> m55_14  [color=green, key=1, label=serviceName, style=dashed];
m55_14 -> m55_16  [color=green, key=1, label=serviceName, style=dashed];
m55_14 -> m55_18  [color=green, key=1, label=serviceName, style=dashed];
m55_27 -> m55_28  [key=0, style=solid];
m55_27 -> m55_96  [key=2, style=dotted];
m55_27 -> m55_53  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m55_27 -> m55_55  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m55_27 -> m55_58  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m55_27 -> m55_61  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m55_27 -> m55_71  [color=green, key=1, label=renderedArguments, style=dashed];
m55_31 -> m55_32  [color=red, key=0, style=solid];
m55_31 -> m55_57  [color=red, key=0, style=solid];
m55_32 -> m55_33  [color=green, key=0, style=solid];
m55_32 -> m55_36  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m55_32 -> m55_39  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m55_32 -> m55_46  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m55_32 -> m55_52  [color=green, key=1, label=parameter, style=dashed];
m55_59 -> m55_60  [key=0, style=solid];
m55_59 -> m55_68  [color=green, key=1, label=parameter, style=dashed];
m55_28 -> m55_29  [key=0, style=solid];
m55_28 -> m55_54  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m55_28 -> m55_62  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m55_53 -> m55_54  [key=0, style=solid];
m55_53 -> m55_104  [key=2, style=dotted];
m55_55 -> m55_56  [color=red, key=0, style=solid];
m55_55 -> m55_81  [key=2, style=dotted];
m55_55 -> m55_104  [key=2, style=dotted];
m55_58 -> m55_59  [key=0, style=solid];
m55_58 -> m55_74  [key=0, style=solid];
m55_61 -> m55_62  [key=0, style=solid];
m55_61 -> m55_69  [color=darkseagreen4, key=1, label=renderedArgument, style=dashed];
m55_71 -> m55_72  [color=green, key=0, style=solid];
m55_71 -> m55_73  [color=green, key=0, style=solid];
m55_29 -> m55_30  [color=red, key=0, style=solid];
m55_29 -> m55_62  [color=darkseagreen4, key=1, label=splitStringMinLength, style=dashed];
m55_54 -> m55_56  [color=red, key=0, style=solid];
m55_54 -> m55_54  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m55_54 -> m55_62  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m55_62 -> m55_63  [key=0, style=solid];
m55_62 -> m55_66  [color=red, key=0, style=solid];
m55_30 -> m55_31  [color=red, key=0, style=solid];
m55_30 -> m55_32  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_30 -> m55_33  [color=green, key=1, label=i, style=dashed];
m55_30 -> m55_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_30 -> m55_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_56 -> m55_31  [color=red, key=0, style=solid];
m55_56 -> m55_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_57 -> m55_58  [key=0, style=solid];
m55_57 -> m55_59  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_57 -> m55_61  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_57 -> m55_66  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_57 -> m55_71  [color=green, key=1, label=i, style=dashed];
m55_57 -> m55_73  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_36 -> m55_37  [color=green, key=0, style=solid];
m55_36 -> m55_97  [key=2, style=dotted];
m55_36 -> m55_45  [color=darkseagreen4, key=1, label=enumerableArgument, style=dashed];
m55_36 -> m55_50  [color=green, key=1, label=enumerableArgument, style=dashed];
m55_39 -> m55_40  [key=0, style=solid];
m55_39 -> m55_43  [key=0, style=solid];
m55_39 -> m55_98  [key=2, style=dotted];
m55_46 -> m55_47  [key=0, style=solid];
m55_46 -> m55_99  [key=2, style=dotted];
m55_52 -> m55_53  [color=green, key=0, style=solid];
m55_52 -> m55_79  [color=green, key=2, style=dotted];
m55_52 -> m55_105  [color=green, key=2, style=dotted];
m55_52 -> m55_106  [color=green, key=2, style=dotted];
m55_52 -> m55_54  [color=green, key=1, label=renderedArgument, style=dashed];
m55_35 -> m55_36  [key=0, style=solid];
m55_41 -> m55_42  [key=0, style=solid];
m55_41 -> m55_43  [color=darkseagreen4, key=1, label=argumentValue, style=dashed];
m55_41 -> m55_47  [color=darkseagreen4, key=1, label=argumentValue, style=dashed];
m55_41 -> m55_49  [color=darkseagreen4, key=1, label=argumentValue, style=dashed];
m55_47 -> m55_53  [key=0, style=solid];
m55_47 -> m55_100  [key=2, style=dotted];
m55_47 -> m55_101  [key=2, style=dotted];
m55_47 -> m55_54  [color=darkseagreen4, key=1, label=renderedArgument, style=dashed];
m55_37 -> m55_38  [color=green, key=0, style=solid];
m55_45 -> m55_46  [key=0, style=solid];
m55_45 -> m55_48  [color=red, key=0, style=solid];
m55_50 -> m55_51  [color=green, key=0, style=solid];
m55_50 -> m55_99  [color=green, key=2, style=dotted];
m55_38 -> m55_39  [key=0, style=solid];
m55_40 -> m55_41  [key=0, style=solid];
m55_43 -> m55_44  [key=0, style=solid];
m55_43 -> m55_45  [key=0, style=solid];
m55_42 -> m55_43  [key=0, style=solid];
m55_42 -> m55_47  [color=darkseagreen4, key=1, label=isJson, style=dashed];
m55_42 -> m55_51  [color=green, key=1, label=isJson, style=dashed];
m55_49 -> m55_50  [color=green, key=0, style=solid];
m55_49 -> m55_52  [color=green, key=0, style=solid];
m55_49 -> m55_51  [color=green, key=1, label=item, style=dashed];
m55_51 -> m55_49  [color=green, key=0, style=solid];
m55_51 -> m55_100  [color=green, key=2, style=dotted];
m55_51 -> m55_103  [color=green, key=2, style=dotted];
m55_51 -> m55_101  [color=green, key=2, style=dotted];
m55_51 -> m55_104  [color=green, key=2, style=dotted];
m55_44 -> m55_53  [key=0, style=solid];
m55_44 -> m55_79  [key=2, style=dotted];
m55_44 -> m55_54  [color=darkseagreen4, key=1, label=renderedArgument, style=dashed];
m55_48 -> m55_49  [color=red, key=0, style=solid];
m55_48 -> m55_102  [color=red, key=2, style=dotted];
m55_48 -> m55_51  [color=green, key=1, label=renderedItems, style=dashed];
m55_48 -> m55_52  [color=green, key=1, label=renderedItems, style=dashed];
m55_66 -> m55_67  [color=red, key=0, style=solid];
m55_66 -> m55_68  [color=green, key=0, style=solid];
m55_73 -> m55_58  [key=0, style=solid];
m55_73 -> m55_73  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_60 -> m55_61  [key=0, style=solid];
m55_60 -> m55_68  [color=green, key=1, label=tooltipPosition, style=dashed];
m55_65 -> m55_68  [color=green, key=0, style=solid];
m55_76 -> m55_0  [color=blue, key=0, style=bold];
m55_81 -> m55_124  [color=green, key=0, style=solid];
m55_124 -> m55_125  [color=green, key=0, style=solid];
m55_124 -> m55_126  [color=green, key=2, style=dotted];
m55_125 -> m55_81  [color=blue, key=0, style=bold];
m55_212 -> m55_149  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m55_212 -> m55_150  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m55_212 -> m55_155  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m55_212 -> m55_157  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m55_212 -> m55_159  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m55_212 -> m55_160  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m55_213 -> m55_180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m56_0 -> m56_1  [color=red, key=0, style=solid];
m56_0 -> m56_3  [color=red, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m56_0 -> m56_5  [color=red, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m56_0 -> m56_2  [color=red, key=3, label="method methodReturn bool Authorize", style=bold];
m56_0 -> m56_4  [color=red, key=3, label="method methodReturn bool Authorize", style=bold];
m56_1 -> m56_2  [color=red, key=0, style=solid];
m56_1 -> m56_3  [color=red, key=0, style=solid];
m56_1 -> m56_9  [color=red, key=2, style=dotted];
m56_3 -> m56_4  [color=red, key=0, style=solid];
m56_3 -> m56_5  [color=red, key=0, style=solid];
m56_5 -> m56_6  [color=red, key=0, style=solid];
m56_5 -> m56_7  [color=red, key=0, style=solid];
m56_2 -> m56_8  [color=red, key=0, style=solid];
m56_4 -> m56_8  [color=red, key=0, style=solid];
m56_6 -> m56_8  [color=red, key=0, style=solid];
m56_7 -> m56_8  [color=red, key=0, style=solid];
m56_8 -> m56_0  [color=blue, key=0, style=bold];
m57_3 -> m57_4  [key=0, style=solid];
m57_5 -> m57_6  [color=green, key=0, style=solid];
m57_5 -> m57_7  [color=green, key=2, style=dotted];
m57_5 -> m57_8  [color=green, key=2, style=dotted];
m57_4 -> m57_5  [color=green, key=0, style=solid];
m57_6 -> m57_3  [color=blue, key=0, style=bold];
m57_0 -> m57_1  [key=0, style=solid];
m57_1 -> m57_2  [key=0, style=solid];
m57_2 -> m57_0  [color=blue, key=0, style=bold];
m57_9 -> m57_10  [key=0, style=solid];
m57_9 -> m57_11  [color=darkseagreen4, key=1, label="Hangfire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m57_10 -> m57_11  [key=0, style=solid];
m57_10 -> m57_13  [key=2, style=dotted];
m57_11 -> m57_12  [key=0, style=solid];
m57_11 -> m57_14  [key=2, style=dotted];
m57_12 -> m57_9  [color=blue, key=0, style=bold];
m57_15 -> m57_5  [color=green, key=1, label="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint", style=dashed];
m57_15 -> m57_1  [color=darkseagreen4, key=1, label="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint", style=dashed];
m57_15 -> m57_10  [color=darkseagreen4, key=1, label="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint", style=dashed];
m57_15 -> m57_11  [color=darkseagreen4, key=1, label="Hangfire.Common.ExpressionUtil.MemberExpressionFingerprint", style=dashed];
m58_53 -> m58_82  [key=0, style=solid];
m58_53 -> m58_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_82 -> m58_83  [key=0, style=solid];
m58_82 -> m58_69  [key=2, style=dotted];
m58_82 -> m58_84  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m58_83 -> m58_84  [key=0, style=solid];
m58_83 -> m58_74  [key=2, style=dotted];
m58_84 -> m58_85  [key=0, style=solid];
m58_84 -> m58_77  [key=2, style=dotted];
m58_84 -> m58_84  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
m58_85 -> m58_53  [color=blue, key=0, style=bold];
m58_7 -> m58_11  [key=0, style=solid];
m58_11 -> m58_12  [key=0, style=solid];
m58_11 -> m58_13  [key=2, style=dotted];
m58_12 -> m58_7  [color=blue, key=0, style=bold];
m58_31 -> m58_32  [key=0, style=solid];
m58_31 -> m58_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_31 -> m58_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_31 -> m58_38  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m58_31 -> m58_41  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m58_31 -> m58_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_31 -> m58_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_31 -> m58_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_31 -> m58_37  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m58_32 -> m58_33  [key=0, style=solid];
m58_32 -> m58_34  [key=0, style=solid];
m58_34 -> m58_35  [key=0, style=solid];
m58_34 -> m58_47  [key=2, style=dotted];
m58_34 -> m58_48  [key=2, style=dotted];
m58_34 -> m58_49  [key=2, style=dotted];
m58_35 -> m58_36  [key=0, style=solid];
m58_35 -> m58_47  [key=2, style=dotted];
m58_35 -> m58_50  [key=2, style=dotted];
m58_35 -> m58_38  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m58_35 -> m58_45  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m58_38 -> m58_39  [key=0, style=solid];
m58_38 -> m58_40  [key=0, style=solid];
m58_38 -> m58_51  [key=2, style=dotted];
m58_41 -> m58_42  [key=0, style=solid];
m58_41 -> m58_43  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m58_41 -> m58_44  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m58_42 -> m58_43  [key=0, style=solid];
m58_42 -> m58_52  [key=2, style=dotted];
m58_42 -> m58_45  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m58_44 -> m58_40  [key=0, style=solid];
m58_44 -> m58_53  [key=2, style=dotted];
m58_45 -> m58_46  [key=0, style=solid];
m58_45 -> m58_54  [key=2, style=dotted];
m58_33 -> m58_46  [key=0, style=solid];
m58_33 -> n21  [key=2, style=dotted];
m58_36 -> m58_37  [key=0, style=solid];
m58_36 -> m58_38  [key=0, style=solid];
m58_37 -> m58_46  [key=0, style=solid];
m58_39 -> m58_46  [key=0, style=solid];
m58_40 -> m58_41  [key=0, style=solid];
m58_40 -> m58_45  [key=0, style=solid];
m58_40 -> m58_42  [color=darkseagreen4, key=1, label=filter, style=dashed];
m58_43 -> m58_44  [key=0, style=solid];
m58_43 -> m58_40  [key=0, style=solid];
m58_46 -> m58_31  [color=blue, key=0, style=bold];
m58_14 -> m58_15  [key=0, style=solid];
m58_15 -> m58_14  [color=blue, key=0, style=bold];
m58_60 -> m58_61  [key=0, style=solid];
m58_60 -> m58_72  [key=2, style=dotted];
m58_60 -> m58_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m58_55 -> m58_56  [key=0, style=solid];
m58_55 -> m58_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_55 -> m58_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_55 -> m58_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_55 -> m58_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_55 -> m58_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_55 -> m58_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_55 -> m58_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_55 -> m58_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_55 -> m58_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_56 -> m58_57  [key=0, style=solid];
m58_56 -> m58_69  [key=2, style=dotted];
m58_56 -> m58_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m58_56 -> m58_60  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m58_56 -> m58_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m58_56 -> m58_63  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m58_56 -> m58_64  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m58_56 -> m58_66  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m58_56 -> m58_67  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m58_57 -> m58_58  [key=0, style=solid];
m58_57 -> m58_63  [key=0, style=solid];
m58_58 -> m58_59  [key=0, style=solid];
m58_58 -> m58_60  [key=0, style=solid];
m58_58 -> m58_70  [key=2, style=dotted];
m58_59 -> m58_60  [key=0, style=solid];
m58_59 -> m58_71  [key=2, style=dotted];
m58_62 -> m58_61  [key=0, style=solid];
m58_62 -> m58_73  [key=2, style=dotted];
m58_63 -> m58_64  [key=0, style=solid];
m58_63 -> m58_74  [key=2, style=dotted];
m58_64 -> m58_65  [key=0, style=solid];
m58_64 -> m58_75  [key=2, style=dotted];
m58_66 -> m58_65  [key=0, style=solid];
m58_66 -> m58_76  [key=2, style=dotted];
m58_67 -> m58_68  [key=0, style=solid];
m58_67 -> m58_77  [key=2, style=dotted];
m58_61 -> m58_62  [key=0, style=solid];
m58_61 -> m58_63  [key=0, style=solid];
m58_65 -> m58_66  [key=0, style=solid];
m58_65 -> m58_67  [key=0, style=solid];
m58_68 -> m58_55  [color=blue, key=0, style=bold];
m58_16 -> m58_17  [key=0, style=solid];
m58_16 -> m58_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>", style=dashed];
m58_16 -> m58_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>", style=dashed];
m58_16 -> m58_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>", style=dashed];
m58_16 -> m58_25  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m58_16 -> m58_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>", style=dashed];
m58_16 -> m58_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>", style=dashed];
m58_16 -> m58_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>", style=dashed];
m58_17 -> m58_18  [key=0, style=solid];
m58_17 -> m58_19  [key=0, style=solid];
m58_19 -> m58_20  [key=0, style=solid];
m58_19 -> m58_21  [key=0, style=solid];
m58_21 -> m58_22  [key=0, style=solid];
m58_21 -> m58_23  [key=0, style=solid];
m58_23 -> m58_24  [key=0, style=solid];
m58_23 -> m58_25  [key=0, style=solid];
m58_25 -> m58_26  [key=0, style=solid];
m58_26 -> m58_27  [key=0, style=solid];
m58_27 -> m58_28  [key=0, style=solid];
m58_28 -> m58_29  [key=0, style=solid];
m58_18 -> m58_29  [key=0, style=solid];
m58_18 -> n21  [key=2, style=dotted];
m58_20 -> m58_29  [key=0, style=solid];
m58_20 -> n21  [key=2, style=dotted];
m58_22 -> m58_29  [key=0, style=solid];
m58_22 -> n21  [key=2, style=dotted];
m58_24 -> m58_29  [key=0, style=solid];
m58_24 -> n21  [key=2, style=dotted];
m58_29 -> m58_16  [color=blue, key=0, style=bold];
m58_91 -> m58_92  [key=0, style=solid];
m58_91 -> m58_72  [key=2, style=dotted];
m58_91 -> m58_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m58_86 -> m58_87  [key=0, style=solid];
m58_86 -> m58_89  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m58_86 -> m58_90  [color=darkseagreen4, key=1, label=bool, style=dashed];
m58_86 -> m58_91  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m58_86 -> m58_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_86 -> m58_92  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m58_86 -> m58_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_86 -> m58_93  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m58_86 -> m58_95  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m58_86 -> m58_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_87 -> m58_88  [key=0, style=solid];
m58_87 -> m58_97  [key=2, style=dotted];
m58_87 -> m58_98  [key=2, style=dotted];
m58_87 -> m58_89  [color=darkseagreen4, key=1, label=properties, style=dashed];
m58_87 -> m58_92  [color=darkseagreen4, key=1, label=properties, style=dashed];
m58_87 -> m58_106  [color=darkseagreen4, key=1, label=properties, style=dashed];
m58_87 -> m58_93  [color=darkseagreen4, key=1, label=properties, style=dashed];
m58_87 -> m58_94  [color=darkseagreen4, key=1, label=properties, style=dashed];
m58_87 -> m58_95  [color=darkseagreen4, key=1, label=properties, style=dashed];
m58_87 -> m58_110  [color=darkseagreen4, key=1, label=properties, style=dashed];
m58_89 -> m58_90  [key=0, style=solid];
m58_89 -> m58_99  [key=2, style=dotted];
m58_90 -> m58_91  [key=0, style=solid];
m58_90 -> m58_93  [key=0, style=solid];
m58_92 -> m58_93  [key=0, style=solid];
m58_92 -> m58_72  [key=2, style=dotted];
m58_92 -> m58_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m58_93 -> m58_94  [key=0, style=solid];
m58_93 -> m58_99  [key=2, style=dotted];
m58_95 -> m58_96  [key=0, style=solid];
m58_95 -> m58_72  [key=2, style=dotted];
m58_95 -> m58_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m58_88 -> m58_89  [key=0, style=solid];
m58_88 -> m58_94  [color=darkseagreen4, key=1, label=now, style=dashed];
m58_94 -> m58_95  [key=0, style=solid];
m58_94 -> m58_100  [key=2, style=dotted];
m58_94 -> m58_99  [key=2, style=dotted];
m58_96 -> m58_86  [color=blue, key=0, style=bold];
m58_109 -> m58_110  [key=0, style=solid];
m58_79 -> m58_80  [key=0, style=solid];
m58_79 -> m58_47  [key=2, style=dotted];
m58_79 -> m58_81  [key=2, style=dotted];
m58_78 -> m58_79  [key=0, style=solid];
m58_80 -> m58_78  [color=blue, key=0, style=bold];
m58_102 -> m58_103  [key=0, style=solid];
m58_102 -> m58_47  [key=2, style=dotted];
m58_102 -> m58_104  [key=2, style=dotted];
m58_106 -> m58_107  [key=0, style=solid];
m58_106 -> m58_47  [key=2, style=dotted];
m58_106 -> m58_108  [key=2, style=dotted];
m58_110 -> m58_111  [key=0, style=solid];
m58_110 -> m58_47  [key=2, style=dotted];
m58_110 -> m58_112  [key=2, style=dotted];
m58_110 -> m58_113  [key=2, style=dotted];
m58_101 -> m58_102  [key=0, style=solid];
m58_105 -> m58_106  [key=0, style=solid];
m58_103 -> m58_101  [color=blue, key=0, style=bold];
m58_107 -> m58_105  [color=blue, key=0, style=bold];
m58_111 -> m58_109  [color=blue, key=0, style=bold];
m58_0 -> m58_1  [key=0, style=solid];
m58_1 -> m58_2  [key=0, style=solid];
m58_1 -> m58_6  [key=2, style=dotted];
m58_1 -> m58_7  [key=2, style=dotted];
m58_2 -> m58_3  [key=0, style=solid];
m58_2 -> m58_8  [key=2, style=dotted];
m58_2 -> m58_7  [key=2, style=dotted];
m58_3 -> m58_4  [key=0, style=solid];
m58_3 -> m58_9  [key=2, style=dotted];
m58_3 -> m58_7  [key=2, style=dotted];
m58_3 -> m58_98  [color=darkorchid, key=3, label="Field variable SqlConnection _connection", style=bold];
m58_4 -> m58_5  [key=0, style=solid];
m58_4 -> m58_10  [key=2, style=dotted];
m58_4 -> m58_7  [key=2, style=dotted];
m58_5 -> m58_0  [color=blue, key=0, style=bold];
m58_114 -> m58_25  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_26  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_27  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_28  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_34  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_35  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_40  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_42  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_44  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_45  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_56  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_58  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_59  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_61  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_63  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_65  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_82  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_114 -> m58_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m58_115 -> m58_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_116 -> m58_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_116 -> m58_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_116 -> m58_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_117 -> m58_102  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m58_118 -> m58_106  [color=darkseagreen4, key=1, label=properties, style=dashed];
m58_118 -> m58_110  [color=darkseagreen4, key=1, label=properties, style=dashed];
m61_0 -> m61_1  [color=red, key=0, style=solid];
m61_0 -> m61_2  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m61_0 -> m61_3  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m61_0 -> m61_4  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m61_0 -> m61_5  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m61_1 -> m61_2  [color=red, key=0, style=solid];
m61_1 -> m61_3  [color=red, key=0, style=solid];
m61_2 -> m61_6  [color=red, key=0, style=solid];
m61_2 -> n21  [color=red, key=2, style=dotted];
m61_2 -> m61_8  [color=red, key=2, style=dotted];
m61_3 -> m61_4  [color=red, key=0, style=solid];
m61_4 -> m61_5  [color=red, key=0, style=solid];
m61_4 -> m61_9  [color=red, key=2, style=dotted];
m61_5 -> m61_6  [color=red, key=0, style=solid];
m61_5 -> m61_10  [color=red, key=2, style=dotted];
m61_6 -> m61_0  [color=blue, key=0, style=bold];
m61_11 -> m61_3  [color=red, key=1, label="Hangfire.Dashboard.OwinDashboardContext", style=dashed];
m61_11 -> m61_4  [color=red, key=1, label="Hangfire.Dashboard.OwinDashboardContext", style=dashed];
m61_11 -> m61_5  [color=red, key=1, label="Hangfire.Dashboard.OwinDashboardContext", style=dashed];
m62_0 -> m62_1  [color=red, key=0, style=solid];
m62_0 -> m62_2  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m62_0 -> m62_3  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m62_1 -> m62_2  [color=red, key=0, style=solid];
m62_1 -> m62_3  [color=red, key=0, style=solid];
m62_2 -> m62_4  [color=red, key=0, style=solid];
m62_2 -> n21  [color=red, key=2, style=dotted];
m62_2 -> m62_6  [color=red, key=2, style=dotted];
m62_3 -> m62_4  [color=red, key=0, style=solid];
m62_3 -> m62_7  [color=red, key=2, style=dotted];
m62_4 -> m62_0  [color=blue, key=0, style=bold];
m62_8 -> m62_9  [key=0, style=solid];
m62_9 -> m62_8  [color=blue, key=0, style=bold];
m62_10 -> m62_11  [color=red, key=0, style=solid];
m62_10 -> m62_12  [color=red, key=1, label=string, style=dashed];
m62_11 -> m62_12  [color=red, key=0, style=solid];
m62_11 -> m62_14  [color=red, key=2, style=dotted];
m62_12 -> m62_13  [color=red, key=0, style=solid];
m62_12 -> m62_15  [color=red, key=2, style=dotted];
m62_12 -> m62_16  [color=red, key=2, style=dotted];
m62_13 -> m62_10  [color=blue, key=0, style=bold];
m62_17 -> m62_3  [color=red, key=1, label="Hangfire.Dashboard.OwinDashboardRequest", style=dashed];
m62_17 -> m62_11  [color=red, key=1, label="Hangfire.Dashboard.OwinDashboardRequest", style=dashed];
m63_8 -> m63_9  [color=red, key=0, style=solid];
m63_9 -> m63_10  [color=red, key=0, style=solid];
m63_10 -> m63_8  [color=blue, key=0, style=bold];
m63_11 -> m63_12  [color=red, key=0, style=solid];
m63_12 -> m63_13  [color=red, key=0, style=solid];
m63_12 -> m63_14  [color=red, key=2, style=dotted];
m63_13 -> m63_11  [color=blue, key=0, style=bold];
m63_0 -> m63_1  [color=red, key=0, style=solid];
m63_0 -> m63_2  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m63_0 -> m63_3  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m63_1 -> m63_2  [color=red, key=0, style=solid];
m63_1 -> m63_3  [color=red, key=0, style=solid];
m63_2 -> m63_4  [color=red, key=0, style=solid];
m63_2 -> n21  [color=red, key=2, style=dotted];
m63_2 -> m63_6  [color=red, key=2, style=dotted];
m63_3 -> m63_4  [color=red, key=0, style=solid];
m63_3 -> m63_7  [color=red, key=2, style=dotted];
m63_4 -> m63_0  [color=blue, key=0, style=bold];
m63_15 -> m63_3  [color=red, key=1, label="Hangfire.Dashboard.OwinDashboardResponse", style=dashed];
m63_15 -> m63_9  [color=red, key=1, label="Hangfire.Dashboard.OwinDashboardResponse", style=dashed];
m63_15 -> m63_12  [color=red, key=1, label="Hangfire.Dashboard.OwinDashboardResponse", style=dashed];
m64_0 -> m64_1  [key=0, style=solid];
m64_0 -> m64_2  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m64_0 -> m64_3  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m64_0 -> m64_4  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m64_0 -> m64_5  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m64_0 -> m64_6  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m64_0 -> m64_7  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m64_1 -> m64_2  [key=0, style=solid];
m64_1 -> m64_1  [color=darkorchid, key=3, label="Local variable object previousForm", style=bold];
m64_2 -> m64_3  [key=0, style=solid];
m64_2 -> m64_5  [key=0, style=solid];
m64_2 -> m64_9  [key=2, style=dotted];
m64_3 -> m64_4  [key=0, style=solid];
m64_4 -> m64_5  [key=0, style=solid];
m64_4 -> m64_10  [key=2, style=dotted];
m64_5 -> m64_6  [key=0, style=solid];
m64_5 -> m64_7  [key=0, style=solid];
m64_6 -> m64_7  [key=0, style=solid];
m64_6 -> m64_11  [key=2, style=dotted];
m64_7 -> m64_8  [key=0, style=solid];
m64_7 -> m64_12  [key=2, style=dotted];
m64_8 -> m64_0  [color=blue, key=0, style=bold];
m65_0 -> m65_1  [key=0, style=solid];
m65_1 -> m65_0  [color=blue, key=0, style=bold];
m66_4 -> m66_5  [key=0, style=solid];
m66_4 -> m66_7  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m66_4 -> m66_9  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m66_4 -> m66_11  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m66_4 -> m66_12  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m66_4 -> m66_13  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m66_5 -> m66_6  [key=0, style=solid];
m66_5 -> m66_7  [key=0, style=solid];
m66_7 -> m66_8  [key=0, style=solid];
m66_7 -> m66_9  [key=0, style=solid];
m66_9 -> m66_10  [key=0, style=solid];
m66_9 -> m66_11  [key=0, style=solid];
m66_11 -> m66_12  [key=0, style=solid];
m66_12 -> m66_13  [key=0, style=solid];
m66_13 -> m66_14  [key=0, style=solid];
m66_6 -> m66_14  [key=0, style=solid];
m66_6 -> n21  [key=2, style=dotted];
m66_8 -> m66_14  [key=0, style=solid];
m66_8 -> n21  [key=2, style=dotted];
m66_10 -> m66_14  [key=0, style=solid];
m66_10 -> n21  [key=2, style=dotted];
m66_14 -> m66_4  [color=blue, key=0, style=bold];
m66_32 -> m66_33  [key=0, style=solid];
m66_32 -> m66_35  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m66_32 -> m66_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m66_32 -> m66_39  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m66_33 -> m66_34  [key=0, style=solid];
m66_33 -> m66_35  [key=0, style=solid];
m66_35 -> m66_36  [key=0, style=solid];
m66_35 -> m66_37  [key=0, style=solid];
m66_38 -> m66_39  [key=0, style=solid];
m66_38 -> m66_41  [key=2, style=dotted];
m66_38 -> m66_42  [key=2, style=dotted];
m66_39 -> m66_40  [key=0, style=solid];
m66_39 -> m66_43  [key=2, style=dotted];
m66_34 -> m66_40  [key=0, style=solid];
m66_34 -> n21  [key=2, style=dotted];
m66_36 -> m66_40  [key=0, style=solid];
m66_36 -> n21  [key=2, style=dotted];
m66_37 -> m66_38  [key=0, style=solid];
m66_37 -> m66_28  [key=2, style=dotted];
m66_40 -> m66_32  [color=blue, key=0, style=bold];
m66_0 -> m66_1  [key=0, style=solid];
m66_1 -> m66_0  [color=blue, key=0, style=bold];
m66_16 -> m66_17  [key=0, style=solid];
m66_16 -> m66_19  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m66_16 -> m66_22  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m66_17 -> m66_18  [key=0, style=solid];
m66_17 -> m66_19  [key=0, style=solid];
m66_19 -> m66_20  [key=0, style=solid];
m66_19 -> m66_21  [key=0, style=solid];
m66_22 -> m66_23  [key=0, style=solid];
m66_22 -> m66_29  [key=2, style=dotted];
m66_18 -> m66_27  [key=0, style=solid];
m66_18 -> n21  [key=2, style=dotted];
m66_20 -> m66_27  [key=0, style=solid];
m66_20 -> n21  [key=2, style=dotted];
m66_21 -> m66_22  [key=0, style=solid];
m66_21 -> m66_28  [key=2, style=dotted];
m66_23 -> m66_24  [key=0, style=solid];
m66_23 -> m66_30  [key=2, style=dotted];
m66_24 -> m66_27  [key=0, style=solid];
m66_25 -> m66_26  [key=0, style=solid];
m66_26 -> m66_27  [key=0, style=solid];
m66_26 -> m66_31  [key=2, style=dotted];
m66_27 -> m66_16  [color=blue, key=0, style=bold];
m66_2 -> m66_3  [key=0, style=solid];
m66_3 -> m66_2  [color=blue, key=0, style=bold];
m66_44 -> m66_11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m66_44 -> m66_12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m66_44 -> m66_13  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m66_44 -> m66_21  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m66_44 -> m66_22  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m66_44 -> m66_23  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m66_44 -> m66_37  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m66_44 -> m66_38  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m68_20 -> m68_86  [key=2, style=dotted];
m68_20 -> m68_21  [key=0, style=solid];
m68_36 -> m68_91  [key=2, style=dotted];
m68_36 -> m68_37  [key=0, style=solid];
m68_10 -> m68_11  [color=green, key=0, style=solid];
m68_10 -> m68_14  [color=green, key=0, style=solid];
m68_11 -> m68_12  [color=green, key=0, style=solid];
m68_11 -> m68_11  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m68_11 -> m68_86  [color=green, key=2, style=dotted];
m68_12 -> m68_13  [color=green, key=0, style=solid];
m68_12 -> m68_12  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m68_12 -> m68_91  [color=green, key=2, style=dotted];
m68_13 -> m68_14  [color=red, key=0, style=solid];
m68_13 -> m68_18  [key=2, style=dotted];
m68_13 -> m68_86  [key=2, style=dotted];
m68_13 -> m68_84  [key=0, style=solid];
m68_14 -> m68_15  [color=green, key=0, style=solid];
m68_14 -> m68_19  [color=red, key=2, style=dotted];
m68_14 -> m68_16  [color=red, key=1, label=taskSource, style=dashed];
m68_14 -> m68_86  [color=green, key=2, style=dotted];
m68_15 -> m68_16  [color=green, key=0, style=solid];
m68_15 -> m68_20  [color=red, key=2, style=dotted];
m68_15 -> m68_91  [color=green, key=2, style=dotted];
m68_16 -> m68_17  [color=green, key=0, style=solid];
m68_16 -> m68_86  [color=green, key=2, style=dotted];
m68_17 -> m68_10  [color=blue, key=0, style=bold];
m68_17 -> m68_18  [color=green, key=0, style=solid];
m68_17 -> m68_91  [color=green, key=2, style=dotted];
m68_0 -> m68_1  [key=0, style=solid];
m68_0 -> m68_3  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m68_0 -> m68_5  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m68_0 -> m68_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m68_0 -> m68_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m68_8 -> m68_9  [color=green, key=0, style=solid];
m68_8 -> m68_91  [color=green, key=2, style=dotted];
m68_8 -> m68_0  [color=blue, key=0, style=bold];
m68_7 -> m68_8  [color=green, key=0, style=solid];
m68_7 -> m68_86  [key=2, style=dotted];
m68_9 -> m68_10  [color=green, key=0, style=solid];
m68_9 -> m68_86  [color=green, key=2, style=dotted];
m68_18 -> m68_86  [key=2, style=dotted];
m68_18 -> m68_19  [key=0, style=solid];
m68_22 -> m68_23  [color=green, key=0, style=solid];
m68_22 -> m68_86  [color=green, key=2, style=dotted];
m68_22 -> m68_24  [key=2, style=dotted];
m68_21 -> m68_22  [color=green, key=0, style=solid];
m68_21 -> m68_91  [key=2, style=dotted];
m68_23 -> m68_24  [color=green, key=0, style=solid];
m68_23 -> m68_25  [color=green, key=1, label=queue, style=dashed];
m68_23 -> m68_83  [key=0, style=solid];
m68_23 -> m68_27  [color=darkseagreen4, key=1, label=queue, style=dashed];
m68_23 -> m68_29  [color=darkseagreen4, key=1, label=queue, style=dashed];
m68_23 -> m68_31  [color=darkseagreen4, key=1, label=queue, style=dashed];
m68_23 -> m68_33  [color=darkseagreen4, key=1, label=queue, style=dashed];
m68_23 -> m68_39  [color=darkseagreen4, key=1, label=queue, style=dashed];
m68_23 -> m68_52  [color=darkseagreen4, key=1, label=queue, style=dashed];
m68_23 -> m68_21  [color=blue, key=0, style=bold];
m68_24 -> m68_25  [color=green, key=0, style=solid];
m68_24 -> m68_86  [color=green, key=2, style=dotted];
m68_24 -> m68_27  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m68_24 -> m68_31  [color=red, key=1, label=IOwinResponse, style=dashed];
m68_24 -> m68_21  [color=darkorchid, key=3, label="Parameter variable IOwinResponse response", style=bold];
m68_25 -> m68_26  [color=green, key=0, style=solid];
m68_25 -> m68_92  [color=green, key=2, style=dotted];
m68_25 -> m68_91  [color=green, key=2, style=dotted];
m68_25 -> m68_34  [key=2, style=dotted];
m68_25 -> m68_28  [color=red, key=1, label=inputStream, style=dashed];
m68_25 -> m68_29  [color=darkseagreen4, key=1, label=inputStream, style=dashed];
m68_25 -> m68_32  [color=darkseagreen4, key=1, label=inputStream, style=dashed];
m68_26 -> m68_27  [color=green, key=0, style=solid];
m68_26 -> m68_86  [color=green, key=2, style=dotted];
m68_26 -> m68_28  [color=red, key=0, style=solid];
m68_27 -> m68_91  [key=2, style=dotted];
m68_27 -> m68_28  [key=0, style=solid];
m68_27 -> m68_33  [key=0, style=solid];
m68_27 -> m68_35  [key=2, style=dotted];
m68_27 -> m68_36  [key=2, style=dotted];
m68_30 -> m68_31  [color=red, key=0, style=solid];
m68_30 -> m68_86  [color=green, key=2, style=dotted];
m68_30 -> m68_33  [color=red, key=0, style=solid];
m68_29 -> m68_30  [color=red, key=0, style=solid];
m68_29 -> m68_35  [key=0, style=solid];
m68_29 -> m68_38  [key=2, style=dotted];
m68_29 -> m68_31  [color=red, key=1, label=readLength, style=dashed];
m68_31 -> m68_91  [key=2, style=dotted];
m68_31 -> m68_32  [color=red, key=0, style=solid];
m68_31 -> m68_93  [key=2, style=dotted];
m68_31 -> m68_39  [color=red, key=2, style=dotted];
m68_34 -> m68_38  [color=green, key=0, style=solid];
m68_34 -> m68_86  [color=green, key=2, style=dotted];
m68_33 -> m68_34  [color=green, key=0, style=solid];
m68_33 -> m68_91  [key=2, style=dotted];
m68_33 -> m68_24  [color=blue, key=0, style=bold];
m68_38 -> m68_86  [key=2, style=dotted];
m68_38 -> m68_39  [key=0, style=solid];
m68_43 -> m68_44  [color=green, key=0, style=solid];
m68_43 -> m68_86  [color=green, key=2, style=dotted];
m68_39 -> m68_43  [color=green, key=0, style=solid];
m68_39 -> m68_40  [key=0, style=solid];
m68_44 -> m68_91  [key=2, style=dotted];
m68_44 -> m68_45  [key=0, style=solid];
m68_42 -> m68_82  [color=green, key=0, style=solid];
m68_42 -> m68_86  [color=green, key=2, style=dotted];
m68_41 -> m68_42  [color=green, key=0, style=solid];
m68_41 -> m68_91  [key=2, style=dotted];
m68_82 -> m68_86  [key=2, style=dotted];
m68_82 -> m68_23  [key=0, style=solid];
m68_48 -> m68_49  [color=green, key=0, style=solid];
m68_48 -> m68_91  [color=green, key=2, style=dotted];
m68_47 -> m68_48  [color=green, key=0, style=solid];
m68_47 -> m68_86  [key=2, style=dotted];
m68_49 -> m68_50  [color=green, key=0, style=solid];
m68_49 -> m68_86  [color=green, key=2, style=dotted];
m68_50 -> m68_51  [color=green, key=0, style=solid];
m68_50 -> m68_91  [key=2, style=dotted];
m68_51 -> m68_52  [color=green, key=0, style=solid];
m68_51 -> m68_86  [color=green, key=2, style=dotted];
m68_52 -> m68_53  [key=0, style=solid];
m68_52 -> m68_81  [key=0, style=solid];
m68_52 -> m68_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_1 -> m68_86  [key=2, style=dotted];
m68_1 -> m68_2  [key=0, style=solid];
m68_1 -> m68_3  [key=0, style=solid];
m68_2 -> m68_3  [key=0, style=solid];
m68_2 -> m68_87  [key=2, style=dotted];
m68_2 -> m68_8  [key=0, style=solid];
m68_2 -> n21  [key=2, style=dotted];
m68_3 -> m68_4  [key=0, style=solid];
m68_3 -> m68_88  [key=2, style=dotted];
m68_3 -> m68_5  [key=0, style=solid];
m68_5 -> m68_86  [key=2, style=dotted];
m68_5 -> m68_6  [key=0, style=solid];
m68_6 -> m68_7  [key=0, style=solid];
m68_6 -> m68_91  [key=2, style=dotted];
m68_6 -> m68_90  [key=2, style=dotted];
m68_19 -> m68_91  [key=2, style=dotted];
m68_19 -> m68_20  [key=0, style=solid];
m68_28 -> m68_86  [key=2, style=dotted];
m68_28 -> m68_29  [color=red, key=0, style=solid];
m68_28 -> m68_37  [color=red, key=2, style=dotted];
m68_28 -> m68_31  [color=red, key=1, label=buffer, style=dashed];
m68_28 -> m68_32  [color=red, key=1, label=buffer, style=dashed];
m68_32 -> m68_86  [key=2, style=dotted];
m68_32 -> m68_33  [key=0, style=solid];
m68_32 -> m68_30  [color=red, key=0, style=solid];
m68_32 -> m68_38  [key=2, style=dotted];
m68_35 -> m68_86  [key=2, style=dotted];
m68_35 -> m68_36  [key=0, style=solid];
m68_37 -> m68_86  [key=2, style=dotted];
m68_37 -> m68_38  [key=0, style=solid];
m68_40 -> m68_86  [key=2, style=dotted];
m68_40 -> m68_41  [key=0, style=solid];
m68_40 -> m68_5  [color=darkseagreen4, key=1, label="HangFire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m68_40 -> m68_6  [color=darkseagreen4, key=1, label="HangFire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m68_40 -> m68_7  [color=darkseagreen4, key=1, label="HangFire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m68_40 -> m68_11  [color=darkseagreen4, key=1, label="HangFire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m68_40 -> m68_13  [color=darkseagreen4, key=1, label="HangFire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m68_40 -> m68_22  [color=darkseagreen4, key=1, label="HangFire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m68_45 -> m68_86  [key=2, style=dotted];
m68_45 -> m68_46  [key=0, style=solid];
m68_46 -> m68_91  [key=2, style=dotted];
m68_46 -> m68_47  [key=0, style=solid];
m68_53 -> m68_86  [key=2, style=dotted];
m68_53 -> m68_54  [key=0, style=solid];
m68_54 -> m68_91  [key=2, style=dotted];
m68_54 -> m68_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_54 -> m68_55  [key=0, style=solid];
m68_54 -> m68_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_55 -> m68_86  [key=2, style=dotted];
m68_55 -> m68_56  [key=0, style=solid];
m68_56 -> m68_91  [key=2, style=dotted];
m68_56 -> m68_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_56 -> m68_57  [key=0, style=solid];
m68_56 -> m68_94  [key=2, style=dotted];
m68_56 -> m68_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_57 -> m68_86  [key=2, style=dotted];
m68_57 -> m68_58  [key=0, style=solid];
m68_59 -> m68_86  [key=2, style=dotted];
m68_59 -> m68_60  [key=0, style=solid];
m68_60 -> m68_91  [key=2, style=dotted];
m68_60 -> m68_61  [key=0, style=solid];
m68_61 -> m68_86  [key=2, style=dotted];
m68_61 -> m68_62  [key=0, style=solid];
m68_62 -> m68_86  [key=2, style=dotted];
m68_62 -> m68_63  [key=0, style=solid];
m68_64 -> m68_86  [key=2, style=dotted];
m68_64 -> m68_65  [key=0, style=solid];
m68_65 -> m68_91  [key=2, style=dotted];
m68_65 -> m68_66  [key=0, style=solid];
m68_66 -> m68_86  [key=2, style=dotted];
m68_66 -> m68_80  [key=0, style=solid];
m68_67 -> m68_86  [key=2, style=dotted];
m68_67 -> m68_68  [key=0, style=solid];
m68_68 -> m68_91  [key=2, style=dotted];
m68_68 -> m68_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_68 -> m68_69  [key=0, style=solid];
m68_68 -> m68_95  [key=2, style=dotted];
m68_68 -> m68_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_69 -> m68_86  [key=2, style=dotted];
m68_69 -> m68_70  [key=0, style=solid];
m68_70 -> m68_86  [key=2, style=dotted];
m68_70 -> m68_71  [key=0, style=solid];
m68_71 -> m68_91  [key=2, style=dotted];
m68_71 -> m68_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_71 -> m68_72  [key=0, style=solid];
m68_71 -> m68_96  [key=2, style=dotted];
m68_71 -> m68_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_72 -> m68_86  [key=2, style=dotted];
m68_72 -> m68_73  [key=0, style=solid];
m68_73 -> m68_86  [key=2, style=dotted];
m68_73 -> m68_74  [key=0, style=solid];
m68_75 -> m68_91  [key=2, style=dotted];
m68_75 -> m68_75  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_75 -> m68_79  [key=0, style=solid];
m68_75 -> m68_97  [key=2, style=dotted];
m68_76 -> m68_86  [key=2, style=dotted];
m68_76 -> m68_77  [key=0, style=solid];
m68_77 -> m68_91  [key=2, style=dotted];
m68_77 -> m68_78  [key=0, style=solid];
m68_78 -> m68_86  [key=2, style=dotted];
m68_78 -> m68_79  [key=0, style=solid];
m68_79 -> m68_86  [key=2, style=dotted];
m68_79 -> m68_80  [key=0, style=solid];
m68_80 -> m68_86  [key=2, style=dotted];
m68_80 -> m68_52  [key=0, style=solid];
m68_81 -> m68_86  [key=2, style=dotted];
m68_81 -> m68_82  [key=0, style=solid];
m68_83 -> m68_86  [key=2, style=dotted];
m68_83 -> m68_84  [key=0, style=solid];
m68_84 -> m68_86  [key=2, style=dotted];
m68_84 -> m68_85  [key=0, style=solid];
m68_4 -> m68_10  [color=darkseagreen4, key=1, label=queues, style=dashed];
m68_4 -> m68_23  [color=darkseagreen4, key=1, label=queues, style=dashed];
m68_4 -> m68_5  [key=0, style=solid];
m68_4 -> m68_89  [key=2, style=dotted];
m68_4 -> m68_8  [key=0, style=solid];
m68_4 -> n21  [key=2, style=dotted];
m68_58 -> m68_59  [key=0, style=solid];
m68_58 -> m68_62  [key=0, style=solid];
m68_58 -> m68_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_58 -> m68_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_63 -> m68_64  [key=0, style=solid];
m68_63 -> m68_67  [key=0, style=solid];
m68_63 -> m68_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_63 -> m68_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_74 -> m68_75  [key=0, style=solid];
m68_74 -> m68_76  [key=0, style=solid];
m68_74 -> m68_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_85 -> m68_0  [color=blue, key=0, style=bold];
m68_98 -> m68_8  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_9  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_11  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_14  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_12  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_15  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_16  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_17  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_22  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_24  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_25  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_26  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_30  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_34  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_43  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_42  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_48  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_49  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_51  [color=green, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_13  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_36  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_41  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_45  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_46  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_53  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_56  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_59  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_61  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_67  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_72  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_75  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_76  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_77  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_78  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_79  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_81  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_82  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_83  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m68_98 -> m68_84  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.QueuesPage", style=dashed];
m71_0 -> m71_1  [key=0, style=solid];
m71_1 -> m71_2  [key=0, style=solid];
m71_1 -> m71_3  [color=darkseagreen4, key=1, label=defaultProvider, style=dashed];
m71_1 -> m71_5  [key=2, style=dotted];
m71_2 -> m71_3  [key=0, style=solid];
m71_2 -> m71_6  [key=2, style=dotted];
m71_2 -> m71_8  [key=2, style=dotted];
m71_2 -> m71_7  [key=2, style=dotted];
m71_2 -> m71_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_3 -> m71_0  [color=blue, key=0, style=bold];
m71_3 -> m71_4  [key=0, style=solid];
m71_3 -> m71_9  [key=2, style=dotted];
m71_153 -> m71_154  [key=0, style=solid];
m71_154 -> m71_36  [key=2, style=dotted];
m71_154 -> m71_155  [key=0, style=solid];
m71_154 -> m71_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_155 -> m71_153  [color=blue, key=0, style=bold];
m71_627 -> m71_628  [key=0, style=solid];
m71_629 -> m71_36  [key=2, style=dotted];
m71_629 -> m71_630  [key=0, style=solid];
m71_629 -> m71_631  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_628 -> m71_629  [key=0, style=solid];
m71_628 -> m71_632  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_630 -> m71_627  [color=blue, key=0, style=bold];
m71_119 -> m71_120  [key=0, style=solid];
m71_121 -> m71_122  [color=green, key=0, style=solid];
m71_121 -> m71_36  [color=green, key=2, style=dotted];
m71_121 -> m71_123  [color=green, key=1, label="lambda expression", style=dashed];
m71_120 -> m71_121  [color=green, key=0, style=solid];
m71_120 -> m71_124  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_122 -> m71_119  [color=blue, key=0, style=bold];
m71_393 -> m71_394  [key=0, style=solid];
m71_394 -> m71_36  [key=2, style=dotted];
m71_394 -> m71_395  [key=0, style=solid];
m71_394 -> m71_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_395 -> m71_393  [color=blue, key=0, style=bold];
m71_614 -> m71_615  [key=0, style=solid];
m71_615 -> m71_36  [key=2, style=dotted];
m71_615 -> m71_616  [key=0, style=solid];
m71_615 -> m71_617  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_616 -> m71_614  [color=blue, key=0, style=bold];
m71_419 -> m71_420  [key=0, style=solid];
m71_420 -> m71_36  [key=2, style=dotted];
m71_420 -> m71_421  [key=0, style=solid];
m71_420 -> m71_422  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_421 -> m71_419  [color=blue, key=0, style=bold];
m71_476 -> m71_477  [key=0, style=solid];
m71_477 -> m71_36  [key=2, style=dotted];
m71_477 -> m71_478  [key=0, style=solid];
m71_477 -> m71_479  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_478 -> m71_476  [color=blue, key=0, style=bold];
m71_782 -> m71_783  [key=0, style=solid];
m71_783 -> m71_36  [key=2, style=dotted];
m71_783 -> m71_784  [key=0, style=solid];
m71_783 -> m71_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_784 -> m71_782  [color=blue, key=0, style=bold];
m71_319 -> m71_320  [key=0, style=solid];
m71_320 -> m71_36  [key=2, style=dotted];
m71_320 -> m71_321  [key=0, style=solid];
m71_320 -> m71_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_321 -> m71_319  [color=blue, key=0, style=bold];
m71_559 -> m71_560  [key=0, style=solid];
m71_560 -> m71_36  [key=2, style=dotted];
m71_560 -> m71_561  [key=0, style=solid];
m71_560 -> m71_562  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_561 -> m71_559  [color=blue, key=0, style=bold];
m71_589 -> m71_590  [key=0, style=solid];
m71_590 -> m71_36  [key=2, style=dotted];
m71_590 -> m71_591  [key=0, style=solid];
m71_590 -> m71_592  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_591 -> m71_589  [color=blue, key=0, style=bold];
m71_407 -> m71_408  [key=0, style=solid];
m71_408 -> m71_36  [key=2, style=dotted];
m71_408 -> m71_409  [key=0, style=solid];
m71_408 -> m71_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_409 -> m71_407  [color=blue, key=0, style=bold];
m71_177 -> m71_178  [key=0, style=solid];
m71_178 -> m71_46  [key=2, style=dotted];
m71_178 -> m71_47  [key=2, style=dotted];
m71_178 -> m71_179  [key=0, style=solid];
m71_179 -> m71_177  [color=blue, key=0, style=bold];
m71_816 -> m71_817  [key=0, style=solid];
m71_817 -> m71_36  [key=2, style=dotted];
m71_817 -> m71_818  [key=0, style=solid];
m71_817 -> m71_819  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_818 -> m71_816  [color=blue, key=0, style=bold];
m71_267 -> m71_268  [key=0, style=solid];
m71_268 -> m71_36  [key=2, style=dotted];
m71_268 -> m71_269  [key=0, style=solid];
m71_268 -> m71_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_269 -> m71_267  [color=blue, key=0, style=bold];
m71_514 -> m71_515  [key=0, style=solid];
m71_515 -> m71_36  [key=2, style=dotted];
m71_515 -> m71_516  [key=0, style=solid];
m71_515 -> m71_517  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_516 -> m71_514  [color=blue, key=0, style=bold];
m71_194 -> m71_195  [key=0, style=solid];
m71_195 -> m71_36  [key=2, style=dotted];
m71_195 -> m71_196  [key=0, style=solid];
m71_195 -> m71_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_196 -> m71_194  [color=blue, key=0, style=bold];
m71_293 -> m71_294  [key=0, style=solid];
m71_294 -> m71_36  [key=2, style=dotted];
m71_294 -> m71_295  [key=0, style=solid];
m71_294 -> m71_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_295 -> m71_293  [color=blue, key=0, style=bold];
m71_4 -> m71_0  [color=blue, key=0, style=bold];
m71_4 -> m71_1  [color=darkseagreen4, key=1, label="HangFire.Web.StyleSheetHandler", style=dashed];
m71_4 -> m71_2  [color=darkseagreen4, key=1, label="HangFire.Web.StyleSheetHandler", style=dashed];
m71_830 -> m71_831  [key=0, style=solid];
m71_832 -> m71_36  [key=2, style=dotted];
m71_832 -> m71_833  [key=0, style=solid];
m71_832 -> m71_834  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_831 -> m71_832  [key=0, style=solid];
m71_831 -> m71_835  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_833 -> m71_830  [color=blue, key=0, style=bold];
m71_692 -> m71_693  [key=0, style=solid];
m71_694 -> m71_36  [key=2, style=dotted];
m71_694 -> m71_695  [key=0, style=solid];
m71_694 -> m71_696  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_693 -> m71_694  [key=0, style=solid];
m71_693 -> m71_697  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_695 -> m71_692  [color=blue, key=0, style=bold];
m71_173 -> m71_174  [key=0, style=solid];
m71_20 -> m71_21  [color=green, key=0, style=solid];
m71_21 -> m71_22  [color=green, key=0, style=solid];
m71_21 -> m71_23  [color=green, key=2, style=dotted];
m71_22 -> m71_20  [color=blue, key=0, style=bold];
m71_38 -> m71_39  [color=green, key=0, style=solid];
m71_38 -> m71_40  [color=green, key=1, label=jobId, style=dashed];
m71_38 -> m71_41  [color=green, key=1, label=jobId, style=dashed];
m71_38 -> m71_56  [color=green, key=1, label=jobId, style=dashed];
m71_38 -> m71_46  [key=2, style=dotted];
m71_38 -> m71_47  [key=2, style=dotted];
m71_38 -> m71_48  [key=2, style=dotted];
m71_39 -> m71_40  [color=green, key=0, style=solid];
m71_39 -> m71_46  [color=green, key=2, style=dotted];
m71_39 -> m71_47  [color=green, key=2, style=dotted];
m71_39 -> m71_48  [color=green, key=2, style=dotted];
m71_39 -> m71_43  [color=green, key=1, label=anotherJobId, style=dashed];
m71_37 -> m71_39  [color=green, key=1, label=SqlConnection, style=dashed];
m71_37 -> m71_40  [color=green, key=1, label=SqlConnection, style=dashed];
m71_37 -> m71_41  [color=green, key=1, label=SqlConnection, style=dashed];
m71_37 -> m71_43  [color=green, key=1, label=SqlConnection, style=dashed];
m71_37 -> m71_38  [key=0, style=solid];
m71_40 -> m71_41  [color=green, key=0, style=solid];
m71_40 -> m71_49  [color=green, key=2, style=dotted];
m71_40 -> m71_55  [color=green, key=1, label="lambda expression", style=dashed];
m71_43 -> m71_44  [color=green, key=0, style=solid];
m71_43 -> m71_50  [color=green, key=2, style=dotted];
m71_41 -> m71_42  [color=green, key=0, style=solid];
m71_41 -> m71_50  [color=green, key=2, style=dotted];
m71_55 -> m71_56  [color=green, key=0, style=solid];
m71_42 -> m71_43  [color=green, key=0, style=solid];
m71_42 -> m71_51  [color=green, key=2, style=dotted];
m71_42 -> m71_52  [color=green, key=2, style=dotted];
m71_42 -> m71_53  [color=green, key=2, style=dotted];
m71_44 -> m71_45  [color=green, key=0, style=solid];
m71_44 -> m71_54  [color=green, key=2, style=dotted];
m71_56 -> m71_57  [color=green, key=0, style=solid];
m71_56 -> m71_58  [color=green, key=2, style=dotted];
m71_56 -> m71_59  [color=green, key=2, style=dotted];
m71_57 -> m71_55  [color=blue, key=0, style=bold];
m71_45 -> m71_37  [color=blue, key=0, style=bold];
m71_65 -> m71_66  [color=green, key=0, style=solid];
m71_65 -> m71_46  [color=green, key=2, style=dotted];
m71_65 -> m71_47  [color=green, key=2, style=dotted];
m71_65 -> m71_48  [color=green, key=2, style=dotted];
m71_65 -> m71_67  [color=green, key=1, label=jobId, style=dashed];
m71_65 -> m71_75  [color=green, key=1, label=jobId, style=dashed];
m71_65 -> m71_68  [color=green, key=1, label=jobId, style=dashed];
m71_66 -> m71_67  [color=green, key=0, style=solid];
m71_66 -> m71_46  [color=green, key=2, style=dotted];
m71_66 -> m71_47  [color=green, key=2, style=dotted];
m71_66 -> m71_48  [color=green, key=2, style=dotted];
m71_66 -> m71_70  [color=green, key=1, label=anotherJobId, style=dashed];
m71_64 -> m71_65  [color=green, key=0, style=solid];
m71_64 -> m71_66  [color=green, key=1, label=SqlConnection, style=dashed];
m71_64 -> m71_67  [color=green, key=1, label=SqlConnection, style=dashed];
m71_64 -> m71_68  [color=green, key=1, label=SqlConnection, style=dashed];
m71_64 -> m71_70  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_67 -> m71_68  [color=green, key=0, style=solid];
m71_67 -> m71_49  [color=green, key=2, style=dotted];
m71_67 -> m71_74  [color=green, key=1, label="lambda expression", style=dashed];
m71_75 -> m71_76  [color=green, key=0, style=solid];
m71_75 -> m71_77  [color=green, key=2, style=dotted];
m71_68 -> m71_69  [color=green, key=0, style=solid];
m71_68 -> m71_50  [color=green, key=2, style=dotted];
m71_70 -> m71_50  [key=2, style=dotted];
m71_70 -> m71_71  [key=0, style=solid];
m71_74 -> m71_75  [color=green, key=0, style=solid];
m71_69 -> m71_70  [color=green, key=0, style=solid];
m71_69 -> m71_54  [color=green, key=2, style=dotted];
m71_76 -> m71_74  [color=blue, key=0, style=bold];
m71_83 -> m71_46  [key=2, style=dotted];
m71_83 -> m71_47  [key=2, style=dotted];
m71_83 -> m71_48  [key=2, style=dotted];
m71_83 -> m71_84  [key=0, style=solid];
m71_83 -> m71_89  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_83 -> m71_116  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_83 -> m71_90  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_83 -> m71_97  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_84 -> m71_46  [key=2, style=dotted];
m71_84 -> m71_47  [key=2, style=dotted];
m71_84 -> m71_48  [key=2, style=dotted];
m71_84 -> m71_85  [key=0, style=solid];
m71_84 -> m71_93  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m71_82 -> m71_83  [key=0, style=solid];
m71_82 -> m71_84  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_82 -> m71_89  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_82 -> m71_90  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_82 -> m71_93  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_82 -> m71_96  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_88 -> m71_89  [color=green, key=0, style=solid];
m71_88 -> m71_6  [color=green, key=2, style=dotted];
m71_88 -> m71_104  [color=green, key=2, style=dotted];
m71_88 -> m71_8  [color=green, key=2, style=dotted];
m71_88 -> m71_111  [color=green, key=1, label="lambda expression", style=dashed];
m71_85 -> m71_88  [color=green, key=1, label=state, style=dashed];
m71_85 -> m71_86  [key=0, style=solid];
m71_85 -> m71_103  [key=2, style=dotted];
m71_85 -> m71_87  [color=darkseagreen4, key=1, label=state, style=dashed];
m71_85 -> m71_89  [color=darkseagreen4, key=1, label=state, style=dashed];
m71_85 -> m71_116  [color=darkseagreen4, key=1, label=state, style=dashed];
m71_87 -> m71_88  [color=green, key=0, style=solid];
m71_87 -> m71_6  [key=2, style=dotted];
m71_87 -> m71_8  [key=2, style=dotted];
m71_87 -> m71_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_89 -> m71_49  [key=2, style=dotted];
m71_89 -> m71_90  [key=0, style=solid];
m71_89 -> m71_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_111 -> m71_112  [color=green, key=0, style=solid];
m71_94 -> m71_95  [color=green, key=0, style=solid];
m71_94 -> m71_54  [color=green, key=2, style=dotted];
m71_93 -> m71_94  [color=green, key=0, style=solid];
m71_93 -> m71_50  [key=2, style=dotted];
m71_93 -> m71_95  [color=darkseagreen4, key=1, label=anotherJob, style=dashed];
m71_95 -> m71_54  [key=2, style=dotted];
m71_95 -> m71_96  [key=0, style=solid];
m71_99 -> m71_100  [color=green, key=0, style=solid];
m71_99 -> d6  [color=green, key=2, style=dotted];
m71_96 -> m71_99  [color=green, key=1, label=jobState, style=dashed];
m71_96 -> m71_46  [key=2, style=dotted];
m71_96 -> m71_47  [key=2, style=dotted];
m71_96 -> m71_97  [key=0, style=solid];
m71_96 -> m71_98  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m71_96 -> m71_100  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m71_96 -> m71_101  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m71_98 -> m71_99  [color=green, key=0, style=solid];
m71_98 -> d6  [key=2, style=dotted];
m71_100 -> m71_101  [key=0, style=solid];
m71_100 -> m71_73  [key=2, style=dotted];
m71_112 -> m71_113  [color=green, key=0, style=solid];
m71_112 -> m71_114  [color=green, key=2, style=dotted];
m71_113 -> m71_111  [color=blue, key=0, style=bold];
m71_123 -> m71_124  [key=0, style=solid];
m71_123 -> m71_129  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_123 -> m71_130  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_123 -> m71_133  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_125 -> m71_126  [color=green, key=0, style=solid];
m71_125 -> m71_103  [color=green, key=2, style=dotted];
m71_125 -> m71_127  [color=green, key=1, label=state, style=dashed];
m71_125 -> m71_128  [color=green, key=1, label=state, style=dashed];
m71_125 -> m71_129  [color=green, key=1, label=state, style=dashed];
m71_125 -> m71_150  [color=green, key=1, label=state, style=dashed];
m71_124 -> m71_125  [color=green, key=0, style=solid];
m71_124 -> m71_46  [key=2, style=dotted];
m71_124 -> m71_47  [key=2, style=dotted];
m71_124 -> m71_48  [key=2, style=dotted];
m71_124 -> m71_129  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_124 -> m71_150  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_124 -> m71_130  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_124 -> m71_134  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_126 -> m71_127  [color=green, key=0, style=solid];
m71_126 -> m71_6  [key=2, style=dotted];
m71_126 -> m71_8  [key=2, style=dotted];
m71_126 -> m71_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_127 -> m71_128  [color=green, key=0, style=solid];
m71_127 -> m71_6  [color=green, key=2, style=dotted];
m71_127 -> m71_8  [color=green, key=2, style=dotted];
m71_127 -> m71_143  [color=green, key=1, label="lambda expression", style=dashed];
m71_128 -> m71_6  [key=2, style=dotted];
m71_128 -> m71_104  [key=2, style=dotted];
m71_128 -> m71_8  [key=2, style=dotted];
m71_128 -> m71_129  [key=0, style=solid];
m71_128 -> m71_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_129 -> m71_49  [key=2, style=dotted];
m71_129 -> m71_130  [key=0, style=solid];
m71_129 -> m71_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_150 -> m71_151  [key=0, style=solid];
m71_150 -> m71_152  [key=2, style=dotted];
m71_143 -> m71_144  [color=green, key=0, style=solid];
m71_144 -> m71_145  [color=green, key=0, style=solid];
m71_145 -> m71_143  [color=blue, key=0, style=bold];
m71_90 -> m71_50  [key=2, style=dotted];
m71_90 -> m71_91  [key=0, style=solid];
m71_90 -> m71_92  [color=darkseagreen4, key=1, label=job, style=dashed];
m71_130 -> m71_50  [key=2, style=dotted];
m71_130 -> m71_131  [key=0, style=solid];
m71_130 -> m71_132  [color=darkseagreen4, key=1, label=job, style=dashed];
m71_160 -> m71_161  [key=0, style=solid];
m71_160 -> m71_164  [key=2, style=dotted];
m71_161 -> m71_49  [key=2, style=dotted];
m71_161 -> m71_162  [key=0, style=solid];
m71_161 -> m71_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_184 -> m71_49  [key=2, style=dotted];
m71_184 -> m71_185  [key=0, style=solid];
m71_184 -> m71_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_198 -> m71_49  [key=2, style=dotted];
m71_198 -> m71_199  [key=0, style=solid];
m71_198 -> m71_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_216 -> m71_49  [key=2, style=dotted];
m71_216 -> m71_217  [key=0, style=solid];
m71_216 -> m71_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_228 -> m71_49  [key=2, style=dotted];
m71_228 -> m71_229  [key=0, style=solid];
m71_228 -> m71_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_242 -> m71_49  [key=2, style=dotted];
m71_242 -> m71_243  [key=0, style=solid];
m71_242 -> m71_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_259 -> m71_49  [key=2, style=dotted];
m71_259 -> m71_260  [key=0, style=solid];
m71_259 -> m71_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_271 -> m71_49  [key=2, style=dotted];
m71_271 -> m71_272  [key=0, style=solid];
m71_271 -> m71_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_285 -> m71_49  [key=2, style=dotted];
m71_285 -> m71_286  [key=0, style=solid];
m71_285 -> m71_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_297 -> m71_49  [key=2, style=dotted];
m71_297 -> m71_298  [key=0, style=solid];
m71_297 -> m71_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_309 -> m71_49  [key=2, style=dotted];
m71_309 -> m71_310  [key=0, style=solid];
m71_309 -> m71_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_323 -> m71_49  [key=2, style=dotted];
m71_323 -> m71_324  [key=0, style=solid];
m71_323 -> m71_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_335 -> m71_49  [key=2, style=dotted];
m71_335 -> m71_336  [key=0, style=solid];
m71_335 -> m71_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_348 -> m71_49  [key=2, style=dotted];
m71_348 -> m71_349  [key=0, style=solid];
m71_348 -> m71_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_360 -> m71_49  [key=2, style=dotted];
m71_360 -> m71_361  [key=0, style=solid];
m71_360 -> m71_364  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_372 -> m71_49  [key=2, style=dotted];
m71_372 -> m71_373  [key=0, style=solid];
m71_372 -> m71_377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_385 -> m71_49  [key=2, style=dotted];
m71_385 -> m71_386  [key=0, style=solid];
m71_385 -> m71_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_397 -> m71_49  [key=2, style=dotted];
m71_397 -> m71_398  [key=0, style=solid];
m71_397 -> m71_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_411 -> m71_49  [key=2, style=dotted];
m71_411 -> m71_412  [key=0, style=solid];
m71_411 -> m71_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_423 -> m71_49  [key=2, style=dotted];
m71_423 -> m71_424  [key=0, style=solid];
m71_423 -> m71_427  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_435 -> m71_49  [key=2, style=dotted];
m71_435 -> m71_436  [key=0, style=solid];
m71_435 -> m71_442  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_454 -> m71_49  [key=2, style=dotted];
m71_454 -> m71_455  [key=0, style=solid];
m71_454 -> m71_458  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_468 -> m71_49  [key=2, style=dotted];
m71_468 -> m71_469  [key=0, style=solid];
m71_468 -> m71_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_480 -> m71_49  [key=2, style=dotted];
m71_480 -> m71_481  [key=0, style=solid];
m71_480 -> m71_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_492 -> m71_49  [key=2, style=dotted];
m71_492 -> m71_493  [key=0, style=solid];
m71_492 -> m71_496  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_504 -> m71_13  [key=2, style=dotted];
m71_504 -> m71_505  [key=0, style=solid];
m71_504 -> m71_507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_508 -> m71_49  [key=2, style=dotted];
m71_508 -> m71_509  [key=0, style=solid];
m71_508 -> m71_510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_518 -> m71_13  [key=2, style=dotted];
m71_518 -> m71_519  [key=0, style=solid];
m71_518 -> m71_521  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_522 -> m71_49  [key=2, style=dotted];
m71_522 -> m71_523  [key=0, style=solid];
m71_522 -> m71_524  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_531 -> m71_49  [key=2, style=dotted];
m71_531 -> m71_532  [key=0, style=solid];
m71_531 -> m71_537  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_550 -> m71_13  [key=2, style=dotted];
m71_550 -> m71_551  [key=0, style=solid];
m71_550 -> m71_552  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_553 -> m71_49  [key=2, style=dotted];
m71_553 -> m71_554  [key=0, style=solid];
m71_553 -> m71_555  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_563 -> m71_49  [key=2, style=dotted];
m71_563 -> m71_564  [key=0, style=solid];
m71_563 -> m71_568  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_564 -> m71_49  [key=2, style=dotted];
m71_564 -> m71_565  [key=0, style=solid];
m71_564 -> m71_571  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_578 -> m71_13  [key=2, style=dotted];
m71_578 -> m71_579  [key=0, style=solid];
m71_578 -> m71_581  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_582 -> m71_49  [key=2, style=dotted];
m71_582 -> m71_583  [key=0, style=solid];
m71_582 -> m71_584  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_593 -> m71_13  [key=2, style=dotted];
m71_593 -> m71_594  [key=0, style=solid];
m71_593 -> m71_596  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_597 -> m71_49  [key=2, style=dotted];
m71_597 -> m71_598  [key=0, style=solid];
m71_597 -> m71_599  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_607 -> m71_49  [key=2, style=dotted];
m71_607 -> m71_608  [key=0, style=solid];
m71_607 -> m71_611  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_618 -> m71_13  [key=2, style=dotted];
m71_618 -> m71_619  [key=0, style=solid];
m71_618 -> m71_620  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_621 -> m71_49  [key=2, style=dotted];
m71_621 -> m71_622  [key=0, style=solid];
m71_621 -> m71_623  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_633 -> m71_49  [key=2, style=dotted];
m71_633 -> m71_634  [key=0, style=solid];
m71_633 -> m71_638  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_645 -> m71_13  [key=2, style=dotted];
m71_645 -> m71_646  [key=0, style=solid];
m71_645 -> m71_648  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_649 -> m71_49  [key=2, style=dotted];
m71_649 -> m71_650  [key=0, style=solid];
m71_649 -> m71_651  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_662 -> m71_49  [key=2, style=dotted];
m71_662 -> m71_663  [key=0, style=solid];
m71_662 -> m71_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_681 -> m71_13  [key=2, style=dotted];
m71_681 -> m71_682  [key=0, style=solid];
m71_681 -> m71_684  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_685 -> m71_49  [key=2, style=dotted];
m71_685 -> m71_686  [key=0, style=solid];
m71_685 -> m71_687  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_698 -> m71_49  [key=2, style=dotted];
m71_698 -> m71_699  [key=0, style=solid];
m71_698 -> m71_704  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_717 -> m71_13  [key=2, style=dotted];
m71_717 -> m71_718  [key=0, style=solid];
m71_717 -> m71_720  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_721 -> m71_49  [key=2, style=dotted];
m71_721 -> m71_722  [key=0, style=solid];
m71_721 -> m71_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_733 -> m71_49  [key=2, style=dotted];
m71_733 -> m71_734  [key=0, style=solid];
m71_733 -> m71_739  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_752 -> m71_13  [key=2, style=dotted];
m71_752 -> m71_753  [key=0, style=solid];
m71_752 -> m71_755  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_756 -> m71_49  [key=2, style=dotted];
m71_756 -> m71_757  [key=0, style=solid];
m71_756 -> m71_758  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_768 -> m71_49  [key=2, style=dotted];
m71_768 -> m71_769  [key=0, style=solid];
m71_768 -> m71_773  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_786 -> m71_13  [key=2, style=dotted];
m71_786 -> m71_787  [key=0, style=solid];
m71_786 -> m71_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_790 -> m71_49  [key=2, style=dotted];
m71_790 -> m71_791  [key=0, style=solid];
m71_790 -> m71_792  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_802 -> m71_49  [key=2, style=dotted];
m71_802 -> m71_803  [key=0, style=solid];
m71_802 -> m71_807  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_820 -> m71_13  [key=2, style=dotted];
m71_820 -> m71_821  [key=0, style=solid];
m71_820 -> m71_823  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_824 -> m71_49  [key=2, style=dotted];
m71_824 -> m71_825  [key=0, style=solid];
m71_824 -> m71_826  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_836 -> m71_49  [key=2, style=dotted];
m71_836 -> m71_837  [key=0, style=solid];
m71_836 -> m71_841  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_11 -> m71_13  [key=2, style=dotted];
m71_11 -> m71_12  [key=0, style=solid];
m71_11 -> m71_14  [key=2, style=dotted];
m71_167 -> m71_13  [key=2, style=dotted];
m71_167 -> m71_168  [key=0, style=solid];
m71_167 -> m71_14  [key=2, style=dotted];
m71_217 -> m71_13  [key=2, style=dotted];
m71_217 -> m71_47  [key=2, style=dotted];
m71_217 -> m71_218  [key=0, style=solid];
m71_260 -> m71_13  [key=2, style=dotted];
m71_260 -> m71_47  [key=2, style=dotted];
m71_260 -> m71_261  [key=0, style=solid];
m71_286 -> m71_13  [key=2, style=dotted];
m71_286 -> m71_47  [key=2, style=dotted];
m71_286 -> m71_287  [key=0, style=solid];
m71_298 -> m71_13  [key=2, style=dotted];
m71_298 -> m71_47  [key=2, style=dotted];
m71_298 -> m71_299  [key=0, style=solid];
m71_336 -> m71_13  [key=2, style=dotted];
m71_336 -> m71_47  [key=2, style=dotted];
m71_336 -> m71_337  [key=0, style=solid];
m71_349 -> m71_13  [key=2, style=dotted];
m71_349 -> m71_47  [key=2, style=dotted];
m71_349 -> m71_350  [key=0, style=solid];
m71_361 -> m71_13  [key=2, style=dotted];
m71_361 -> m71_47  [key=2, style=dotted];
m71_361 -> m71_362  [key=0, style=solid];
m71_386 -> m71_13  [key=2, style=dotted];
m71_386 -> m71_47  [key=2, style=dotted];
m71_386 -> m71_387  [key=0, style=solid];
m71_398 -> m71_13  [key=2, style=dotted];
m71_398 -> m71_47  [key=2, style=dotted];
m71_398 -> m71_399  [key=0, style=solid];
m71_412 -> m71_13  [key=2, style=dotted];
m71_412 -> m71_47  [key=2, style=dotted];
m71_412 -> m71_413  [key=0, style=solid];
m71_424 -> m71_13  [key=2, style=dotted];
m71_424 -> m71_47  [key=2, style=dotted];
m71_424 -> m71_425  [key=0, style=solid];
m71_455 -> m71_13  [key=2, style=dotted];
m71_455 -> m71_47  [key=2, style=dotted];
m71_455 -> m71_456  [key=0, style=solid];
m71_469 -> m71_13  [key=2, style=dotted];
m71_469 -> m71_47  [key=2, style=dotted];
m71_469 -> m71_470  [key=0, style=solid];
m71_481 -> m71_13  [key=2, style=dotted];
m71_481 -> m71_47  [key=2, style=dotted];
m71_481 -> m71_482  [key=0, style=solid];
m71_493 -> m71_13  [key=2, style=dotted];
m71_493 -> m71_47  [key=2, style=dotted];
m71_493 -> m71_494  [key=0, style=solid];
m71_565 -> m71_13  [key=2, style=dotted];
m71_565 -> m71_47  [key=2, style=dotted];
m71_565 -> m71_566  [key=0, style=solid];
m71_608 -> m71_13  [key=2, style=dotted];
m71_608 -> m71_609  [key=0, style=solid];
m71_29 -> m71_23  [key=2, style=dotted];
m71_29 -> m71_30  [key=0, style=solid];
m71_29 -> m71_31  [key=2, style=dotted];
m71_133 -> m71_46  [key=2, style=dotted];
m71_133 -> m71_47  [key=2, style=dotted];
m71_133 -> m71_134  [key=0, style=solid];
m71_133 -> m71_135  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m71_133 -> m71_136  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m71_133 -> m71_137  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m71_133 -> m71_138  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m71_185 -> m71_46  [key=2, style=dotted];
m71_185 -> m71_47  [key=2, style=dotted];
m71_185 -> m71_186  [key=0, style=solid];
m71_185 -> m71_187  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_185 -> m71_188  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_199 -> m71_46  [key=2, style=dotted];
m71_199 -> m71_47  [key=2, style=dotted];
m71_199 -> m71_200  [key=0, style=solid];
m71_199 -> m71_201  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_199 -> m71_202  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_199 -> m71_203  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_229 -> m71_46  [key=2, style=dotted];
m71_229 -> m71_47  [key=2, style=dotted];
m71_229 -> m71_230  [key=0, style=solid];
m71_229 -> m71_231  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_229 -> m71_232  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_243 -> m71_46  [key=2, style=dotted];
m71_243 -> m71_47  [key=2, style=dotted];
m71_243 -> m71_244  [key=0, style=solid];
m71_243 -> m71_245  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_243 -> m71_246  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_243 -> m71_247  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_272 -> m71_46  [key=2, style=dotted];
m71_272 -> m71_47  [key=2, style=dotted];
m71_272 -> m71_273  [key=0, style=solid];
m71_272 -> m71_274  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_272 -> m71_275  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_310 -> m71_46  [key=2, style=dotted];
m71_310 -> m71_47  [key=2, style=dotted];
m71_310 -> m71_311  [key=0, style=solid];
m71_310 -> m71_312  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_310 -> m71_313  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_324 -> m71_46  [key=2, style=dotted];
m71_324 -> m71_47  [key=2, style=dotted];
m71_324 -> m71_325  [key=0, style=solid];
m71_373 -> m71_46  [key=2, style=dotted];
m71_373 -> m71_47  [key=2, style=dotted];
m71_373 -> m71_374  [key=0, style=solid];
m71_373 -> m71_375  [color=darkseagreen4, key=1, label=record, style=dashed];
m71_436 -> m71_46  [key=2, style=dotted];
m71_436 -> m71_437  [key=0, style=solid];
m71_436 -> m71_441  [key=2, style=dotted];
m71_436 -> m71_438  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_436 -> m71_439  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_532 -> m71_46  [key=2, style=dotted];
m71_532 -> m71_533  [key=0, style=solid];
m71_532 -> m71_536  [key=2, style=dotted];
m71_532 -> m71_540  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_532 -> m71_543  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_532 -> m71_534  [color=darkseagreen4, key=1, label=result, style=dashed];
m71_634 -> m71_46  [key=2, style=dotted];
m71_634 -> m71_47  [key=2, style=dotted];
m71_634 -> m71_635  [key=0, style=solid];
m71_663 -> m71_46  [key=2, style=dotted];
m71_663 -> m71_664  [key=0, style=solid];
m71_663 -> m71_536  [key=2, style=dotted];
m71_663 -> m71_671  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_663 -> m71_674  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_663 -> m71_665  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_663 -> m71_666  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_699 -> m71_46  [key=2, style=dotted];
m71_699 -> m71_700  [key=0, style=solid];
m71_699 -> m71_536  [key=2, style=dotted];
m71_699 -> m71_707  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_699 -> m71_710  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_699 -> m71_701  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_699 -> m71_702  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_734 -> m71_46  [key=2, style=dotted];
m71_734 -> m71_735  [key=0, style=solid];
m71_734 -> m71_536  [key=2, style=dotted];
m71_734 -> m71_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_734 -> m71_745  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_734 -> m71_736  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_734 -> m71_737  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_769 -> m71_46  [key=2, style=dotted];
m71_769 -> m71_770  [key=0, style=solid];
m71_769 -> m71_536  [key=2, style=dotted];
m71_769 -> m71_776  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_769 -> m71_779  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_769 -> m71_771  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_803 -> m71_46  [key=2, style=dotted];
m71_803 -> m71_804  [key=0, style=solid];
m71_803 -> m71_536  [key=2, style=dotted];
m71_803 -> m71_810  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_803 -> m71_813  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_803 -> m71_805  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_837 -> m71_46  [key=2, style=dotted];
m71_837 -> m71_838  [key=0, style=solid];
m71_837 -> m71_536  [key=2, style=dotted];
m71_837 -> m71_844  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_837 -> m71_847  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_837 -> m71_839  [color=darkseagreen4, key=1, label=records, style=dashed];
m71_97 -> m71_48  [key=2, style=dotted];
m71_97 -> m71_98  [key=0, style=solid];
m71_97 -> d6  [key=2, style=dotted];
m71_134 -> m71_48  [key=2, style=dotted];
m71_134 -> d6  [key=2, style=dotted];
m71_134 -> m71_135  [key=0, style=solid];
m71_209 -> m71_58  [key=2, style=dotted];
m71_209 -> m71_210  [key=0, style=solid];
m71_209 -> m71_211  [key=2, style=dotted];
m71_252 -> m71_58  [key=2, style=dotted];
m71_252 -> m71_253  [key=0, style=solid];
m71_252 -> m71_254  [key=2, style=dotted];
m71_664 -> m71_51  [key=2, style=dotted];
m71_664 -> m71_53  [key=2, style=dotted];
m71_664 -> m71_665  [key=0, style=solid];
m71_665 -> m71_51  [key=2, style=dotted];
m71_665 -> m71_53  [key=2, style=dotted];
m71_665 -> m71_666  [key=0, style=solid];
m71_700 -> m71_51  [key=2, style=dotted];
m71_700 -> m71_53  [key=2, style=dotted];
m71_700 -> m71_701  [key=0, style=solid];
m71_701 -> m71_51  [key=2, style=dotted];
m71_701 -> m71_53  [key=2, style=dotted];
m71_701 -> m71_702  [key=0, style=solid];
m71_735 -> m71_51  [key=2, style=dotted];
m71_735 -> m71_53  [key=2, style=dotted];
m71_735 -> m71_736  [key=0, style=solid];
m71_736 -> m71_51  [key=2, style=dotted];
m71_736 -> m71_53  [key=2, style=dotted];
m71_736 -> m71_737  [key=0, style=solid];
m71_767 -> m71_52  [key=2, style=dotted];
m71_767 -> m71_768  [key=0, style=solid];
m71_767 -> m71_637  [key=2, style=dotted];
m71_801 -> m71_52  [key=2, style=dotted];
m71_801 -> m71_802  [key=0, style=solid];
m71_801 -> m71_637  [key=2, style=dotted];
m71_835 -> m71_52  [key=2, style=dotted];
m71_835 -> m71_836  [key=0, style=solid];
m71_835 -> m71_637  [key=2, style=dotted];
m71_204 -> m71_53  [key=2, style=dotted];
m71_204 -> m71_205  [key=0, style=solid];
m71_204 -> m71_207  [key=2, style=dotted];
m71_205 -> m71_53  [key=2, style=dotted];
m71_205 -> m71_206  [key=0, style=solid];
m71_205 -> m71_207  [key=2, style=dotted];
m71_248 -> m71_53  [key=2, style=dotted];
m71_248 -> m71_249  [key=0, style=solid];
m71_248 -> m71_207  [key=2, style=dotted];
m71_249 -> m71_53  [key=2, style=dotted];
m71_249 -> m71_250  [key=0, style=solid];
m71_249 -> m71_207  [key=2, style=dotted];
m71_131 -> m71_54  [key=2, style=dotted];
m71_131 -> m71_132  [key=0, style=solid];
m71_132 -> m71_54  [key=2, style=dotted];
m71_132 -> m71_133  [key=0, style=solid];
m71_666 -> m71_54  [key=2, style=dotted];
m71_666 -> m71_667  [key=0, style=solid];
m71_702 -> m71_54  [key=2, style=dotted];
m71_702 -> m71_703  [key=0, style=solid];
m71_737 -> m71_54  [key=2, style=dotted];
m71_737 -> m71_738  [key=0, style=solid];
m71_770 -> m71_54  [key=2, style=dotted];
m71_770 -> m71_771  [key=0, style=solid];
m71_804 -> m71_54  [key=2, style=dotted];
m71_804 -> m71_805  [key=0, style=solid];
m71_838 -> m71_54  [key=2, style=dotted];
m71_838 -> m71_839  [key=0, style=solid];
m71_72 -> m71_64  [color=blue, key=0, style=bold];
m71_71 -> m71_72  [key=0, style=solid];
m71_71 -> m71_73  [key=2, style=dotted];
m71_116 -> m71_117  [key=0, style=solid];
m71_116 -> m71_118  [key=2, style=dotted];
m71_102 -> m71_82  [color=blue, key=0, style=bold];
m71_86 -> m71_87  [key=0, style=solid];
m71_86 -> m71_6  [key=2, style=dotted];
m71_86 -> m71_8  [key=2, style=dotted];
m71_86 -> m71_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_108 -> m71_109  [key=0, style=solid];
m71_115 -> m71_116  [key=0, style=solid];
m71_159 -> m71_6  [key=2, style=dotted];
m71_159 -> m71_8  [key=2, style=dotted];
m71_159 -> m71_160  [key=0, style=solid];
m71_159 -> m71_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_511 -> m71_104  [key=2, style=dotted];
m71_511 -> m71_512  [key=0, style=solid];
m71_511 -> m71_513  [key=2, style=dotted];
m71_538 -> m71_104  [key=2, style=dotted];
m71_538 -> m71_539  [key=0, style=solid];
m71_538 -> m71_513  [key=2, style=dotted];
m71_569 -> m71_104  [key=2, style=dotted];
m71_569 -> m71_570  [key=0, style=solid];
m71_569 -> m71_513  [key=2, style=dotted];
m71_92 -> m71_93  [key=0, style=solid];
m71_92 -> m71_73  [key=2, style=dotted];
m71_101 -> d6  [key=2, style=dotted];
m71_101 -> m71_102  [key=0, style=solid];
m71_91 -> d6  [key=2, style=dotted];
m71_91 -> m71_92  [key=0, style=solid];
m71_135 -> d6  [key=2, style=dotted];
m71_135 -> m71_136  [key=0, style=solid];
m71_136 -> d6  [key=2, style=dotted];
m71_136 -> m71_137  [key=0, style=solid];
m71_138 -> d6  [key=2, style=dotted];
m71_138 -> m71_139  [key=0, style=solid];
m71_186 -> d6  [key=2, style=dotted];
m71_186 -> m71_187  [key=0, style=solid];
m71_187 -> d6  [key=2, style=dotted];
m71_187 -> m71_188  [key=0, style=solid];
m71_188 -> d6  [key=2, style=dotted];
m71_188 -> m71_189  [key=0, style=solid];
m71_200 -> d6  [key=2, style=dotted];
m71_200 -> m71_201  [key=0, style=solid];
m71_201 -> d6  [key=2, style=dotted];
m71_201 -> m71_202  [key=0, style=solid];
m71_218 -> d6  [key=2, style=dotted];
m71_218 -> m71_219  [key=0, style=solid];
m71_230 -> d6  [key=2, style=dotted];
m71_230 -> m71_231  [key=0, style=solid];
m71_231 -> d6  [key=2, style=dotted];
m71_231 -> m71_232  [key=0, style=solid];
m71_232 -> d6  [key=2, style=dotted];
m71_232 -> m71_233  [key=0, style=solid];
m71_244 -> d6  [key=2, style=dotted];
m71_244 -> m71_245  [key=0, style=solid];
m71_245 -> d6  [key=2, style=dotted];
m71_245 -> m71_246  [key=0, style=solid];
m71_261 -> d6  [key=2, style=dotted];
m71_261 -> m71_262  [key=0, style=solid];
m71_273 -> d6  [key=2, style=dotted];
m71_273 -> m71_274  [key=0, style=solid];
m71_274 -> d6  [key=2, style=dotted];
m71_274 -> m71_275  [key=0, style=solid];
m71_275 -> d6  [key=2, style=dotted];
m71_275 -> m71_276  [key=0, style=solid];
m71_287 -> d6  [key=2, style=dotted];
m71_287 -> m71_288  [key=0, style=solid];
m71_299 -> d6  [key=2, style=dotted];
m71_299 -> m71_300  [key=0, style=solid];
m71_311 -> d6  [key=2, style=dotted];
m71_311 -> m71_312  [key=0, style=solid];
m71_312 -> d6  [key=2, style=dotted];
m71_312 -> m71_313  [key=0, style=solid];
m71_313 -> d6  [key=2, style=dotted];
m71_313 -> m71_314  [key=0, style=solid];
m71_325 -> d6  [key=2, style=dotted];
m71_325 -> m71_326  [key=0, style=solid];
m71_337 -> d6  [key=2, style=dotted];
m71_337 -> m71_338  [key=0, style=solid];
m71_350 -> d6  [key=2, style=dotted];
m71_350 -> m71_351  [key=0, style=solid];
m71_362 -> d6  [key=2, style=dotted];
m71_362 -> m71_363  [key=0, style=solid];
m71_374 -> d6  [key=2, style=dotted];
m71_374 -> m71_375  [key=0, style=solid];
m71_375 -> d6  [key=2, style=dotted];
m71_375 -> m71_376  [key=0, style=solid];
m71_387 -> d6  [key=2, style=dotted];
m71_387 -> m71_388  [key=0, style=solid];
m71_399 -> d6  [key=2, style=dotted];
m71_399 -> m71_400  [key=0, style=solid];
m71_413 -> d6  [key=2, style=dotted];
m71_413 -> m71_414  [key=0, style=solid];
m71_425 -> d6  [key=2, style=dotted];
m71_425 -> m71_426  [key=0, style=solid];
m71_437 -> d6  [key=2, style=dotted];
m71_437 -> m71_438  [key=0, style=solid];
m71_438 -> d6  [key=2, style=dotted];
m71_438 -> m71_439  [key=0, style=solid];
m71_439 -> d6  [key=2, style=dotted];
m71_439 -> m71_440  [key=0, style=solid];
m71_456 -> d6  [key=2, style=dotted];
m71_456 -> m71_457  [key=0, style=solid];
m71_470 -> d6  [key=2, style=dotted];
m71_470 -> m71_471  [key=0, style=solid];
m71_482 -> d6  [key=2, style=dotted];
m71_482 -> m71_483  [key=0, style=solid];
m71_494 -> d6  [key=2, style=dotted];
m71_494 -> m71_495  [key=0, style=solid];
m71_505 -> d6  [key=2, style=dotted];
m71_505 -> m71_506  [key=0, style=solid];
m71_519 -> d6  [key=2, style=dotted];
m71_519 -> m71_520  [key=0, style=solid];
m71_533 -> d6  [key=2, style=dotted];
m71_533 -> m71_534  [key=0, style=solid];
m71_534 -> d6  [key=2, style=dotted];
m71_534 -> m71_535  [key=0, style=solid];
m71_566 -> d6  [key=2, style=dotted];
m71_566 -> m71_567  [key=0, style=solid];
m71_579 -> d6  [key=2, style=dotted];
m71_579 -> m71_580  [key=0, style=solid];
m71_594 -> d6  [key=2, style=dotted];
m71_594 -> m71_595  [key=0, style=solid];
m71_609 -> d6  [key=2, style=dotted];
m71_609 -> m71_610  [key=0, style=solid];
m71_635 -> d6  [key=2, style=dotted];
m71_635 -> m71_636  [key=0, style=solid];
m71_646 -> d6  [key=2, style=dotted];
m71_646 -> m71_647  [key=0, style=solid];
m71_682 -> d6  [key=2, style=dotted];
m71_682 -> m71_683  [key=0, style=solid];
m71_718 -> d6  [key=2, style=dotted];
m71_718 -> m71_719  [key=0, style=solid];
m71_753 -> d6  [key=2, style=dotted];
m71_753 -> m71_754  [key=0, style=solid];
m71_787 -> d6  [key=2, style=dotted];
m71_787 -> m71_788  [key=0, style=solid];
m71_821 -> d6  [key=2, style=dotted];
m71_821 -> m71_822  [key=0, style=solid];
m71_147 -> m71_114  [key=2, style=dotted];
m71_147 -> m71_148  [key=0, style=solid];
m71_139 -> m71_123  [color=blue, key=0, style=bold];
m71_140 -> m71_141  [key=0, style=solid];
m71_146 -> m71_147  [key=0, style=solid];
m71_149 -> m71_150  [key=0, style=solid];
m71_151 -> m71_149  [color=blue, key=0, style=bold];
m71_156 -> m71_161  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_156 -> m71_157  [key=0, style=solid];
m71_158 -> m71_160  [color=darkseagreen4, key=1, label=correctProvider, style=dashed];
m71_158 -> m71_159  [key=0, style=solid];
m71_158 -> m71_5  [key=2, style=dotted];
m71_162 -> m71_163  [key=0, style=solid];
m71_162 -> m71_165  [key=2, style=dotted];
m71_162 -> m71_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_169 -> m71_170  [key=0, style=solid];
m71_183 -> m71_184  [key=0, style=solid];
m71_183 -> m71_185  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_190 -> m71_191  [key=0, style=solid];
m71_197 -> m71_198  [key=0, style=solid];
m71_197 -> m71_199  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_208 -> m71_209  [key=0, style=solid];
m71_215 -> m71_216  [key=0, style=solid];
m71_215 -> m71_217  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_220 -> m71_221  [key=0, style=solid];
m71_220 -> m71_222  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_227 -> m71_228  [key=0, style=solid];
m71_227 -> m71_229  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_234 -> m71_235  [key=0, style=solid];
m71_241 -> m71_242  [key=0, style=solid];
m71_241 -> m71_243  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_251 -> m71_252  [key=0, style=solid];
m71_258 -> m71_259  [key=0, style=solid];
m71_258 -> m71_260  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_263 -> m71_264  [key=0, style=solid];
m71_263 -> m71_265  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_270 -> m71_271  [key=0, style=solid];
m71_270 -> m71_272  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_277 -> m71_278  [key=0, style=solid];
m71_284 -> m71_285  [key=0, style=solid];
m71_284 -> m71_286  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_289 -> m71_290  [key=0, style=solid];
m71_289 -> m71_291  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_296 -> m71_297  [key=0, style=solid];
m71_296 -> m71_298  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_301 -> m71_302  [key=0, style=solid];
m71_301 -> m71_303  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_308 -> m71_309  [key=0, style=solid];
m71_308 -> m71_310  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_315 -> m71_316  [key=0, style=solid];
m71_322 -> m71_323  [key=0, style=solid];
m71_322 -> m71_324  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_327 -> m71_328  [key=0, style=solid];
m71_327 -> m71_329  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_334 -> m71_335  [key=0, style=solid];
m71_334 -> m71_336  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_339 -> m71_340  [key=0, style=solid];
m71_339 -> m71_341  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_347 -> m71_348  [key=0, style=solid];
m71_347 -> m71_349  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_352 -> m71_353  [key=0, style=solid];
m71_352 -> m71_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_359 -> m71_360  [key=0, style=solid];
m71_359 -> m71_361  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_364 -> m71_365  [key=0, style=solid];
m71_364 -> m71_366  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_371 -> m71_372  [key=0, style=solid];
m71_371 -> m71_373  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_377 -> m71_378  [key=0, style=solid];
m71_384 -> m71_385  [key=0, style=solid];
m71_384 -> m71_386  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_389 -> m71_390  [key=0, style=solid];
m71_389 -> m71_391  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_396 -> m71_397  [key=0, style=solid];
m71_396 -> m71_398  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_401 -> m71_402  [key=0, style=solid];
m71_401 -> m71_403  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_401 -> m71_404  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_410 -> m71_411  [key=0, style=solid];
m71_410 -> m71_412  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_415 -> m71_416  [key=0, style=solid];
m71_415 -> m71_417  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_422 -> m71_423  [key=0, style=solid];
m71_422 -> m71_424  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_427 -> m71_428  [key=0, style=solid];
m71_427 -> m71_429  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_434 -> m71_435  [key=0, style=solid];
m71_434 -> m71_436  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_442 -> m71_443  [key=0, style=solid];
m71_442 -> m71_444  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_442 -> m71_445  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_442 -> m71_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_442 -> m71_447  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_453 -> m71_454  [key=0, style=solid];
m71_453 -> m71_455  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_458 -> m71_459  [key=0, style=solid];
m71_458 -> m71_460  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_458 -> m71_461  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_458 -> m71_462  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_467 -> m71_468  [key=0, style=solid];
m71_467 -> m71_469  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_472 -> m71_473  [key=0, style=solid];
m71_472 -> m71_474  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_479 -> m71_480  [key=0, style=solid];
m71_479 -> m71_481  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_484 -> m71_485  [key=0, style=solid];
m71_484 -> m71_486  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_491 -> m71_492  [key=0, style=solid];
m71_491 -> m71_493  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_496 -> m71_497  [key=0, style=solid];
m71_496 -> m71_498  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m71_503 -> m71_504  [key=0, style=solid];
m71_503 -> m71_508  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_507 -> m71_508  [key=0, style=solid];
m71_509 -> m71_507  [color=blue, key=0, style=bold];
m71_510 -> m71_511  [key=0, style=solid];
m71_517 -> m71_518  [key=0, style=solid];
m71_517 -> m71_522  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_521 -> m71_522  [key=0, style=solid];
m71_523 -> m71_521  [color=blue, key=0, style=bold];
m71_524 -> m71_525  [key=0, style=solid];
m71_530 -> m71_531  [key=0, style=solid];
m71_530 -> m71_532  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_537 -> m71_538  [key=0, style=solid];
m71_549 -> m71_550  [key=0, style=solid];
m71_549 -> m71_553  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_551 -> m71_549  [color=blue, key=0, style=bold];
m71_552 -> m71_553  [key=0, style=solid];
m71_554 -> m71_552  [color=blue, key=0, style=bold];
m71_555 -> m71_556  [key=0, style=solid];
m71_562 -> m71_563  [key=0, style=solid];
m71_562 -> m71_564  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_562 -> m71_565  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_568 -> m71_569  [key=0, style=solid];
m71_571 -> m71_572  [key=0, style=solid];
m71_577 -> m71_578  [key=0, style=solid];
m71_577 -> m71_582  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_581 -> m71_582  [key=0, style=solid];
m71_583 -> m71_581  [color=blue, key=0, style=bold];
m71_584 -> m71_585  [key=0, style=solid];
m71_592 -> m71_593  [key=0, style=solid];
m71_592 -> m71_597  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_596 -> m71_597  [key=0, style=solid];
m71_598 -> m71_596  [color=blue, key=0, style=bold];
m71_599 -> m71_600  [key=0, style=solid];
m71_605 -> m71_607  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_605 -> m71_608  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_605 -> m71_606  [key=0, style=solid];
m71_606 -> m71_607  [key=0, style=solid];
m71_606 -> m71_609  [color=darkseagreen4, key=1, label=items, style=dashed];
m71_606 -> m71_587  [key=2, style=dotted];
m71_606 -> m71_612  [color=darkseagreen4, key=1, label=items, style=dashed];
m71_611 -> m71_612  [key=0, style=solid];
m71_617 -> m71_618  [key=0, style=solid];
m71_617 -> m71_621  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_619 -> m71_617  [color=blue, key=0, style=bold];
m71_620 -> m71_621  [key=0, style=solid];
m71_622 -> m71_620  [color=blue, key=0, style=bold];
m71_623 -> m71_624  [key=0, style=solid];
m71_631 -> m71_633  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_631 -> m71_634  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_631 -> m71_632  [key=0, style=solid];
m71_632 -> m71_633  [key=0, style=solid];
m71_632 -> m71_637  [key=2, style=dotted];
m71_638 -> m71_639  [key=0, style=solid];
m71_644 -> m71_645  [key=0, style=solid];
m71_644 -> m71_649  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_648 -> m71_649  [key=0, style=solid];
m71_650 -> m71_648  [color=blue, key=0, style=bold];
m71_651 -> m71_652  [key=0, style=solid];
m71_660 -> m71_662  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_660 -> m71_663  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_660 -> m71_661  [key=0, style=solid];
m71_661 -> m71_662  [key=0, style=solid];
m71_661 -> m71_637  [key=2, style=dotted];
m71_668 -> m71_669  [key=0, style=solid];
m71_680 -> m71_681  [key=0, style=solid];
m71_680 -> m71_685  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_684 -> m71_685  [key=0, style=solid];
m71_686 -> m71_684  [color=blue, key=0, style=bold];
m71_687 -> m71_688  [key=0, style=solid];
m71_696 -> m71_698  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_696 -> m71_699  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_696 -> m71_697  [key=0, style=solid];
m71_697 -> m71_698  [key=0, style=solid];
m71_697 -> m71_637  [key=2, style=dotted];
m71_704 -> m71_705  [key=0, style=solid];
m71_716 -> m71_717  [key=0, style=solid];
m71_716 -> m71_721  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_720 -> m71_721  [key=0, style=solid];
m71_722 -> m71_720  [color=blue, key=0, style=bold];
m71_723 -> m71_724  [key=0, style=solid];
m71_731 -> m71_733  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_731 -> m71_734  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_731 -> m71_732  [key=0, style=solid];
m71_732 -> m71_733  [key=0, style=solid];
m71_732 -> m71_637  [key=2, style=dotted];
m71_739 -> m71_740  [key=0, style=solid];
m71_751 -> m71_752  [key=0, style=solid];
m71_751 -> m71_756  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_755 -> m71_756  [key=0, style=solid];
m71_757 -> m71_755  [color=blue, key=0, style=bold];
m71_758 -> m71_759  [key=0, style=solid];
m71_766 -> m71_768  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_766 -> m71_769  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_766 -> m71_767  [key=0, style=solid];
m71_773 -> m71_774  [key=0, style=solid];
m71_785 -> m71_786  [key=0, style=solid];
m71_785 -> m71_790  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_789 -> m71_790  [key=0, style=solid];
m71_791 -> m71_789  [color=blue, key=0, style=bold];
m71_792 -> m71_793  [key=0, style=solid];
m71_800 -> m71_802  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_800 -> m71_803  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_800 -> m71_801  [key=0, style=solid];
m71_807 -> m71_808  [key=0, style=solid];
m71_819 -> m71_820  [key=0, style=solid];
m71_819 -> m71_824  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_823 -> m71_824  [key=0, style=solid];
m71_825 -> m71_823  [color=blue, key=0, style=bold];
m71_826 -> m71_827  [key=0, style=solid];
m71_834 -> m71_836  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_834 -> m71_837  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_834 -> m71_835  [key=0, style=solid];
m71_841 -> m71_842  [key=0, style=solid];
m71_10 -> m71_11  [key=0, style=solid];
m71_12 -> m71_10  [color=blue, key=0, style=bold];
m71_28 -> m71_29  [key=0, style=solid];
m71_166 -> m71_167  [key=0, style=solid];
m71_168 -> m71_166  [color=blue, key=0, style=bold];
m71_30 -> m71_28  [color=blue, key=0, style=bold];
m71_137 -> m71_73  [key=2, style=dotted];
m71_137 -> m71_138  [key=0, style=solid];
m71_202 -> m71_73  [key=2, style=dotted];
m71_202 -> m71_203  [key=0, style=solid];
m71_203 -> m71_204  [key=0, style=solid];
m71_203 -> m71_205  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m71_246 -> m71_73  [key=2, style=dotted];
m71_246 -> m71_247  [key=0, style=solid];
m71_247 -> m71_248  [key=0, style=solid];
m71_247 -> m71_249  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m71_540 -> m71_541  [key=0, style=solid];
m71_543 -> m71_544  [key=0, style=solid];
m71_671 -> m71_672  [key=0, style=solid];
m71_674 -> m71_675  [key=0, style=solid];
m71_707 -> m71_708  [key=0, style=solid];
m71_710 -> m71_711  [key=0, style=solid];
m71_742 -> m71_743  [key=0, style=solid];
m71_745 -> m71_746  [key=0, style=solid];
m71_776 -> m71_777  [key=0, style=solid];
m71_779 -> m71_780  [key=0, style=solid];
m71_771 -> m71_73  [key=2, style=dotted];
m71_771 -> m71_772  [key=0, style=solid];
m71_810 -> m71_811  [key=0, style=solid];
m71_813 -> m71_814  [key=0, style=solid];
m71_805 -> m71_73  [key=2, style=dotted];
m71_805 -> m71_806  [key=0, style=solid];
m71_844 -> m71_845  [key=0, style=solid];
m71_847 -> m71_848  [key=0, style=solid];
m71_839 -> m71_73  [key=2, style=dotted];
m71_839 -> m71_840  [key=0, style=solid];
m71_210 -> m71_208  [color=blue, key=0, style=bold];
m71_253 -> m71_251  [color=blue, key=0, style=bold];
m71_206 -> m71_197  [color=blue, key=0, style=bold];
m71_250 -> m71_241  [color=blue, key=0, style=bold];
m71_667 -> m71_660  [color=blue, key=0, style=bold];
m71_703 -> m71_696  [color=blue, key=0, style=bold];
m71_738 -> m71_731  [color=blue, key=0, style=bold];
m71_117 -> m71_115  [color=blue, key=0, style=bold];
m71_105 -> m71_106  [key=0, style=solid];
m71_110 -> m71_108  [color=blue, key=0, style=bold];
m71_109 -> m71_110  [key=0, style=solid];
m71_157 -> m71_159  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m71_157 -> m71_158  [key=0, style=solid];
m71_157 -> m71_162  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m71_157 -> m71_7  [key=2, style=dotted];
m71_512 -> m71_510  [color=blue, key=0, style=bold];
m71_539 -> m71_537  [color=blue, key=0, style=bold];
m71_570 -> m71_568  [color=blue, key=0, style=bold];
m71_189 -> m71_183  [color=blue, key=0, style=bold];
m71_219 -> m71_215  [color=blue, key=0, style=bold];
m71_233 -> m71_227  [color=blue, key=0, style=bold];
m71_262 -> m71_258  [color=blue, key=0, style=bold];
m71_276 -> m71_270  [color=blue, key=0, style=bold];
m71_288 -> m71_284  [color=blue, key=0, style=bold];
m71_300 -> m71_296  [color=blue, key=0, style=bold];
m71_314 -> m71_308  [color=blue, key=0, style=bold];
m71_326 -> m71_322  [color=blue, key=0, style=bold];
m71_338 -> m71_334  [color=blue, key=0, style=bold];
m71_351 -> m71_347  [color=blue, key=0, style=bold];
m71_363 -> m71_359  [color=blue, key=0, style=bold];
m71_376 -> m71_371  [color=blue, key=0, style=bold];
m71_388 -> m71_384  [color=blue, key=0, style=bold];
m71_400 -> m71_396  [color=blue, key=0, style=bold];
m71_414 -> m71_410  [color=blue, key=0, style=bold];
m71_426 -> m71_422  [color=blue, key=0, style=bold];
m71_440 -> m71_434  [color=blue, key=0, style=bold];
m71_457 -> m71_453  [color=blue, key=0, style=bold];
m71_471 -> m71_467  [color=blue, key=0, style=bold];
m71_483 -> m71_479  [color=blue, key=0, style=bold];
m71_495 -> m71_491  [color=blue, key=0, style=bold];
m71_506 -> m71_503  [color=blue, key=0, style=bold];
m71_520 -> m71_517  [color=blue, key=0, style=bold];
m71_535 -> m71_530  [color=blue, key=0, style=bold];
m71_567 -> m71_562  [color=blue, key=0, style=bold];
m71_580 -> m71_577  [color=blue, key=0, style=bold];
m71_595 -> m71_592  [color=blue, key=0, style=bold];
m71_610 -> m71_605  [color=blue, key=0, style=bold];
m71_636 -> m71_631  [color=blue, key=0, style=bold];
m71_647 -> m71_644  [color=blue, key=0, style=bold];
m71_683 -> m71_680  [color=blue, key=0, style=bold];
m71_719 -> m71_716  [color=blue, key=0, style=bold];
m71_754 -> m71_751  [color=blue, key=0, style=bold];
m71_788 -> m71_785  [color=blue, key=0, style=bold];
m71_822 -> m71_819  [color=blue, key=0, style=bold];
m71_148 -> m71_146  [color=blue, key=0, style=bold];
m71_142 -> m71_140  [color=blue, key=0, style=bold];
m71_141 -> m71_142  [key=0, style=solid];
m71_163 -> m71_156  [color=blue, key=0, style=bold];
m71_171 -> m71_169  [color=blue, key=0, style=bold];
m71_170 -> m71_171  [key=0, style=solid];
m71_170 -> m71_172  [key=2, style=dotted];
m71_192 -> m71_190  [color=blue, key=0, style=bold];
m71_191 -> m71_192  [key=0, style=solid];
m71_191 -> m71_193  [key=2, style=dotted];
m71_223 -> m71_220  [color=blue, key=0, style=bold];
m71_221 -> m71_222  [key=0, style=solid];
m71_221 -> m71_193  [key=2, style=dotted];
m71_222 -> m71_223  [key=0, style=solid];
m71_222 -> m71_193  [key=2, style=dotted];
m71_236 -> m71_234  [color=blue, key=0, style=bold];
m71_235 -> m71_236  [key=0, style=solid];
m71_235 -> m71_237  [key=2, style=dotted];
m71_266 -> m71_263  [color=blue, key=0, style=bold];
m71_264 -> m71_265  [key=0, style=solid];
m71_264 -> m71_237  [key=2, style=dotted];
m71_265 -> m71_266  [key=0, style=solid];
m71_265 -> m71_237  [key=2, style=dotted];
m71_279 -> m71_277  [color=blue, key=0, style=bold];
m71_278 -> m71_279  [key=0, style=solid];
m71_278 -> m71_280  [key=2, style=dotted];
m71_292 -> m71_289  [color=blue, key=0, style=bold];
m71_290 -> m71_291  [key=0, style=solid];
m71_290 -> m71_280  [key=2, style=dotted];
m71_291 -> m71_292  [key=0, style=solid];
m71_291 -> m71_280  [key=2, style=dotted];
m71_304 -> m71_301  [color=blue, key=0, style=bold];
m71_302 -> m71_303  [key=0, style=solid];
m71_302 -> m71_280  [key=2, style=dotted];
m71_303 -> m71_304  [key=0, style=solid];
m71_303 -> m71_280  [key=2, style=dotted];
m71_317 -> m71_315  [color=blue, key=0, style=bold];
m71_316 -> m71_317  [key=0, style=solid];
m71_316 -> m71_318  [key=2, style=dotted];
m71_330 -> m71_327  [color=blue, key=0, style=bold];
m71_328 -> m71_329  [key=0, style=solid];
m71_328 -> m71_280  [key=2, style=dotted];
m71_329 -> m71_330  [key=0, style=solid];
m71_329 -> m71_318  [key=2, style=dotted];
m71_342 -> m71_339  [color=blue, key=0, style=bold];
m71_340 -> m71_341  [key=0, style=solid];
m71_340 -> m71_280  [key=2, style=dotted];
m71_341 -> m71_342  [key=0, style=solid];
m71_341 -> m71_343  [key=2, style=dotted];
m71_355 -> m71_352  [color=blue, key=0, style=bold];
m71_353 -> m71_354  [key=0, style=solid];
m71_353 -> m71_280  [key=2, style=dotted];
m71_354 -> m71_355  [key=0, style=solid];
m71_354 -> m71_343  [key=2, style=dotted];
m71_367 -> m71_364  [color=blue, key=0, style=bold];
m71_365 -> m71_366  [key=0, style=solid];
m71_365 -> m71_280  [key=2, style=dotted];
m71_366 -> m71_367  [key=0, style=solid];
m71_366 -> m71_343  [key=2, style=dotted];
m71_379 -> m71_377  [color=blue, key=0, style=bold];
m71_378 -> m71_379  [key=0, style=solid];
m71_378 -> m71_380  [key=2, style=dotted];
m71_392 -> m71_389  [color=blue, key=0, style=bold];
m71_390 -> m71_391  [key=0, style=solid];
m71_390 -> m71_380  [key=2, style=dotted];
m71_391 -> m71_392  [key=0, style=solid];
m71_391 -> m71_380  [key=2, style=dotted];
m71_405 -> m71_401  [color=blue, key=0, style=bold];
m71_402 -> m71_403  [key=0, style=solid];
m71_402 -> m71_380  [key=2, style=dotted];
m71_403 -> m71_404  [key=0, style=solid];
m71_403 -> m71_380  [key=2, style=dotted];
m71_404 -> m71_405  [key=0, style=solid];
m71_404 -> m71_406  [key=2, style=dotted];
m71_418 -> m71_415  [color=blue, key=0, style=bold];
m71_416 -> m71_417  [key=0, style=solid];
m71_416 -> m71_380  [key=2, style=dotted];
m71_417 -> m71_418  [key=0, style=solid];
m71_417 -> m71_406  [key=2, style=dotted];
m71_430 -> m71_427  [color=blue, key=0, style=bold];
m71_428 -> m71_429  [key=0, style=solid];
m71_428 -> m71_380  [key=2, style=dotted];
m71_429 -> m71_430  [key=0, style=solid];
m71_429 -> m71_406  [key=2, style=dotted];
m71_448 -> m71_442  [color=blue, key=0, style=bold];
m71_443 -> m71_444  [key=0, style=solid];
m71_443 -> m71_380  [key=2, style=dotted];
m71_444 -> m71_445  [key=0, style=solid];
m71_444 -> m71_380  [key=2, style=dotted];
m71_445 -> m71_446  [key=0, style=solid];
m71_445 -> m71_380  [key=2, style=dotted];
m71_446 -> m71_447  [key=0, style=solid];
m71_446 -> m71_380  [key=2, style=dotted];
m71_447 -> m71_448  [key=0, style=solid];
m71_447 -> m71_449  [key=2, style=dotted];
m71_463 -> m71_458  [color=blue, key=0, style=bold];
m71_459 -> m71_460  [key=0, style=solid];
m71_459 -> m71_380  [key=2, style=dotted];
m71_460 -> m71_461  [key=0, style=solid];
m71_460 -> m71_380  [key=2, style=dotted];
m71_461 -> m71_462  [key=0, style=solid];
m71_461 -> m71_380  [key=2, style=dotted];
m71_462 -> m71_463  [key=0, style=solid];
m71_462 -> m71_449  [key=2, style=dotted];
m71_475 -> m71_472  [color=blue, key=0, style=bold];
m71_473 -> m71_474  [key=0, style=solid];
m71_473 -> m71_380  [key=2, style=dotted];
m71_474 -> m71_475  [key=0, style=solid];
m71_474 -> m71_449  [key=2, style=dotted];
m71_487 -> m71_484  [color=blue, key=0, style=bold];
m71_485 -> m71_486  [key=0, style=solid];
m71_485 -> m71_380  [key=2, style=dotted];
m71_486 -> m71_487  [key=0, style=solid];
m71_486 -> m71_449  [key=2, style=dotted];
m71_499 -> m71_496  [color=blue, key=0, style=bold];
m71_497 -> m71_498  [key=0, style=solid];
m71_497 -> m71_380  [key=2, style=dotted];
m71_498 -> m71_499  [key=0, style=solid];
m71_498 -> m71_449  [key=2, style=dotted];
m71_526 -> m71_524  [color=blue, key=0, style=bold];
m71_525 -> m71_513  [key=2, style=dotted];
m71_525 -> m71_526  [key=0, style=solid];
m71_557 -> m71_555  [color=blue, key=0, style=bold];
m71_556 -> m71_557  [key=0, style=solid];
m71_556 -> m71_558  [key=2, style=dotted];
m71_573 -> m71_571  [color=blue, key=0, style=bold];
m71_572 -> m71_573  [key=0, style=solid];
m71_572 -> m71_558  [key=2, style=dotted];
m71_586 -> m71_584  [color=blue, key=0, style=bold];
m71_585 -> m71_586  [key=0, style=solid];
m71_585 -> m71_587  [key=2, style=dotted];
m71_585 -> m71_588  [key=2, style=dotted];
m71_601 -> m71_599  [color=blue, key=0, style=bold];
m71_600 -> m71_601  [key=0, style=solid];
m71_600 -> m71_588  [key=2, style=dotted];
m71_612 -> m71_613  [key=0, style=solid];
m71_612 -> m71_588  [key=2, style=dotted];
m71_613 -> m71_611  [color=blue, key=0, style=bold];
m71_625 -> m71_623  [color=blue, key=0, style=bold];
m71_624 -> m71_625  [key=0, style=solid];
m71_624 -> m71_626  [key=2, style=dotted];
m71_640 -> m71_638  [color=blue, key=0, style=bold];
m71_639 -> m71_640  [key=0, style=solid];
m71_639 -> m71_626  [key=2, style=dotted];
m71_653 -> m71_651  [color=blue, key=0, style=bold];
m71_652 -> m71_653  [key=0, style=solid];
m71_652 -> m71_654  [key=2, style=dotted];
m71_652 -> m71_655  [key=2, style=dotted];
m71_670 -> m71_668  [color=blue, key=0, style=bold];
m71_669 -> m71_670  [key=0, style=solid];
m71_669 -> m71_654  [key=2, style=dotted];
m71_669 -> m71_655  [key=2, style=dotted];
m71_689 -> m71_687  [color=blue, key=0, style=bold];
m71_688 -> m71_689  [key=0, style=solid];
m71_688 -> m71_690  [key=2, style=dotted];
m71_688 -> m71_691  [key=2, style=dotted];
m71_706 -> m71_704  [color=blue, key=0, style=bold];
m71_705 -> m71_706  [key=0, style=solid];
m71_705 -> m71_654  [key=2, style=dotted];
m71_705 -> m71_691  [key=2, style=dotted];
m71_725 -> m71_723  [color=blue, key=0, style=bold];
m71_724 -> m71_725  [key=0, style=solid];
m71_724 -> m71_690  [key=2, style=dotted];
m71_724 -> m71_726  [key=2, style=dotted];
m71_741 -> m71_739  [color=blue, key=0, style=bold];
m71_740 -> m71_741  [key=0, style=solid];
m71_740 -> m71_654  [key=2, style=dotted];
m71_740 -> m71_726  [key=2, style=dotted];
m71_760 -> m71_758  [color=blue, key=0, style=bold];
m71_759 -> m71_760  [key=0, style=solid];
m71_759 -> m71_761  [key=2, style=dotted];
m71_772 -> m71_766  [color=blue, key=0, style=bold];
m71_775 -> m71_773  [color=blue, key=0, style=bold];
m71_774 -> m71_775  [key=0, style=solid];
m71_774 -> m71_761  [key=2, style=dotted];
m71_794 -> m71_792  [color=blue, key=0, style=bold];
m71_793 -> m71_794  [key=0, style=solid];
m71_793 -> m71_795  [key=2, style=dotted];
m71_806 -> m71_800  [color=blue, key=0, style=bold];
m71_809 -> m71_807  [color=blue, key=0, style=bold];
m71_808 -> m71_809  [key=0, style=solid];
m71_808 -> m71_795  [key=2, style=dotted];
m71_828 -> m71_826  [color=blue, key=0, style=bold];
m71_827 -> m71_828  [key=0, style=solid];
m71_827 -> m71_829  [key=2, style=dotted];
m71_840 -> m71_834  [color=blue, key=0, style=bold];
m71_843 -> m71_841  [color=blue, key=0, style=bold];
m71_842 -> m71_843  [key=0, style=solid];
m71_842 -> m71_829  [key=2, style=dotted];
m71_542 -> m71_540  [color=blue, key=0, style=bold];
m71_541 -> m71_542  [key=0, style=solid];
m71_545 -> m71_543  [color=blue, key=0, style=bold];
m71_544 -> m71_545  [key=0, style=solid];
m71_673 -> m71_671  [color=blue, key=0, style=bold];
m71_672 -> m71_673  [key=0, style=solid];
m71_676 -> m71_674  [color=blue, key=0, style=bold];
m71_675 -> m71_676  [key=0, style=solid];
m71_709 -> m71_707  [color=blue, key=0, style=bold];
m71_708 -> m71_709  [key=0, style=solid];
m71_712 -> m71_710  [color=blue, key=0, style=bold];
m71_711 -> m71_712  [key=0, style=solid];
m71_744 -> m71_742  [color=blue, key=0, style=bold];
m71_743 -> m71_744  [key=0, style=solid];
m71_747 -> m71_745  [color=blue, key=0, style=bold];
m71_746 -> m71_747  [key=0, style=solid];
m71_778 -> m71_776  [color=blue, key=0, style=bold];
m71_777 -> m71_778  [key=0, style=solid];
m71_781 -> m71_779  [color=blue, key=0, style=bold];
m71_780 -> m71_781  [key=0, style=solid];
m71_812 -> m71_810  [color=blue, key=0, style=bold];
m71_811 -> m71_812  [key=0, style=solid];
m71_815 -> m71_813  [color=blue, key=0, style=bold];
m71_814 -> m71_815  [key=0, style=solid];
m71_846 -> m71_844  [color=blue, key=0, style=bold];
m71_845 -> m71_846  [key=0, style=solid];
m71_849 -> m71_847  [color=blue, key=0, style=bold];
m71_848 -> m71_849  [key=0, style=solid];
m71_107 -> m71_105  [color=blue, key=0, style=bold];
m71_106 -> m71_107  [key=0, style=solid];
m71_174 -> m71_175  [key=0, style=solid];
m71_174 -> m71_176  [key=2, style=dotted];
m71_175 -> m71_173  [color=blue, key=0, style=bold];
m71_381 -> m71_382  [key=0, style=solid];
m71_382 -> m71_36  [key=2, style=dotted];
m71_382 -> m71_383  [key=0, style=solid];
m71_382 -> m71_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_383 -> m71_381  [color=blue, key=0, style=bold];
m71_368 -> m71_369  [key=0, style=solid];
m71_369 -> m71_36  [key=2, style=dotted];
m71_369 -> m71_370  [key=0, style=solid];
m71_369 -> m71_371  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_370 -> m71_368  [color=blue, key=0, style=bold];
m71_602 -> m71_603  [key=0, style=solid];
m71_603 -> m71_36  [key=2, style=dotted];
m71_603 -> m71_604  [key=0, style=solid];
m71_603 -> m71_605  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_604 -> m71_602  [color=blue, key=0, style=bold];
m71_796 -> m71_797  [key=0, style=solid];
m71_798 -> m71_36  [key=2, style=dotted];
m71_798 -> m71_799  [key=0, style=solid];
m71_798 -> m71_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_797 -> m71_798  [key=0, style=solid];
m71_797 -> m71_801  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_799 -> m71_796  [color=blue, key=0, style=bold];
m71_356 -> m71_357  [key=0, style=solid];
m71_357 -> m71_36  [key=2, style=dotted];
m71_357 -> m71_358  [key=0, style=solid];
m71_357 -> m71_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_358 -> m71_356  [color=blue, key=0, style=bold];
m71_713 -> m71_714  [key=0, style=solid];
m71_714 -> m71_36  [key=2, style=dotted];
m71_714 -> m71_715  [key=0, style=solid];
m71_714 -> m71_716  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_715 -> m71_713  [color=blue, key=0, style=bold];
m71_224 -> m71_225  [key=0, style=solid];
m71_225 -> m71_36  [key=2, style=dotted];
m71_225 -> m71_226  [key=0, style=solid];
m71_225 -> m71_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_226 -> m71_224  [color=blue, key=0, style=bold];
m71_488 -> m71_489  [key=0, style=solid];
m71_489 -> m71_36  [key=2, style=dotted];
m71_489 -> m71_490  [key=0, style=solid];
m71_489 -> m71_491  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_490 -> m71_488  [color=blue, key=0, style=bold];
m71_24 -> m71_25  [key=0, style=solid];
m71_25 -> m71_13  [key=2, style=dotted];
m71_25 -> m71_26  [key=0, style=solid];
m71_25 -> m71_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_26 -> d6  [key=2, style=dotted];
m71_26 -> m71_27  [key=0, style=solid];
m71_27 -> m71_24  [color=blue, key=0, style=bold];
m71_331 -> m71_332  [key=0, style=solid];
m71_332 -> m71_36  [key=2, style=dotted];
m71_332 -> m71_333  [key=0, style=solid];
m71_332 -> m71_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_333 -> m71_331  [color=blue, key=0, style=bold];
m71_15 -> m71_16  [color=green, key=0, style=solid];
m71_16 -> m71_17  [color=green, key=0, style=solid];
m71_16 -> m71_13  [color=green, key=2, style=dotted];
m71_16 -> m71_20  [color=green, key=1, label="lambda expression", style=dashed];
m71_17 -> m71_18  [key=0, style=solid];
m71_17 -> d6  [key=2, style=dotted];
m71_18 -> m71_15  [color=blue, key=0, style=bold];
m71_305 -> m71_306  [key=0, style=solid];
m71_306 -> m71_36  [key=2, style=dotted];
m71_306 -> m71_307  [key=0, style=solid];
m71_306 -> m71_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_307 -> m71_305  [color=blue, key=0, style=bold];
m71_238 -> m71_239  [key=0, style=solid];
m71_239 -> m71_36  [key=2, style=dotted];
m71_239 -> m71_240  [key=0, style=solid];
m71_239 -> m71_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_240 -> m71_238  [color=blue, key=0, style=bold];
m71_500 -> m71_501  [key=0, style=solid];
m71_501 -> m71_36  [key=2, style=dotted];
m71_501 -> m71_502  [key=0, style=solid];
m71_501 -> m71_503  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_502 -> m71_500  [color=blue, key=0, style=bold];
m71_727 -> m71_728  [key=0, style=solid];
m71_729 -> m71_36  [key=2, style=dotted];
m71_729 -> m71_730  [key=0, style=solid];
m71_729 -> m71_731  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_728 -> m71_729  [key=0, style=solid];
m71_728 -> m71_732  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_730 -> m71_727  [color=blue, key=0, style=bold];
m71_32 -> m71_33  [color=green, key=0, style=solid];
m71_33 -> m71_34  [color=green, key=0, style=solid];
m71_33 -> m71_38  [color=green, key=1, label=arrangeSql, style=dashed];
m71_33 -> m71_39  [color=green, key=1, label=arrangeSql, style=dashed];
m71_34 -> m71_35  [color=green, key=0, style=solid];
m71_34 -> m71_36  [color=green, key=2, style=dotted];
m71_34 -> m71_37  [color=green, key=1, label="lambda expression", style=dashed];
m71_35 -> m71_32  [color=blue, key=0, style=bold];
m71_762 -> m71_763  [key=0, style=solid];
m71_764 -> m71_36  [key=2, style=dotted];
m71_764 -> m71_765  [key=0, style=solid];
m71_764 -> m71_766  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_763 -> m71_764  [key=0, style=solid];
m71_763 -> m71_767  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_765 -> m71_762  [color=blue, key=0, style=bold];
m71_49 -> m71_855  [key=0, style=solid];
m71_49 -> m71_856  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m71_855 -> m71_23  [key=2, style=dotted];
m71_855 -> m71_856  [key=0, style=solid];
m71_855 -> m71_857  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m71_856 -> m71_857  [key=0, style=solid];
m71_856 -> m71_854  [key=2, style=dotted];
m71_857 -> m71_858  [key=0, style=solid];
m71_857 -> m71_859  [key=2, style=dotted];
m71_858 -> m71_49  [color=blue, key=0, style=bold];
m71_180 -> m71_181  [key=0, style=solid];
m71_181 -> m71_36  [key=2, style=dotted];
m71_181 -> m71_182  [key=0, style=solid];
m71_181 -> m71_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_182 -> m71_180  [color=blue, key=0, style=bold];
m71_850 -> m71_851  [key=0, style=solid];
m71_850 -> m71_852  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m71_851 -> m71_31  [key=2, style=dotted];
m71_851 -> m71_852  [key=0, style=solid];
m71_852 -> m71_854  [key=2, style=dotted];
m71_852 -> m71_853  [key=0, style=solid];
m71_853 -> m71_850  [color=blue, key=0, style=bold];
m71_656 -> m71_657  [key=0, style=solid];
m71_658 -> m71_36  [key=2, style=dotted];
m71_658 -> m71_659  [key=0, style=solid];
m71_658 -> m71_660  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_657 -> m71_658  [key=0, style=solid];
m71_657 -> m71_661  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_659 -> m71_656  [color=blue, key=0, style=bold];
m71_464 -> m71_465  [key=0, style=solid];
m71_465 -> m71_36  [key=2, style=dotted];
m71_465 -> m71_466  [key=0, style=solid];
m71_465 -> m71_467  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_466 -> m71_464  [color=blue, key=0, style=bold];
m71_212 -> m71_213  [key=0, style=solid];
m71_213 -> m71_36  [key=2, style=dotted];
m71_213 -> m71_214  [key=0, style=solid];
m71_213 -> m71_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_214 -> m71_212  [color=blue, key=0, style=bold];
m71_748 -> m71_749  [key=0, style=solid];
m71_749 -> m71_36  [key=2, style=dotted];
m71_749 -> m71_750  [key=0, style=solid];
m71_749 -> m71_751  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_750 -> m71_748  [color=blue, key=0, style=bold];
m71_450 -> m71_451  [key=0, style=solid];
m71_451 -> m71_36  [key=2, style=dotted];
m71_451 -> m71_452  [key=0, style=solid];
m71_451 -> m71_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_452 -> m71_450  [color=blue, key=0, style=bold];
m71_431 -> m71_432  [key=0, style=solid];
m71_432 -> m71_36  [key=2, style=dotted];
m71_432 -> m71_433  [key=0, style=solid];
m71_432 -> m71_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_433 -> m71_431  [color=blue, key=0, style=bold];
m71_255 -> m71_256  [key=0, style=solid];
m71_256 -> m71_36  [key=2, style=dotted];
m71_256 -> m71_257  [key=0, style=solid];
m71_256 -> m71_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_257 -> m71_255  [color=blue, key=0, style=bold];
m71_281 -> m71_282  [key=0, style=solid];
m71_282 -> m71_36  [key=2, style=dotted];
m71_282 -> m71_283  [key=0, style=solid];
m71_282 -> m71_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_283 -> m71_281  [color=blue, key=0, style=bold];
m71_78 -> m71_79  [color=green, key=0, style=solid];
m71_79 -> m71_80  [color=green, key=0, style=solid];
m71_79 -> m71_83  [color=green, key=1, label=arrangeSql, style=dashed];
m71_79 -> m71_84  [color=green, key=1, label=arrangeSql, style=dashed];
m71_80 -> m71_81  [color=green, key=0, style=solid];
m71_80 -> m71_36  [color=green, key=2, style=dotted];
m71_80 -> m71_82  [color=green, key=1, label="lambda expression", style=dashed];
m71_81 -> m71_78  [color=blue, key=0, style=bold];
m71_60 -> m71_61  [color=green, key=0, style=solid];
m71_61 -> m71_62  [color=green, key=0, style=solid];
m71_61 -> m71_65  [color=green, key=1, label=arrangeSql, style=dashed];
m71_61 -> m71_66  [color=green, key=1, label=arrangeSql, style=dashed];
m71_62 -> m71_63  [color=green, key=0, style=solid];
m71_62 -> m71_36  [color=green, key=2, style=dotted];
m71_62 -> m71_64  [color=green, key=1, label="lambda expression", style=dashed];
m71_63 -> m71_60  [color=blue, key=0, style=bold];
m71_527 -> m71_528  [key=0, style=solid];
m71_528 -> m71_36  [key=2, style=dotted];
m71_528 -> m71_529  [key=0, style=solid];
m71_528 -> m71_530  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_529 -> m71_527  [color=blue, key=0, style=bold];
m71_574 -> m71_575  [key=0, style=solid];
m71_575 -> m71_36  [key=2, style=dotted];
m71_575 -> m71_576  [key=0, style=solid];
m71_575 -> m71_577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_576 -> m71_574  [color=blue, key=0, style=bold];
m71_344 -> m71_345  [key=0, style=solid];
m71_345 -> m71_36  [key=2, style=dotted];
m71_345 -> m71_346  [key=0, style=solid];
m71_345 -> m71_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_346 -> m71_344  [color=blue, key=0, style=bold];
m71_641 -> m71_642  [key=0, style=solid];
m71_642 -> m71_36  [key=2, style=dotted];
m71_642 -> m71_643  [key=0, style=solid];
m71_642 -> m71_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_643 -> m71_641  [color=blue, key=0, style=bold];
m71_677 -> m71_678  [key=0, style=solid];
m71_678 -> m71_36  [key=2, style=dotted];
m71_678 -> m71_679  [key=0, style=solid];
m71_678 -> m71_680  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_679 -> m71_677  [color=blue, key=0, style=bold];
m71_546 -> m71_547  [key=0, style=solid];
m71_547 -> m71_36  [key=2, style=dotted];
m71_547 -> m71_548  [key=0, style=solid];
m71_547 -> m71_549  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m71_548 -> m71_546  [color=blue, key=0, style=bold];
m71_860 -> m71_16  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_21  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_34  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_40  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_41  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_43  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_62  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_67  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_68  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_80  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_121  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_89  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_90  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_93  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_129  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_130  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_154  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_160  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_161  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_181  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_184  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_195  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_198  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_213  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_225  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_228  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_239  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_242  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_259  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_271  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_282  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_285  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_294  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_297  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_306  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_309  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_320  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_332  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_335  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_345  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_348  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_357  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_360  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_369  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_372  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_385  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_394  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_397  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_408  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_411  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_420  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_423  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_432  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_435  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_451  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_454  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_465  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_468  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_477  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_480  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_489  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_492  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_501  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_504  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_515  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_518  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_522  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_528  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_547  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_550  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_553  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_560  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_563  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_564  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_575  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_578  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_582  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_590  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_593  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_597  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_603  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_607  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_615  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_618  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_621  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_633  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_642  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_645  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_649  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_658  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_662  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_678  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_681  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_685  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_694  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_698  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_714  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_717  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_721  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_729  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_733  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_749  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_752  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_756  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_764  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_768  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_783  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_786  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_798  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_802  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_817  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_820  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_824  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_832  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_836  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_860 -> m71_855  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m71_861 -> m71_39  [color=green, key=1, label=arrangeSql, style=dashed];
m71_861 -> m71_38  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_862 -> m71_56  [color=green, key=1, label=jobId, style=dashed];
m71_863 -> m71_65  [color=green, key=1, label=arrangeSql, style=dashed];
m71_863 -> m71_66  [color=green, key=1, label=arrangeSql, style=dashed];
m71_864 -> m71_75  [color=green, key=1, label=jobId, style=dashed];
m71_865 -> m71_83  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_865 -> m71_84  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_868 -> m71_124  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_869 -> m71_150  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_870 -> m71_150  [color=darkseagreen4, key=1, label=state, style=dashed];
m71_871 -> m71_508  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_872 -> m71_522  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_873 -> m71_553  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_874 -> m71_582  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_875 -> m71_597  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_877 -> m71_621  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_879 -> m71_649  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_881 -> m71_685  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_883 -> m71_721  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_885 -> m71_756  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_887 -> m71_790  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_889 -> m71_824  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m71_886 -> m71_767  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_888 -> m71_801  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_890 -> m71_835  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_866 -> m71_116  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m71_867 -> m71_116  [color=darkseagreen4, key=1, label=state, style=dashed];
m71_878 -> m71_632  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_880 -> m71_661  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_882 -> m71_697  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_884 -> m71_732  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m71_876 -> m71_612  [color=darkseagreen4, key=1, label=items, style=dashed];
m72_8 -> m72_9  [color=red, key=0, style=solid];
m72_9 -> m72_10  [color=red, key=0, style=solid];
m72_9 -> m72_11  [color=red, key=2, style=dotted];
m72_9 -> m72_12  [color=red, key=2, style=dotted];
m72_10 -> m72_8  [color=blue, key=0, style=bold];
m72_0 -> m72_1  [color=red, key=0, style=solid];
m72_0 -> m72_3  [color=red, key=1, label=string, style=dashed];
m72_1 -> m72_2  [color=red, key=0, style=solid];
m72_1 -> m72_3  [color=red, key=0, style=solid];
m72_1 -> m72_6  [color=red, key=2, style=dotted];
m72_3 -> m72_4  [color=red, key=0, style=solid];
m72_2 -> m72_5  [color=red, key=0, style=solid];
m72_2 -> n21  [color=red, key=2, style=dotted];
m72_4 -> m72_5  [color=red, key=0, style=solid];
m72_5 -> m72_0  [color=blue, key=0, style=bold];
m72_12 -> m72_9  [color=red, key=3, label="Parameter variable string queue", style=bold];
m72_13 -> m72_3  [color=red, key=1, label="HangFire.States.ProcessingState", style=dashed];
m72_13 -> m72_4  [color=red, key=1, label="HangFire.States.ProcessingState", style=dashed];
m72_13 -> m72_9  [color=red, key=1, label="HangFire.States.ProcessingState", style=dashed];
m73_122 -> m73_356  [key=0, style=solid];
m73_122 -> m73_363  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_122 -> m73_380  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_122 -> m73_364  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_122 -> m73_365  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats", style=bold];
m73_22 -> m73_23  [key=0, style=solid];
m73_22 -> m73_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_22 -> m73_9  [color=darkorchid, key=3, label="method methodReturn long FetchedCount", style=bold];
m73_23 -> m73_24  [key=0, style=solid];
m73_23 -> m73_9  [key=2, style=dotted];
m73_23 -> m73_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_24 -> m73_22  [color=blue, key=0, style=bold];
m73_191 -> m73_192  [key=0, style=solid];
m73_191 -> m73_195  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_191 -> m73_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.DeletedJobDto> DeletedJobs", style=bold];
m73_192 -> m73_193  [key=0, style=solid];
m73_192 -> m73_9  [key=2, style=dotted];
m73_192 -> m73_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_193 -> m73_191  [color=blue, key=0, style=bold];
m73_222 -> m73_382  [key=0, style=solid];
m73_222 -> m73_384  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m73_222 -> m73_385  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m73_222 -> m73_386  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m73_222 -> m73_387  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_222 -> m73_388  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m73_222 -> m73_391  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m73_222 -> m73_392  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m73_222 -> m73_409  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m73_222 -> m73_394  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m73_222 -> m73_419  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m73_9 -> m73_512  [key=0, style=solid];
m73_9 -> m73_513  [color=darkseagreen4, key=1, label="System.Func<IRedisClient, T>", style=dashed];
m73_9 -> m73_7  [color=red, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_15  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_23  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_29  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_35  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_41  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_47  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_117  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_124  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_167  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_179  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_192  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_248  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_258  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_269  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_276  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_9 -> m73_428  [color=darkorchid, key=3, label="Parameter variable System.Func<IRedisClient, T> action", style=bold];
m73_0 -> m73_1  [color=red, key=0, style=solid];
m73_0 -> m73_3  [color=red, key=1, label=PooledRedisClientManager, style=dashed];
m73_1 -> m73_2  [color=red, key=0, style=solid];
m73_1 -> m73_3  [color=red, key=0, style=solid];
m73_3 -> m73_4  [color=red, key=0, style=solid];
m73_2 -> m73_4  [color=red, key=0, style=solid];
m73_2 -> n21  [color=red, key=2, style=dotted];
m73_4 -> m73_0  [color=blue, key=0, style=bold];
m73_10 -> m73_11  [color=red, key=0, style=solid];
m73_11 -> m73_12  [color=red, key=0, style=solid];
m73_11 -> m73_13  [color=red, key=2, style=dotted];
m73_12 -> m73_10  [color=blue, key=0, style=bold];
m73_18 -> m73_19  [key=0, style=solid];
m73_18 -> m73_20  [key=2, style=dotted];
m73_18 -> m73_21  [key=2, style=dotted];
m73_17 -> m73_18  [key=0, style=solid];
m73_19 -> m73_17  [color=blue, key=0, style=bold];
m73_26 -> m73_27  [key=0, style=solid];
m73_26 -> m73_20  [key=2, style=dotted];
m73_26 -> m73_21  [key=2, style=dotted];
m73_25 -> m73_26  [key=0, style=solid];
m73_27 -> m73_25  [color=blue, key=0, style=bold];
m73_31 -> m73_32  [key=0, style=solid];
m73_32 -> m73_33  [key=0, style=solid];
m73_32 -> m73_13  [key=2, style=dotted];
m73_33 -> m73_31  [color=blue, key=0, style=bold];
m73_37 -> m73_38  [key=0, style=solid];
m73_38 -> m73_39  [key=0, style=solid];
m73_38 -> m73_13  [key=2, style=dotted];
m73_39 -> m73_37  [color=blue, key=0, style=bold];
m73_43 -> m73_44  [key=0, style=solid];
m73_44 -> m73_45  [key=0, style=solid];
m73_44 -> m73_21  [key=2, style=dotted];
m73_45 -> m73_43  [color=blue, key=0, style=bold];
m73_50 -> m73_51  [key=0, style=solid];
m73_50 -> m73_53  [key=2, style=dotted];
m73_49 -> m73_50  [key=0, style=solid];
m73_49 -> m73_51  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_51 -> m73_52  [key=0, style=solid];
m73_51 -> m73_54  [key=2, style=dotted];
m73_51 -> m73_55  [key=2, style=dotted];
m73_51 -> m73_56  [key=2, style=dotted];
m73_51 -> m73_57  [key=2, style=dotted];
m73_51 -> m73_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_51 -> m73_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_52 -> m73_49  [color=blue, key=0, style=bold];
m73_58 -> m73_59  [key=0, style=solid];
m73_64 -> m73_65  [key=0, style=solid];
m73_59 -> m73_60  [key=0, style=solid];
m73_59 -> m73_61  [key=2, style=dotted];
m73_59 -> m73_62  [key=2, style=dotted];
m73_59 -> m73_63  [key=2, style=dotted];
m73_60 -> m73_58  [color=blue, key=0, style=bold];
m73_65 -> m73_66  [key=0, style=solid];
m73_65 -> m73_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>", style=dashed];
m73_66 -> m73_64  [color=blue, key=0, style=bold];
m73_72 -> m73_73  [key=0, style=solid];
m73_72 -> m73_85  [key=2, style=dotted];
m73_72 -> m73_78  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m73_72 -> m73_83  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m73_71 -> m73_72  [key=0, style=solid];
m73_71 -> m73_77  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_77 -> m73_78  [key=0, style=solid];
m73_77 -> m73_88  [key=2, style=dotted];
m73_77 -> m73_80  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m73_77 -> m73_81  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m73_77 -> m73_82  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m73_73 -> m73_74  [key=0, style=solid];
m73_73 -> m73_75  [key=0, style=solid];
m73_78 -> m73_79  [key=0, style=solid];
m73_78 -> m73_82  [key=0, style=solid];
m73_83 -> m73_84  [key=0, style=solid];
m73_83 -> m73_91  [key=2, style=dotted];
m73_83 -> m73_92  [key=2, style=dotted];
m73_83 -> m73_93  [key=2, style=dotted];
m73_83 -> m73_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_74 -> m73_84  [key=0, style=solid];
m73_74 -> m73_54  [key=2, style=dotted];
m73_74 -> m73_86  [key=2, style=dotted];
m73_75 -> m73_76  [key=0, style=solid];
m73_75 -> m73_87  [key=2, style=dotted];
m73_75 -> m73_80  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m73_75 -> m73_100  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m73_75 -> m73_83  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m73_75 -> m73_110  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m73_76 -> m73_77  [key=0, style=solid];
m73_76 -> m73_87  [key=2, style=dotted];
m73_76 -> m73_81  [color=darkseagreen4, key=1, label=states, style=dashed];
m73_76 -> m73_107  [color=darkseagreen4, key=1, label=states, style=dashed];
m73_76 -> m73_83  [color=darkseagreen4, key=1, label=states, style=dashed];
m73_76 -> m73_110  [color=darkseagreen4, key=1, label=states, style=dashed];
m73_80 -> m73_81  [key=0, style=solid];
m73_80 -> m73_89  [key=2, style=dotted];
m73_80 -> m73_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_80 -> m73_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_100 -> m73_101  [key=0, style=solid];
m73_100 -> m73_102  [key=2, style=dotted];
m73_110 -> m73_111  [key=0, style=solid];
m73_110 -> m73_112  [key=2, style=dotted];
m73_110 -> m73_113  [key=2, style=dotted];
m73_110 -> m73_114  [key=2, style=dotted];
m73_110 -> m73_115  [key=2, style=dotted];
m73_110 -> m73_62  [key=2, style=dotted];
m73_110 -> m73_63  [key=2, style=dotted];
m73_81 -> m73_78  [key=0, style=solid];
m73_81 -> m73_89  [key=2, style=dotted];
m73_81 -> m73_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_81 -> m73_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_107 -> m73_108  [key=0, style=solid];
m73_107 -> m73_102  [key=2, style=dotted];
m73_82 -> m73_83  [key=0, style=solid];
m73_82 -> m73_90  [key=2, style=dotted];
m73_79 -> m73_80  [key=0, style=solid];
m73_79 -> m73_95  [color=darkseagreen4, key=1, label=job, style=dashed];
m73_79 -> m73_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m73_79 -> m73_81  [color=darkseagreen4, key=1, label=job, style=dashed];
m73_79 -> m73_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m73_79 -> m73_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m73_95 -> m73_96  [key=0, style=solid];
m73_95 -> m73_97  [key=2, style=dotted];
m73_95 -> m73_98  [key=2, style=dotted];
m73_104 -> m73_105  [key=0, style=solid];
m73_104 -> m73_97  [key=2, style=dotted];
m73_104 -> m73_98  [key=2, style=dotted];
m73_94 -> m73_95  [key=0, style=solid];
m73_99 -> m73_100  [key=0, style=solid];
m73_103 -> m73_104  [key=0, style=solid];
m73_106 -> m73_107  [key=0, style=solid];
m73_84 -> m73_71  [color=blue, key=0, style=bold];
m73_109 -> m73_110  [key=0, style=solid];
m73_96 -> m73_94  [color=blue, key=0, style=bold];
m73_101 -> m73_99  [color=blue, key=0, style=bold];
m73_105 -> m73_103  [color=blue, key=0, style=bold];
m73_108 -> m73_106  [color=blue, key=0, style=bold];
m73_111 -> m73_109  [color=blue, key=0, style=bold];
m73_119 -> m73_120  [key=0, style=solid];
m73_120 -> m73_121  [key=0, style=solid];
m73_120 -> m73_122  [key=2, style=dotted];
m73_121 -> m73_119  [color=blue, key=0, style=bold];
m73_126 -> m73_127  [key=0, style=solid];
m73_127 -> m73_128  [key=0, style=solid];
m73_127 -> m73_122  [key=2, style=dotted];
m73_128 -> m73_126  [color=blue, key=0, style=bold];
m73_132 -> m73_133  [key=0, style=solid];
m73_132 -> m73_138  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_133 -> m73_134  [key=0, style=solid];
m73_133 -> m73_146  [key=2, style=dotted];
m73_133 -> m73_139  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m73_133 -> m73_144  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m73_138 -> m73_139  [key=0, style=solid];
m73_138 -> m73_88  [key=2, style=dotted];
m73_138 -> m73_141  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m73_138 -> m73_142  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m73_138 -> m73_143  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m73_134 -> m73_135  [key=0, style=solid];
m73_134 -> m73_136  [key=0, style=solid];
m73_139 -> m73_140  [key=0, style=solid];
m73_139 -> m73_143  [key=0, style=solid];
m73_144 -> m73_145  [key=0, style=solid];
m73_144 -> m73_92  [key=2, style=dotted];
m73_144 -> m73_93  [key=2, style=dotted];
m73_144 -> m73_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_135 -> m73_145  [key=0, style=solid];
m73_135 -> m73_86  [key=2, style=dotted];
m73_136 -> m73_137  [key=0, style=solid];
m73_136 -> m73_87  [key=2, style=dotted];
m73_136 -> m73_141  [color=darkseagreen4, key=1, label=servers, style=dashed];
m73_136 -> m73_151  [color=darkseagreen4, key=1, label=servers, style=dashed];
m73_136 -> m73_144  [color=darkseagreen4, key=1, label=servers, style=dashed];
m73_136 -> m73_161  [color=darkseagreen4, key=1, label=servers, style=dashed];
m73_137 -> m73_138  [key=0, style=solid];
m73_137 -> m73_87  [key=2, style=dotted];
m73_137 -> m73_142  [color=darkseagreen4, key=1, label=queues, style=dashed];
m73_137 -> m73_158  [color=darkseagreen4, key=1, label=queues, style=dashed];
m73_137 -> m73_144  [color=darkseagreen4, key=1, label=queues, style=dashed];
m73_137 -> m73_161  [color=darkseagreen4, key=1, label=queues, style=dashed];
m73_141 -> m73_142  [key=0, style=solid];
m73_141 -> m73_89  [key=2, style=dotted];
m73_141 -> m73_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_141 -> m73_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_151 -> m73_152  [key=0, style=solid];
m73_151 -> m73_102  [key=2, style=dotted];
m73_161 -> m73_162  [key=0, style=solid];
m73_161 -> m73_163  [key=2, style=dotted];
m73_161 -> m73_164  [key=2, style=dotted];
m73_161 -> m73_165  [key=2, style=dotted];
m73_161 -> m73_62  [key=2, style=dotted];
m73_142 -> m73_139  [key=0, style=solid];
m73_142 -> m73_89  [key=2, style=dotted];
m73_142 -> m73_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_142 -> m73_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_158 -> m73_159  [key=0, style=solid];
m73_158 -> m73_102  [key=2, style=dotted];
m73_143 -> m73_144  [key=0, style=solid];
m73_143 -> m73_90  [key=2, style=dotted];
m73_140 -> m73_141  [key=0, style=solid];
m73_140 -> m73_148  [color=darkseagreen4, key=1, label=name, style=dashed];
m73_140 -> m73_151  [color=darkseagreen4, key=1, label=name, style=dashed];
m73_140 -> m73_142  [color=darkseagreen4, key=1, label=name, style=dashed];
m73_140 -> m73_154  [color=darkseagreen4, key=1, label=name, style=dashed];
m73_140 -> m73_158  [color=darkseagreen4, key=1, label=name, style=dashed];
m73_148 -> m73_149  [key=0, style=solid];
m73_148 -> m73_97  [key=2, style=dotted];
m73_148 -> m73_98  [key=2, style=dotted];
m73_154 -> m73_155  [key=0, style=solid];
m73_154 -> m73_97  [key=2, style=dotted];
m73_154 -> m73_156  [key=2, style=dotted];
m73_147 -> m73_148  [key=0, style=solid];
m73_150 -> m73_151  [key=0, style=solid];
m73_153 -> m73_154  [key=0, style=solid];
m73_157 -> m73_158  [key=0, style=solid];
m73_145 -> m73_132  [color=blue, key=0, style=bold];
m73_160 -> m73_161  [key=0, style=solid];
m73_149 -> m73_147  [color=blue, key=0, style=bold];
m73_152 -> m73_150  [color=blue, key=0, style=bold];
m73_155 -> m73_153  [color=blue, key=0, style=bold];
m73_159 -> m73_157  [color=blue, key=0, style=bold];
m73_162 -> m73_160  [color=blue, key=0, style=bold];
m73_170 -> m73_171  [key=0, style=solid];
m73_170 -> m73_173  [key=2, style=dotted];
m73_169 -> m73_170  [key=0, style=solid];
m73_169 -> m73_171  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_171 -> m73_172  [key=0, style=solid];
m73_171 -> m73_55  [key=2, style=dotted];
m73_171 -> m73_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_172 -> m73_169  [color=blue, key=0, style=bold];
m73_174 -> m73_175  [key=0, style=solid];
m73_175 -> m73_176  [key=0, style=solid];
m73_175 -> m73_177  [key=2, style=dotted];
m73_175 -> m73_62  [key=2, style=dotted];
m73_175 -> m73_63  [key=2, style=dotted];
m73_176 -> m73_174  [color=blue, key=0, style=bold];
m73_182 -> m73_183  [key=0, style=solid];
m73_182 -> m73_185  [key=2, style=dotted];
m73_181 -> m73_182  [key=0, style=solid];
m73_181 -> m73_183  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_183 -> m73_184  [key=0, style=solid];
m73_183 -> m73_55  [key=2, style=dotted];
m73_183 -> m73_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_184 -> m73_181  [color=blue, key=0, style=bold];
m73_186 -> m73_187  [key=0, style=solid];
m73_187 -> m73_188  [key=0, style=solid];
m73_187 -> m73_189  [key=2, style=dotted];
m73_187 -> m73_62  [key=2, style=dotted];
m73_187 -> m73_190  [key=2, style=dotted];
m73_187 -> m73_63  [key=2, style=dotted];
m73_188 -> m73_186  [color=blue, key=0, style=bold];
m73_195 -> m73_196  [key=0, style=solid];
m73_195 -> m73_185  [key=2, style=dotted];
m73_194 -> m73_195  [key=0, style=solid];
m73_194 -> m73_196  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_196 -> m73_197  [key=0, style=solid];
m73_196 -> m73_55  [key=2, style=dotted];
m73_196 -> m73_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_197 -> m73_194  [color=blue, key=0, style=bold];
m73_198 -> m73_199  [key=0, style=solid];
m73_199 -> m73_200  [key=0, style=solid];
m73_199 -> m73_201  [key=2, style=dotted];
m73_199 -> m73_62  [key=2, style=dotted];
m73_199 -> m73_63  [key=2, style=dotted];
m73_200 -> m73_198  [color=blue, key=0, style=bold];
m73_205 -> m73_206  [key=0, style=solid];
m73_205 -> m73_212  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_205 -> m73_217  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m73_206 -> m73_207  [key=0, style=solid];
m73_206 -> m73_146  [key=2, style=dotted];
m73_206 -> m73_208  [color=darkseagreen4, key=1, label=queues, style=dashed];
m73_212 -> m73_213  [key=0, style=solid];
m73_212 -> m73_88  [key=2, style=dotted];
m73_212 -> m73_214  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m73_212 -> m73_215  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m73_212 -> m73_216  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m73_217 -> m73_218  [key=0, style=solid];
m73_217 -> m73_222  [key=2, style=dotted];
m73_217 -> m73_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_207 -> m73_208  [key=0, style=solid];
m73_207 -> m73_221  [key=2, style=dotted];
m73_207 -> m73_218  [color=darkseagreen4, key=1, label=result, style=dashed];
m73_207 -> m73_219  [color=darkseagreen4, key=1, label=result, style=dashed];
m73_208 -> m73_209  [key=0, style=solid];
m73_208 -> m73_219  [key=0, style=solid];
m73_208 -> m73_213  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_208 -> m73_226  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_208 -> m73_214  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_208 -> m73_232  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_208 -> m73_215  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_208 -> m73_238  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_208 -> m73_218  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_218 -> m73_208  [key=0, style=solid];
m73_218 -> m73_223  [key=2, style=dotted];
m73_218 -> m73_224  [key=2, style=dotted];
m73_219 -> m73_220  [key=0, style=solid];
m73_209 -> m73_210  [key=0, style=solid];
m73_213 -> m73_214  [key=0, style=solid];
m73_213 -> m73_89  [key=2, style=dotted];
m73_213 -> m73_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_213 -> m73_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_213 -> m73_217  [color=darkseagreen4, key=1, label=firstJobIds, style=dashed];
m73_226 -> m73_227  [key=0, style=solid];
m73_226 -> m73_97  [key=2, style=dotted];
m73_226 -> m73_185  [key=2, style=dotted];
m73_214 -> m73_215  [key=0, style=solid];
m73_214 -> m73_89  [key=2, style=dotted];
m73_214 -> m73_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_214 -> m73_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_214 -> m73_218  [color=darkseagreen4, key=1, label=length, style=dashed];
m73_232 -> m73_233  [key=0, style=solid];
m73_232 -> m73_97  [key=2, style=dotted];
m73_232 -> m73_21  [key=2, style=dotted];
m73_215 -> m73_216  [key=0, style=solid];
m73_215 -> m73_89  [key=2, style=dotted];
m73_215 -> m73_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_215 -> m73_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_215 -> m73_218  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m73_238 -> m73_239  [key=0, style=solid];
m73_238 -> m73_97  [key=2, style=dotted];
m73_238 -> m73_21  [key=2, style=dotted];
m73_210 -> m73_211  [key=0, style=solid];
m73_211 -> m73_212  [key=0, style=solid];
m73_216 -> m73_217  [key=0, style=solid];
m73_216 -> m73_90  [key=2, style=dotted];
m73_225 -> m73_226  [key=0, style=solid];
m73_228 -> m73_229  [key=0, style=solid];
m73_231 -> m73_232  [key=0, style=solid];
m73_234 -> m73_235  [key=0, style=solid];
m73_237 -> m73_238  [key=0, style=solid];
m73_240 -> m73_241  [key=0, style=solid];
m73_243 -> m73_244  [key=0, style=solid];
m73_220 -> m73_205  [color=blue, key=0, style=bold];
m73_227 -> m73_225  [color=blue, key=0, style=bold];
m73_229 -> m73_230  [key=0, style=solid];
m73_230 -> m73_228  [color=blue, key=0, style=bold];
m73_233 -> m73_231  [color=blue, key=0, style=bold];
m73_235 -> m73_236  [key=0, style=solid];
m73_236 -> m73_234  [color=blue, key=0, style=bold];
m73_239 -> m73_237  [color=blue, key=0, style=bold];
m73_241 -> m73_242  [key=0, style=solid];
m73_115 -> m73_517  [key=0, style=solid];
m73_115 -> m73_203  [color=darkorchid, key=3, label="method methodReturn HangFire.Common.Job TryToGetJob", style=bold];
m73_166 -> m73_167  [key=0, style=solid];
m73_166 -> m73_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_166 -> m73_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FailedJobDto> FailedJobs", style=bold];
m73_167 -> m73_168  [key=0, style=solid];
m73_167 -> m73_9  [key=2, style=dotted];
m73_167 -> m73_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_168 -> m73_166  [color=blue, key=0, style=bold];
m73_129 -> m73_130  [key=0, style=solid];
m73_130 -> m73_131  [key=0, style=solid];
m73_130 -> m73_70  [key=2, style=dotted];
m73_130 -> m73_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_130 -> m73_130  [color=darkorchid, key=3, label="Local variable var name", style=bold];
m73_131 -> m73_129  [color=blue, key=0, style=bold];
m73_40 -> m73_41  [key=0, style=solid];
m73_40 -> m73_9  [color=darkorchid, key=3, label="method methodReturn long DeletedListCount", style=bold];
m73_41 -> m73_42  [key=0, style=solid];
m73_41 -> m73_9  [key=2, style=dotted];
m73_41 -> m73_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_42 -> m73_40  [color=blue, key=0, style=bold];
m73_178 -> m73_179  [key=0, style=solid];
m73_178 -> m73_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_178 -> m73_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.SucceededJobDto> SucceededJobs", style=bold];
m73_179 -> m73_180  [key=0, style=solid];
m73_179 -> m73_9  [key=2, style=dotted];
m73_179 -> m73_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_180 -> m73_178  [color=blue, key=0, style=bold];
m73_116 -> m73_117  [key=0, style=solid];
m73_116 -> m73_9  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount", style=bold];
m73_117 -> m73_118  [key=0, style=solid];
m73_117 -> m73_9  [key=2, style=dotted];
m73_117 -> m73_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_118 -> m73_116  [color=blue, key=0, style=bold];
m73_28 -> m73_29  [key=0, style=solid];
m73_28 -> m73_9  [color=darkorchid, key=3, label="method methodReturn long FailedCount", style=bold];
m73_29 -> m73_30  [key=0, style=solid];
m73_29 -> m73_9  [key=2, style=dotted];
m73_29 -> m73_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_30 -> m73_28  [color=blue, key=0, style=bold];
m73_46 -> m73_47  [key=0, style=solid];
m73_46 -> m73_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_46 -> m73_9  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs", style=bold];
m73_47 -> m73_48  [key=0, style=solid];
m73_47 -> m73_9  [key=2, style=dotted];
m73_47 -> m73_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_48 -> m73_46  [color=blue, key=0, style=bold];
m73_34 -> m73_35  [key=0, style=solid];
m73_34 -> m73_9  [color=darkorchid, key=3, label="method methodReturn long ProcessingCount", style=bold];
m73_35 -> m73_36  [key=0, style=solid];
m73_35 -> m73_9  [key=2, style=dotted];
m73_35 -> m73_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_36 -> m73_34  [color=blue, key=0, style=bold];
m73_123 -> m73_124  [key=0, style=solid];
m73_123 -> m73_9  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount", style=bold];
m73_124 -> m73_125  [key=0, style=solid];
m73_124 -> m73_9  [key=2, style=dotted];
m73_124 -> m73_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_125 -> m73_123  [color=blue, key=0, style=bold];
m73_202 -> m73_203  [key=0, style=solid];
m73_203 -> m73_204  [key=0, style=solid];
m73_203 -> m73_70  [key=2, style=dotted];
m73_203 -> m73_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_203 -> m73_203  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> ", style=bold];
m73_203 -> m73_222  [color=darkorchid, key=3, label="Local variable HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.EnqueuedJobDto> jobs", style=bold];
m73_204 -> m73_202  [color=blue, key=0, style=bold];
m73_67 -> m73_68  [key=0, style=solid];
m73_67 -> m73_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_68 -> m73_69  [key=0, style=solid];
m73_68 -> m73_70  [key=2, style=dotted];
m73_68 -> m73_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_68 -> m73_68  [color=darkorchid, key=3, label="Local variable var job", style=bold];
m73_69 -> m73_67  [color=blue, key=0, style=bold];
m73_14 -> m73_15  [key=0, style=solid];
m73_14 -> m73_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_14 -> m73_9  [color=darkorchid, key=3, label="method methodReturn long EnqueuedCount", style=bold];
m73_15 -> m73_16  [key=0, style=solid];
m73_15 -> m73_9  [key=2, style=dotted];
m73_15 -> m73_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_16 -> m73_14  [color=blue, key=0, style=bold];
m73_6 -> m73_7  [color=red, key=0, style=solid];
m73_6 -> m73_9  [color=darkorchid, key=3, label="method methodReturn long ScheduledCount", style=bold];
m73_7 -> m73_8  [color=red, key=0, style=solid];
m73_7 -> m73_9  [color=red, key=2, style=dotted];
m73_7 -> m73_10  [color=red, key=1, label="lambda expression", style=dashed];
m73_8 -> m73_6  [color=blue, key=0, style=bold];
m73_523 -> m73_3  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_7  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_29  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_35  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_41  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_47  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_51  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_68  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_117  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_120  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_124  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_127  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_130  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_167  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_171  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_179  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_183  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_192  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_196  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_203  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_217  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_248  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_252  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_258  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_262  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_269  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_272  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_276  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_279  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_282  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_304  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_428  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_434  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_523 -> m73_512  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m73_524 -> m73_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_525 -> m73_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_526 -> m73_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_527 -> m73_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_528 -> m73_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_529 -> m73_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_530 -> m73_95  [color=darkseagreen4, key=1, label=job, style=dashed];
m73_530 -> m73_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m73_530 -> m73_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m73_530 -> m73_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m73_531 -> m73_100  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m73_531 -> m73_110  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m73_532 -> m73_107  [color=darkseagreen4, key=1, label=states, style=dashed];
m73_532 -> m73_110  [color=darkseagreen4, key=1, label=states, style=dashed];
m73_533 -> m73_148  [color=darkseagreen4, key=1, label=name, style=dashed];
m73_533 -> m73_151  [color=darkseagreen4, key=1, label=name, style=dashed];
m73_533 -> m73_154  [color=darkseagreen4, key=1, label=name, style=dashed];
m73_533 -> m73_158  [color=darkseagreen4, key=1, label=name, style=dashed];
m73_534 -> m73_151  [color=darkseagreen4, key=1, label=servers, style=dashed];
m73_534 -> m73_161  [color=darkseagreen4, key=1, label=servers, style=dashed];
m73_535 -> m73_158  [color=darkseagreen4, key=1, label=queues, style=dashed];
m73_535 -> m73_161  [color=darkseagreen4, key=1, label=queues, style=dashed];
m73_536 -> m73_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_537 -> m73_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_538 -> m73_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_539 -> m73_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_540 -> m73_195  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_541 -> m73_195  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_542 -> m73_226  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_542 -> m73_232  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_542 -> m73_238  [color=darkseagreen4, key=1, label=queue, style=dashed];
m73_543 -> m73_251  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_544 -> m73_251  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_545 -> m73_251  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_546 -> m73_261  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_547 -> m73_261  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_548 -> m73_261  [color=darkseagreen4, key=1, label=int, style=dashed];
m73_549 -> m73_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_549 -> m73_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_550 -> m73_318  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m73_551 -> m73_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_552 -> m73_380  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_553 -> m73_399  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m73_553 -> m73_416  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m73_554 -> m73_399  [color=darkseagreen4, key=1, label=id, style=dashed];
m73_554 -> m73_404  [color=darkseagreen4, key=1, label=id, style=dashed];
m73_554 -> m73_405  [color=darkseagreen4, key=1, label=id, style=dashed];
m73_554 -> m73_409  [color=darkseagreen4, key=1, label=id, style=dashed];
m73_554 -> m73_412  [color=darkseagreen4, key=1, label=id, style=dashed];
m73_554 -> m73_413  [color=darkseagreen4, key=1, label=id, style=dashed];
m73_555 -> m73_404  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m73_555 -> m73_405  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m73_555 -> m73_416  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m73_556 -> m73_409  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m73_557 -> m73_412  [color=darkseagreen4, key=1, label=states, style=dashed];
m73_557 -> m73_413  [color=darkseagreen4, key=1, label=states, style=dashed];
m73_557 -> m73_416  [color=darkseagreen4, key=1, label=states, style=dashed];
m73_558 -> m73_419  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m73_559 -> m73_460  [color=darkseagreen4, key=1, label=stats, style=dashed];
m73_559 -> m73_466  [color=darkseagreen4, key=1, label=stats, style=dashed];
m73_559 -> m73_472  [color=darkseagreen4, key=1, label=stats, style=dashed];
m73_559 -> m73_478  [color=darkseagreen4, key=1, label=stats, style=dashed];
m73_559 -> m73_485  [color=darkseagreen4, key=1, label=stats, style=dashed];
m73_559 -> m73_492  [color=darkseagreen4, key=1, label=stats, style=dashed];
m73_559 -> m73_498  [color=darkseagreen4, key=1, label=stats, style=dashed];
m73_559 -> m73_504  [color=darkseagreen4, key=1, label=stats, style=dashed];
m73_559 -> m73_510  [color=darkseagreen4, key=1, label=stats, style=dashed];
m73_560 -> m73_507  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m74_0 -> m74_1  [key=0, style=solid];
m74_3 -> m74_4  [color=green, key=0, style=solid];
m74_3 -> m74_8  [color=green, key=2, style=dotted];
m74_3 -> m74_0  [color=blue, key=0, style=bold];
m74_2 -> m74_3  [color=green, key=0, style=solid];
m74_2 -> m74_6  [key=2, style=dotted];
m74_2 -> m74_7  [key=2, style=dotted];
m74_1 -> m74_2  [key=0, style=solid];
m74_1 -> m74_5  [key=2, style=dotted];
m74_4 -> m74_0  [color=blue, key=0, style=bold];
m74_4 -> m74_5  [key=0, style=solid];
m74_4 -> m74_8  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m74_4 -> m74_11  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m74_4 -> m74_12  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m74_4 -> m74_14  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m74_4 -> m74_16  [color=red, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m74_14 -> m74_15  [key=0, style=solid];
m74_14 -> m74_17  [key=0, style=solid];
m74_14 -> m74_24  [key=2, style=dotted];
m74_16 -> m74_0  [key=2, style=dotted];
m74_16 -> m74_17  [color=red, key=0, style=solid];
m74_16 -> m74_25  [color=red, key=2, style=dotted];
m74_15 -> m74_16  [color=red, key=0, style=solid];
m74_15 -> m74_17  [key=0, style=solid];
m74_17 -> m74_14  [color=blue, key=0, style=bold];
m74_17 -> m74_4  [color=blue, key=0, style=bold];
m74_23 -> m74_24  [key=0, style=solid];
m74_23 -> m74_25  [key=2, style=dotted];
m74_22 -> m74_23  [key=0, style=solid];
m74_19 -> m74_26  [key=0, style=solid];
m74_19 -> m74_27  [color=darkseagreen4, key=1, label=long, style=dashed];
m74_19 -> m74_8  [color=darkorchid, key=3, label="Parameter variable long retryCount", style=bold];
m74_26 -> m74_27  [key=0, style=solid];
m74_26 -> m74_29  [key=2, style=dotted];
m74_27 -> m74_28  [key=0, style=solid];
m74_27 -> m74_30  [key=2, style=dotted];
m74_27 -> m74_31  [key=2, style=dotted];
m74_27 -> m74_32  [key=2, style=dotted];
m74_27 -> m74_29  [key=2, style=dotted];
m74_28 -> m74_19  [color=blue, key=0, style=bold];
m74_28 -> m74_26  [color=blue, key=0, style=bold];
m74_30 -> m74_31  [key=0, style=solid];
m74_99 -> m74_100  [color=green, key=0, style=solid];
m74_100 -> m74_101  [color=green, key=0, style=solid];
m74_100 -> m74_42  [color=green, key=2, style=dotted];
m74_101 -> m74_102  [color=green, key=0, style=solid];
m74_101 -> m74_22  [color=green, key=2, style=dotted];
m74_102 -> m74_103  [color=green, key=0, style=solid];
m74_102 -> m74_30  [key=2, style=dotted];
m74_103 -> m74_104  [color=green, key=0, style=solid];
m74_103 -> m74_63  [color=green, key=2, style=dotted];
m74_104 -> m74_89  [key=2, style=dotted];
m74_104 -> m74_105  [key=0, style=solid];
m74_106 -> m74_107  [color=green, key=0, style=solid];
m74_106 -> m74_26  [color=green, key=2, style=dotted];
m74_105 -> m74_106  [color=green, key=0, style=solid];
m74_105 -> m74_43  [key=2, style=dotted];
m74_107 -> m74_99  [color=blue, key=0, style=bold];
m74_5 -> m74_6  [key=0, style=solid];
m74_5 -> m74_14  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m74_5 -> m74_16  [color=red, key=1, label=failedState, style=dashed];
m74_9 -> m74_10  [color=green, key=0, style=solid];
m74_9 -> m74_15  [key=0, style=solid];
m74_10 -> m74_11  [color=green, key=0, style=solid];
m74_10 -> m74_13  [color=green, key=2, style=dotted];
m74_10 -> m74_19  [key=2, style=dotted];
m74_10 -> m74_20  [key=2, style=dotted];
m74_10 -> m74_12  [color=darkseagreen4, key=1, label=delay, style=dashed];
m74_10 -> m74_14  [color=darkseagreen4, key=1, label=delay, style=dashed];
m74_11 -> m74_12  [key=0, style=solid];
m74_11 -> m74_21  [key=2, style=dotted];
m74_12 -> m74_9  [color=blue, key=0, style=bold];
m74_12 -> m74_13  [key=0, style=solid];
m74_12 -> m74_22  [key=2, style=dotted];
m74_12 -> m74_23  [key=2, style=dotted];
m74_31 -> m74_32  [key=0, style=solid];
m74_31 -> m74_34  [key=2, style=dotted];
m74_32 -> m74_33  [key=0, style=solid];
m74_32 -> m74_34  [key=2, style=dotted];
m74_33 -> m74_30  [color=blue, key=0, style=bold];
m74_33 -> m74_1  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m74_33 -> m74_2  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m74_33 -> m74_9  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m74_33 -> m74_12  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m74_33 -> m74_13  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m74_33 -> m74_14  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m74_33 -> m74_15  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m74_13 -> m74_14  [key=0, style=solid];
m74_13 -> m74_17  [key=0, style=solid];
m74_44 -> m74_45  [key=0, style=solid];
m74_49 -> m74_50  [color=green, key=0, style=solid];
m74_49 -> m74_54  [color=green, key=2, style=dotted];
m74_48 -> m74_49  [color=green, key=0, style=solid];
m74_48 -> m74_53  [key=2, style=dotted];
m74_48 -> m74_50  [color=darkseagreen4, key=1, label=table1, style=dashed];
m74_50 -> m74_51  [key=0, style=solid];
m74_50 -> m74_43  [key=2, style=dotted];
m74_47 -> m74_48  [key=0, style=solid];
m74_47 -> m74_30  [key=2, style=dotted];
m74_51 -> m74_26  [key=2, style=dotted];
m74_51 -> m74_52  [key=0, style=solid];
m74_45 -> m74_42  [key=2, style=dotted];
m74_45 -> m74_46  [key=0, style=solid];
m74_46 -> m74_22  [key=2, style=dotted];
m74_46 -> m74_47  [key=0, style=solid];
m74_52 -> m74_44  [color=blue, key=0, style=bold];
m74_7 -> m74_17  [color=red, key=0, style=solid];
m74_72 -> m74_73  [key=0, style=solid];
m74_73 -> m74_42  [key=2, style=dotted];
m74_73 -> m74_74  [key=0, style=solid];
m74_74 -> m74_22  [key=2, style=dotted];
m74_74 -> m74_75  [key=0, style=solid];
m74_75 -> m74_30  [key=2, style=dotted];
m74_75 -> m74_76  [key=0, style=solid];
m74_78 -> m74_26  [key=2, style=dotted];
m74_78 -> m74_79  [key=0, style=solid];
m74_76 -> m74_63  [key=2, style=dotted];
m74_76 -> m74_77  [key=0, style=solid];
m74_77 -> m74_43  [key=2, style=dotted];
m74_77 -> m74_78  [key=0, style=solid];
m74_79 -> m74_72  [color=blue, key=0, style=bold];
m74_90 -> m74_91  [color=green, key=0, style=solid];
m74_91 -> m74_92  [color=green, key=0, style=solid];
m74_91 -> m74_42  [color=green, key=2, style=dotted];
m74_92 -> m74_93  [color=green, key=0, style=solid];
m74_92 -> m74_22  [color=green, key=2, style=dotted];
m74_93 -> m74_94  [color=green, key=0, style=solid];
m74_93 -> m74_30  [color=green, key=2, style=dotted];
m74_94 -> m74_95  [color=green, key=0, style=solid];
m74_94 -> m74_63  [color=green, key=2, style=dotted];
m74_95 -> m74_96  [color=green, key=0, style=solid];
m74_95 -> m74_89  [color=green, key=2, style=dotted];
m74_96 -> m74_97  [color=green, key=0, style=solid];
m74_96 -> m74_43  [color=green, key=2, style=dotted];
m74_97 -> m74_98  [color=green, key=0, style=solid];
m74_97 -> m74_26  [color=green, key=2, style=dotted];
m74_98 -> m74_90  [color=blue, key=0, style=bold];
m74_80 -> m74_81  [key=0, style=solid];
m74_81 -> m74_42  [key=2, style=dotted];
m74_81 -> m74_82  [key=0, style=solid];
m74_82 -> m74_22  [key=2, style=dotted];
m74_82 -> m74_83  [key=0, style=solid];
m74_83 -> m74_30  [key=2, style=dotted];
m74_83 -> m74_84  [key=0, style=solid];
m74_87 -> m74_26  [key=2, style=dotted];
m74_87 -> m74_88  [key=0, style=solid];
m74_84 -> m74_63  [key=2, style=dotted];
m74_84 -> m74_85  [key=0, style=solid];
m74_85 -> m74_89  [key=2, style=dotted];
m74_85 -> m74_86  [key=0, style=solid];
m74_86 -> m74_43  [key=2, style=dotted];
m74_86 -> m74_87  [key=0, style=solid];
m74_88 -> m74_80  [color=blue, key=0, style=bold];
m74_55 -> m74_56  [key=0, style=solid];
m74_56 -> m74_42  [key=2, style=dotted];
m74_56 -> m74_57  [key=0, style=solid];
m74_57 -> m74_22  [key=2, style=dotted];
m74_57 -> m74_58  [key=0, style=solid];
m74_58 -> m74_30  [key=2, style=dotted];
m74_58 -> m74_59  [key=0, style=solid];
m74_61 -> m74_26  [key=2, style=dotted];
m74_61 -> m74_62  [key=0, style=solid];
m74_59 -> m74_63  [key=2, style=dotted];
m74_59 -> m74_60  [key=0, style=solid];
m74_60 -> m74_43  [key=2, style=dotted];
m74_60 -> m74_61  [key=0, style=solid];
m74_62 -> m74_55  [color=blue, key=0, style=bold];
m74_35 -> m74_36  [key=0, style=solid];
m74_36 -> m74_42  [key=2, style=dotted];
m74_36 -> m74_37  [key=0, style=solid];
m74_37 -> m74_22  [key=2, style=dotted];
m74_37 -> m74_38  [key=0, style=solid];
m74_38 -> m74_30  [key=2, style=dotted];
m74_38 -> m74_39  [key=0, style=solid];
m74_40 -> m74_26  [key=2, style=dotted];
m74_40 -> m74_41  [key=0, style=solid];
m74_39 -> m74_43  [key=2, style=dotted];
m74_39 -> m74_40  [key=0, style=solid];
m74_41 -> m74_35  [color=blue, key=0, style=bold];
m74_64 -> m74_65  [color=green, key=0, style=solid];
m74_65 -> m74_66  [color=green, key=0, style=solid];
m74_65 -> m74_42  [color=green, key=2, style=dotted];
m74_66 -> m74_67  [key=0, style=solid];
m74_66 -> m74_22  [key=2, style=dotted];
m74_70 -> m74_71  [color=green, key=0, style=solid];
m74_70 -> m74_26  [color=green, key=2, style=dotted];
m74_69 -> m74_70  [color=green, key=0, style=solid];
m74_69 -> m74_43  [key=2, style=dotted];
m74_67 -> m74_30  [key=2, style=dotted];
m74_67 -> m74_68  [key=0, style=solid];
m74_68 -> m74_69  [key=0, style=solid];
m74_68 -> m74_63  [key=2, style=dotted];
m74_71 -> m74_64  [color=blue, key=0, style=bold];
m74_24 -> m74_22  [color=blue, key=0, style=bold];
m74_6 -> m74_7  [color=red, key=0, style=solid];
m74_6 -> m74_8  [key=0, style=solid];
m74_8 -> m74_9  [key=0, style=solid];
m74_8 -> m74_18  [key=2, style=dotted];
m74_8 -> m74_10  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m74_8 -> m74_11  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m74_8 -> m74_12  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m74_8 -> m74_14  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m74_108 -> m74_70  [color=green, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_92  [color=green, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_93  [color=green, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_97  [color=green, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_101  [color=green, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_106  [color=green, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_66  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_37  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_38  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_40  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_46  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_51  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_57  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_58  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_61  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_67  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_74  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_75  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_78  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_82  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_83  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_87  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m74_108 -> m74_102  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m75_0 -> m75_1  [key=0, style=solid];
m75_1 -> m75_2  [color=red, key=0, style=solid];
m75_1 -> m75_91  [key=2, style=dotted];
m75_2 -> m75_3  [color=red, key=0, style=solid];
m75_2 -> m75_92  [color=red, key=2, style=dotted];
m75_3 -> m75_4  [key=0, style=solid];
m75_4 -> m75_5  [key=0, style=solid];
m75_4 -> m75_93  [key=2, style=dotted];
m75_4 -> m75_94  [key=2, style=dotted];
m75_4 -> m75_11  [color=darkseagreen4, key=1, label=from, style=dashed];
m75_5 -> m75_6  [key=0, style=solid];
m75_5 -> m75_93  [key=2, style=dotted];
m75_5 -> m75_94  [key=2, style=dotted];
m75_5 -> m75_11  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m75_11 -> m75_12  [key=0, style=solid];
m75_11 -> m75_96  [key=2, style=dotted];
m75_11 -> m75_97  [key=2, style=dotted];
m75_11 -> m75_14  [color=green, key=1, label=pager, style=dashed];
m75_11 -> m75_40  [color=darkseagreen4, key=1, label=pager, style=dashed];
m75_11 -> m75_87  [color=darkseagreen4, key=1, label=pager, style=dashed];
m75_6 -> m75_7  [key=0, style=solid];
m75_6 -> m75_14  [color=green, key=1, label=pager, style=dashed];
m75_6 -> m75_40  [color=darkseagreen4, key=1, label=pager, style=dashed];
m75_6 -> m75_87  [color=darkseagreen4, key=1, label=pager, style=dashed];
m75_6 -> m75_6  [color=darkorchid, key=3, label="Local variable Hangfire.Dashboard.Pager pager", style=bold];
m75_7 -> m75_8  [key=0, style=solid];
m75_7 -> m75_21  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m75_7 -> m75_54  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m75_7 -> m75_6  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.List<string> jobIds", style=bold];
m75_14 -> m75_15  [color=green, key=0, style=solid];
m75_14 -> m75_18  [color=green, key=0, style=solid];
m75_40 -> m75_41  [color=green, key=0, style=solid];
m75_40 -> m75_103  [key=2, style=dotted];
m75_40 -> m75_102  [key=2, style=dotted];
m75_87 -> m75_88  [key=0, style=solid];
m75_87 -> m75_112  [key=2, style=dotted];
m75_87 -> m75_102  [key=2, style=dotted];
m75_8 -> m75_9  [key=0, style=solid];
m75_8 -> m75_95  [key=2, style=dotted];
m75_21 -> m75_22  [color=red, key=0, style=solid];
m75_21 -> m75_25  [color=green, key=0, style=solid];
m75_54 -> m75_55  [color=green, key=0, style=solid];
m75_54 -> m75_86  [color=red, key=0, style=solid];
m75_54 -> m75_58  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m75_54 -> m75_59  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m75_54 -> m75_63  [color=green, key=1, label=jobId, style=dashed];
m75_54 -> m75_65  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m75_54 -> m75_73  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m75_9 -> m75_10  [key=0, style=solid];
m75_9 -> m75_11  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m75_9 -> m75_12  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m75_10 -> m75_11  [key=0, style=solid];
m75_10 -> m75_13  [key=0, style=solid];
m75_12 -> m75_13  [key=0, style=solid];
m75_12 -> m75_98  [key=2, style=dotted];
m75_12 -> m75_21  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m75_12 -> m75_54  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m75_13 -> m75_14  [color=green, key=0, style=solid];
m75_13 -> m75_91  [key=2, style=dotted];
m75_15 -> m75_16  [color=green, key=0, style=solid];
m75_15 -> m75_91  [color=green, key=2, style=dotted];
m75_18 -> m75_19  [color=red, key=0, style=solid];
m75_18 -> m75_91  [color=red, key=2, style=dotted];
m75_16 -> m75_17  [color=green, key=0, style=solid];
m75_16 -> m75_99  [color=green, key=2, style=dotted];
m75_16 -> m75_100  [color=green, key=2, style=dotted];
m75_16 -> m75_101  [color=green, key=2, style=dotted];
m75_16 -> m75_102  [color=green, key=2, style=dotted];
m75_17 -> m75_90  [color=red, key=0, style=solid];
m75_17 -> m75_91  [color=red, key=2, style=dotted];
m75_19 -> m75_20  [color=red, key=0, style=solid];
m75_19 -> m75_102  [color=red, key=2, style=dotted];
m75_20 -> m75_21  [color=red, key=0, style=solid];
m75_20 -> m75_91  [color=red, key=2, style=dotted];
m75_22 -> m75_23  [color=red, key=0, style=solid];
m75_22 -> m75_91  [color=red, key=2, style=dotted];
m75_25 -> m75_26  [color=green, key=0, style=solid];
m75_25 -> m75_91  [color=green, key=2, style=dotted];
m75_23 -> m75_24  [color=red, key=0, style=solid];
m75_23 -> m75_102  [color=red, key=2, style=dotted];
m75_24 -> m75_89  [color=red, key=0, style=solid];
m75_24 -> m75_91  [color=red, key=2, style=dotted];
m75_26 -> m75_27  [color=green, key=0, style=solid];
m75_26 -> m75_99  [color=green, key=2, style=dotted];
m75_26 -> m75_102  [color=green, key=2, style=dotted];
m75_27 -> m75_28  [color=green, key=0, style=solid];
m75_27 -> m75_91  [color=red, key=2, style=dotted];
m75_28 -> m75_29  [color=green, key=0, style=solid];
m75_28 -> m75_102  [color=green, key=2, style=dotted];
m75_29 -> m75_30  [color=red, key=0, style=solid];
m75_29 -> m75_91  [color=red, key=2, style=dotted];
m75_30 -> m75_31  [color=green, key=0, style=solid];
m75_30 -> m75_102  [color=red, key=2, style=dotted];
m75_31 -> m75_32  [color=green, key=0, style=solid];
m75_31 -> m75_91  [color=green, key=2, style=dotted];
m75_32 -> m75_33  [color=green, key=0, style=solid];
m75_32 -> m75_99  [color=green, key=2, style=dotted];
m75_32 -> m75_102  [color=green, key=2, style=dotted];
m75_33 -> m75_34  [color=green, key=0, style=solid];
m75_33 -> m75_91  [color=green, key=2, style=dotted];
m75_34 -> m75_35  [color=green, key=0, style=solid];
m75_34 -> m75_102  [color=green, key=2, style=dotted];
m75_35 -> m75_36  [color=green, key=0, style=solid];
m75_35 -> m75_91  [color=green, key=2, style=dotted];
m75_36 -> m75_37  [color=green, key=0, style=solid];
m75_36 -> m75_102  [color=green, key=2, style=dotted];
m75_37 -> m75_38  [color=green, key=0, style=solid];
m75_37 -> m75_91  [color=red, key=2, style=dotted];
m75_38 -> m75_39  [color=green, key=0, style=solid];
m75_38 -> m75_102  [color=green, key=2, style=dotted];
m75_39 -> m75_40  [color=red, key=0, style=solid];
m75_39 -> m75_91  [color=red, key=2, style=dotted];
m75_41 -> m75_42  [color=green, key=0, style=solid];
m75_41 -> m75_91  [color=green, key=2, style=dotted];
m75_42 -> m75_43  [color=red, key=0, style=solid];
m75_42 -> m75_102  [color=red, key=2, style=dotted];
m75_43 -> m75_44  [color=green, key=0, style=solid];
m75_43 -> m75_91  [color=red, key=2, style=dotted];
m75_44 -> m75_45  [color=green, key=0, style=solid];
m75_44 -> m75_102  [color=green, key=2, style=dotted];
m75_45 -> m75_46  [color=green, key=0, style=solid];
m75_45 -> m75_91  [color=green, key=2, style=dotted];
m75_46 -> m75_47  [color=red, key=0, style=solid];
m75_46 -> m75_102  [color=red, key=2, style=dotted];
m75_47 -> m75_48  [color=red, key=0, style=solid];
m75_47 -> m75_91  [color=red, key=2, style=dotted];
m75_48 -> m75_49  [color=red, key=0, style=solid];
m75_48 -> m75_102  [color=red, key=2, style=dotted];
m75_49 -> m75_50  [color=red, key=0, style=solid];
m75_49 -> m75_91  [color=red, key=2, style=dotted];
m75_50 -> m75_51  [color=red, key=0, style=solid];
m75_50 -> m75_102  [color=red, key=2, style=dotted];
m75_51 -> m75_52  [color=red, key=0, style=solid];
m75_51 -> m75_91  [color=red, key=2, style=dotted];
m75_52 -> m75_53  [color=red, key=0, style=solid];
m75_52 -> m75_102  [color=red, key=2, style=dotted];
m75_53 -> m75_54  [color=red, key=0, style=solid];
m75_53 -> m75_91  [color=red, key=2, style=dotted];
m75_55 -> m75_56  [color=green, key=0, style=solid];
m75_86 -> m75_87  [color=red, key=0, style=solid];
m75_86 -> m75_91  [color=red, key=2, style=dotted];
m75_58 -> m75_59  [color=red, key=0, style=solid];
m75_58 -> m75_104  [color=red, key=2, style=dotted];
m75_58 -> m75_61  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m75_58 -> m75_67  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m75_58 -> m75_70  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m75_58 -> m75_73  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m75_58 -> m75_83  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m75_59 -> m75_60  [color=red, key=0, style=solid];
m75_59 -> m75_105  [color=red, key=2, style=dotted];
m75_59 -> m75_76  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m75_59 -> m75_79  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m75_59 -> m75_80  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m75_63 -> m75_64  [color=green, key=0, style=solid];
m75_63 -> m75_102  [color=green, key=2, style=dotted];
m75_65 -> m75_66  [color=red, key=0, style=solid];
m75_65 -> m75_106  [color=red, key=2, style=dotted];
m75_65 -> m75_102  [color=red, key=2, style=dotted];
m75_73 -> m75_74  [color=red, key=0, style=solid];
m75_73 -> m75_108  [color=red, key=2, style=dotted];
m75_73 -> m75_102  [color=red, key=2, style=dotted];
m75_56 -> m75_57  [color=red, key=0, style=solid];
m75_57 -> m75_58  [color=red, key=0, style=solid];
m75_57 -> m75_95  [color=red, key=2, style=dotted];
m75_57 -> m75_59  [color=darkseagreen4, key=1, label=connection, style=dashed];
m75_61 -> m75_62  [color=green, key=0, style=solid];
m75_61 -> m75_102  [color=red, key=2, style=dotted];
m75_67 -> m75_68  [color=green, key=0, style=solid];
m75_67 -> m75_69  [color=red, key=0, style=solid];
m75_70 -> m75_71  [color=red, key=0, style=solid];
m75_70 -> m75_107  [color=red, key=2, style=dotted];
m75_70 -> m75_102  [color=red, key=2, style=dotted];
m75_83 -> m75_84  [color=red, key=0, style=solid];
m75_83 -> m75_111  [color=red, key=2, style=dotted];
m75_83 -> m75_102  [color=red, key=2, style=dotted];
m75_60 -> m75_61  [color=red, key=0, style=solid];
m75_60 -> m75_91  [color=red, key=2, style=dotted];
m75_76 -> m75_77  [color=red, key=0, style=solid];
m75_76 -> m75_102  [color=red, key=2, style=dotted];
m75_79 -> m75_80  [color=red, key=0, style=solid];
m75_79 -> m75_81  [color=red, key=0, style=solid];
m75_79 -> m75_109  [color=red, key=2, style=dotted];
m75_80 -> m75_81  [color=red, key=0, style=solid];
m75_80 -> m75_110  [color=red, key=2, style=dotted];
m75_80 -> m75_111  [color=red, key=2, style=dotted];
m75_80 -> m75_102  [color=red, key=2, style=dotted];
m75_62 -> m75_63  [color=green, key=0, style=solid];
m75_62 -> m75_91  [color=green, key=2, style=dotted];
m75_64 -> m75_65  [color=green, key=0, style=solid];
m75_64 -> m75_91  [color=green, key=2, style=dotted];
m75_66 -> m75_67  [color=red, key=0, style=solid];
m75_66 -> m75_91  [key=2, style=dotted];
m75_68 -> m75_85  [color=green, key=0, style=solid];
m75_68 -> m75_91  [color=green, key=2, style=dotted];
m75_69 -> m75_70  [color=red, key=0, style=solid];
m75_69 -> m75_91  [color=red, key=2, style=dotted];
m75_71 -> m75_72  [color=red, key=0, style=solid];
m75_71 -> m75_91  [color=red, key=2, style=dotted];
m75_72 -> m75_73  [color=red, key=0, style=solid];
m75_72 -> m75_91  [color=red, key=2, style=dotted];
m75_74 -> m75_75  [color=red, key=0, style=solid];
m75_74 -> m75_91  [color=red, key=2, style=dotted];
m75_75 -> m75_76  [color=red, key=0, style=solid];
m75_75 -> m75_91  [color=red, key=2, style=dotted];
m75_77 -> m75_78  [color=red, key=0, style=solid];
m75_77 -> m75_91  [color=red, key=2, style=dotted];
m75_78 -> m75_79  [color=red, key=0, style=solid];
m75_78 -> m75_91  [color=red, key=2, style=dotted];
m75_81 -> m75_82  [color=red, key=0, style=solid];
m75_81 -> m75_91  [color=red, key=2, style=dotted];
m75_82 -> m75_83  [color=red, key=0, style=solid];
m75_82 -> m75_91  [color=red, key=2, style=dotted];
m75_84 -> m75_85  [color=red, key=0, style=solid];
m75_84 -> m75_91  [color=red, key=2, style=dotted];
m75_85 -> m75_54  [color=red, key=0, style=solid];
m75_85 -> m75_91  [color=red, key=2, style=dotted];
m75_88 -> m75_89  [key=0, style=solid];
m75_88 -> m75_91  [key=2, style=dotted];
m75_89 -> m75_90  [key=0, style=solid];
m75_89 -> m75_91  [key=2, style=dotted];
m75_90 -> m75_0  [color=blue, key=0, style=bold];
m75_113 -> m75_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_13  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_15  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_16  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_25  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_26  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_28  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_31  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_32  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_33  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_34  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_35  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_36  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_38  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_39  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_41  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_44  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_45  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_46  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_51  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_53  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_61  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_62  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_63  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_64  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_68  [color=green, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_72  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_74  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_75  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_76  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_77  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_78  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_81  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_82  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_83  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_84  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_85  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_86  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_87  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_88  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m75_113 -> m75_89  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RetriesPage", style=dashed];
m76_25 -> m76_23  [color=blue, key=0, style=bold];
m76_0 -> m76_1  [key=0, style=solid];
m76_1 -> m76_2  [key=0, style=solid];
m76_1 -> m76_3  [key=2, style=dotted];
m76_1 -> m76_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m76_2 -> m76_0  [color=blue, key=0, style=bold];
m76_65 -> m76_66  [color=green, key=0, style=solid];
m76_66 -> m76_67  [color=green, key=0, style=solid];
m76_66 -> m76_38  [color=green, key=2, style=dotted];
m76_67 -> m76_68  [color=green, key=0, style=solid];
m76_67 -> m76_22  [color=green, key=2, style=dotted];
m76_68 -> m76_69  [color=green, key=0, style=solid];
m76_68 -> m76_39  [color=green, key=2, style=dotted];
m76_69 -> m76_70  [color=green, key=0, style=solid];
m76_69 -> m76_53  [key=2, style=dotted];
m76_70 -> m76_71  [color=green, key=0, style=solid];
m76_70 -> m76_53  [color=green, key=2, style=dotted];
m76_71 -> m76_72  [color=green, key=0, style=solid];
m76_71 -> m76_40  [color=green, key=2, style=dotted];
m76_72 -> m76_41  [key=2, style=dotted];
m76_72 -> m76_73  [key=0, style=solid];
m76_76 -> m76_77  [color=green, key=0, style=solid];
m76_76 -> m76_26  [color=green, key=2, style=dotted];
m76_75 -> m76_76  [color=green, key=0, style=solid];
m76_75 -> m76_53  [key=2, style=dotted];
m76_73 -> m76_53  [key=2, style=dotted];
m76_73 -> m76_74  [key=0, style=solid];
m76_74 -> m76_53  [key=2, style=dotted];
m76_74 -> m76_75  [key=0, style=solid];
m76_77 -> m76_65  [color=blue, key=0, style=bold];
m76_26 -> m76_27  [key=0, style=solid];
m76_27 -> m76_26  [color=blue, key=0, style=bold];
m76_27 -> m76_28  [key=0, style=solid];
m76_27 -> m76_29  [key=2, style=dotted];
m76_78 -> m76_79  [color=green, key=0, style=solid];
m76_79 -> m76_80  [color=green, key=0, style=solid];
m76_79 -> m76_38  [color=green, key=2, style=dotted];
m76_80 -> m76_81  [color=green, key=0, style=solid];
m76_80 -> m76_22  [key=2, style=dotted];
m76_81 -> m76_82  [color=green, key=0, style=solid];
m76_81 -> m76_39  [color=green, key=2, style=dotted];
m76_82 -> m76_53  [key=2, style=dotted];
m76_82 -> m76_83  [key=0, style=solid];
m76_84 -> m76_85  [color=green, key=0, style=solid];
m76_84 -> m76_41  [color=green, key=2, style=dotted];
m76_83 -> m76_84  [color=green, key=0, style=solid];
m76_83 -> m76_40  [key=2, style=dotted];
m76_85 -> m76_53  [key=2, style=dotted];
m76_85 -> m76_86  [key=0, style=solid];
m76_87 -> m76_88  [color=green, key=0, style=solid];
m76_87 -> m76_53  [color=green, key=2, style=dotted];
m76_86 -> m76_87  [color=green, key=0, style=solid];
m76_86 -> m76_53  [key=2, style=dotted];
m76_88 -> m76_26  [key=2, style=dotted];
m76_88 -> m76_89  [key=0, style=solid];
m76_89 -> m76_78  [color=blue, key=0, style=bold];
m76_28 -> m76_26  [color=blue, key=0, style=bold];
m76_22 -> m76_23  [key=0, style=solid];
m76_23 -> m76_24  [key=0, style=solid];
m76_23 -> m76_25  [key=2, style=dotted];
m76_24 -> m76_22  [color=blue, key=0, style=bold];
m76_24 -> m76_25  [key=0, style=solid];
m76_24 -> m76_26  [key=2, style=dotted];
m76_90 -> m76_91  [color=green, key=0, style=solid];
m76_91 -> m76_92  [color=green, key=0, style=solid];
m76_91 -> m76_38  [color=green, key=2, style=dotted];
m76_92 -> m76_22  [key=2, style=dotted];
m76_92 -> m76_93  [key=0, style=solid];
m76_94 -> m76_95  [color=green, key=0, style=solid];
m76_94 -> m76_53  [color=green, key=2, style=dotted];
m76_93 -> m76_94  [color=green, key=0, style=solid];
m76_93 -> m76_39  [key=2, style=dotted];
m76_95 -> m76_96  [color=green, key=0, style=solid];
m76_95 -> m76_53  [key=2, style=dotted];
m76_96 -> m76_97  [color=green, key=0, style=solid];
m76_96 -> m76_40  [color=green, key=2, style=dotted];
m76_97 -> m76_41  [key=2, style=dotted];
m76_97 -> m76_98  [key=0, style=solid];
m76_99 -> m76_26  [key=2, style=dotted];
m76_99 -> m76_100  [key=0, style=solid];
m76_98 -> m76_53  [key=2, style=dotted];
m76_98 -> m76_99  [key=0, style=solid];
m76_100 -> m76_90  [color=blue, key=0, style=bold];
m76_122 -> m76_123  [color=green, key=0, style=solid];
m76_123 -> m76_124  [color=green, key=0, style=solid];
m76_123 -> m76_38  [color=green, key=2, style=dotted];
m76_124 -> m76_22  [key=2, style=dotted];
m76_124 -> m76_125  [key=0, style=solid];
m76_126 -> m76_127  [color=green, key=0, style=solid];
m76_126 -> m76_53  [color=green, key=2, style=dotted];
m76_125 -> m76_126  [color=green, key=0, style=solid];
m76_125 -> m76_39  [key=2, style=dotted];
m76_127 -> m76_40  [key=2, style=dotted];
m76_127 -> m76_128  [key=0, style=solid];
m76_129 -> m76_130  [color=green, key=0, style=solid];
m76_129 -> m76_53  [color=green, key=2, style=dotted];
m76_128 -> m76_129  [color=green, key=0, style=solid];
m76_128 -> m76_41  [key=2, style=dotted];
m76_130 -> m76_26  [key=2, style=dotted];
m76_130 -> m76_131  [key=0, style=solid];
m76_131 -> m76_122  [color=blue, key=0, style=bold];
m76_101 -> m76_102  [color=green, key=0, style=solid];
m76_102 -> m76_103  [color=green, key=0, style=solid];
m76_102 -> m76_38  [color=green, key=2, style=dotted];
m76_103 -> m76_22  [key=2, style=dotted];
m76_103 -> m76_104  [key=0, style=solid];
m76_105 -> m76_106  [color=green, key=0, style=solid];
m76_105 -> m76_53  [color=green, key=2, style=dotted];
m76_104 -> m76_105  [color=green, key=0, style=solid];
m76_104 -> m76_39  [key=2, style=dotted];
m76_106 -> m76_53  [key=2, style=dotted];
m76_106 -> m76_107  [key=0, style=solid];
m76_108 -> m76_109  [color=green, key=0, style=solid];
m76_108 -> m76_41  [color=green, key=2, style=dotted];
m76_107 -> m76_108  [color=green, key=0, style=solid];
m76_107 -> m76_40  [key=2, style=dotted];
m76_109 -> m76_110  [color=green, key=0, style=solid];
m76_109 -> m76_112  [key=2, style=dotted];
m76_110 -> m76_111  [color=green, key=0, style=solid];
m76_110 -> m76_26  [color=green, key=2, style=dotted];
m76_111 -> m76_101  [color=blue, key=0, style=bold];
m76_42 -> m76_43  [key=0, style=solid];
m76_48 -> m76_49  [color=green, key=0, style=solid];
m76_48 -> m76_41  [color=green, key=2, style=dotted];
m76_47 -> m76_48  [color=green, key=0, style=solid];
m76_47 -> m76_40  [key=2, style=dotted];
m76_49 -> m76_50  [color=green, key=0, style=solid];
m76_49 -> m76_53  [color=green, key=2, style=dotted];
m76_50 -> m76_51  [color=green, key=0, style=solid];
m76_50 -> m76_53  [color=green, key=2, style=dotted];
m76_51 -> m76_52  [color=green, key=0, style=solid];
m76_51 -> m76_26  [color=green, key=2, style=dotted];
m76_44 -> m76_22  [key=2, style=dotted];
m76_44 -> m76_45  [key=0, style=solid];
m76_46 -> m76_47  [key=0, style=solid];
m76_46 -> m76_53  [key=2, style=dotted];
m76_43 -> m76_38  [key=2, style=dotted];
m76_43 -> m76_44  [key=0, style=solid];
m76_45 -> m76_39  [key=2, style=dotted];
m76_45 -> m76_46  [key=0, style=solid];
m76_52 -> m76_42  [color=blue, key=0, style=bold];
m76_54 -> m76_55  [color=green, key=0, style=solid];
m76_55 -> m76_56  [color=green, key=0, style=solid];
m76_55 -> m76_38  [color=green, key=2, style=dotted];
m76_56 -> m76_57  [color=green, key=0, style=solid];
m76_56 -> m76_22  [color=green, key=2, style=dotted];
m76_57 -> m76_58  [color=green, key=0, style=solid];
m76_57 -> m76_39  [color=green, key=2, style=dotted];
m76_58 -> m76_59  [color=green, key=0, style=solid];
m76_58 -> m76_53  [color=green, key=2, style=dotted];
m76_59 -> m76_60  [color=green, key=0, style=solid];
m76_59 -> m76_40  [color=green, key=2, style=dotted];
m76_60 -> m76_61  [color=green, key=0, style=solid];
m76_60 -> m76_41  [key=2, style=dotted];
m76_61 -> m76_62  [color=green, key=0, style=solid];
m76_61 -> m76_53  [color=green, key=2, style=dotted];
m76_62 -> m76_53  [key=2, style=dotted];
m76_62 -> m76_63  [key=0, style=solid];
m76_63 -> m76_26  [key=2, style=dotted];
m76_63 -> m76_64  [key=0, style=solid];
m76_64 -> m76_54  [color=blue, key=0, style=bold];
m76_4 -> m76_5  [key=0, style=solid];
m76_5 -> m76_6  [key=0, style=solid];
m76_5 -> m76_7  [key=2, style=dotted];
m76_6 -> m76_4  [color=blue, key=0, style=bold];
m76_8 -> m76_9  [key=0, style=solid];
m76_9 -> m76_10  [key=0, style=solid];
m76_9 -> m76_17  [key=2, style=dotted];
m76_9 -> m76_13  [color=darkseagreen4, key=1, label=connection, style=dashed];
m76_10 -> m76_11  [key=0, style=solid];
m76_10 -> m76_18  [key=2, style=dotted];
m76_10 -> m76_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m76_10 -> m76_13  [color=darkseagreen4, key=1, label=job, style=dashed];
m76_13 -> m76_14  [key=0, style=solid];
m76_13 -> m76_21  [key=2, style=dotted];
m76_11 -> m76_12  [key=0, style=solid];
m76_11 -> m76_19  [key=2, style=dotted];
m76_11 -> m76_13  [color=darkseagreen4, key=1, label=state, style=dashed];
m76_12 -> m76_13  [key=0, style=solid];
m76_12 -> m76_20  [key=2, style=dotted];
m76_14 -> m76_15  [color=red, key=0, style=solid];
m76_14 -> m76_7  [key=2, style=dotted];
m76_15 -> m76_16  [color=red, key=0, style=solid];
m76_15 -> m76_22  [color=red, key=2, style=dotted];
m76_16 -> m76_8  [color=blue, key=0, style=bold];
m76_30 -> m76_31  [key=0, style=solid];
m76_34 -> m76_35  [color=green, key=0, style=solid];
m76_34 -> m76_40  [color=green, key=2, style=dotted];
m76_33 -> m76_34  [color=green, key=0, style=solid];
m76_33 -> m76_39  [key=2, style=dotted];
m76_35 -> m76_36  [color=green, key=0, style=solid];
m76_35 -> m76_41  [key=2, style=dotted];
m76_36 -> m76_37  [color=green, key=0, style=solid];
m76_36 -> m76_26  [color=green, key=2, style=dotted];
m76_32 -> m76_33  [key=0, style=solid];
m76_32 -> m76_22  [key=2, style=dotted];
m76_31 -> m76_38  [key=2, style=dotted];
m76_31 -> m76_32  [key=0, style=solid];
m76_37 -> m76_30  [color=blue, key=0, style=bold];
m76_132 -> m76_133  [key=0, style=solid];
m76_138 -> m76_40  [key=2, style=dotted];
m76_138 -> m76_139  [key=0, style=solid];
m76_134 -> m76_22  [key=2, style=dotted];
m76_134 -> m76_135  [key=0, style=solid];
m76_141 -> m76_26  [key=2, style=dotted];
m76_141 -> m76_142  [key=0, style=solid];
m76_139 -> m76_41  [key=2, style=dotted];
m76_139 -> m76_140  [key=0, style=solid];
m76_136 -> m76_53  [key=2, style=dotted];
m76_136 -> m76_137  [key=0, style=solid];
m76_137 -> m76_53  [key=2, style=dotted];
m76_137 -> m76_138  [key=0, style=solid];
m76_133 -> m76_38  [key=2, style=dotted];
m76_133 -> m76_134  [key=0, style=solid];
m76_135 -> m76_39  [key=2, style=dotted];
m76_135 -> m76_136  [key=0, style=solid];
m76_140 -> m76_141  [key=0, style=solid];
m76_140 -> m76_112  [key=2, style=dotted];
m76_142 -> m76_132  [color=blue, key=0, style=bold];
m76_113 -> m76_114  [key=0, style=solid];
m76_115 -> m76_116  [color=green, key=0, style=solid];
m76_115 -> m76_22  [color=green, key=2, style=dotted];
m76_114 -> m76_115  [color=green, key=0, style=solid];
m76_114 -> m76_38  [key=2, style=dotted];
m76_116 -> m76_53  [key=2, style=dotted];
m76_116 -> m76_117  [key=0, style=solid];
m76_118 -> m76_119  [color=green, key=0, style=solid];
m76_118 -> m76_40  [color=green, key=2, style=dotted];
m76_117 -> m76_118  [color=green, key=0, style=solid];
m76_117 -> m76_53  [key=2, style=dotted];
m76_119 -> m76_41  [key=2, style=dotted];
m76_119 -> m76_120  [key=0, style=solid];
m76_120 -> m76_26  [key=2, style=dotted];
m76_120 -> m76_121  [key=0, style=solid];
m76_121 -> m76_113  [color=blue, key=0, style=bold];
m76_143 -> m76_36  [color=green, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_51  [color=green, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_56  [color=green, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_67  [color=green, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_76  [color=green, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_110  [color=green, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_115  [color=green, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_44  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_63  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_80  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_88  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_92  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_99  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_103  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_120  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_124  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_130  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_134  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m76_143 -> m76_141  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m77_0 -> m77_1  [key=0, style=solid];
m77_1 -> m77_2  [key=0, style=solid];
m77_2 -> m77_0  [color=blue, key=0, style=bold];
m77_3 -> m77_1  [color=darkseagreen4, key=1, label="HangFire.Storage.Monitoring.EnqueuedJobDto", style=dashed];
m78_25 -> m78_26  [key=0, style=solid];
m78_26 -> m78_27  [key=0, style=solid];
m78_26 -> m78_11  [key=2, style=dotted];
m78_27 -> m78_28  [key=0, style=solid];
m78_27 -> m78_30  [key=2, style=dotted];
m78_28 -> m78_29  [key=0, style=solid];
m78_28 -> m78_19  [key=2, style=dotted];
m78_28 -> m78_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_29 -> m78_25  [color=blue, key=0, style=bold];
m78_13 -> m78_14  [key=0, style=solid];
m78_14 -> m78_15  [key=0, style=solid];
m78_14 -> m78_11  [key=2, style=dotted];
m78_15 -> m78_16  [key=0, style=solid];
m78_15 -> m78_18  [key=2, style=dotted];
m78_16 -> m78_17  [key=0, style=solid];
m78_16 -> m78_19  [key=2, style=dotted];
m78_16 -> m78_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_17 -> m78_13  [color=blue, key=0, style=bold];
m78_7 -> m78_8  [key=0, style=solid];
m78_8 -> m78_9  [key=0, style=solid];
m78_8 -> m78_11  [key=2, style=dotted];
m78_9 -> m78_10  [key=0, style=solid];
m78_9 -> d6  [key=2, style=dotted];
m78_10 -> m78_7  [color=blue, key=0, style=bold];
m78_35 -> m78_36  [key=0, style=solid];
m78_36 -> m78_37  [key=0, style=solid];
m78_36 -> m78_11  [key=2, style=dotted];
m78_36 -> m78_39  [color=darkseagreen4, key=1, label=handler, style=dashed];
m78_36 -> m78_44  [color=darkseagreen4, key=1, label=handler, style=dashed];
m78_37 -> m78_38  [key=0, style=solid];
m78_39 -> m78_40  [key=0, style=solid];
m78_39 -> m78_42  [key=2, style=dotted];
m78_39 -> m78_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_38 -> m78_39  [key=0, style=solid];
m78_38 -> m78_41  [key=2, style=dotted];
m78_40 -> m78_35  [color=blue, key=0, style=bold];
m78_43 -> m78_44  [key=0, style=solid];
m78_20 -> m78_21  [key=0, style=solid];
m78_21 -> m78_22  [key=0, style=solid];
m78_21 -> m78_23  [key=2, style=dotted];
m78_21 -> m78_24  [key=2, style=dotted];
m78_22 -> m78_20  [color=blue, key=0, style=bold];
m78_31 -> m78_32  [key=0, style=solid];
m78_32 -> m78_33  [key=0, style=solid];
m78_32 -> m78_34  [key=2, style=dotted];
m78_33 -> m78_31  [color=blue, key=0, style=bold];
m78_44 -> m78_45  [key=0, style=solid];
m78_44 -> m78_18  [key=2, style=dotted];
m78_45 -> m78_43  [color=blue, key=0, style=bold];
m78_0 -> m78_1  [color=red, key=0, style=solid];
m78_1 -> m78_2  [color=red, key=0, style=solid];
m78_1 -> m78_4  [color=red, key=2, style=dotted];
m78_1 -> m78_5  [color=red, key=2, style=dotted];
m78_2 -> m78_3  [key=0, style=solid];
m78_2 -> m78_6  [key=2, style=dotted];
m78_3 -> m78_0  [color=blue, key=0, style=bold];
m78_46 -> m78_1  [color=red, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_16  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_21  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_27  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_46 -> m78_44  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m78_47 -> m78_44  [color=darkseagreen4, key=1, label=handler, style=dashed];
m79_0 -> m79_1  [key=0, style=solid];
m79_1 -> m79_2  [key=0, style=solid];
m79_2 -> m79_0  [color=blue, key=0, style=bold];
m79_3 -> m79_1  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerExceptionContext", style=dashed];
m80_0 -> m80_1  [key=0, style=solid];
m80_1 -> m80_0  [color=blue, key=0, style=bold];
m80_22 -> m80_23  [key=0, style=solid];
m80_23 -> m80_24  [key=0, style=solid];
m80_23 -> m80_25  [key=2, style=dotted];
m80_24 -> m80_22  [color=blue, key=0, style=bold];
m80_11 -> m80_12  [key=0, style=solid];
m80_11 -> m80_16  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m80_12 -> m80_13  [key=0, style=solid];
m80_12 -> m80_15  [color=darkseagreen4, key=1, label=scheduledState, style=dashed];
m80_16 -> m80_17  [key=0, style=solid];
m80_16 -> m80_21  [key=2, style=dotted];
m80_13 -> m80_14  [key=0, style=solid];
m80_13 -> m80_15  [key=0, style=solid];
m80_15 -> m80_16  [key=0, style=solid];
m80_15 -> m80_20  [key=2, style=dotted];
m80_14 -> m80_17  [key=0, style=solid];
m80_14 -> m80_18  [key=2, style=dotted];
m80_14 -> m80_19  [key=2, style=dotted];
m80_17 -> m80_11  [color=blue, key=0, style=bold];
m80_6 -> m80_7  [key=0, style=solid];
m80_7 -> m80_8  [key=0, style=solid];
m80_7 -> m80_9  [key=2, style=dotted];
m80_7 -> m80_10  [key=2, style=dotted];
m80_8 -> m80_6  [color=blue, key=0, style=bold];
m80_2 -> m80_3  [key=0, style=solid];
m80_3 -> m80_4  [key=0, style=solid];
m80_4 -> m80_5  [key=0, style=solid];
m80_5 -> m80_2  [color=blue, key=0, style=bold];
m80_26 -> m80_3  [color=darkseagreen4, key=1, label="Hangfire.States.ScheduledState", style=dashed];
m80_26 -> m80_4  [color=darkseagreen4, key=1, label="Hangfire.States.ScheduledState", style=dashed];
m80_26 -> m80_7  [color=darkseagreen4, key=1, label="Hangfire.States.ScheduledState", style=dashed];
m83_15 -> m83_16  [key=0, style=solid];
m83_16 -> m83_17  [key=0, style=solid];
m83_16 -> m83_18  [key=2, style=dotted];
m83_17 -> m83_15  [color=blue, key=0, style=bold];
m83_4 -> m83_5  [key=0, style=solid];
m83_4 -> m83_9  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m83_5 -> m83_6  [key=0, style=solid];
m83_5 -> m83_11  [key=2, style=dotted];
m83_9 -> m83_10  [key=0, style=solid];
m83_9 -> m83_14  [key=2, style=dotted];
m83_6 -> m83_7  [key=0, style=solid];
m83_6 -> m83_12  [key=2, style=dotted];
m83_6 -> m83_8  [color=red, key=1, label=serversRemoved, style=dashed];
m83_7 -> m83_8  [color=red, key=0, style=solid];
m83_7 -> m83_9  [key=0, style=solid];
m83_8 -> m83_9  [color=red, key=0, style=solid];
m83_8 -> m83_13  [color=red, key=2, style=dotted];
m83_10 -> m83_4  [color=blue, key=0, style=bold];
m83_0 -> m83_1  [key=0, style=solid];
m83_0 -> m83_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m83_1 -> m83_2  [key=0, style=solid];
m83_2 -> m83_3  [key=0, style=solid];
m83_3 -> m83_0  [color=blue, key=0, style=bold];
m83_19 -> m83_1  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m83_19 -> m83_2  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m83_19 -> m83_6  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m83_19 -> m83_9  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m83_19 -> m83_16  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m86_22 -> m86_23  [key=0, style=solid];
m86_22 -> m86_42  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_22 -> m86_53  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_23 -> m86_24  [key=0, style=solid];
m86_23 -> m86_25  [key=2, style=dotted];
m86_23 -> m86_119  [key=0, style=solid];
m86_24 -> m86_22  [color=blue, key=0, style=bold];
m86_25 -> m86_138  [key=0, style=solid];
m86_133 -> m86_134  [key=0, style=solid];
m86_134 -> m86_135  [key=0, style=solid];
m86_134 -> m86_136  [key=2, style=dotted];
m86_134 -> m86_137  [key=2, style=dotted];
m86_135 -> m86_133  [color=blue, key=0, style=bold];
m86_29 -> m86_30  [key=0, style=solid];
m86_26 -> m86_29  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m86_26 -> m86_27  [key=0, style=solid];
m86_30 -> m86_31  [key=0, style=solid];
m86_30 -> m86_33  [key=2, style=dotted];
m86_31 -> m86_32  [key=0, style=solid];
m86_31 -> m86_25  [key=2, style=dotted];
m86_31 -> m86_34  [key=2, style=dotted];
m86_27 -> m86_29  [key=0, style=solid];
m86_27 -> m86_28  [key=0, style=solid];
m86_28 -> m86_32  [key=0, style=solid];
m86_28 -> n21  [key=2, style=dotted];
m86_28 -> m86_26  [color=blue, key=0, style=bold];
m86_32 -> m86_26  [color=blue, key=0, style=bold];
m86_32 -> m86_33  [key=0, style=solid];
m86_32 -> m86_35  [key=2, style=dotted];
m86_119 -> m86_120  [key=0, style=solid];
m86_119 -> m86_121  [key=0, style=solid];
m86_120 -> m86_124  [key=0, style=solid];
m86_121 -> m86_122  [key=0, style=solid];
m86_121 -> m86_125  [key=2, style=dotted];
m86_121 -> m86_123  [color=darkseagreen4, key=1, label=connection, style=dashed];
m86_122 -> m86_123  [key=0, style=solid];
m86_122 -> m86_126  [key=2, style=dotted];
m86_123 -> m86_124  [key=0, style=solid];
m86_124 -> m86_23  [color=blue, key=0, style=bold];
m86_38 -> m86_39  [key=0, style=solid];
m86_39 -> m86_40  [key=0, style=solid];
m86_39 -> m86_18  [key=2, style=dotted];
m86_39 -> m86_41  [key=2, style=dotted];
m86_40 -> m86_38  [color=blue, key=0, style=bold];
m86_127 -> m86_128  [key=0, style=solid];
m86_127 -> m86_129  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m86_128 -> m86_129  [key=0, style=solid];
m86_128 -> m86_130  [key=0, style=solid];
m86_128 -> m86_131  [key=2, style=dotted];
m86_129 -> m86_130  [key=0, style=solid];
m86_129 -> m86_132  [key=2, style=dotted];
m86_130 -> m86_127  [color=blue, key=0, style=bold];
m86_42 -> m86_43  [key=0, style=solid];
m86_42 -> m86_44  [color=crimson, key=0, style=bold];
m86_42 -> m86_49  [key=2, style=dotted];
m86_43 -> m86_44  [key=0, style=solid];
m86_43 -> m86_46  [key=2, style=dotted];
m86_43 -> m86_22  [key=2, style=dotted];
m86_44 -> m86_45  [key=0, style=solid];
m86_44 -> m86_47  [key=2, style=dotted];
m86_44 -> m86_30  [key=2, style=dotted];
m86_45 -> m86_42  [color=blue, key=0, style=bold];
m86_45 -> m86_46  [key=0, style=solid];
m86_45 -> m86_50  [key=2, style=dotted];
m86_33 -> m86_30  [color=blue, key=0, style=bold];
m86_36 -> m86_37  [key=0, style=solid];
m86_36 -> m86_34  [color=blue, key=0, style=bold];
m86_37 -> m86_36  [color=blue, key=0, style=bold];
m86_35 -> m86_36  [key=0, style=solid];
m86_35 -> m86_37  [key=2, style=dotted];
m86_0 -> m86_1  [key=0, style=solid];
m86_0 -> m86_16  [color=red, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m86_1 -> m86_2  [key=0, style=solid];
m86_1 -> m86_5  [key=2, style=dotted];
m86_2 -> m86_3  [key=0, style=solid];
m86_2 -> m86_6  [key=2, style=dotted];
m86_2 -> m86_7  [key=2, style=dotted];
m86_2 -> m86_10  [color=darkorchid, key=3, label="Field variable Hangfire.SqlServer.SqlServerStorage _storage", style=bold];
m86_2 -> m86_9  [color=green, key=1, label=string, style=dashed];
m86_2 -> m86_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m86_2 -> m86_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m86_2 -> m86_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m86_2 -> m86_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m86_2 -> m86_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m86_3 -> m86_4  [key=0, style=solid];
m86_3 -> m86_8  [key=2, style=dotted];
m86_3 -> m86_11  [color=darkorchid, key=3, label="Field variable IDbConnection _connection", style=bold];
m86_3 -> m86_5  [key=0, style=solid];
m86_4 -> m86_0  [color=blue, key=0, style=bold];
m86_4 -> m86_17  [key=0, style=solid];
m86_4 -> n21  [key=2, style=dotted];
m86_5 -> m86_7  [key=0, style=solid];
m86_5 -> m86_6  [key=0, style=solid];
m86_48 -> m86_50  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m86_48 -> m86_49  [key=0, style=solid];
m86_48 -> m86_41  [color=blue, key=0, style=bold];
m86_50 -> m86_51  [key=0, style=solid];
m86_50 -> m86_53  [key=2, style=dotted];
m86_49 -> m86_50  [key=0, style=solid];
m86_49 -> m86_52  [key=2, style=dotted];
m86_51 -> m86_48  [color=blue, key=0, style=bold];
m86_90 -> m86_91  [key=0, style=solid];
m86_90 -> m86_95  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m86_91 -> m86_92  [key=0, style=solid];
m86_91 -> m86_93  [key=2, style=dotted];
m86_91 -> m86_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_92 -> m86_90  [color=blue, key=0, style=bold];
m86_104 -> m86_105  [key=0, style=solid];
m86_104 -> m86_109  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m86_105 -> m86_106  [key=0, style=solid];
m86_105 -> m86_107  [key=2, style=dotted];
m86_105 -> m86_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_106 -> m86_104  [color=blue, key=0, style=bold];
m86_18 -> m86_19  [key=0, style=solid];
m86_19 -> m86_20  [key=0, style=solid];
m86_19 -> m86_21  [key=2, style=dotted];
m86_19 -> m86_143  [key=0, style=solid];
m86_20 -> m86_18  [color=blue, key=0, style=bold];
m86_20 -> m86_146  [key=0, style=solid];
m86_146 -> m86_147  [key=0, style=solid];
m86_147 -> m86_148  [key=0, style=solid];
m86_148 -> m86_20  [color=blue, key=0, style=bold];
m86_13 -> m86_14  [key=0, style=solid];
m86_13 -> m86_16  [key=0, style=solid];
m86_7 -> m86_8  [key=0, style=solid];
m86_41 -> m86_42  [key=0, style=solid];
m86_46 -> m86_47  [key=0, style=solid];
m86_46 -> m86_51  [key=2, style=dotted];
m86_47 -> m86_48  [key=0, style=solid];
m86_47 -> m86_26  [key=2, style=dotted];
m86_53 -> m86_54  [key=0, style=solid];
m86_53 -> m86_49  [key=2, style=dotted];
m86_52 -> m86_53  [key=0, style=solid];
m86_54 -> m86_55  [key=0, style=solid];
m86_54 -> m86_22  [key=2, style=dotted];
m86_55 -> m86_56  [key=0, style=solid];
m86_55 -> m86_30  [key=2, style=dotted];
m86_55 -> m86_66  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m86_55 -> m86_68  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m86_56 -> m86_57  [key=0, style=solid];
m86_56 -> m86_50  [key=2, style=dotted];
m86_56 -> m86_70  [key=2, style=dotted];
m86_56 -> m86_71  [key=2, style=dotted];
m86_56 -> m86_72  [key=2, style=dotted];
m86_56 -> m86_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_56 -> m86_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_56 -> m86_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_56 -> m86_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_56 -> m86_59  [color=darkseagreen4, key=1, label=parts, style=dashed];
m86_56 -> m86_60  [color=darkseagreen4, key=1, label=parts, style=dashed];
m86_56 -> m86_64  [color=darkseagreen4, key=1, label=parts, style=dashed];
m86_56 -> m86_65  [color=darkseagreen4, key=1, label=parts, style=dashed];
m86_57 -> m86_58  [key=0, style=solid];
m86_57 -> m86_35  [key=2, style=dotted];
m86_57 -> m86_73  [key=2, style=dotted];
m86_57 -> m86_60  [color=darkseagreen4, key=1, label=builder, style=dashed];
m86_57 -> m86_61  [color=darkseagreen4, key=1, label=builder, style=dashed];
m86_57 -> m86_62  [color=darkseagreen4, key=1, label=builder, style=dashed];
m86_57 -> m86_65  [color=darkseagreen4, key=1, label=builder, style=dashed];
m86_57 -> m86_66  [color=darkseagreen4, key=1, label=builder, style=dashed];
m86_58 -> m86_59  [key=0, style=solid];
m86_58 -> m86_51  [key=2, style=dotted];
m86_58 -> m86_60  [color=darkseagreen4, key=1, label=alias, style=dashed];
m86_58 -> m86_61  [key=0, style=solid];
m86_59 -> m86_60  [key=0, style=solid];
m86_59 -> m86_26  [key=2, style=dotted];
m86_59 -> m86_58  [key=0, style=solid];
m86_59 -> m86_74  [key=2, style=dotted];
m86_60 -> m86_52  [color=blue, key=0, style=bold];
m86_60 -> m86_61  [key=0, style=solid];
m86_60 -> m86_75  [key=2, style=dotted];
m86_165 -> m86_166  [key=0, style=solid];
m86_77 -> m86_78  [key=0, style=solid];
m86_80 -> m86_81  [key=0, style=solid];
m86_84 -> m86_85  [key=0, style=solid];
m86_87 -> m86_88  [key=0, style=solid];
m86_94 -> m86_95  [key=0, style=solid];
m86_108 -> m86_109  [key=0, style=solid];
m86_78 -> m86_70  [key=2, style=dotted];
m86_78 -> m86_79  [key=0, style=solid];
m86_79 -> m86_77  [color=blue, key=0, style=bold];
m86_82 -> m86_80  [color=blue, key=0, style=bold];
m86_81 -> m86_82  [key=0, style=solid];
m86_81 -> m86_83  [key=2, style=dotted];
m86_86 -> m86_84  [color=blue, key=0, style=bold];
m86_85 -> m86_86  [key=0, style=solid];
m86_89 -> m86_87  [color=blue, key=0, style=bold];
m86_88 -> m86_89  [key=0, style=solid];
m86_95 -> m86_96  [key=0, style=solid];
m86_95 -> m86_98  [key=2, style=dotted];
m86_153 -> m86_93  [key=2, style=dotted];
m86_153 -> m86_154  [key=0, style=solid];
m86_153 -> m86_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_169 -> m86_93  [key=2, style=dotted];
m86_169 -> m86_170  [key=0, style=solid];
m86_169 -> m86_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_97 -> m86_94  [color=blue, key=0, style=bold];
m86_109 -> m86_110  [key=0, style=solid];
m86_109 -> m86_98  [key=2, style=dotted];
m86_111 -> m86_108  [color=blue, key=0, style=bold];
m86_96 -> m86_97  [key=0, style=solid];
m86_150 -> m86_153  [color=darkseagreen4, key=1, label=sqlStorage, style=dashed];
m86_150 -> m86_151  [key=0, style=solid];
m86_151 -> m86_153  [key=0, style=solid];
m86_151 -> m86_152  [key=0, style=solid];
m86_154 -> m86_149  [color=blue, key=0, style=bold];
m86_156 -> m86_157  [key=0, style=solid];
m86_156 -> m86_158  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m86_166 -> m86_169  [color=darkseagreen4, key=1, label=sqlStorage, style=dashed];
m86_166 -> m86_167  [key=0, style=solid];
m86_167 -> m86_169  [key=0, style=solid];
m86_167 -> m86_168  [key=0, style=solid];
m86_170 -> m86_165  [color=blue, key=0, style=bold];
m86_171 -> m86_172  [key=0, style=solid];
m86_171 -> m86_173  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m86_110 -> m86_111  [key=0, style=solid];
m86_149 -> m86_150  [key=0, style=solid];
m86_152 -> m86_154  [key=0, style=solid];
m86_152 -> m86_155  [key=2, style=dotted];
m86_160 -> m86_156  [color=blue, key=0, style=bold];
m86_157 -> m86_158  [key=0, style=solid];
m86_158 -> m86_159  [key=0, style=solid];
m86_158 -> m86_161  [key=2, style=dotted];
m86_158 -> m86_162  [key=2, style=dotted];
m86_168 -> m86_170  [key=0, style=solid];
m86_168 -> m86_155  [key=2, style=dotted];
m86_172 -> m86_173  [key=0, style=solid];
m86_173 -> m86_174  [key=0, style=solid];
m86_173 -> m86_161  [key=2, style=dotted];
m86_173 -> m86_162  [key=2, style=dotted];
m86_159 -> m86_160  [key=0, style=solid];
m86_159 -> m86_163  [key=2, style=dotted];
m86_159 -> m86_164  [key=2, style=dotted];
m86_174 -> m86_175  [key=0, style=solid];
m86_174 -> m86_163  [key=2, style=dotted];
m86_174 -> m86_164  [key=2, style=dotted];
m86_175 -> m86_171  [color=blue, key=0, style=bold];
m86_138 -> m86_139  [key=0, style=solid];
m86_138 -> m86_141  [key=2, style=dotted];
m86_139 -> m86_140  [key=0, style=solid];
m86_139 -> m86_142  [key=2, style=dotted];
m86_140 -> m86_25  [color=blue, key=0, style=bold];
m86_34 -> m86_35  [key=0, style=solid];
m86_64 -> m86_65  [key=0, style=solid];
m86_64 -> m86_63  [key=0, style=solid];
m86_64 -> m86_74  [key=2, style=dotted];
m86_65 -> m86_66  [key=0, style=solid];
m86_65 -> m86_75  [key=2, style=dotted];
m86_66 -> m86_22  [key=2, style=dotted];
m86_66 -> m86_69  [key=0, style=solid];
m86_68 -> m86_69  [key=0, style=solid];
m86_61 -> m86_62  [key=0, style=solid];
m86_61 -> m86_63  [key=0, style=solid];
m86_61 -> m86_39  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m86_61 -> m86_43  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m86_61 -> m86_44  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m86_61 -> m86_47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m86_61 -> m86_54  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m86_61 -> m86_55  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m86_61 -> m86_59  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m86_62 -> m86_63  [key=0, style=solid];
m86_62 -> m86_76  [key=2, style=dotted];
m86_63 -> m86_64  [key=0, style=solid];
m86_63 -> m86_65  [color=darkseagreen4, key=1, label=alias, style=dashed];
m86_63 -> m86_66  [key=0, style=solid];
m86_67 -> m86_68  [key=0, style=solid];
m86_69 -> m86_54  [color=blue, key=0, style=bold];
m86_9 -> m86_10  [key=0, style=solid];
m86_9 -> m86_13  [color=green, key=0, style=solid];
m86_10 -> m86_11  [key=0, style=solid];
m86_10 -> m86_13  [key=2, style=dotted];
m86_10 -> m86_12  [key=0, style=solid];
m86_10 -> m86_20  [key=2, style=dotted];
m86_11 -> m86_12  [key=0, style=solid];
m86_11 -> m86_13  [key=0, style=solid];
m86_12 -> m86_9  [color=blue, key=0, style=bold];
m86_12 -> m86_17  [key=0, style=solid];
m86_12 -> m86_21  [key=2, style=dotted];
m86_12 -> m86_22  [key=2, style=dotted];
m86_8 -> m86_9  [color=green, key=0, style=solid];
m86_8 -> m86_10  [key=0, style=solid];
m86_8 -> m86_19  [key=2, style=dotted];
m86_14 -> m86_15  [color=red, key=0, style=solid];
m86_14 -> m86_23  [key=2, style=dotted];
m86_16 -> m86_17  [color=red, key=0, style=solid];
m86_16 -> m86_25  [key=2, style=dotted];
m86_16 -> m86_0  [color=red, key=2, style=dotted];
m86_15 -> m86_16  [color=red, key=0, style=solid];
m86_15 -> m86_24  [key=2, style=dotted];
m86_15 -> m86_17  [color=red, key=0, style=solid];
m86_6 -> m86_17  [key=0, style=solid];
m86_6 -> n21  [key=2, style=dotted];
m86_17 -> m86_2  [color=blue, key=0, style=bold];
m86_17 -> m86_14  [color=blue, key=0, style=bold];
m86_93 -> m86_99  [key=0, style=solid];
m86_93 -> m86_101  [color=darkseagreen4, key=1, label="System.Func<SqlConnection, T>", style=dashed];
m86_100 -> m86_101  [key=0, style=solid];
m86_100 -> m86_23  [key=2, style=dotted];
m86_99 -> m86_100  [key=0, style=solid];
m86_101 -> m86_102  [key=0, style=solid];
m86_101 -> m86_103  [key=2, style=dotted];
m86_102 -> m86_93  [color=blue, key=0, style=bold];
m86_143 -> m86_144  [key=0, style=solid];
m86_143 -> m86_145  [key=2, style=dotted];
m86_144 -> m86_19  [color=blue, key=0, style=bold];
m86_107 -> m86_112  [key=0, style=solid];
m86_107 -> m86_113  [color=darkseagreen4, key=1, label="System.Func<SqlConnection, T>", style=dashed];
m86_112 -> m86_113  [key=0, style=solid];
m86_112 -> m86_117  [key=2, style=dotted];
m86_112 -> m86_114  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m86_113 -> m86_114  [key=0, style=solid];
m86_113 -> m86_93  [key=2, style=dotted];
m86_113 -> m86_115  [color=darkseagreen4, key=1, label=result, style=dashed];
m86_114 -> m86_115  [key=0, style=solid];
m86_114 -> m86_118  [key=2, style=dotted];
m86_115 -> m86_116  [key=0, style=solid];
m86_116 -> m86_107  [color=blue, key=0, style=bold];
m86_176 -> m86_9  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_39  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_43  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_50  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_56  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_91  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_100  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_105  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_112  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_113  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_119  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_120  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_121  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_128  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_134  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_138  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_176 -> m86_139  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m86_177 -> m86_95  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m86_178 -> m86_109  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m88_10 -> m88_11  [color=green, key=0, style=solid];
m88_10 -> m88_12  [color=green, key=1, label="string[]", style=dashed];
m88_10 -> m88_13  [color=green, key=1, label="string[]", style=dashed];
m88_10 -> m88_14  [color=green, key=1, label="string[]", style=dashed];
m88_10 -> m88_19  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m88_10 -> m88_22  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m88_11 -> m88_10  [color=blue, key=0, style=bold];
m88_11 -> m88_12  [color=green, key=0, style=solid];
m88_11 -> m88_13  [color=green, key=0, style=solid];
m88_4 -> m88_5  [key=0, style=solid];
m88_4 -> m88_7  [key=0, style=solid];
m88_4 -> n21  [key=2, style=dotted];
m88_4 -> m88_9  [key=2, style=dotted];
m88_5 -> m88_4  [color=blue, key=0, style=bold];
m88_5 -> m88_6  [color=green, key=0, style=solid];
m88_6 -> m88_7  [color=green, key=0, style=solid];
m88_7 -> m88_6  [color=blue, key=0, style=bold];
m88_7 -> m88_0  [color=blue, key=0, style=bold];
m88_8 -> m88_9  [key=0, style=solid];
m88_9 -> m88_8  [color=blue, key=0, style=bold];
m88_0 -> m88_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m88_0 -> m88_6  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m88_0 -> m88_1  [key=0, style=solid];
m88_0 -> m88_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m88_0 -> m88_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m88_0 -> m88_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m88_3 -> m88_5  [color=green, key=0, style=solid];
m88_3 -> m88_4  [key=0, style=solid];
m88_3 -> m88_2  [color=blue, key=0, style=bold];
m88_1 -> m88_3  [key=0, style=solid];
m88_1 -> m88_2  [key=0, style=solid];
m88_1 -> m88_0  [color=blue, key=0, style=bold];
m88_2 -> m88_7  [key=0, style=solid];
m88_2 -> n21  [key=2, style=dotted];
m88_2 -> m88_9  [key=2, style=dotted];
m88_2 -> m88_3  [key=0, style=solid];
m88_12 -> m88_13  [key=0, style=solid];
m88_12 -> m88_35  [color=green, key=0, style=solid];
m88_12 -> n21  [color=green, key=2, style=dotted];
m88_12 -> m88_9  [color=green, key=2, style=dotted];
m88_13 -> m88_12  [color=blue, key=0, style=bold];
m88_13 -> m88_14  [color=green, key=0, style=solid];
m88_13 -> m88_15  [color=green, key=0, style=solid];
m88_49 -> m88_50  [key=0, style=solid];
m88_49 -> m88_51  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m88_50 -> m88_51  [key=0, style=solid];
m88_51 -> m88_52  [key=0, style=solid];
m88_51 -> m88_53  [key=2, style=dotted];
m88_52 -> m88_49  [color=blue, key=0, style=bold];
m88_14 -> m88_35  [color=green, key=0, style=solid];
m88_14 -> m88_36  [color=green, key=2, style=dotted];
m88_14 -> m88_9  [color=green, key=2, style=dotted];
m88_15 -> m88_16  [color=green, key=0, style=solid];
m88_16 -> m88_17  [color=green, key=0, style=solid];
m88_17 -> m88_18  [key=0, style=solid];
m88_34 -> m88_35  [color=green, key=0, style=solid];
m88_34 -> m88_47  [color=green, key=2, style=dotted];
m88_34 -> m88_48  [color=green, key=2, style=dotted];
m88_22 -> m88_34  [color=green, key=1, label=fetchedJob, style=dashed];
m88_22 -> m88_23  [key=0, style=solid];
m88_22 -> m88_27  [key=0, style=solid];
m88_22 -> m88_40  [key=2, style=dotted];
m88_22 -> m88_41  [key=2, style=dotted];
m88_22 -> m88_42  [key=2, style=dotted];
m88_22 -> m88_33  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m88_20 -> m88_34  [color=green, key=1, label=connection, style=dashed];
m88_20 -> m88_22  [color=darkseagreen4, key=1, label=connection, style=dashed];
m88_20 -> m88_21  [key=0, style=solid];
m88_20 -> m88_38  [key=2, style=dotted];
m88_20 -> m88_25  [color=darkseagreen4, key=1, label=connection, style=dashed];
m88_20 -> m88_30  [color=darkseagreen4, key=1, label=connection, style=dashed];
m88_21 -> m88_34  [color=green, key=1, label=transaction, style=dashed];
m88_21 -> m88_22  [key=0, style=solid];
m88_21 -> m88_39  [key=2, style=dotted];
m88_21 -> m88_24  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m88_21 -> m88_28  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m88_21 -> m88_29  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m88_33 -> m88_34  [color=green, key=0, style=solid];
m88_33 -> m88_18  [key=0, style=solid];
m88_26 -> m88_35  [color=green, key=0, style=solid];
m88_25 -> m88_26  [color=green, key=0, style=solid];
m88_25 -> m88_44  [key=2, style=dotted];
m88_18 -> m88_22  [color=darkseagreen4, key=1, label=fetchJobSqlTemplate, style=dashed];
m88_18 -> m88_19  [key=0, style=solid];
m88_30 -> m88_31  [key=0, style=solid];
m88_30 -> m88_44  [key=2, style=dotted];
m88_31 -> m88_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m88_31 -> m88_32  [key=0, style=solid];
m88_31 -> m88_46  [key=2, style=dotted];
m88_19 -> m88_20  [key=0, style=solid];
m88_19 -> m88_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m88_19 -> m88_19  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m88_19 -> m88_37  [key=2, style=dotted];
m88_23 -> m88_24  [key=0, style=solid];
m88_27 -> m88_33  [key=0, style=solid];
m88_27 -> m88_28  [key=0, style=solid];
m88_24 -> m88_25  [key=0, style=solid];
m88_24 -> m88_43  [key=2, style=dotted];
m88_28 -> m88_29  [key=0, style=solid];
m88_28 -> m88_45  [key=2, style=dotted];
m88_29 -> m88_30  [key=0, style=solid];
m88_29 -> m88_43  [key=2, style=dotted];
m88_32 -> m88_33  [key=0, style=solid];
m88_32 -> m88_32  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m88_32 -> m88_37  [key=2, style=dotted];
m88_35 -> m88_10  [color=blue, key=0, style=bold];
m88_54 -> m88_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m88_54 -> m88_6  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m88_54 -> m88_34  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m88_54 -> m88_18  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m88_54 -> m88_20  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m88_54 -> m88_22  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m88_54 -> m88_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m88_54 -> m88_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m88_54 -> m88_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m88_54 -> m88_50  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m89_15 -> m89_16  [key=0, style=solid];
m89_15 -> m89_18  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformedContext", style=dashed];
m89_17 -> m89_20  [color=green, key=0, style=solid];
m89_17 -> m89_22  [color=green, key=2, style=dotted];
m89_16 -> m89_17  [color=green, key=0, style=solid];
m89_16 -> m89_18  [key=0, style=solid];
m89_16 -> m89_21  [key=2, style=dotted];
m89_18 -> m89_19  [key=0, style=solid];
m89_19 -> m89_20  [key=0, style=solid];
m89_19 -> m89_23  [key=2, style=dotted];
m89_20 -> m89_15  [color=blue, key=0, style=bold];
m90_0 -> m90_1  [key=0, style=solid];
m90_1 -> m90_0  [color=blue, key=0, style=bold];
m92_0 -> m92_1  [key=0, style=solid];
m92_1 -> m92_0  [color=blue, key=0, style=bold];
m93_0 -> m93_1  [key=0, style=solid];
m93_35 -> m93_36  [color=green, key=0, style=solid];
m93_35 -> m93_69  [color=green, key=0, style=solid];
m93_35 -> m93_37  [color=green, key=1, label=job, style=dashed];
m93_8 -> m93_35  [color=green, key=1, label=succeededJobs, style=dashed];
m93_8 -> m93_9  [key=0, style=solid];
m93_8 -> m93_81  [key=2, style=dotted];
m93_34 -> m93_35  [color=green, key=0, style=solid];
m93_34 -> m93_74  [key=2, style=dotted];
m93_68 -> m93_35  [color=green, key=0, style=solid];
m93_68 -> m93_74  [key=2, style=dotted];
m93_36 -> m93_37  [color=green, key=0, style=solid];
m93_36 -> m93_74  [color=green, key=2, style=dotted];
m93_69 -> m93_70  [key=0, style=solid];
m93_69 -> m93_74  [key=2, style=dotted];
m93_37 -> m93_37  [color=green, key=1, label=job, style=dashed];
m93_37 -> m93_38  [color=green, key=0, style=solid];
m93_37 -> m93_83  [color=green, key=2, style=dotted];
m93_37 -> m93_39  [color=green, key=1, label=job, style=dashed];
m93_12 -> m93_13  [color=green, key=0, style=solid];
m93_12 -> m93_83  [color=green, key=2, style=dotted];
m93_11 -> m93_12  [color=green, key=0, style=solid];
m93_11 -> m93_74  [key=2, style=dotted];
m93_13 -> m93_14  [color=green, key=0, style=solid];
m93_13 -> m93_74  [color=green, key=2, style=dotted];
m93_14 -> m93_15  [key=0, style=solid];
m93_14 -> m93_18  [key=0, style=solid];
m93_17 -> m93_72  [color=green, key=0, style=solid];
m93_17 -> m93_74  [color=green, key=2, style=dotted];
m93_16 -> m93_17  [color=green, key=0, style=solid];
m93_16 -> m93_83  [key=2, style=dotted];
m93_72 -> m93_74  [key=2, style=dotted];
m93_72 -> m93_73  [key=0, style=solid];
m93_19 -> m93_20  [color=green, key=0, style=solid];
m93_19 -> m93_84  [color=green, key=2, style=dotted];
m93_19 -> m93_83  [color=green, key=2, style=dotted];
m93_18 -> m93_19  [color=green, key=0, style=solid];
m93_18 -> m93_74  [key=2, style=dotted];
m93_20 -> m93_21  [color=green, key=0, style=solid];
m93_20 -> m93_74  [color=green, key=2, style=dotted];
m93_21 -> m93_22  [color=green, key=0, style=solid];
m93_21 -> m93_83  [color=green, key=2, style=dotted];
m93_22 -> m93_74  [key=2, style=dotted];
m93_22 -> m93_23  [key=0, style=solid];
m93_26 -> m93_27  [color=green, key=0, style=solid];
m93_26 -> m93_74  [color=green, key=2, style=dotted];
m93_25 -> m93_26  [color=green, key=0, style=solid];
m93_25 -> m93_83  [key=2, style=dotted];
m93_25 -> m93_85  [key=2, style=dotted];
m93_27 -> m93_28  [color=green, key=0, style=solid];
m93_27 -> m93_83  [key=2, style=dotted];
m93_28 -> m93_29  [color=green, key=0, style=solid];
m93_28 -> m93_74  [color=green, key=2, style=dotted];
m93_29 -> m93_30  [color=green, key=0, style=solid];
m93_29 -> m93_83  [color=green, key=2, style=dotted];
m93_30 -> m93_31  [color=green, key=0, style=solid];
m93_30 -> m93_74  [color=green, key=2, style=dotted];
m93_31 -> m93_32  [color=green, key=0, style=solid];
m93_31 -> m93_83  [color=green, key=2, style=dotted];
m93_32 -> m93_33  [color=green, key=0, style=solid];
m93_32 -> m93_74  [color=green, key=2, style=dotted];
m93_33 -> m93_34  [color=green, key=0, style=solid];
m93_33 -> m93_83  [color=green, key=2, style=dotted];
m93_38 -> m93_39  [color=green, key=0, style=solid];
m93_38 -> m93_74  [key=2, style=dotted];
m93_39 -> m93_39  [color=green, key=1, label=job, style=dashed];
m93_39 -> m93_40  [color=green, key=0, style=solid];
m93_39 -> m93_83  [color=green, key=2, style=dotted];
m93_39 -> m93_41  [color=green, key=1, label=job, style=dashed];
m93_40 -> m93_74  [key=2, style=dotted];
m93_40 -> m93_41  [key=0, style=solid];
m93_41 -> m93_45  [color=green, key=0, style=solid];
m93_41 -> m93_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_41 -> m93_42  [key=0, style=solid];
m93_41 -> m93_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_41 -> m93_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_45 -> m93_46  [color=green, key=0, style=solid];
m93_45 -> m93_74  [color=green, key=2, style=dotted];
m93_44 -> m93_45  [color=green, key=0, style=solid];
m93_44 -> m93_74  [key=2, style=dotted];
m93_46 -> m93_48  [color=green, key=1, label=job, style=dashed];
m93_46 -> m93_83  [key=2, style=dotted];
m93_46 -> m93_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_46 -> m93_47  [key=0, style=solid];
m93_46 -> m93_86  [key=2, style=dotted];
m93_48 -> m93_48  [color=green, key=1, label=job, style=dashed];
m93_48 -> m93_49  [color=green, key=0, style=solid];
m93_48 -> m93_52  [color=green, key=0, style=solid];
m93_48 -> m93_53  [color=green, key=1, label=job, style=dashed];
m93_47 -> m93_48  [color=green, key=0, style=solid];
m93_47 -> m93_74  [key=2, style=dotted];
m93_49 -> m93_50  [color=green, key=0, style=solid];
m93_49 -> m93_74  [key=2, style=dotted];
m93_52 -> m93_53  [color=green, key=0, style=solid];
m93_52 -> m93_74  [key=2, style=dotted];
m93_53 -> m93_53  [color=green, key=1, label=job, style=dashed];
m93_53 -> m93_54  [color=green, key=0, style=solid];
m93_53 -> m93_57  [color=green, key=0, style=solid];
m93_53 -> m93_58  [color=green, key=1, label=job, style=dashed];
m93_54 -> m93_55  [color=green, key=0, style=solid];
m93_54 -> m93_74  [color=green, key=2, style=dotted];
m93_57 -> m93_58  [color=green, key=0, style=solid];
m93_57 -> m93_74  [color=green, key=2, style=dotted];
m93_58 -> m93_59  [color=green, key=0, style=solid];
m93_58 -> m93_83  [key=2, style=dotted];
m93_58 -> m93_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_58 -> m93_87  [key=2, style=dotted];
m93_58 -> m93_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_50 -> m93_51  [color=green, key=0, style=solid];
m93_50 -> m93_83  [color=green, key=2, style=dotted];
m93_51 -> m93_52  [color=green, key=0, style=solid];
m93_51 -> m93_74  [color=green, key=2, style=dotted];
m93_55 -> m93_83  [key=2, style=dotted];
m93_55 -> m93_56  [key=0, style=solid];
m93_59 -> m93_60  [color=green, key=0, style=solid];
m93_59 -> m93_74  [color=green, key=2, style=dotted];
m93_60 -> m93_74  [key=2, style=dotted];
m93_60 -> m93_61  [key=0, style=solid];
m93_7 -> m93_8  [key=0, style=solid];
m93_7 -> m93_14  [color=darkseagreen4, key=1, label=pager, style=dashed];
m93_7 -> m93_25  [color=darkseagreen4, key=1, label=pager, style=dashed];
m93_7 -> m93_79  [key=2, style=dotted];
m93_7 -> m93_80  [key=2, style=dotted];
m93_7 -> m93_70  [color=darkseagreen4, key=1, label=pager, style=dashed];
m93_6 -> m93_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m93_6 -> m93_7  [key=0, style=solid];
m93_6 -> m93_78  [key=2, style=dotted];
m93_9 -> m93_74  [key=2, style=dotted];
m93_9 -> m93_10  [key=0, style=solid];
m93_56 -> m93_68  [key=0, style=solid];
m93_56 -> m93_74  [key=2, style=dotted];
m93_67 -> m93_68  [key=0, style=solid];
m93_67 -> m93_74  [key=2, style=dotted];
m93_70 -> m93_83  [key=2, style=dotted];
m93_70 -> m93_71  [key=0, style=solid];
m93_70 -> m93_91  [key=2, style=dotted];
m93_1 -> m93_74  [key=2, style=dotted];
m93_1 -> m93_2  [key=0, style=solid];
m93_2 -> m93_3  [key=0, style=solid];
m93_2 -> m93_75  [key=2, style=dotted];
m93_4 -> m93_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m93_4 -> m93_5  [key=0, style=solid];
m93_4 -> m93_76  [key=2, style=dotted];
m93_4 -> m93_77  [key=2, style=dotted];
m93_5 -> m93_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m93_5 -> m93_6  [key=0, style=solid];
m93_5 -> m93_76  [key=2, style=dotted];
m93_5 -> m93_77  [key=2, style=dotted];
m93_10 -> m93_11  [key=0, style=solid];
m93_10 -> m93_83  [key=2, style=dotted];
m93_10 -> m93_82  [key=2, style=dotted];
m93_15 -> m93_74  [key=2, style=dotted];
m93_15 -> m93_16  [key=0, style=solid];
m93_23 -> m93_83  [key=2, style=dotted];
m93_23 -> m93_24  [key=0, style=solid];
m93_24 -> m93_74  [key=2, style=dotted];
m93_24 -> m93_25  [key=0, style=solid];
m93_42 -> m93_74  [key=2, style=dotted];
m93_42 -> m93_43  [key=0, style=solid];
m93_43 -> m93_83  [key=2, style=dotted];
m93_43 -> m93_44  [key=0, style=solid];
m93_43 -> m93_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_43 -> m93_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_62 -> m93_83  [key=2, style=dotted];
m93_62 -> m93_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_62 -> m93_63  [key=0, style=solid];
m93_62 -> m93_88  [key=2, style=dotted];
m93_62 -> m93_89  [key=2, style=dotted];
m93_62 -> m93_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_63 -> m93_74  [key=2, style=dotted];
m93_63 -> m93_64  [key=0, style=solid];
m93_64 -> m93_74  [key=2, style=dotted];
m93_64 -> m93_65  [key=0, style=solid];
m93_66 -> m93_83  [key=2, style=dotted];
m93_66 -> m93_67  [key=0, style=solid];
m93_66 -> m93_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_66 -> m93_90  [key=2, style=dotted];
m93_71 -> m93_74  [key=2, style=dotted];
m93_71 -> m93_72  [key=0, style=solid];
m93_61 -> m93_62  [key=0, style=solid];
m93_61 -> m93_63  [key=0, style=solid];
m93_61 -> m93_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_61 -> m93_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_65 -> m93_67  [key=0, style=solid];
m93_65 -> m93_66  [key=0, style=solid];
m93_65 -> m93_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_3 -> m93_4  [key=0, style=solid];
m93_73 -> m93_0  [color=blue, key=0, style=bold];
m93_92 -> m93_12  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_13  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_17  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_19  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_20  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_21  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_26  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_28  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_29  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_30  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_31  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_32  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_33  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_36  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_37  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_39  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_45  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_50  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_51  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_54  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_57  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_59  [color=green, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_46  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_56  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_58  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_63  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_67  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m93_92 -> m93_72  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.SucceededJobs", style=dashed];
m95_21 -> m95_22  [color=red, key=0, style=solid];
m95_21 -> m95_25  [color=red, key=1, label=string, style=dashed];
m95_22 -> m95_23  [color=red, key=0, style=solid];
m95_22 -> m95_5  [color=red, key=2, style=dotted];
m95_22 -> m95_28  [color=red, key=2, style=dotted];
m95_22 -> m95_25  [color=red, key=1, label=genericArguments, style=dashed];
m95_25 -> m95_26  [color=red, key=0, style=solid];
m95_25 -> m95_30  [color=red, key=2, style=dotted];
m95_25 -> m95_25  [color=red, key=1, label=string, style=dashed];
m95_25 -> m95_31  [color=red, key=1, label="lambda expression", style=dashed];
m95_25 -> m95_33  [color=red, key=1, label=genericArguments, style=dashed];
m95_25 -> m95_34  [color=red, key=1, label=genericArguments, style=dashed];
m95_23 -> m95_24  [color=red, key=0, style=solid];
m95_23 -> m95_23  [color=red, key=3, label="Local variable string regexForGenericArguments", style=bold];
m95_24 -> m95_25  [color=red, key=0, style=solid];
m95_24 -> m95_29  [color=red, key=2, style=dotted];
m95_26 -> m95_27  [color=red, key=0, style=solid];
m95_27 -> m95_21  [color=blue, key=0, style=bold];
m95_17 -> m95_18  [color=red, key=0, style=solid];
m95_18 -> m95_19  [color=red, key=0, style=solid];
m95_18 -> m95_20  [color=red, key=2, style=dotted];
m95_19 -> m95_17  [color=blue, key=0, style=bold];
m95_9 -> m95_0  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m95_9 -> m95_9  [color=darkorchid, key=3, label="method methodReturn string ReplaceGenericParametersInGenericTypeName", style=bold];
m95_0 -> m95_1  [color=red, key=0, style=solid];
m95_0 -> m95_2  [color=red, key=1, label="System.Type", style=dashed];
m95_0 -> m95_3  [color=red, key=1, label="System.Type", style=dashed];
m95_0 -> m95_7  [color=darkorchid, key=3, label="method methodReturn string ToGenericTypeString", style=bold];
m95_0 -> m95_9  [color=darkorchid, key=3, label="method methodReturn string ToGenericTypeString", style=bold];
m95_1 -> m95_2  [color=red, key=0, style=solid];
m95_1 -> m95_3  [color=red, key=0, style=solid];
m95_1 -> m95_5  [color=red, key=2, style=dotted];
m95_2 -> m95_4  [color=red, key=0, style=solid];
m95_2 -> m95_6  [color=red, key=2, style=dotted];
m95_2 -> m95_7  [color=red, key=2, style=dotted];
m95_3 -> m95_4  [color=red, key=0, style=solid];
m95_3 -> m95_8  [color=red, key=2, style=dotted];
m95_3 -> m95_6  [color=red, key=2, style=dotted];
m95_3 -> m95_7  [color=red, key=2, style=dotted];
m95_3 -> m95_9  [color=red, key=2, style=dotted];
m95_4 -> m95_0  [color=blue, key=0, style=bold];
m95_31 -> m95_32  [color=red, key=0, style=solid];
m95_33 -> m95_34  [color=red, key=0, style=solid];
m95_33 -> m95_38  [color=red, key=2, style=dotted];
m95_33 -> m95_39  [color=red, key=2, style=dotted];
m95_33 -> m95_40  [color=red, key=2, style=dotted];
m95_33 -> m95_35  [color=red, key=1, label=currentArguments, style=dashed];
m95_34 -> m95_35  [color=red, key=0, style=solid];
m95_34 -> m95_41  [color=red, key=2, style=dotted];
m95_34 -> m95_42  [color=red, key=2, style=dotted];
m95_34 -> m95_34  [color=red, key=1, label=genericArguments, style=dashed];
m95_32 -> m95_33  [color=red, key=0, style=solid];
m95_32 -> m95_16  [color=red, key=2, style=dotted];
m95_32 -> m95_37  [color=red, key=2, style=dotted];
m95_32 -> m95_34  [color=red, key=1, label=currentGenericArgumentNumbers, style=dashed];
m95_35 -> m95_36  [color=red, key=0, style=solid];
m95_35 -> m95_43  [color=red, key=2, style=dotted];
m95_36 -> m95_31  [color=blue, key=0, style=bold];
m95_10 -> m95_11  [color=red, key=0, style=solid];
m95_10 -> m95_12  [color=red, key=1, label="System.Type", style=dashed];
m95_10 -> m95_14  [color=red, key=1, label="System.Type", style=dashed];
m95_11 -> m95_12  [color=red, key=0, style=solid];
m95_11 -> m95_13  [color=red, key=0, style=solid];
m95_12 -> m95_15  [color=red, key=0, style=solid];
m95_14 -> m95_15  [color=red, key=0, style=solid];
m95_14 -> m95_16  [color=red, key=2, style=dotted];
m95_13 -> m95_14  [color=red, key=0, style=solid];
m95_13 -> m95_13  [color=red, key=3, label="Local variable int dotLength", style=bold];
m95_15 -> m95_10  [color=blue, key=0, style=bold];
m95_44 -> m95_45  [color=red, key=0, style=solid];
m95_45 -> m95_46  [color=red, key=0, style=solid];
m95_46 -> m95_44  [color=blue, key=0, style=bold];
m95_47 -> m95_33  [color=red, key=1, label=genericArguments, style=dashed];
m95_47 -> m95_34  [color=red, key=1, label=genericArguments, style=dashed];
m96_7 -> m96_8  [color=red, key=0, style=solid];
m96_8 -> m96_9  [color=red, key=0, style=solid];
m96_8 -> m96_5  [color=red, key=2, style=dotted];
m96_8 -> d6  [color=red, key=2, style=dotted];
m96_9 -> m96_10  [color=red, key=0, style=solid];
m96_9 -> m96_5  [color=red, key=2, style=dotted];
m96_9 -> d6  [color=red, key=2, style=dotted];
m96_10 -> m96_11  [color=red, key=0, style=solid];
m96_10 -> m96_5  [color=red, key=2, style=dotted];
m96_10 -> d6  [color=red, key=2, style=dotted];
m96_11 -> m96_12  [color=red, key=0, style=solid];
m96_11 -> m96_5  [color=red, key=2, style=dotted];
m96_11 -> d6  [color=red, key=2, style=dotted];
m96_12 -> m96_7  [color=blue, key=0, style=bold];
m96_0 -> m96_1  [color=red, key=0, style=solid];
m96_1 -> m96_2  [color=red, key=0, style=solid];
m96_1 -> m96_5  [color=red, key=2, style=dotted];
m96_1 -> d6  [color=red, key=2, style=dotted];
m96_2 -> m96_3  [color=red, key=0, style=solid];
m96_2 -> m96_5  [color=red, key=2, style=dotted];
m96_2 -> d6  [color=red, key=2, style=dotted];
m96_3 -> m96_4  [color=red, key=0, style=solid];
m96_3 -> m96_5  [color=red, key=2, style=dotted];
m96_3 -> d6  [color=red, key=2, style=dotted];
m96_4 -> m96_0  [color=blue, key=0, style=bold];
m96_13 -> m96_14  [color=red, key=0, style=solid];
m96_14 -> m96_15  [color=red, key=0, style=solid];
m96_14 -> m96_5  [color=red, key=2, style=dotted];
m96_14 -> d6  [color=red, key=2, style=dotted];
m96_15 -> m96_16  [color=red, key=0, style=solid];
m96_15 -> m96_5  [color=red, key=2, style=dotted];
m96_15 -> d6  [color=red, key=2, style=dotted];
m96_16 -> m96_17  [color=red, key=0, style=solid];
m96_16 -> m96_5  [color=red, key=2, style=dotted];
m96_16 -> d6  [color=red, key=2, style=dotted];
m96_17 -> m96_18  [color=red, key=0, style=solid];
m96_17 -> m96_5  [color=red, key=2, style=dotted];
m96_17 -> d6  [color=red, key=2, style=dotted];
m96_18 -> m96_13  [color=blue, key=0, style=bold];
m97_8 -> m97_9  [key=0, style=solid];
m97_9 -> m97_8  [color=blue, key=0, style=bold];
m97_0 -> m97_1  [key=0, style=solid];
m97_1 -> m97_0  [color=blue, key=0, style=bold];
m97_10 -> m97_11  [key=0, style=solid];
m97_11 -> m97_10  [color=blue, key=0, style=bold];
m97_4 -> m97_5  [key=0, style=solid];
m97_5 -> m97_4  [color=blue, key=0, style=bold];
m97_2 -> m97_3  [key=0, style=solid];
m97_3 -> m97_2  [color=blue, key=0, style=bold];
m97_12 -> m97_13  [key=0, style=solid];
m97_13 -> m97_12  [color=blue, key=0, style=bold];
m97_6 -> m97_7  [key=0, style=solid];
m97_7 -> m97_6  [color=blue, key=0, style=bold];
m98_162 -> m98_163  [key=0, style=solid];
m98_163 -> m98_164  [key=0, style=solid];
m98_163 -> m98_78  [key=2, style=dotted];
m98_164 -> m98_165  [key=0, style=solid];
m98_164 -> m98_79  [key=2, style=dotted];
m98_165 -> m98_166  [key=0, style=solid];
m98_165 -> m98_80  [key=2, style=dotted];
m98_165 -> m98_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_166 -> m98_162  [color=blue, key=0, style=bold];
m98_250 -> m98_251  [key=0, style=solid];
m98_251 -> m98_252  [key=0, style=solid];
m98_251 -> m98_257  [key=2, style=dotted];
m98_251 -> m98_255  [color=darkseagreen4, key=1, label=exception, style=dashed];
m98_251 -> m98_263  [color=darkseagreen4, key=1, label=exception, style=dashed];
m98_251 -> m98_266  [color=darkseagreen4, key=1, label=exception, style=dashed];
m98_252 -> m98_253  [key=0, style=solid];
m98_252 -> m98_16  [key=2, style=dotted];
m98_252 -> m98_258  [key=2, style=dotted];
m98_252 -> m98_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_255 -> m98_256  [key=0, style=solid];
m98_255 -> m98_80  [key=2, style=dotted];
m98_255 -> m98_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_253 -> m98_254  [key=0, style=solid];
m98_253 -> m98_78  [key=2, style=dotted];
m98_254 -> m98_255  [key=0, style=solid];
m98_254 -> m98_79  [key=2, style=dotted];
m98_256 -> m98_250  [color=blue, key=0, style=bold];
m98_58 -> m98_59  [key=0, style=solid];
m98_59 -> m98_60  [key=0, style=solid];
m98_59 -> m98_22  [key=2, style=dotted];
m98_59 -> m98_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_60 -> m98_61  [key=0, style=solid];
m98_60 -> d6  [key=2, style=dotted];
m98_61 -> m98_58  [color=blue, key=0, style=bold];
m98_239 -> m98_240  [key=0, style=solid];
m98_240 -> m98_241  [key=0, style=solid];
m98_240 -> m98_78  [key=2, style=dotted];
m98_241 -> m98_242  [key=0, style=solid];
m98_241 -> m98_79  [key=2, style=dotted];
m98_242 -> m98_243  [key=0, style=solid];
m98_242 -> m98_80  [key=2, style=dotted];
m98_242 -> m98_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_243 -> m98_239  [color=blue, key=0, style=bold];
m98_174 -> m98_175  [key=0, style=solid];
m98_175 -> m98_176  [key=0, style=solid];
m98_175 -> m98_16  [key=2, style=dotted];
m98_175 -> m98_22  [key=2, style=dotted];
m98_175 -> m98_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_176 -> m98_177  [key=0, style=solid];
m98_176 -> m98_78  [key=2, style=dotted];
m98_177 -> m98_178  [key=0, style=solid];
m98_177 -> m98_79  [key=2, style=dotted];
m98_178 -> m98_179  [key=0, style=solid];
m98_178 -> m98_80  [key=2, style=dotted];
m98_178 -> m98_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_179 -> m98_174  [color=blue, key=0, style=bold];
m98_189 -> m98_190  [key=0, style=solid];
m98_190 -> m98_191  [key=0, style=solid];
m98_190 -> m98_78  [key=2, style=dotted];
m98_191 -> m98_192  [key=0, style=solid];
m98_191 -> m98_79  [key=2, style=dotted];
m98_192 -> m98_193  [key=0, style=solid];
m98_192 -> m98_80  [key=2, style=dotted];
m98_192 -> m98_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_193 -> m98_189  [color=blue, key=0, style=bold];
m98_101 -> m98_102  [key=0, style=solid];
m98_102 -> m98_103  [key=0, style=solid];
m98_102 -> m98_16  [key=2, style=dotted];
m98_102 -> m98_22  [key=2, style=dotted];
m98_102 -> m98_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_103 -> m98_104  [key=0, style=solid];
m98_103 -> m98_78  [key=2, style=dotted];
m98_103 -> m98_112  [color=darkseagreen4, key=1, label=worker, style=dashed];
m98_104 -> m98_105  [key=0, style=solid];
m98_104 -> m98_22  [key=2, style=dotted];
m98_104 -> m98_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_105 -> m98_106  [key=0, style=solid];
m98_105 -> m98_80  [key=2, style=dotted];
m98_105 -> m98_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_106 -> m98_107  [key=0, style=solid];
m98_106 -> m98_80  [key=2, style=dotted];
m98_106 -> m98_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_107 -> m98_101  [color=blue, key=0, style=bold];
m98_219 -> m98_220  [key=0, style=solid];
m98_220 -> m98_221  [key=0, style=solid];
m98_220 -> m98_16  [key=2, style=dotted];
m98_220 -> m98_22  [key=2, style=dotted];
m98_220 -> m98_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_221 -> m98_222  [key=0, style=solid];
m98_221 -> m98_78  [key=2, style=dotted];
m98_221 -> m98_231  [color=darkseagreen4, key=1, label=worker, style=dashed];
m98_222 -> m98_223  [key=0, style=solid];
m98_222 -> m98_226  [key=2, style=dotted];
m98_222 -> m98_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_223 -> m98_224  [key=0, style=solid];
m98_223 -> m98_80  [key=2, style=dotted];
m98_223 -> m98_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_224 -> m98_225  [key=0, style=solid];
m98_224 -> m98_80  [key=2, style=dotted];
m98_224 -> m98_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_225 -> m98_219  [color=blue, key=0, style=bold];
m98_78 -> m98_302  [key=0, style=solid];
m98_302 -> m98_303  [key=0, style=solid];
m98_302 -> m98_57  [key=2, style=dotted];
m98_303 -> m98_78  [color=blue, key=0, style=bold];
m98_268 -> m98_269  [key=0, style=solid];
m98_269 -> m98_270  [key=0, style=solid];
m98_269 -> m98_257  [key=2, style=dotted];
m98_270 -> m98_271  [key=0, style=solid];
m98_270 -> m98_16  [key=2, style=dotted];
m98_270 -> m98_275  [key=2, style=dotted];
m98_270 -> m98_258  [key=2, style=dotted];
m98_270 -> m98_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_271 -> m98_272  [key=0, style=solid];
m98_271 -> m98_78  [key=2, style=dotted];
m98_272 -> m98_273  [key=0, style=solid];
m98_272 -> m98_79  [key=2, style=dotted];
m98_273 -> m98_274  [key=0, style=solid];
m98_273 -> m98_80  [key=2, style=dotted];
m98_273 -> m98_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_274 -> m98_268  [color=blue, key=0, style=bold];
m98_0 -> m98_1  [key=0, style=solid];
m98_1 -> m98_2  [key=0, style=solid];
m98_1 -> m98_13  [key=2, style=dotted];
m98_2 -> m98_3  [key=0, style=solid];
m98_3 -> m98_4  [key=0, style=solid];
m98_3 -> m98_14  [key=2, style=dotted];
m98_4 -> m98_5  [key=0, style=solid];
m98_4 -> m98_15  [key=2, style=dotted];
m98_5 -> m98_6  [key=0, style=solid];
m98_5 -> m98_16  [key=2, style=dotted];
m98_5 -> m98_17  [key=2, style=dotted];
m98_5 -> m98_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_6 -> m98_7  [key=0, style=solid];
m98_6 -> m98_18  [key=2, style=dotted];
m98_7 -> m98_8  [key=0, style=solid];
m98_7 -> m98_16  [key=2, style=dotted];
m98_7 -> m98_17  [key=2, style=dotted];
m98_7 -> m98_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_8 -> m98_9  [key=0, style=solid];
m98_8 -> m98_16  [key=2, style=dotted];
m98_8 -> m98_17  [key=2, style=dotted];
m98_8 -> m98_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_9 -> m98_10  [key=0, style=solid];
m98_9 -> m98_16  [key=2, style=dotted];
m98_9 -> m98_19  [key=2, style=dotted];
m98_9 -> m98_20  [key=2, style=dotted];
m98_9 -> m98_17  [key=2, style=dotted];
m98_9 -> m98_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_9 -> m98_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_10 -> m98_11  [key=0, style=solid];
m98_10 -> m98_21  [key=2, style=dotted];
m98_11 -> m98_12  [key=0, style=solid];
m98_11 -> m98_16  [key=2, style=dotted];
m98_11 -> m98_22  [key=2, style=dotted];
m98_11 -> m98_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_11 -> m98_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_12 -> m98_0  [color=blue, key=0, style=bold];
m98_49 -> m98_50  [key=0, style=solid];
m98_50 -> m98_51  [key=0, style=solid];
m98_50 -> m98_22  [key=2, style=dotted];
m98_50 -> m98_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_51 -> m98_52  [key=0, style=solid];
m98_51 -> d6  [key=2, style=dotted];
m98_52 -> m98_49  [color=blue, key=0, style=bold];
m98_72 -> m98_73  [key=0, style=solid];
m98_73 -> m98_74  [key=0, style=solid];
m98_73 -> m98_78  [key=2, style=dotted];
m98_74 -> m98_75  [key=0, style=solid];
m98_74 -> m98_79  [key=2, style=dotted];
m98_75 -> m98_76  [key=0, style=solid];
m98_75 -> m98_80  [key=2, style=dotted];
m98_75 -> m98_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_76 -> m98_77  [key=0, style=solid];
m98_76 -> m98_80  [key=2, style=dotted];
m98_76 -> m98_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_77 -> m98_72  [color=blue, key=0, style=bold];
m98_285 -> m98_286  [key=0, style=solid];
m98_286 -> m98_287  [key=0, style=solid];
m98_286 -> m98_16  [key=2, style=dotted];
m98_286 -> m98_19  [key=2, style=dotted];
m98_286 -> m98_291  [key=2, style=dotted];
m98_286 -> m98_292  [key=2, style=dotted];
m98_286 -> m98_17  [key=2, style=dotted];
m98_286 -> m98_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_287 -> m98_288  [key=0, style=solid];
m98_287 -> m98_78  [key=2, style=dotted];
m98_288 -> m98_289  [key=0, style=solid];
m98_288 -> m98_79  [key=2, style=dotted];
m98_289 -> m98_290  [key=0, style=solid];
m98_289 -> m98_80  [key=2, style=dotted];
m98_289 -> m98_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_290 -> m98_285  [color=blue, key=0, style=bold];
m98_299 -> m98_300  [key=0, style=solid];
m98_23 -> m98_24  [key=0, style=solid];
m98_27 -> m98_28  [key=0, style=solid];
m98_30 -> m98_31  [key=0, style=solid];
m98_34 -> m98_35  [key=0, style=solid];
m98_38 -> m98_39  [key=0, style=solid];
m98_42 -> m98_43  [key=0, style=solid];
m98_46 -> m98_47  [key=0, style=solid];
m98_24 -> m98_25  [key=0, style=solid];
m98_24 -> m98_26  [key=2, style=dotted];
m98_25 -> m98_23  [color=blue, key=0, style=bold];
m98_28 -> m98_29  [key=0, style=solid];
m98_29 -> m98_27  [color=blue, key=0, style=bold];
m98_31 -> m98_32  [key=0, style=solid];
m98_31 -> m98_22  [key=2, style=dotted];
m98_31 -> m98_33  [key=2, style=dotted];
m98_32 -> m98_30  [color=blue, key=0, style=bold];
m98_35 -> m98_36  [key=0, style=solid];
m98_35 -> m98_37  [key=2, style=dotted];
m98_36 -> m98_34  [color=blue, key=0, style=bold];
m98_39 -> m98_40  [key=0, style=solid];
m98_39 -> m98_41  [key=2, style=dotted];
m98_40 -> m98_38  [color=blue, key=0, style=bold];
m98_43 -> m98_44  [key=0, style=solid];
m98_43 -> m98_22  [key=2, style=dotted];
m98_43 -> m98_45  [key=2, style=dotted];
m98_44 -> m98_42  [color=blue, key=0, style=bold];
m98_47 -> m98_48  [key=0, style=solid];
m98_48 -> m98_46  [color=blue, key=0, style=bold];
m98_54 -> m98_55  [key=0, style=solid];
m98_55 -> m98_56  [key=0, style=solid];
m98_55 -> m98_57  [key=2, style=dotted];
m98_56 -> m98_54  [color=blue, key=0, style=bold];
m98_62 -> m98_63  [key=0, style=solid];
m98_63 -> m98_64  [key=0, style=solid];
m98_63 -> m98_57  [key=2, style=dotted];
m98_64 -> m98_62  [color=blue, key=0, style=bold];
m98_69 -> m98_70  [key=0, style=solid];
m98_70 -> m98_71  [key=0, style=solid];
m98_70 -> m98_57  [key=2, style=dotted];
m98_71 -> m98_69  [color=blue, key=0, style=bold];
m98_81 -> m98_82  [key=0, style=solid];
m98_84 -> m98_85  [key=0, style=solid];
m98_82 -> m98_83  [key=0, style=solid];
m98_82 -> m98_26  [key=2, style=dotted];
m98_83 -> m98_81  [color=blue, key=0, style=bold];
m98_85 -> m98_86  [key=0, style=solid];
m98_85 -> m98_87  [key=2, style=dotted];
m98_86 -> m98_84  [color=blue, key=0, style=bold];
m98_94 -> m98_95  [key=0, style=solid];
m98_97 -> m98_98  [key=0, style=solid];
m98_95 -> m98_96  [key=0, style=solid];
m98_95 -> m98_33  [key=2, style=dotted];
m98_96 -> m98_94  [color=blue, key=0, style=bold];
m98_98 -> m98_99  [key=0, style=solid];
m98_98 -> m98_100  [key=2, style=dotted];
m98_99 -> m98_97  [color=blue, key=0, style=bold];
m98_108 -> m98_109  [key=0, style=solid];
m98_112 -> m98_113  [key=0, style=solid];
m98_112 -> m98_79  [key=2, style=dotted];
m98_111 -> m98_112  [key=0, style=solid];
m98_114 -> m98_115  [key=0, style=solid];
m98_117 -> m98_118  [key=0, style=solid];
m98_109 -> m98_110  [key=0, style=solid];
m98_109 -> m98_22  [key=2, style=dotted];
m98_109 -> m98_45  [key=2, style=dotted];
m98_110 -> m98_108  [color=blue, key=0, style=bold];
m98_113 -> m98_111  [color=blue, key=0, style=bold];
m98_115 -> m98_116  [key=0, style=solid];
m98_115 -> m98_100  [key=2, style=dotted];
m98_116 -> m98_114  [color=blue, key=0, style=bold];
m98_118 -> m98_119  [key=0, style=solid];
m98_118 -> m98_120  [key=2, style=dotted];
m98_119 -> m98_117  [color=blue, key=0, style=bold];
m98_129 -> m98_130  [key=0, style=solid];
m98_135 -> m98_136  [key=0, style=solid];
m98_138 -> m98_139  [key=0, style=solid];
m98_142 -> m98_143  [key=0, style=solid];
m98_148 -> m98_149  [key=0, style=solid];
m98_130 -> m98_131  [key=0, style=solid];
m98_130 -> m98_22  [key=2, style=dotted];
m98_130 -> m98_45  [key=2, style=dotted];
m98_130 -> m98_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_131 -> m98_129  [color=blue, key=0, style=bold];
m98_132 -> m98_133  [key=0, style=solid];
m98_133 -> m98_134  [key=0, style=solid];
m98_134 -> m98_132  [color=blue, key=0, style=bold];
m98_136 -> m98_137  [key=0, style=solid];
m98_137 -> m98_135  [color=blue, key=0, style=bold];
m98_139 -> m98_140  [key=0, style=solid];
m98_139 -> m98_22  [key=2, style=dotted];
m98_139 -> m98_141  [key=2, style=dotted];
m98_140 -> m98_138  [color=blue, key=0, style=bold];
m98_143 -> m98_144  [key=0, style=solid];
m98_143 -> m98_22  [key=2, style=dotted];
m98_143 -> m98_45  [key=2, style=dotted];
m98_143 -> m98_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_144 -> m98_142  [color=blue, key=0, style=bold];
m98_145 -> m98_146  [key=0, style=solid];
m98_146 -> m98_147  [key=0, style=solid];
m98_147 -> m98_145  [color=blue, key=0, style=bold];
m98_149 -> m98_150  [key=0, style=solid];
m98_150 -> m98_148  [color=blue, key=0, style=bold];
m98_156 -> m98_157  [key=0, style=solid];
m98_157 -> m98_158  [key=0, style=solid];
m98_157 -> m98_22  [key=2, style=dotted];
m98_157 -> m98_45  [key=2, style=dotted];
m98_157 -> m98_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_158 -> m98_156  [color=blue, key=0, style=bold];
m98_159 -> m98_160  [key=0, style=solid];
m98_160 -> m98_161  [key=0, style=solid];
m98_161 -> m98_159  [color=blue, key=0, style=bold];
m98_167 -> m98_168  [key=0, style=solid];
m98_168 -> m98_169  [key=0, style=solid];
m98_168 -> m98_22  [key=2, style=dotted];
m98_168 -> m98_45  [key=2, style=dotted];
m98_168 -> m98_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_169 -> m98_167  [color=blue, key=0, style=bold];
m98_170 -> m98_171  [key=0, style=solid];
m98_171 -> m98_172  [key=0, style=solid];
m98_171 -> m98_173  [key=2, style=dotted];
m98_172 -> m98_170  [color=blue, key=0, style=bold];
m98_180 -> m98_181  [key=0, style=solid];
m98_186 -> m98_187  [key=0, style=solid];
m98_181 -> m98_182  [key=0, style=solid];
m98_181 -> m98_22  [key=2, style=dotted];
m98_181 -> m98_45  [key=2, style=dotted];
m98_181 -> m98_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_182 -> m98_180  [color=blue, key=0, style=bold];
m98_183 -> m98_184  [key=0, style=solid];
m98_184 -> m98_185  [key=0, style=solid];
m98_185 -> m98_183  [color=blue, key=0, style=bold];
m98_187 -> m98_188  [key=0, style=solid];
m98_187 -> m98_22  [key=2, style=dotted];
m98_187 -> m98_141  [key=2, style=dotted];
m98_188 -> m98_186  [color=blue, key=0, style=bold];
m98_194 -> m98_195  [key=0, style=solid];
m98_195 -> m98_196  [key=0, style=solid];
m98_195 -> m98_22  [key=2, style=dotted];
m98_195 -> m98_141  [key=2, style=dotted];
m98_196 -> m98_194  [color=blue, key=0, style=bold];
m98_204 -> m98_205  [key=0, style=solid];
m98_208 -> m98_209  [key=0, style=solid];
m98_208 -> m98_79  [key=2, style=dotted];
m98_207 -> m98_208  [key=0, style=solid];
m98_210 -> m98_211  [key=0, style=solid];
m98_216 -> m98_217  [key=0, style=solid];
m98_205 -> m98_206  [key=0, style=solid];
m98_205 -> m98_22  [key=2, style=dotted];
m98_205 -> m98_141  [key=2, style=dotted];
m98_206 -> m98_204  [color=blue, key=0, style=bold];
m98_209 -> m98_207  [color=blue, key=0, style=bold];
m98_211 -> m98_212  [key=0, style=solid];
m98_211 -> m98_22  [key=2, style=dotted];
m98_211 -> m98_45  [key=2, style=dotted];
m98_211 -> m98_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_212 -> m98_210  [color=blue, key=0, style=bold];
m98_213 -> m98_214  [key=0, style=solid];
m98_214 -> m98_215  [key=0, style=solid];
m98_215 -> m98_213  [color=blue, key=0, style=bold];
m98_217 -> m98_218  [key=0, style=solid];
m98_217 -> m98_120  [key=2, style=dotted];
m98_218 -> m98_216  [color=blue, key=0, style=bold];
m98_227 -> m98_228  [key=0, style=solid];
m98_231 -> m98_232  [key=0, style=solid];
m98_231 -> m98_79  [key=2, style=dotted];
m98_230 -> m98_231  [key=0, style=solid];
m98_233 -> m98_234  [key=0, style=solid];
m98_236 -> m98_237  [key=0, style=solid];
m98_228 -> m98_229  [key=0, style=solid];
m98_228 -> m98_22  [key=2, style=dotted];
m98_228 -> m98_141  [key=2, style=dotted];
m98_229 -> m98_227  [color=blue, key=0, style=bold];
m98_232 -> m98_230  [color=blue, key=0, style=bold];
m98_234 -> m98_235  [key=0, style=solid];
m98_234 -> m98_100  [key=2, style=dotted];
m98_235 -> m98_233  [color=blue, key=0, style=bold];
m98_237 -> m98_238  [key=0, style=solid];
m98_237 -> m98_120  [key=2, style=dotted];
m98_238 -> m98_236  [color=blue, key=0, style=bold];
m98_244 -> m98_245  [key=0, style=solid];
m98_245 -> m98_246  [key=0, style=solid];
m98_245 -> m98_22  [key=2, style=dotted];
m98_245 -> m98_45  [key=2, style=dotted];
m98_245 -> m98_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_246 -> m98_244  [color=blue, key=0, style=bold];
m98_247 -> m98_248  [key=0, style=solid];
m98_248 -> m98_249  [key=0, style=solid];
m98_248 -> m98_173  [key=2, style=dotted];
m98_249 -> m98_247  [color=blue, key=0, style=bold];
m98_263 -> m98_264  [key=0, style=solid];
m98_263 -> m98_22  [key=2, style=dotted];
m98_263 -> m98_45  [key=2, style=dotted];
m98_263 -> m98_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_266 -> m98_267  [key=0, style=solid];
m98_259 -> m98_260  [key=0, style=solid];
m98_262 -> m98_263  [key=0, style=solid];
m98_260 -> m98_261  [key=0, style=solid];
m98_260 -> m98_22  [key=2, style=dotted];
m98_260 -> m98_141  [key=2, style=dotted];
m98_261 -> m98_259  [color=blue, key=0, style=bold];
m98_264 -> m98_262  [color=blue, key=0, style=bold];
m98_265 -> m98_266  [key=0, style=solid];
m98_267 -> m98_265  [color=blue, key=0, style=bold];
m98_276 -> m98_277  [key=0, style=solid];
m98_279 -> m98_280  [key=0, style=solid];
m98_277 -> m98_278  [key=0, style=solid];
m98_277 -> m98_22  [key=2, style=dotted];
m98_277 -> m98_141  [key=2, style=dotted];
m98_278 -> m98_276  [color=blue, key=0, style=bold];
m98_280 -> m98_281  [key=0, style=solid];
m98_280 -> m98_22  [key=2, style=dotted];
m98_280 -> m98_45  [key=2, style=dotted];
m98_280 -> m98_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_281 -> m98_279  [color=blue, key=0, style=bold];
m98_282 -> m98_283  [key=0, style=solid];
m98_283 -> m98_284  [key=0, style=solid];
m98_284 -> m98_282  [color=blue, key=0, style=bold];
m98_293 -> m98_294  [key=0, style=solid];
m98_296 -> m98_297  [key=0, style=solid];
m98_294 -> m98_295  [key=0, style=solid];
m98_294 -> m98_37  [key=2, style=dotted];
m98_295 -> m98_293  [color=blue, key=0, style=bold];
m98_297 -> m98_298  [key=0, style=solid];
m98_297 -> m98_22  [key=2, style=dotted];
m98_297 -> m98_45  [key=2, style=dotted];
m98_297 -> m98_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_298 -> m98_296  [color=blue, key=0, style=bold];
m98_300 -> m98_301  [key=0, style=solid];
m98_301 -> m98_299  [color=blue, key=0, style=bold];
m98_151 -> m98_152  [key=0, style=solid];
m98_152 -> m98_153  [key=0, style=solid];
m98_152 -> m98_78  [key=2, style=dotted];
m98_153 -> m98_154  [key=0, style=solid];
m98_153 -> m98_79  [key=2, style=dotted];
m98_154 -> m98_155  [key=0, style=solid];
m98_154 -> m98_80  [key=2, style=dotted];
m98_154 -> m98_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_155 -> m98_151  [color=blue, key=0, style=bold];
m98_65 -> m98_66  [key=0, style=solid];
m98_66 -> m98_67  [key=0, style=solid];
m98_66 -> m98_22  [key=2, style=dotted];
m98_66 -> m98_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_67 -> m98_68  [key=0, style=solid];
m98_67 -> d6  [key=2, style=dotted];
m98_68 -> m98_65  [color=blue, key=0, style=bold];
m98_121 -> m98_122  [key=0, style=solid];
m98_122 -> m98_123  [key=0, style=solid];
m98_122 -> m98_16  [key=2, style=dotted];
m98_122 -> m98_128  [key=2, style=dotted];
m98_122 -> m98_22  [key=2, style=dotted];
m98_122 -> m98_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_122 -> m98_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_123 -> m98_124  [key=0, style=solid];
m98_123 -> m98_16  [key=2, style=dotted];
m98_123 -> m98_128  [key=2, style=dotted];
m98_123 -> m98_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_124 -> m98_125  [key=0, style=solid];
m98_124 -> m98_16  [key=2, style=dotted];
m98_124 -> m98_128  [key=2, style=dotted];
m98_124 -> m98_22  [key=2, style=dotted];
m98_124 -> m98_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_124 -> m98_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_125 -> m98_126  [key=0, style=solid];
m98_125 -> m98_78  [key=2, style=dotted];
m98_126 -> m98_127  [key=0, style=solid];
m98_126 -> m98_79  [key=2, style=dotted];
m98_127 -> m98_121  [color=blue, key=0, style=bold];
m98_88 -> m98_89  [key=0, style=solid];
m98_89 -> m98_90  [key=0, style=solid];
m98_89 -> m98_78  [key=2, style=dotted];
m98_90 -> m98_91  [key=0, style=solid];
m98_90 -> m98_79  [key=2, style=dotted];
m98_91 -> m98_92  [key=0, style=solid];
m98_91 -> m98_80  [key=2, style=dotted];
m98_91 -> m98_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_92 -> m98_93  [key=0, style=solid];
m98_92 -> m98_80  [key=2, style=dotted];
m98_92 -> m98_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_93 -> m98_88  [color=blue, key=0, style=bold];
m98_197 -> m98_198  [key=0, style=solid];
m98_198 -> m98_199  [key=0, style=solid];
m98_198 -> m98_16  [key=2, style=dotted];
m98_198 -> m98_22  [key=2, style=dotted];
m98_198 -> m98_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_199 -> m98_200  [key=0, style=solid];
m98_199 -> m98_78  [key=2, style=dotted];
m98_199 -> m98_208  [color=darkseagreen4, key=1, label=worker, style=dashed];
m98_200 -> m98_201  [key=0, style=solid];
m98_200 -> m98_22  [key=2, style=dotted];
m98_200 -> m98_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_201 -> m98_202  [key=0, style=solid];
m98_201 -> m98_80  [key=2, style=dotted];
m98_201 -> m98_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_202 -> m98_203  [key=0, style=solid];
m98_202 -> m98_80  [key=2, style=dotted];
m98_202 -> m98_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_203 -> m98_197  [color=blue, key=0, style=bold];
m98_41 -> m98_304  [key=0, style=solid];
m98_304 -> m98_41  [color=blue, key=0, style=bold];
m98_305 -> m98_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_59  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_76  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_105  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_122  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_123  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_124  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_126  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_153  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_163  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_175  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_176  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_190  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_191  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_198  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_199  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_200  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_208  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_201  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_202  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_220  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_221  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_222  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_231  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_223  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_224  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_240  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_241  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_242  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_252  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_253  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_254  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_255  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_270  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_271  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_272  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_273  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_286  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_287  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_288  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_289  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_305 -> m98_302  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m98_306 -> m98_112  [color=darkseagreen4, key=1, label=worker, style=dashed];
m98_307 -> m98_208  [color=darkseagreen4, key=1, label=worker, style=dashed];
m98_308 -> m98_231  [color=darkseagreen4, key=1, label=worker, style=dashed];
m98_309 -> m98_263  [color=darkseagreen4, key=1, label=exception, style=dashed];
m98_309 -> m98_266  [color=darkseagreen4, key=1, label=exception, style=dashed];
m100_0 -> m100_1  [key=0, style=solid];
m100_1 -> m100_2  [key=0, style=solid];
m100_1 -> m100_15  [key=2, style=dotted];
m100_2 -> m100_3  [key=0, style=solid];
m100_2 -> m100_16  [key=2, style=dotted];
m100_2 -> m100_4  [color=darkseagreen4, key=1, label=metric, style=dashed];
m100_2 -> m100_12  [color=red, key=1, label=metric, style=dashed];
m100_3 -> m100_4  [key=0, style=solid];
m100_3 -> m100_17  [key=2, style=dotted];
m100_3 -> m100_8  [color=darkseagreen4, key=1, label=className, style=dashed];
m100_4 -> m100_5  [key=0, style=solid];
m100_4 -> m100_10  [color=darkseagreen4, key=1, label=highlighted, style=dashed];
m100_12 -> m100_13  [color=red, key=0, style=solid];
m100_12 -> m100_18  [color=red, key=2, style=dotted];
m100_8 -> m100_9  [key=0, style=solid];
m100_8 -> m100_18  [key=2, style=dotted];
m100_5 -> m100_6  [key=0, style=solid];
m100_5 -> m100_15  [key=2, style=dotted];
m100_10 -> m100_11  [key=0, style=solid];
m100_10 -> m100_18  [key=2, style=dotted];
m100_6 -> m100_7  [key=0, style=solid];
m100_6 -> m100_18  [key=2, style=dotted];
m100_7 -> m100_8  [key=0, style=solid];
m100_7 -> m100_15  [key=2, style=dotted];
m100_9 -> m100_10  [key=0, style=solid];
m100_9 -> m100_15  [key=2, style=dotted];
m100_11 -> m100_12  [color=red, key=0, style=solid];
m100_11 -> m100_15  [key=2, style=dotted];
m100_13 -> m100_14  [key=0, style=solid];
m100_13 -> m100_15  [key=2, style=dotted];
m100_14 -> m100_0  [color=blue, key=0, style=bold];
m100_19 -> m100_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_12  [color=red, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m100_19 -> m100_13  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.InlineMetric", style=dashed];
m101_0 -> m101_1  [key=0, style=solid];
m101_0 -> m101_4  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m101_1 -> m101_2  [key=0, style=solid];
m101_1 -> m101_3  [key=0, style=solid];
m101_4 -> m101_5  [key=0, style=solid];
m101_2 -> m101_5  [key=0, style=solid];
m101_2 -> n21  [key=2, style=dotted];
m101_3 -> m101_4  [key=0, style=solid];
m101_5 -> m101_0  [color=blue, key=0, style=bold];
m101_7 -> m101_8  [color=red, key=0, style=solid];
m101_8 -> m101_9  [color=red, key=0, style=solid];
m101_8 -> m101_10  [color=red, key=2, style=dotted];
m101_8 -> m101_11  [color=red, key=2, style=dotted];
m101_8 -> m101_12  [color=red, key=2, style=dotted];
m101_8 -> m101_13  [color=red, key=2, style=dotted];
m101_9 -> m101_7  [color=blue, key=0, style=bold];
m101_14 -> m101_3  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m101_14 -> m101_4  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m101_14 -> m101_8  [color=red, key=1, label="HangFire.States.FailedState", style=dashed];
}
