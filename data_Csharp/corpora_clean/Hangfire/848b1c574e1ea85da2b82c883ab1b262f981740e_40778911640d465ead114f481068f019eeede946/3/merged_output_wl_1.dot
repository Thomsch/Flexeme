digraph  {
n0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
n1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m1_6 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m1_7 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="var type = System.Type.GetType(Type, throwOnError: true, ignoreCase: true)", span="48-48"];
m1_8 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="var parameterTypes = JobHelper.FromJson<Type[]>(ParameterTypes)", span="49-49"];
m1_9 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="var method = GetNonOpenMatchingMethod(type, Method, parameterTypes)", span="50-50"];
m1_11 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''The type `{0}` does not contain a method with signature `{1}({2})`'',\r\n                        type.FullName,\r\n                        Method,\r\n                        String.Join('', '', parameterTypes.Select(x => x.Name))));", span="54-58"];
m1_14 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="return new Job(type, method, arguments);", span="64-64"];
m1_10 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="method == null", span="52-52"];
m1_13 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="var arguments = DeserializeArguments(method, serializedArguments)", span="62-62"];
m1_12 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="var serializedArguments = JobHelper.FromJson<string[]>(Arguments)", span="61-61"];
m1_15 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label=Exception, span="66-66"];
m1_16 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="throw new JobLoadException(''Could not load the job. See inner exception for the details.'', ex);", span="68-68"];
m1_17 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="AutomaticRetryAttribute.cs", label="Exit Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m1_110 [cluster="System.Collections.Generic.List<T>.List()", file="AutomaticRetryAttribute.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_20 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172"];
m1_87 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="var methodCandidates = type.GetMethods()", span="174-174"];
m1_89 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="!methodCandidate.Name.Equals(name, StringComparison.Ordinal)", span="178-178"];
m1_91 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="parameters.Length != parameterTypes.Length", span="184-184"];
m1_98 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="var actualType = parameterTypes[i]", span="198-198"];
m1_88 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label=methodCandidates, span="176-176"];
m1_106 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="return null;", span="222-222"];
m1_90 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="var parameters = methodCandidate.GetParameters()", span="183-183"];
m1_105 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="return methodCandidate.ContainsGenericParameters \r\n                    ? methodCandidate.MakeGenericMethod(genericArguments.ToArray()) \r\n                    : methodCandidate;", span="217-219"];
m1_95 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="i < parameters.Length", span="194-194"];
m1_96 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="var parameter = parameters[i]", span="196-196"];
m1_92 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="var parameterTypesMatched = true", span="189-189"];
m1_93 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="var genericArguments = new List<Type>()", span="190-190"];
m1_104 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="!parameterTypesMatched", span="214-214"];
m1_94 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="var i = 0", span="194-194"];
m1_100 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="genericArguments.Add(actualType)", span="203-203"];
m1_103 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="i++", span="194-194"];
m1_97 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="var parameterType = parameter.ParameterType", span="197-197"];
m1_99 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="parameterType.IsGenericParameter", span="201-201"];
m1_101 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="parameterType.IsAssignableFrom(actualType)", span="208-208"];
m1_102 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="parameterTypesMatched = false", span="210-210"];
m1_107 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="AutomaticRetryAttribute.cs", label="Exit Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172"];
m1_112 [cluster="System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", file="AutomaticRetryAttribute.cs", label="Entry System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", span="0-0"];
m1_53 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="AutomaticRetryAttribute.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m1_26 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144"];
m1_23 [cluster="Unk.Join", file="AutomaticRetryAttribute.cs", label="Entry Unk.Join", span=""];
m1_111 [cluster="System.Type.IsAssignableFrom(System.Type)", file="AutomaticRetryAttribute.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_25 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m1_56 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="var parameters = methodInfo.GetParameters()", span="112-112"];
m1_57 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="var result = new List<object>(arguments.Length)", span="113-113"];
m1_61 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="var argument = arguments[i]", span="118-118"];
m1_59 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="i < parameters.Length", span="115-115"];
m1_60 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="var parameter = parameters[i]", span="117-117"];
m1_58 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="var i = 0", span="115-115"];
m1_66 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="result.Add(value)", span="133-133"];
m1_68 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="return result.ToArray();", span="136-136"];
m1_67 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="i++", span="115-115"];
m1_63 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="CoreBackgroundJobPerformer.Substitutions.ContainsKey(parameter.ParameterType)", span="122-122"];
m1_64 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="value = parameter.ParameterType.IsValueType\r\n                        ? Activator.CreateInstance(parameter.ParameterType)\r\n                        : null", span="124-126"];
m1_65 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="value = DeserializeArgument(argument, parameter.ParameterType)", span="130-130"];
m1_62 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="object value", span="120-120"];
m1_69 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="AutomaticRetryAttribute.cs", label="Exit Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m1_71 [cluster="System.Activator.CreateInstance(System.Type)", file="AutomaticRetryAttribute.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m1_70 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="AutomaticRetryAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_18 [cluster="System.Type.GetType(string, bool, bool)", file="AutomaticRetryAttribute.cs", label="Entry System.Type.GetType(string, bool, bool)", span="0-0"];
m1_72 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139"];
m1_73 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="object value", span="141-141"];
m1_74 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="value = argument != null\r\n                    ? JobHelper.FromJson(argument, type)\r\n                    : null", span="144-146"];
m1_76 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="type == typeof (object)", span="150-150"];
m1_77 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="value = argument", span="154-154"];
m1_78 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="var converter = TypeDescriptor.GetConverter(type)", span="160-160"];
m1_79 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="value = converter.ConvertFromInvariantString(argument)", span="161-161"];
m1_75 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label=Exception, span="148-148"];
m1_82 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="return value;", span="169-169"];
m1_80 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label=Exception, span="163-163"];
m1_81 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="throw jsonException;", span="165-165"];
m1_83 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="AutomaticRetryAttribute.cs", label="Exit Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139"];
m1_31 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m1_32 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="AutomaticRetryAttribute.cs", label="return new InvocationData(\r\n                job.Type.AssemblyQualifiedName,\r\n                job.Method.Name,\r\n                JobHelper.ToJson(job.Method.GetParameters().Select(x => x.ParameterType).ToArray()),\r\n                JobHelper.ToJson(SerializeArguments(job.Args)));", span="74-78"];
m1_33 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="AutomaticRetryAttribute.cs", label="Exit Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m1_35 [cluster="Unk.ToArray", file="AutomaticRetryAttribute.cs", label="Entry Unk.ToArray", span=""];
m1_21 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="AutomaticRetryAttribute.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_85 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="AutomaticRetryAttribute.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m1_24 [cluster="string.Format(string, object, object, object)", file="AutomaticRetryAttribute.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m1_55 [cluster="System.Collections.Generic.List<T>.ToArray()", file="AutomaticRetryAttribute.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m1_19 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m1_38 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m1_36 [cluster="Unk.ToJson", file="AutomaticRetryAttribute.cs", label="Entry Unk.ToJson", span=""];
m1_39 [cluster="lambda expression", file="AutomaticRetryAttribute.cs", label="Entry lambda expression", span="77-77"];
m1_28 [cluster="lambda expression", file="AutomaticRetryAttribute.cs", label="Entry lambda expression", span="58-58"];
m1_29 [cluster="lambda expression", file="AutomaticRetryAttribute.cs", label="x.Name", span="58-58"];
m1_30 [cluster="lambda expression", file="AutomaticRetryAttribute.cs", label="Exit lambda expression", span="58-58"];
m1_40 [cluster="lambda expression", file="AutomaticRetryAttribute.cs", label="x.ParameterType", span="77-77"];
m1_41 [cluster="lambda expression", file="AutomaticRetryAttribute.cs", label="Exit lambda expression", span="77-77"];
m1_109 [cluster="string.Equals(string, System.StringComparison)", file="AutomaticRetryAttribute.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m1_22 [cluster="Unk.Select", file="AutomaticRetryAttribute.cs", label="Entry Unk.Select", span=""];
m1_108 [cluster="System.Type.GetMethods()", file="AutomaticRetryAttribute.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m1_52 [cluster="System.Collections.Generic.List<T>.List(int)", file="AutomaticRetryAttribute.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m1_84 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m1_27 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32"];
m1_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="AutomaticRetryAttribute.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_0 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30"];
m1_1 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="AutomaticRetryAttribute.cs", label="Type = type", span="33-33"];
m1_2 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="AutomaticRetryAttribute.cs", label="Method = method", span="34-34"];
m1_3 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="AutomaticRetryAttribute.cs", label="ParameterTypes = parameterTypes", span="35-35"];
m1_4 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="AutomaticRetryAttribute.cs", label="Arguments = arguments", span="36-36"];
m1_5 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="AutomaticRetryAttribute.cs", label="Exit Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30"];
m1_86 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="AutomaticRetryAttribute.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m1_34 [cluster="System.Reflection.MethodBase.GetParameters()", file="AutomaticRetryAttribute.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m1_37 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="Entry Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81"];
m1_42 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="var serializedArguments = new List<string>(arguments.Count)", span="83-83"];
m1_43 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label=arguments, span="84-84"];
m1_49 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="serializedArguments.Add(value)", span="104-104"];
m1_50 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="return serializedArguments.ToArray();", span="107-107"];
m1_44 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="string value = null", span="86-86"];
m1_45 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="argument != null", span="88-88"];
m1_46 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="argument is DateTime", span="90-90"];
m1_47 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="value = ((DateTime)argument).ToString(''o'', CultureInfo.InvariantCulture)", span="92-92"];
m1_48 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="value = JobHelper.ToJson(argument)", span="96-96"];
m1_51 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="AutomaticRetryAttribute.cs", label="Exit Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81"];
m1_113 [file="AutomaticRetryAttribute.cs", label="Hangfire.Storage.InvocationData", span=""];
m2_7 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJob.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'',\r\n                JobHelper.ToStringTimestamp(time))", span="18-21"];
m2_40 [cluster="System.DateTime.AddMinutes(double)", file="BackgroundJob.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m2_13 [cluster="string.Format(string, object)", file="BackgroundJob.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundJob.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m2_8 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJob.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="11-11"];
m2_9 [cluster="string.Equals(string)", file="BackgroundJob.cs", label="Entry string.Equals(string)", span="0-0"];
m2_10 [cluster="System.DateTime.AddMilliseconds(double)", file="BackgroundJob.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m2_11 [cluster="System.DateTime.AddDays(double)", file="BackgroundJob.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m2_39 [cluster="Unk.FromStringTimestamp", file="BackgroundJob.cs", label="Entry Unk.FromStringTimestamp", span=""];
m2_41 [cluster="Unk.IsTrue", file="BackgroundJob.cs", label="Entry Unk.IsTrue", span=""];
m2_15 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJob.cs", label="var state = new FailedState(new Exception(''Message''))", span="27-27"];
m2_22 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="BackgroundJob.cs", label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="30-30"];
m2_16 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJob.cs", label="var serializedData = state.SerializeData()", span="29-29"];
m2_23 [cluster="HangFire.States.FailedState.SerializeData()", file="BackgroundJob.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="41-41"];
m2_20 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJob.cs", label="Assert.Equal(state.Exception.ToString(), serializedData[''ExceptionDetails''])", span="34-34"];
m2_17 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJob.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.FailedAt), serializedData[''FailedAt''])", span="31-31"];
m2_19 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJob.cs", label="Assert.Equal(''Message'', serializedData[''ExceptionMessage''])", span="33-33"];
m2_21 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJob.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="25-25"];
m2_18 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJob.cs", label="Assert.Equal(''System.Exception'', serializedData[''ExceptionType''])", span="32-32"];
m2_24 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundJob.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m2_14 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJob.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="25-25"];
m2_3 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="BackgroundJob.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="14-14"];
m2_30 [cluster="Unk.False", file="BackgroundJob.cs", label="Entry Unk.False", span=""];
m2_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="BackgroundJob.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11"];
m2_6 [cluster="lambda expression", file="BackgroundJob.cs", label="Exit lambda expression", span="14-14"];
m2_4 [cluster="lambda expression", file="BackgroundJob.cs", label="Entry lambda expression", span="14-14"];
m2_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="BackgroundJob.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="13-14"];
m2_5 [cluster="lambda expression", file="BackgroundJob.cs", label="new FailedState(null)", span="14-14"];
m2_2 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="BackgroundJob.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11"];
m2_50 [cluster="Unk.IsNull", file="BackgroundJob.cs", label="Entry Unk.IsNull", span=""];
m2_51 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="BackgroundJob.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="81-81"];
m2_52 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="BackgroundJob.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="83-84"];
m2_53 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="BackgroundJob.cs", label="Assert.IsNotNull(fetchedTimestamp)", span="86-86"];
m2_54 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="BackgroundJob.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="81-81"];
m2_55 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="BackgroundJob.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="90-90"];
m2_57 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", color=green, community=0, file="BackgroundJob.cs", label="0: Assert.IsNull(fetchedTimestamp)", span="95-95"];
m2_56 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="BackgroundJob.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="92-93"];
m2_58 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="BackgroundJob.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="90-90"];
m2_38 [cluster="Unk.IsNotNull", file="BackgroundJob.cs", label="Entry Unk.IsNotNull", span=""];
m2_46 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="BackgroundJob.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m2_47 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="BackgroundJob.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="73-75"];
m2_48 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="BackgroundJob.cs", label="Assert.IsNull(checkedTimestamp)", span="77-77"];
m2_49 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="BackgroundJob.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m2_37 [cluster="Unk.GetValueFromHash", file="BackgroundJob.cs", label="Entry Unk.GetValueFromHash", span=""];
m2_31 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJob.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m2_32 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJob.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="50-52"];
m2_33 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJob.cs", label="Assert.IsNotNull(checkedTimestamp)", span="54-54"];
m2_34 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJob.cs", label="var date = JobHelper.FromStringTimestamp(checkedTimestamp)", span="55-55"];
m2_35 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJob.cs", label="Assert.IsTrue(date > DateTime.UtcNow.AddMinutes(-1))", span="57-57"];
m2_36 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="BackgroundJob.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m2_42 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="BackgroundJob.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61"];
m2_43 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", color=green, community=0, file="BackgroundJob.cs", label="0: var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="63-65"];
m2_44 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="BackgroundJob.cs", label="Assert.IsNotNull(checkedTimestamp)", span="67-67"];
m2_45 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="BackgroundJob.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61"];
m2_25 [cluster="System.Exception.ToString()", file="BackgroundJob.cs", label="Entry System.Exception.ToString()", span="0-0"];
m2_26 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJob.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="38-38"];
m2_27 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJob.cs", label="var state = new FailedState(new Exception())", span="40-40"];
m2_28 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJob.cs", label="Assert.False(state.IsFinal)", span="42-42"];
m2_29 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJob.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="38-38"];
m3_5 [cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="BackgroundJobClient.cs", label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11"];
m3_10 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="BackgroundJobClient.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m3_6 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BackgroundJobClient.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m3_0 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="BackgroundJobClient.cs", label="Entry HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m3_1 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="BackgroundJobClient.cs", label="SharedContext = new SharedWorkerContextMock()", span="11-11"];
m3_2 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="BackgroundJobClient.cs", label="WorkerNumber = 1", span="12-12"];
m3_3 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="BackgroundJobClient.cs", label="_context = new Lazy<WorkerContext>(\r\n                () => new WorkerContext(SharedContext.Object, WorkerNumber))", span="14-15"];
m3_4 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="BackgroundJobClient.cs", label="Exit HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m3_7 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="15-15"];
m3_8 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new WorkerContext(SharedContext.Object, WorkerNumber)", span="15-15"];
m3_9 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="15-15"];
m3_11 [file="BackgroundJobClient.cs", label="HangFire.Core.Tests.WorkerContextMock", span=""];
m5_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJobServer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_55 [cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_58 [cluster="HangFire.BackgroundJobServer.GetStorageSupervisors()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.GetStorageSupervisors()", span="133-133"];
m5_75 [cluster="HangFire.BackgroundJobServer.GetStorageSupervisors()", color=green, community=0, file="BackgroundJobServer.cs", label="0: var components = _storage.GetComponents()", span="135-135"];
m5_76 [cluster="HangFire.BackgroundJobServer.GetStorageSupervisors()", file="BackgroundJobServer.cs", label="return components\r\n                .Select(component => new ServerSupervisor(component))\r\n                .ToArray();", span="137-139"];
m5_77 [cluster="HangFire.BackgroundJobServer.GetStorageSupervisors()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.GetStorageSupervisors()", span="133-133"];
m5_17 [cluster="string.Format(string, object, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_45 [cluster="HangFire.Server.ServerBootstrapper.ServerBootstrapper(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerBootstrapper.ServerBootstrapper(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerSupervisor>)", span="31-31"];
m5_26 [cluster="Unk.Info", file="BackgroundJobServer.cs", label="Entry Unk.Info", span=""];
m5_78 [cluster="HangFire.JobStorage.GetComponents()", file="BackgroundJobServer.cs", label="Entry HangFire.JobStorage.GetComponents()", span="58-58"];
m5_48 [cluster="HangFire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="25-25"];
m5_46 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BackgroundJobServer.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m5_56 [cluster="HangFire.BackgroundJobServer.GetCommonSupervisors()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.GetCommonSupervisors()", span="114-114"];
m5_60 [cluster="HangFire.BackgroundJobServer.GetCommonSupervisors()", file="BackgroundJobServer.cs", label="var stateMachineFactory = new StateMachineFactory(_storage)", span="116-116"];
m5_61 [cluster="HangFire.BackgroundJobServer.GetCommonSupervisors()", file="BackgroundJobServer.cs", label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", span="117-123"];
m5_62 [cluster="HangFire.BackgroundJobServer.GetCommonSupervisors()", file="BackgroundJobServer.cs", label="yield return new ServerSupervisor(new WorkerManager(sharedWorkerContext, _options.WorkerCount));", span="125-125"];
m5_63 [cluster="HangFire.BackgroundJobServer.GetCommonSupervisors()", file="BackgroundJobServer.cs", label="yield return new ServerSupervisor(new ServerHeartbeat(_storage, _serverId));", span="126-126"];
m5_64 [cluster="HangFire.BackgroundJobServer.GetCommonSupervisors()", file="BackgroundJobServer.cs", label="yield return new ServerSupervisor(new ServerWatchdog(_storage));", span="127-127"];
m5_65 [cluster="HangFire.BackgroundJobServer.GetCommonSupervisors()", file="BackgroundJobServer.cs", label="yield return new ServerSupervisor(\r\n                new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval));", span="129-130"];
m5_66 [cluster="HangFire.BackgroundJobServer.GetCommonSupervisors()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.GetCommonSupervisors()", span="114-114"];
m5_16 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="BackgroundJobServer.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m5_27 [cluster="Unk.InfoFormat", file="BackgroundJobServer.cs", label="Entry Unk.InfoFormat", span=""];
m5_18 [cluster="HangFire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.GetBootstrapSupervisor()", span="82-82"];
m5_40 [cluster="HangFire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="84-88"];
m5_41 [cluster="HangFire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="var bootstrapper = new ServerBootstrapper(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerSupervisor>(GetSupervisors))", span="90-94"];
m5_42 [cluster="HangFire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="return new ServerSupervisor(\r\n                bootstrapper, \r\n                new ServerSupervisorOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="96-101"];
m5_43 [cluster="HangFire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.GetBootstrapSupervisor()", span="82-82"];
m5_29 [cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", span="59-59"];
m5_30 [cluster="HangFire.Server.IServerSupervisor.Start()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.IServerSupervisor.Start()", span="22-22"];
m5_59 [cluster="HangFire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerSupervisor>)", span="26-26"];
m5_80 [cluster="Unk.ToArray", file="BackgroundJobServer.cs", label="Entry Unk.ToArray", span=""];
m5_72 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m5_69 [cluster="HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28"];
m5_4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m5_9 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="_options = options", span="51-51"];
m5_10 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="_storage = storage", span="52-52"];
m5_11 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="54-54"];
m5_12 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="_bootstrapSupervisor = GetBootstrapSupervisor()", span="57-57"];
m5_7 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="storage == null", span="49-49"];
m5_5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="options == null", span="48-48"];
m5_8 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''storage'');", span="49-49"];
m5_6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''options'');", span="48-48"];
m5_13 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m5_47 [cluster="HangFire.Server.ServerSupervisor.ServerSupervisor(HangFire.Server.IServerComponent, HangFire.Server.ServerSupervisorOptions)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerSupervisor.ServerSupervisor(HangFire.Server.IServerComponent, HangFire.Server.ServerSupervisorOptions)", span="41-41"];
m5_31 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="71-71"];
m5_32 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="_bootstrapSupervisor.Stop()", span="73-73"];
m5_33 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.Stop()", span="71-71"];
m5_44 [cluster="HangFire.Server.ServerContext.ServerContext()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18"];
m5_15 [cluster="string.ToLowerInvariant()", file="BackgroundJobServer.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m5_81 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="138-138"];
m5_82 [cluster="lambda expression", file="BackgroundJobServer.cs", label="new ServerSupervisor(component)", span="138-138"];
m5_83 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="138-138"];
m5_74 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m5_79 [cluster="Unk.Select", file="BackgroundJobServer.cs", label="Entry Unk.Select", span=""];
m5_57 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_19 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="60-60"];
m5_21 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="63-63"];
m5_22 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_storage.WriteOptionsToLog(Logger)", span="65-65"];
m5_23 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_options.WriteToLog(Logger)", span="66-66"];
m5_24 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_bootstrapSupervisor.Start()", span="68-68"];
m5_20 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Logger.Info(''Starting HangFire Server...'')", span="62-62"];
m5_25 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="60-60"];
m5_70 [cluster="HangFire.Server.ServerSupervisor.ServerSupervisor(HangFire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerSupervisor.ServerSupervisor(HangFire.Server.IServerComponent)", span="36-36"];
m5_28 [cluster="HangFire.JobStorage.WriteOptionsToLog(ILog)", file="BackgroundJobServer.cs", label="Entry HangFire.JobStorage.WriteOptionsToLog(ILog)", span="68-68"];
m5_35 [cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.Dispose()", span="76-76"];
m5_36 [cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="_bootstrapSupervisor.Dispose()", span="78-78"];
m5_37 [cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Logger.Info(''HangFire Server stopped.'')", span="79-79"];
m5_38 [cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.Dispose()", span="76-76"];
m5_49 [cluster="HangFire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.GetSupervisors()", span="104-104"];
m5_51 [cluster="HangFire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="supervisors.AddRange(GetCommonSupervisors())", span="108-108"];
m5_52 [cluster="HangFire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="supervisors.AddRange(GetStorageSupervisors())", span="109-109"];
m5_50 [cluster="HangFire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="var supervisors = new List<IServerSupervisor>()", span="106-106"];
m5_53 [cluster="HangFire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="return new ServerSupervisorCollection(supervisors);", span="111-111"];
m5_54 [cluster="HangFire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.GetSupervisors()", span="104-104"];
m5_34 [cluster="HangFire.Server.IServerSupervisor.Stop()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.IServerSupervisor.Stop()", span="23-23"];
m5_39 [cluster="System.IDisposable.Dispose()", file="BackgroundJobServer.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m5_68 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23"];
m5_71 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30"];
m5_73 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29"];
m5_67 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="BackgroundJobServer.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="25-25"];
m5_84 [file="BackgroundJobServer.cs", label="HangFire.BackgroundJobServer", span=""];
m6_15 [cluster="Unk.InfoFormat", file="BackgroundJobServerOptions.cs", label="Entry Unk.InfoFormat", span=""];
m6_0 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13"];
m6_1 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="WorkerCount = Environment.ProcessorCount * 5", span="15-15"];
m6_2 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="ServerName = Environment.MachineName", span="16-16"];
m6_3 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="17-17"];
m6_4 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="18-18"];
m6_5 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="19-19"];
m6_6 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13"];
m6_7 [cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundJobServerOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m6_8 [cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", span="59-59"];
m6_9 [cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''Using the following options for HangFire Server:'')", span="61-61"];
m6_10 [cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="62-62"];
m6_11 [cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="63-63"];
m6_12 [cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="64-64"];
m6_13 [cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="65-65"];
m6_14 [cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", file="BackgroundJobServerOptions.cs", label="Exit HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", span="59-59"];
m6_17 [cluster="Unk.Join", file="BackgroundJobServerOptions.cs", label="Entry Unk.Join", span=""];
m6_18 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="63-63"];
m6_19 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="''''' + x + '''''", span="63-63"];
m6_20 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="63-63"];
m6_16 [cluster="Unk.Select", file="BackgroundJobServerOptions.cs", label="Entry Unk.Select", span=""];
m6_21 [file="BackgroundJobServerOptions.cs", label="HangFire.BackgroundJobServerOptions", span=""];
m7_46 [cluster="HangFire.SqlServer.Tests.StorageFacts.ToString_ReturnsOnlyServerAndDatabase()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.ToString_ReturnsOnlyServerAndDatabase()", span="59-59"];
m7_49 [cluster="HangFire.SqlServer.Tests.StorageFacts.ToString_ReturnsOnlyServerAndDatabase()", file="BatchCommandHandler.cs", label="Assert.Equal(@''SQL Server: .\sqlexpress@HangFire.Sample'', result)", span="66-66"];
m7_48 [cluster="HangFire.SqlServer.Tests.StorageFacts.ToString_ReturnsOnlyServerAndDatabase()", file="BatchCommandHandler.cs", label="var result = storage.ToString()", span="64-64"];
m7_47 [cluster="HangFire.SqlServer.Tests.StorageFacts.ToString_ReturnsOnlyServerAndDatabase()", file="BatchCommandHandler.cs", label="var storage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress; Database=HangFire.Sample; Integrated Security=SSPI;'')", span="61-62"];
m7_50 [cluster="HangFire.SqlServer.Tests.StorageFacts.ToString_ReturnsOnlyServerAndDatabase()", file="BatchCommandHandler.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.ToString_ReturnsOnlyServerAndDatabase()", span="59-59"];
m7_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="59-59"];
m7_51 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.SqlServerStorage.ToString()", span="76-76"];
m7_5 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=red, community=0, file="BatchCommandHandler.cs", label="0: var jobIds = request.Form.GetValues(''jobs[]'')", span="34-34"];
m7_32 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", span="48-48"];
m7_34 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", color=green, community=0, file="BatchCommandHandler.cs", label="0: var components = storage.GetComponents()", span="52-52"];
m7_33 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="BatchCommandHandler.cs", label="var storage = CreateStorage()", span="50-50"];
m7_35 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="BatchCommandHandler.cs", label="var componentTypes = components.Select(x => x.GetType()).ToArray()", span="54-54"];
m7_36 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="BatchCommandHandler.cs", label="Assert.Contains(typeof(ExpirationManager), componentTypes)", span="55-55"];
m7_37 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="BatchCommandHandler.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", span="48-48"];
m7_45 [cluster="object.GetType()", file="BatchCommandHandler.cs", label="Entry object.GetType()", span="0-0"];
m7_4 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=red, community=0, file="BatchCommandHandler.cs", label="0: var request = HttpContext.Current.Request", span="33-33"];
m7_3 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="BatchCommandHandler.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", span="10-10"];
m7_6 [cluster="lambda expression", file="BatchCommandHandler.cs", label="Entry lambda expression", span="13-13"];
m7_9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32"];
m7_7 [cluster="lambda expression", color=red, community=0, file="BatchCommandHandler.cs", label="0: new SqlServerStorage(null)", span="13-13"];
m7_8 [cluster="lambda expression", file="BatchCommandHandler.cs", label="Exit lambda expression", span="13-13"];
m7_10 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="19-19"];
m7_11 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=green, community=0, file="BatchCommandHandler.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerStorage(''hello'', null))", span="21-22"];
m7_12 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=green, community=0, file="BatchCommandHandler.cs", label="0: Assert.Equal(''options'', exception.ParamName)", span="24-24"];
m7_13 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BatchCommandHandler.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="19-19"];
m7_23 [cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", span="69-69"];
m7_52 [cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="BatchCommandHandler.cs", label="return new SqlServerStorage(\r\n                ConnectionUtils.GetConnectionString(),\r\n                new SqlServerStorageOptions { PrepareSchemaIfNecessary = false });", span="71-73"];
m7_53 [cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="BatchCommandHandler.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", span="69-69"];
m7_40 [cluster="Unk.ToArray", file="BatchCommandHandler.cs", label="Entry Unk.ToArray", span=""];
m7_25 [cluster="Unk.NotNull", file="BatchCommandHandler.cs", label="Entry Unk.NotNull", span=""];
m7_24 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="54-54"];
m7_0 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", span="10-10"];
m7_1 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="BatchCommandHandler.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerStorage(null))", span="12-13"];
m7_2 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="BatchCommandHandler.cs", label="Assert.Equal(''connectionString'', exception.ParamName)", span="15-15"];
m7_17 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
m7_14 [cluster="lambda expression", file="BatchCommandHandler.cs", label="Entry lambda expression", span="22-22"];
m7_15 [cluster="lambda expression", color=green, community=0, file="BatchCommandHandler.cs", label="0: HangFire.Web.BatchCommandHandler", span=""];
m7_16 [cluster="lambda expression", file="BatchCommandHandler.cs", label="Exit lambda expression", span="22-22"];
m7_42 [cluster="lambda expression", file="BatchCommandHandler.cs", label="Entry lambda expression", span="54-54"];
m7_44 [cluster="lambda expression", file="BatchCommandHandler.cs", label="Exit lambda expression", span="54-54"];
m7_43 [cluster="lambda expression", file="BatchCommandHandler.cs", label="x.GetType()", span="54-54"];
m7_26 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", span="38-38"];
m7_27 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", color=green, community=0, file="BatchCommandHandler.cs", label="0: var storage = CreateStorage()", span="40-40"];
m7_28 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="BatchCommandHandler.cs", label="var connection = storage.GetConnection()", span="41-41"];
m7_29 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="BatchCommandHandler.cs", label="Assert.NotNull(connection)", span="43-43"];
m7_30 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="BatchCommandHandler.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", span="38-38"];
m7_41 [cluster="Unk.Contains", file="BatchCommandHandler.cs", label="Entry Unk.Contains", span=""];
m7_39 [cluster="Unk.Select", file="BatchCommandHandler.cs", label="Entry Unk.Select", span=""];
m7_38 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="64-64"];
m7_54 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m7_55 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m7_18 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="BatchCommandHandler.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="28-28"];
m7_21 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", color=green, community=0, file="BatchCommandHandler.cs", label="0: Assert.NotNull(api)", span="33-33"];
m7_20 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="BatchCommandHandler.cs", label="var api = storage.GetMonitoringApi()", span="31-31"];
m7_19 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="BatchCommandHandler.cs", label="var storage = CreateStorage()", span="30-30"];
m7_22 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="BatchCommandHandler.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="28-28"];
m10_5 [cluster="HangFire.Web.CombinedResourceHandler.WriteResponse()", file="CombinedResourceHandler.cs", label="Entry HangFire.Web.CombinedResourceHandler.WriteResponse()", span="36-36"];
m10_6 [cluster="HangFire.Web.CombinedResourceHandler.WriteResponse()", file="CombinedResourceHandler.cs", label=_resourceNames, span="38-38"];
m10_7 [cluster="HangFire.Web.CombinedResourceHandler.WriteResponse()", file="CombinedResourceHandler.cs", label="WriteResource(\r\n                    _assembly,\r\n                    string.Format(''{0}.{1}'', _baseNamespace, resourceName))", span="40-42"];
m10_8 [cluster="HangFire.Web.CombinedResourceHandler.WriteResponse()", file="CombinedResourceHandler.cs", label="Exit HangFire.Web.CombinedResourceHandler.WriteResponse()", span="36-36"];
m10_10 [cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", file="CombinedResourceHandler.cs", label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", span="50-50"];
m10_0 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", file="CombinedResourceHandler.cs", label="Entry HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", span="26-26"];
m10_1 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", file="CombinedResourceHandler.cs", label="_assembly = assembly", span="31-31"];
m10_2 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", file="CombinedResourceHandler.cs", label="_baseNamespace = baseNamespace", span="32-32"];
m10_3 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", file="CombinedResourceHandler.cs", label="_resourceNames = resourceNames", span="33-33"];
m10_4 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", file="CombinedResourceHandler.cs", label="Exit HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", span="26-26"];
m10_9 [cluster="string.Format(string, object, object)", file="CombinedResourceHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m10_11 [file="CombinedResourceHandler.cs", label="HangFire.Web.CombinedResourceHandler", span=""];
m11_0 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="CommandHandler.cs", label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26"];
m11_1 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", color=green, community=0, file="CommandHandler.cs", label="0: _command = command", span="28-28"];
m11_2 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="CommandHandler.cs", label="Exit HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26"];
m11_3 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="CommandHandler.cs", label="Entry HangFire.Web.CommandHandler.ProcessRequest()", span="31-31"];
m11_4 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", color=green, community=0, file="CommandHandler.cs", label="0: Request.HttpMethod != WebRequestMethods.Http.Post", span="33-33"];
m11_5 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", color=green, community=0, file="CommandHandler.cs", label="0: throw new HttpException((int)HttpStatusCode.MethodNotAllowed, ''Wrong HTTP method.'');", span="35-35"];
m11_6 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", color=green, community=0, file="CommandHandler.cs", label="0: _command()", span="38-38"];
m11_7 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="CommandHandler.cs", label="Response.StatusCode = (int)HttpStatusCode.NoContent", span="40-40"];
m11_8 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="CommandHandler.cs", label="Response.StatusCode = 422", span="44-44"];
m11_9 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="CommandHandler.cs", label="Exit HangFire.Web.CommandHandler.ProcessRequest()", span="31-31"];
m11_11 [cluster="System.Func<TResult>.Invoke()", file="CommandHandler.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m11_10 [cluster="HttpException.cstr", file="CommandHandler.cs", label="Entry HttpException.cstr", span=""];
m11_12 [file="CommandHandler.cs", label="HangFire.Web.CommandHandler", span=""];
m14_30 [cluster="HangFire.Storage.IMonitoringApi.FailedByDatesCount()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedByDatesCount()", span="48-48"];
m14_33 [cluster="HangFire.Web.RazorPage.Write(object)", file="DashboardPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m14_25 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DashboardPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m14_31 [cluster="HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", span="49-49"];
m14_27 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="DashboardPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m14_26 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DashboardPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m14_35 [cluster="Unk.Write", file="DashboardPage.generated.cs", label="Entry Unk.Write", span=""];
m14_34 [cluster="Unk.SerializeObject", file="DashboardPage.generated.cs", label="Entry Unk.SerializeObject", span=""];
m14_29 [cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47"];
m14_32 [cluster="HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", span="50-50"];
m14_28 [cluster="Unk.Equals", file="DashboardPage.generated.cs", label="Entry Unk.Equals", span=""];
m14_0 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Entry HangFire.Web.Pages.DashboardPage.Execute()", span="51-51"];
m14_1 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\r\n'')", span="55-55"];
m14_2 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Layout = new LayoutPage { Title = ''Dashboard'' }", span="67-67"];
m14_3 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="IDictionary<DateTime, long> succeeded = null", span="68-68"];
m14_4 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="IDictionary<DateTime, long> failed = null", span="69-69"];
m14_18 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="succeeded != null && failed != null", span="119-119"];
m14_20 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(JsonConvert.SerializeObject(succeeded))", span="130-130"];
m14_5 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs", label="0: var period = Request.QueryString[''period'']?? ''day''", span="71-71"];
m14_22 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(JsonConvert.SerializeObject(failed))", span="140-140"];
m14_6 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs", label="0: var monitor = JobStorage.Current.GetMonitoringApi()", span="73-73"];
m14_7 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs", label="0: ''week''.Equals(period, StringComparison.OrdinalIgnoreCase)", span="75-75"];
m14_10 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs", label="0: ''day''.Equals(period, StringComparison.OrdinalIgnoreCase)", span="80-80"];
m14_14 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(''day''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="98-98"];
m14_16 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(''week''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="109-109"];
m14_8 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs", label="0: succeeded = monitor.SucceededByDatesCount()", span="77-77"];
m14_9 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs", label="0: failed = monitor.FailedByDatesCount()", span="78-78"];
m14_11 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs", label="0: succeeded = monitor.HourlySucceededJobs()", span="82-82"];
m14_12 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs", label="0: failed = monitor.HourlyFailedJobs()", span="83-83"];
m14_13 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\r\n<h3>Realtime graph</h3>\r\n<div id=\''realtimeGraph\''></div>\r\n\r\n<h3>\r\n    <div class'' +\r\n''=\''btn-group pull-right\'' style=\''margin-top: 2px;\''>\r\n        <a href=\''?period=day\'''' +\r\n'' class=\''btn btn-sm btn-default '')", span="91-93"];
m14_15 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\''>\r\n            Day\r\n        </a>\r\n        <a href=\''?period=week\'' class=\''btn btn-'' +\r\n''sm btn-default '')", span="103-104"];
m14_17 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\''>Week</a>\r\n    </div>\r\n    History graph\r\n</h3>\r\n\r\n'')", span="114-114"];
m14_19 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''    <div id=\''historyGraph\'' \r\n          data-succeeded=\'''')", span="125-125"];
m14_21 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\'' \r\n          data-failed=\'''')", span="135-135"];
m14_23 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\''>\r\n    </div>\r\n'')", span="145-145"];
m14_24 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Exit HangFire.Web.Pages.DashboardPage.Execute()", span="51-51"];
m14_36 [file="DashboardPage.generated.cs", label="HangFire.Web.Pages.DashboardPage", span=""];
m17_29 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="DeletedStateFacts.cs", label="var state = CreateState()", span="58-58"];
m17_24 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", file="DeletedStateFacts.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < state.DeletedAt)", span="51-51"];
m17_25 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", file="DeletedStateFacts.cs", label="Assert.True(state.DeletedAt < DateTime.UtcNow.AddMinutes(1))", span="52-52"];
m17_31 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="DeletedStateFacts.cs", label="Assert.Equal(1, data.Count)", span="62-62"];
m17_32 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", color=green, community=0, file="DeletedStateFacts.cs", label="0: Assert.True(JobHelper.FromStringTimestamp(data[''DeletedAt'']) != default(DateTime))", span="63-63"];
m17_26 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", span="47-47"];
m17_27 [cluster="System.DateTime.AddMinutes(double)", file="DeletedStateFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m17_28 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", color=red, community=0, file="DeletedStateFacts.cs", label="0: Entry HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", span="56-56"];
m17_30 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="DeletedStateFacts.cs", label="var data = state.SerializeData()", span="60-60"];
m17_33 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", span="56-56"];
m17_38 [cluster="Unk.SetEntryInHash", file="DeletedStateFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m17_81 [cluster="System.Threading.Thread.Join()", file="DeletedStateFacts.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m17_55 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="DeletedStateFacts.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10"];
m17_20 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IgnoreExceptions_ReturnsTrue()", file="DeletedStateFacts.cs", label="Assert.True(result)", span="43-43"];
m17_0 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", span="10-10"];
m17_1 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", file="DeletedStateFacts.cs", label="var result = DeletedState.StateName", span="12-12"];
m17_2 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", file="DeletedStateFacts.cs", label="Assert.Equal(''Deleted'', result)", span="13-13"];
m17_3 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", span="10-10"];
m17_4 [cluster="Unk.GetClient", file="DeletedStateFacts.cs", label="Entry Unk.GetClient", span=""];
m17_56 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="DeletedStateFacts.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m17_34 [cluster="HangFire.States.DeletedState.SerializeData()", file="DeletedStateFacts.cs", label="Entry HangFire.States.DeletedState.SerializeData()", span="51-51"];
m17_17 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DeletedStateFacts.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="32-32"];
m17_19 [cluster="Unk.Format", file="DeletedStateFacts.cs", label="Entry Unk.Format", span=""];
m17_18 [cluster="Unk.GetAllItemsFromSet", file="DeletedStateFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m17_21 [cluster="Unk.AcquireLock", file="DeletedStateFacts.cs", label="Entry Unk.AcquireLock", span=""];
m17_37 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", span="66-66"];
m17_5 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", span="17-17"];
m17_62 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DeletedStateFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="128-128"];
m17_63 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DeletedStateFacts.cs", label="!String.IsNullOrEmpty(fetchedTimestamp)", span="133-133"];
m17_65 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DeletedStateFacts.cs", label="return !String.IsNullOrEmpty(checkedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(checkedTimestamp) > CheckedTimeout);", span="138-139"];
m17_64 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DeletedStateFacts.cs", label="return false;", span="135-135"];
m17_66 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DeletedStateFacts.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="128-128"];
m17_35 [cluster="Unk.GetValuesFromHash", file="DeletedStateFacts.cs", label="Entry Unk.GetValuesFromHash", span=""];
m17_10 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", span="66-66"];
m17_11 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="DeletedStateFacts.cs", label="Entry HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", span="27-27"];
m17_12 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="DeletedStateFacts.cs", label="var state = CreateState()", span="29-29"];
m17_13 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="DeletedStateFacts.cs", label="var result = state.IsFinal", span="31-31"];
m17_14 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="DeletedStateFacts.cs", label="Assert.True(result)", span="33-33"];
m17_16 [cluster="Unk.True", file="DeletedStateFacts.cs", label="Entry Unk.True", span=""];
m17_15 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", span="27-27"];
m17_53 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="DeletedStateFacts.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="22-22"];
m17_80 [cluster="System.Threading.EventWaitHandle.Set()", file="DeletedStateFacts.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m17_54 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="DeletedStateFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m17_42 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="DeletedStateFacts.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m17_6 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="DeletedStateFacts.cs", label="var state = CreateState()", span="19-19"];
m17_7 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="DeletedStateFacts.cs", label="var result = state.Name", span="21-21"];
m17_8 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="DeletedStateFacts.cs", label="Assert.Equal(DeletedState.StateName, result)", span="23-23"];
m17_39 [cluster="Unk.TimedOutByFetchedTime", file="DeletedStateFacts.cs", label="Entry Unk.TimedOutByFetchedTime", span=""];
m17_40 [cluster="Unk.TimedOutByCheckedTime", file="DeletedStateFacts.cs", label="Entry Unk.TimedOutByCheckedTime", span=""];
m17_22 [cluster="Unk.GetAllItemsFromList", file="DeletedStateFacts.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m17_23 [cluster="Unk.RequeueJobIfTimedOut", file="DeletedStateFacts.cs", label="Entry Unk.RequeueJobIfTimedOut", span=""];
m17_67 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DeletedStateFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="142-142"];
m17_68 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DeletedStateFacts.cs", label=true, span="146-146"];
m17_69 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DeletedStateFacts.cs", label="FindAndRequeueTimedOutJobs()", span="148-148"];
m17_71 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DeletedStateFacts.cs", label=Exception, span="156-156"];
m17_70 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DeletedStateFacts.cs", label="_stopped.WaitOne(SleepTimeout)", span="150-150"];
m17_72 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DeletedStateFacts.cs", label="_logger.Fatal(\r\n                    ''Unexpected exception caught in the timed out jobs thread. Timed out jobs will not be re-queued.'',\r\n                    ex)", span="158-160"];
m17_73 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DeletedStateFacts.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="142-142"];
m17_60 [cluster="string.IsNullOrEmpty(string)", file="DeletedStateFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m17_9 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="DeletedStateFacts.cs", label="Exit HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", span="17-17"];
m17_41 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DeletedStateFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="101-101"];
m17_43 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DeletedStateFacts.cs", label="var jobType = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Type'')", span="103-105"];
m17_49 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DeletedStateFacts.cs", label="_stateMachine.ChangeState(jobId, state, EnqueuedState.Name, ProcessingState.Name)", span="119-119"];
m17_44 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DeletedStateFacts.cs", label="JobState state", span="107-107"];
m17_45 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DeletedStateFacts.cs", label="var queue = JobHelper.GetQueue(Type.GetType(jobType))", span="111-111"];
m17_46 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DeletedStateFacts.cs", label="state = new EnqueuedState(''Requeued due to time out'', queue)", span="112-112"];
m17_47 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DeletedStateFacts.cs", label=Exception, span="114-114"];
m17_48 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DeletedStateFacts.cs", label="state = new FailedState(''Failed to re-queue the job'', ex)", span="116-116"];
m17_50 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DeletedStateFacts.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="101-101"];
m17_75 [cluster="Unk.Fatal", file="DeletedStateFacts.cs", label="Entry Unk.Fatal", span=""];
m17_36 [cluster="Unk.IsNullOrEmpty", file="DeletedStateFacts.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m17_57 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DeletedStateFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="122-122"];
m17_58 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DeletedStateFacts.cs", label="return !String.IsNullOrEmpty(fetchedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(fetchedTimestamp) > JobTimeout);", span="124-125"];
m17_59 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DeletedStateFacts.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="122-122"];
m17_52 [cluster="Unk.GetType", file="DeletedStateFacts.cs", label="Entry Unk.GetType", span=""];
m17_51 [cluster="Unk.GetValueFromHash", file="DeletedStateFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m17_74 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="DeletedStateFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m17_61 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="DeletedStateFacts.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="67-67"];
m17_76 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DeletedStateFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="164-164"];
m17_77 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DeletedStateFacts.cs", label="_stopped.Set()", span="166-166"];
m17_78 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DeletedStateFacts.cs", label="thread.Join()", span="167-167"];
m17_79 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DeletedStateFacts.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="164-164"];
m17_82 [file="DeletedStateFacts.cs", label="HangFire.Server.DequeuedJobsWatcher", span=""];
m18_21 [cluster="Unk.CreateTask", file="EmbeddedResourceHandler.cs", label="Entry Unk.CreateTask", span=""];
m18_10 [cluster="Unk.>", file="EmbeddedResourceHandler.cs", label="Entry Unk.>", span=""];
m18_6 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="EmbeddedResourceHandler.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21"];
m18_7 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => ServerComponentExtensions.CreateTask(null, _cts.Token))", span="23-24"];
m18_8 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="EmbeddedResourceHandler.cs", label="Assert.Equal(''component'', exception.ParamName)", span="26-26"];
m18_9 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="EmbeddedResourceHandler.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21"];
m18_29 [cluster="System.Threading.Tasks.Task.Wait()", file="EmbeddedResourceHandler.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m18_22 [cluster="System.Enum.HasFlag(System.Enum)", file="EmbeddedResourceHandler.cs", label="Entry System.Enum.HasFlag(System.Enum)", span="0-0"];
m18_23 [cluster="Unk.True", file="EmbeddedResourceHandler.cs", label="Entry Unk.True", span=""];
m18_34 [cluster="Unk.Execute", file="EmbeddedResourceHandler.cs", label="Entry Unk.Execute", span=""];
m18_40 [cluster="Unk.Setup", file="EmbeddedResourceHandler.cs", label="Entry Unk.Setup", span=""];
m18_0 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="EmbeddedResourceHandler.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14"];
m18_1 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="EmbeddedResourceHandler.cs", label="_component = new Mock<IServerComponent>()", span="16-16"];
m18_2 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="EmbeddedResourceHandler.cs", label="_cts = new CancellationTokenSource()", span="17-17"];
m18_3 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="EmbeddedResourceHandler.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14"];
m18_35 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="EmbeddedResourceHandler.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="49-49"];
m18_36 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: _component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="51-51"];
m18_37 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="EmbeddedResourceHandler.cs", label="var task = _component.Object.CreateTask(_cts.Token)", span="52-52"];
m18_38 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: Assert.DoesNotThrow(() => task.Wait())", span="54-54"];
m18_39 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="EmbeddedResourceHandler.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="49-49"];
m18_11 [cluster="Unk.Equal", file="EmbeddedResourceHandler.cs", label="Entry Unk.Equal", span=""];
m18_15 [cluster="Hangfire.Server.ServerComponentExtensions.CreateTask(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="EmbeddedResourceHandler.cs", label="Entry Hangfire.Server.ServerComponentExtensions.CreateTask(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", span="10-10"];
m18_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="EmbeddedResourceHandler.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m18_4 [cluster="Mock<IServerComponent>.cstr", file="EmbeddedResourceHandler.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m18_30 [cluster="Unk.Verify", file="EmbeddedResourceHandler.cs", label="Entry Unk.Verify", span=""];
m18_45 [cluster="lambda expression", file="EmbeddedResourceHandler.cs", label="Entry lambda expression", span="54-54"];
m18_12 [cluster="lambda expression", file="EmbeddedResourceHandler.cs", label="Entry lambda expression", span="24-24"];
m18_31 [cluster="lambda expression", file="EmbeddedResourceHandler.cs", label="Entry lambda expression", span="45-45"];
m18_32 [cluster="lambda expression", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: x.Execute(_cts.Token)", span="45-45"];
m18_33 [cluster="lambda expression", file="EmbeddedResourceHandler.cs", label="Exit lambda expression", span="45-45"];
m18_42 [cluster="lambda expression", file="EmbeddedResourceHandler.cs", label="Entry lambda expression", span="51-51"];
m18_46 [cluster="lambda expression", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: task.Wait()", span="54-54"];
m18_47 [cluster="lambda expression", file="EmbeddedResourceHandler.cs", label="Exit lambda expression", span="54-54"];
m18_43 [cluster="lambda expression", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: x.Execute(It.IsAny<CancellationToken>())", span="51-51"];
m18_44 [cluster="lambda expression", file="EmbeddedResourceHandler.cs", label="Exit lambda expression", span="51-51"];
m18_13 [cluster="lambda expression", file="EmbeddedResourceHandler.cs", label="ServerComponentExtensions.CreateTask(null, _cts.Token)", span="24-24"];
m18_14 [cluster="lambda expression", file="EmbeddedResourceHandler.cs", label="Exit lambda expression", span="24-24"];
m18_41 [cluster="Unk.DoesNotThrow", file="EmbeddedResourceHandler.cs", label="Entry Unk.DoesNotThrow", span=""];
m18_24 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="EmbeddedResourceHandler.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="39-39"];
m18_25 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: var task = _component.Object.CreateTask(_cts.Token)", span="41-41"];
m18_26 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="EmbeddedResourceHandler.cs", label="task.Wait()", span="43-43"];
m18_27 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: _component.Verify(x => x.Execute(_cts.Token), Times.Once)", span="45-45"];
m18_28 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="EmbeddedResourceHandler.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="39-39"];
m18_16 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="EmbeddedResourceHandler.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", span="30-30"];
m18_17 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: var task = _component.Object.CreateTask(_cts.Token)", span="32-32"];
m18_18 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", color=green, community=0, file="EmbeddedResourceHandler.cs", label="0: Assert.True(task.CreationOptions.HasFlag(TaskCreationOptions.LongRunning))", span="34-34"];
m18_19 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="EmbeddedResourceHandler.cs", label="Assert.True(task.CreationOptions.HasFlag(TaskCreationOptions.AttachedToParent))", span="35-35"];
m18_20 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="EmbeddedResourceHandler.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", span="30-30"];
m18_48 [file="EmbeddedResourceHandler.cs", label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", span=""];
m18_49 [file="EmbeddedResourceHandler.cs", label=task, span=""];
m19_0 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="EnqueuedJobsPage.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m19_1 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="EnqueuedJobsPage.cs", label="Queue = queue", span="6-6"];
m19_2 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="EnqueuedJobsPage.cs", label="Exit HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m19_3 [file="EnqueuedJobsPage.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m20_239 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="448-448"];
m20_240 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="EnqueuedJobsPage.generated.cs", label="var serializedHistory = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="450-451"];
m20_243 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="EnqueuedJobsPage.generated.cs", label="i < table.RowCount", span="454-454"];
m20_244 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(table.Rows[i][''State''], history[i][''State''])", span="456-456"];
m20_241 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="EnqueuedJobsPage.generated.cs", label="var history = serializedHistory.Select(JobHelper.FromJson<Dictionary<string, string>>).ToList()", span="452-452"];
m20_242 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="EnqueuedJobsPage.generated.cs", label="var i = 0", span="454-454"];
m20_245 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="EnqueuedJobsPage.generated.cs", label="i++", span="454-454"];
m20_246 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="448-448"];
m20_135 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="26-26"];
m20_153 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="307-307"];
m20_154 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="EnqueuedJobsPage.generated.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="309-309"];
m20_155 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="EnqueuedJobsPage.generated.cs", label="var timestamp = JobHelper.FromTimestamp((long)score)", span="310-310"];
m20_156 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="EnqueuedJobsPage.generated.cs", label="Assert.True(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="312-312"];
m20_157 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="EnqueuedJobsPage.generated.cs", label="Assert.True(timestamp < DateTime.UtcNow.AddSeconds(1))", span="313-313"];
m20_158 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="307-307"];
m20_137 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="282-282"];
m20_138 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="284-284"];
m20_139 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="EnqueuedJobsPage.generated.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="285-285"];
m20_140 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="282-282"];
m20_56 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Entry lambda expression", span="101-101"];
m20_90 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="198-198"];
m20_91 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="EnqueuedJobsPage.generated.cs", label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="201-202"];
m20_92 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="EnqueuedJobsPage.generated.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _stateMocks[state].Object, allowedState)", span="203-203"];
m20_93 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="198-198"];
m20_51 [cluster="lambda expression", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: x[''Name'']", span="100-100"];
m20_152 [cluster="Unk.False", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.False", span=""];
m20_53 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Entry lambda expression", span="100-100"];
m20_19 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label=enqueuedJobs, span="186-186"];
m20_20 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="2: WriteLiteral(''                    <tr class=\''js-jobs-list-row hover '')", span="192-192"];
m20_21 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="197-197"];
m20_162 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="317-317"];
m20_163 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="EnqueuedJobsPage.generated.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="319-319"];
m20_164 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="EnqueuedJobsPage.generated.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="320-320"];
m20_165 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="EnqueuedJobsPage.generated.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="321-321"];
m20_166 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="EnqueuedJobsPage.generated.cs", label="Assert.True(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="323-323"];
m20_167 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Assert.True(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="324-324"];
m20_168 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="317-317"];
m20_64 [cluster="Unk.Write", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m20_65 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m20_66 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_67 [cluster="string.Format(string, object)", file="EnqueuedJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m20_89 [cluster="Unk.ChangeState", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.ChangeState", span=""];
m20_62 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m20_202 [cluster="Unk.Unapply", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.Unapply", span=""];
m20_102 [cluster="Unk.ForEach", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.ForEach", span=""];
m20_48 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="362-362"];
m20_52 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Exit lambda expression", span="100-100"];
m20_169 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="328-328"];
m20_170 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="EnqueuedJobsPage.generated.cs", label="Assert.False(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="330-330"];
m20_171 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="328-328"];
m20_70 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="EnqueuedJobsPage.generated.cs", label="_filters.Add(new TestStateChangedFilter(name, _stateAppliedResults))", span="133-133"];
m20_136 [cluster="HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m20_228 [cluster="Unk.ContainsKey", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.ContainsKey", span=""];
m20_212 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="401-401"];
m20_213 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="EnqueuedJobsPage.generated.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="403-404"];
m20_214 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="EnqueuedJobsPage.generated.cs", label="Assert.NotNull(entry)", span="405-405"];
m20_215 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="EnqueuedJobsPage.generated.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="407-407"];
m20_216 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="EnqueuedJobsPage.generated.cs", label="Assert.NotNull(history)", span="408-408"];
m20_218 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="EnqueuedJobsPage.generated.cs", label="Assert.True(history.ContainsKey(property.Key))", span="412-412"];
m20_219 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(property.Value, history[property.Key])", span="413-413"];
m20_217 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="EnqueuedJobsPage.generated.cs", label=_stateProperties, span="410-410"];
m20_220 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="401-401"];
m20_121 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="249-249"];
m20_122 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="EnqueuedJobsPage.generated.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="251-256"];
m20_123 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.True(\r\n                    ttl.Seconds == -1,\r\n                    String.Format(''TTL for the '{0}' key is '{1}''', x, ttl));\r\n            })", span="258-264"];
m20_124 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="249-249"];
m20_120 [cluster="Unk.PopItemFromList", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.PopItemFromList", span=""];
m20_68 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m20_13 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        The queue is empty.\r\n    </div>\r\n'')", span="124-124"];
m20_60 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="EnqueuedJobsPage.generated.cs", label="_filters.Add(new TestStateChangingFilter(name, _stateChangingResults))", span="118-118"];
m20_29 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="!job.Value.InEnqueuedState", span="239-239"];
m20_58 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Exit lambda expression", span="101-101"];
m20_221 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_22 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="1: WriteLiteral(''\''>\r\n                        <td>\r\n                            <input type=\''checkb'' +\r\n''ox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="202-203"];
m20_94 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="207-207"];
m20_95 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(name, _state.StateName)", span="209-209"];
m20_96 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="207-207"];
m20_59 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39"];
m20_61 [cluster="HangFire.Web.RazorPage.Write(object)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m20_10 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="enqueuedJobs = monitor\r\n            .EnqueuedJobs(Queue, pager.FromRecord, pager.RecordsPerPage)", span="105-106"];
m20_11 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="113-113"];
m20_12 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="118-118"];
m20_63 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m20_18 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="0: WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>State</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Enqueued</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="165-181"];
m20_195 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="386-386"];
m20_196 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="EnqueuedJobsPage.generated.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId)))", span="388-389"];
m20_197 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="386-386"];
m20_227 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="418-418"];
m20_222 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="418-418"];
m20_223 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="EnqueuedJobsPage.generated.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="420-421"];
m20_224 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="EnqueuedJobsPage.generated.cs", label=_stateProperties, span="423-423"];
m20_225 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="EnqueuedJobsPage.generated.cs", label="Assert.True(stateEntry.ContainsKey(property.Key))", span="425-425"];
m20_226 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(property.Value, stateEntry[property.Key])", span="426-426"];
m20_229 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="431-431"];
m20_230 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(table.RowCount, _stateChangingResults.Count)", span="433-433"];
m20_232 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="i < table.RowCount", span="435-435"];
m20_233 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(table.Rows[i][''Filter''], _stateChangingResults[i])", span="437-437"];
m20_231 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="var i = 0", span="435-435"];
m20_234 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="i++", span="435-435"];
m20_235 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="431-431"];
m20_209 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Entry lambda expression", span="396-396"];
m20_34 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Write(job.Value.State)", span="272-272"];
m20_37 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", span="288-288"];
m20_35 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="1: WriteLiteral(''\r\n                            </span>\r\n                        </td>\r\n           '' +\r\n''             <td>\r\n                            <a class=\''job-method\'' href=\'''')", span="277-278"];
m20_36 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="283-283"];
m20_38 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="293-293"];
m20_39 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="2: WriteLiteral(''\r\n                            </a>\r\n                        </td>\r\n              '' +\r\n''          <td class=\''align-right\''>\r\n'')", span="298-299"];
m20_50 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Web.Pages.EnqueuedJobsPage.Execute()", span="62-62"];
m20_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m20_55 [cluster="HttpRequestBase.LinkTo(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m20_57 [cluster="HangFire.JobStorage.GetMonitoringApi()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m20_103 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Entry lambda expression", span="222-229"];
m20_104 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="224-224"];
m20_105 [cluster="lambda expression", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl))", span="225-228"];
m20_106 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Exit lambda expression", span="222-229"];
m20_125 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Entry lambda expression", span="258-264"];
m20_126 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="260-260"];
m20_127 [cluster="lambda expression", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Assert.True(\r\n                    ttl.Seconds == -1,\r\n                    String.Format(''TTL for the '{0}' key is '{1}''', x, ttl))", span="261-263"];
m20_128 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Exit lambda expression", span="258-264"];
m20_199 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Entry lambda expression", span="389-389"];
m20_200 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId))", span="389-389"];
m20_201 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Exit lambda expression", span="389-389"];
m20_203 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Entry lambda expression", span="389-389"];
m20_204 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="y.JobId == JobSteps.DefaultJobId", span="389-389"];
m20_205 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Exit lambda expression", span="389-389"];
m20_210 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="x.Unapply(It.IsAny<StateApplyingContext>())", span="396-396"];
m20_211 [cluster="lambda expression", file="EnqueuedJobsPage.generated.cs", label="Exit lambda expression", span="396-396"];
m20_175 [cluster="Unk.SetContainsItem", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.SetContainsItem", span=""];
m20_249 [cluster="Unk.ToList", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.ToList", span=""];
m20_108 [cluster="Unk.Format", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.Format", span=""];
m20_149 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="301-301"];
m20_150 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Assert.False(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="303-303"];
m20_151 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="301-301"];
m20_31 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="1: WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <span class=\''label label-default\'' style=\'''')", span="256-257"];
m20_33 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", span="267-267"];
m20_77 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m20_80 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="181-181"];
m20_81 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: When(String.Format(\r\n                ''I change the state of the '{0}' job to the '{1}''',\r\n                JobSteps.DefaultJobId,\r\n                state))", span="183-186"];
m20_82 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="181-181"];
m20_107 [cluster="Unk.GetTimeToLive", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.GetTimeToLive", span=""];
m20_69 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m20_71 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="EnqueuedJobsPage.generated.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m20_42 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="315-315"];
m20_43 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="2: WriteLiteral(''\''>\r\n                                    '')", span="320-320"];
m20_44 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Write(job.Value.EnqueuedAt)", span="325-325"];
m20_45 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="2: WriteLiteral(''\r\n                                </span>\r\n'')", span="330-330"];
m20_46 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="WriteLiteral(''                                <em>n/a</em>\r\n'')", span="342-342"];
m20_97 [cluster="Unk.Equal", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.Equal", span=""];
m20_206 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="393-393"];
m20_207 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="EnqueuedJobsPage.generated.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.IsAny<StateApplyingContext>()),\r\n                Times.Never)", span="395-397"];
m20_208 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="393-393"];
m20_193 [cluster="Unk.RemoveStartFromList", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.RemoveStartFromList", span=""];
m20_176 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="340-340"];
m20_177 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="EnqueuedJobsPage.generated.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="342-342"];
m20_178 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(state, job[''State''])", span="343-343"];
m20_179 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="340-340"];
m20_110 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="233-233"];
m20_111 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="235-237"];
m20_112 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="233-233"];
m20_72 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m20_236 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="442-442"];
m20_237 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(0, _stateChangingResults.Count)", span="444-444"];
m20_238 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="442-442"];
m20_8 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="0: var monitor = JobStorage.Current.GetMonitoringApi()", span="98-98"];
m20_23 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Write(job.Key)", span="208-208"];
m20_24 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="1: WriteLiteral(''\'' />\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>\r\n                            <a href=\'''')", span="213-214"];
m20_25 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="219-219"];
m20_27 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="1: Write(HtmlHelper.JobId(job.Key))", span="229-229"];
m20_26 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", span="224-224"];
m20_28 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="234-234"];
m20_194 [cluster="Unk.NotNull", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.NotNull", span=""];
m20_30 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="2: WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="245-246"];
m20_14 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="0: WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-default\''\r\n     '' +\r\n''               data-url=\'''')", span="136-138"];
m20_15 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Write(Request.LinkTo(''/enqueued/delete''))", span="143-143"];
m20_16 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="0: WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="148-155"];
m20_172 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="334-334"];
m20_173 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="EnqueuedJobsPage.generated.cs", label="Assert.True(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="336-336"];
m20_174 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="334-334"];
m20_17 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="160-160"];
m20_146 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="295-295"];
m20_147 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="EnqueuedJobsPage.generated.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="297-297"];
m20_148 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="295-295"];
m20_141 [cluster="Unk.GetSortedSetCount", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.GetSortedSetCount", span=""];
m20_198 [cluster="Unk.Verify", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.Verify", span=""];
m20_115 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="241-241"];
m20_116 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="243-243"];
m20_117 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="244-245"];
m20_118 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="241-241"];
m20_143 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="289-289"];
m20_144 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="291-291"];
m20_145 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="289-289"];
m20_184 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="347-347"];
m20_181 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="347-347"];
m20_182 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="349-350"];
m20_183 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="TableAssert.ContainsFollowingItems(table, stateEntry)", span="351-351"];
m20_0 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="42-42"];
m20_4 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="48-48"];
m20_3 [cluster="HangFire.States.SucceededState.SucceededState()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="23-23"];
m20_5 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="0: _failedException = new InvalidOperationException(''Hello'')", span="50-50"];
m20_9 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m20_6 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: _state = new FailedState(_failedException)\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="51-54"];
m20_49 [cluster="Unk.ToDictionary", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.ToDictionary", span=""];
m20_7 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="0: Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="48-48"];
m20_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m20_40 [cluster="Unk.>", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.>", span=""];
m20_41 [cluster="Unk.GetData", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="1: Entry Unk.GetData", span=""];
m20_1 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="EnqueuedJobsPage.generated.cs", label="_state = new SucceededState { Reason = ''SomeReason'' }", span="44-44"];
m20_2 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="42-42"];
m20_47 [cluster="string.Format(string, object)", file="EnqueuedJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m20_142 [cluster="Unk.SortedSetContainsItem", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m20_83 [cluster="string.Format(string, object, object)", file="EnqueuedJobsPage.generated.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m20_161 [cluster="System.DateTime.AddSeconds(double)", file="EnqueuedJobsPage.generated.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m20_113 [cluster="string.Format(string, params object[])", file="EnqueuedJobsPage.generated.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m20_98 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="213-213"];
m20_99 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="215-220"];
m20_100 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", color=red, community=0, file="EnqueuedJobsPage.generated.cs", label="0: keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl));\r\n                })", span="222-229"];
m20_101 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="213-213"];
m20_180 [cluster="Unk.GetAllEntriesFromHash", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m20_160 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m20_192 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="355-355"];
m20_186 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="355-355"];
m20_187 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="357-358"];
m20_191 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="TableAssert.ContainsFollowingItems(table, history)", span="364-364"];
m20_188 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="Assert.NotNull(entry)", span="359-359"];
m20_189 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="361-361"];
m20_190 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="Assert.NotNull(history)", span="362-362"];
m20_159 [cluster="Unk.GetItemScoreInSortedSet", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m20_78 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", span="15-15"];
m20_119 [cluster="Unk.GetListCount", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.GetListCount", span=""];
m20_84 [cluster="Unk.When", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.When", span=""];
m20_129 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="268-268"];
m20_130 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="270-270"];
m20_131 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="268-268"];
m20_132 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="274-274"];
m20_133 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="TableAssert.ContainsFollowingItems(\r\n                table,\r\n                _state.GetData(_defaultData))", span="276-278"];
m20_134 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="274-274"];
m20_247 [cluster="Unk.GetAllItemsFromList", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m20_85 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="190-190"];
m20_86 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="EnqueuedJobsPage.generated.cs", label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="192-193"];
m20_87 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="EnqueuedJobsPage.generated.cs", label="stateMachine.ChangeState(jobId, _stateMocks[state].Object)", span="194-194"];
m20_88 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="190-190"];
m20_248 [cluster="Unk.Select", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.Select", span=""];
m20_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="111-111"];
m20_73 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="173-173"];
m20_74 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="EnqueuedJobsPage.generated.cs", label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="175-176"];
m20_75 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="EnqueuedJobsPage.generated.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="177-177"];
m20_76 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="173-173"];
m20_114 [cluster="Unk.GetValue", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.GetValue", span=""];
m20_109 [cluster="Unk.True", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.True", span=""];
m20_185 [cluster="Unk.ContainsFollowingItems", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m20_250 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="461-461"];
m20_251 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(table.RowCount, _stateAppliedResults.Count)", span="463-463"];
m20_253 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="i < table.RowCount", span="465-465"];
m20_254 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="Assert.Equal(table.Rows[i][''Method''], _stateAppliedResults[i])", span="467-467"];
m20_252 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="var i = 0", span="465-465"];
m20_255 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="i++", span="465-465"];
m20_256 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="461-461"];
m20_257 [file="EnqueuedJobsPage.generated.cs", label="HangFire.Tests.States.StateSteps", span=""];
m21_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m21_17 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EnqueuedState.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m21_11 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="82-82"];
m21_12 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="var enqueuedState = context.NewState as EnqueuedState", span="84-84"];
m21_15 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="transaction.AddToQueue(enqueuedState.Queue, context.JobId)", span="92-92"];
m21_13 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="enqueuedState == null", span="85-85"];
m21_14 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Enqueued state.'',\r\n                        typeof(Handler).FullName));", span="87-89"];
m21_16 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="82-82"];
m21_0 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m21_1 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m21_20 [cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="95-95"];
m21_21 [cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="95-95"];
m21_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="EnqueuedState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30"];
m21_18 [cluster="string.Format(string, object)", file="EnqueuedState.cs", label="Entry string.Format(string, object)", span="0-0"];
m21_10 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m21_2 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36"];
m21_3 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="EnqueuedAt = DateTime.UtcNow", span="38-38"];
m21_4 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="Queue = queue", span="39-39"];
m21_5 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36"];
m21_6 [cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.SerializeData()", span="71-71"];
m21_7 [cluster="HangFire.States.EnqueuedState.SerializeData()", color=red, community=0, file="EnqueuedState.cs", label="0: return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueuedAt'', JobHelper.ToStringTimestamp(EnqueuedAt) },\r\n                { ''Queue'', Queue }\r\n            };", span="73-77"];
m21_8 [cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.SerializeData()", span="71-71"];
m21_22 [file="EnqueuedState.cs", label="HangFire.States.EnqueuedState", span=""];
m22_19 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ErrorPage.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m22_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ErrorPage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m22_18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ErrorPage.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m22_38 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="Entry HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="105-105"];
m22_39 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="method == null", span="107-107"];
m22_41 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="return EnqueuedState.GetQueue(method);", span="108-108"];
m22_40 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="return null;", span="107-107"];
m22_42 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="Exit HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="105-105"];
m22_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ErrorPage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m22_33 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="ErrorPage.cs", label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="89-89"];
m22_34 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="ErrorPage.cs", label="var queue = GetQueue(context.JobMethod)", span="91-91"];
m22_35 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="ErrorPage.cs", label="context.Transaction.AddToQueue(queue, context.JobId)", span="93-93"];
m22_36 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="ErrorPage.cs", label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="89-89"];
m22_0 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="Entry HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", span="32-32"];
m22_1 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="var queue = GetQueue(data)", span="34-34"];
m22_2 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', queue }\r\n                };", span="36-40"];
m22_3 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="Exit HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", span="32-32"];
m22_22 [cluster="string.IsNullOrEmpty(string)", file="ErrorPage.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m22_23 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="ErrorPage.cs", label="Entry HangFire.States.EnqueuedState.ValidateQueueName(string)", span="73-73"];
m22_24 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="ErrorPage.cs", label="String.IsNullOrWhiteSpace(queue)", span="75-75"];
m22_26 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="ErrorPage.cs", label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="80-80"];
m22_27 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="ErrorPage.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue));", span="82-83"];
m22_25 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="ErrorPage.cs", label="throw new ArgumentNullException(''queue'');", span="77-77"];
m22_28 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="ErrorPage.cs", label="Exit HangFire.States.EnqueuedState.ValidateQueueName(string)", span="73-73"];
m22_29 [cluster="string.IsNullOrWhiteSpace(string)", file="ErrorPage.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m22_37 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="ErrorPage.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="16-16"];
m22_4 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="Entry HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43"];
m22_7 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="method == null", span="45-45"];
m22_10 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="!method.OldFormat", span="49-49"];
m22_11 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="attribute = method.Method\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="51-54"];
m22_13 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="attribute = method.Type\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="59-62"];
m22_8 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="throw new ArgumentNullException(''method'');", span="45-45"];
m22_9 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="QueueAttribute attribute = null", span="47-47"];
m22_12 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="attribute == null", span="57-57"];
m22_14 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="var queueName = attribute != null\r\n                ? !String.IsNullOrEmpty(attribute.Name) ? attribute.Name : DefaultQueue\r\n                : DefaultQueue", span="65-67"];
m22_15 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="ValidateQueueName(queueName)", span="68-68"];
m22_16 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="return queueName;", span="70-70"];
m22_17 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="ErrorPage.cs", label="Exit HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43"];
m22_30 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="ErrorPage.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m22_20 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ErrorPage.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m22_32 [cluster="string.Format(string, object)", file="ErrorPage.cs", label="Entry string.Format(string, object)", span="0-0"];
m22_6 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ErrorPage.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m22_31 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ErrorPage.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m23_12 [cluster="HangFire.Web.RazorPage.Write(object)", file="ErrorPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m23_10 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ErrorPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m23_14 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ErrorPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115"];
m23_13 [cluster="System.Exception.ToString()", file="ErrorPage.generated.cs", label="Entry System.Exception.ToString()", span="0-0"];
m23_11 [cluster="HttpRequestBase.LinkTo(string)", file="ErrorPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m23_0 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", file="ErrorPage.generated.cs", label="Entry HangFire.Web.Pages.ErrorPage.Execute()", span="34-34"];
m23_1 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", color=red, community=0, file="ErrorPage.generated.cs", label="2: WriteLiteral(''\r\n'')", span="38-38"];
m23_2 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", color=red, community=2, file="ErrorPage.generated.cs", label="0: WriteLiteral(''<!DOCTYPE html>\r\n\r\n<html lang=\''ru\''>\r\n<head>\r\n    <title>Error - HangFire</title>\r'' +\r\n''\n    <meta charset=\''utf-8\'' />\r\n    <meta name=\''viewport\'' content=\''width=device-w'' +\r\n''idth, initial-scale=1.0\''>\r\n    <link rel=\''stylesheet\'' href=\'''')", span="43-45"];
m23_3 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", color=red, community=0, file="ErrorPage.generated.cs", label="0: Write(Request.LinkTo(''/css/styles.css''))", span="50-50"];
m23_4 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", color=red, community=2, file="ErrorPage.generated.cs", label="0: WriteLiteral(''\'' />\r\n</head>\r\n<body>\r\n    <div class=\''container\''>\r\n        <div class=\''jumbotron'' +\r\n''\'' style=\''margin-top: 40px;\''>\r\n\r\n            <h1>HangFire <small>An exception occ'' +\r\n''urred</small></h1>\r\n            <p class=\''lead\''>'')", span="55-57"];
m23_5 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", color=red, community=0, file="ErrorPage.generated.cs", label="0: Write(Exception.Message)", span="62-62"];
m23_6 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", color=red, community=0, file="ErrorPage.generated.cs", label="0: WriteLiteral(''</p>\r\n\r\n            <pre>'')", span="67-67"];
m23_7 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", color=red, community=0, file="ErrorPage.generated.cs", label="0: Write(HtmlHelper.MarkupStackTrace(Exception.ToString()))", span="72-72"];
m23_8 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", color=red, community=0, file="ErrorPage.generated.cs", label="0: WriteLiteral(''</pre>\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>\r\n'')", span="77-77"];
m23_9 [cluster="HangFire.Web.Pages.ErrorPage.Execute()", file="ErrorPage.generated.cs", label="Exit HangFire.Web.Pages.ErrorPage.Execute()", span="34-34"];
m23_15 [cluster="Unk.Write", file="ErrorPage.generated.cs", label="Entry Unk.Write", span=""];
m23_16 [file="ErrorPage.generated.cs", label="HangFire.Web.Pages.ErrorPage", span=""];
m24_9 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51"];
m24_10 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="var connection = _storage.CreateAndOpenConnection()", span="53-53"];
m24_14 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="67-67"];
m24_11 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label=ProcessedTables, span="55-55"];
m24_13 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="connection.Execute(\r\n                        String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete from HangFire.[{0}] with (tablock) where ExpireAt < @now;'', table),\r\n                        new { now = DateTime.UtcNow })", span="59-63"];
m24_12 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="57-57"];
m24_15 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51"];
m24_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ExpirationManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m24_2 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43"];
m24_3 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="storage == null", span="45-45"];
m24_5 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="_storage = storage", span="47-47"];
m24_6 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="_checkInterval = checkInterval", span="48-48"];
m24_4 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="throw new ArgumentNullException(''storage'');", span="45-45"];
m24_7 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43"];
m24_0 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m24_1 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m24_20 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ExpirationManager.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m24_19 [cluster="Unk.Execute", file="ExpirationManager.cs", label="Entry Unk.Execute", span=""];
m24_21 [cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.ExpirationManager.ToString()", span="70-70"];
m24_22 [cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs", label="return ''SQL Records Expiration Manager'';", span="72-72"];
m24_23 [cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.ExpirationManager.ToString()", span="70-70"];
m24_16 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="126-126"];
m24_17 [cluster="Unk.DebugFormat", file="ExpirationManager.cs", label="Entry Unk.DebugFormat", span=""];
m24_18 [cluster="string.Format(string, object)", file="ExpirationManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m24_24 [file="ExpirationManager.cs", label="HangFire.SqlServer.ExpirationManager", span=""];
m26_88 [cluster="System.Collections.Generic.List<T>.List()", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m26_351 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m26_112 [cluster="long.Parse(string)", file="FailedJobsPage.generated.cs", label="Entry long.Parse(string)", span="0-0"];
m26_18 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="FailedJobsPage.generated.cs", label="return counters.EnqueuedCount ?? 0;", span="55-55"];
m26_366 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="FailedJobsPage.generated.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m26_89 [cluster="Hangfire.Storage.Monitoring.ServerDto.ServerDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m26_45 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484"];
m26_352 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j with (forceseek)\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="491-498"];
m26_353 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="500-503"];
m26_354 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="return DeserializeJobs(jobs, selector);", span="505-505"];
m26_355 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484"];
m26_367 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m26_27 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66"];
m26_28 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="FailedJobsPage.generated.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="68-69"];
m26_29 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66"];
m26_140 [cluster="Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m26_23 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="FailedJobsPage.generated.cs", label="var queueApi = GetQueueApi(queue)", span="60-60"];
m26_24 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="FailedJobsPage.generated.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="61-61"];
m26_25 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="FailedJobsPage.generated.cs", label="return counters.FetchedCount ?? 0;", span="63-63"];
m26_100 [cluster="Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m26_356 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508"];
m26_362 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="523-524"];
m26_360 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="var stateData = deserializedData != null\r\n                    ? new Dictionary<string, string>(deserializedData, StringComparer.OrdinalIgnoreCase)\r\n                    : null", span="517-519"];
m26_361 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="521-521"];
m26_359 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="var deserializedData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="516-516"];
m26_357 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="512-512"];
m26_358 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label=jobs, span="514-514"];
m26_363 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="return new JobList<TDto>(result);", span="527-527"];
m26_364 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508"];
m26_14 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="FailedJobsPage.generated.cs", label="serversRemoved != 0", span="48-48"];
m26_340 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName, limit = _jobListLimit })\r\n                 .Single()", span="461-464"];
m26_339 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="var sqlQuery = _jobListLimit.HasValue\r\n                ? @''select count(j.Id) from (select top (@limit) Id from HangFire.Job where StateName = @state) as j''\r\n                : @''select count(Id) from HangFire.Job where StateName = @state''", span="457-459"];
m26_341 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="return count;", span="466-466"];
m26_342 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="455-455"];
m26_227 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300"];
m26_228 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="FailedJobsPage.generated.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="302-303"];
m26_229 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300"];
m26_379 [cluster="Unk.ToString", file="FailedJobsPage.generated.cs", label="Entry Unk.ToString", span=""];
m26_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FailedJobsPage.generated.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m26_327 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="FailedJobsPage.generated.cs", label="return _storage.UseTransaction(action, IsolationLevel.ReadUncommitted);", span="425-425"];
m26_328 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="423-423"];
m26_239 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m26_186 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246"];
m26_187 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="248-249"];
m26_188 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246"];
m26_334 [cluster="Unk.DeserializeJobs", file="FailedJobsPage.generated.cs", label="Entry Unk.DeserializeJobs", span=""];
m26_233 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306"];
m26_234 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: string sql = @''\r\nselect count(Id) from HangFire.Job where StateName = N'Enqueued';\r\nselect count(Id) from HangFire.Job where StateName = N'Failed';\r\nselect count(Id) from HangFire.Job where StateName = N'Processing';\r\nselect count(Id) from HangFire.Job where StateName = N'Scheduled';\r\nselect count(Id) from HangFire.Server;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:succeeded'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:succeeded'\r\n) as s;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:deleted'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:deleted'\r\n) as s;\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="308-325"];
m26_235 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: var statistics = UseConnection(connection =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    stats.Enqueued = multi.Read<int>().Single();\r\n                    stats.Failed = multi.Read<int>().Single();\r\n                    stats.Processing = multi.Read<int>().Single();\r\n                    stats.Scheduled = multi.Read<int>().Single();\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n                return stats;\r\n            })", span="327-345"];
m26_236 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="FailedJobsPage.generated.cs", label="statistics.Queues = _storage.QueueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi().GetQueues())\r\n                .Count()", span="347-349"];
m26_237 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="FailedJobsPage.generated.cs", label="return statistics;", span="351-351"];
m26_238 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306"];
m26_174 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24"];
m26_169 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232"];
m26_170 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="FailedJobsPage.generated.cs", label="var queueApi = GetQueueApi(queue)", span="234-234"];
m26_172 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="FailedJobsPage.generated.cs", label="return UseConnection(connection => FetchedJobs(connection, fetchedJobIds));", span="237-237"];
m26_171 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="FailedJobsPage.generated.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="235-235"];
m26_173 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232"];
m26_185 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354"];
m26_265 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", color=green, community=0, file="FailedJobsPage.generated.cs", label="1: endDate = endDate.AddHours(-1)", span="363-363"];
m26_260 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="var endDate = DateTime.UtcNow", span="358-358"];
m26_264 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="dates.Add(endDate)", span="362-362"];
m26_266 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="i++", span="360-360"];
m26_268 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="return GetTimelineStats(connection, keyMaps);", span="368-368"];
m26_261 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="var dates = new List<DateTime>()", span="359-359"];
m26_263 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="i < 24", span="360-360"];
m26_262 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="var i = 0", span="360-360"];
m26_267 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH'')), x => x)", span="366-366"];
m26_269 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354"];
m26_312 [cluster="Unk.ContainsKey", file="FailedJobsPage.generated.cs", label="Entry Unk.ContainsKey", span=""];
m26_6 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="FailedJobsPage.generated.cs", label="throw new ArgumentNullException(''options'');", span="37-37"];
m26_111 [cluster="Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m26_158 [cluster="Unk.EnqueuedJobs", file="FailedJobsPage.generated.cs", label="Entry Unk.EnqueuedJobs", span=""];
m26_380 [cluster="Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m26_259 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m26_19 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50"];
m26_164 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23"];
m26_144 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21"];
m26_50 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m26_368 [cluster="int.ToString()", file="FailedJobsPage.generated.cs", label="Entry int.ToString()", span="0-0"];
m26_329 [cluster="Unk.UseTransaction", file="FailedJobsPage.generated.cs", label="Entry Unk.UseTransaction", span=""];
m26_123 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195"];
m26_130 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = firstJobs\r\n                })", span="212-218"];
m26_125 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="FailedJobsPage.generated.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="203-203"];
m26_126 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="FailedJobsPage.generated.cs", label=tuples, span="205-205"];
m26_128 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="FailedJobsPage.generated.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="208-208"];
m26_129 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="FailedJobsPage.generated.cs", label="var firstJobs = UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds))", span="210-210"];
m26_124 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="FailedJobsPage.generated.cs", label="var tuples = _storage.QueueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi())\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="197-201"];
m26_131 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="FailedJobsPage.generated.cs", label="return result;", span="221-221"];
m26_127 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="FailedJobsPage.generated.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="207-207"];
m26_132 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195"];
m26_136 [cluster="Unk.ToArray", file="FailedJobsPage.generated.cs", label="Entry Unk.ToArray", span=""];
m26_290 [cluster="System.DateTime.AddDays(double)", file="FailedJobsPage.generated.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m26_220 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m26_350 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m26_0 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage)", span="29-29"];
m26_4 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: throw new ArgumentNullException(''storage'');", span="36-36"];
m26_3 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="FailedJobsPage.generated.cs", label="storage == null", span="36-36"];
m26_1 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage)", span="29-29"];
m26_2 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", span="34-34"];
m26_5 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="FailedJobsPage.generated.cs", label="options == null", span="37-37"];
m26_113 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181"];
m26_114 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="183-192"];
m26_115 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181"];
m26_271 [cluster="Unk.GetTimelineStats", file="FailedJobsPage.generated.cs", label="Entry Unk.GetTimelineStats", span=""];
m26_219 [cluster="Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m26_277 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="366-366"];
m26_36 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="74-75"];
m26_37 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="75-75"];
m26_38 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="74-75"];
m26_42 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="80-89"];
m26_43 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="80-89"];
m26_44 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="80-89"];
m26_46 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="84-89"];
m26_79 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="120-142"];
m26_84 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="131-138"];
m26_81 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="var result = new List<ServerDto>()", span="126-126"];
m26_82 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label=servers, span="128-128"];
m26_83 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="130-130"];
m26_94 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="147-160"];
m26_95 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="147-160"];
m26_96 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="147-160"];
m26_97 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="152-160"];
m26_98 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="152-160"];
m26_99 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="152-160"];
m26_105 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="165-178"];
m26_106 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="165-178"];
m26_107 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="165-178"];
m26_108 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="170-178"];
m26_109 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="170-178"];
m26_110 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="170-178"];
m26_116 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="183-192"];
m26_117 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="183-192"];
m26_118 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="183-192"];
m26_119 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="188-192"];
m26_189 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="248-249"];
m26_195 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="254-291"];
m26_196 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="257-260"];
m26_197 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="262-262"];
m26_202 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList()", span="268-280"];
m26_201 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="267-267"];
m26_203 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="282-289"];
m26_216 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="271-279"];
m26_198 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="264-264"];
m26_204 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="254-291"];
m26_217 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            }", span="271-279"];
m26_218 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="271-279"];
m26_243 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="var multi = connection.QueryMultiple(sql)", span="330-330"];
m26_241 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="327-345"];
m26_244 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: stats.Enqueued = multi.Read<int>().Single()", span="332-332"];
m26_242 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="var stats = new StatisticsDto()", span="329-329"];
m26_245 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="stats.Failed = multi.Read<int>().Single()", span="333-333"];
m26_251 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: stats.Recurring = multi.Read<int>().Single()", span="342-342"];
m26_250 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0", span="340-340"];
m26_252 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="return stats;", span="344-344"];
m26_316 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="398-398"];
m26_319 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="398-398"];
m26_335 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="445-452"];
m26_336 [cluster="lambda expression", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="445-452"];
m26_337 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="445-452"];
m26_12 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="FailedJobsPage.generated.cs", label="var connection = _storage.GetConnection()", span="45-45"];
m26_31 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="69-69"];
m26_56 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="94-103"];
m26_66 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="GetTimelineStats(connection, ''succeeded'')", span="109-109"];
m26_73 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="GetTimelineStats(connection, ''failed'')", span="115-115"];
m26_156 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="EnqueuedJobs(connection, enqueuedJobIds)", span="210-210"];
m26_166 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="EnqueuedJobs(connection, enqueuedJobIds)", span="229-229"];
m26_176 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="FetchedJobs(connection, fetchedJobIds)", span="237-237"];
m26_183 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="GetHourlyTimelineStats(connection, ''succeeded'')", span="243-243"];
m26_190 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="GetHourlyTimelineStats(connection, ''failed'')", span="249-249"];
m26_225 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="297-297"];
m26_231 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="303-303"];
m26_48 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="84-89"];
m26_47 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="84-89"];
m26_80 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="122-124"];
m26_246 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="stats.Processing = multi.Read<int>().Single()", span="334-334"];
m26_247 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="stats.Scheduled = multi.Read<int>().Single()", span="335-335"];
m26_248 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="stats.Servers = multi.Read<int>().Single()", span="337-337"];
m26_249 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0", span="339-339"];
m26_86 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="120-142"];
m26_85 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="return result;", span="141-141"];
m26_120 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="188-192"];
m26_121 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="188-192"];
m26_155 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="210-210"];
m26_191 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="248-249"];
m26_199 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="job == null", span="265-265"];
m26_210 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="267-267"];
m26_213 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="267-267"];
m26_200 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="return null;", span="265-265"];
m26_256 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="348-348"];
m26_253 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="327-345"];
m26_292 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd''))", span="383-383"];
m26_291 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="383-383"];
m26_294 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="383-383"];
m26_318 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="398-398"];
m26_317 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="(string)x.Key", span="398-398"];
m26_321 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="398-398"];
m26_320 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="(long)x.Count", span="398-398"];
m26_11 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", span="43-43"];
m26_13 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="FailedJobsPage.generated.cs", label="var serversRemoved = connection.RemoveTimedOutServers(_options.ServerTimeout)", span="47-47"];
m26_30 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="68-69"];
m26_32 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="68-69"];
m26_55 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="94-103"];
m26_57 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="94-103"];
m26_58 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="98-103"];
m26_65 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="108-109"];
m26_67 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="108-109"];
m26_72 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="114-115"];
m26_74 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="114-115"];
m26_141 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="198-198"];
m26_145 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="199-199"];
m26_149 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="199-199"];
m26_152 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="200-200"];
m26_157 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="210-210"];
m26_165 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="229-229"];
m26_167 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="229-229"];
m26_175 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="237-237"];
m26_177 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="237-237"];
m26_182 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="242-243"];
m26_184 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="242-243"];
m26_224 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="296-297"];
m26_226 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="296-297"];
m26_230 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="302-303"];
m26_232 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="302-303"];
m26_212 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="267-267"];
m26_211 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="x.Name", span="267-267"];
m26_215 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="267-267"];
m26_214 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="x.Value", span="267-267"];
m26_258 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="348-348"];
m26_257 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="x.GetJobQueueMonitoringApi().GetQueues()", span="348-348"];
m26_273 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="366-366"];
m26_293 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="383-383"];
m26_296 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="383-383"];
m26_295 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label=x, span="383-383"];
m26_272 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Entry lambda expression", span="366-366"];
m26_60 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="98-103"];
m26_59 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="98-103"];
m26_143 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="198-198"];
m26_142 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="x.GetJobQueueMonitoringApi()", span="198-198"];
m26_147 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="199-199"];
m26_146 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="x.GetQueues()", span="199-199"];
m26_151 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="199-199"];
m26_150 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="new { Monitoring = monitoring, Queue = queue }", span="199-199"];
m26_154 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="200-200"];
m26_153 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="x.Queue", span="200-200"];
m26_274 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="366-366"];
m26_278 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label=x, span="366-366"];
m26_279 [cluster="lambda expression", file="FailedJobsPage.generated.cs", label="Exit lambda expression", span="366-366"];
m26_90 [cluster="System.Collections.Generic.List<T>.Add(T)", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m26_87 [cluster="Unk.ToList", file="FailedJobsPage.generated.cs", label="Entry Unk.ToList", span=""];
m26_315 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m26_22 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="FailedJobsPage.generated.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m26_26 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="FailedJobsPage.generated.cs", label="Hangfire.Server.ServerWatchdog", span=""];
m26_369 [cluster="Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m26_61 [cluster="Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m26_275 [cluster="System.DateTime.ToString(string)", file="FailedJobsPage.generated.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m26_102 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163"];
m26_103 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="165-178"];
m26_104 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163"];
m26_137 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="FailedJobsPage.generated.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m26_21 [cluster="Hangfire.Logging.ILog.Info(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m26_122 [cluster="Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m26_178 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530"];
m26_374 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                    }))", span="549-555"];
m26_371 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="540-543"];
m26_372 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="545-545"];
m26_373 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label=jobs, span="547-547"];
m26_370 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="string fetchedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="534-538"];
m26_375 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="return new JobList<FetchedJobDto>(result);", span="558-558"];
m26_376 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530"];
m26_378 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="FailedJobsPage.generated.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m26_192 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252"];
m26_193 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="254-291"];
m26_194 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252"];
m26_311 [cluster="Unk.Query", file="FailedJobsPage.generated.cs", label="Entry Unk.Query", span=""];
m26_7 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="FailedJobsPage.generated.cs", label="_storage = storage", span="39-39"];
m26_8 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="FailedJobsPage.generated.cs", label="_options = options", span="40-40"];
m26_9 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", span="34-34"];
m26_168 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428"];
m26_331 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="438-441"];
m26_330 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="432-436"];
m26_332 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="443-452"];
m26_333 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428"];
m26_313 [cluster="Unk.Add", file="FailedJobsPage.generated.cs", label="Entry Unk.Add", span=""];
m26_221 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294"];
m26_222 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="FailedJobsPage.generated.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="296-297"];
m26_223 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294"];
m26_51 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m26_338 [cluster="Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m26_377 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="FailedJobsPage.generated.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m26_270 [cluster="System.DateTime.AddHours(double)", file="FailedJobsPage.generated.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m26_91 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145"];
m26_92 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="147-160"];
m26_93 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145"];
m26_343 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469"];
m26_344 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: var data = JobHelper.FromJson<InvocationData>(invocationData)", span="471-471"];
m26_345 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="FailedJobsPage.generated.cs", label="data.Arguments = arguments", span="472-472"];
m26_346 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="FailedJobsPage.generated.cs", label="return data.Deserialize();", span="476-476"];
m26_348 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="FailedJobsPage.generated.cs", label="return null;", span="480-480"];
m26_347 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="FailedJobsPage.generated.cs", label=JobLoadException, span="478-478"];
m26_349 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469"];
m26_75 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118"];
m26_76 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="120-142"];
m26_77 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118"];
m26_205 [cluster="Unk.QueryMultiple", file="FailedJobsPage.generated.cs", label="Entry Unk.QueryMultiple", span=""];
m26_39 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78"];
m26_40 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="80-89"];
m26_41 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78"];
m26_20 [cluster="string.Format(string, object)", file="FailedJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m26_322 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="FailedJobsPage.generated.cs", label="var provider = _storage.QueueProviders.GetProvider(queueName)", span="417-417"];
m26_323 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="FailedJobsPage.generated.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi()", span="418-418"];
m26_324 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="FailedJobsPage.generated.cs", label="return monitoringApi;", span="420-420"];
m26_325 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="415-415"];
m26_52 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92"];
m26_53 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="FailedJobsPage.generated.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="94-103"];
m26_54 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92"];
m26_208 [cluster="Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m26_69 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112"];
m26_70 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="FailedJobsPage.generated.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="114-115"];
m26_71 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112"];
m26_179 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240"];
m26_180 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="FailedJobsPage.generated.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="242-243"];
m26_181 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240"];
m26_276 [cluster="string.Format(string, object, object)", file="FailedJobsPage.generated.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m26_326 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m26_207 [cluster="Unk.ToDictionary", file="FailedJobsPage.generated.cs", label="Entry Unk.ToDictionary", span=""];
m26_134 [cluster="Unk.SelectMany", file="FailedJobsPage.generated.cs", label="Entry Unk.SelectMany", span=""];
m26_16 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="FailedJobsPage.generated.cs", label="var queueApi = GetQueueApi(queue)", span="52-52"];
m26_15 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50"];
m26_17 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="FailedJobsPage.generated.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="53-53"];
m26_78 [cluster="Unk.>", file="FailedJobsPage.generated.cs", label="Entry Unk.>", span=""];
m26_138 [cluster="Unk.GetEnqueuedJobIds", file="FailedJobsPage.generated.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m26_101 [cluster="Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", span="84-84"];
m26_135 [cluster="Unk.OrderBy", file="FailedJobsPage.generated.cs", label="Entry Unk.OrderBy", span=""];
m26_139 [cluster="Unk.GetEnqueuedAndFetchedCount", file="FailedJobsPage.generated.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m26_148 [cluster="Unk.GetQueues", file="FailedJobsPage.generated.cs", label="Entry Unk.GetQueues", span=""];
m26_62 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106"];
m26_63 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="FailedJobsPage.generated.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="108-109"];
m26_64 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106"];
m26_314 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m26_68 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371"];
m26_288 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return GetTimelineStats(connection, keyMaps);", span="385-385"];
m26_287 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd'')), x => x)", span="383-383"];
m26_284 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="dates.Add(endDate)", span="379-379"];
m26_280 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="var endDate = DateTime.UtcNow.Date", span="375-375"];
m26_281 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="var dates = new List<DateTime>()", span="376-376"];
m26_283 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="i < 7", span="377-377"];
m26_285 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="endDate = endDate.AddDays(-1)", span="380-380"];
m26_282 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="var i = 0", span="377-377"];
m26_286 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="i++", span="377-377"];
m26_289 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371"];
m26_254 [cluster="Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m26_49 [cluster="Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m26_297 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388"];
m26_299 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keyMaps.Keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="395-398"];
m26_298 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="string sqlQuery = @''\r\nselect [Key], [Value] as [Count] from HangFire.AggregatedCounter\r\nwhere [Key] in @keys''", span="391-393"];
m26_300 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="keyMaps.Keys", span="400-400"];
m26_301 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="!valuesMap.ContainsKey(key)", span="402-402"];
m26_302 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="valuesMap.Add(key, 0)", span="402-402"];
m26_306 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="var value = valuesMap[keyMaps.ElementAt(i).Key]", span="408-408"];
m26_305 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: i < keyMaps.Count", span="406-406"];
m26_304 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", color=green, community=0, file="FailedJobsPage.generated.cs", label="3: var i = 0", span="406-406"];
m26_308 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", color=green, community=0, file="FailedJobsPage.generated.cs", label="5: i++", span="406-406"];
m26_309 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="return result;", span="412-412"];
m26_303 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="var result = new Dictionary<DateTime, long>()", span="405-405"];
m26_307 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="result.Add(keyMaps.ElementAt(i).Value, value)", span="409-409"];
m26_310 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388"];
m26_240 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m26_133 [cluster="Unk.Select", file="FailedJobsPage.generated.cs", label="Entry Unk.Select", span=""];
m26_365 [cluster="System.Collections.Generic.List<T>.List(int)", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m26_255 [cluster="Unk.Single", file="FailedJobsPage.generated.cs", label="Entry Unk.Single", span=""];
m26_159 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224"];
m26_160 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: var queueApi = GetQueueApi(queue)", span="226-226"];
m26_161 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="FailedJobsPage.generated.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="227-227"];
m26_162 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="FailedJobsPage.generated.cs", label="return UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds));", span="229-229"];
m26_163 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224"];
m26_206 [cluster="Unk.SingleOrDefault", file="FailedJobsPage.generated.cs", label="Entry Unk.SingleOrDefault", span=""];
m26_33 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72"];
m26_34 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", color=green, community=0, file="FailedJobsPage.generated.cs", label="0: return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="74-75"];
m26_35 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72"];
m26_209 [cluster="Unk.DeserializeJob", file="FailedJobsPage.generated.cs", label="Entry Unk.DeserializeJob", span=""];
m26_381 [file="FailedJobsPage.generated.cs", label="Hangfire.SqlServer.SqlServerMonitoringApi", span=""];
m26_382 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_383 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_386 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_387 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_388 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_389 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_390 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_391 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_395 [file="FailedJobsPage.generated.cs", label=string, span=""];
m26_396 [file="FailedJobsPage.generated.cs", label=sql, span=""];
m26_384 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_385 [file="FailedJobsPage.generated.cs", label=int, span=""];
m26_392 [file="FailedJobsPage.generated.cs", label=enqueuedJobIds, span=""];
m26_393 [file="FailedJobsPage.generated.cs", label=enqueuedJobIds, span=""];
m26_394 [file="FailedJobsPage.generated.cs", label=fetchedJobIds, span=""];
m26_398 [file="FailedJobsPage.generated.cs", label=string, span=""];
m26_397 [file="FailedJobsPage.generated.cs", label=string, span=""];
m27_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FailedState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m27_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m27_0 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m27_1 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="exception == null", span="28-28"];
m27_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="Exception = exception", span="31-31"];
m27_2 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="throw new ArgumentNullException(''exception'');", span="28-28"];
m27_3 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="FailedAt = DateTime.UtcNow", span="30-30"];
m27_5 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m27_13 [cluster="System.Exception.ToString()", file="FailedState.cs", label="Entry System.Exception.ToString()", span="0-0"];
m27_7 [cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m27_8 [cluster="HangFire.States.FailedState.SerializeData()", color=red, community=0, file="FailedState.cs", label="0: return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.ToStringTimestamp(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="44-50"];
m27_9 [cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs", label="Exit HangFire.States.FailedState.SerializeData()", span="42-42"];
m27_11 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m27_12 [cluster="System.Exception.GetType()", file="FailedState.cs", label="Entry System.Exception.GetType()", span="0-0"];
m27_14 [file="FailedState.cs", label="HangFire.States.FailedState", span=""];
m28_0 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="FailedStateFacts.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m28_1 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="FailedStateFacts.cs", label="Exit Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m29_0 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs", label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m29_1 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs", label="Queue = queue", span="6-6"];
m29_2 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs", label="Exit HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m29_3 [file="FetchedJobsPage.cs", label="HangFire.Web.Pages.FetchedJobsPage", span=""];
m31_20 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FetchedJobsWatcher.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m31_21 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="FetchedJobsWatcher.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="42-42"];
m31_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FetchedJobsWatcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m31_0 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="FetchedJobsWatcher.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m31_1 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="FetchedJobsWatcher.cs", label="Exit Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m31_22 [cluster="Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="Entry Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="71-71"];
m31_23 [cluster="Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="transaction.RemoveFromSet(''schedule'', context.JobId)", span="73-73"];
m31_24 [cluster="Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="Exit Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="71-71"];
m31_10 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="FetchedJobsWatcher.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m31_25 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="FetchedJobsWatcher.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m31_11 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="Entry Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="57-57"];
m31_12 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="var scheduledState = context.NewState as ScheduledState", span="59-59"];
m31_16 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="68-68"];
m31_13 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="scheduledState == null", span="60-60"];
m31_15 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="var timestamp = JobHelper.ToTimestamp(scheduledState.EnqueueAt)", span="67-67"];
m31_14 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Scheduled state.'',\r\n                        typeof(Handler).FullName));", span="62-64"];
m31_17 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="FetchedJobsWatcher.cs", label="Exit Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="57-57"];
m31_6 [cluster="Hangfire.States.ScheduledState.SerializeData()", file="FetchedJobsWatcher.cs", label="Entry Hangfire.States.ScheduledState.SerializeData()", span="46-46"];
m31_7 [cluster="Hangfire.States.ScheduledState.SerializeData()", file="FetchedJobsWatcher.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueueAt'', JobHelper.SerializeDateTime(EnqueueAt) },\r\n                { ''ScheduledAt'', JobHelper.SerializeDateTime(ScheduledAt) }\r\n            };", span="48-52"];
m31_8 [cluster="Hangfire.States.ScheduledState.SerializeData()", file="FetchedJobsWatcher.cs", label="Exit Hangfire.States.ScheduledState.SerializeData()", span="46-46"];
m31_19 [cluster="string.Format(string, object)", file="FetchedJobsWatcher.cs", label="Entry string.Format(string, object)", span="0-0"];
m31_18 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="FetchedJobsWatcher.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m31_2 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="FetchedJobsWatcher.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m31_3 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="FetchedJobsWatcher.cs", label="EnqueueAt = enqueueAt", span="34-34"];
m31_4 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="FetchedJobsWatcher.cs", label="ScheduledAt = DateTime.UtcNow", span="35-35"];
m31_5 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="FetchedJobsWatcher.cs", label="Exit Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m31_26 [file="FetchedJobsWatcher.cs", label="Hangfire.States.ScheduledState", span=""];
m32_53 [cluster="Unk.FromNullableStringTimestamp", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m32_0 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="12-12"];
m32_2 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", color=green, community=0, file="FetchedJobsWatcherFacts.cs", label="0: _token = new CancellationToken(true)", span="15-15"];
m32_1 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs", label="_storage = new RedisStorage(RedisUtils.GetHostAndPort(), RedisUtils.GetDb())", span="14-14"];
m32_3 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="12-12"];
m32_44 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="55-55"];
m32_50 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", color=green, community=0, file="FetchedJobsWatcherFacts.cs", label="0: Assert.NotNull(JobHelper.FromNullableStringTimestamp(\r\n                    redis.GetValueFromHash(''hangfire:job:my-job'', ''Checked'')))", span="68-69"];
m32_45 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="var redis = RedisUtils.CreateClient()", span="57-57"];
m32_49 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="watcher.Execute(_token)", span="66-66"];
m32_48 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="var watcher = CreateWatcher()", span="63-63"];
m32_46 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="60-60"];
m32_47 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="61-61"];
m32_51 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="55-55"];
m32_41 [cluster="Unk.GetAllEntriesFromHash", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m32_13 [cluster="Unk.Equal", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.Equal", span=""];
m32_36 [cluster="Unk.SetEntryInHash", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m32_32 [cluster="Unk.AddItemToSet", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m32_27 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="Assert.Equal(''my-job'', listEntry)", span="47-47"];
m32_23 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="var watcher = CreateWatcher()", span="38-38"];
m32_24 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="watcher.Execute(_token)", span="41-41"];
m32_22 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="35-36"];
m32_25 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="44-44"];
m32_19 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="var redis = RedisUtils.CreateClient()", span="30-30"];
m32_21 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="34-34"];
m32_26 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="var listEntry = redis.DequeueItemFromList(''hangfire:queue:my-queue'')", span="46-46"];
m32_20 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="33-33"];
m32_18 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="28-28"];
m32_28 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="var job = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="49-49"];
m32_29 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="Assert.False(job.ContainsKey(''Fetched''))", span="50-50"];
m32_30 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="28-28"];
m32_12 [cluster="Unk.>", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.>", span=""];
m32_43 [cluster="Unk.False", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.False", span=""];
m32_6 [cluster="HangFire.Redis.Tests.RedisUtils.GetDb()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.GetDb()", span="37-37"];
m32_39 [cluster="Unk.GetListCount", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.GetListCount", span=""];
m32_34 [cluster="System.DateTime.AddDays(double)", file="FetchedJobsWatcherFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m32_38 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", span="47-47"];
m32_17 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", span="31-31"];
m32_54 [cluster="Unk.NotNull", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.NotNull", span=""];
m32_55 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="74-74"];
m32_60 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="var watcher = CreateWatcher()", span="84-84"];
m32_61 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="watcher.Execute(_token)", span="87-87"];
m32_59 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="81-82"];
m32_62 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="90-90"];
m32_56 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="var redis = RedisUtils.CreateClient()", span="76-76"];
m32_58 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="80-80"];
m32_63 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:queue:my-queue''))", span="91-91"];
m32_57 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="79-79"];
m32_64 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="var job = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="93-93"];
m32_65 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Assert.False(job.ContainsKey(''Checked''))", span="94-94"];
m32_66 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="74-74"];
m32_40 [cluster="Unk.DequeueItemFromList", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.DequeueItemFromList", span=""];
m32_33 [cluster="Unk.AddItemToList", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.AddItemToList", span=""];
m32_37 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="121-121"];
m32_77 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs", label="return new FetchedJobsWatcher(_storage);", span="123-123"];
m32_78 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="121-121"];
m32_5 [cluster="HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", span="20-20"];
m32_14 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="22-22"];
m32_15 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="new FetchedJobsWatcher(null)", span="22-22"];
m32_16 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="22-22"];
m32_35 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m32_31 [cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15"];
m32_7 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="FetchedJobsWatcherFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m32_52 [cluster="Unk.GetValueFromHash", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m32_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="42-42"];
m32_67 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="99-99"];
m32_72 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", color=green, community=0, file="FetchedJobsWatcherFacts.cs", label="0: redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="108-109"];
m32_68 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="var redis = RedisUtils.CreateClient()", span="101-101"];
m32_71 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="106-107"];
m32_73 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="var watcher = CreateWatcher()", span="111-111"];
m32_74 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="watcher.Execute(_token)", span="114-114"];
m32_69 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="104-104"];
m32_70 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="105-105"];
m32_75 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="117-117"];
m32_76 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="99-99"];
m32_8 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="19-19"];
m32_10 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="24-24"];
m32_9 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(null))", span="21-22"];
m32_11 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="19-19"];
m32_42 [cluster="Unk.ContainsKey", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.ContainsKey", span=""];
m32_79 [file="FetchedJobsWatcherFacts.cs", label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", span=""];
m33_9 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="FontsHandler.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m33_0 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="FontsHandler.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12"];
m33_1 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", color=red, community=0, file="FontsHandler.cs", label="0: JobIdValue = ''job-id''", span="14-14"];
m33_2 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", color=red, community=0, file="FontsHandler.cs", label="0: JobValue = Job.FromExpression(() => Console.WriteLine())", span="15-15"];
m33_3 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", color=red, community=0, file="FontsHandler.cs", label="0: CreatedAtValue = DateTime.UtcNow", span="16-16"];
m33_4 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", color=red, community=0, file="FontsHandler.cs", label="0: ConnectionValue = new Mock<IStorageConnection>()", span="17-17"];
m33_5 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", color=red, community=0, file="FontsHandler.cs", label="0: _context = new Lazy<StateContext>(\r\n                () => new StateContext(JobIdValue, JobValue, CreatedAtValue, ConnectionValue.Object, StateMachineValue.Object))", span="19-20"];
m33_6 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="FontsHandler.cs", label="Exit Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12"];
m33_17 [cluster="StateContext.cstr", file="FontsHandler.cs", label="Entry StateContext.cstr", span=""];
m33_8 [cluster="Mock<IStorageConnection>.cstr", file="FontsHandler.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m33_13 [cluster="System.Console.WriteLine()", file="FontsHandler.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m33_14 [cluster="lambda expression", file="FontsHandler.cs", label="Entry lambda expression", span="20-20"];
m33_10 [cluster="lambda expression", file="FontsHandler.cs", label="Entry lambda expression", span="15-15"];
m33_11 [cluster="lambda expression", color=red, community=0, file="FontsHandler.cs", label="0: Console.WriteLine()", span="15-15"];
m33_12 [cluster="lambda expression", file="FontsHandler.cs", label="Exit lambda expression", span="15-15"];
m33_15 [cluster="lambda expression", color=red, community=0, file="FontsHandler.cs", label="0: new StateContext(JobIdValue, JobValue, CreatedAtValue, ConnectionValue.Object, StateMachineValue.Object)", span="20-20"];
m33_16 [cluster="lambda expression", file="FontsHandler.cs", label="Exit lambda expression", span="20-20"];
m33_7 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FontsHandler.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m33_18 [file="FontsHandler.cs", label="Hangfire.Core.Tests.StateContextMock", span=""];
m34_6 [cluster="HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", file="GenericHandler.cs", label="Entry HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", span="37-37"];
m34_7 [cluster="HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", color=red, community=0, file="GenericHandler.cs", label="0: ProcessRequest()", span="39-39"];
m34_8 [cluster="HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", file="GenericHandler.cs", label="Exit HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", span="37-37"];
m34_3 [cluster="HttpContextWrapper.cstr", file="GenericHandler.cs", label="Entry HttpContextWrapper.cstr", span=""];
m34_0 [cluster="HangFire.Web.GenericHandler.GenericHandler()", file="GenericHandler.cs", label="Entry HangFire.Web.GenericHandler.GenericHandler()", span="22-22"];
m34_1 [cluster="HangFire.Web.GenericHandler.GenericHandler()", color=red, community=0, file="GenericHandler.cs", label="0: Context = new HttpContextWrapper(HttpContext.Current)", span="24-24"];
m34_2 [cluster="HangFire.Web.GenericHandler.GenericHandler()", file="GenericHandler.cs", label="Exit HangFire.Web.GenericHandler.GenericHandler()", span="22-22"];
m34_4 [cluster="HangFire.Web.GenericHandler.ProcessRequest()", file="GenericHandler.cs", label="Entry HangFire.Web.GenericHandler.ProcessRequest()", span="35-35"];
m34_5 [cluster="HangFire.Web.GenericHandler.ProcessRequest()", file="GenericHandler.cs", label="Exit HangFire.Web.GenericHandler.ProcessRequest()", span="35-35"];
m34_9 [file="GenericHandler.cs", label="HangFire.Web.GenericHandler", span=""];
m36_0 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24"];
m36_1 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24"];
m36_22 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m36_23 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m36_26 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45"];
m36_27 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45"];
m36_2 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25"];
m36_3 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25"];
m36_18 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39"];
m36_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39"];
m36_28 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m36_29 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m36_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30"];
m36_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30"];
m36_12 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34"];
m36_13 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34"];
m36_30 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48"];
m36_31 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48"];
m36_10 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m36_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m36_20 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40"];
m36_21 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40"];
m36_14 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m36_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m36_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26"];
m36_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26"];
m36_6 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27"];
m36_7 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27"];
m36_16 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36"];
m36_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36"];
m36_24 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m36_25 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="HangFireConfig.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m38_195 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HangFirePageFactory.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m38_138 [cluster="HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", span="49-49"];
m38_31 [cluster="Unk.RegisterPathHandlerFactory", file="HangFirePageFactory.cs", label="Entry Unk.RegisterPathHandlerFactory", span=""];
m38_196 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", span="7-7"];
m38_223 [cluster="string.Format(string, object, object)", file="HangFirePageFactory.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m38_51 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m38_47 [cluster="HangFire.Web.Pages.QueuesPage.QueuesPage()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.QueuesPage.QueuesPage()", span="53-53"];
m38_0 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="35-35"];
m38_1 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RazorPage.ExceptionHandler = ex => new ErrorPage(ex)", span="37-37"];
m38_2 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterDefaultPathHandlerFactory(() => new DashboardPage())", span="39-39"];
m38_3 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(\r\n                ''/job/(?<JobId>.+)'',\r\n                x => new JobDetailsPage(x.Groups[''JobId''].Value))", span="41-43"];
m38_4 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/queues'', x => new QueuesPage())", span="45-45"];
m38_5 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(\r\n                ''/queues/fetched/(?<Queue>.+)'',\r\n                x => new FetchedJobsPage(x.Groups[''Queue''].Value))", span="46-48"];
m38_6 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(\r\n                ''/queues/(?<Queue>.+)'',\r\n                x => new EnqueuedJobsPage(x.Groups[''Queue''].Value))", span="49-51"];
m38_7 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/enqueued/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId)))", span="53-54"];
m38_8 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/enqueued/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId)))", span="56-57"];
m38_9 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/processing'', x => new ProcessingJobsPage())", span="59-59"];
m38_10 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/processing/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ProcessingState.StateName)))", span="60-61"];
m38_11 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/processing/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName)))", span="63-64"];
m38_12 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/scheduled'', x => new ScheduledJobsPage())", span="66-66"];
m38_13 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/scheduled/enqueue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName)))", span="68-69"];
m38_14 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/scheduled/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName)))", span="71-72"];
m38_15 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/servers'', x => new ServersPage())", span="74-74"];
m38_16 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/succeeded'', x => new SucceededJobs())", span="75-75"];
m38_17 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/succeeded/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName)))", span="76-77"];
m38_18 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/failed'', x => new FailedJobsPage())", span="79-79"];
m38_19 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/failed/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, FailedState.StateName)))", span="81-82"];
m38_20 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/failed/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName)))", span="84-85"];
m38_21 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/deleted'', x => new DeletedJobsPage())", span="87-87"];
m38_22 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/deleted/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName)))", span="89-90"];
m38_23 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(\r\n                ''/actions/requeue/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => BackgroundJob.Requeue(x.Groups[''JobId''].Value)))", span="92-94"];
m38_24 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(\r\n                ''/actions/delete/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => BackgroundJob.Delete(x.Groups[''JobId''].Value)))", span="96-98"];
m38_25 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/js/scripts.js'',  x => new JavaScriptHandler())", span="100-100"];
m38_26 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(''/css/styles.css'', x => new StyleSheetHandler())", span="101-101"];
m38_27 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(\r\n                ''/fonts/(?<File>.+)'',\r\n                x => new FontsHandler(x.Groups[''File''].Value))", span="103-105"];
m38_28 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=2, file="HangFirePageFactory.cs", label="0: RegisterPathHandlerFactory(\r\n                ''/stats'',\r\n                x => new JsonStats())", span="107-109"];
m38_29 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFirePageFactory.cs", label="Exit HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="35-35"];
m38_43 [cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6"];
m38_112 [cluster="HangFire.Web.Pages.SucceededJobs.SucceededJobs()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.SucceededJobs.SucceededJobs()", span="54-54"];
m38_165 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29"];
m38_217 [cluster="string.EndsWith(string, System.StringComparison)", file="HangFirePageFactory.cs", label="Entry string.EndsWith(string, System.StringComparison)", span="0-0"];
m38_74 [cluster="HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", span="43-43"];
m38_179 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="119-119"];
m38_180 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", color=red, community=0, file="HangFirePageFactory.cs", label="0: _defaultHandlerFactory = handlerFactory", span="121-121"];
m38_181 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="HangFirePageFactory.cs", label="Exit HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="119-119"];
m38_219 [cluster="System.Func<T, TResult>.Invoke(T)", file="HangFirePageFactory.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m38_220 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="179-179"];
m38_221 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: return String.Format(''{0}.Content.{1}'', typeof (HangFirePageFactory).Namespace, contentFolder);", span="181-181"];
m38_222 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="HangFirePageFactory.cs", label="Exit HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="179-179"];
m38_200 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.HangFirePageFactory.FindHandler(string)", span="149-149"];
m38_201 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: resource.Length == 0 || resource.Equals(''/'', StringComparison.OrdinalIgnoreCase)", span="151-151"];
m38_209 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=2, file="HangFirePageFactory.cs", label="0: var match = Regex.Match(\r\n                    resource,\r\n                    pattern, \r\n                    RegexOptions.CultureInvariant | RegexOptions.IgnoreCase | RegexOptions.Singleline)", span="165-168"];
m38_202 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: return _defaultHandlerFactory();", span="153-153"];
m38_203 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: PathHandlerFactories", span="156-156"];
m38_204 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="5: var pattern = pathHandlerFactory.Item1", span="158-158"];
m38_212 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: return null;", span="176-176"];
m38_211 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: return pathHandlerFactory.Item2(match);", span="172-172"];
m38_205 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: !pattern.StartsWith(''^'', StringComparison.OrdinalIgnoreCase)", span="160-160"];
m38_206 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="5: pattern = ''^'' + pattern", span="161-161"];
m38_207 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: !pattern.EndsWith(''$'', StringComparison.OrdinalIgnoreCase)", span="162-162"];
m38_208 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="5: pattern += ''$''", span="163-163"];
m38_210 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", color=red, community=0, file="HangFirePageFactory.cs", label="2: match.Success", span="170-170"];
m38_213 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFirePageFactory.cs", label="Exit HangFire.Web.HangFirePageFactory.FindHandler(string)", span="149-149"];
m38_92 [cluster="HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", span="43-43"];
m38_63 [cluster="HangFire.BackgroundJob.Delete(string)", file="HangFirePageFactory.cs", label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164"];
m38_169 [cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.FontsHandler.FontsHandler(string)", span="22-22"];
m38_39 [cluster="HangFire.Web.Pages.DashboardPage.DashboardPage()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.DashboardPage.DashboardPage()", span="47-47"];
m38_197 [cluster="Unk.Add", file="HangFirePageFactory.cs", label="Entry Unk.Add", span=""];
m38_148 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26"];
m38_216 [cluster="string.StartsWith(string, System.StringComparison)", file="HangFirePageFactory.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m38_215 [cluster="System.Func<TResult>.Invoke()", file="HangFirePageFactory.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m38_177 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="HangFirePageFactory.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m38_59 [cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26"];
m38_70 [cluster="HangFire.BackgroundJob.Requeue(string)", file="HangFirePageFactory.cs", label="Entry HangFire.BackgroundJob.Requeue(string)", span="197-197"];
m38_173 [cluster="HangFire.Web.JsonStats.JsonStats()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.JsonStats.JsonStats()", span="22-22"];
m38_218 [cluster="System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", file="HangFirePageFactory.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m38_122 [cluster="HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", span="48-48"];
m38_155 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="98-98"];
m38_33 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new ErrorPage(ex)", span="37-37"];
m38_36 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="39-39"];
m38_40 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="43-43"];
m38_44 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="45-45"];
m38_48 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="48-48"];
m38_52 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="51-51"];
m38_56 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="53-54"];
m38_64 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="56-57"];
m38_71 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="59-59"];
m38_75 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="60-61"];
m38_82 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="63-64"];
m38_89 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="66-66"];
m38_93 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="68-69"];
m38_99 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="71-72"];
m38_105 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="74-74"];
m38_109 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="75-75"];
m38_113 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="76-77"];
m38_119 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="79-79"];
m38_123 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="81-82"];
m38_129 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="84-85"];
m38_135 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="87-87"];
m38_139 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="89-90"];
m38_145 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="94-94"];
m38_152 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="98-98"];
m38_158 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="100-100"];
m38_162 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="101-101"];
m38_166 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="105-105"];
m38_170 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="109-109"];
m38_32 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="37-37"];
m38_34 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="37-37"];
m38_37 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new DashboardPage()", span="39-39"];
m38_38 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="39-39"];
m38_41 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new JobDetailsPage(x.Groups[''JobId''].Value)", span="43-43"];
m38_42 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="43-43"];
m38_45 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new QueuesPage()", span="45-45"];
m38_46 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="45-45"];
m38_49 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new FetchedJobsPage(x.Groups[''Queue''].Value)", span="48-48"];
m38_50 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="48-48"];
m38_53 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new EnqueuedJobsPage(x.Groups[''Queue''].Value)", span="51-51"];
m38_54 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="51-51"];
m38_57 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId))", span="53-54"];
m38_58 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="53-54"];
m38_61 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Delete(jobId)", span="54-54"];
m38_60 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="54-54"];
m38_62 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="54-54"];
m38_65 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId))", span="56-57"];
m38_66 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="56-57"];
m38_68 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Requeue(jobId)", span="57-57"];
m38_67 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="57-57"];
m38_69 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="57-57"];
m38_72 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new ProcessingJobsPage()", span="59-59"];
m38_73 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="59-59"];
m38_76 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ProcessingState.StateName))", span="60-61"];
m38_77 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="60-61"];
m38_79 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Delete(jobId, ProcessingState.StateName)", span="61-61"];
m38_78 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="61-61"];
m38_80 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="61-61"];
m38_83 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName))", span="63-64"];
m38_84 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="63-64"];
m38_86 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Requeue(jobId, ProcessingState.StateName)", span="64-64"];
m38_85 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="64-64"];
m38_87 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="64-64"];
m38_90 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new ScheduledJobsPage()", span="66-66"];
m38_91 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="66-66"];
m38_94 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName))", span="68-69"];
m38_95 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="68-69"];
m38_97 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Requeue(jobId, ScheduledState.StateName)", span="69-69"];
m38_96 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="69-69"];
m38_98 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="69-69"];
m38_100 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName))", span="71-72"];
m38_101 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="71-72"];
m38_103 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Delete(jobId, ScheduledState.StateName)", span="72-72"];
m38_102 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="72-72"];
m38_104 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="72-72"];
m38_106 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new ServersPage()", span="74-74"];
m38_107 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="74-74"];
m38_110 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new SucceededJobs()", span="75-75"];
m38_111 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="75-75"];
m38_114 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName))", span="76-77"];
m38_115 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="76-77"];
m38_117 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Requeue(jobId, SucceededState.StateName)", span="77-77"];
m38_116 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="77-77"];
m38_118 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="77-77"];
m38_120 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new FailedJobsPage()", span="79-79"];
m38_121 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="79-79"];
m38_124 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, FailedState.StateName))", span="81-82"];
m38_125 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="81-82"];
m38_127 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Requeue(jobId, FailedState.StateName)", span="82-82"];
m38_126 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="82-82"];
m38_128 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="82-82"];
m38_130 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName))", span="84-85"];
m38_131 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="84-85"];
m38_133 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Delete(jobId, FailedState.StateName)", span="85-85"];
m38_132 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="85-85"];
m38_134 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="85-85"];
m38_136 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new DeletedJobsPage()", span="87-87"];
m38_137 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="87-87"];
m38_140 [cluster="lambda expression", color=red, community=2, file="HangFirePageFactory.cs", label="0: new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName))", span="89-90"];
m38_141 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="89-90"];
m38_143 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Requeue(jobId, DeletedState.StateName)", span="90-90"];
m38_142 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="90-90"];
m38_144 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="90-90"];
m38_146 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new CommandHandler(() => BackgroundJob.Requeue(x.Groups[''JobId''].Value))", span="94-94"];
m38_150 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Requeue(x.Groups[''JobId''].Value)", span="94-94"];
m38_147 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="94-94"];
m38_149 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Entry lambda expression", span="94-94"];
m38_151 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="94-94"];
m38_153 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new CommandHandler(() => BackgroundJob.Delete(x.Groups[''JobId''].Value))", span="98-98"];
m38_156 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: BackgroundJob.Delete(x.Groups[''JobId''].Value)", span="98-98"];
m38_154 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="98-98"];
m38_157 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="98-98"];
m38_159 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new JavaScriptHandler()", span="100-100"];
m38_160 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="100-100"];
m38_163 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new StyleSheetHandler()", span="101-101"];
m38_164 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="101-101"];
m38_167 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new FontsHandler(x.Groups[''File''].Value)", span="105-105"];
m38_168 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="105-105"];
m38_171 [cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs", label="0: new JsonStats()", span="109-109"];
m38_172 [cluster="lambda expression", file="HangFirePageFactory.cs", label="Exit lambda expression", span="109-109"];
m38_161 [cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33"];
m38_214 [cluster="string.Equals(string, System.StringComparison)", file="HangFirePageFactory.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m38_55 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m38_182 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="124-124"];
m38_183 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: context == null", span="126-126"];
m38_185 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: !HangFireConfiguration.EnableRemoteMonitorAccess && !context.Request.IsLocal", span="128-128"];
m38_186 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: return HttpStatusHandler.Process(context, HttpStatusCode.Unauthorized);", span="130-130"];
m38_187 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: context.Items.Add(''GenerationStartedAt'', DateTime.UtcNow)", span="133-133"];
m38_188 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: var request = context.Request", span="135-135"];
m38_192 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: return HttpStatusHandler.Process(context, HttpStatusCode.NotFound);", span="143-143"];
m38_184 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: throw new ArgumentNullException(''context'');", span="126-126"];
m38_189 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=2, file="HangFirePageFactory.cs", label="0: var resource = request.PathInfo.Length == 0\r\n                ? String.Empty\r\n                : request.PathInfo.ToLowerInvariant()", span="136-138"];
m38_190 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: var handler = FindHandler(resource)", span="140-140"];
m38_191 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: handler == null", span="141-141"];
m38_193 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: return handler;", span="146-146"];
m38_194 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFirePageFactory.cs", label="Exit HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="124-124"];
m38_108 [cluster="HangFire.Web.Pages.ServersPage.ServersPage()", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.ServersPage.ServersPage()", span="53-53"];
m38_178 [cluster="System.Collections.Generic.List<T>.Add(T)", file="HangFirePageFactory.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m38_198 [cluster="Unk.ToLowerInvariant", file="HangFirePageFactory.cs", label="Entry Unk.ToLowerInvariant", span=""];
m38_35 [cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6"];
m38_81 [cluster="HangFire.BackgroundJob.Delete(string, string)", file="HangFirePageFactory.cs", label="Entry HangFire.BackgroundJob.Delete(string, string)", span="182-182"];
m38_224 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="184-184"];
m38_225 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", color=red, community=0, file="HangFirePageFactory.cs", label="0: return String.Format(''{0}.{1}'', GetContentFolderNamespace(contentFolder), resourceName);", span="186-186"];
m38_226 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="HangFirePageFactory.cs", label="Exit HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="184-184"];
m38_199 [cluster="Unk.FindHandler", file="HangFirePageFactory.cs", label="Entry Unk.FindHandler", span=""];
m38_174 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="112-112"];
m38_175 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", color=red, community=2, file="HangFirePageFactory.cs", label="0: PathHandlerFactories.Add(new Tuple<string, Func<Match, IHttpHandler>>(\r\n                pathPattern, handlerFactory))", span="115-116"];
m38_176 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="HangFirePageFactory.cs", label="Exit HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="112-112"];
m38_30 [cluster="Unk.RegisterDefaultPathHandlerFactory", file="HangFirePageFactory.cs", label="Entry Unk.RegisterDefaultPathHandlerFactory", span=""];
m38_227 [cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="HangFirePageFactory.cs", label="Entry HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="189-189"];
m38_228 [cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="HangFirePageFactory.cs", label="Exit HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="189-189"];
m38_88 [cluster="HangFire.BackgroundJob.Requeue(string, string)", file="HangFirePageFactory.cs", label="Entry HangFire.BackgroundJob.Requeue(string, string)", span="215-215"];
m38_229 [file="HangFirePageFactory.cs", label="System.Text.RegularExpressions.Match", span=""];
m38_230 [file="HangFirePageFactory.cs", label="System.Text.RegularExpressions.Match", span=""];
m38_231 [file="HangFirePageFactory.cs", label="HangFire.Web.HangFirePageFactory", span=""];
m39_57 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115"];
m39_60 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="HtmlHelper.cs", label="return new HtmlString(writer.ToString());", span="120-120"];
m39_58 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="HtmlHelper.cs", label="var writer = new StringWriter()", span="117-117"];
m39_59 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="HtmlHelper.cs", label="MarkupStackTrace(stackTrace, writer)", span="119-119"];
m39_61 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115"];
m39_117 [cluster="string.Trim()", file="HtmlHelper.cs", label="Entry string.Trim()", span="0-0"];
m39_114 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", span="228-228"];
m39_120 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(text != null)", span="230-230"];
m39_121 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(group != null)", span="231-231"];
m39_122 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(writer != null)", span="232-232"];
m39_123 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="HtmlHelper.cs", label="return group.Success\r\n                 ? StackFrameSpan(text, anchor, klass, group.Value, group.Index, group.Length, writer)\r\n                 : anchor;", span="234-236"];
m39_124 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", span="228-228"];
m39_13 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m39_6 [cluster="Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Dispose()", file="HtmlHelper.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Dispose()", span="30-30"];
m39_63 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", span="145-145"];
m39_69 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="HtmlEncode(text.Substring(anchor, match.Index - anchor), writer)", span="154-154"];
m39_70 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="MarkupStackFrame(text, match, writer)", span="155-155"];
m39_68 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="_reStackTrace.Matches(text)", span="152-152"];
m39_67 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="int anchor = 0", span="150-150"];
m39_71 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = match.Index + match.Length", span="156-156"];
m39_72 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="HtmlEncode(text.Substring(anchor), writer)", span="159-159"];
m39_65 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(text != null)", span="147-147"];
m39_66 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(writer != null)", span="148-148"];
m39_73 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", span="145-145"];
m39_37 [cluster="System.Text.StringBuilder.Append(string)", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m39_76 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", span="260-260"];
m39_139 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(writer != null)", span="262-262"];
m39_140 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="HttpUtility.HtmlEncode(text, writer)", span="263-263"];
m39_141 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", span="260-260"];
m39_142 [cluster="Unk.HtmlEncode", file="HtmlHelper.cs", label="Entry Unk.HtmlEncode", span=""];
m39_46 [cluster="Unk.Join", file="HtmlHelper.cs", label="Entry Unk.Join", span=""];
m39_12 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", color=green, community=0, file="HtmlHelper.cs", label="0: return new HtmlString(Guid.TryParse(jobId, out guid)\r\n                ? (shorten ? jobId.Substring(0, 8) : jobId)\r\n                : ''#'' + jobId);", span="48-50"];
m39_4 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m39_5 [cluster="HtmlString.cstr", file="HtmlHelper.cs", label="Entry HtmlString.cstr", span=""];
m39_36 [cluster="System.Text.StringBuilder.StringBuilder()", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m39_119 [cluster="System.IO.TextWriter.Write(char)", file="HtmlHelper.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m39_8 [cluster="HangFire.Web.HtmlHelper.Raw(string)", color=green, community=0, file="HtmlHelper.cs", label="0: return new HtmlString(value);", span="42-42"];
m39_9 [cluster="HangFire.Web.HtmlHelper.Raw(string)", color=red, community=0, file="HtmlHelper.cs", label="0: Exit HangFire.Web.HtmlHelper.Raw(string)", span="40-40"];
m39_10 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m39_11 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="HtmlHelper.cs", label="Guid guid", span="47-47"];
m39_41 [cluster="System.Text.StringBuilder.ToString()", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m39_125 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", span="239-239"];
m39_128 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="HtmlHelper.cs", label="HtmlEncode(text.Substring(anchor, index - anchor), writer)", span="244-244"];
m39_127 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(writer != null)", span="242-242"];
m39_129 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="HtmlHelper.cs", label="Span(writer, klass, value)", span="245-245"];
m39_126 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(text != null)", span="241-241"];
m39_130 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="HtmlHelper.cs", label="return index + length;", span="246-246"];
m39_131 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", span="239-239"];
m39_74 [cluster="System.Diagnostics.Debug.Assert(bool)", file="HtmlHelper.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m39_39 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m39_15 [cluster="Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Commit()", file="HtmlHelper.cs", label="_transaction.Commit()", span="43-43"];
m39_16 [cluster="Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Commit()", file="HtmlHelper.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Commit()", span="41-41"];
m39_30 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="HtmlHelper.cs", label="0: builder.AppendFormat(''{0}s '', duration.Value.Seconds)", span="82-82"];
m39_22 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="Hangfire.SqlServer.Msmq.MsmqInternalTransaction", span=""];
m39_19 [cluster="Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Abort()", color=red, community=0, file="HtmlHelper.cs", label="0: _transaction.Abort()", span="48-48"];
m39_29 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="HtmlHelper.cs", label="2: duration.Value.Seconds > 0", span="80-80"];
m39_31 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="HtmlHelper.cs", label="0: builder.Length <= 1", span="85-85"];
m39_32 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="HtmlHelper.cs", label="0: builder.Append('' <1s '')", span="87-87"];
m39_33 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="HtmlHelper.cs", label="0: builder.Remove(builder.Length - 1, 1)", span="90-90"];
m39_34 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="HtmlHelper.cs", label="0: return builder.ToString();", span="92-92"];
m39_28 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="builder.AppendFormat(''{0}m '', duration.Value.Minutes)", span="77-77"];
m39_27 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.Minutes > 0", span="75-75"];
m39_20 [cluster="Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Abort()", file="HtmlHelper.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Abort()", span="46-46"];
m39_21 [cluster="Unk.Abort", file="HtmlHelper.cs", label="Entry Unk.Abort", span=""];
m39_23 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.Days > 0", span="65-65"];
m39_24 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="builder.AppendFormat(''{0}d '', duration.Value.Days)", span="67-67"];
m39_25 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="duration.Value.Hours > 0", span="70-70"];
m39_26 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="builder.AppendFormat(''{0}h '', duration.Value.Hours)", span="72-72"];
m39_17 [cluster="Unk.Commit", file="HtmlHelper.cs", label="Entry Unk.Commit", span=""];
m39_18 [cluster="Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Abort()", file="HtmlHelper.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Abort()", span="46-46"];
m39_35 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m39_75 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="HtmlHelper.cs", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m39_50 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="100-100"];
m39_52 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", color=green, community=0, file="HtmlHelper.cs", label="0: queue != null", span="103-103"];
m39_51 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs", label="string label", span="102-102"];
m39_53 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs", label="label = ''<span class=\''label label-queue label-primary\''>'' + queue + ''</span>''", span="105-105"];
m39_54 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs", label="label = ''<span class=\''label label-queue label-danger\''><i>Unknown</i></span>''", span="109-109"];
m39_55 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs", label="return new HtmlString(label);", span="112-112"];
m39_56 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.QueueLabel(string)", span="100-100"];
m39_14 [cluster="Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Commit()", file="HtmlHelper.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqInternalTransaction.Commit()", span="41-41"];
m39_7 [cluster="Unk.Dispose", file="HtmlHelper.cs", label="Entry Unk.Dispose", span=""];
m39_42 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="95-95"];
m39_43 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="HtmlHelper.cs", label="0: return @String.Join('', '', properties.Select(x => String.Format(''{0}: \''{1}\'''', x.Key, x.Value)));", span="97-97"];
m39_44 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="95-95"];
m39_38 [cluster="System.TimeSpan.Duration()", file="HtmlHelper.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m39_47 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="97-97"];
m39_48 [cluster="lambda expression", color=green, community=0, file="HtmlHelper.cs", label="0: String.Format(''{0}: \''{1}\'''', x.Key, x.Value)", span="97-97"];
m39_49 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="97-97"];
m39_64 [cluster="System.IO.StringWriter.ToString()", file="HtmlHelper.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m39_45 [cluster="Unk.Select", file="HtmlHelper.cs", label="Entry Unk.Select", span=""];
m39_115 [cluster="string.Split(params char[])", file="HtmlHelper.cs", label="Entry string.Split(params char[])", span="0-0"];
m39_62 [cluster="System.IO.StringWriter.StringWriter()", file="HtmlHelper.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m39_116 [cluster="string.LastIndexOf(char)", file="HtmlHelper.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m39_77 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", span="162-162"];
m39_82 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", color=green, community=0, file="HtmlHelper.cs", label="0: int anchor = match.Index", span="168-168"];
m39_81 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(writer != null)", span="166-166"];
m39_83 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="GroupCollection groups = match.Groups", span="169-169"];
m39_85 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="HtmlEncode(text.Substring(anchor, type.Index - anchor), writer)", span="176-176"];
m39_91 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="HtmlEncode(text.Substring(anchor, parameters.Index - anchor), writer)", span="187-187"];
m39_111 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="HtmlEncode(text.Substring(anchor, end - anchor), writer)", span="225-225"];
m39_100 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="string argType = parameter.Substring(0, spaceIndex).Trim()", span="201-201"];
m39_79 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(text != null)", span="164-164"];
m39_80 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(match != null)", span="165-165"];
m39_87 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write(''<span class='st-frame'>'')", span="178-178"];
m39_88 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = StackFrameSpan(text, anchor, ''st-type'', type, writer)", span="179-179"];
m39_89 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = StackFrameSpan(text, anchor, ''st-method'', groups[''method''], writer)", span="180-180"];
m39_92 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write(''<span class='st-params'>('')", span="188-188"];
m39_97 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Span(writer, ''st-param'', parameter.Trim())", span="195-195"];
m39_99 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write('', '')", span="200-200"];
m39_101 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Span(writer, ''st-param-type'', argType)", span="202-202"];
m39_102 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write(' ')", span="203-203"];
m39_104 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Span(writer, ''st-param-name'', argName)", span="205-205"];
m39_105 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write('')</span>'')", span="208-208"];
m39_107 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = StackFrameSpan(text, anchor, ''st-file'', groups[''file''], writer)", span="215-215"];
m39_108 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = StackFrameSpan(text, anchor, ''st-line'', groups[''line''], writer)", span="216-216"];
m39_109 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write(''</span>'')", span="218-218"];
m39_110 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="int end = match.Index + match.Length", span="224-224"];
m39_84 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Group type = groups[''type'']", span="175-175"];
m39_90 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Group parameters = groups[''params'']", span="186-186"];
m39_86 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = type.Index", span="177-177"];
m39_94 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="parameters.Captures[0].Value.Split(',')", span="190-190"];
m39_98 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="position++ > 0", span="199-199"];
m39_95 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="int spaceIndex = parameter.LastIndexOf(' ')", span="192-192"];
m39_103 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="string argName = parameter.Substring(spaceIndex + 1).Trim()", span="204-204"];
m39_93 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="int position = 0", span="189-189"];
m39_96 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="spaceIndex <= 0", span="193-193"];
m39_106 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = parameters.Index + parameters.Length", span="209-209"];
m39_112 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", span="162-162"];
m39_0 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m39_1 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="HtmlHelper.cs", label="job == null", span="32-32"];
m39_2 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", color=green, community=0, file="HtmlHelper.cs", label="4: return new HtmlString(''<em>Can not find the target method.</em>'');", span="34-34"];
m39_3 [cluster="MessageQueueTransaction.cstr", color=green, community=0, file="HtmlHelper.cs", label="4: Entry MessageQueueTransaction.cstr", span=""];
m39_40 [cluster="System.Text.StringBuilder.Remove(int, int)", file="HtmlHelper.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m39_118 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="249-249"];
m39_136 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="HtmlEncode(value, writer)", span="256-256"];
m39_132 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="Debug.Assert(writer != null)", span="251-251"];
m39_133 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="writer.Write(''<span class=''')", span="253-253"];
m39_134 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="writer.Write(klass)", span="254-254"];
m39_135 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="writer.Write('''>'')", span="255-255"];
m39_137 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="writer.Write(''</span>'')", span="257-257"];
m39_138 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="249-249"];
m39_113 [cluster="System.IO.TextWriter.Write(string)", file="HtmlHelper.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m39_78 [cluster="string.Substring(int)", file="HtmlHelper.cs", label="Entry string.Substring(int)", span="0-0"];
m40_8 [cluster="Unk.End", file="HttpStatusHandler.cs", label="Entry Unk.End", span=""];
m40_7 [cluster="Unk.Write", file="HttpStatusHandler.cs", label="Entry Unk.Write", span=""];
m40_0 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="HttpStatusHandler.cs", label="Entry HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", span="7-7"];
m40_1 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs", label="2: var response = context.Response", span="9-9"];
m40_2 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs", label="0: response.StatusCode = (int) statusCode", span="11-11"];
m40_3 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs", label="0: response.Write(response.Status)", span="12-12"];
m40_4 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs", label="0: response.End()", span="14-14"];
m40_5 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs", label="0: return null;", span="15-15"];
m40_6 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="HttpStatusHandler.cs", label="Exit HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", span="7-7"];
m42_0 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="IBackgroundJobClient.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42"];
m42_1 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="IBackgroundJobClient.cs", label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42"];
m42_2 [cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="IBackgroundJobClient.cs", label="Entry HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55"];
m42_3 [cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="IBackgroundJobClient.cs", label="Exit HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55"];
m45_25 [cluster="Unk.OnScenarioStart", file="IMonitoringApi.cs", label="Entry Unk.OnScenarioStart", span=""];
m45_29 [cluster="Unk.CollectScenarioErrors", file="IMonitoringApi.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m45_21 [cluster="Unk.OnScenarioEnd", file="IMonitoringApi.cs", label="Entry Unk.OnScenarioEnd", span=""];
m45_0 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m45_1 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IMonitoringApi.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m45_2 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IMonitoringApi.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''SchedulePoller'', ''\r\n  As an Administrator (or a Developer), I want the scheduled \r\n  jobs to added '' +\r\n                    ''to their actual queues when their time has come.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35"];
m45_3 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IMonitoringApi.cs", label="testRunner.OnFeatureStart(featureInfo)", span="36-36"];
m45_4 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m45_45 [cluster="Unk.And", file="IMonitoringApi.cs", label="Entry Unk.And", span=""];
m45_46 [cluster="Unk.But", file="IMonitoringApi.cs", label="Entry Unk.But", span=""];
m45_5 [cluster="Unk.GetTestRunner", file="IMonitoringApi.cs", label="Entry Unk.GetTestRunner", span=""];
m45_14 [cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", span="47-47"];
m45_15 [cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="IMonitoringApi.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''SchedulePoller''))", span="49-50"];
m45_16 [cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="IMonitoringApi.cs", label="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(null)", span="52-52"];
m45_17 [cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", span="47-47"];
m45_26 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", span="67-67"];
m45_27 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", file="IMonitoringApi.cs", label="testRunner.CollectScenarioErrors()", span="69-69"];
m45_28 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", span="67-67"];
m45_18 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", span="57-57"];
m45_19 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", file="IMonitoringApi.cs", label="testRunner.OnScenarioEnd()", span="59-59"];
m45_20 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", span="57-57"];
m45_13 [cluster="Unk.OnFeatureEnd", file="IMonitoringApi.cs", label="Entry Unk.OnFeatureEnd", span=""];
m45_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="IMonitoringApi.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m45_43 [cluster="Unk.When", file="IMonitoringApi.cs", label="Entry Unk.When", span=""];
m45_58 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", span="126-126"];
m45_59 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller should enqueue only jobs in the Scheduled state'', ((string[])(null)))", span="128-128"];
m45_60 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="this.ScenarioSetup(scenarioInfo)", span="130-130"];
m45_61 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="132-132"];
m45_62 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="134-134"];
m45_63 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="136-136"];
m45_64 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="testRunner.Then(''the job should be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="138-138"];
m45_65 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="testRunner.And(''the queue should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="140-140"];
m45_66 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="this.ScenarioCleanup()", span="142-142"];
m45_67 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", span="126-126"];
m45_41 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="IMonitoringApi.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m45_47 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", span="101-101"];
m45_48 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Future jobs should not be enqueued'', ((string[])(null)))", span="103-103"];
m45_49 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="this.ScenarioSetup(scenarioInfo)", span="105-105"];
m45_50 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="testRunner.Given(''a future job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="107-107"];
m45_51 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="109-109"];
m45_52 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="testRunner.Then(''the job should be in the Scheduled state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="111-111"];
m45_53 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="testRunner.And(''the schedule should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="113-113"];
m45_54 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="testRunner.And(''the queue should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="115-115"];
m45_55 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="testRunner.And(''schedule poller should return \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="117-117"];
m45_56 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="this.ScenarioCleanup()", span="119-119"];
m45_57 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", span="101-101"];
m45_9 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", span="40-40"];
m45_10 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="IMonitoringApi.cs", label="testRunner.OnFeatureEnd()", span="42-42"];
m45_11 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="IMonitoringApi.cs", label="testRunner = null", span="43-43"];
m45_12 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", span="40-40"];
m45_44 [cluster="Unk.Then", file="IMonitoringApi.cs", label="Entry Unk.Then", span=""];
m45_42 [cluster="Unk.Given", file="IMonitoringApi.cs", label="Entry Unk.Given", span=""];
m45_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="IMonitoringApi.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m45_30 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", span="76-76"];
m45_31 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Scheduled jobs should be enqueued on their actual queues'', ((string[])(null)))", span="78-78"];
m45_32 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="this.ScenarioSetup(scenarioInfo)", span="80-80"];
m45_33 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="82-82"];
m45_34 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="84-84"];
m45_35 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="testRunner.Then(''the job should be in the Enqueued state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="86-86"];
m45_36 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="testRunner.And(''the schedule should not contain it anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="88-88"];
m45_37 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="testRunner.But(''the queue should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="90-90"];
m45_38 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="testRunner.And(''schedule poller should return \'true\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="92-92"];
m45_39 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="this.ScenarioCleanup()", span="94-94"];
m45_40 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", span="76-76"];
m45_22 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m45_23 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="IMonitoringApi.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64"];
m45_24 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m45_68 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="IMonitoringApi.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", span="149-149"];
m45_69 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="IMonitoringApi.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Should return false when there are no jobs in the schedule'', ((string[])(null)))", span="151-151"];
m45_70 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="IMonitoringApi.cs", label="this.ScenarioSetup(scenarioInfo)", span="153-153"];
m45_71 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="IMonitoringApi.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="155-155"];
m45_72 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="IMonitoringApi.cs", label="testRunner.Then(''schedule poller should return \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="157-157"];
m45_73 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="IMonitoringApi.cs", label="this.ScenarioCleanup()", span="159-159"];
m45_74 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="IMonitoringApi.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", span="149-149"];
m45_8 [cluster="Unk.OnFeatureStart", file="IMonitoringApi.cs", label="Entry Unk.OnFeatureStart", span=""];
m45_75 [file="IMonitoringApi.cs", label="HangFire.Tests.Server.SchedulePollerFeature", span=""];
m47_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="IStorageConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m47_37 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="IStorageConnection.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m47_350 [cluster="Mock<StateMachine>.cstr", file="IStorageConnection.cs", label="Entry Mock<StateMachine>.cstr", span=""];
m47_314 [cluster="Unk.Any", file="IStorageConnection.cs", label="Entry Unk.Any", span=""];
m47_342 [cluster="Unk.Apply", file="IStorageConnection.cs", label="Entry Unk.Apply", span=""];
m47_33 [cluster="Unk.Equal", file="IStorageConnection.cs", label="Entry Unk.Equal", span=""];
m47_153 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m47_154 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="IStorageConnection.cs", label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="180-181"];
m47_155 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachineMock()", span="183-183"];
m47_156 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="IStorageConnection.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new [] { ''Old'' })", span="186-186"];
m47_159 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="IStorageConnection.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()),\r\n                Times.Never)", span="192-194"];
m47_157 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="IStorageConnection.cs", label="Assert.False(result)", span="189-189"];
m47_158 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="IStorageConnection.cs", label="_connection.Verify(x => x.GetJobData(''1''))", span="190-190"];
m47_160 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m47_270 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m47_271 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachineMock()", span="317-317"];
m47_272 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="IStorageConnection.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="318-318"];
m47_274 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="IStorageConnection.cs", label="stateMachine\r\n                .Setup(x => x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>()))\r\n                .Returns(electedState.Object)", span="321-324"];
m47_275 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="IStorageConnection.cs", label="stateMachine.Object.ChangeState(context, _state.Object, OldStateName)", span="326-326"];
m47_276 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="IStorageConnection.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))", span="328-329"];
m47_273 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="IStorageConnection.cs", label="var electedState = new Mock<State>()", span="319-319"];
m47_277 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m47_284 [cluster="Unk.ElectState", file="IStorageConnection.cs", label="Entry Unk.ElectState", span=""];
m47_99 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m47_348 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="IStorageConnection.cs", label="return new Mock<StateMachine>(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters)\r\n            {\r\n                CallBase = true\r\n            };", span="394-400"];
m47_349 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m47_242 [cluster="HangFire.Common.JobLoadException.JobLoadException()", file="IStorageConnection.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33"];
m47_27 [cluster="Unk.>", file="IStorageConnection.cs", label="Entry Unk.>", span=""];
m47_210 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m47_211 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="IStorageConnection.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="249-254"];
m47_212 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachineMock()", span="256-256"];
m47_213 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="IStorageConnection.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))\r\n                .Returns(true)", span="258-259"];
m47_214 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="IStorageConnection.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="262-263"];
m47_215 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="IStorageConnection.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old''))", span="266-269"];
m47_216 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="IStorageConnection.cs", label="Assert.True(result)", span="271-271"];
m47_217 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m47_28 [cluster="Unk.CreateExpiredJob", file="IStorageConnection.cs", label="Entry Unk.CreateExpiredJob", span=""];
m47_262 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="IStorageConnection.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m47_38 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m47_39 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="IStorageConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null, _filters))", span="55-56"];
m47_40 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="IStorageConnection.cs", label="Assert.Equal(''handlers'', exception.ParamName)", span="58-58"];
m47_41 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m47_45 [cluster="StateMachine.cstr", file="IStorageConnection.cs", label="Entry StateMachine.cstr", span=""];
m47_129 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m47_130 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="155-155"];
m47_131 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="IStorageConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', _state.Object, null))", span="157-158"];
m47_132 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="IStorageConnection.cs", label="Assert.Equal(''fromStates'', exception.ParamName)", span="160-160"];
m47_133 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m47_72 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="IStorageConnection.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="52-52"];
m47_161 [cluster="Unk.False", file="IStorageConnection.cs", label="Entry Unk.False", span=""];
m47_111 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m47_112 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="133-133"];
m47_113 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="IStorageConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' }))", span="135-136"];
m47_114 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="IStorageConnection.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="138-138"];
m47_115 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m47_288 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m47_289 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachineMock()", span="335-335"];
m47_290 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="IStorageConnection.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="336-336"];
m47_292 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="IStorageConnection.cs", label="stateMachine.Setup(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))\r\n                .Throws(exception)", span="339-341"];
m47_293 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="IStorageConnection.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="343-344"];
m47_294 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="IStorageConnection.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any())))", span="346-350"];
m47_291 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="IStorageConnection.cs", label="var exception = new NotSupportedException()", span="337-337"];
m47_295 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="IStorageConnection.cs", label="Assert.False(result)", span="351-351"];
m47_296 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m47_255 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m47_256 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachineMock()", span="303-303"];
m47_257 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="IStorageConnection.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="304-304"];
m47_258 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="IStorageConnection.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="306-307"];
m47_259 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="IStorageConnection.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>()))", span="309-310"];
m47_260 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="IStorageConnection.cs", label="Assert.True(result)", span="311-311"];
m47_261 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m47_315 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m47_316 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="var handler1 = new Mock<IStateHandler>()", span="358-358"];
m47_317 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="handler1.Setup(x => x.StateName).Returns(StateName)", span="359-359"];
m47_320 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="_handlers.Add(handler1.Object)", span="364-364"];
m47_325 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="handler1.Verify(x => x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>()))", span="375-381"];
m47_318 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="var handler2 = new Mock<IStateHandler>()", span="361-361"];
m47_319 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="handler2.Setup(x => x.StateName).Returns(StateName)", span="362-362"];
m47_321 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="_handlers.Add(handler2.Object)", span="365-365"];
m47_322 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="367-367"];
m47_323 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="368-368"];
m47_324 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="stateMachine.ApplyState(\r\n                context, _state.Object, OldStateName, Enumerable.Empty<IApplyStateFilter>())", span="371-372"];
m47_326 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m47_128 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="IStorageConnection.cs", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="72-72"];
m47_186 [cluster="System.Console.WriteLine()", file="IStorageConnection.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m47_235 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m47_236 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="IStorageConnection.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = null,\r\n                    LoadException = new JobLoadException()\r\n                })", span="278-284"];
m47_237 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachineMock()", span="286-286"];
m47_238 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="IStorageConnection.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="289-289"];
m47_239 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="IStorageConnection.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old''))", span="292-295"];
m47_240 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="IStorageConnection.cs", label="Assert.False(result)", span="297-297"];
m47_241 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m47_103 [cluster="Unk.ChangeState", file="IStorageConnection.cs", label="Entry Unk.ChangeState", span=""];
m47_297 [cluster="System.NotSupportedException.NotSupportedException()", file="IStorageConnection.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m47_94 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m47_95 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachineMock()", span="113-113"];
m47_96 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="IStorageConnection.cs", label="stateMachine.Object.CreateInState(_job, _parameters, _state.Object)", span="115-115"];
m47_97 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="IStorageConnection.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null))", span="117-120"];
m47_98 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m47_329 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="IStorageConnection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m47_328 [cluster="Unk.Add", file="IStorageConnection.cs", label="Entry Unk.Add", span=""];
m47_269 [cluster="Unk.ApplyState", file="IStorageConnection.cs", label="Entry Unk.ApplyState", span=""];
m47_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IStorageConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m47_137 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m47_138 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="IStorageConnection.cs", label="var disposableMock = new Mock<IDisposable>()", span="166-166"];
m47_139 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="IStorageConnection.cs", label="_connection.Setup(x => x.AcquireJobLock(''1'')).Returns(disposableMock.Object)", span="167-167"];
m47_142 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="IStorageConnection.cs", label="disposableMock.Verify(x => x.Dispose())", span="173-173"];
m47_140 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="169-169"];
m47_141 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="IStorageConnection.cs", label="stateMachine.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="171-171"];
m47_143 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m47_120 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m47_121 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="144-144"];
m47_122 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="IStorageConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' }))", span="146-147"];
m47_123 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="IStorageConnection.cs", label="Assert.Equal(''toState'', exception.ParamName)", span="149-149"];
m47_124 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m47_10 [cluster="Mock<State>.cstr", file="IStorageConnection.cs", label="Entry Mock<State>.cstr", span=""];
m47_190 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m47_191 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="IStorageConnection.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="225-230"];
m47_192 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachineMock()", span="232-232"];
m47_193 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="IStorageConnection.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))\r\n                .Returns(false)", span="233-234"];
m47_194 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="IStorageConnection.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="237-237"];
m47_195 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="IStorageConnection.cs", label="stateMachine.Verify(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))", span="240-240"];
m47_196 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="IStorageConnection.cs", label="Assert.False(result)", span="241-241"];
m47_197 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m47_11 [cluster="Unk.Setup", file="IStorageConnection.cs", label="Entry Unk.Setup", span=""];
m47_51 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m47_346 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="IStorageConnection.cs", label="return new StateMachine(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters);", span="386-389"];
m47_347 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m47_0 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m47_1 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="IStorageConnection.cs", label="_job = Job.FromExpression(() => Console.WriteLine(''Hello''))", span="30-30"];
m47_2 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="IStorageConnection.cs", label="_parameters = new Dictionary<string, string>()", span="31-31"];
m47_3 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="IStorageConnection.cs", label="_state = new Mock<State>()", span="32-32"];
m47_4 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="IStorageConnection.cs", label="_state.Setup(x => x.Name).Returns(StateName)", span="33-33"];
m47_5 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="IStorageConnection.cs", label="_connection.Setup(x => x.CreateWriteTransaction())\r\n                .Returns(_transaction.Object)", span="35-36"];
m47_6 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="IStorageConnection.cs", label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="37-40"];
m47_7 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m47_152 [cluster="Unk.Dispose", file="IStorageConnection.cs", label="Entry Unk.Dispose", span=""];
m47_298 [cluster="Unk.Throws", file="IStorageConnection.cs", label="Entry Unk.Throws", span=""];
m47_107 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m47_108 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="126-126"];
m47_109 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="IStorageConnection.cs", label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="127-127"];
m47_110 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m47_73 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m47_74 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="IStorageConnection.cs", label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="97-97"];
m47_75 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="IStorageConnection.cs", label="_parameters.Add(''Name'', ''Value'')", span="98-98"];
m47_77 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="IStorageConnection.cs", label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="102-102"];
m47_76 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="100-100"];
m47_78 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="IStorageConnection.cs", label="_connection.Verify(x => x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>()))", span="104-107"];
m47_79 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m47_148 [cluster="Unk.AcquireJobLock", file="IStorageConnection.cs", label="Entry Unk.AcquireJobLock", span=""];
m47_119 [cluster="Unk.TryToChangeState", file="IStorageConnection.cs", label="Entry Unk.TryToChangeState", span=""];
m47_55 [cluster="Unk.CreateInState", file="IStorageConnection.cs", label="Entry Unk.CreateInState", span=""];
m47_144 [cluster="Mock<IDisposable>.cstr", file="IStorageConnection.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m47_343 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="376-380"];
m47_13 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="30-30"];
m47_17 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="33-33"];
m47_20 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="35-35"];
m47_24 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="37-40"];
m47_14 [cluster="lambda expression", file="IStorageConnection.cs", label="Console.WriteLine(''Hello'')", span="30-30"];
m47_15 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="30-30"];
m47_18 [cluster="lambda expression", file="IStorageConnection.cs", label="x.Name", span="33-33"];
m47_19 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="33-33"];
m47_21 [cluster="lambda expression", file="IStorageConnection.cs", label="x.CreateWriteTransaction()", span="35-35"];
m47_22 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="35-35"];
m47_25 [cluster="lambda expression", file="IStorageConnection.cs", label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())", span="37-40"];
m47_26 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="37-40"];
m47_34 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="47-47"];
m47_35 [cluster="lambda expression", file="IStorageConnection.cs", label="new StateMachine(null, _handlers, _filters)", span="47-47"];
m47_36 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="47-47"];
m47_42 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="56-56"];
m47_43 [cluster="lambda expression", file="IStorageConnection.cs", label="new StateMachine(_connection.Object, null, _filters)", span="56-56"];
m47_44 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="56-56"];
m47_53 [cluster="lambda expression", file="IStorageConnection.cs", label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="67-67"];
m47_52 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="67-67"];
m47_54 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="67-67"];
m47_62 [cluster="lambda expression", file="IStorageConnection.cs", label="stateMachine.CreateInState(_job, null, _state.Object)", span="78-78"];
m47_61 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="78-78"];
m47_63 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="78-78"];
m47_70 [cluster="lambda expression", file="IStorageConnection.cs", label="stateMachine.CreateInState(_job, _parameters, null)", span="89-89"];
m47_69 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="89-89"];
m47_71 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="89-89"];
m47_82 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="97-97"];
m47_85 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="104-107"];
m47_83 [cluster="lambda expression", file="IStorageConnection.cs", label="Console.WriteLine(''SomeString'')", span="97-97"];
m47_84 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="97-97"];
m47_86 [cluster="lambda expression", file="IStorageConnection.cs", label="x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>())", span="104-107"];
m47_87 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="104-107"];
m47_88 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="105-105"];
m47_91 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="106-106"];
m47_89 [cluster="lambda expression", file="IStorageConnection.cs", label="j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''", span="105-105"];
m47_90 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="105-105"];
m47_92 [cluster="lambda expression", file="IStorageConnection.cs", label="d[''Name''] == ''Value''", span="106-106"];
m47_93 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="106-106"];
m47_100 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="117-120"];
m47_101 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null)", span="117-120"];
m47_102 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="117-120"];
m47_104 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="118-118"];
m47_105 [cluster="lambda expression", file="IStorageConnection.cs", label="sc.JobId == JobId && sc.Job == _job", span="118-118"];
m47_106 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="118-118"];
m47_117 [cluster="lambda expression", file="IStorageConnection.cs", label="stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' })", span="136-136"];
m47_116 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="136-136"];
m47_118 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="136-136"];
m47_126 [cluster="lambda expression", file="IStorageConnection.cs", label="stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' })", span="147-147"];
m47_125 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="147-147"];
m47_127 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="147-147"];
m47_135 [cluster="lambda expression", file="IStorageConnection.cs", label="stateMachine.TryToChangeState(''1'', _state.Object, null)", span="158-158"];
m47_134 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="158-158"];
m47_136 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="158-158"];
m47_145 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="167-167"];
m47_149 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="173-173"];
m47_146 [cluster="lambda expression", file="IStorageConnection.cs", label="x.AcquireJobLock(''1'')", span="167-167"];
m47_147 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="167-167"];
m47_150 [cluster="lambda expression", file="IStorageConnection.cs", label="x.Dispose()", span="173-173"];
m47_151 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="173-173"];
m47_162 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="180-180"];
m47_166 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="190-190"];
m47_169 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="193-193"];
m47_163 [cluster="lambda expression", file="IStorageConnection.cs", label="x.GetJobData(It.IsAny<string>())", span="180-180"];
m47_164 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="180-180"];
m47_167 [cluster="lambda expression", file="IStorageConnection.cs", label="x.GetJobData(''1'')", span="190-190"];
m47_168 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="190-190"];
m47_170 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="193-193"];
m47_171 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="193-193"];
m47_180 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="201-201"];
m47_183 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="205-205"];
m47_187 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="217-217"];
m47_181 [cluster="lambda expression", file="IStorageConnection.cs", label="x.GetJobData(''1'')", span="201-201"];
m47_182 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="201-201"];
m47_184 [cluster="lambda expression", file="IStorageConnection.cs", label="Console.WriteLine()", span="205-205"];
m47_185 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="205-205"];
m47_188 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="217-217"];
m47_189 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="217-217"];
m47_198 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="225-225"];
m47_201 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="229-229"];
m47_204 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="233-233"];
m47_207 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="240-240"];
m47_199 [cluster="lambda expression", file="IStorageConnection.cs", label="x.GetJobData(''1'')", span="225-225"];
m47_200 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="225-225"];
m47_202 [cluster="lambda expression", file="IStorageConnection.cs", label="Console.WriteLine()", span="229-229"];
m47_203 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="229-229"];
m47_205 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="233-233"];
m47_206 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="233-233"];
m47_208 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="240-240"];
m47_209 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="240-240"];
m47_219 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="249-249"];
m47_222 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="253-253"];
m47_225 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="258-258"];
m47_228 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="266-269"];
m47_220 [cluster="lambda expression", file="IStorageConnection.cs", label="x.GetJobData(''1'')", span="249-249"];
m47_221 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="249-249"];
m47_223 [cluster="lambda expression", file="IStorageConnection.cs", label="Console.WriteLine()", span="253-253"];
m47_224 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="253-253"];
m47_226 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="258-258"];
m47_227 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="258-258"];
m47_229 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old'')", span="266-269"];
m47_230 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="266-269"];
m47_231 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="267-267"];
m47_232 [cluster="lambda expression", file="IStorageConnection.cs", label="sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')", span="267-267"];
m47_233 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="267-267"];
m47_243 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="278-278"];
m47_246 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="292-295"];
m47_244 [cluster="lambda expression", file="IStorageConnection.cs", label="x.GetJobData(''1'')", span="278-278"];
m47_245 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="278-278"];
m47_247 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old'')", span="292-295"];
m47_248 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="292-295"];
m47_249 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="293-293"];
m47_252 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="294-294"];
m47_250 [cluster="lambda expression", file="IStorageConnection.cs", label="sc.JobId == ''1'' && sc.Job == null", span="293-293"];
m47_251 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="293-293"];
m47_253 [cluster="lambda expression", file="IStorageConnection.cs", label="s.Exception != null", span="294-294"];
m47_254 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="294-294"];
m47_263 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="304-304"];
m47_267 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>())", span="309-310"];
m47_266 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="309-310"];
m47_264 [cluster="lambda expression", file="IStorageConnection.cs", label="Console.WriteLine()", span="304-304"];
m47_265 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="304-304"];
m47_268 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="309-310"];
m47_278 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="318-318"];
m47_282 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>())", span="322-323"];
m47_286 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="328-329"];
m47_281 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="322-323"];
m47_285 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="328-329"];
m47_279 [cluster="lambda expression", file="IStorageConnection.cs", label="Console.WriteLine()", span="318-318"];
m47_280 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="318-318"];
m47_283 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="322-323"];
m47_287 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="328-329"];
m47_299 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="336-336"];
m47_303 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="339-340"];
m47_306 [cluster="lambda expression", file="IStorageConnection.cs", label="x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any()))", span="346-350"];
m47_309 [cluster="lambda expression", file="IStorageConnection.cs", label="s.Exception == exception", span="348-348"];
m47_302 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="339-340"];
m47_305 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="346-350"];
m47_300 [cluster="lambda expression", file="IStorageConnection.cs", label="Console.WriteLine()", span="336-336"];
m47_301 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="336-336"];
m47_304 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="339-340"];
m47_307 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="346-350"];
m47_308 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="348-348"];
m47_311 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="350-350"];
m47_310 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="348-348"];
m47_312 [cluster="lambda expression", file="IStorageConnection.cs", label="!f.Any()", span="350-350"];
m47_313 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="350-350"];
m47_330 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="359-359"];
m47_333 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="362-362"];
m47_336 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="368-368"];
m47_340 [cluster="lambda expression", file="IStorageConnection.cs", label="x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>())", span="375-381"];
m47_344 [cluster="lambda expression", file="IStorageConnection.cs", label="c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName", span="377-380"];
m47_339 [cluster="lambda expression", file="IStorageConnection.cs", label="Entry lambda expression", span="375-381"];
m47_331 [cluster="lambda expression", file="IStorageConnection.cs", label="x.StateName", span="359-359"];
m47_332 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="359-359"];
m47_334 [cluster="lambda expression", file="IStorageConnection.cs", label="x.StateName", span="362-362"];
m47_335 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="362-362"];
m47_337 [cluster="lambda expression", file="IStorageConnection.cs", label="Console.WriteLine()", span="368-368"];
m47_338 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="368-368"];
m47_341 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="375-381"];
m47_345 [cluster="lambda expression", file="IStorageConnection.cs", label="Exit lambda expression", span="376-380"];
m47_56 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m47_57 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="75-75"];
m47_58 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="IStorageConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(_job, null, _state.Object))", span="77-78"];
m47_59 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="IStorageConnection.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="80-80"];
m47_60 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m47_46 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m47_47 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="64-64"];
m47_48 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="IStorageConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(null, _parameters, _state.Object))", span="66-67"];
m47_49 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="IStorageConnection.cs", label="Assert.Equal(''job'', exception.ParamName)", span="69-69"];
m47_50 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m47_23 [cluster="Unk.CreateWriteTransaction", file="IStorageConnection.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m47_172 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m47_173 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="IStorageConnection.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="201-206"];
m47_174 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachineMock()", span="208-208"];
m47_175 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="IStorageConnection.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new [] { ''AnotherState'' })", span="211-212"];
m47_177 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="IStorageConnection.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()),\r\n                Times.Never)", span="216-218"];
m47_176 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="IStorageConnection.cs", label="Assert.False(result)", span="215-215"];
m47_178 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m47_179 [cluster="HangFire.Storage.JobData.JobData()", file="IStorageConnection.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m47_218 [cluster="Unk.True", file="IStorageConnection.cs", label="Entry Unk.True", span=""];
m47_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="IStorageConnection.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m47_12 [cluster="Unk.Returns", file="IStorageConnection.cs", label="Entry Unk.Returns", span=""];
m47_29 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m47_30 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="IStorageConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _handlers, _filters))", span="46-47"];
m47_31 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="IStorageConnection.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="49-49"];
m47_32 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m47_16 [cluster="System.Console.WriteLine(string)", file="IStorageConnection.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m47_327 [cluster="Mock<IStateHandler>.cstr", file="IStorageConnection.cs", label="Entry Mock<IStateHandler>.cstr", span=""];
m47_81 [cluster="Unk.Verify", file="IStorageConnection.cs", label="Entry Unk.Verify", span=""];
m47_165 [cluster="Unk.GetJobData", file="IStorageConnection.cs", label="Entry Unk.GetJobData", span=""];
m47_234 [cluster="Unk.Equals", file="IStorageConnection.cs", label="Entry Unk.Equals", span=""];
m47_64 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="IStorageConnection.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m47_65 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="IStorageConnection.cs", label="var stateMachine = CreateStateMachine()", span="86-86"];
m47_66 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="IStorageConnection.cs", label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="88-89"];
m47_67 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="IStorageConnection.cs", label="Assert.Equal(''state'', exception.ParamName)", span="91-91"];
m47_68 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="IStorageConnection.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m47_351 [file="IStorageConnection.cs", label="HangFire.Core.Tests.States.StateMachineFacts", span=""];
m47_352 [file="IStorageConnection.cs", label=stateMachine, span=""];
m47_353 [file="IStorageConnection.cs", label=stateMachine, span=""];
m47_354 [file="IStorageConnection.cs", label=stateMachine, span=""];
m47_355 [file="IStorageConnection.cs", label=stateMachine, span=""];
m47_356 [file="IStorageConnection.cs", label=stateMachine, span=""];
m47_357 [file="IStorageConnection.cs", label=stateMachine, span=""];
m47_358 [file="IStorageConnection.cs", label=context, span=""];
m47_359 [file="IStorageConnection.cs", label=context, span=""];
m47_360 [file="IStorageConnection.cs", label=electedState, span=""];
m47_361 [file="IStorageConnection.cs", label=context, span=""];
m47_362 [file="IStorageConnection.cs", label=exception, span=""];
m47_363 [file="IStorageConnection.cs", label=context, span=""];
m49_21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JavaScriptHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m49_3 [cluster="Unk.>", file="JavaScriptHandler.cs", label="Entry Unk.>", span=""];
m49_7 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="JavaScriptHandler.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m49_22 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="JavaScriptHandler.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m49_13 [cluster="Unk.Equal", file="JavaScriptHandler.cs", label="Entry Unk.Equal", span=""];
m49_12 [cluster="System.Exception.Exception()", file="JavaScriptHandler.cs", label="Entry System.Exception.Exception()", span="0-0"];
m49_8 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="JavaScriptHandler.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m49_9 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="JavaScriptHandler.cs", label="var state = new FailedState(new Exception())", span="19-19"];
m49_10 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", color=red, community=0, file="JavaScriptHandler.cs", label="0: Assert.Equal(FailedState.Name, state.StateName)", span="20-20"];
m49_11 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="JavaScriptHandler.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m49_20 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="JavaScriptHandler.cs", label="Entry HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="36-36"];
m49_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="JavaScriptHandler.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m49_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="JavaScriptHandler.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="12-13"];
m49_2 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="JavaScriptHandler.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m49_4 [cluster="lambda expression", file="JavaScriptHandler.cs", label="Entry lambda expression", span="13-13"];
m49_5 [cluster="lambda expression", file="JavaScriptHandler.cs", label="new FailedState(null)", span="13-13"];
m49_6 [cluster="lambda expression", file="JavaScriptHandler.cs", label="Exit lambda expression", span="13-13"];
m49_19 [cluster="System.Exception.Exception(string)", file="JavaScriptHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m49_14 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="JavaScriptHandler.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24"];
m49_15 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", color=red, community=0, file="JavaScriptHandler.cs", label="0: var state = new FailedState(new Exception(''Message''))", span="26-26"];
m49_16 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", color=red, community=0, file="JavaScriptHandler.cs", label="0: var data = state.GetProperties(null)", span="27-27"];
m49_17 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", color=red, community=0, file="JavaScriptHandler.cs", label="2: DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', ''<UtcNow timestamp>'' },\r\n                    { ''ExceptionType'', ''System.Exception'' },\r\n                    { ''ExceptionMessage'', ''Message'' },\r\n                    { ''ExceptionDetails'', ''<Non-empty>'' }\r\n                }, \r\n                data)", span="29-37"];
m49_18 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="JavaScriptHandler.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24"];
m50_25 [cluster="Unk.OnScenarioStart", file="Job.cs", label="Entry Unk.OnScenarioStart", span=""];
m50_29 [cluster="Unk.CollectScenarioErrors", file="Job.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m50_21 [cluster="Unk.OnScenarioEnd", file="Job.cs", label="Entry Unk.OnScenarioEnd", span=""];
m50_136 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", span="351-351"];
m50_137 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.In<TestJob>(TimeSpan delay, object args)` method should schedule a j'' +\r\n                    ''ob of the given type'', ((string[])(null)))", span="353-354"];
m50_138 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="356-356"];
m50_139 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.FeatureBackground()", span="358-358"];
m50_140 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="testRunner.When(''I call the `Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="360-360"];
m50_141 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="362-364"];
m50_142 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''3''})", span="365-367"];
m50_143 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="testRunner.Then(''the \'TestJob\' should be scheduled for tomorrow with the following arguments:'', ((string)(null)), table3, ''Then '')", span="369-369"];
m50_144 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioCleanup()", span="371-371"];
m50_145 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", span="351-351"];
m50_9 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.FeatureTearDown()", span="39-39"];
m50_10 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Job.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m50_11 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Job.cs", label="testRunner = null", span="42-42"];
m50_12 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.FeatureTearDown()", span="39-39"];
m50_93 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", span="238-238"];
m50_94 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Passing the null type argument to the `Perform.Async(Type type, object args)` met'' +\r\n                    ''hod should cause exception'', ((string[])(null)))", span="240-241"];
m50_95 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="243-243"];
m50_96 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="Job.cs", label="this.FeatureBackground()", span="245-245"];
m50_97 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async(null, new { ArticleId = 3 })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="247-247"];
m50_98 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="Job.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="249-249"];
m50_99 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="Job.cs", label="this.ScenarioCleanup()", span="251-251"];
m50_100 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", span="238-238"];
m50_5 [cluster="Unk.GetTestRunner", file="Job.cs", label="Entry Unk.GetTestRunner", span=""];
m50_101 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", span="258-258"];
m50_102 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async<TJob>()` method should enqueue a job to its actual queue'', ((string[])(null)))", span="260-260"];
m50_103 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="262-262"];
m50_104 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="Job.cs", label="this.FeatureBackground()", span="264-264"];
m50_105 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="Job.cs", label="testRunner.Given(''the following job type:'', ''[Queue(\''critical\'')]\r\npublic class CriticalQueueJob : BackgroundJob\r\n{\r\n    public'' +\r\n                    '' override void Perform()\r\n    {\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="267-268"];
m50_106 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async<CriticalQueueJob>()`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="270-270"];
m50_107 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="Job.cs", label="testRunner.Then(''the argumentless \'CriticalQueueJob\' should be added to the \'critical\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="272-272"];
m50_108 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="Job.cs", label="this.ScenarioCleanup()", span="274-274"];
m50_109 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", span="258-258"];
m50_58 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", span="137-137"];
m50_59 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When one or more of the job arguments can not be converted using the custom TypeC'' +\r\n                    ''onverter, an exception should be raised'', ((string[])(null)))", span="139-140"];
m50_60 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="142-142"];
m50_61 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="Job.cs", label="this.FeatureBackground()", span="144-144"];
m50_62 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="Job.cs", label="testRunner.Given(''the custom types:'', @''[TypeConverter(typeof(CustomTypeConverter))\r\npublic class CustomType {}\r\n\r\npublic class CustomTypeConverter : TypeConverter\r\n{\r\n    public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)\r\n    {\r\n        throw new NotSupportedException();\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="147-156"];
m50_63 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async<TestJob>(new { Author = new CustomType() })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158"];
m50_64 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="Job.cs", label="testRunner.Then(''a \'System.InvalidOperationException\' should be thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="160-160"];
m50_65 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="Job.cs", label="this.ScenarioCleanup()", span="162-162"];
m50_66 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", span="137-137"];
m50_110 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", span="281-281"];
m50_111 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the queue name should contain only lowercase letters, digits and underscores'', ((string[])(null)))", span="283-283"];
m50_112 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="285-285"];
m50_113 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="Job.cs", label="this.FeatureBackground()", span="287-287"];
m50_114 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="Job.cs", label="testRunner.Given(''the following job type:'', ''[Queue(\'' $InvalidQueue\'')]\r\npublic class InvalidQueueJob : BackgroundJob\r\n{\r\n    p'' +\r\n                    ''ublic override void Perform()\r\n    {\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="290-291"];
m50_115 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async<InvalidQueueJob>()`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="293-293"];
m50_116 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="Job.cs", label="testRunner.Then(''a \'System.InvalidOperationException\' should be thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="295-295"];
m50_117 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="Job.cs", label="this.ScenarioCleanup()", span="297-297"];
m50_118 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", span="281-281"];
m50_22 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m50_23 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Job.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m50_24 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m50_75 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", span="189-189"];
m50_76 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Passing the null type argument to the `Perform.Async(Type type)` method should ca'' +\r\n                    ''use exception'', ((string[])(null)))", span="191-192"];
m50_77 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="194-194"];
m50_78 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="Job.cs", label="this.FeatureBackground()", span="196-196"];
m50_79 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async(null)`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m50_80 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="Job.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m50_81 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="Job.cs", label="this.ScenarioCleanup()", span="202-202"];
m50_82 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", span="189-189"];
m50_26 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66"];
m50_27 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="Job.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m50_28 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66"];
m50_83 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", span="210-210"];
m50_84 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async(Type type, object args)` method should enqueue job of the give'' +\r\n                    ''n type'', ((string[])(null)))", span="212-213"];
m50_85 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="215-215"];
m50_86 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="this.FeatureBackground()", span="217-217"];
m50_87 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async(typeof(TestJob), new { ArticleId = 3 })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="219-219"];
m50_88 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="221-223"];
m50_89 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="table2.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''3''})", span="224-226"];
m50_90 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="testRunner.Then(''the \'TestJob\' should be added to the default queue with the following arguments:'', ((string)(null)), table2, ''Then '')", span="228-228"];
m50_91 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="this.ScenarioCleanup()", span="230-230"];
m50_92 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", span="210-210"];
m50_13 [cluster="Unk.OnFeatureEnd", file="Job.cs", label="Entry Unk.OnFeatureEnd", span=""];
m50_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="Job.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m50_14 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.TestInitialize()", span="46-46"];
m50_15 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Job.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client''))", span="48-49"];
m50_16 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Job.cs", label="HangFire.Tests.ClientFeature.FeatureSetup(null)", span="51-51"];
m50_17 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.TestInitialize()", span="46-46"];
m50_18 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56"];
m50_19 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="Job.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m50_20 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56"];
m50_43 [cluster="Unk.When", file="Job.cs", label="Entry Unk.When", span=""];
m50_146 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", span="379-379"];
m50_147 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.In(TimeSpan delay, Type type)` method should schedule a job of the g'' +\r\n                    ''iven type'', ((string[])(null)))", span="381-382"];
m50_148 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="384-384"];
m50_149 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.FeatureBackground()", span="386-386"];
m50_150 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="testRunner.When(''I call the `Perform.In(TimeSpan.FromDays(1), typeof(TestJob))`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="388-388"];
m50_151 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="testRunner.Then(''the argumentless \'TestJob\' should be scheduled for tomorrow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="390-390"];
m50_152 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioCleanup()", span="392-392"];
m50_153 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", span="379-379"];
m50_45 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", span="106-106"];
m50_46 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async<TJob>(object args)` method should enqueue job with the given a'' +\r\n                    ''rguments'', ((string[])(null)))", span="108-109"];
m50_47 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="111-111"];
m50_48 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="this.FeatureBackground()", span="113-113"];
m50_49 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async<TestJob>(new { ArticleId = 3, Author = \''odinserj\'' })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="115-115"];
m50_50 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="117-119"];
m50_51 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="table1.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''3''})", span="120-122"];
m50_52 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="table1.AddRow(new string[] {\r\n                        ''Author'',\r\n                        ''odinserj''})", span="123-125"];
m50_53 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="testRunner.Then(''the \'TestJob\' should be added to the default queue with the following arguments:'', ((string)(null)), table1, ''Then '')", span="127-127"];
m50_54 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="this.ScenarioCleanup()", span="129-129"];
m50_55 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", span="106-106"];
m50_57 [cluster="Unk.AddRow", file="Job.cs", label="Entry Unk.AddRow", span=""];
m50_67 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", span="169-169"];
m50_68 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async(Type type)` method should enqueue a job of the given type'', ((string[])(null)))", span="171-171"];
m50_69 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="173-173"];
m50_70 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="this.FeatureBackground()", span="175-175"];
m50_71 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async(typeof(TestJob))`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177"];
m50_72 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="testRunner.Then(''the argumentless \'TestJob\' should be added to the default queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179"];
m50_73 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioCleanup()", span="181-181"];
m50_74 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", span="169-169"];
m50_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="Job.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m50_44 [cluster="Unk.Then", file="Job.cs", label="Entry Unk.Then", span=""];
m50_30 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71"];
m50_31 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="Job.cs", label="testRunner.Given(''the following job type:'', ''public class TestJob : BackgroundJob\r\n{\r\n    public int ArticleId { get; set; }\r\n'' +\r\n                    ''    public string Author { get; set; }\r\n\r\n    public override void Perform()\r\n  '' +\r\n                    ''  {\r\n    }\r\n}          '', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-78"];
m50_32 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71"];
m50_33 [cluster="Unk.Given", file="Job.cs", label="Entry Unk.Given", span=""];
m50_128 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", span="330-330"];
m50_129 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.In<TestJob>(TimeSpan delay)` method should schedule a job of the giv'' +\r\n                    ''en type'', ((string[])(null)))", span="332-333"];
m50_130 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="335-335"];
m50_131 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.FeatureBackground()", span="337-337"];
m50_132 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="testRunner.When(''I call the `Perform.In<TestJob>(TimeSpan.FromDays(1))`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="339-339"];
m50_133 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="testRunner.Then(''the argumentless \'TestJob\' should be scheduled for tomorrow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="341-341"];
m50_134 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioCleanup()", span="343-343"];
m50_135 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", span="330-330"];
m50_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="Job.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m50_56 [cluster="TechTalk.SpecFlow.Table.cstr", file="Job.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m50_0 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m50_1 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Job.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m50_2 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Job.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client'', ''\r\n  As a Developer, I want to define and create jobs.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m50_3 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Job.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m50_4 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m50_154 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", span="400-400"];
m50_155 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The `Perform.In(TimeSpan delay, Type type, object args)` method should schedule a'' +\r\n                    '' job of the given type'', ((string[])(null)))", span="402-403"];
m50_156 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="405-405"];
m50_157 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.FeatureBackground()", span="407-407"];
m50_158 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="testRunner.When(''I call the `Perform.In(TimeSpan.FromDays(1), typeof(TestJob), new { ArticleId = 3'' +\r\n                    '' })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="409-410"];
m50_159 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="412-414"];
m50_160 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="table4.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''3''})", span="415-417"];
m50_161 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="testRunner.Then(''the \'TestJob\' should be scheduled for tomorrow with the following arguments:'', ((string)(null)), table4, ''Then '')", span="419-419"];
m50_162 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioCleanup()", span="421-421"];
m50_163 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", span="400-400"];
m50_119 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", span="305-305"];
m50_120 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''if the QueueAttribute contains an empty or null string, then the actual queue sho'' +\r\n                    ''uld be the default queue'', ((string[])(null)))", span="307-308"];
m50_121 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="310-310"];
m50_122 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="Job.cs", label="this.FeatureBackground()", span="312-312"];
m50_123 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="Job.cs", label="testRunner.Given(''the following job type:'', ''[Queue(\''\'')]\r\npublic class EmptyQueueJob : BackgroundJob\r\n{\r\n    public override v'' +\r\n                    ''oid Perform()\r\n    {\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="315-316"];
m50_124 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async<EmptyQueueJob>()`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="318-318"];
m50_125 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="Job.cs", label="testRunner.Then(''the argumentless \'EmptyQueueJob\' should be added to the default queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="320-320"];
m50_126 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="Job.cs", label="this.ScenarioCleanup()", span="322-322"];
m50_127 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", span="305-305"];
m50_8 [cluster="Unk.OnFeatureStart", file="Job.cs", label="Entry Unk.OnFeatureStart", span=""];
m50_34 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", span="86-86"];
m50_35 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async<TJob>()` method should enqueue a job of the given type'', ((string[])(null)))", span="88-88"];
m50_36 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioSetup(scenarioInfo)", span="90-90"];
m50_37 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="this.FeatureBackground()", span="92-92"];
m50_38 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="testRunner.When(''I call the `Perform.Async<TestJob>()`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="94-94"];
m50_39 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="testRunner.Then(''the argumentless \'TestJob\' should be added to the default queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="96-96"];
m50_40 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="this.ScenarioCleanup()", span="98-98"];
m50_41 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="Job.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", span="86-86"];
m50_164 [file="Job.cs", label="HangFire.Tests.ClientFeature", span=""];
m51_2 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="JobDetailsPage.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m51_3 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="JobDetailsPage.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m51_0 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="JobDetailsPage.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4"];
m51_1 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="JobDetailsPage.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4"];
m51_4 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="JobDetailsPage.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m51_5 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="JobDetailsPage.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m52_82 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m52_17 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="153-153"];
m52_90 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115"];
m52_0 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52"];
m52_3 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs", label="2: int from, perPage", span="70-70"];
m52_1 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n'')", span="56-56"];
m52_4 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs", label="4: int.TryParse(Request.QueryString[''from''], out from)", span="72-72"];
m52_5 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="73-73"];
m52_10 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs", label="2: pager.TotalPageCount == 0", span="93-93"];
m52_9 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="1: WriteLiteral(''\n'')", span="88-88"];
m52_11 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-success\''>\n        You have no failed jobs at the mome'' +\r\n''nt.\n    </div>\n'')", span="99-100"];
m52_6 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="75-75"];
m52_14 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="0: WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-repeat''''></span>\n                Requeue jobs\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="124-131"];
m52_15 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="0: Write(Request.LinkTo(''/failed/delete''))", span="136-136"];
m52_2 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Layout = new LayoutPage { Title = ''Failed Jobs'' }", span="68-68"];
m52_7 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Pager pager = new Pager(from, perPage, monitor.FailedCount())\n    {\n        BasePageUrl = Request.LinkTo(''/failed'')\n    }", span="76-79"];
m52_8 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="JobList<FailedJobDto> failedJobs = monitor\n        .FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="81-82"];
m52_13 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(Request.LinkTo(''/failed/requeue''))", span="119-119"];
m52_12 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="0: WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="112-114"];
m52_16 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="141-148"];
m52_72 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="501-501"];
m52_20 [cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="JobDetailsPage1.generated.cs", label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56"];
m52_18 [cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="1: Entry Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", span="24-24"];
m52_19 [cluster="System.Action<T>.Invoke(T)", file="JobDetailsPage1.generated.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m52_60 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(index++ == 0 ? ''display: block;'' : null)", span="420-420"];
m52_21 [cluster="System.Func<TResult>.Invoke()", file="JobDetailsPage1.generated.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m52_71 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="489-489"];
m52_22 [cluster="IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", file="JobDetailsPage1.generated.cs", label="Entry IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", span="39-39"];
m52_23 [cluster="IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="JobDetailsPage1.generated.cs", label="Entry IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="89-89"];
m52_24 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(job.Value.InFailedState ? ''hover'' : null)", span="207-207"];
m52_25 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n                        <td rowspan=\'''')", span="212-212"];
m52_26 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="1: Write(job.Value.InFailedState ? ''2'' : ''1'')", span="217-217"];
m52_27 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n'')", span="222-222"];
m52_28 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Value.InFailedState", span="227-227"];
m52_29 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="233-234"];
m52_32 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\'' rowsp'' +\r\n''an=\'''')", span="254-255"];
m52_30 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(job.Key)", span="239-239"];
m52_33 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="260-260"];
m52_31 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\'' />\n'')", span="244-244"];
m52_34 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n                            <a href=\'''')", span="265-265"];
m52_35 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="4: Write(Request.LinkTo(''/job/'' + job.Key))", span="270-270"];
m52_36 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="275-275"];
m52_37 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="280-280"];
m52_38 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n                            </a>\n'')", span="285-285"];
m52_39 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="!job.Value.InFailedState", span="290-290"];
m52_40 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="296-297"];
m52_41 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n'')", span="307-307"];
m52_42 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Value.FailedAt.HasValue", span="312-312"];
m52_43 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="318-318"];
m52_48 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        </td>\n                        <td>\n                      '' +\r\n''      <div>\n                                <a class=\''job-method\'' href=\'''')", span="348-349"];
m52_44 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.FailedAt.Value))", span="323-323"];
m52_49 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="354-354"];
m52_45 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n                                    '')", span="328-328"];
m52_46 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(job.Value.FailedAt)", span="333-333"];
m52_47 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n                                </span>\n'')", span="338-338"];
m52_50 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n                                    '')", span="359-359"];
m52_51 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="364-364"];
m52_52 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n                                </a>\n                            </div>\n'')", span="369-369"];
m52_53 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="1: !String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="374-374"];
m52_54 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <div style=\''color: #888;\''>\n                      '' +\r\n''              '')", span="380-381"];
m52_57 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="402-402"];
m52_55 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(job.Value.Reason)", span="386-386"];
m52_58 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Value.InFailedState", span="407-407"];
m52_56 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral('' <a class=\''expander\'' href=\''#\''>More&nbsp;details...</a>\n                          '' +\r\n''      </div>\n'')", span="391-392"];
m52_59 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="1: WriteLiteral(''                        <tr>\n                            <td colspan=\''2\'' class=\''f'' +\r\n''ailed-job-details\''>\n                                <div class=\''expandable\'' styl'' +\r\n''e=\'''')", span="413-415"];
m52_62 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(job.Value.ExceptionType)", span="430-430"];
m52_61 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="1: WriteLiteral(''\''>\n                                    <h4>'')", span="425-425"];
m52_63 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs", label="0: WriteLiteral(''</h4>\n                                    <p>\n                                   '' +\r\n''     '')", span="435-436"];
m52_64 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(job.Value.ExceptionMessage)", span="441-441"];
m52_65 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n                                    </p>\n\n'')", span="446-446"];
m52_66 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="451-451"];
m52_67 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                        <pre class=\''stack-trace\''>'')", span="457-457"];
m52_70 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                </div>\n                            </td>\n        '' +\r\n''                </tr>\n'')", span="477-478"];
m52_68 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="462-462"];
m52_69 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</pre>\n'')", span="467-467"];
m52_73 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52"];
m52_81 [cluster="HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35"];
m52_78 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m52_76 [cluster="Unk.TryParse", file="JobDetailsPage1.generated.cs", label="Entry Unk.TryParse", span=""];
m52_74 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m52_84 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m52_89 [cluster="string.IsNullOrEmpty(string)", file="JobDetailsPage1.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m52_79 [cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41"];
m52_83 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m52_87 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m52_85 [cluster="Unk.Write", file="JobDetailsPage1.generated.cs", label="Entry Unk.Write", span=""];
m52_86 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m52_77 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m52_75 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m52_80 [cluster="HttpRequestBase.LinkTo(string)", file="JobDetailsPage1.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m52_88 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m52_91 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m52_92 [file="JobDetailsPage1.generated.cs", label="HangFire.Web.Pages.FailedJobsPage", span=""];
m53_0 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="JobFacts.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8"];
m53_1 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="JobFacts.cs", label="Exit HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8"];
m54_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobHelper.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m54_0 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="JobHelper.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m54_1 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="JobHelper.cs", label="storage == null", span="36-36"];
m54_3 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="JobHelper.cs", label="_storage = storage", span="38-38"];
m54_4 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="JobHelper.cs", label="_interval = interval", span="39-39"];
m54_2 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="JobHelper.cs", label="throw new ArgumentNullException(''storage'');", span="36-36"];
m54_5 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="JobHelper.cs", label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m54_19 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="JobHelper.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m54_24 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="JobHelper.cs", label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72"];
m54_31 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="JobHelper.cs", label="return string.Format(@''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [{0}].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{0}].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'', storage.GetSchema());", span="74-100"];
m54_32 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="JobHelper.cs", label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72"];
m54_25 [cluster="Unk.Execute", file="JobHelper.cs", label="Entry Unk.Execute", span=""];
m54_30 [cluster="System.Type.ToString()", file="JobHelper.cs", label="Entry System.Type.ToString()", span="0-0"];
m54_7 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobHelper.cs", label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m54_8 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobHelper.cs", label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44"];
m54_12 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobHelper.cs", label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59"];
m54_15 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobHelper.cs", label="cancellationToken.WaitHandle.WaitOne(_interval)", span="64-64"];
m54_9 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobHelper.cs", label="int removedCount = 0", span="46-46"];
m54_10 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=red, community=0, file="JobHelper.cs", label="1: _storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", span="50-55"];
m54_11 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=red, community=0, file="JobHelper.cs", label="1: removedCount >= NumberOfRecordsInSinglePass", span="57-57"];
m54_14 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobHelper.cs", label="removedCount >= NumberOfRecordsInSinglePass", span="62-62"];
m54_13 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=red, community=0, file="JobHelper.cs", label="0: cancellationToken.ThrowIfCancellationRequested()", span="60-60"];
m54_16 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobHelper.cs", label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m54_34 [cluster="string.Format(string, object)", file="JobHelper.cs", label="Entry string.Format(string, object)", span="0-0"];
m54_17 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="JobHelper.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m54_26 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="JobHelper.cs", label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m54_27 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="JobHelper.cs", label="return GetType().ToString();", span="69-69"];
m54_28 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="JobHelper.cs", label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m54_33 [cluster="Hangfire.SqlServer.SqlServerStorage.GetSchema()", file="JobHelper.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetSchema()", span="238-238"];
m54_18 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="JobHelper.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m54_29 [cluster="object.GetType()", file="JobHelper.cs", label="Entry object.GetType()", span="0-0"];
m54_21 [cluster="lambda expression", file="JobHelper.cs", label="Entry lambda expression", span="50-55"];
m54_22 [cluster="lambda expression", color=red, community=0, file="JobHelper.cs", label="0: removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54"];
m54_23 [cluster="lambda expression", file="JobHelper.cs", label="Exit lambda expression", span="50-55"];
m54_20 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobHelper.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m54_35 [file="JobHelper.cs", label="Hangfire.SqlServer.CountersAggregator", span=""];
m55_86 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelperFacts.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m55_52 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobHelperFacts.cs", label="table1.AddRow(new string[] {\r\n                        ''ExceptionMessage'',\r\n                        ''Hello''})", span="119-121"];
m55_5 [cluster="Unk.GetTestRunner", file="JobHelperFacts.cs", label="Entry Unk.GetTestRunner", span=""];
m55_18 [cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", span="51-51"];
m55_19 [cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", file="JobHelperFacts.cs", label="items == null", span="53-53"];
m55_20 [cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", file="JobHelperFacts.cs", label="throw new ArgumentNullException(nameof(items));", span="53-53"];
m55_21 [cluster="Hangfire.Dashboard.HtmlHelper.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", color=red, community=0, file="JobHelperFacts.cs", label="0: return RenderPartial(new SidebarMenu(items));", span="54-54"];
m55_22 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobHelperFacts.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m55_56 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobHelperFacts.cs", label="Exit HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m55_57 [cluster="TechTalk.SpecFlow.Table.cstr", file="JobHelperFacts.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m55_58 [cluster="Unk.AddRow", file="JobHelperFacts.cs", label="Entry Unk.AddRow", span=""];
m55_59 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="JobHelperFacts.cs", label="Entry HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135"];
m55_119 [cluster="System.Text.StringBuilder.Append(int)", file="JobHelperFacts.cs", label="Entry System.Text.StringBuilder.Append(int)", span="0-0"];
m55_130 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218"];
m55_131 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="JobHelperFacts.cs", label="var label = queue != null \r\n                ? $''<a class=\''text-uppercase\'' href=\''{_page.Url.Queue(queue)}\''>{queue}</a>'' \r\n                : $''<span class=\''label label-danger\''><i>{Strings.Common_Unknown}</i></span>''", span="220-222"];
m55_132 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="JobHelperFacts.cs", label="return new NonEscapedString(label);", span="224-224"];
m55_133 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218"];
m55_29 [cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="63-63"];
m55_134 [cluster="Hangfire.Dashboard.UrlHelper.Queue(string)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.UrlHelper.Queue(string)", span="68-68"];
m55_23 [cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="57-57"];
m55_24 [cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="JobHelperFacts.cs", label="metric == null", span="59-59"];
m55_25 [cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="JobHelperFacts.cs", label="throw new ArgumentNullException(nameof(metric));", span="59-59"];
m55_35 [cluster="Unk.And", file="JobHelperFacts.cs", label="Entry Unk.And", span=""];
m55_36 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="JobHelperFacts.cs", label="Entry HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", span="85-85"];
m55_37 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", color=green, community=0, file="JobHelperFacts.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Failed\''', ((string[])(null)))", span="87-87"];
m55_38 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", color=green, community=0, file="JobHelperFacts.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="89-89"];
m55_39 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", color=green, community=0, file="JobHelperFacts.cs", label="2: this.FeatureBackground()", span="91-91"];
m55_73 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="JobHelperFacts.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164"];
m55_117 [cluster="System.Text.StringBuilder.Append(string)", file="JobHelperFacts.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m55_126 [cluster="Unk.Join", file="JobHelperFacts.cs", label="Entry Unk.Join", span=""];
m55_40 [cluster="Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", color=green, community=0, file="JobHelperFacts.cs", label="0: Entry Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", span="6-6"];
m55_41 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m55_42 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobHelperFacts.cs", label="pager == null", span="77-77"];
m55_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobHelperFacts.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m55_8 [cluster="Unk.OnFeatureStart", file="JobHelperFacts.cs", label="Entry Unk.OnFeatureStart", span=""];
m55_9 [cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobHelperFacts.cs", label="throw new ArgumentNullException(nameof(items));", span="42-42"];
m55_10 [cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobHelperFacts.cs", label="return RenderPartial(new Breadcrumbs(title, items));", span="43-43"];
m55_11 [cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m55_74 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="JobHelperFacts.cs", label="testRunner.Then(''the job should be removed from the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="166-166"];
m55_122 [cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m55_123 [cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="JobHelperFacts.cs", label="return String.Join('', '', properties.Select(x => $''{x.Key}: \''{x.Value}\''''));", span="215-215"];
m55_124 [cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m55_0 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", span="34-34"];
m55_1 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="JobHelperFacts.cs", label="page == null", span="36-36"];
m55_3 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="JobHelperFacts.cs", label="_page = page", span="37-37"];
m55_2 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="JobHelperFacts.cs", label="throw new ArgumentNullException(nameof(page));", span="36-36"];
m55_4 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", span="34-34"];
m55_17 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="JobHelperFacts.cs", label="Exit HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46"];
m55_78 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58"];
m55_14 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="JobHelperFacts.cs", label="Entry HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46"];
m55_15 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", color=green, community=0, file="JobHelperFacts.cs", label="0: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Failed state''))", span="48-49"];
m55_16 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="JobHelperFacts.cs", label="HangFire.Tests.States.FailedStateFeature.FeatureSetup(null)", span="51-51"];
m55_116 [cluster="System.Text.StringBuilder.StringBuilder()", file="JobHelperFacts.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m55_143 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250"];
m55_144 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="JobHelperFacts.cs", label="return new NonEscapedString(StackTraceFormatter.FormatHtml(stackTrace, StackTraceHtmlFragments));", span="252-252"];
m55_145 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250"];
m55_149 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="JobHelperFacts.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m55_82 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255"];
m55_147 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="JobHelperFacts.cs", label="return WebUtility.HtmlEncode(text);", span="257-257"];
m55_148 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255"];
m55_121 [cluster="System.Text.StringBuilder.ToString()", file="JobHelperFacts.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m55_53 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobHelperFacts.cs", label="table1.AddRow(new string[] {\r\n                        ''ExceptionDetails'',\r\n                        ''<Non-empty>''})", span="122-124"];
m55_54 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobHelperFacts.cs", label="testRunner.Then(''properties table should contain the following items:'', ((string)(null)), table1, ''Then '')", span="126-126"];
m55_55 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobHelperFacts.cs", label="this.ScenarioCleanup()", span="128-128"];
m55_26 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", color=red, community=0, file="JobHelperFacts.cs", label="0: Entry HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66"];
m55_27 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", color=green, community=0, file="JobHelperFacts.cs", label="0: testRunner.CollectScenarioErrors()", span="68-68"];
m55_87 [cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150"];
m55_88 [cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="JobHelperFacts.cs", label="return Raw($''<span data-moment-title=\''{JobHelper.ToTimestamp(time)}\''>{value}</span>'');", span="152-152"];
m55_89 [cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150"];
m55_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobHelperFacts.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m55_61 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="JobHelperFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="139-139"];
m55_28 [cluster="Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4"];
m55_135 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227"];
m55_136 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobHelperFacts.cs", label="var parts = serverId.Split(':')", span="229-229"];
m55_137 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobHelperFacts.cs", label="var shortenedId = parts.Length > 1\r\n                ? String.Join('':'', parts.Take(parts.Length - 1))\r\n                : serverId", span="230-232"];
m55_138 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobHelperFacts.cs", label="return new NonEscapedString(\r\n                $''<span class=\''labe label-defult text-uppercase\'' title=\''{serverId}\''>{shortenedId}</span>'');", span="234-235"];
m55_139 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227"];
m55_62 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="JobHelperFacts.cs", label="this.FeatureBackground()", span="141-141"];
m55_63 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="JobHelperFacts.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="143-143"];
m55_65 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="JobHelperFacts.cs", label="this.ScenarioCleanup()", span="147-147"];
m55_64 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="JobHelperFacts.cs", label="testRunner.Then(''the job should be added to the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="145-145"];
m55_66 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="JobHelperFacts.cs", label="Exit HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135"];
m55_142 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="JobHelperFacts.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m55_90 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155"];
m55_91 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="duration == null", span="157-157"];
m55_94 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label=displaySign, span="160-160"];
m55_95 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", span="162-162"];
m55_96 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="duration = duration.Value.Duration()", span="165-165"];
m55_92 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="return null;", span="157-157"];
m55_93 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="var builder = new StringBuilder()", span="159-159"];
m55_98 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Append($''{duration.Value.Days}d '')", span="169-169"];
m55_100 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Append($''{duration.Value.Hours}h '')", span="174-174"];
m55_102 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Append($''{duration.Value.Minutes}m '')", span="179-179"];
m55_105 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Append(duration.Value.Seconds)", span="186-186"];
m55_107 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Append($''.{duration.Value.Milliseconds}'')", span="189-189"];
m55_108 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Append(''s '')", span="192-192"];
m55_110 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Append($''{duration.Value.Milliseconds}ms '')", span="198-198"];
m55_111 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Length <= 1", span="203-203"];
m55_112 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Append('' <1ms '')", span="205-205"];
m55_113 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="builder.Remove(builder.Length - 1, 1)", span="208-208"];
m55_114 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="return builder.ToString();", span="210-210"];
m55_97 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="duration.Value.Days > 0", span="167-167"];
m55_99 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="duration.Value.Hours > 0", span="172-172"];
m55_101 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="duration.Value.Minutes > 0", span="177-177"];
m55_103 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="duration.Value.TotalHours < 1", span="182-182"];
m55_104 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="duration.Value.Seconds > 0", span="184-184"];
m55_106 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="duration.Value.Milliseconds > 0", span="187-187"];
m55_109 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="duration.Value.Milliseconds > 0", span="196-196"];
m55_115 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155"];
m55_141 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="JobHelperFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m55_60 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="JobHelperFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the failed set'', ((string[])(null)))", span="137-137"];
m55_67 [cluster="Hangfire.Common.Job.ToString()", file="JobHelperFacts.cs", label="Entry Hangfire.Common.Job.ToString()", span="179-179"];
m55_12 [cluster="Hangfire.Dashboard.Pages.Breadcrumbs.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.Pages.Breadcrumbs.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="6-6"];
m55_68 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125"];
m55_75 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m55_69 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobHelperFacts.cs", label="String.IsNullOrWhiteSpace(stateName)", span="127-127"];
m55_70 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobHelperFacts.cs", label="return Raw($''<em>{Strings.Common_NoState}</em>'');", span="129-129"];
m55_71 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobHelperFacts.cs", label="return Raw($''<span class=\''label label-default\'' style=\''background-color: {JobHistoryRenderer.GetForegroundStateColor(stateName)};\''>{stateName}</span>'');", span="132-132"];
m55_72 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125"];
m55_76 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="JobHelperFacts.cs", label="return Raw($''<a href=\''{_page.Url.JobDetails(jobId)}\''>{JobId(jobId)}</a>'');", span="137-137"];
m55_30 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="JobHelperFacts.cs", label="Entry HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71"];
m55_31 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="JobHelperFacts.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m55_32 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="JobHelperFacts.cs", label="testRunner.And(''the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77"];
m55_33 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="JobHelperFacts.cs", label="Exit HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71"];
m55_83 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m55_84 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="JobHelperFacts.cs", label="return Raw($''<span data-moment=\''{JobHelper.ToTimestamp(value)}\''>{value}</span>'');", span="147-147"];
m55_85 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m55_118 [cluster="System.TimeSpan.Duration()", file="JobHelperFacts.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m55_51 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobHelperFacts.cs", label="table1.AddRow(new string[] {\r\n                        ''ExceptionType'',\r\n                        ''System.InvalidOperationException''})", span="116-118"];
m55_127 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="215-215"];
m55_128 [cluster="lambda expression", file="JobHelperFacts.cs", label="$''{x.Key}: \''{x.Value}\''''", span="215-215"];
m55_129 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="215-215"];
m55_43 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobHelperFacts.cs", label="throw new ArgumentNullException(nameof(pager));", span="77-77"];
m55_45 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m55_46 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", span="6-6"];
m55_47 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", color=red, community=0, file="JobHelperFacts.cs", label="0: partialPage.Assign(_page)", span="83-83"];
m55_48 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="JobHelperFacts.cs", label="return new NonEscapedString(partialPage.ToString());", span="84-84"];
m55_49 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81"];
m55_50 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="74-74"];
m55_125 [cluster="Unk.Select", file="JobHelperFacts.cs", label="Entry Unk.Select", span=""];
m55_140 [cluster="string.Split(params char[])", file="JobHelperFacts.cs", label="Entry string.Split(params char[])", span="0-0"];
m55_44 [cluster="Unk.Then", color=red, community=0, file="JobHelperFacts.cs", label="0: Entry Unk.Then", span=""];
m55_77 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="JobHelperFacts.cs", label="HangFire.Tests.States.FailedStateFeature", span=""];
m55_79 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m55_80 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="JobHelperFacts.cs", label="return Raw($''<a class=\''job-method\'' href=\''{_page.Url.JobDetails(jobId)}\''>{HtmlEncode(JobName(job))}</a>'');", span="142-142"];
m55_81 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="JobHelperFacts.cs", label="Exit Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m55_34 [cluster="Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4"];
m55_146 [cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="JobHelperFacts.cs", label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77"];
m55_120 [cluster="System.Text.StringBuilder.Remove(int, int)", file="JobHelperFacts.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m55_13 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="JobHelperFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81"];
m55_150 [file="JobHelperFacts.cs", label="Hangfire.Dashboard.HtmlHelper", span=""];
m56_62 [cluster="HangFire.Web.JobHistoryRenderer.FailedRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry HangFire.Web.JobHistoryRenderer.FailedRenderer(System.Collections.Generic.IDictionary<string, string>)", span="116-116"];
m56_63 [cluster="HangFire.Web.JobHistoryRenderer.FailedRenderer(System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="JobHistoryRenderer.cs", label="0: var stackTrace = HtmlHelper.MarkupStackTrace(stateData[''ExceptionDetails'']).ToHtmlString()", span="118-118"];
m56_64 [cluster="HangFire.Web.JobHistoryRenderer.FailedRenderer(System.Collections.Generic.IDictionary<string, string>)", color=red, community=2, file="JobHistoryRenderer.cs", label="0: return new HtmlString(String.Format(\r\n                ''<h4 class=\''exception-type\''>{0}</h4><p>{1}</p>{2}'',\r\n                stateData[''ExceptionType''],\r\n                stateData[''ExceptionMessage''],\r\n                stackTrace != null ? ''<pre class=\''stack-trace\''>'' + stackTrace + ''</pre>'' : null));", span="119-123"];
m56_65 [cluster="HangFire.Web.JobHistoryRenderer.FailedRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit HangFire.Web.JobHistoryRenderer.FailedRenderer(System.Collections.Generic.IDictionary<string, string>)", span="116-116"];
m56_66 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="JobHistoryRenderer.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115"];
m56_10 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(ProcessingState.StateName, ''#FCEFDC'')", span="47-47"];
m56_9 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(FailedState.StateName, ''#FAEBEA'')", span="46-46"];
m56_39 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="89-89"];
m56_95 [cluster="string.Format(string, object, object)", file="JobHistoryRenderer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m56_91 [cluster="HangFire.Web.JobHistoryRenderer.ScheduledRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry HangFire.Web.JobHistoryRenderer.ScheduledRenderer(System.Collections.Generic.IDictionary<string, string>)", span="168-168"];
m56_92 [cluster="HangFire.Web.JobHistoryRenderer.ScheduledRenderer(System.Collections.Generic.IDictionary<string, string>)", color=red, community=2, file="JobHistoryRenderer.cs", label="0: return new HtmlString(String.Format(\r\n                ''<dl class=\''dl-horizontal\''><dt>Enqueue at:</dt><dd data-moment=\''{0}\''>{1}</dd></dl>'',\r\n                stateData[''EnqueueAt''],\r\n                JobHelper.FromStringTimestamp(stateData[''EnqueueAt''])));", span="170-173"];
m56_93 [cluster="HangFire.Web.JobHistoryRenderer.ScheduledRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit HangFire.Web.JobHistoryRenderer.ScheduledRenderer(System.Collections.Generic.IDictionary<string, string>)", span="168-168"];
m56_55 [cluster="System.Text.StringBuilder.Append(string)", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m56_57 [cluster="System.TimeSpan.FromMilliseconds(double)", file="JobHistoryRenderer.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m56_29 [cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="JobHistoryRenderer.cs", label="Exit HangFire.Web.JobHistoryRenderer.Exists(string)", span="71-71"];
m56_24 [cluster="HangFire.Web.JobHistoryRenderer.Register(string, System.Func<System.Collections.Generic.IDictionary<string, string>, IHtmlString>)", file="JobHistoryRenderer.cs", label="Renderers[state] = renderer", span="67-67"];
m56_30 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="36-36"];
m56_31 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="new ClientExceptionContext(_createContext, null)", span="36-36"];
m56_32 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="36-36"];
m56_90 [cluster="string.Format(string, object)", file="JobHistoryRenderer.cs", label="Entry string.Format(string, object)", span="0-0"];
m56_25 [cluster="HangFire.Web.JobHistoryRenderer.Register(string, System.Func<System.Collections.Generic.IDictionary<string, string>, IHtmlString>)", file="JobHistoryRenderer.cs", label="Exit HangFire.Web.JobHistoryRenderer.Register(string, System.Func<System.Collections.Generic.IDictionary<string, string>, IHtmlString>)", span="59-59"];
m56_26 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobHistoryRenderer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m56_27 [cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="JobHistoryRenderer.cs", label="Entry HangFire.Web.JobHistoryRenderer.Exists(string)", span="71-71"];
m56_28 [cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="JobHistoryRenderer.cs", label="return Renderers.ContainsKey(state);", span="73-73"];
m56_15 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(FailedState.StateName, ''#d9534f'')", span="53-53"];
m56_41 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''Latency'')", span="93-93"];
m56_94 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="JobHistoryRenderer.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m56_19 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Exit HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", span="35-35"];
m56_54 [cluster="System.Text.StringBuilder.StringBuilder()", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m56_33 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="JobHistoryRenderer.cs", label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", span="42-42"];
m56_20 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="29-29"];
m56_22 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="29-29"];
m56_23 [cluster="HangFire.Client.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="JobHistoryRenderer.cs", label="Entry HangFire.Client.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="26-26"];
m56_86 [cluster="string.ToUpperInvariant()", file="JobHistoryRenderer.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m56_40 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var itemsAdded = false", span="91-91"];
m56_56 [cluster="int.Parse(string)", file="JobHistoryRenderer.cs", label="Entry int.Parse(string)", span="0-0"];
m56_61 [cluster="System.Text.StringBuilder.ToString()", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m56_60 [cluster="HtmlString.cstr", file="JobHistoryRenderer.cs", label="Entry HtmlString.cstr", span=""];
m56_59 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m56_58 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHistoryRenderer.cs", label="Entry HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m56_87 [cluster="HangFire.Web.JobHistoryRenderer.EnqueuedRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry HangFire.Web.JobHistoryRenderer.EnqueuedRenderer(System.Collections.Generic.IDictionary<string, string>)", span="161-161"];
m56_88 [cluster="HangFire.Web.JobHistoryRenderer.EnqueuedRenderer(System.Collections.Generic.IDictionary<string, string>)", color=red, community=2, file="JobHistoryRenderer.cs", label="0: return new HtmlString(String.Format(\r\n                ''<dl class=\''dl-horizontal\''><dt>Queue:</dt><dd><span class=\''label label-queue label-primary\''>{0}</span></dd></dl>'',\r\n                stateData[''Queue'']));", span="163-165"];
m56_89 [cluster="HangFire.Web.JobHistoryRenderer.EnqueuedRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit HangFire.Web.JobHistoryRenderer.EnqueuedRenderer(System.Collections.Generic.IDictionary<string, string>)", span="161-161"];
m56_69 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", span="126-126"];
m56_70 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var builder = new StringBuilder()", span="128-128"];
m56_73 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''ServerId'')", span="133-133"];
m56_74 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="serverId = stateData[''ServerId'']", span="135-135"];
m56_75 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''ServerName'')", span="137-137"];
m56_76 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="serverId = stateData[''ServerName'']", span="139-139"];
m56_80 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''WorkerNumber'')", span="150-150"];
m56_82 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dd>#{0}</dd>'', stateData[''WorkerNumber''])", span="153-153"];
m56_71 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="129-129"];
m56_78 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dt>Server:</dt>'')", span="144-144"];
m56_79 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(\r\n                    ''<dd><span class=\''label label-default\''>{0}</span></dd>'',\r\n                    serverId.ToUpperInvariant())", span="145-147"];
m56_81 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dt>Worker:</dt>'')", span="152-152"];
m56_83 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''</dl>'')", span="156-156"];
m56_84 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="JobHistoryRenderer.cs", label="0: return new HtmlString(builder.ToString());", span="158-158"];
m56_72 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="string serverId = null", span="131-131"];
m56_77 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="serverId != null", span="142-142"];
m56_85 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", span="126-126"];
m56_67 [cluster="Unk.ToHtmlString", file="JobHistoryRenderer.cs", label="Entry Unk.ToHtmlString", span=""];
m56_34 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="JobHistoryRenderer.cs", label="var exception = new Exception()", span="44-44"];
m56_35 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="JobHistoryRenderer.cs", label="var context = new ClientExceptionContext(_createContext, exception)", span="45-45"];
m56_36 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="JobHistoryRenderer.cs", label="Assert.Same(exception, context.Exception)", span="47-47"];
m56_37 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", span="86-86"];
m56_38 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var builder = new StringBuilder()", span="88-88"];
m56_0 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Entry HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", span="35-35"];
m56_5 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", color=green, community=0, file="JobHistoryRenderer.cs", label="0: Register(ScheduledState.StateName, ScheduledRenderer)", span="41-41"];
m56_1 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(SucceededState.StateName, SucceededRenderer)", span="37-37"];
m56_2 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(FailedState.StateName, FailedRenderer)", span="38-38"];
m56_3 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(ProcessingState.StateName, ProcessingRenderer)", span="39-39"];
m56_4 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(EnqueuedState.StateName, EnqueuedRenderer)", span="40-40"];
m56_6 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(DeletedState.StateName, NullRenderer)", span="42-42"];
m56_12 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(DeletedState.StateName, ''#ddd'')", span="49-49"];
m56_14 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(SucceededState.StateName, ''#5cb85c'')", span="52-52"];
m56_13 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(EnqueuedState.StateName, ''#999'')", span="51-51"];
m56_21 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobHistoryRenderer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m56_11 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(ScheduledState.StateName, ''#E0F3F8'')", span="48-48"];
m56_16 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(ProcessingState.StateName, ''#f0ad4e'')", span="54-54"];
m56_17 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(ScheduledState.StateName, ''#5bc0de'')", span="55-55"];
m56_18 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(DeletedState.StateName, ''#777'')", span="56-56"];
m56_42 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", span=""];
m56_45 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''PerformanceDuration'')", span="101-101"];
m56_46 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var duration = TimeSpan.FromMilliseconds(int.Parse(stateData[''PerformanceDuration'']))", span="103-103"];
m56_43 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dt>Latency:</dt><dd>{0}</dd>'', HtmlHelper.ToHumanDuration(latency, false))", span="96-96"];
m56_47 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dt>Duration:</dt><dd>{0}</dd>'', HtmlHelper.ToHumanDuration(duration, false))", span="104-104"];
m56_49 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''</dl>'')", span="109-109"];
m56_52 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="JobHistoryRenderer.cs", label="0: return new HtmlString(builder.ToString());", span="113-113"];
m56_50 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="!itemsAdded", span="111-111"];
m56_44 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="itemsAdded = true", span="98-98"];
m56_48 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="itemsAdded = true", span="106-106"];
m56_51 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return null;", span="111-111"];
m56_53 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", span="86-86"];
m56_68 [cluster="Unk.Format", file="JobHistoryRenderer.cs", label="Entry Unk.Format", span=""];
m56_8 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(SucceededState.StateName, ''#EDF7ED'')", span="45-45"];
m56_7 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(EnqueuedState.StateName, ''#F5F5F5'')", span="44-44"];
m57_54 [cluster="HangFire.Web.JobMethodCallRenderer.Encode(string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Encode(string)", span="147-147"];
m57_84 [cluster="HangFire.Web.JobMethodCallRenderer.Encode(string)", file="JobMethodCallRenderer.cs", label="return HttpUtility.HtmlEncode(value);", span="149-149"];
m57_85 [cluster="HangFire.Web.JobMethodCallRenderer.Encode(string)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.Encode(string)", span="147-147"];
m57_53 [cluster="System.Text.StringBuilder.Append(string)", file="JobMethodCallRenderer.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m57_86 [cluster="Unk.HtmlEncode", file="JobMethodCallRenderer.cs", label="Entry Unk.HtmlEncode", span=""];
m57_106 [cluster="string.Format(string, object)", file="JobMethodCallRenderer.cs", label="Entry string.Format(string, object)", span="0-0"];
m57_71 [cluster="HangFire.Web.JobMethodCallRenderer.Span(string, string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Span(string, string)", span="139-139"];
m57_80 [cluster="HangFire.Web.JobMethodCallRenderer.Span(string, string)", color=green, community=0, file="JobMethodCallRenderer.cs", label="0: return String.Format(\r\n                ''<span class=\''{0}\''>{1}</span>'', \r\n                HttpUtility.HtmlAttributeEncode(@class), \r\n                value);", span="141-144"];
m57_81 [cluster="HangFire.Web.JobMethodCallRenderer.Span(string, string)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.Span(string, string)", span="139-139"];
m57_14 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.AppendLine()", span="49-49"];
m57_15 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append(Encode(serviceName))", span="51-51"];
m57_142 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="JobMethodCallRenderer.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m57_51 [cluster="System.Text.StringBuilder.StringBuilder()", file="JobMethodCallRenderer.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m57_55 [cluster="System.Text.StringBuilder.AppendLine()", file="JobMethodCallRenderer.cs", label="Entry System.Text.StringBuilder.AppendLine()", span="0-0"];
m57_107 [cluster="System.Func<T, TResult>.Invoke(T)", file="JobMethodCallRenderer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m57_9 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.AppendLine()", span="37-37"];
m57_82 [cluster="Unk.HtmlAttributeEncode", file="JobMethodCallRenderer.cs", label="Entry Unk.HtmlAttributeEncode", span=""];
m57_65 [cluster="System.Text.StringBuilder.ToString()", file="JobMethodCallRenderer.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m57_7 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append('';'')", span="35-35"];
m57_50 [cluster="HtmlString.cstr", file="JobMethodCallRenderer.cs", label="Entry HtmlString.cstr", span=""];
m57_77 [cluster="HangFire.Web.JobMethodCallRenderer.WrapComment(string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapComment(string)", span="134-134"];
m57_78 [cluster="HangFire.Web.JobMethodCallRenderer.WrapComment(string)", file="JobMethodCallRenderer.cs", label="return Span(''comment'', value);", span="136-136"];
m57_79 [cluster="HangFire.Web.JobMethodCallRenderer.WrapComment(string)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapComment(string)", span="134-134"];
m57_58 [cluster="HangFire.Web.JobMethodCallRenderer.WrapType(string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapType(string)", span="124-124"];
m57_72 [cluster="HangFire.Web.JobMethodCallRenderer.WrapType(string)", file="JobMethodCallRenderer.cs", label="return Span(''type'', value);", span="126-126"];
m57_73 [cluster="HangFire.Web.JobMethodCallRenderer.WrapType(string)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapType(string)", span="124-124"];
m57_105 [cluster="Unk.AppendFormat", file="JobMethodCallRenderer.cs", label="Entry Unk.AppendFormat", span=""];
m57_118 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="243-243"];
m57_136 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="return IsNumericType(Nullable.GetUnderlyingType(type));", span="265-265"];
m57_119 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="type == null", span="245-245"];
m57_121 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="Type.GetTypeCode(type)", span="247-247"];
m57_135 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="IsNullableType(type)", span="263-263"];
m57_133 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="return true;", span="260-260"];
m57_120 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="return false;", span="245-245"];
m57_137 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="return false;", span="267-267"];
m57_138 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="return false;", span="269-269"];
m57_122 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.Byte", span="249-249"];
m57_134 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.Object", span="262-262"];
m57_132 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.UInt64", span="259-259"];
m57_123 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.Decimal", span="250-250"];
m57_131 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.UInt32", span="258-258"];
m57_124 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.Double", span="251-251"];
m57_130 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.UInt16", span="257-257"];
m57_125 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.Int16", span="252-252"];
m57_129 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.Single", span="256-256"];
m57_126 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.Int32", span="253-253"];
m57_128 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.SByte", span="255-255"];
m57_127 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="TypeCode.Int64", span="254-254"];
m57_139 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="243-243"];
m57_87 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="158-158"];
m57_88 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="JobMethodCallRenderer.cs", label="_enclosingString = ''\''''", span="160-160"];
m57_89 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="JobMethodCallRenderer.cs", label="_valueRenderer = WrapString", span="161-161"];
m57_90 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="158-158"];
m57_52 [cluster="HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", span="119-119"];
m57_69 [cluster="HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", file="JobMethodCallRenderer.cs", label="return Span(''keyword'', value);", span="121-121"];
m57_70 [cluster="HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", span="119-119"];
m57_74 [cluster="HangFire.Web.JobMethodCallRenderer.WrapString(string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapString(string)", span="129-129"];
m57_75 [cluster="HangFire.Web.JobMethodCallRenderer.WrapString(string)", file="JobMethodCallRenderer.cs", label="return Span(''string'', value);", span="131-131"];
m57_76 [cluster="HangFire.Web.JobMethodCallRenderer.WrapString(string)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapString(string)", span="129-129"];
m57_10 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="!job.Method.IsStatic", span="39-39"];
m57_11 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", color=red, community=0, file="JobMethodCallRenderer.cs", label="2: var serviceName = Char.ToLower(job.Type.Name[0]) + job.Type.Name.Substring(1)", span="41-41"];
m57_12 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append(WrapType(job.Type.Name))", span="43-43"];
m57_0 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="JobMethodCallRenderer.cs", label="Entry Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12"];
m57_1 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=green, community=0, file="JobMethodCallRenderer.cs", label="0: Connection = new Mock<IStorageConnection>()", span="14-14"];
m57_2 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=green, community=0, file="JobMethodCallRenderer.cs", label="0: BackgroundJob = new BackgroundJobMock()", span="15-15"];
m57_3 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="JobMethodCallRenderer.cs", label="CancellationToken = new Mock<IJobCancellationToken>()", span="16-16"];
m57_48 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", color=green, community=0, file="JobMethodCallRenderer.cs", label="0: return new HtmlString(builder.ToString());", span="111-111"];
m57_47 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append('');'')", span="109-109"];
m57_6 [cluster="Mock<IStorageConnection>.cstr", file="JobMethodCallRenderer.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m57_13 [cluster="PerformContext.cstr", file="JobMethodCallRenderer.cs", label="Entry PerformContext.cstr", span=""];
m57_16 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="Hangfire.Core.Tests.PerformContextMock", span=""];
m57_18 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append(Encode(job.Method.Name))", span="59-59"];
m57_20 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="var parameters = job.Method.GetParameters()", span="62-62"];
m57_27 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="i < job.Arguments.Length", span="72-72"];
m57_28 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="var argument = job.Arguments[i]", span="74-74"];
m57_4 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=red, community=0, file="JobMethodCallRenderer.cs", label="2: _context = new Lazy<PerformContext>(\r\n                () => new PerformContext(Connection.Object, BackgroundJob.Object, CancellationToken.Object))", span="18-19"];
m57_5 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="JobMethodCallRenderer.cs", label="Exit Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12"];
m57_8 [cluster="Mock<IJobCancellationToken>.cstr", file="JobMethodCallRenderer.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m57_17 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append(''.'')", span="58-58"];
m57_19 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append(''('')", span="60-60"];
m57_39 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.AppendLine()", span="93-93"];
m57_40 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append(''    '')", span="94-94"];
m57_42 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append('' '')", span="98-98"];
m57_43 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append(renderedArgument)", span="101-101"];
m57_45 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="builder.Append('','')", span="105-105"];
m57_36 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="i < renderedArguments.Count", span="88-88"];
m57_21 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="var renderedArguments = new List<string>(parameters.Length)", span="63-63"];
m57_25 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="i < parameters.Length", span="68-68"];
m57_26 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="var parameter = parameters[i]", span="70-70"];
m57_24 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="var i = 0", span="68-68"];
m57_33 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="renderedArguments.Add(Encode(''<NO VALUE>''))", span="84-84"];
m57_29 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="var argumentRenderer = ArgumentRenderer.GetRenderer(parameter.ParameterType)", span="76-76"];
m57_30 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="var renderedArgument = argumentRenderer.Render(parameter.Name, argument)", span="78-78"];
m57_38 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="renderedArgumentsTotalLength > splitStringMinLength", span="91-91"];
m57_41 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="i > 0", span="96-96"];
m57_37 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="var renderedArgument = renderedArguments[i]", span="90-90"];
m57_44 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="i < renderedArguments.Count - 1", span="103-103"];
m57_46 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="i++", span="88-88"];
m57_35 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="int i = 0", span="88-88"];
m57_22 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="var renderedArgumentsTotalLength = 0", span="64-64"];
m57_31 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="renderedArguments.Add(renderedArgument)", span="79-79"];
m57_34 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="i++", span="68-68"];
m57_23 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="int splitStringMinLength = 200", span="66-66"];
m57_32 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="renderedArgumentsTotalLength += renderedArgument.Length", span="80-80"];
m57_49 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", span="26-26"];
m57_66 [cluster="HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", span="114-114"];
m57_67 [cluster="HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", file="JobMethodCallRenderer.cs", label="return value;", span="116-116"];
m57_68 [cluster="HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", span="114-114"];
m57_141 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="272-272"];
m57_143 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="JobMethodCallRenderer.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="274-274"];
m57_144 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="272-272"];
m57_56 [cluster="char.ToLower(char)", file="JobMethodCallRenderer.cs", label="Entry char.ToLower(char)", span="0-0"];
m57_61 [cluster="System.Collections.Generic.List<T>.List(int)", file="JobMethodCallRenderer.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m57_64 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobMethodCallRenderer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m57_62 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="201-201"];
m57_108 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="IsNumericType(type)", span="203-203"];
m57_110 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="type == typeof(bool)", span="212-212"];
m57_112 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="type == typeof(char)", span="221-221"];
m57_114 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="type == typeof(string) || type == typeof(object)", span="229-229"];
m57_116 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="return new ArgumentRenderer\r\n                {\r\n                    _deserializationType = type,\r\n                };", span="237-240"];
m57_109 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = String.Empty,\r\n                        _valueRenderer = WrapIdentifier\r\n                    };", span="205-209"];
m57_111 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _valueRenderer = WrapKeyword,\r\n                        _enclosingString = String.Empty,\r\n                    };", span="214-218"];
m57_113 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''''',\r\n                    };", span="223-226"];
m57_115 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''\'''',\r\n                    };", span="231-234"];
m57_117 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="201-201"];
m57_83 [cluster="Unk.Format", file="JobMethodCallRenderer.cs", label="Entry Unk.Format", span=""];
m57_145 [cluster="System.Type.GetGenericTypeDefinition()", file="JobMethodCallRenderer.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m57_63 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", span="164-164"];
m57_103 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="return builder.ToString();", span="198-198"];
m57_95 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="builder.AppendFormat(\r\n                        ''<span title=\''{0}:\'' data-placement=\''left\''>'', \r\n                        HttpUtility.HtmlAttributeEncode(name))", span="175-177"];
m57_93 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="var builder = new StringBuilder()", span="171-171"];
m57_98 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="builder.Append(_valueRenderer(Encode(_enclosingString + value + _enclosingString)))", span="186-186"];
m57_97 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="builder.Append(WrapIdentifier(\r\n                        String.Format(''Deserialize<{0}>('', WrapType(_deserializationType.Name))))", span="182-183"];
m57_100 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="builder.Append('')'')", span="190-190"];
m57_102 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="builder.Append(''</span>'')", span="195-195"];
m57_101 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="name != null", span="193-193"];
m57_92 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="return WrapKeyword(''null'');", span="168-168"];
m57_94 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="name != null", span="173-173"];
m57_96 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="_deserializationType != null", span="180-180"];
m57_91 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="value == null", span="166-166"];
m57_99 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="_deserializationType != null", span="188-188"];
m57_104 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", span="164-164"];
m57_60 [cluster="System.Reflection.MethodBase.GetParameters()", file="JobMethodCallRenderer.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m57_140 [cluster="System.Type.GetTypeCode(System.Type)", file="JobMethodCallRenderer.cs", label="Entry System.Type.GetTypeCode(System.Type)", span="0-0"];
m57_59 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="JobMethodCallRenderer.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m57_57 [cluster="string.Substring(int)", file="JobMethodCallRenderer.cs", label="Entry string.Substring(int)", span="0-0"];
m57_146 [file="JobMethodCallRenderer.cs", label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", span=""];
m58_10 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="JsonStats.cs", label="var connection = CreateAndOpenConnection()", span="44-44"];
m58_12 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="JsonStats.cs", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="34-34"];
m58_13 [cluster="Unk.SerializeObject", file="JsonStats.cs", label="Entry Unk.SerializeObject", span=""];
m58_16 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="JsonStats.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="51-51"];
m58_17 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="JsonStats.cs", label="return new SqlServerMonitoringApi(CreateAndOpenConnection());", span="53-53"];
m58_18 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="JsonStats.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="51-51"];
m58_24 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="JsonStats.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="61-61"];
m58_25 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="JsonStats.cs", label="yield return new ExpirationManager(this);", span="63-63"];
m58_26 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="JsonStats.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="61-61"];
m58_15 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="JsonStats.cs", label="HangFire.Web.JsonStats", span=""];
m58_27 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="JsonStats.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m58_9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="JsonStats.cs", label="options.PrepareSchemaIfNecessary", span="42-42"];
m58_20 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="JsonStats.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="56-56"];
m58_21 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="JsonStats.cs", label="return new SqlServerConnection(CreateAndOpenConnection(), _options);", span="58-58"];
m58_22 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="JsonStats.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="56-56"];
m58_19 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="JsonStats.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="35-35"];
m58_33 [cluster="Unk.Open", file="JsonStats.cs", label="Entry Unk.Open", span=""];
m58_14 [cluster="Unk.Write", file="JsonStats.cs", label="Entry Unk.Write", span=""];
m58_28 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="JsonStats.cs", label="var connection = new SqlConnection(_connectionString)", span="68-68"];
m58_29 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="JsonStats.cs", label="connection.Open()", span="69-69"];
m58_30 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="JsonStats.cs", label="return connection;", span="71-71"];
m58_31 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="JsonStats.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="66-66"];
m58_23 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="JsonStats.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
m58_2 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs", label="2: var response = monitoring.GetStatistics()", span="28-28"];
m58_5 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs", label="0: Response.ContentType = ''application/json''", span="37-37"];
m58_3 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=2, file="JsonStats.cs", label="0: var settings = new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                }", span="31-34"];
m58_6 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs", label="0: Response.ContentEncoding = Encoding.UTF8", span="38-38"];
m58_7 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs", label="0: Response.Write(serialized)", span="39-39"];
m58_8 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs", label="Exit HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m58_4 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs", label="2: var serialized = JsonConvert.SerializeObject(response, settings)", span="35-35"];
m58_11 [cluster="JsonSerializerSettings.cstr", file="JsonStats.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m58_32 [cluster="SqlConnection.cstr", file="JsonStats.cs", label="Entry SqlConnection.cstr", span=""];
m58_0 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs", label="Entry HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m58_1 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs", label="0: var monitoring = JobStorage.Current.GetMonitoringApi()", span="26-26"];
m58_34 [file="JsonStats.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m60_101 [cluster="HangFire.Storage.IMonitoringApi.GetStatistics()", file="LayoutPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.GetStatistics()", span="27-27"];
m60_98 [cluster="HangFire.Web.RazorPage.Write(object)", file="LayoutPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m60_97 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="LayoutPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m60_100 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="LayoutPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m60_104 [cluster="string.IsNullOrEmpty(string)", file="LayoutPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m60_103 [cluster="Unk.StartsWith", file="LayoutPage.generated.cs", label="Entry Unk.StartsWith", span=""];
m60_0 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.Execute()", span="51-51"];
m60_5 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: Write(Request.LinkTo(''/css/styles.css''))", span="79-79"];
m60_4 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral('' - HangFire</title>\r\n    <meta charset=\''utf-8\'' />\r\n    <meta name=\''viewport\'' cont'' +\r\n''ent=\''width=device-width, initial-scale=1.0\''>\r\n    <link rel=\''stylesheet\'' href=\'''')", span="73-74"];
m60_6 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(@'''''' />\r\n</head>\r\n    <body>\r\n        <!-- Wrap all page content here -->\r\n        <div id=''''wrap''''>\r\n\r\n            <!-- Fixed navbar -->\r\n            <div class=''''navbar navbar-default navbar-static-top''''>\r\n                <div class=''''container''''>\r\n                    <div class=''''navbar-header''''>\r\n                        <button type=''''button'''' class=''''navbar-toggle'''' data-toggle=''''collapse'''' data-target=''''.navbar-collapse''''>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                        </button>\r\n                        <a class=''''navbar-brand'''' href='''''')", span="84-99"];
m60_8 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(@''''''>HangFire Monitor</a>\r\n                    </div>\r\n                    <div class=''''collapse navbar-collapse''''>\r\n                        <ul class=''''nav navbar-nav navbar-right''''>\r\n                            <li>\r\n                                <a href=''''/''''>\r\n                                    <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                    Back to site\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--/.nav-collapse -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n\r\n            <div class=''''container''''>\r\n                <div class=''''col-md-3''''>\r\n'')", span="109-129"];
m60_7 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/''))", span="104-104"];
m60_9 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: StatisticsDto statistics", span="135-135"];
m60_10 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=2, file="LayoutPage.generated.cs", label="0: var monitor = JobStorage.Current.GetMonitoringApi()", span="136-136"];
m60_11 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="statistics = monitor.GetStatistics()", span="138-138"];
m60_27 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: Write(statistics.Enqueued)", span="227-227"];
m60_26 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(''\''>\r\n                            <span class=\''label label-default pull-right\''>\r\n  '' +\r\n''                              <span id=\''stats-enqueued\'' title=\''Enqueued jobs cou'' +\r\n''nt\''>\r\n                                    '')", span="220-222"];
m60_28 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(''\r\n                                </span>\r\n                                / \r\n  '' +\r\n''                              <span id=\''stats-queues\'' title=\''Queues count\''>\r\n   '' +\r\n''                                 '')", span="232-234"];
m60_22 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(''</span>\r\n                            <span class=\''glyphicon glyphicon-hdd\''></span'' +\r\n''>\r\n                            Active Servers\r\n                        </a>\r\n\r\n '' +\r\n''                       <a class=\''list-group-item '')", span="198-200"];
m60_21 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Servers)", span="193-193"];
m60_23 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: Write(Request.PathInfo.StartsWith(''/queues'') ? ''active'' : null)", span="205-205"];
m60_24 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="210-210"];
m60_25 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: Write(Request.LinkTo(''/queues''))", span="215-215"];
m60_29 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Queues)", span="239-239"];
m60_30 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(@''\r\n                                </span>\r\n                            </span>\r\n                            <span class=''''glyphicon glyphicon-inbox''''></span>\r\n                            Jobs & Queues\r\n                        </a>\r\n                        <a class=''''list-group-item stats-indent '')", span="244-250"];
m60_31 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/scheduled'') ? ''active'' : null)", span="255-255"];
m60_62 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(''                        <ol class=\''breadcrumb\''>\r\n                            <li>'' +\r\n''<a href=\'''')", span="426-427"];
m60_61 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Breadcrumbs != null", span="420-420"];
m60_63 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/''))", span="432-432"];
m60_72 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: Write(BreadcrumbsTitle ?? Title)", span="483-483"];
m60_71 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                            <li class=\''active\''>'')", span="478-478"];
m60_73 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</li>\r\n                        </ol>\r\n'')", span="488-488"];
m60_75 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: Write(Title)", span="503-503"];
m60_74 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                    <h1 class=\''page-header\''>\r\n                        '')", span="498-498"];
m60_76 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n'')", span="508-508"];
m60_77 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: !String.IsNullOrEmpty(Subtitle)", span="513-513"];
m60_78 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                            <small>'')", span="519-519"];
m60_81 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                    </h1>\r\n                    '')", span="539-539"];
m60_83 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(@''\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://hangfire.io/'''' target=''''_blank''''>HangFire \r\n                            '')", span="549-559"];
m60_82 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(RenderBody())", span="544-544"];
m60_84 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: Write(FileVersionInfo.GetVersionInfo(GetType().Assembly.Location).ProductVersion)", span="564-564"];
m60_85 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>'')", span="569-570"];
m60_91 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(@'' ms]\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n        <script>\r\n            (function (hangFire) {\r\n                hangFire.config = {\r\n                    pollInterval: 2000,\r\n                    pollUrl: ''')", span="600-610"];
m60_90 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write((DateTime.UtcNow - (DateTime)Context.Items[''GenerationStartedAt'']).Milliseconds)", span="595-595"];
m60_92 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: Write(Request.LinkTo(''/stats''))", span="615-615"];
m60_93 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(''\'\r\n                };\r\n            })(window.HangFire = window.HangFire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="620-621"];
m60_94 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/js/scripts.js''))", span="626-626"];
m60_1 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n'')", span="55-55"];
m60_2 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''<!DOCTYPE html>\r\n\r\n<html lang=\''ru\''>\r\n<head>\r\n    <title>'')", span="63-63"];
m60_3 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Title)", span="68-68"];
m60_12 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                    <div id=\''stats\'' class=\''list-group\''>\r\n                      '' +\r\n''  <a class=\''list-group-item '')", span="145-146"];
m60_13 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/'') ? ''active'' : null)", span="151-151"];
m60_14 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="156-156"];
m60_15 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/''))", span="161-161"];
m60_16 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''glyphicon glyphicon-dashboard\''></spa'' +\r\n''n>\r\n                            Dashboard\r\n                        </a>\r\n\r\n     '' +\r\n''                   <a class=\''list-group-item '')", span="166-168"];
m60_17 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/servers'') ? ''active'' : null)", span="173-173"];
m60_18 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="178-178"];
m60_19 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/servers''))", span="183-183"];
m60_20 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''label label-default pull-right\''>'')", span="188-188"];
m60_32 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="260-260"];
m60_33 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/scheduled''))", span="265-265"];
m60_34 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-scheduled\'' class=\''label label-inf'' +\r\n''o pull-right\''>\r\n                                '')", span="270-271"];
m60_35 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Scheduled)", span="276-276"];
m60_36 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Scheduled\r\n   '' +\r\n''                     </a>\r\n                        <a class=\''list-group-item sta'' +\r\n''ts-indent '')", span="281-283"];
m60_37 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/processing'') ? ''active'' : null)", span="288-288"];
m60_38 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="293-293"];
m60_39 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/processing''))", span="298-298"];
m60_40 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-processing\'' class=\''label label-wa'' +\r\n''rning pull-right\''>\r\n                                '')", span="303-304"];
m60_41 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Processing)", span="309-309"];
m60_42 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Processing\r\n  '' +\r\n''                      </a>\r\n                        <a class=\''list-group-item st'' +\r\n''ats-indent '')", span="314-316"];
m60_43 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/succeeded'') ? ''active'' : null)", span="321-321"];
m60_44 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="326-326"];
m60_45 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/succeeded''))", span="331-331"];
m60_46 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-succeeded\'' class=\''label label-suc'' +\r\n''cess pull-right\''>\r\n                                '')", span="336-337"];
m60_47 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Succeeded)", span="342-342"];
m60_48 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Succeeded\r\n   '' +\r\n''                     </a>\r\n                        <a class=\''list-group-item sta'' +\r\n''ts-indent '')", span="347-349"];
m60_49 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/failed'') ? ''active'' : null)", span="354-354"];
m60_50 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="359-359"];
m60_51 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/failed''))", span="364-364"];
m60_52 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-failed\'' class=\''label label-danger'' +\r\n'' pull-right\''>\r\n                                '')", span="369-370"];
m60_53 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Failed)", span="375-375"];
m60_54 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Failed\r\n      '' +\r\n''                  </a>\r\n                        <a class=\''list-group-item stats-'' +\r\n''indent '')", span="380-382"];
m60_55 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/deleted'') ? ''active'' : null)", span="387-387"];
m60_56 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="392-392"];
m60_57 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/deleted''))", span="397-397"];
m60_58 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-deleted\'' class=\''label label-defau'' +\r\n''lt pull-right\''>\r\n                                '')", span="402-403"];
m60_59 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Deleted)", span="408-408"];
m60_60 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Deleted\r\n     '' +\r\n''                   </a>\r\n                    </div>\r\n                </div>\r\n   '' +\r\n''             <div class=\''col-md-9\''>\r\n'')", span="413-415"];
m60_64 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''><span class=\''glyphicon glyphicon-home\''></span></a></li>\r\n'')", span="437-437"];
m60_65 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label=Breadcrumbs, span="442-442"];
m60_66 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                                <li><a href=\'''')", span="448-448"];
m60_67 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(breadcrumb.Value)", span="453-453"];
m60_68 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>'')", span="458-458"];
m60_69 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(breadcrumb.Key)", span="463-463"];
m60_70 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</a></li>\r\n'')", span="468-468"];
m60_79 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Subtitle)", span="524-524"];
m60_80 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</small>\r\n'')", span="529-529"];
m60_86 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(JobStorage.Current)", span="575-575"];
m60_87 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</li>\r\n                    <li>Time: '')", span="580-580"];
m60_88 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(DateTime.UtcNow)", span="585-585"];
m60_89 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral('' GMT\r\n                    </li>\r\n                    <li>Generated in ['')", span="590-590"];
m60_95 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="631-631"];
m60_96 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Exit HangFire.Web.Pages.LayoutPage.Execute()", span="51-51"];
m60_99 [cluster="HttpRequestBase.LinkTo(string)", file="LayoutPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m60_107 [cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="LayoutPage.generated.cs", label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0"];
m60_105 [cluster="HangFire.Web.RazorPage.RenderBody()", file="LayoutPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderBody()", span="84-84"];
m60_106 [cluster="object.GetType()", file="LayoutPage.generated.cs", label="Entry object.GetType()", span="0-0"];
m60_102 [cluster="Unk.Equals", file="LayoutPage.generated.cs", label="Entry Unk.Equals", span=""];
m60_108 [cluster="Unk.Write", file="LayoutPage.generated.cs", label="Entry Unk.Write", span=""];
m60_109 [file="LayoutPage.generated.cs", label="HangFire.Web.Pages.LayoutPage", span=""];
m61_0 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="LinkHelper.cs", label="Entry HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", span="24-24"];
m61_1 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="2: var sb = new StringBuilder(request.Path)", span="26-26"];
m61_2 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="0: var pathInfo = request.PathInfo", span="27-27"];
m61_12 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="4: return basePath + link.TrimStart('/');", span="39-39"];
m61_4 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="0: var sbIndex = sb.Length - 1", span="29-29"];
m61_5 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="1: pathInfoIndex >= 0 && sb[sbIndex].Equals(pathInfo[pathInfoIndex])", span="30-30"];
m61_6 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="5: sb.Remove(sbIndex, 1)", span="32-32"];
m61_9 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="2: var basePath = sb.ToString()", span="36-36"];
m61_3 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="5: var pathInfoIndex = pathInfo.Length - 1", span="28-28"];
m61_8 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="4: pathInfoIndex--", span="34-34"];
m61_7 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="0: sbIndex--", span="33-33"];
m61_10 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="5: !basePath.EndsWith(''/'', StringComparison.OrdinalIgnoreCase)", span="37-37"];
m61_11 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=red, community=0, file="LinkHelper.cs", label="0: basePath += ''/''", span="37-37"];
m61_13 [cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="LinkHelper.cs", label="Exit HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", span="24-24"];
m61_19 [cluster="string.TrimStart(params char[])", file="LinkHelper.cs", label="Entry string.TrimStart(params char[])", span="0-0"];
m61_17 [cluster="System.Text.StringBuilder.ToString()", file="LinkHelper.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m61_16 [cluster="System.Text.StringBuilder.Remove(int, int)", file="LinkHelper.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m61_18 [cluster="string.EndsWith(string, System.StringComparison)", file="LinkHelper.cs", label="Entry string.EndsWith(string, System.StringComparison)", span="0-0"];
m61_14 [cluster="StringBuilder.cstr", file="LinkHelper.cs", label="Entry StringBuilder.cstr", span=""];
m61_15 [cluster="Unk.Equals", file="LinkHelper.cs", label="Entry Unk.Equals", span=""];
m63_0 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", span="14-14"];
m63_1 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", color=green, community=0, file="MsmqSqlServerStorageExtensionsFacts.cs", label="0: var connection = new Mock<IStorageConnection>()", span="16-16"];
m63_2 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var job = Job.FromExpression(() => TestMethod())", span="17-17"];
m63_3 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var state = new Mock<IState>()", span="18-18"];
m63_4 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="19-19"];
m63_24 [cluster="System.Exception.Exception()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m63_25 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", span="33-33"];
m63_26 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ClientExceptionContext(_createContext, null))", span="35-36"];
m63_27 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(''exception'', exception.ParamName)", span="38-38"];
m63_9 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(''nowInstant'', exception.ParamName)", span="27-27"];
m63_61 [cluster="System.DateTime.AddMinutes(double)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m63_10 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", span="22-22"];
m63_39 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var instant = CreateInstant()", span="63-63"];
m63_7 [cluster="Mock<IStorageConnection>.cstr", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m63_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m63_29 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="new ScheduleInstant(_now, _timeZone, null)", span="44-44"];
m63_12 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry lambda expression", span="17-17"];
m63_31 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="new ClientExceptionContext(_createContext, null)", span="36-36"];
m63_32 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit lambda expression", span="36-36"];
m63_33 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", span="42-42"];
m63_34 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var exception = new Exception()", span="44-44"];
m63_35 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var context = new ClientExceptionContext(_createContext, exception)", span="45-45"];
m63_36 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Same(exception, context.Exception)", span="47-47"];
m63_17 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new ClientExceptionContext(null, new Exception()))", span="28-29"];
m63_18 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="26-26"];
m63_19 [cluster="Unk.>", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.>", span=""];
m63_20 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry lambda expression", span="29-29"];
m63_15 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit lambda expression", span="25-25"];
m63_41 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(_schedule.GetNextOccurrence(_now), value)", span="67-67"];
m63_28 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry lambda expression", span="44-44"];
m63_43 [cluster="Unk.GetNextOccurrence", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.GetNextOccurrence", span=""];
m63_16 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="26-26"];
m63_11 [cluster="CreateContext.cstr", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry CreateContext.cstr", span=""];
m63_51 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="50-50"];
m63_40 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var value = instant.NextInstant", span="65-65"];
m63_5 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="_createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="21-22"];
m63_37 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.False(context.ExceptionHandled)", span="48-48"];
m63_78 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="return new ScheduleInstant(localTime ?? _now, _timeZone, _schedule);", span="117-117"];
m63_79 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", span="115-115"];
m63_63 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", span="93-93"];
m63_64 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var time = new DateTime(2012, 12, 12, 00, 00, 00, DateTimeKind.Utc)", span="95-95"];
m63_65 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var instant = CreateInstant(time)", span="96-96"];
m63_68 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(time, matches[0])", span="101-101"];
m63_66 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var matches = instant.GetNextInstants(null).ToList()", span="98-98"];
m63_67 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(1, matches.Count)", span="100-100"];
m63_69 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", span="93-93"];
m63_6 [cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", span="14-14"];
m63_44 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", span="71-71"];
m63_45 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var instant = CreateInstant()", span="73-73"];
m63_46 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Throws<ArgumentException>(() => instant.GetNextInstants(DateTime.Now))", span="75-75"];
m63_47 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", span="71-71"];
m63_38 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", span="61-61"];
m63_42 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", span=""];
m63_52 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", span="79-79"];
m63_53 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var time = new DateTime(2012, 12, 12, 00, 00, 00, DateTimeKind.Utc)", span="81-81"];
m63_54 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var instant = CreateInstant(time)", span="82-82"];
m63_55 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var matches = instant.GetNextInstants(time.AddMinutes(-3)).ToList()", span="84-84"];
m63_57 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(time.AddMinutes(-2), matches[0])", span="87-87"];
m63_58 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(time.AddMinutes(-1), matches[1])", span="88-88"];
m63_59 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(time, matches[2])", span="89-89"];
m63_56 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(3, matches.Count)", span="86-86"];
m63_60 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", span="79-79"];
m63_62 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m63_70 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", span="105-105"];
m63_71 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var time = new DateTime(2012, 12, 12, 00, 01, 00, DateTimeKind.Utc)", span="107-107"];
m63_72 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var instant = new ScheduleInstant(time, TimeZoneInfo.Utc, CrontabSchedule.Parse(''0 * * * *''))", span="108-108"];
m63_73 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var matches = instant.GetNextInstants(time.AddMinutes(50))", span="110-110"];
m63_74 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Empty(matches)", span="112-112"];
m63_75 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", span="105-105"];
m63_13 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="TestMethod()", span="17-17"];
m63_14 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit lambda expression", span="17-17"];
m63_21 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="new ClientExceptionContext(null, new Exception())", span="29-29"];
m63_22 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit lambda expression", span="29-29"];
m63_23 [cluster="HangFire.Client.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Client.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="26-26"];
m63_30 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry lambda expression", span="36-36"];
m63_49 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="instant.GetNextInstants(DateTime.Now)", span="75-75"];
m63_48 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry lambda expression", span="75-75"];
m63_50 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit lambda expression", span="75-75"];
m63_77 [cluster="Unk.Empty", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Empty", span=""];
m63_76 [cluster="ScheduleInstant.cstr", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry ScheduleInstant.cstr", span=""];
m63_80 [file="MsmqSqlServerStorageExtensionsFacts.cs", label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", span=""];
m63_81 [file="MsmqSqlServerStorageExtensionsFacts.cs", label=instant, span=""];
m65_46 [cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Entry HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="112-112"];
m65_54 [cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="_startPageIndex > 2", span="114-114"];
m65_59 [cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="results.Add(item)", span="119-119"];
m65_55 [cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="var index = _startPageIndex - 1", span="116-116"];
m65_56 [cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="index < 1", span="117-117"];
m65_58 [cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="var item = new Item(index, false, ItemType.MorePage)", span="118-118"];
m65_57 [cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="index = 1", span="117-117"];
m65_60 [cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Exit HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="112-112"];
m65_42 [cluster="System.Collections.Generic.List<T>.List()", file="Pager.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m65_44 [cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="Pager.cs", label="Entry HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", span="151-151"];
m65_77 [cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="Pager.cs", label="PageIndex = pageIndex", span="153-153"];
m65_78 [cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="Pager.cs", label="Disabled = disabled", span="154-154"];
m65_79 [cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="Pager.cs", label="Type = type", span="155-155"];
m65_80 [cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="Pager.cs", label="Exit HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", span="151-151"];
m65_43 [cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Entry HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="106-106"];
m65_50 [cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="var item = new Item(CurrentPage - 1, CurrentPage == 1, ItemType.PrevPage)", span="108-108"];
m65_51 [cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="results.Add(item)", span="109-109"];
m65_52 [cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Exit HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="106-106"];
m65_53 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="Pager.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m65_48 [cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Entry HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="123-123"];
m65_61 [cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="_endPageIndex < TotalPageCount - 1", span="125-125"];
m65_66 [cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="results.Add(item)", span="130-130"];
m65_62 [cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="var index = _startPageIndex + PageItemsCount", span="127-127"];
m65_63 [cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="index > TotalPageCount", span="128-128"];
m65_65 [cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="var item = new Item(index, false, ItemType.MorePage)", span="129-129"];
m65_64 [cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="index = TotalPageCount", span="128-128"];
m65_67 [cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Exit HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="123-123"];
m65_45 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Pager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m65_10 [cluster="HangFire.Web.Pager.PageUrl(int)", file="Pager.cs", label="Entry HangFire.Web.Pager.PageUrl(int)", span="51-51"];
m65_11 [cluster="HangFire.Web.Pager.PageUrl(int)", file="Pager.cs", label="page < 1 || page > TotalPageCount", span="53-53"];
m65_13 [cluster="HangFire.Web.Pager.PageUrl(int)", file="Pager.cs", label="return BasePageUrl + ''?from='' + ((page - 1) * RecordsPerPage) + ''&count='' + RecordsPerPage;", span="55-55"];
m65_12 [cluster="HangFire.Web.Pager.PageUrl(int)", file="Pager.cs", label="return ''#'';", span="53-53"];
m65_14 [cluster="HangFire.Web.Pager.PageUrl(int)", file="Pager.cs", label="Exit HangFire.Web.Pager.PageUrl(int)", span="51-51"];
m65_8 [cluster="System.Math.Ceiling(double)", file="Pager.cs", label="Entry System.Math.Ceiling(double)", span="0-0"];
m65_49 [cluster="HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Entry HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="143-143"];
m65_74 [cluster="HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="var item = new Item(CurrentPage + 1, CurrentPage >= TotalPageCount, ItemType.NextPage)", span="145-145"];
m65_75 [cluster="HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="results.Add(item)", span="146-146"];
m65_76 [cluster="HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Exit HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="143-143"];
m65_9 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="Entry HangFire.Web.Pager.GenerateItems()", span="64-64"];
m65_20 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_startPageIndex = CurrentPage - (PageItemsCount / 2)", span="67-67"];
m65_21 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_startPageIndex + PageItemsCount > TotalPageCount", span="68-68"];
m65_22 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_startPageIndex = TotalPageCount + 1 - PageItemsCount", span="69-69"];
m65_23 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_startPageIndex < 1", span="70-70"];
m65_24 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_startPageIndex = 1", span="71-71"];
m65_25 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_endPageIndex = _startPageIndex + PageItemsCount - 1", span="74-74"];
m65_26 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_endPageIndex > TotalPageCount", span="75-75"];
m65_27 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_endPageIndex = TotalPageCount", span="76-76"];
m65_28 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="var pagerItems = new List<Item>()", span="78-78"];
m65_29 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="TotalPageCount == 0", span="79-79"];
m65_30 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="return pagerItems;", span="79-79"];
m65_31 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="AddPrevious(pagerItems)", span="81-81"];
m65_33 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="pagerItems.Add(new Item(1, false, ItemType.Page))", span="85-85"];
m65_34 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="AddMoreBefore(pagerItems)", span="88-88"];
m65_35 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="AddPageNumbers(pagerItems)", span="91-91"];
m65_36 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="AddMoreAfter(pagerItems)", span="94-94"];
m65_38 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="pagerItems.Add(new Item(TotalPageCount, false, ItemType.Page))", span="98-98"];
m65_39 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="AddNext(pagerItems)", span="101-101"];
m65_40 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="return pagerItems;", span="103-103"];
m65_32 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_startPageIndex > 1", span="84-84"];
m65_37 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="_endPageIndex < TotalPageCount", span="97-97"];
m65_41 [cluster="HangFire.Web.Pager.GenerateItems()", file="Pager.cs", label="Exit HangFire.Web.Pager.GenerateItems()", span="64-64"];
m65_0 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Pager.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m65_1 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Pager.cs", label="FromRecord = from >= 0 ? from : 0", span="31-31"];
m65_2 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Pager.cs", label="RecordsPerPage = perPage > 0 ? perPage : DefaultRecordsPerPage", span="32-32"];
m65_3 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Pager.cs", label="TotalRecordCount = total", span="33-33"];
m65_4 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Pager.cs", label="CurrentPage = FromRecord / RecordsPerPage + 1", span="34-34"];
m65_5 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Pager.cs", label="TotalPageCount = (int)Math.Ceiling((double)TotalRecordCount / RecordsPerPage)", span="35-35"];
m65_6 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Pager.cs", label="PagerItems = GenerateItems()", span="37-37"];
m65_7 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Pager.cs", label="Exit HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m65_47 [cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Entry HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="134-134"];
m65_68 [cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="var pageIndex = _startPageIndex", span="136-136"];
m65_71 [cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="results.Add(item)", span="139-139"];
m65_69 [cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="pageIndex <= _endPageIndex", span="136-136"];
m65_70 [cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="var item = new Item(pageIndex, false, ItemType.Page)", span="138-138"];
m65_72 [cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="pageIndex++", span="136-136"];
m65_73 [cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="Pager.cs", label="Exit HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="134-134"];
m65_15 [cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="Pager.cs", label="Entry HangFire.Web.Pager.RecordsPerPageUrl(int)", span="58-58"];
m65_16 [cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="Pager.cs", label="perPage <= 0", span="60-60"];
m65_18 [cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="Pager.cs", label="return BasePageUrl + ''?from=0&count='' + perPage;", span="61-61"];
m65_17 [cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="Pager.cs", label="return ''#'';", span="60-60"];
m65_19 [cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="Pager.cs", label="Exit HangFire.Web.Pager.RecordsPerPageUrl(int)", span="58-58"];
m65_81 [file="Pager.cs", label="HangFire.Web.Pager", span=""];
m65_82 [file="Pager.cs", label="HangFire.Web.Pager.Item", span=""];
m66_14 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.GetQueue(System.Type)", span="23-23"];
m66_8 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="ProcessingState.cs", label="jobType == null", span="25-25"];
m66_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingState.cs", label="HangFire.States.ProcessingState", span=""];
m66_25 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="45-45"];
m66_26 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="ProcessingState.cs", label="return JsonSerializer.DeserializeFromString<T>(value);", span="47-47"];
m66_27 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.FromJson<T>(string)", span="45-45"];
m66_40 [cluster="long.ToString()", file="ProcessingState.cs", label="Entry long.ToString()", span="0-0"];
m66_44 [cluster="long.Parse(string)", file="ProcessingState.cs", label="Entry long.Parse(string)", span="0-0"];
m66_33 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="58-58"];
m66_34 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="ProcessingState.cs", label="return Epoch.AddSeconds(value);", span="60-60"];
m66_35 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.FromTimestamp(long)", span="58-58"];
m66_36 [cluster="System.DateTime.AddSeconds(double)", file="ProcessingState.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m66_7 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="23-23"];
m66_17 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="ProcessingState.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m66_21 [cluster="HangFire.JobHelper.ToJson(object)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="40-40"];
m66_22 [cluster="HangFire.JobHelper.ToJson(object)", file="ProcessingState.cs", label="return JsonSerializer.SerializeToString(value);", span="42-42"];
m66_23 [cluster="HangFire.JobHelper.ToJson(object)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.ToJson(object)", span="40-40"];
m66_55 [cluster="string.Format(string, object)", file="ProcessingState.cs", label="Entry string.Format(string, object)", span="0-0"];
m66_20 [cluster="HangFire.JobHelper.ValidateQueueName(string)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.ValidateQueueName(string)", span="83-83"];
m66_50 [cluster="HangFire.JobHelper.ValidateQueueName(string)", file="ProcessingState.cs", label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="85-85"];
m66_51 [cluster="HangFire.JobHelper.ValidateQueueName(string)", file="ProcessingState.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue));", span="87-88"];
m66_52 [cluster="HangFire.JobHelper.ValidateQueueName(string)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.ValidateQueueName(string)", span="83-83"];
m66_37 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m66_38 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs", label="return ToTimestamp(value).ToString();", span="65-65"];
m66_39 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m66_16 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ProcessingState.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m66_29 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="52-52"];
m66_30 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingState.cs", label="TimeSpan elapsedTime = value - Epoch", span="54-54"];
m66_31 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingState.cs", label="return (long)elapsedTime.TotalSeconds;", span="55-55"];
m66_32 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.ToTimestamp(System.DateTime)", span="52-52"];
m66_28 [cluster="Unk.>", file="ProcessingState.cs", label="Entry Unk.>", span=""];
m66_10 [cluster="HangFire.States.ProcessingState.SerializeData()", color=green, community=0, file="ProcessingState.cs", label="2: return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.ToStringTimestamp(StartedAt) },\r\n                { ''ServerId'', ServerId },\r\n                { ''WorkerNumber'', WorkerNumber.ToString(CultureInfo.InvariantCulture) }\r\n            };", span="47-52"];
m66_9 [cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.SerializeData()", span="45-45"];
m66_11 [cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.SerializeData()", span="45-45"];
m66_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m66_13 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m66_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ProcessingState.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m66_45 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="73-73"];
m66_46 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="ProcessingState.cs", label="String.IsNullOrEmpty(value)", span="75-75"];
m66_48 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="ProcessingState.cs", label="return FromStringTimestamp(value);", span="80-80"];
m66_47 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="ProcessingState.cs", label="return null;", span="77-77"];
m66_49 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.FromNullableStringTimestamp(string)", span="73-73"];
m66_6 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m66_54 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ProcessingState.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m66_19 [cluster="string.IsNullOrEmpty(string)", file="ProcessingState.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m66_24 [cluster="Unk.SerializeToString", file="ProcessingState.cs", label="Entry Unk.SerializeToString", span=""];
m66_53 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="ProcessingState.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m66_0 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="12-12"];
m66_3 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="ProcessingState.cs", label="return null;", span="17-17"];
m66_4 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="ProcessingState.cs", label="return GetQueue(type);", span="20-20"];
m66_5 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.TryToGetQueue(string)", span="12-12"];
m66_1 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="ProcessingState.cs", label="var type = Type.GetType(jobType)", span="14-14"];
m66_2 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="ProcessingState.cs", label="type == null", span="15-15"];
m66_41 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="ProcessingState.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="68-68"];
m66_42 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="ProcessingState.cs", label="return FromTimestamp(long.Parse(value));", span="70-70"];
m66_43 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="ProcessingState.cs", label="Exit HangFire.JobHelper.FromStringTimestamp(string)", span="68-68"];
m67_62 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="ProcessingStateFacts.cs", label="return jobId;", span="150-150"];
m67_64 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="ProcessingStateFacts.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m67_63 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="ProcessingStateFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="104-104"];
m67_65 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="ProcessingStateFacts.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m67_5 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", color=green, community=0, file="ProcessingStateFacts.cs", label="0: Register(ScheduledState.StateName, ScheduledRenderer)", span="41-41"];
m67_66 [cluster="System.DateTime.Add(System.TimeSpan)", file="ProcessingStateFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m67_117 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ProcessingStateFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="234-234"];
m67_118 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ProcessingStateFacts.cs", label="serverId == null", span="236-236"];
m67_120 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ProcessingStateFacts.cs", label="context == null", span="237-237"];
m67_122 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ProcessingStateFacts.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="239-244"];
m67_123 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ProcessingStateFacts.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="248-254"];
m67_119 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="236-236"];
m67_121 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''context'');", span="237-237"];
m67_124 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ProcessingStateFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="234-234"];
m67_95 [cluster="string.Format(string, object, object)", file="ProcessingStateFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m67_96 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ProcessingStateFacts.cs", label="id == null", span="205-205"];
m67_98 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ProcessingStateFacts.cs", label="name == null", span="206-206"];
m67_100 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ProcessingStateFacts.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="208-211"];
m67_97 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''id'');", span="205-205"];
m67_99 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''name'');", span="206-206"];
m67_101 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ProcessingStateFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="203-203"];
m67_125 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="ProcessingStateFacts.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m67_91 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ProcessingStateFacts.cs", label="name == null", span="192-192"];
m67_92 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''name'');", span="192-192"];
m67_93 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ProcessingStateFacts.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="194-200"];
m67_57 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="ProcessingStateFacts.cs", label="int parameterIndex = 0", span="132-132"];
m67_47 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.AppendFormat(''<dt>Duration:</dt><dd>{0}</dd>'', HtmlHelper.ToHumanDuration(duration, false))", span="104-104"];
m67_48 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="itemsAdded = true", span="106-106"];
m67_50 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="!itemsAdded", span="111-111"];
m67_53 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="Exit HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", span="86-86"];
m67_54 [cluster="System.Text.StringBuilder.StringBuilder()", file="ProcessingStateFacts.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m67_55 [cluster="System.Text.StringBuilder.Append(string)", file="ProcessingStateFacts.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m67_56 [cluster="int.Parse(string)", file="ProcessingStateFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m67_58 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ProcessingStateFacts.cs", label="Entry HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m67_49 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.Append(''</dl>'')", span="109-109"];
m67_51 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="return null;", span="111-111"];
m67_52 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="return new HtmlString(builder.ToString());", span="113-113"];
m67_59 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="ProcessingStateFacts.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m67_61 [cluster="System.Text.StringBuilder.ToString()", file="ProcessingStateFacts.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m67_60 [cluster="HtmlString.cstr", file="ProcessingStateFacts.cs", label="Entry HtmlString.cstr", span=""];
m67_90 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''id'');", span="191-191"];
m67_18 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="ForegroundStateColors.Add(DeletedState.StateName, ''#777'')", span="56-56"];
m67_94 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ProcessingStateFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="189-189"];
m67_40 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="var itemsAdded = false", span="91-91"];
m67_45 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="stateData.ContainsKey(''PerformanceDuration'')", span="101-101"];
m67_67 [cluster="Unk.ToHtmlString", file="ProcessingStateFacts.cs", label="Entry Unk.ToHtmlString", span=""];
m67_70 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="var builder = new StringBuilder()", span="128-128"];
m67_71 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="129-129"];
m67_74 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="serverId = stateData[''ServerId'']", span="135-135"];
m67_72 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="string serverId = null", span="131-131"];
m67_73 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="stateData.ContainsKey(''ServerId'')", span="133-133"];
m67_75 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="stateData.ContainsKey(''ServerName'')", span="137-137"];
m67_77 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="serverId != null", span="142-142"];
m67_78 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.Append(''<dt>Server:</dt>'')", span="144-144"];
m67_84 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="return new HtmlString(builder.ToString());", span="158-158"];
m67_76 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="serverId = stateData[''ServerName'']", span="139-139"];
m67_81 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.Append(''<dt>Worker:</dt>'')", span="152-152"];
m67_79 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.AppendFormat(\r\n                    ''<dd><span class=\''label label-default\''>{0}</span></dd>'',\r\n                    serverId.ToUpperInvariant())", span="145-147"];
m67_80 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="stateData.ContainsKey(''WorkerNumber'')", span="150-150"];
m67_82 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.AppendFormat(''<dd>#{0}</dd>'', stateData[''WorkerNumber''])", span="153-153"];
m67_83 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.Append(''</dl>'')", span="156-156"];
m67_85 [cluster="HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="Exit HangFire.Web.JobHistoryRenderer.ProcessingRenderer(System.Collections.Generic.IDictionary<string, string>)", span="126-126"];
m67_10 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="BackgroundStateColors.Add(ProcessingState.StateName, ''#FCEFDC'')", span="47-47"];
m67_11 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="BackgroundStateColors.Add(ScheduledState.StateName, ''#E0F3F8'')", span="48-48"];
m67_12 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="BackgroundStateColors.Add(DeletedState.StateName, ''#ddd'')", span="49-49"];
m67_116 [cluster="System.ArgumentException.ArgumentException(string)", file="ProcessingStateFacts.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m67_20 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="queues == null", span="61-61"];
m67_22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="queues.Length == 0", span="62-62"];
m67_23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="62-62"];
m67_24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="dynamic idAndQueue", span="64-64"];
m67_25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="66-71"];
m67_27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="var currentQueryIndex = 0", span="76-76"];
m67_28 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="80-80"];
m67_29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = JobInvisibilityTimeOut.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="82-85"];
m67_86 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="ProcessingStateFacts.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m67_43 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.AppendFormat(''<dt>Latency:</dt><dd>{0}</dd>'', HtmlHelper.ToHumanDuration(latency, false))", span="96-96"];
m67_41 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="stateData.ContainsKey(''Latency'')", span="93-93"];
m67_46 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="var duration = TimeSpan.FromMilliseconds(int.Parse(stateData[''PerformanceDuration'']))", span="103-103"];
m67_39 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="89-89"];
m67_17 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="ForegroundStateColors.Add(ScheduledState.StateName, ''#5bc0de'')", span="55-55"];
m67_69 [cluster="Unk.Execute", file="ProcessingStateFacts.cs", label="Entry Unk.Execute", span=""];
m67_87 [cluster="HangFire.Storage.JobData.JobData()", file="ProcessingStateFacts.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m67_88 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ProcessingStateFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="189-189"];
m67_89 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ProcessingStateFacts.cs", label="id == null", span="191-191"];
m67_19 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="Exit HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", span="35-35"];
m67_21 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ProcessingStateFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m67_26 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ProcessingStateFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m67_31 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="currentQueryIndex == fetchConditions.Length - 1", span="89-89"];
m67_34 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="96-96"];
m67_32 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="91-91"];
m67_30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="idAndQueue == null", span="87-87"];
m67_35 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="idAndQueue == null", span="97-97"];
m67_36 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="return new ProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="99-101"];
m67_33 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ProcessingStateFacts.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="92-92"];
m67_37 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="Entry HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", span="86-86"];
m67_136 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ProcessingStateFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m67_137 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ProcessingStateFacts.cs", label="timeOut.Duration() != timeOut", span="277-277"];
m67_138 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ProcessingStateFacts.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="279-279"];
m67_139 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ProcessingStateFacts.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="282-284"];
m67_140 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ProcessingStateFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m67_0 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="Entry HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", span="35-35"];
m67_1 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="Register(SucceededState.StateName, SucceededRenderer)", span="37-37"];
m67_3 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="Register(ProcessingState.StateName, ProcessingRenderer)", span="39-39"];
m67_2 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="Register(FailedState.StateName, FailedRenderer)", span="38-38"];
m67_4 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="Register(EnqueuedState.StateName, EnqueuedRenderer)", span="40-40"];
m67_9 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="BackgroundStateColors.Add(FailedState.StateName, ''#FAEBEA'')", span="46-46"];
m67_141 [cluster="System.TimeSpan.Duration()", file="ProcessingStateFacts.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m67_6 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="Register(DeletedState.StateName, NullRenderer)", span="42-42"];
m67_7 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="BackgroundStateColors.Add(EnqueuedState.StateName, ''#F5F5F5'')", span="44-44"];
m67_8 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="BackgroundStateColors.Add(SucceededState.StateName, ''#EDF7ED'')", span="45-45"];
m67_102 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ProcessingStateFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="214-214"];
m67_103 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ProcessingStateFacts.cs", label="id == null", span="216-216"];
m67_105 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ProcessingStateFacts.cs", label="queue == null", span="217-217"];
m67_107 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ProcessingStateFacts.cs", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="219-220"];
m67_104 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''id'');", span="216-216"];
m67_106 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''queue'');", span="217-217"];
m67_108 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ProcessingStateFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="214-214"];
m67_13 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="ForegroundStateColors.Add(EnqueuedState.StateName, ''#999'')", span="51-51"];
m67_109 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ProcessingStateFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="223-223"];
m67_110 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ProcessingStateFacts.cs", label="key == null", span="225-225"];
m67_112 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ProcessingStateFacts.cs", label="toScore < fromScore", span="226-226"];
m67_114 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ProcessingStateFacts.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="228-231"];
m67_111 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''key'');", span="225-225"];
m67_113 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ProcessingStateFacts.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="226-226"];
m67_115 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ProcessingStateFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="223-223"];
m67_14 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="ForegroundStateColors.Add(SucceededState.StateName, ''#5cb85c'')", span="52-52"];
m67_15 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="ForegroundStateColors.Add(FailedState.StateName, ''#d9534f'')", span="53-53"];
m67_16 [cluster="HangFire.Web.JobHistoryRenderer.JobHistoryRenderer()", file="ProcessingStateFacts.cs", label="ForegroundStateColors.Add(ProcessingState.StateName, ''#f0ad4e'')", span="54-54"];
m67_38 [cluster="HangFire.Web.JobHistoryRenderer.SucceededRenderer(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs", label="var builder = new StringBuilder()", span="88-88"];
m67_68 [cluster="Unk.Format", file="ProcessingStateFacts.cs", label="Entry Unk.Format", span=""];
m67_42 [cluster="Unk.SingleOrDefault", file="ProcessingStateFacts.cs", label="Entry Unk.SingleOrDefault", span=""];
m67_44 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ProcessingStateFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m67_126 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ProcessingStateFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m67_127 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ProcessingStateFacts.cs", label="serverId == null", span="259-259"];
m67_129 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ProcessingStateFacts.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="261-263"];
m67_128 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="259-259"];
m67_130 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ProcessingStateFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m67_131 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ProcessingStateFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m67_132 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ProcessingStateFacts.cs", label="serverId == null", span="268-268"];
m67_134 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ProcessingStateFacts.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="270-272"];
m67_133 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ProcessingStateFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="268-268"];
m67_135 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ProcessingStateFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m67_142 [file="ProcessingStateFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m68_92 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m68_0 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Entry ConsoleSample.Program.Main()", span="12-12"];
m68_1 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="LogManager.Adapter = new ConsoleOutLoggerFactoryAdapter(\r\n                LogLevel.Info, false, false, true, '''')", span="14-15"];
m68_2 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var sqlServerStorage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.Sample;Trusted_Connection=True;'')", span="17-18"];
m68_3 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="sqlServerStorage.UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')", span="19-19"];
m68_4 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="JobStorage.Current =\r\n                sqlServerStorage", span="21-22"];
m68_5 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="Program.cs", label="0: var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = new[] { ''critical'', ''default'' }\r\n            }", span="25-28"];
m68_6 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var server = new BackgroundJobServer(options)", span="30-30"];
m68_7 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var count = 1", span="32-32"];
m68_12 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="server.Start()", span="45-45"];
m68_8 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=true, span="34-34"];
m68_46 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var number = count++", span="104-104"];
m68_9 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var command = Console.ReadLine()", span="36-36"];
m68_64 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="150-150"];
m68_10 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="38-38"];
m68_11 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.Equals(''start'', StringComparison.OrdinalIgnoreCase)", span="43-43"];
m68_13 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="48-48"];
m68_14 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(4))", span="52-52"];
m68_23 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="66-66"];
m68_24 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(7))", span="70-70"];
m68_32 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="83-83"];
m68_33 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(6))", span="85-85"];
m68_38 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="92-92"];
m68_39 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(5))", span="94-94"];
m68_44 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="101-101"];
m68_45 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var seconds = int.Parse(command.Substring(2))", span="103-103"];
m68_48 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''cancelable'', StringComparison.OrdinalIgnoreCase)", span="108-108"];
m68_49 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var iterations = int.Parse(command.Substring(11))", span="110-110"];
m68_51 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''delete'', StringComparison.OrdinalIgnoreCase)", span="114-114"];
m68_52 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(7))", span="116-116"];
m68_58 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="124-124"];
m68_59 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(5))", span="128-128"];
m68_15 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="53-53"];
m68_16 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="53-53"];
m68_17 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var number = i", span="55-55"];
m68_19 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="53-53"];
m68_20 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="58-58"];
m68_18 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="56-56"];
m68_21 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="60-60"];
m68_22 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="62-62"];
m68_25 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="71-71"];
m68_26 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="71-71"];
m68_28 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="71-71"];
m68_27 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="73-73"];
m68_29 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="75-75"];
m68_30 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="77-77"];
m68_31 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="79-79"];
m68_34 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="86-86"];
m68_35 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="86-86"];
m68_37 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="86-86"];
m68_36 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Error())", span="88-88"];
m68_40 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="95-95"];
m68_41 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="95-95"];
m68_43 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="95-95"];
m68_42 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="97-97"];
m68_47 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="105-105"];
m68_50 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Cancelable(iterations, JobCancellationToken.Null))", span="111-111"];
m68_53 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="117-117"];
m68_54 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="117-117"];
m68_57 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="117-117"];
m68_55 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var jobId = BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="119-119"];
m68_56 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Delete(jobId)", span="120-120"];
m68_60 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="129-139"];
m68_61 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="140-140"];
m68_62 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="142-142"];
m68_63 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="144-144"];
m68_65 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.ReadLine()", span="151-151"];
m68_66 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Exit ConsoleSample.Program.Main()", span="12-12"];
m68_67 [cluster="ConsoleOutLoggerFactoryAdapter.cstr", file="Program.cs", label="Entry ConsoleOutLoggerFactoryAdapter.cstr", span=""];
m68_82 [cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="Program.cs", label="Entry HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="148-148"];
m68_122 [cluster="ConsoleSample.Services.EmptyCritical()", file="Program.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="16-16"];
m68_96 [cluster="ConsoleSample.Services.Error()", file="Program.cs", label="Entry ConsoleSample.Services.Error()", span="21-21"];
m68_69 [cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", file="Program.cs", label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", span="28-28"];
m68_77 [cluster="int.Parse(string)", file="Program.cs", label="Entry int.Parse(string)", span="0-0"];
m68_81 [cluster="System.TimeSpan.FromSeconds(double)", file="Program.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m68_88 [cluster="ConsoleSample.Services.Random(int)", file="Program.cs", label="Entry ConsoleSample.Services.Random(int)", span="28-28"];
m68_83 [cluster="HangFire.BackgroundJob.Delete(string)", file="Program.cs", label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164"];
m68_101 [cluster="System.Guid.ToString()", file="Program.cs", label="Entry System.Guid.ToString()", span="0-0"];
m68_75 [cluster="string.StartsWith(string, System.StringComparison)", file="Program.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m68_71 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="Program.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m68_102 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="Program.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="64-64"];
m68_72 [cluster="System.Console.ReadLine()", file="Program.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m68_78 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Program.cs", label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="78-78"];
m68_119 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="133-133"];
m68_86 [cluster="lambda expression", file="Program.cs", label="x.Random(number)", span="56-56"];
m68_85 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="56-56"];
m68_89 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="73-73"];
m68_93 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="88-88"];
m68_97 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="97-97"];
m68_104 [cluster="lambda expression", file="Program.cs", label="x.Random(number)", span="105-105"];
m68_103 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="105-105"];
m68_107 [cluster="lambda expression", file="Program.cs", label="x.Cancelable(iterations, JobCancellationToken.Null)", span="111-111"];
m68_106 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="111-111"];
m68_110 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="119-119"];
m68_114 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="129-139"];
m68_87 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="56-56"];
m68_90 [cluster="lambda expression", file="Program.cs", label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="73-73"];
m68_91 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="73-73"];
m68_94 [cluster="lambda expression", file="Program.cs", label="x.Error()", span="88-88"];
m68_95 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="88-88"];
m68_98 [cluster="lambda expression", file="Program.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="97-97"];
m68_99 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="97-97"];
m68_105 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="105-105"];
m68_108 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="111-111"];
m68_111 [cluster="lambda expression", file="Program.cs", label="x.EmptyDefault()", span="119-119"];
m68_112 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="119-119"];
m68_115 [cluster="lambda expression", file="Program.cs", label="i % 2 == 0", span="131-131"];
m68_116 [cluster="lambda expression", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="133-133"];
m68_117 [cluster="lambda expression", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="137-137"];
m68_118 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="129-139"];
m68_123 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="137-137"];
m68_120 [cluster="lambda expression", file="Program.cs", label="x.EmptyCritical()", span="133-133"];
m68_121 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="133-133"];
m68_124 [cluster="lambda expression", file="Program.cs", label="x.EmptyDefault()", span="137-137"];
m68_125 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="137-137"];
m68_73 [cluster="string.Equals(string, System.StringComparison)", file="Program.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m68_84 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="Program.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m68_100 [cluster="System.Guid.NewGuid()", file="Program.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m68_74 [cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="60-60"];
m68_68 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="Program.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32"];
m68_70 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="Program.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13"];
m68_80 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="Program.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
m68_79 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m68_109 [cluster="ConsoleSample.Services.Cancelable(int, HangFire.IJobCancellationToken)", file="Program.cs", label="Entry ConsoleSample.Services.Cancelable(int, HangFire.IJobCancellationToken)", span="45-45"];
m68_113 [cluster="ConsoleSample.Services.EmptyDefault()", file="Program.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="11-11"];
m68_76 [cluster="string.Substring(int)", file="Program.cs", label="Entry string.Substring(int)", span="0-0"];
m68_126 [file="Program.cs", label=number, span=""];
m68_127 [file="Program.cs", label=number, span=""];
m68_128 [file="Program.cs", label=iterations, span=""];
m69_62 [cluster="HangFire.Web.RazorPage.Write(object)", file="QueuesPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m69_56 [cluster="Unk.TryParse", file="QueuesPage.generated.cs", label="Entry Unk.TryParse", span=""];
m69_54 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="QueuesPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m69_61 [cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="QueuesPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m69_57 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="QueuesPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m69_65 [cluster="Unk.Write", file="QueuesPage.generated.cs", label="Entry Unk.Write", span=""];
m69_63 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="QueuesPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m69_55 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="QueuesPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m69_60 [cluster="HttpRequestBase.LinkTo(string)", file="QueuesPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m69_59 [cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="QueuesPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45"];
m69_67 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="QueuesPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m69_0 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Entry HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m69_1 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\n'')", span="57-57"];
m69_69 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="QueuesPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m69_7 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: Pager pager = new Pager(from, perPage, monitor.DeletedListCount())\n    {\n        BasePageUrl = Request.LinkTo(''/deleted'')\n    }", span="77-80"];
m69_4 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="73-73"];
m69_5 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="74-74"];
m69_6 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="1: var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76"];
m69_8 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="JobList<DeletedJobDto> jobs = monitor.DeletedJobs(pager.FromRecord, pager.RecordsPerPage)", span="82-82"];
m69_10 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="pager.TotalPageCount == 0", span="93-93"];
m69_15 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="130-130"];
m69_52 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="376-376"];
m69_17 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: jobs", span="154-154"];
m69_16 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: WriteLiteral(@''\n        </div>\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Deleted</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="135-149"];
m69_50 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                    </tr>\n'')", span="355-355"];
m69_18 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="160-160"];
m69_51 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="365-365"];
m69_19 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(job.Value != null && !job.Value.InDeletedState ? ''obsolete-data'' : null)", span="165-165"];
m69_11 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="1: WriteLiteral(''    <div class=\''alert alert-info\''>\n        No deleted jobs found.\n    </div>\n'')", span="99-99"];
m69_21 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="4: Write(job.Value != null && job.Value.InDeletedState && job.Value != null ? ''hover'' : null)", span="175-175"];
m69_20 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral('' '')", span="170-170"];
m69_22 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\''>\n                        <td>\n'')", span="180-180"];
m69_23 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="1: job.Value != null && job.Value.InDeletedState", span="185-185"];
m69_24 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="191-192"];
m69_27 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        <a href=\'''')", span="212-213"];
m69_25 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(job.Key)", span="197-197"];
m69_28 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="218-218"];
m69_30 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="0: Write(HtmlHelper.JobId(job.Key))", span="228-228"];
m69_29 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="223-223"];
m69_31 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\n                            </a>\n'')", span="233-233"];
m69_32 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="job.Value != null && !job.Value.InDeletedState", span="238-238"];
m69_2 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Layout = new LayoutPage { Title = ''Deleted Jobs'' }", span="69-69"];
m69_9 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\n'')", span="88-88"];
m69_12 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="111-113"];
m69_13 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(Request.LinkTo(''/deleted/requeue''))", span="118-118"];
m69_14 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\''\n                    data-loading-text=\''Enqueueing...\''>\n                <span cl'' +\r\n''ass=\''glyphicon glyphicon-repeat\''></span>\n                Requeue jobs\n          '' +\r\n''  </button>\n            '')", span="123-125"];
m69_26 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\'' />\n'')", span="202-202"];
m69_33 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="244-245"];
m69_34 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                        </td>\n\n'')", span="255-255"];
m69_36 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                            <td colspan=\''2\''>\n                                <em>'' +\r\n''Job was expired.</em>\n                            </td>\n'')", span="266-267"];
m69_37 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                            <td>\n                                <a class=\''job-me'' +\r\n''thod\'' href=\'''')", span="279-280"];
m69_38 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="285-285"];
m69_39 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\''>\n                                    '')", span="290-290"];
m69_40 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="295-295"];
m69_41 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\n                                </a>\n                            </td>\n'')", span="300-300"];
m69_42 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                            <td class=\''align-right\''>\n'')", span="304-304"];
m69_44 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                                    <span data-moment=\'''')", span="315-315"];
m69_45 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.DeletedAt.Value))", span="320-320"];
m69_46 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\''>\n                                        '')", span="325-325"];
m69_47 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Write(job.Value.DeletedAt)", span="330-330"];
m69_48 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''\n                                    </span>\n'')", span="335-335"];
m69_49 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="WriteLiteral(''                            </td>\n'')", span="345-345"];
m69_3 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="int from, perPage", span="71-71"];
m69_35 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="job.Value == null", span="260-260"];
m69_43 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="job.Value.DeletedAt.HasValue", span="309-309"];
m69_53 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="QueuesPage.generated.cs", label="Exit HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m69_64 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="QueuesPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m69_68 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="QueuesPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m69_58 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="QueuesPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m69_66 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="QueuesPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m69_70 [file="QueuesPage.generated.cs", label="HangFire.Web.Pages.DeletedJobsPage", span=""];
m70_0 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.RabbitMqChannel(System.Collections.Generic.IEnumerable<string>)", file="RabbitMqChannel.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.RabbitMqChannel(System.Collections.Generic.IEnumerable<string>)", span="10-10"];
m70_1 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.RabbitMqChannel(System.Collections.Generic.IEnumerable<string>)", file="RabbitMqChannel.cs", label="_queues = queues", span="12-12"];
m70_2 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.RabbitMqChannel(System.Collections.Generic.IEnumerable<string>)", file="RabbitMqChannel.cs", label="ConnectionFactory = new ConnectionFactory { HostName = ''localhost'' }", span="13-13"];
m70_3 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.RabbitMqChannel(System.Collections.Generic.IEnumerable<string>)", file="RabbitMqChannel.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.RabbitMqChannel(System.Collections.Generic.IEnumerable<string>)", span="10-10"];
m70_4 [cluster="ConnectionFactory.cstr", file="RabbitMqChannel.cs", label="Entry ConnectionFactory.cstr", span=""];
m70_8 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqChannel.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="23-23"];
m70_5 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.CreateQueue()", file="RabbitMqChannel.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.CreateQueue()", span="18-18"];
m70_6 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.CreateQueue()", file="RabbitMqChannel.cs", label="return new RabbitMqJobQueue(_queues, ConnectionFactory);", span="20-20"];
m70_7 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.CreateQueue()", file="RabbitMqChannel.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.CreateQueue()", span="18-18"];
m70_9 [file="RabbitMqChannel.cs", label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel", span=""];
m71_19 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RabbitMqConnectionConfiguration.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m71_6 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", file="RabbitMqConnectionConfiguration.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", span="28-28"];
m71_7 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: host == null", span="30-30"];
m71_8 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: throw new ArgumentNullException(''host'');", span="30-30"];
m71_9 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: username == null", span="31-31"];
m71_10 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: throw new ArgumentNullException(''username'');", span="31-31"];
m71_11 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: password == null", span="32-32"];
m71_12 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: throw new ArgumentNullException(''password'');", span="32-32"];
m71_13 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: HostName = host", span="34-34"];
m71_14 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: Username = username", span="35-35"];
m71_15 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: Password = password", span="36-36"];
m71_16 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: Port = port", span="37-37"];
m71_17 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", color=green, community=0, file="RabbitMqConnectionConfiguration.cs", label="0: VirtualHost = DefaultVirtualHost", span="38-38"];
m71_18 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", file="RabbitMqConnectionConfiguration.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration(string, int, string, string)", span="28-28"];
m71_20 [file="RabbitMqConnectionConfiguration.cs", label="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration", span=""];
m72_82 [cluster="System.Console.WriteLine(string, object)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m72_0 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry ConsoleSample.Program.Main()", span="13-13"];
m72_1 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: LogManager.LogFactory = new ConsoleLogFactory()", span="15-15"];
m72_2 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: JobStorage.Current = \r\n                new SqlServerStorage(@''Server=.\sqlexpress;Database=HangFire.SqlServer.Tests;Trusted_Connection=True;'')", span="17-18"];
m72_3 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: GlobalJobFilters.Filters.Add(new RetryAttribute())", span="21-21"];
m72_4 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="1: var server = new BackgroundJobServer(25, ''critical'', ''default'')", span="23-23"];
m72_5 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: var count = 1", span="25-25"];
m72_10 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: server.Start()", span="38-38"];
m72_6 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: true", span="27-27"];
m72_44 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="var number = count++", span="97-97"];
m72_9 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: command.Equals(''start'', StringComparison.OrdinalIgnoreCase)", span="36-36"];
m72_11 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="41-41"];
m72_49 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="107-107"];
m72_52 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="123-123"];
m72_54 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="Console.WriteLine(ex.Message)", span="127-127"];
m72_7 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: var command = Console.ReadLine()", span="29-29"];
m72_55 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="133-133"];
m72_8 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="31-31"];
m72_12 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: var workCount = int.Parse(command.Substring(4))", span="45-45"];
m72_21 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="59-59"];
m72_22 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: var workCount = int.Parse(command.Substring(7))", span="63-63"];
m72_30 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="76-76"];
m72_31 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="2: var workCount = int.Parse(command.Substring(6))", span="78-78"];
m72_36 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="85-85"];
m72_37 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="var workCount = int.Parse(command.Substring(5))", span="87-87"];
m72_42 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="94-94"];
m72_43 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="var seconds = int.Parse(command.Substring(2))", span="96-96"];
m72_46 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="101-101"];
m72_50 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="var workCount = int.Parse(command.Substring(5))", span="111-111"];
m72_13 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: var i = 0", span="46-46"];
m72_14 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: i < workCount", span="46-46"];
m72_18 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: Console.WriteLine(''Jobs enqueued.'')", span="51-51"];
m72_20 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="5: Console.WriteLine(ex.Message)", span="55-55"];
m72_23 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: var i = 0", span="64-64"];
m72_24 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: i < workCount", span="64-64"];
m72_27 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: Console.WriteLine(''Jobs enqueued.'')", span="68-68"];
m72_29 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="5: Console.WriteLine(ex.Message)", span="72-72"];
m72_32 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: var i = 0", span="79-79"];
m72_33 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: i < workCount", span="79-79"];
m72_15 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="5: var number = i", span="48-48"];
m72_17 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="1: i++", span="46-46"];
m72_16 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="49-49"];
m72_19 [cluster="ConsoleSample.Program.Main()", color=green, community=1, file="RabbitMqConnectionConfigurationFacts.cs", label="5: Exception", span="53-53"];
m72_26 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="1: i++", span="64-64"];
m72_25 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="66-66"];
m72_28 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="5: Exception", span="70-70"];
m72_35 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="1: i++", span="79-79"];
m72_34 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: BackgroundJob.Enqueue<Services>(x => x.Error())", span="81-81"];
m72_45 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="98-98"];
m72_48 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="Console.WriteLine(''Recurring job added'')", span="104-104"];
m72_51 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="112-122"];
m72_53 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label=Exception, span="125-125"];
m72_56 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="Console.ReadLine()", span="134-134"];
m72_38 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="var i = 0", span="88-88"];
m72_39 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="i < workCount", span="88-88"];
m72_47 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Recurring())", span="103-103"];
m72_40 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="90-90"];
m72_41 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="i++", span="88-88"];
m72_57 [cluster="ConsoleSample.Program.Main()", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit ConsoleSample.Program.Main()", span="13-13"];
m72_61 [cluster="HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", span="56-56"];
m72_108 [cluster="ConsoleSample.Services.EmptyCritical()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="17-17"];
m72_60 [cluster="HangFire.Filters.RetryAttribute.RetryAttribute()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry HangFire.Filters.RetryAttribute.RetryAttribute()", span="28-28"];
m72_86 [cluster="ConsoleSample.Services.Error()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry ConsoleSample.Services.Error()", span="22-22"];
m72_73 [cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="139-139"];
m72_69 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="100-100"];
m72_68 [cluster="int.Parse(string)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m72_72 [cluster="System.TimeSpan.FromSeconds(double)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m72_62 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41"];
m72_78 [cluster="ConsoleSample.Services.Random(int)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry ConsoleSample.Services.Random(int)", span="35-35"];
m72_91 [cluster="System.Guid.ToString()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry System.Guid.ToString()", span="0-0"];
m72_66 [cluster="string.StartsWith(string, System.StringComparison)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m72_92 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="52-52"];
m72_63 [cluster="System.Console.ReadLine()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m72_99 [cluster="ConsoleSample.Services.Recurring()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry ConsoleSample.Services.Recurring()", span="29-29"];
m72_109 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry lambda expression", span="120-120"];
m72_76 [cluster="lambda expression", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: x.Random(number)", span="49-49"];
m72_75 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry lambda expression", span="49-49"];
m72_77 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit lambda expression", span="49-49"];
m72_79 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry lambda expression", span="66-66"];
m72_83 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry lambda expression", span="81-81"];
m72_80 [cluster="lambda expression", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: Console.WriteLine(''Hello, {0}!'', ''world'')", span="66-66"];
m72_81 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit lambda expression", span="66-66"];
m72_84 [cluster="lambda expression", color=green, community=0, file="RabbitMqConnectionConfigurationFacts.cs", label="0: x.Error()", span="81-81"];
m72_85 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit lambda expression", span="81-81"];
m72_94 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="x.Random(number)", span="98-98"];
m72_102 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="116-116"];
m72_103 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="120-120"];
m72_93 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry lambda expression", span="98-98"];
m72_95 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit lambda expression", span="98-98"];
m72_100 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry lambda expression", span="112-122"];
m72_96 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry lambda expression", span="103-103"];
m72_87 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry lambda expression", span="90-90"];
m72_101 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="i % 2 == 0", span="114-114"];
m72_104 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit lambda expression", span="112-122"];
m72_105 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry lambda expression", span="116-116"];
m72_98 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit lambda expression", span="103-103"];
m72_97 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="x.Recurring()", span="103-103"];
m72_89 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit lambda expression", span="90-90"];
m72_88 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="90-90"];
m72_107 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit lambda expression", span="116-116"];
m72_106 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="x.EmptyCritical()", span="116-116"];
m72_110 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="x.EmptyDefault()", span="120-120"];
m72_111 [cluster="lambda expression", file="RabbitMqConnectionConfigurationFacts.cs", label="Exit lambda expression", span="120-120"];
m72_64 [cluster="string.Equals(string, System.StringComparison)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m72_74 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m72_90 [cluster="System.Guid.NewGuid()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m72_65 [cluster="HangFire.BackgroundJobServer.Start()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="98-98"];
m72_59 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25"];
m72_71 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79"];
m72_70 [cluster="System.Console.WriteLine(string)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m72_58 [cluster="ConsoleLogFactory.cstr", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m72_112 [cluster="ConsoleSample.Services.EmptyDefault()", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="12-12"];
m72_67 [cluster="string.Substring(int)", file="RabbitMqConnectionConfigurationFacts.cs", label="Entry string.Substring(int)", span="0-0"];
m72_113 [file="RabbitMqConnectionConfigurationFacts.cs", label=number, span=""];
m72_114 [file="RabbitMqConnectionConfigurationFacts.cs", label=number, span=""];
m73_637 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.LoupeLogger(string, Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.LoupeLogger(string, Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate)", span="1295-1295"];
m73_650 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.LoupeLogger(string, Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate)", file="RabbitMqFetchedJob.cs", label="_category = category", span="1297-1297"];
m73_651 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.LoupeLogger(string, Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate)", file="RabbitMqFetchedJob.cs", label="_logWriteDelegate = logWriteDelegate", span="1298-1298"];
m73_652 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.LoupeLogger(string, Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate)", file="RabbitMqFetchedJob.cs", label="_skipLevel = 1", span="1299-1299"];
m73_653 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.LoupeLogger(string, Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.LoupeLogger(string, Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate)", span="1295-1295"];
m73_634 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogger(string)", span="1257-1257"];
m73_635 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="return new LoupeLogger(name, _logWriteDelegate);", span="1259-1259"];
m73_636 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogger(string)", span="1257-1257"];
m73_535 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="RabbitMqFetchedJob.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m73_249 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
m73_54 [cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", span="151-151"];
m73_55 [cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.IsErrorEnabled()", span="153-153"];
m73_56 [cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.LogFormat(LogLevel.Error, message, args)", span="155-155"];
m73_57 [cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", span="151-151"];
m73_348 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", span="704-704"];
m73_360 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", file="RabbitMqFetchedJob.cs", label="_logger = logger", span="706-706"];
m73_361 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", span="704-704"];
m73_322 [cluster="Unk.WarnException", file="RabbitMqFetchedJob.cs", label="Entry Unk.WarnException", span=""];
m73_6 [cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", span="286-286"];
m73_129 [cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="logger == null", span="288-288"];
m73_130 [cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="throw new ArgumentNullException(''logger'');", span="290-290"];
m73_131 [cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", span="286-286"];
m73_155 [cluster="System.Diagnostics.StackFrame.GetMethod()", file="RabbitMqFetchedJob.cs", label="Entry System.Diagnostics.StackFrame.GetMethod()", span="0-0"];
m73_661 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate.Invoke(int, string, int, System.Exception, bool, int, string, string, string, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate.Invoke(int, string, int, System.Exception, bool, int, string, string, string, string, params object[])", span="1341-1341"];
m73_203 [cluster="Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="417-417"];
m73_204 [cluster="Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return false;", span="419-419"];
m73_205 [cluster="Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProvider.NoOpLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="417-417"];
m73_289 [cluster="Unk.Info", file="RabbitMqFetchedJob.cs", label="Entry Unk.Info", span=""];
m73_686 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", span="1426-1426"];
m73_709 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", file="RabbitMqFetchedJob.cs", label="_name = name", span="1428-1428"];
m73_710 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", span="1426-1426"];
m73_687 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", span="1394-1394"];
m73_688 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="var stringBuilder = new StringBuilder()", span="1396-1396"];
m73_691 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="stringBuilder.Append((''['' + level.ToString().ToUpper() + '']'').PadRight(8))", span="1403-1403"];
m73_692 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="stringBuilder.Append(''('' + loggerName + '') '')", span="1405-1405"];
m73_693 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="stringBuilder.Append(message)", span="1408-1408"];
m73_694 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="e != null", span="1411-1411"];
m73_695 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="stringBuilder.Append(Environment.NewLine).Append(e.GetType())", span="1413-1413"];
m73_696 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="stringBuilder.Append(Environment.NewLine).Append(e.Message)", span="1414-1414"];
m73_697 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="stringBuilder.Append(Environment.NewLine).Append(e.StackTrace)", span="1415-1415"];
m73_689 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="stringBuilder.Append(DateTime.Now.ToString(''yyyy-MM-dd hh:mm:ss'', CultureInfo.InvariantCulture))", span="1398-1398"];
m73_690 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="stringBuilder.Append('' '')", span="1400-1400"];
m73_698 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="return stringBuilder.ToString();", span="1418-1418"];
m73_699 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.DefaultMessageFormatter(string, Hangfire.Logging.LogLevel, object, System.Exception)", span="1394-1394"];
m73_49 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", span="143-143"];
m73_50 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.IsErrorEnabled()", span="145-145"];
m73_51 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Error, message.AsFunc())", span="147-147"];
m73_52 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", span="143-143"];
m73_520 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", span="1011-1011"];
m73_521 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="return Type.GetType(''Serilog.Log, Serilog'');", span="1013-1013"];
m73_522 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", span="1011-1011"];
m73_251 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m73_53 [cluster="Hangfire.Logging.ILog.IsErrorEnabled()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.ILog.IsErrorEnabled()", span="78-78"];
m73_37 [cluster="Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", span="122-122"];
m73_38 [cluster="Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.IsDebugEnabled()", span="124-124"];
m73_39 [cluster="Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.LogFormat(LogLevel.Debug, message, args)", span="126-126"];
m73_40 [cluster="Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.DebugFormat(Hangfire.Logging.ILog, string, params object[])", span="122-122"];
m73_705 [cluster="string.PadRight(int)", file="RabbitMqFetchedJob.cs", label="Entry string.PadRight(int)", span="0-0"];
m73_23 [cluster="Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", span="102-102"];
m73_24 [cluster="Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="104-104"];
m73_25 [cluster="Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="return logger.Log(LogLevel.Warn, null);", span="105-105"];
m73_26 [cluster="Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", span="102-102"];
m73_78 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", span="196-196"];
m73_79 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="198-198"];
m73_80 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Info, messageFunc)", span="199-199"];
m73_81 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", span="196-196"];
m73_565 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m73_782 [cluster="Unk.Log", file="RabbitMqFetchedJob.cs", label="Entry Unk.Log", span=""];
m73_320 [cluster="Unk.DebugException", file="RabbitMqFetchedJob.cs", label="Entry Unk.DebugException", span=""];
m73_762 [cluster="System.Linq.Expressions.Expression.Constant(object, System.Type)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Constant(object, System.Type)", span="0-0"];
m73_42 [cluster="Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", span="130-130"];
m73_43 [cluster="Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.IsDebugEnabled()", span="132-132"];
m73_44 [cluster="Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Debug, message.AsFunc(), exception)", span="134-134"];
m73_45 [cluster="Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.DebugException(Hangfire.Logging.ILog, string, System.Exception)", span="130-130"];
m73_517 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", span="1114-1114"];
m73_567 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", file="RabbitMqFetchedJob.cs", label="_logger = logger", span="1116-1116"];
m73_568 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", span="1114-1114"];
m73_654 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1302-1302"];
m73_655 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="messageFunc == null", span="1304-1304"];
m73_657 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logWriteDelegate((int)ToLogMessageSeverity(logLevel), LogSystem, _skipLevel, exception, true, 0, null,\r\n                    _category, null, messageFunc.Invoke())", span="1310-1311"];
m73_656 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1307-1307"];
m73_658 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1313-1313"];
m73_659 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1302-1302"];
m73_146 [cluster="Hangfire.Logging.LogProvider.For<T>()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.For<T>()", span="333-333"];
m73_147 [cluster="Hangfire.Logging.LogProvider.For<T>()", file="RabbitMqFetchedJob.cs", label="return GetLogger(typeof(T));", span="335-335"];
m73_148 [cluster="Hangfire.Logging.LogProvider.For<T>()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProvider.For<T>()", span="333-333"];
m73_11 [cluster="Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", span="84-84"];
m73_12 [cluster="Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="86-86"];
m73_13 [cluster="Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="return logger.Log(LogLevel.Fatal, null);", span="87-87"];
m73_14 [cluster="Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.IsFatalEnabled(Hangfire.Logging.ILog)", span="84-84"];
m73_292 [cluster="Unk.Fatal", file="RabbitMqFetchedJob.cs", label="Entry Unk.Fatal", span=""];
m73_717 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", span="1442-1442"];
m73_718 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="var formattedMessage = MessageFormatter(this._name, logLevel, message, e)", span="1444-1444"];
m73_720 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Colors.TryGetValue(logLevel, out color)", span="1447-1447"];
m73_719 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="ConsoleColor color", span="1445-1445"];
m73_724 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Console.Out.WriteLine(formattedMessage)", span="1455-1455"];
m73_725 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Console.Out.WriteLine(formattedMessage)", span="1465-1465"];
m73_721 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label=Lock, span="1449-1449"];
m73_723 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Console.ForegroundColor = color", span="1454-1454"];
m73_722 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="var originalColor = Console.ForegroundColor", span="1451-1451"];
m73_726 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", span="1442-1442"];
m73_677 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="RabbitMqFetchedJob.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m73_91 [cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", span="218-218"];
m73_92 [cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.IsInfoEnabled()", span="220-220"];
m73_93 [cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Info, message.AsFunc(), exception)", span="222-222"];
m73_94 [cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", span="218-218"];
m73_627 [cluster="System.Action<T1, T2, T3, T4>.Invoke(T1, T2, T3, T4)", file="RabbitMqFetchedJob.cs", label="Entry System.Action<T1, T2, T3, T4>.Invoke(T1, T2, T3, T4)", span="0-0"];
m73_116 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", span="262-262"];
m73_117 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.IsWarnEnabled()", span="264-264"];
m73_118 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Warn, message.AsFunc())", span="266-266"];
m73_119 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", span="262-262"];
m73_351 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", span="686-686"];
m73_352 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="return Type.GetType(''log4net.LogManager, log4net'');", span="688-688"];
m73_353 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", span="686-686"];
m73_741 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogger(string)", span="1505-1505"];
m73_742 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="return new ElmahLog(_minLevel, _getErrorLogDelegate(), _errorType);", span="1507-1507"];
m73_743 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogger(string)", span="1505-1505"];
m73_288 [cluster="Unk.Debug", file="RabbitMqFetchedJob.cs", label="Entry Unk.Debug", span=""];
m73_649 [cluster="System.Reflection.MethodInfo.CreateDelegate(System.Type)", file="RabbitMqFetchedJob.cs", label="Entry System.Reflection.MethodInfo.CreateDelegate(System.Type)", span="0-0"];
m73_238 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", span="504-504"];
m73_239 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="return Type.GetType(''NLog.LogManager, NLog'');", span="506-506"];
m73_240 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", span="504-504"];
m73_7 [cluster="Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", span="78-78"];
m73_8 [cluster="Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="80-80"];
m73_9 [cluster="Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="return logger.Log(LogLevel.Error, null);", span="81-81"];
m73_10 [cluster="Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.IsErrorEnabled(Hangfire.Logging.ILog)", span="78-78"];
m73_87 [cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", span="210-210"];
m73_88 [cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.IsInfoEnabled()", span="212-212"];
m73_89 [cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.LogFormat(LogLevel.Info, message, args)", span="214-214"];
m73_90 [cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", span="210-210"];
m73_103 [cluster="Hangfire.Logging.ILog.IsTraceEnabled()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.ILog.IsTraceEnabled()", span="96-96"];
m73_132 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RabbitMqFetchedJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m73_293 [cluster="Unk.Trace", file="RabbitMqFetchedJob.cs", label="Entry Unk.Trace", span=""];
m73_287 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="585-585"];
m73_294 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label=logLevel, span="587-587"];
m73_297 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.DebugException(messageFunc(), exception)", span="592-592"];
m73_301 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.InfoException(messageFunc(), exception)", span="599-599"];
m73_305 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.WarnException(messageFunc(), exception)", span="606-606"];
m73_309 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.ErrorException(messageFunc(), exception)", span="613-613"];
m73_313 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.FatalException(messageFunc(), exception)", span="620-620"];
m73_316 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.TraceException(messageFunc(), exception)", span="627-627"];
m73_295 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Debug", span="589-589"];
m73_299 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="596-596"];
m73_303 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="603-603"];
m73_307 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="610-610"];
m73_311 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="617-617"];
m73_315 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsTraceEnabled", span="625-625"];
m73_296 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsDebugEnabled", span="590-590"];
m73_318 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return false;", span="632-632"];
m73_298 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="593-593"];
m73_300 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsInfoEnabled", span="597-597"];
m73_302 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="600-600"];
m73_304 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsWarnEnabled", span="604-604"];
m73_306 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="607-607"];
m73_308 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsErrorEnabled", span="611-611"];
m73_310 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="614-614"];
m73_312 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsFatalEnabled", span="618-618"];
m73_314 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="621-621"];
m73_317 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="628-628"];
m73_319 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="585-585"];
m73_479 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="939-939"];
m73_480 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="var severity = MapSeverity(logLevel)", span="941-941"];
m73_481 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="messageFunc == null", span="942-942"];
m73_483 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="exception != null", span="946-946"];
m73_484 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return LogException(logLevel, messageFunc, exception);", span="948-948"];
m73_485 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_writeLog(_loggerName, messageFunc(), severity)", span="950-950"];
m73_482 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return _shouldLog(_loggerName, severity);", span="944-944"];
m73_486 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="951-951"];
m73_487 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="939-939"];
m73_456 [cluster="System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)", span="0-0"];
m73_488 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", span="962-962"];
m73_497 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label=logLevel, span="964-964"];
m73_498 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="966-966"];
m73_500 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="968-968"];
m73_502 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="970-970"];
m73_504 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="972-972"];
m73_506 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Verbose;", span="975-975"];
m73_499 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Critical;", span="967-967"];
m73_501 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Error;", span="969-969"];
m73_503 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Warning;", span="971-971"];
m73_505 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Information;", span="973-973"];
m73_507 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.MapSeverity(Hangfire.Logging.LogLevel)", span="962-962"];
m73_137 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m73_678 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", span="1358-1358"];
m73_679 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", file="RabbitMqFetchedJob.cs", label="MessageFormatter = DefaultMessageFormatter", span="1360-1360"];
m73_680 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", file="RabbitMqFetchedJob.cs", label="Colors = new Dictionary<LogLevel, ConsoleColor> {\r\n                        { LogLevel.Fatal, ConsoleColor.Red },\r\n                        { LogLevel.Error, ConsoleColor.Yellow },\r\n                        { LogLevel.Warn, ConsoleColor.Magenta },\r\n                        { LogLevel.Info, ConsoleColor.White },\r\n                        { LogLevel.Debug, ConsoleColor.Gray },\r\n                        { LogLevel.Trace, ConsoleColor.DarkGray },\r\n                    }", span="1361-1368"];
m73_681 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", span="1358-1358"];
m73_536 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", span="1051-1051"];
m73_537 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="var logEventTypeType = Type.GetType(''Serilog.Events.LogEventLevel, Serilog'')", span="1053-1053"];
m73_538 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="DebugLevel = Enum.Parse(logEventTypeType, ''Debug'')", span="1054-1054"];
m73_539 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="ErrorLevel = Enum.Parse(logEventTypeType, ''Error'')", span="1055-1055"];
m73_540 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="FatalLevel = Enum.Parse(logEventTypeType, ''Fatal'')", span="1056-1056"];
m73_541 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="InformationLevel = Enum.Parse(logEventTypeType, ''Information'')", span="1057-1057"];
m73_542 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="VerboseLevel = Enum.Parse(logEventTypeType, ''Verbose'')", span="1058-1058"];
m73_543 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="WarningLevel = Enum.Parse(logEventTypeType, ''Warning'')", span="1059-1059"];
m73_549 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="UnaryExpression levelCast = Expression.Convert(levelParam, logEventTypeType)", span="1067-1067"];
m73_552 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="MethodInfo writeMethodInfo = loggerType.GetMethod(''Write'', new[] { logEventTypeType, typeof(string), typeof(object[]) })", span="1077-1077"];
m73_557 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="MethodInfo writeExceptionMethodInfo = loggerType.GetMethod(''Write'', new[]\r\n                {\r\n                    logEventTypeType,\r\n                    typeof(Exception), \r\n                    typeof(string),\r\n                    typeof(object[])\r\n                })", span="1090-1096"];
m73_544 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="var loggerType = Type.GetType(''Serilog.ILogger, Serilog'')", span="1062-1062"];
m73_545 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="MethodInfo isEnabledMethodInfo = loggerType.GetMethod(''IsEnabled'')", span="1063-1063"];
m73_547 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="UnaryExpression instanceCast = Expression.Convert(instanceParam, loggerType)", span="1065-1065"];
m73_546 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="ParameterExpression instanceParam = Expression.Parameter(typeof(object))", span="1064-1064"];
m73_550 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="MethodCallExpression isEnabledMethodCall = Expression.Call(instanceCast, isEnabledMethodInfo, levelCast)", span="1068-1068"];
m73_551 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="IsEnabled = Expression.Lambda<Func<object, object, bool>>(isEnabledMethodCall, new[]\r\n                {\r\n                    instanceParam,\r\n                    levelParam\r\n                }).Compile()", span="1069-1073"];
m73_556 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="Write = Expression.Lambda<Action<object, object, string>>(writeMethodExp, new[]\r\n                {\r\n                    instanceParam,\r\n                    levelParam,\r\n                    messageParam\r\n                }).Compile()", span="1081-1086"];
m73_560 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="WriteException = Expression.Lambda<Action<object, object, Exception, string>>(writeMethodExp, new[]\r\n                {\r\n                    instanceParam,\r\n                    levelParam,\r\n                    exceptionParam,\r\n                    messageParam,\r\n                }).Compile()", span="1105-1111"];
m73_548 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="ParameterExpression levelParam = Expression.Parameter(typeof(object))", span="1066-1066"];
m73_555 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="MethodCallExpression writeMethodExp = Expression.Call(instanceCast, writeMethodInfo, levelCast, messageParam, propertyValuesParam)", span="1080-1080"];
m73_559 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="writeMethodExp = Expression.Call(\r\n                    instanceCast,\r\n                    writeExceptionMethodInfo,\r\n                    levelCast,\r\n                    exceptionParam,\r\n                    messageParam,\r\n                    propertyValuesParam)", span="1098-1104"];
m73_553 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="ParameterExpression messageParam = Expression.Parameter(typeof(string))", span="1078-1078"];
m73_554 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="ConstantExpression propertyValuesParam = Expression.Constant(new object[0])", span="1079-1079"];
m73_558 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="ParameterExpression exceptionParam = Expression.Parameter(typeof(Exception))", span="1097-1097"];
m73_561 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", span="1051-1051"];
m73_465 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogExpression(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="RabbitMqFetchedJob.cs", label="var entryType = LogEntryType", span="910-910"];
m73_455 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogExpression(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogExpression(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", span="907-907"];
m73_466 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogExpression(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="RabbitMqFetchedJob.cs", label="MemberInitExpression memberInit = Expression.MemberInit(Expression.New(entryType), new MemberBinding[]\r\n            {\r\n                Expression.Bind(entryType.GetProperty(''Message''), message),\r\n                Expression.Bind(entryType.GetProperty(''Severity''), severityParameter),\r\n                Expression.Bind(entryType.GetProperty(''TimeStamp''),\r\n                    Expression.Property(null, typeof (DateTime).GetProperty(''UtcNow''))),\r\n                Expression.Bind(entryType.GetProperty(''Categories''),\r\n                    Expression.ListInit(\r\n                        Expression.New(typeof (List<string>)),\r\n                        typeof (List<string>).GetMethod(''Add'', new[] {typeof (string)}),\r\n                        logNameParameter))\r\n            })", span="911-922"];
m73_467 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogExpression(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="RabbitMqFetchedJob.cs", label="return memberInit;", span="923-923"];
m73_468 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogExpression(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogExpression(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", span="907-907"];
m73_564 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type)", span="0-0"];
m73_343 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", span="681-681"];
m73_349 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="683-683"];
m73_350 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", span="681-681"];
m73_74 [cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", span="188-188"];
m73_75 [cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.IsFatalEnabled()", span="190-190"];
m73_76 [cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Fatal, message.AsFunc(), exception)", span="192-192"];
m73_77 [cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", span="188-188"];
m73_563 [cluster="System.Type.GetMethod(string)", file="RabbitMqFetchedJob.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m73_158 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(string)", span="363-363"];
m73_159 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="ILogProvider logProvider = _currentLogProvider ?? ResolveLogProvider()", span="365-365"];
m73_160 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="return logProvider == null ? new NoOpLogger() : (ILog)new LoggerExecutionWrapper(logProvider.GetLogger(name));", span="366-366"];
m73_161 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProvider.GetLogger(string)", span="363-363"];
m73_99 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", span="232-232"];
m73_100 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.IsTraceEnabled()", span="234-234"];
m73_101 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Trace, message.AsFunc())", span="236-236"];
m73_102 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", span="232-232"];
m73_491 [cluster="System.Action<T1, T2, T3>.Invoke(T1, T2, T3)", file="RabbitMqFetchedJob.cs", label="Entry System.Action<T1, T2, T3>.Invoke(T1, T2, T3)", span="0-0"];
m73_191 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider()", span="1481-1481"];
m73_730 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider()", span="1481-1481"];
m73_235 [cluster="System.Func<T, TResult>.Invoke(T)", file="RabbitMqFetchedJob.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m73_706 [cluster="System.Text.StringBuilder.Append(object)", file="RabbitMqFetchedJob.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m73_252 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m73_321 [cluster="Unk.InfoException", file="RabbitMqFetchedJob.cs", label="Entry Unk.InfoException", span=""];
m73_31 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", span="114-114"];
m73_32 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.IsDebugEnabled()", span="116-116"];
m73_33 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Debug, message.AsFunc())", span="118-118"];
m73_34 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, string)", span="114-114"];
m73_69 [cluster="Hangfire.Logging.ILog.IsFatalEnabled()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.ILog.IsFatalEnabled()", span="84-84"];
m73_165 [cluster="Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", span="373-373"];
m73_166 [cluster="Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", file="RabbitMqFetchedJob.cs", label="_currentLogProvider = logProvider", span="375-375"];
m73_167 [cluster="Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProvider.SetCurrentLogProvider(Hangfire.Logging.ILogProvider)", span="373-373"];
m73_512 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", span="1006-1006"];
m73_518 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="1008-1008"];
m73_519 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", span="1006-1006"];
m73_704 [cluster="string.ToUpper()", file="RabbitMqFetchedJob.cs", label="Entry string.ToUpper()", span="0-0"];
m73_390 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="760-760"];
m73_391 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label=logLevel, span="762-762"];
m73_394 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Info(messageFunc(), exception)", span="767-767"];
m73_398 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Warn(messageFunc(), exception)", span="774-774"];
m73_402 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Error(messageFunc(), exception)", span="781-781"];
m73_406 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Fatal(messageFunc(), exception)", span="788-788"];
m73_409 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Debug(messageFunc(), exception)", span="795-795"];
m73_392 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="764-764"];
m73_396 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="771-771"];
m73_400 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="778-778"];
m73_404 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="785-785"];
m73_408 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsDebugEnabled", span="793-793"];
m73_393 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsDebugEnabled", span="765-765"];
m73_411 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return false;", span="800-800"];
m73_395 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="768-768"];
m73_397 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsWarnEnabled", span="772-772"];
m73_399 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="775-775"];
m73_401 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsErrorEnabled", span="779-779"];
m73_403 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="782-782"];
m73_405 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsFatalEnabled", span="786-786"];
m73_407 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="789-789"];
m73_410 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="796-796"];
m73_412 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="760-760"];
m73_133 [cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", span="294-294"];
m73_134 [cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", file="RabbitMqFetchedJob.cs", label="var result = string.Format(CultureInfo.InvariantCulture, message, args)", span="296-296"];
m73_135 [cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.Log(logLevel, result.AsFunc())", span="297-297"];
m73_136 [cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", span="294-294"];
m73_15 [cluster="Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", span="90-90"];
m73_16 [cluster="Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="92-92"];
m73_17 [cluster="Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="return logger.Log(LogLevel.Info, null);", span="93-93"];
m73_18 [cluster="Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.IsInfoEnabled(Hangfire.Logging.ILog)", span="90-90"];
m73_0 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54"];
m73_1 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54"];
m73_150 [cluster="Hangfire.Logging.LogProvider.GetCurrentClassLogger()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.GetCurrentClassLogger()", span="342-342"];
m73_151 [cluster="Hangfire.Logging.LogProvider.GetCurrentClassLogger()", file="RabbitMqFetchedJob.cs", label="var stackFrame = new StackFrame(1, false)", span="344-344"];
m73_152 [cluster="Hangfire.Logging.LogProvider.GetCurrentClassLogger()", file="RabbitMqFetchedJob.cs", label="return GetLogger(stackFrame.GetMethod().DeclaringType);", span="345-345"];
m73_153 [cluster="Hangfire.Logging.LogProvider.GetCurrentClassLogger()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProvider.GetCurrentClassLogger()", span="342-342"];
m73_532 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Entry lambda expression", span="1035-1035"];
m73_168 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Entry lambda expression", span="385-385"];
m73_169 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="new SerilogLogProvider()", span="385-385"];
m73_170 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Exit lambda expression", span="385-385"];
m73_172 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Entry lambda expression", span="386-386"];
m73_173 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="new NLogLogProvider()", span="386-386"];
m73_174 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Exit lambda expression", span="386-386"];
m73_176 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Entry lambda expression", span="387-387"];
m73_177 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="new Log4NetLogProvider()", span="387-387"];
m73_178 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Exit lambda expression", span="387-387"];
m73_180 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Entry lambda expression", span="388-388"];
m73_181 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="new EntLibLogProvider()", span="388-388"];
m73_182 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Exit lambda expression", span="388-388"];
m73_184 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Entry lambda expression", span="389-389"];
m73_185 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="new LoupeLogProvider()", span="389-389"];
m73_186 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Exit lambda expression", span="389-389"];
m73_188 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Entry lambda expression", span="390-390"];
m73_189 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="new ElmahLogProvider()", span="390-390"];
m73_190 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Exit lambda expression", span="390-390"];
m73_215 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="return messageFunc();", span="450-450"];
m73_217 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Log(LogLevel.Error, () => FailedToGenerateLogMessage, ex)", span="454-454"];
m73_214 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Entry lambda expression", span="446-457"];
m73_216 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label=Exception, span="452-452"];
m73_218 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="return null;", span="456-456"];
m73_221 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Entry lambda expression", span="454-454"];
m73_219 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Exit lambda expression", span="446-457"];
m73_222 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label=FailedToGenerateLogMessage, span="454-454"];
m73_223 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Exit lambda expression", span="454-454"];
m73_533 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="func(''Name'', name, false)", span="1035-1035"];
m73_534 [cluster="lambda expression", file="RabbitMqFetchedJob.cs", label="Exit lambda expression", span="1035-1035"];
m73_707 [cluster="System.Exception.GetType()", file="RabbitMqFetchedJob.cs", label="Entry System.Exception.GetType()", span="0-0"];
m73_469 [cluster="System.Linq.Expressions.Expression.New(System.Type)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.New(System.Type)", span="0-0"];
m73_154 [cluster="System.Diagnostics.StackFrame.StackFrame(int, bool)", file="RabbitMqFetchedJob.cs", label="Entry System.Diagnostics.StackFrame.StackFrame(int, bool)", span="0-0"];
m73_738 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.IsLoggerAvailable()", span="1510-1510"];
m73_745 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="return ProviderIsAvailableOverride && GetLogManagerType() != null && GetErrorType() != null;", span="1512-1512"];
m73_746 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.IsLoggerAvailable()", span="1510-1510"];
m73_325 [cluster="Unk.TraceException", file="RabbitMqFetchedJob.cs", label="Entry Unk.TraceException", span=""];
m73_432 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="ShouldLogEntry = GetShouldLogEntry()", span="842-842"];
m73_183 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", span="845-845"];
m73_426 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", span="833-833"];
m73_427 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="LogEntryType = Type.GetType(string.Format(TypeTemplate, ''LogEntry''))", span="835-835"];
m73_428 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="LoggerType = Type.GetType(string.Format(TypeTemplate, ''Logger''))", span="836-836"];
m73_429 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="LogEntryType == null || LoggerType == null", span="837-837"];
m73_430 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="return;", span="839-839"];
m73_431 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="WriteLogEntry = GetWriteLogEntry()", span="841-841"];
m73_433 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", span="833-833"];
m73_437 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="!IsLoggerAvailable()", span="847-847"];
m73_438 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="throw new InvalidOperationException(''Microsoft.Practices.EnterpriseLibrary.Logging.Logger not found'');", span="849-849"];
m73_439 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogProvider()", span="845-845"];
m73_141 [cluster="Hangfire.Logging.LogExtensions.Return<T>(T)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Return<T>(T)", span="306-306"];
m73_142 [cluster="Hangfire.Logging.LogExtensions.Return<T>(T)", file="RabbitMqFetchedJob.cs", label="return value;", span="308-308"];
m73_143 [cluster="Hangfire.Logging.LogExtensions.Return<T>(T)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Return<T>(T)", span="306-306"];
m73_489 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="RabbitMqFetchedJob.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m73_220 [cluster="System.Func<TResult>.Invoke()", file="RabbitMqFetchedJob.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m73_445 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="return ProviderIsAvailableOverride && LogEntryType != null;", span="866-866"];
m73_440 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.IsLoggerAvailable()", span="864-864"];
m73_446 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.IsLoggerAvailable()", span="864-864"];
m73_250 [cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m73_255 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="527-527"];
m73_256 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="messageFunc == null", span="529-529"];
m73_257 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return IsLogLevelEnable(logLevel);", span="531-531"];
m73_258 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="exception != null", span="533-533"];
m73_259 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return LogException(logLevel, messageFunc, exception);", span="535-535"];
m73_260 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label=logLevel, span="537-537"];
m73_263 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Debug(messageFunc())", span="542-542"];
m73_267 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Info(messageFunc())", span="549-549"];
m73_271 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Warn(messageFunc())", span="556-556"];
m73_275 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Error(messageFunc())", span="563-563"];
m73_279 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Fatal(messageFunc())", span="570-570"];
m73_282 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Trace(messageFunc())", span="577-577"];
m73_261 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Debug", span="539-539"];
m73_265 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="546-546"];
m73_269 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="553-553"];
m73_273 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="560-560"];
m73_277 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="567-567"];
m73_281 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsTraceEnabled", span="575-575"];
m73_262 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsDebugEnabled", span="540-540"];
m73_284 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return false;", span="582-582"];
m73_264 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="543-543"];
m73_266 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsInfoEnabled", span="547-547"];
m73_268 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="550-550"];
m73_270 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsWarnEnabled", span="554-554"];
m73_272 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="557-557"];
m73_274 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsErrorEnabled", span="561-561"];
m73_276 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="564-564"];
m73_278 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsFatalEnabled", span="568-568"];
m73_280 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="571-571"];
m73_283 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="578-578"];
m73_285 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="527-527"];
m73_727 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.MessageFormatterDelegate.Invoke(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.MessageFormatterDelegate.Invoke(string, Hangfire.Logging.LogLevel, object, System.Exception)", span="1384-1384"];
m73_562 [cluster="System.Enum.Parse(System.Type, string)", file="RabbitMqFetchedJob.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m73_228 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", span="499-499"];
m73_236 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="501-501"];
m73_237 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", span="499-499"];
m73_701 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="RabbitMqFetchedJob.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m73_231 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", span="494-494"];
m73_232 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="return new NLogLogger(_getLoggerByNameDelegate(name));", span="496-496"];
m73_233 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", span="494-494"];
m73_95 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", span="226-226"];
m73_96 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="228-228"];
m73_97 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Trace, messageFunc)", span="229-229"];
m73_98 [cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", span="226-226"];
m73_46 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", span="138-138"];
m73_47 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Error, messageFunc)", span="140-140"];
m73_48 [cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", span="138-138"];
m73_234 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", span="522-522"];
m73_253 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", file="RabbitMqFetchedJob.cs", label="_logger = logger", span="524-524"];
m73_254 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", span="522-522"];
m73_744 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.ElmahLog(Hangfire.Logging.LogLevel, dynamic, System.Type)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.ElmahLog(Hangfire.Logging.LogLevel, dynamic, System.Type)", span="1548-1548"];
m73_763 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.ElmahLog(Hangfire.Logging.LogLevel, dynamic, System.Type)", file="RabbitMqFetchedJob.cs", label="_minLevel = minLevel", span="1550-1550"];
m73_764 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.ElmahLog(Hangfire.Logging.LogLevel, dynamic, System.Type)", file="RabbitMqFetchedJob.cs", label="_errorType = errorType", span="1551-1551"];
m73_765 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.ElmahLog(Hangfire.Logging.LogLevel, dynamic, System.Type)", file="RabbitMqFetchedJob.cs", label="_errorLog = errorLog", span="1552-1552"];
m73_766 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.ElmahLog(Hangfire.Logging.LogLevel, dynamic, System.Type)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.ElmahLog(Hangfire.Logging.LogLevel, dynamic, System.Type)", span="1548-1548"];
m73_703 [cluster="System.Enum.ToString()", file="RabbitMqFetchedJob.cs", label="Entry System.Enum.ToString()", span="0-0"];
m73_750 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetHttpContextType()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.GetHttpContextType()", span="1520-1520"];
m73_751 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetHttpContextType()", file="RabbitMqFetchedJob.cs", label="return Type.GetType(String.Format(\r\n                ''System.Web.HttpContext, System.Web, Version={0}, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'',\r\n                Environment.Version));", span="1522-1524"];
m73_752 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetHttpContextType()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.GetHttpContextType()", span="1520-1520"];
m73_464 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m73_444 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.EntLibLogger(string, System.Action<string, string, System.Diagnostics.TraceEventType>, System.Func<string, System.Diagnostics.TraceEventType, bool>)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.EntLibLogger(string, System.Action<string, string, System.Diagnostics.TraceEventType>, System.Func<string, System.Diagnostics.TraceEventType, bool>)", span="932-932"];
m73_475 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.EntLibLogger(string, System.Action<string, string, System.Diagnostics.TraceEventType>, System.Func<string, System.Diagnostics.TraceEventType, bool>)", file="RabbitMqFetchedJob.cs", label="_loggerName = loggerName", span="934-934"];
m73_476 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.EntLibLogger(string, System.Action<string, string, System.Diagnostics.TraceEventType>, System.Func<string, System.Diagnostics.TraceEventType, bool>)", file="RabbitMqFetchedJob.cs", label="_writeLog = writeLog", span="935-935"];
m73_477 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.EntLibLogger(string, System.Action<string, string, System.Diagnostics.TraceEventType>, System.Func<string, System.Diagnostics.TraceEventType, bool>)", file="RabbitMqFetchedJob.cs", label="_shouldLog = shouldLog", span="936-936"];
m73_478 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.EntLibLogger(string, System.Action<string, string, System.Diagnostics.TraceEventType>, System.Func<string, System.Diagnostics.TraceEventType, bool>)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.EntLibLogger(string, System.Action<string, string, System.Diagnostics.TraceEventType>, System.Func<string, System.Diagnostics.TraceEventType, bool>)", span="932-932"];
m73_463 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", span="889-889"];
m73_436 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", span="889-889"];
m73_457 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", file="RabbitMqFetchedJob.cs", label="var logNameParameter = Expression.Parameter(typeof(string), ''logName'')", span="892-892"];
m73_458 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", file="RabbitMqFetchedJob.cs", label="var severityParameter = Expression.Parameter(typeof(TraceEventType), ''severity'')", span="893-893"];
m73_459 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", file="RabbitMqFetchedJob.cs", label="MemberInitExpression memberInit = GetWriteLogExpression(Expression.Constant(''***dummy***''), severityParameter, logNameParameter)", span="895-895"];
m73_462 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", file="RabbitMqFetchedJob.cs", label="return Expression.Lambda<Func<string, TraceEventType, bool>>(\r\n                writeLogEntryExpression,\r\n                logNameParameter,\r\n                severityParameter).Compile();", span="901-904"];
m73_460 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", file="RabbitMqFetchedJob.cs", label="MethodInfo writeLogEntryMethod = LoggerType.GetMethod(''ShouldLog'', new[] { LogEntryType })", span="898-898"];
m73_461 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetShouldLogEntry()", file="RabbitMqFetchedJob.cs", label="var writeLogEntryExpression = Expression.Call(writeLogEntryMethod, memberInit)", span="899-899"];
m73_108 [cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", span="248-248"];
m73_109 [cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.IsTraceEnabled()", span="250-250"];
m73_110 [cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Trace, message.AsFunc(), exception)", span="252-252"];
m73_111 [cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", span="248-248"];
m73_632 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.LoupeLogProvider.IsLoggerAvailable()", span="1262-1262"];
m73_638 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="1264-1264"];
m73_639 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.IsLoggerAvailable()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.LoupeLogProvider.IsLoggerAvailable()", span="1262-1262"];
m73_229 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RabbitMqFetchedJob.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m73_566 [cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
m73_121 [cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", span="270-270"];
m73_122 [cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.IsWarnEnabled()", span="272-272"];
m73_123 [cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.LogFormat(LogLevel.Warn, message, args)", span="274-274"];
m73_124 [cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", span="270-270"];
m73_473 [cluster="System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m73_600 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1178-1178"];
m73_601 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label=logLevel, span="1180-1180"];
m73_604 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="WriteException(_logger, DebugLevel, exception, messageFunc())", span="1185-1185"];
m73_608 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="WriteException(_logger, InformationLevel, exception, messageFunc())", span="1192-1192"];
m73_612 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="WriteException(_logger, WarningLevel, exception, messageFunc())", span="1199-1199"];
m73_616 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="WriteException(_logger, ErrorLevel, exception, messageFunc())", span="1206-1206"];
m73_620 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="WriteException(_logger, FatalLevel, exception, messageFunc())", span="1213-1213"];
m73_623 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="WriteException(_logger, VerboseLevel, exception, messageFunc())", span="1220-1220"];
m73_602 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Debug", span="1182-1182"];
m73_606 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="1189-1189"];
m73_610 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="1196-1196"];
m73_614 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="1203-1203"];
m73_618 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="1210-1210"];
m73_622 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, VerboseLevel)", span="1218-1218"];
m73_603 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, DebugLevel)", span="1183-1183"];
m73_625 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return false;", span="1225-1225"];
m73_605 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1186-1186"];
m73_607 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, InformationLevel)", span="1190-1190"];
m73_609 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1193-1193"];
m73_611 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, WarningLevel)", span="1197-1197"];
m73_613 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1200-1200"];
m73_615 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, ErrorLevel)", span="1204-1204"];
m73_617 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1207-1207"];
m73_619 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, FatalLevel)", span="1211-1211"];
m73_621 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1214-1214"];
m73_624 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1221-1221"];
m73_626 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1178-1178"];
m73_179 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", span="661-661"];
m73_339 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="RabbitMqFetchedJob.cs", label="!IsLoggerAvailable()", span="663-663"];
m73_340 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="RabbitMqFetchedJob.cs", label="throw new InvalidOperationException(''log4net.LogManager not found'');", span="665-665"];
m73_341 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="RabbitMqFetchedJob.cs", label="_getLoggerByNameDelegate = GetGetLoggerMethodCall()", span="667-667"];
m73_342 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", span="661-661"];
m73_290 [cluster="Unk.Warn", file="RabbitMqFetchedJob.cs", label="Entry Unk.Warn", span=""];
m73_728 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="RabbitMqFetchedJob.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m73_471 [cluster="System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)", span="0-0"];
m73_104 [cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", span="240-240"];
m73_105 [cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.IsTraceEnabled()", span="242-242"];
m73_106 [cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.LogFormat(LogLevel.Trace, message, args)", span="244-244"];
m73_107 [cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", span="240-240"];
m73_747 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogManagerType()", span="1515-1515"];
m73_748 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="return Type.GetType(''Elmah.ErrorLog, Elmah'');", span="1517-1517"];
m73_749 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.GetLogManagerType()", span="1515-1515"];
m73_171 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", span="986-986"];
m73_508 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="RabbitMqFetchedJob.cs", label="!IsLoggerAvailable()", span="988-988"];
m73_509 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="RabbitMqFetchedJob.cs", label="throw new InvalidOperationException(''Serilog.Log not found'');", span="990-990"];
m73_510 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="RabbitMqFetchedJob.cs", label="_getLoggerByNameDelegate = GetForContextMethodCall()", span="992-992"];
m73_511 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", span="986-986"];
m73_36 [cluster="T.AsFunc<T>()", file="RabbitMqFetchedJob.cs", label="Entry T.AsFunc<T>()", span="301-301"];
m73_729 [cluster="System.IO.TextWriter.WriteLine(string)", file="RabbitMqFetchedJob.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m73_201 [cluster="System.Type.GetTypeInfo()", file="RabbitMqFetchedJob.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m73_344 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", span="691-691"];
m73_354 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="Type logManagerType = GetLogManagerType()", span="693-693"];
m73_355 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="MethodInfo method = logManagerType.GetMethod(''GetLogger'', new[] { typeof(string) })", span="694-694"];
m73_356 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="ParameterExpression nameParam = Expression.Parameter(typeof(string), ''name'')", span="695-695"];
m73_357 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[] { nameParam })", span="696-696"];
m73_358 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="return Expression.Lambda<Func<string, object>>(methodCall, new[] { nameParam }).Compile();", span="697-697"];
m73_359 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", span="691-691"];
m73_62 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", span="167-167"];
m73_63 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Fatal, messageFunc)", span="169-169"];
m73_64 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", span="167-167"];
m73_144 [cluster="Hangfire.Logging.ILogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.ILogProvider.GetLogger(string)", span="317-317"];
m73_145 [cluster="Hangfire.Logging.ILogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.ILogProvider.GetLogger(string)", span="317-317"];
m73_739 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetErrorType()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.GetErrorType()", span="1527-1527"];
m73_753 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetErrorType()", file="RabbitMqFetchedJob.cs", label="return Type.GetType(''Elmah.Error, Elmah'');", span="1529-1529"];
m73_754 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetErrorType()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.GetErrorType()", span="1527-1527"];
m73_513 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", span="1016-1016"];
m73_523 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="Type logManagerType = GetLogManagerType()", span="1018-1018"];
m73_524 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="MethodInfo method = logManagerType.GetMethod(''ForContext'', new[] { typeof(string), typeof(object), typeof(bool) })", span="1019-1019"];
m73_525 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="ParameterExpression propertyNameParam = Expression.Parameter(typeof(string), ''propertyName'')", span="1020-1020"];
m73_528 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[]\r\n            {\r\n                propertyNameParam, \r\n                valueParam,\r\n                destructureObjectsParam\r\n            })", span="1023-1028"];
m73_526 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="ParameterExpression valueParam = Expression.Parameter(typeof(object), ''value'')", span="1021-1021"];
m73_529 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="var func = Expression.Lambda<Func<string, object, bool, object>>(methodCall, new[]\r\n            {\r\n                propertyNameParam,\r\n                valueParam,\r\n                destructureObjectsParam\r\n            }).Compile()", span="1029-1034"];
m73_527 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="ParameterExpression destructureObjectsParam = Expression.Parameter(typeof(bool), ''destructureObjects'')", span="1022-1022"];
m73_530 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="return name => func(''Name'', name, false);", span="1035-1035"];
m73_531 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", span="1016-1016"];
m73_286 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="635-635"];
m73_326 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label=logLevel, span="637-637"];
m73_327 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Debug", span="639-639"];
m73_329 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="641-641"];
m73_331 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="643-643"];
m73_333 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="645-645"];
m73_335 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="647-647"];
m73_337 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsTraceEnabled;", span="650-650"];
m73_328 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsDebugEnabled;", span="640-640"];
m73_330 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsInfoEnabled;", span="642-642"];
m73_332 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsWarnEnabled;", span="644-644"];
m73_334 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsErrorEnabled;", span="646-646"];
m73_336 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsFatalEnabled;", span="648-648"];
m73_338 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="635-635"];
m73_569 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1119-1119"];
m73_570 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="messageFunc == null", span="1121-1121"];
m73_571 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return IsEnabled(_logger, logLevel);", span="1123-1123"];
m73_572 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="exception != null", span="1125-1125"];
m73_573 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return LogException(logLevel, messageFunc, exception);", span="1127-1127"];
m73_574 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label=logLevel, span="1130-1130"];
m73_577 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Write(_logger, DebugLevel, messageFunc())", span="1135-1135"];
m73_581 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Write(_logger, InformationLevel, messageFunc())", span="1142-1142"];
m73_585 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Write(_logger, WarningLevel, messageFunc())", span="1149-1149"];
m73_589 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Write(_logger, ErrorLevel, messageFunc())", span="1156-1156"];
m73_593 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Write(_logger, FatalLevel, messageFunc())", span="1163-1163"];
m73_596 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Write(_logger, VerboseLevel, messageFunc())", span="1170-1170"];
m73_575 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Debug", span="1132-1132"];
m73_579 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="1139-1139"];
m73_583 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="1146-1146"];
m73_587 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="1153-1153"];
m73_591 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="1160-1160"];
m73_595 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, VerboseLevel)", span="1168-1168"];
m73_576 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, DebugLevel)", span="1133-1133"];
m73_598 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return false;", span="1175-1175"];
m73_578 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1136-1136"];
m73_580 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, InformationLevel)", span="1140-1140"];
m73_582 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1143-1143"];
m73_584 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, WarningLevel)", span="1147-1147"];
m73_586 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1150-1150"];
m73_588 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, ErrorLevel)", span="1154-1154"];
m73_590 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1157-1157"];
m73_592 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="IsEnabled(_logger, FatalLevel)", span="1161-1161"];
m73_594 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1164-1164"];
m73_597 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1171-1171"];
m73_599 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1119-1119"];
m73_291 [cluster="Unk.Error", file="RabbitMqFetchedJob.cs", label="Entry Unk.Error", span=""];
m73_70 [cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", span="180-180"];
m73_71 [cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.IsFatalEnabled()", span="182-182"];
m73_72 [cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="logger.LogFormat(LogLevel.Fatal, message, args)", span="184-184"];
m73_73 [cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", span="180-180"];
m73_19 [cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", span="96-96"];
m73_20 [cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="98-98"];
m73_21 [cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="return logger.Log(LogLevel.Trace, null);", span="99-99"];
m73_22 [cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", span="96-96"];
m73_248 [cluster="System.Type.GetMethod(string, System.Type[])", file="RabbitMqFetchedJob.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m73_162 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.ResolveLogProvider()", span="393-393"];
m73_192 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="RabbitMqFetchedJob.cs", label=LogProviderResolvers, span="397-397"];
m73_193 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="RabbitMqFetchedJob.cs", label="providerResolver.Item1()", span="399-399"];
m73_195 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="RabbitMqFetchedJob.cs", label=Exception, span="405-405"];
m73_197 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="RabbitMqFetchedJob.cs", label="return null;", span="412-412"];
m73_194 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="RabbitMqFetchedJob.cs", label="return providerResolver.Item2();", span="401-401"];
m73_196 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="RabbitMqFetchedJob.cs", label="Console.WriteLine(\r\n                    ''Exception occured resolving a log provider. Logging for this assembly {0} is disabled. {1}'',\r\n                    typeof(LogProvider).GetTypeInfo().Assembly.FullName,\r\n                    ex)", span="407-410"];
m73_198 [cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProvider.ResolveLogProvider()", span="393-393"];
m73_711 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1431-1431"];
m73_712 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="messageFunc == null", span="1433-1433"];
m73_714 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Write(logLevel, messageFunc(), exception)", span="1438-1438"];
m73_713 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1435-1435"];
m73_715 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1439-1439"];
m73_716 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1431-1431"];
m73_702 [cluster="System.Text.StringBuilder.Append(string)", file="RabbitMqFetchedJob.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m73_362 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="709-709"];
m73_363 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="messageFunc == null", span="711-711"];
m73_364 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return IsLogLevelEnable(logLevel);", span="713-713"];
m73_365 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="exception != null", span="715-715"];
m73_366 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return LogException(logLevel, messageFunc, exception);", span="717-717"];
m73_367 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label=logLevel, span="719-719"];
m73_370 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Info(messageFunc())", span="724-724"];
m73_374 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Warn(messageFunc())", span="731-731"];
m73_378 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Error(messageFunc())", span="738-738"];
m73_382 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Fatal(messageFunc())", span="745-745"];
m73_385 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.Debug(messageFunc())", span="752-752"];
m73_368 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="721-721"];
m73_372 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="728-728"];
m73_376 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="735-735"];
m73_380 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="742-742"];
m73_384 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsDebugEnabled", span="750-750"];
m73_369 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsInfoEnabled", span="722-722"];
m73_387 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return false;", span="757-757"];
m73_371 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="725-725"];
m73_373 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsWarnEnabled", span="729-729"];
m73_375 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="732-732"];
m73_377 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsErrorEnabled", span="736-736"];
m73_379 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="739-739"];
m73_381 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_logger.IsFatalEnabled", span="743-743"];
m73_383 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="746-746"];
m73_386 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="753-753"];
m73_388 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="709-709"];
m73_767 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1555-1555"];
m73_768 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="messageFunc == null", span="1557-1557"];
m73_769 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return logLevel >= _minLevel;", span="1557-1557"];
m73_770 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="var message = messageFunc()", span="1559-1559"];
m73_771 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="dynamic error = exception == null\r\n                    ? Activator.CreateInstance(_errorType)\r\n                    : Activator.CreateInstance(_errorType, exception)", span="1561-1563"];
m73_773 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="error.Type = logLevel.ToString()", span="1566-1566"];
m73_772 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="error.Message = message", span="1565-1565"];
m73_774 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="error.Time = DateTime.Now", span="1567-1567"];
m73_775 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_errorLog.Log(error)", span="1571-1571"];
m73_776 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label=Exception, span="1573-1573"];
m73_778 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="1578-1578"];
m73_777 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Debug.Print(''Error: {0}\n{1}'', ex.Message, ex.StackTrace)", span="1575-1575"];
m73_779 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1555-1555"];
m73_230 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", span="509-509"];
m73_242 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="Type logManagerType = GetLogManagerType()", span="511-511"];
m73_243 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="MethodInfo method = logManagerType.GetMethod(''GetLogger'', new[] { typeof(string) })", span="512-512"];
m73_244 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="ParameterExpression nameParam = Expression.Parameter(typeof(string), ''name'')", span="513-513"];
m73_245 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[] { nameParam })", span="514-514"];
m73_246 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="return Expression.Lambda<Func<string, object>>(methodCall, new[] { nameParam }).Compile();", span="515-515"];
m73_247 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", span="509-509"];
m73_199 [cluster="Hangfire.Logging.LogProvider.IsLoggerAvailable.Invoke()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.IsLoggerAvailable.Invoke()", span="378-378"];
m73_780 [cluster="System.Activator.CreateInstance(System.Type)", file="RabbitMqFetchedJob.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m73_138 [cluster="Hangfire.Logging.LogExtensions.AsFunc<T>(T)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.AsFunc<T>(T)", span="301-301"];
m73_139 [cluster="Hangfire.Logging.LogExtensions.AsFunc<T>(T)", file="RabbitMqFetchedJob.cs", label="return value.Return;", span="303-303"];
m73_140 [cluster="Hangfire.Logging.LogExtensions.AsFunc<T>(T)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.AsFunc<T>(T)", span="301-301"];
m73_86 [cluster="Hangfire.Logging.ILog.IsInfoEnabled()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.ILog.IsInfoEnabled()", span="90-90"];
m73_27 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", span="108-108"];
m73_28 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="110-110"];
m73_29 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Debug, messageFunc)", span="111-111"];
m73_30 [cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", span="108-108"];
m73_434 [cluster="string.Format(string, object)", file="RabbitMqFetchedJob.cs", label="Entry string.Format(string, object)", span="0-0"];
m73_164 [cluster="Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", span="434-434"];
m73_206 [cluster="Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="_logger = logger", span="436-436"];
m73_207 [cluster="Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", span="434-434"];
m73_454 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", span="869-869"];
m73_435 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", span="869-869"];
m73_447 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", file="RabbitMqFetchedJob.cs", label="var logNameParameter = Expression.Parameter(typeof(string), ''logName'')", span="872-872"];
m73_448 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", file="RabbitMqFetchedJob.cs", label="var messageParameter = Expression.Parameter(typeof(string), ''message'')", span="873-873"];
m73_450 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", file="RabbitMqFetchedJob.cs", label="MemberInitExpression memberInit = GetWriteLogExpression(messageParameter, severityParameter, logNameParameter)", span="876-876"];
m73_453 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", file="RabbitMqFetchedJob.cs", label="return Expression.Lambda<Action<string, string, TraceEventType>>(\r\n                writeLogEntryExpression,\r\n                logNameParameter,\r\n                messageParameter,\r\n                severityParameter).Compile();", span="882-886"];
m73_449 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", file="RabbitMqFetchedJob.cs", label="var severityParameter = Expression.Parameter(typeof(TraceEventType), ''severity'')", span="874-874"];
m73_451 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", file="RabbitMqFetchedJob.cs", label="MethodInfo writeLogEntryMethod = LoggerType.GetMethod(''Write'', new[] { LogEntryType })", span="879-879"];
m73_452 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetWriteLogEntry()", file="RabbitMqFetchedJob.cs", label="var writeLogEntryExpression = Expression.Call(writeLogEntryMethod, memberInit)", span="880-880"];
m73_472 [cluster="System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)", span="0-0"];
m73_740 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", span="1532-1532"];
m73_755 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", file="RabbitMqFetchedJob.cs", label="Type logManagerType = GetLogManagerType()", span="1534-1534"];
m73_756 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", file="RabbitMqFetchedJob.cs", label="Type httpContextType = GetHttpContextType()", span="1535-1535"];
m73_757 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", file="RabbitMqFetchedJob.cs", label="MethodInfo method = logManagerType.GetMethod(''GetDefault'', new[] { httpContextType })", span="1536-1536"];
m73_758 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", file="RabbitMqFetchedJob.cs", label="ConstantExpression contextValue = Expression.Constant(null, httpContextType)", span="1537-1537"];
m73_759 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", file="RabbitMqFetchedJob.cs", label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[] { contextValue })", span="1538-1538"];
m73_760 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", file="RabbitMqFetchedJob.cs", label="return Expression.Lambda<Func<object>>(methodCall).Compile();", span="1539-1539"];
m73_761 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.GetGetErrorLogMethodCall()", span="1532-1532"];
m73_175 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", span="479-479"];
m73_224 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="RabbitMqFetchedJob.cs", label="!IsLoggerAvailable()", span="481-481"];
m73_225 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="RabbitMqFetchedJob.cs", label="throw new InvalidOperationException(''NLog.LogManager not found'');", span="483-483"];
m73_226 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="RabbitMqFetchedJob.cs", label="_getLoggerByNameDelegate = GetGetLoggerMethodCall()", span="485-485"];
m73_227 [cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", span="479-479"];
m73_700 [cluster="System.Text.StringBuilder.StringBuilder()", file="RabbitMqFetchedJob.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m73_58 [cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", span="159-159"];
m73_59 [cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.IsErrorEnabled()", span="161-161"];
m73_60 [cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Error, message.AsFunc(), exception)", span="163-163"];
m73_61 [cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", span="159-159"];
m73_708 [cluster="System.Text.StringBuilder.ToString()", file="RabbitMqFetchedJob.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m73_660 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", span="1316-1316"];
m73_662 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label=logLevel, span="1318-1318"];
m73_663 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Trace", span="1320-1320"];
m73_665 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Debug", span="1322-1322"];
m73_667 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="1324-1324"];
m73_669 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="1326-1326"];
m73_671 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="1328-1328"];
m73_673 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="1330-1330"];
m73_675 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="throw new ArgumentOutOfRangeException(''logLevel'');", span="1333-1333"];
m73_664 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Verbose;", span="1321-1321"];
m73_666 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Verbose;", span="1323-1323"];
m73_668 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Information;", span="1325-1325"];
m73_670 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Warning;", span="1327-1327"];
m73_672 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Error;", span="1329-1329"];
m73_674 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return TraceEventType.Critical;", span="1331-1331"];
m73_676 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger.ToLogMessageSeverity(Hangfire.Logging.LogLevel)", span="1316-1316"];
m73_633 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogWriteDelegate()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogWriteDelegate()", span="1272-1272"];
m73_643 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogWriteDelegate()", file="RabbitMqFetchedJob.cs", label="Type logManagerType = GetLogManagerType()", span="1274-1274"];
m73_644 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogWriteDelegate()", file="RabbitMqFetchedJob.cs", label="Type logMessageSeverityType = Type.GetType(''Gibraltar.Agent.LogMessageSeverity, Gibraltar.Agent'')", span="1275-1275"];
m73_646 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogWriteDelegate()", file="RabbitMqFetchedJob.cs", label="MethodInfo method = logManagerType.GetMethod(''Write'', new[]\r\n                                                                  {\r\n                                                                      logMessageSeverityType, typeof(string), typeof(int), typeof(Exception), typeof(bool), \r\n                                                                      logWriteModeType, typeof(string), typeof(string), typeof(string), typeof(string), typeof(object[])\r\n                                                                  })", span="1278-1282"];
m73_645 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogWriteDelegate()", file="RabbitMqFetchedJob.cs", label="Type logWriteModeType = Type.GetType(''Gibraltar.Agent.LogWriteMode, Gibraltar.Agent'')", span="1276-1276"];
m73_647 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogWriteDelegate()", file="RabbitMqFetchedJob.cs", label="return (WriteDelegate) method.CreateDelegate(typeof (WriteDelegate));", span="1284-1284"];
m73_648 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogWriteDelegate()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogWriteDelegate()", span="1272-1272"];
m73_324 [cluster="Unk.FatalException", file="RabbitMqFetchedJob.cs", label="Entry Unk.FatalException", span=""];
m73_208 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="439-439"];
m73_209 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="messageFunc == null", span="441-441"];
m73_210 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return _logger.Log(logLevel, null);", span="443-443"];
m73_211 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Func<string> wrappedMessageFunc = () =>\r\n            {\r\n                try\r\n                {\r\n                    return messageFunc();\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    Log(LogLevel.Error, () => FailedToGenerateLogMessage, ex);\r\n                }\r\n                return null;\r\n            }", span="446-457"];
m73_212 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return _logger.Log(logLevel, wrappedMessageFunc, exception);", span="458-458"];
m73_213 [cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="439-439"];
m73_470 [cluster="System.Type.GetProperty(string)", file="RabbitMqFetchedJob.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m73_490 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="954-954"];
m73_492 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="var severity = MapSeverity(logLevel)", span="956-956"];
m73_493 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="var message = messageFunc() + Environment.NewLine + exception", span="957-957"];
m73_494 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="_writeLog(_loggerName, message, severity)", span="958-958"];
m73_495 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="return true;", span="959-959"];
m73_496 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="954-954"];
m73_783 [cluster="System.Diagnostics.Debug.Print(string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry System.Diagnostics.Debug.Print(string, params object[])", span="0-0"];
m73_35 [cluster="Hangfire.Logging.ILog.IsDebugEnabled()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.ILog.IsDebugEnabled()", span="72-72"];
m73_241 [cluster="System.Type.GetType(string)", file="RabbitMqFetchedJob.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m73_65 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", span="172-172"];
m73_66 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.IsFatalEnabled()", span="174-174"];
m73_67 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Fatal, message.AsFunc())", span="176-176"];
m73_68 [cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", span="172-172"];
m73_682 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RabbitMqFetchedJob.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m73_474 [cluster="System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, params System.Linq.Expressions.MemberBinding[])", file="RabbitMqFetchedJob.cs", label="Entry System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, params System.Linq.Expressions.MemberBinding[])", span="0-0"];
m73_640 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogManagerType()", span="1267-1267"];
m73_641 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="return Type.GetType(''Gibraltar.Agent.Log, Gibraltar.Agent'');", span="1269-1269"];
m73_642 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogManagerType()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.LoupeLogProvider.GetLogManagerType()", span="1267-1267"];
m73_82 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", span="202-202"];
m73_83 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.IsInfoEnabled()", span="204-204"];
m73_84 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Info, message.AsFunc())", span="206-206"];
m73_85 [cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", span="202-202"];
m73_345 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", span="676-676"];
m73_346 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="return new Log4NetLogger(_getLoggerByNameDelegate(name));", span="678-678"];
m73_347 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", span="676-676"];
m73_163 [cluster="Hangfire.Logging.LogProvider.NoOpLogger.NoOpLogger()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.NoOpLogger.NoOpLogger()", span="415-415"];
m73_202 [cluster="System.Console.WriteLine(string, object, object)", file="RabbitMqFetchedJob.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m73_323 [cluster="Unk.ErrorException", file="RabbitMqFetchedJob.cs", label="Entry Unk.ErrorException", span=""];
m73_514 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", span="1001-1001"];
m73_515 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="return new SerilogLogger(_getLoggerByNameDelegate(name));", span="1003-1003"];
m73_516 [cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", span="1001-1001"];
m73_683 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", span="1371-1371"];
m73_684 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="return new ColouredConsoleLogger(name);", span="1373-1373"];
m73_685 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", span="1371-1371"];
m73_200 [cluster="Hangfire.Logging.LogProvider.CreateLogProvider.Invoke()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.CreateLogProvider.Invoke()", span="380-380"];
m73_125 [cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", span="278-278"];
m73_126 [cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.IsWarnEnabled()", span="280-280"];
m73_127 [cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Warn, message.AsFunc(), exception)", span="282-282"];
m73_128 [cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", span="278-278"];
m73_389 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="803-803"];
m73_413 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label=logLevel, span="805-805"];
m73_414 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Debug", span="807-807"];
m73_416 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Info", span="809-809"];
m73_418 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Warn", span="811-811"];
m73_420 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Error", span="813-813"];
m73_422 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="LogLevel.Fatal", span="815-815"];
m73_424 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsDebugEnabled;", span="818-818"];
m73_415 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsDebugEnabled;", span="808-808"];
m73_417 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsInfoEnabled;", span="810-810"];
m73_419 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsWarnEnabled;", span="812-812"];
m73_421 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsErrorEnabled;", span="814-814"];
m73_423 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="return _logger.IsFatalEnabled;", span="816-816"];
m73_425 [cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="803-803"];
m73_149 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353"];
m73_156 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="RabbitMqFetchedJob.cs", label="return GetLogger(type.FullName);", span="355-355"];
m73_157 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353"];
m73_442 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="return new EntLibLogger(name, WriteLogEntry, ShouldLogEntry);", span="861-861"];
m73_441 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.EntLibLogProvider.GetLogger(string)", span="859-859"];
m73_443 [cluster="Hangfire.Logging.LogProviders.EntLibLogProvider.GetLogger(string)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.EntLibLogProvider.GetLogger(string)", span="859-859"];
m73_731 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider(Hangfire.Logging.LogLevel)", span="1486-1486"];
m73_732 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="!IsLoggerAvailable()", span="1488-1488"];
m73_734 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="_minLevel = minLevel", span="1493-1493"];
m73_733 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="throw new InvalidOperationException(''`Elmah.ErrorLog` or `Elmah.Error` type not found'');", span="1490-1490"];
m73_735 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="_errorType = GetErrorType()", span="1495-1495"];
m73_736 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="_getErrorLogDelegate = GetGetErrorLogMethodCall()", span="1496-1496"];
m73_737 [cluster="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider(Hangfire.Logging.LogLevel)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLogProvider(Hangfire.Logging.LogLevel)", span="1486-1486"];
m73_781 [cluster="System.Activator.CreateInstance(System.Type, params object[])", file="RabbitMqFetchedJob.cs", label="Entry System.Activator.CreateInstance(System.Type, params object[])", span="0-0"];
m73_112 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", span="256-256"];
m73_113 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="258-258"];
m73_114 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="logger.Log(LogLevel.Warn, messageFunc)", span="259-259"];
m73_115 [cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", span="256-256"];
m73_120 [cluster="Hangfire.Logging.ILog.IsWarnEnabled()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.ILog.IsWarnEnabled()", span="102-102"];
m73_187 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogProvider()", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogProvider()", span="1235-1235"];
m73_628 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogProvider()", file="RabbitMqFetchedJob.cs", label="!IsLoggerAvailable()", span="1237-1237"];
m73_629 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogProvider()", file="RabbitMqFetchedJob.cs", label="throw new InvalidOperationException(''Gibraltar.Agent.Log (Loupe) not found'');", span="1239-1239"];
m73_630 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogProvider()", file="RabbitMqFetchedJob.cs", label="_logWriteDelegate = GetLogWriteDelegate()", span="1242-1242"];
m73_631 [cluster="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogProvider()", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogProvider()", span="1235-1235"];
m73_2 [cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", span="72-72"];
m73_3 [cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="GuardAgainstNullLogger(logger)", span="74-74"];
m73_4 [cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="return logger.Log(LogLevel.Debug, null);", span="75-75"];
m73_5 [cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", file="RabbitMqFetchedJob.cs", label="Exit Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", span="72-72"];
m73_41 [cluster="Hangfire.Logging.ILog.LogFormat(Hangfire.Logging.LogLevel, string, params object[])", file="RabbitMqFetchedJob.cs", label="Entry Hangfire.Logging.ILog.LogFormat(Hangfire.Logging.LogLevel, string, params object[])", span="294-294"];
m73_784 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LoggerExecutionWrapper", span=""];
m73_785 [file="RabbitMqFetchedJob.cs", label="System.Func<string>", span=""];
m73_786 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.NLogLogProvider", span=""];
m73_787 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", span=""];
m73_788 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.Log4NetLogProvider", span=""];
m73_789 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", span=""];
m73_790 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger", span=""];
m73_791 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.SerilogLogProvider", span=""];
m73_792 [file="RabbitMqFetchedJob.cs", label=func, span=""];
m73_793 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", span=""];
m73_794 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.LoupeLogProvider", span=""];
m73_795 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger", span=""];
m73_796 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger", span=""];
m73_797 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.ElmahLogProvider", span=""];
m73_798 [file="RabbitMqFetchedJob.cs", label="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog", span=""];
m74_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RabbitMqJobQueue.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m74_15 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42"];
m74_16 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="BasicDeliverEventArgs message", span="44-44"];
m74_18 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="queueIndex = (queueIndex + 1) % queues.Length", span="49-49"];
m74_19 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="var queueName = queues[queueIndex]", span="50-50"];
m74_20 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="52-52"];
m74_17 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="var queueIndex = 0", span="45-45"];
m74_21 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="var consumer = GetConsumerForQueue(queueName, cancellationToken)", span="56-56"];
m74_22 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="consumer.Queue.Dequeue(SyncReceiveTimeout, out message)", span="57-57"];
m74_23 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="global::RabbitMQ.Client.Exceptions.AlreadyClosedException", span="59-59"];
m74_26 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="RabbitMqJobQueue.cs", label="0: System.IO.EndOfStreamException", span="64-64"];
m74_29 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="message == null", span="70-70"];
m74_24 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="CreateChannel()", span="61-61"];
m74_25 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="message = null", span="62-62"];
m74_27 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="CreateChannel()", span="66-66"];
m74_28 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="message = null", span="67-67"];
m74_30 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="return new RabbitMqFetchedJob(message, ref _channel);", span="72-72"];
m74_31 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42"];
m74_45 [cluster="Unk.BasicPublish", file="RabbitMqJobQueue.cs", label="Entry Unk.BasicPublish", span=""];
m74_73 [cluster="Unk.CreateModel", file="RabbitMqJobQueue.cs", label="Entry Unk.CreateModel", span=""];
m74_46 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", span="86-86"];
m74_47 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="_channel != null", span="88-88"];
m74_48 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="_channel.IsOpen", span="90-90"];
m74_49 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="_channel.Close()", span="90-90"];
m74_50 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="_channel.Dispose()", span="91-91"];
m74_51 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="_connection != null", span="94-94"];
m74_52 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="_connection.IsOpen", span="96-96"];
m74_53 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="_connection.Close()", span="96-96"];
m74_54 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="_connection.Dispose()", span="97-97"];
m74_55 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="RabbitMqJobQueue.cs", label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", span="86-86"];
m74_35 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="RabbitMqJobQueue.cs", label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15"];
m74_56 [cluster="Unk.Close", file="RabbitMqJobQueue.cs", label="Entry Unk.Close", span=""];
m74_14 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", span="99-99"];
m74_58 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label=ConsumerLock, span="101-101"];
m74_59 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="_channel != null && _channel.IsOpen && _connection.IsOpen", span="103-103"];
m74_60 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="return;", span="103-103"];
m74_61 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="_channel != null && _channel.IsOpen", span="105-105"];
m74_62 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="_channel.Abort()", span="105-105"];
m74_63 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="!_connection.IsOpen", span="106-106"];
m74_64 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="_connection = _factory.CreateConnection()", span="106-106"];
m74_65 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="_channel = _connection.CreateModel()", span="108-108"];
m74_66 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="_channel.BasicQos(0, 1, false)", span="109-109"];
m74_67 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="var properties = _channel.CreateBasicProperties()", span="111-111"];
m74_68 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="properties.SetPersistent(true)", span="112-112"];
m74_69 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label=_queues, span="115-115"];
m74_70 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="_channel.QueueDeclare(queue, true, false, false, null)", span="116-116"];
m74_71 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="RabbitMqJobQueue.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", span="99-99"];
m74_95 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="RabbitMqJobQueue.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m74_94 [cluster="QueueingBasicConsumer.cstr", file="RabbitMqJobQueue.cs", label="Entry QueueingBasicConsumer.cstr", span=""];
m74_0 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="23-23"];
m74_5 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="_queues = queues", span="28-28"];
m74_6 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="_factory = factory", span="29-29"];
m74_7 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="_connection = factory.CreateConnection()", span="30-30"];
m74_8 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="_consumers = new ConcurrentDictionary<string, QueueingBasicConsumer>()", span="31-31"];
m74_9 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="CreateChannel()", span="33-33"];
m74_3 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="factory == null", span="26-26"];
m74_1 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="queues == null", span="25-25"];
m74_4 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="throw new ArgumentNullException(''factory'');", span="26-26"];
m74_2 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="throw new ArgumentNullException(''queues'');", span="25-25"];
m74_10 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueue.cs", label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="23-23"];
m74_75 [cluster="Unk.QueueDeclare", file="RabbitMqJobQueue.cs", label="Entry Unk.QueueDeclare", span=""];
m74_36 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="RabbitMqJobQueue.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="75-75"];
m74_37 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="RabbitMqJobQueue.cs", label="var body = Encoding.UTF8.GetBytes(jobId)", span="77-77"];
m74_40 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="RabbitMqJobQueue.cs", label="_channel.BasicPublish('''', queue, properties, body)", span="81-81"];
m74_38 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="RabbitMqJobQueue.cs", label="var properties = _channel.CreateBasicProperties()", span="78-78"];
m74_39 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="RabbitMqJobQueue.cs", label="properties.SetPersistent(true)", span="79-79"];
m74_41 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="RabbitMqJobQueue.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="75-75"];
m74_32 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RabbitMqJobQueue.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m74_13 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="RabbitMqJobQueue.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m74_57 [cluster="Unk.Dispose", file="RabbitMqJobQueue.cs", label="Entry Unk.Dispose", span=""];
m74_33 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", span="120-120"];
m74_76 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="QueueingBasicConsumer consumer", span="122-122"];
m74_77 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="124-124"];
m74_78 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="!_consumers.TryGetValue(queue, out consumer)", span="126-126"];
m74_80 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="!_consumers.TryGetValue(queue, out consumer)", span="131-131"];
m74_82 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="_consumers.AddOrUpdate(queue, consumer, (dq, dc) => consumer)", span="134-134"];
m74_83 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="_channel.BasicConsume(queue, false, ''HangFire.RabbitMq.'' + Thread.CurrentThread.Name, consumer)", span="135-135"];
m74_88 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="_consumers.AddOrUpdate(queue, newConsumer, (dq, dc) => newConsumer)", span="150-150"];
m74_89 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="_channel.BasicConsume(queue, false, ''HangFire.RabbitMq.'' + Thread.CurrentThread.Name, newConsumer)", span="151-151"];
m74_79 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label=ConsumerLock, span="129-129"];
m74_84 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="consumer.Model.IsClosed", span="142-142"];
m74_86 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="consumer.Model.IsClosed", span="146-146"];
m74_91 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="return consumer;", span="158-158"];
m74_81 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="consumer = new QueueingBasicConsumer(_channel)", span="133-133"];
m74_85 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label=ConsumerLock, span="144-144"];
m74_87 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="var newConsumer = new QueueingBasicConsumer(_channel)", span="149-149"];
m74_90 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="consumer = newConsumer", span="152-152"];
m74_92 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="RabbitMqJobQueue.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", span="120-120"];
m74_12 [cluster="Unk.CreateConnection", file="RabbitMqJobQueue.cs", label="Entry Unk.CreateConnection", span=""];
m74_34 [cluster="Unk.Dequeue", file="RabbitMqJobQueue.cs", label="Entry Unk.Dequeue", span=""];
m74_100 [cluster="lambda expression", file="RabbitMqJobQueue.cs", label="Entry lambda expression", span="152-152"];
m74_98 [cluster="lambda expression", file="RabbitMqJobQueue.cs", label=consumer, span="136-136"];
m74_97 [cluster="lambda expression", file="RabbitMqJobQueue.cs", label="Entry lambda expression", span="136-136"];
m74_101 [cluster="lambda expression", file="RabbitMqJobQueue.cs", label=newConsumer, span="152-152"];
m74_99 [cluster="lambda expression", file="RabbitMqJobQueue.cs", label="Exit lambda expression", span="136-136"];
m74_102 [cluster="lambda expression", file="RabbitMqJobQueue.cs", label="Exit lambda expression", span="152-152"];
m74_43 [cluster="Unk.CreateBasicProperties", file="RabbitMqJobQueue.cs", label="Entry Unk.CreateBasicProperties", span=""];
m74_42 [cluster="System.Text.Encoding.GetBytes(string)", file="RabbitMqJobQueue.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m74_44 [cluster="Unk.SetPersistent", file="RabbitMqJobQueue.cs", label="Entry Unk.SetPersistent", span=""];
m74_93 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="RabbitMqJobQueue.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m74_96 [cluster="Unk.BasicConsume", file="RabbitMqJobQueue.cs", label="Entry Unk.BasicConsume", span=""];
m74_72 [cluster="Unk.Abort", file="RabbitMqJobQueue.cs", label="Entry Unk.Abort", span=""];
m74_74 [cluster="Unk.BasicQos", file="RabbitMqJobQueue.cs", label="Entry Unk.BasicQos", span=""];
m74_103 [file="RabbitMqJobQueue.cs", label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", span=""];
m74_104 [file="RabbitMqJobQueue.cs", label=consumer, span=""];
m74_105 [file="RabbitMqJobQueue.cs", label=newConsumer, span=""];
m75_0 [cluster="HangFire.Tests.CriticalQueueJob.Perform()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.Tests.CriticalQueueJob.Perform()", span="5-5"];
m75_1 [cluster="HangFire.Tests.CriticalQueueJob.Perform()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.Tests.CriticalQueueJob.Perform()", span="5-5"];
m76_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RabbitMqJobQueueProvider.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m76_16 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="27-27"];
m76_17 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="return _jobQueue;", span="29-29"];
m76_18 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Exit HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="27-27"];
m76_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RabbitMqJobQueueProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m76_0 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", file="RabbitMqJobQueueProvider.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", span="15-15"];
m76_1 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", file="RabbitMqJobQueueProvider.cs", label="queues == null", span="17-17"];
m76_3 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", file="RabbitMqJobQueueProvider.cs", label="configureAction == null", span="18-18"];
m76_6 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", color=red, community=0, file="RabbitMqJobQueueProvider.cs", label="0: configureAction(factory)", span="21-21"];
m76_7 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", color=red, community=0, file="RabbitMqJobQueueProvider.cs", label="0: _jobQueue = new RabbitMqJobQueue(queues, factory)", span="23-23"];
m76_8 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", color=red, community=0, file="RabbitMqJobQueueProvider.cs", label="0: _monitoringApi = new RabbitMqMonitoringApi(factory, queues.ToArray())", span="24-24"];
m76_2 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", file="RabbitMqJobQueueProvider.cs", label="throw new ArgumentNullException(''queues'');", span="17-17"];
m76_4 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", file="RabbitMqJobQueueProvider.cs", label="throw new ArgumentNullException(''configureAction'');", span="18-18"];
m76_5 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", color=red, community=0, file="RabbitMqJobQueueProvider.cs", label="0: ConnectionFactory factory = new ConnectionFactory()", span="20-20"];
m76_9 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", file="RabbitMqJobQueueProvider.cs", label="Exit HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", span="15-15"];
m76_19 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="32-32"];
m76_20 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="return _monitoringApi;", span="34-34"];
m76_21 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Exit HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="32-32"];
m76_14 [cluster="HangFire.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", file="RabbitMqJobQueueProvider.cs", label="Entry HangFire.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", span="16-16"];
m76_11 [cluster="ConnectionFactory.cstr", file="RabbitMqJobQueueProvider.cs", label="Entry ConnectionFactory.cstr", span=""];
m76_12 [cluster="System.Action<T>.Invoke(T)", file="RabbitMqJobQueueProvider.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m76_13 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="23-23"];
m76_22 [file="RabbitMqJobQueueProvider.cs", label="HangFire.RabbitMQ.RabbitMqJobQueueProvider", span=""];
m77_7 [cluster="HangFire.JobFetcher.JobFetcher()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.JobFetcher.JobFetcher()", span="14-14"];
m77_15 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="RabbitMqJobQueueProviderFacts.cs", label="return new RabbitMqJobQueueProvider(Queue, configuration);", span="36-36"];
m77_11 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Assert.NotNull(monitoring)", span="29-29"];
m77_19 [cluster="HangFire.JobDispatcherPool.Process(string)", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.JobDispatcherPool.Process(string)", span="26-26"];
m77_8 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="23-23"];
m77_9 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="var provider = CreateProvider()", span="25-25"];
m77_10 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="var monitoring = provider.GetJobQueueMonitoringApi(null)", span="27-27"];
m77_12 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="23-23"];
m77_13 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="27-27"];
m77_14 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="0: ConnectionFactory configuration = new ConnectionFactory { HostName = HostName }", span="34-34"];
m77_18 [cluster="HangFire.Host.FetcherOnJobFetched(object, string)", file="RabbitMqJobQueueProviderFacts.cs", label="Exit HangFire.Host.FetcherOnJobFetched(object, string)", span="28-28"];
m77_6 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22"];
m77_0 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="13-13"];
m77_1 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="var provider = CreateProvider()", span="15-15"];
m77_2 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="var jobQueue = provider.GetJobQueue(null)", span="17-17"];
m77_3 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Assert.NotNull(jobQueue)", span="19-19"];
m77_4 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="13-13"];
m77_5 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", span="32-32"];
m77_17 [cluster="HangFire.Host.FetcherOnJobFetched(object, string)", file="RabbitMqJobQueueProviderFacts.cs", label="_pool.Process(serializedJob)", span="30-30"];
m77_16 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="RabbitMqJobQueueProviderFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", span="32-32"];
m77_20 [file="RabbitMqJobQueueProviderFacts.cs", label="HangFire.Host", span=""];
m78_0 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m78_1 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="RabbitMqMonitoringApi.cs", label="ServerId = ''server''", span="11-11"];
m78_2 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="RabbitMqMonitoringApi.cs", label="Queues = new[] { ''default'' }", span="12-12"];
m78_3 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="RabbitMqMonitoringApi.cs", label="WorkerNumber = 1", span="13-13"];
m78_4 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="RabbitMqMonitoringApi.cs", label="_context = new Lazy<WorkerContext>(\r\n                () => new WorkerContext(ServerId, Queues, WorkerNumber))", span="15-16"];
m78_5 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m78_7 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="16-16"];
m78_8 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="new WorkerContext(ServerId, Queues, WorkerNumber)", span="16-16"];
m78_9 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="16-16"];
m78_10 [cluster="WorkerContext.cstr", file="RabbitMqMonitoringApi.cs", label="Entry WorkerContext.cstr", span=""];
m78_6 [cluster="Lazy<WorkerContext>.cstr", file="RabbitMqMonitoringApi.cs", label="Entry Lazy<WorkerContext>.cstr", span=""];
m78_11 [file="RabbitMqMonitoringApi.cs", label="Hangfire.Core.Tests.WorkerContextMock", span=""];
m80_18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m80_19 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration()", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration.RabbitMqConnectionConfiguration()", span="13-13"];
m80_0 [cluster="HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="8-8"];
m80_8 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: configureAction(conf)", span="14-14"];
m80_7 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: RabbitMqConnectionConfiguration conf = new RabbitMqConnectionConfiguration()", span="13-13"];
m80_9 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="0: ConnectionFactory cf = new ConnectionFactory()", span="16-16"];
m80_14 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="5: var provider = new RabbitMqJobQueueProvider(queues, cf)", span="22-22"];
m80_13 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="4: cf.Password = conf.Password", span="20-20"];
m80_15 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", file="RabbitMqSqlServerStorageExtensions.cs", label="storage.QueueProviders.Add(provider, queues)", span="24-24"];
m80_5 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", file="RabbitMqSqlServerStorageExtensions.cs", label="configureAction == null", span="11-11"];
m80_10 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="4: cf.HostName = conf.HostName", span="17-17"];
m80_11 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="4: cf.Port = conf.Port", span="18-18"];
m80_12 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="0: cf.UserName = conf.Username", span="19-19"];
m80_1 [cluster="HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="RabbitMqSqlServerStorageExtensions.cs", label="throw new NotSupportedException();", span="10-10"];
m80_3 [cluster="System.NotSupportedException.NotSupportedException()", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m80_16 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", file="RabbitMqSqlServerStorageExtensions.cs", label="return storage;", span="26-26"];
m80_6 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", file="RabbitMqSqlServerStorageExtensions.cs", label="throw new ArgumentNullException(''configureAction'');", span="11-11"];
m80_2 [cluster="HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="RabbitMqSqlServerStorageExtensions.cs", label="Exit HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="8-8"];
m80_4 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", file="RabbitMqSqlServerStorageExtensions.cs", label="throw new ArgumentNullException(''queues'');", span="10-10"];
m80_17 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", file="RabbitMqSqlServerStorageExtensions.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", span="7-7"];
m80_22 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m80_23 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.Add(HangFire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.Add(HangFire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)", span="40-40"];
m80_21 [cluster="ConnectionFactory.cstr", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry ConnectionFactory.cstr", span=""];
m80_20 [cluster="System.Action<T>.Invoke(T)", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m81_35 [cluster="HangFire.Web.RazorPage.Write(object)", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqSqlServerStorageExtensionsFacts", span=""];
m81_37 [cluster="Unk.Join", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Join", span=""];
m81_34 [cluster="string.ToUpperInvariant()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m81_18 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''\''>'')", span="169-169"];
m81_20 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''</td>\n                    <td>\n'')", span="179-179"];
m81_21 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="server.Heartbeat.HasValue", span="184-184"];
m81_19 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Write(server.StartedAt)", span="174-174"];
m81_22 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="190-190"];
m81_23 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Write(JobHelper.ToTimestamp(server.Heartbeat.Value))", span="195-195"];
m81_30 [cluster="lambda expression", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Exit lambda expression", span="32-32"];
m81_40 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m81_24 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''\''>\n                                '')", span="200-200"];
m81_0 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m81_1 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="0: WriteLiteral(''\n'')", span="61-61"];
m81_2 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Layout = new LayoutPage { Title = ''Servers'' }", span="74-74"];
m81_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
m81_4 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m81_5 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''\n'')", span="83-83"];
m81_6 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="servers.Count == 0", span="88-88"];
m81_9 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label=servers, span="123-123"];
m81_7 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        There are no active servers. Backgr'' +\r\n''ound tasks will not be processed.\n    </div>\n'')", span="94-95"];
m81_8 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(@''    <table class=''''table''''>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Workers</th>\n                <th>Queues</th>\n                <th>Started</th>\n                <th>Heartbeat</th>\n            </tr>\n        </thead>\n        <tbody>\n'')", span="107-118"];
m81_10 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''                <tr>\n                    <td>'')", span="129-129"];
m81_28 [cluster="lambda expression", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry lambda expression", span="32-32"];
m81_11 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Write(server.Name.ToUpperInvariant())", span="134-134"];
m81_13 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Write(server.WorkersCount)", span="144-144"];
m81_15 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="154-154"];
m81_17 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Write(JobHelper.ToTimestamp(server.StartedAt))", span="164-164"];
m81_25 [cluster="HangFire.SqlServer.SqlServerStorage.UseRabbitMq(System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.UseRabbitMq(System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>, params string[])", span="7-7"];
m81_12 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''</td>\n                    <td>'')", span="139-139"];
m81_14 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''</td>\n                    <td>'')", span="149-149"];
m81_16 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="WriteLiteral(''</td>\n                    <td data-moment=\'''')", span="159-159"];
m81_27 [cluster="Unk.Contains", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Contains", span=""];
m81_26 [cluster="Unk.Select", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Select", span=""];
m81_29 [cluster="lambda expression", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="conf.HostName = ''localhost''", span="32-32"];
m81_38 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40"];
m81_31 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m81_32 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m81_33 [cluster="HangFire.Storage.IMonitoringApi.Servers()", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25"];
m81_39 [cluster="Unk.Write", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Write", span=""];
m81_36 [cluster="Unk.Select", file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Select", span=""];
m81_41 [file="RabbitMqSqlServerStorageExtensionsFacts.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m91_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisConnection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m91_0 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="RedisConnection.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="22-22"];
m91_1 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="RedisConnection.cs", label="Exit HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="22-22"];
m91_2 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="RedisConnection.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m91_3 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="RedisConnection.cs", label="serverName == null", span="32-32"];
m91_5 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="RedisConnection.cs", label="queueNames == null", span="33-33"];
m91_7 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="RedisConnection.cs", label="ServerName = serverName", span="35-35"];
m91_8 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="RedisConnection.cs", label="QueueNames = queueNames", span="36-36"];
m91_9 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="RedisConnection.cs", label="WorkerNumber = workerNumber", span="37-37"];
m91_4 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="RedisConnection.cs", label="throw new ArgumentNullException(''serverName'');", span="32-32"];
m91_6 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="RedisConnection.cs", label="throw new ArgumentNullException(''queueNames'');", span="33-33"];
m91_10 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="RedisConnection.cs", label="Exit HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m91_12 [file="RedisConnection.cs", label="HangFire.Server.WorkerContext", span=""];
m92_25 [cluster="Unk.OnScenarioStart", file="RedisConnectionFacts.cs", label="Entry Unk.OnScenarioStart", span=""];
m92_29 [cluster="Unk.CollectScenarioErrors", file="RedisConnectionFacts.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m92_21 [cluster="Unk.OnScenarioEnd", file="RedisConnectionFacts.cs", label="Entry Unk.OnScenarioEnd", span=""];
m92_67 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="156-156"];
m92_68 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Arguments are converted to a JSON string and contained in the \'Args\' parameter'', ((string[])(null)))", span="158-158"];
m92_69 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="160-160"];
m92_70 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="this.FeatureBackground()", span="162-162"];
m92_71 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="164-166"];
m92_72 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''5''})", span="167-169"];
m92_73 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="table3.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Deleted''})", span="170-172"];
m92_74 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="testRunner.When(''I create a job with the following arguments:'', ((string)(null)), table3, ''When '')", span="174-174"];
m92_75 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="testRunner.Then(''the job contains all of the above arguments in the JSON format'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="176-176"];
m92_76 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="this.ScenarioCleanup()", span="178-178"];
m92_77 [cluster="HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="156-156"];
m92_9 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.FeatureTearDown()", span="39-39"];
m92_10 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="RedisConnectionFacts.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m92_11 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="RedisConnectionFacts.cs", label="testRunner = null", span="42-42"];
m92_12 [cluster="HangFire.Tests.ClientFeature.FeatureTearDown()", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.FeatureTearDown()", span="39-39"];
m92_5 [cluster="Unk.GetTestRunner", file="RedisConnectionFacts.cs", label="Entry Unk.GetTestRunner", span=""];
m92_78 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", span="185-185"];
m92_79 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="RedisConnectionFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The given state was applied to the job'', ((string[])(null)))", span="187-187"];
m92_80 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="RedisConnectionFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="189-189"];
m92_81 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="RedisConnectionFacts.cs", label="this.FeatureBackground()", span="191-191"];
m92_82 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="RedisConnectionFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="193-193"];
m92_83 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="RedisConnectionFacts.cs", label="testRunner.Then(''the given state was applied to it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="195-195"];
m92_84 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="RedisConnectionFacts.cs", label="this.ScenarioCleanup()", span="197-197"];
m92_85 [cluster="HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.TheGivenStateWasAppliedToTheJob()", span="185-185"];
m92_43 [cluster="Unk.When", file="RedisConnectionFacts.cs", label="Entry Unk.When", span=""];
m92_22 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m92_23 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RedisConnectionFacts.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m92_24 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m92_26 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66"];
m92_27 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="RedisConnectionFacts.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m92_28 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66"];
m92_44 [cluster="Unk.Then", file="RedisConnectionFacts.cs", label="Entry Unk.Then", span=""];
m92_45 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="RedisConnectionFacts.cs", label="0: Entry HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="102-102"];
m92_46 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="RedisConnectionFacts.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job contains the \'Type\' parameter equal to the assembly qualified type name'', ((string[])(null)))", span="104-104"];
m92_47 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="RedisConnectionFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="106-106"];
m92_48 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="RedisConnectionFacts.cs", label="this.FeatureBackground()", span="108-108"];
m92_34 [cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", span="83-83"];
m92_35 [cluster="HangFire.Tests.ClientFeature.TheClientCreatesTheJobInTheStorage()", file="RedisConnectionFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The client creates the job in the storage'', ((string[])(null)))", span="85-85"];
m92_36 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="50-50"];
m92_37 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", color=green, community=0, file="RedisConnectionFacts.cs", label="0: var redis = RedisUtils.CreateClient()", span="52-52"];
m92_38 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", color=green, community=0, file="RedisConnectionFacts.cs", label="0: var connection = new RedisConnection(redis)", span="53-53"];
m92_39 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", color=green, community=0, file="RedisConnectionFacts.cs", label="0: action(redis, connection)", span="55-55"];
m92_40 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="50-50"];
m92_41 [cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15"];
m92_13 [cluster="Unk.OnFeatureEnd", file="RedisConnectionFacts.cs", label="Entry Unk.OnFeatureEnd", span=""];
m92_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="RedisConnectionFacts.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m92_14 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.TestInitialize()", span="46-46"];
m92_15 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="RedisConnectionFacts.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client''))", span="48-49"];
m92_16 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="RedisConnectionFacts.cs", label="HangFire.Tests.ClientFeature.FeatureSetup(null)", span="51-51"];
m92_17 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.TestInitialize()", span="46-46"];
m92_18 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56"];
m92_19 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="RedisConnectionFacts.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m92_20 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56"];
m92_56 [cluster="Unk.AddRow", file="RedisConnectionFacts.cs", label="Entry Unk.AddRow", span=""];
m92_57 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="129-129"];
m92_58 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''If the arguments were not provided, the \'Args\' parameter contains the empty JSON '' +\r\n                    ''value'', ((string[])(null)))", span="131-132"];
m92_59 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="134-134"];
m92_60 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="this.FeatureBackground()", span="136-136"];
m92_61 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="testRunner.When(''I create an argumentless job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="138-138"];
m92_62 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="140-142"];
m92_63 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="table2.AddRow(new string[] {\r\n                        ''Args'',\r\n                        ''{}''})", span="143-145"];
m92_64 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table2, ''Then '')", span="147-147"];
m92_65 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="this.ScenarioCleanup()", span="149-149"];
m92_66 [cluster="HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="129-129"];
m92_49 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="RedisConnectionFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="110-110"];
m92_50 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="RedisConnectionFacts.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="112-114"];
m92_51 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="RedisConnectionFacts.cs", label="table1.AddRow(new string[] {\r\n                        ''Type'',\r\n                        ''<Assembly qualified name of \'HangFire.Tests.TestJob\' type>''})", span="115-117"];
m92_52 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="RedisConnectionFacts.cs", label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table1, ''Then '')", span="119-119"];
m92_53 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="RedisConnectionFacts.cs", label="this.ScenarioCleanup()", span="121-121"];
m92_54 [cluster="HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="102-102"];
m92_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="RedisConnectionFacts.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m92_30 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71"];
m92_31 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="RedisConnectionFacts.cs", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m92_32 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71"];
m92_33 [cluster="Unk.Given", file="RedisConnectionFacts.cs", label="Entry Unk.Given", span=""];
m92_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="RedisConnectionFacts.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m92_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="RedisConnectionFacts.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m92_0 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RedisConnectionFacts.cs", label="Entry HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m92_1 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RedisConnectionFacts.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m92_2 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RedisConnectionFacts.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m92_3 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RedisConnectionFacts.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m92_4 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RedisConnectionFacts.cs", label="Exit HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m92_8 [cluster="Unk.OnFeatureStart", file="RedisConnectionFacts.cs", label="Entry Unk.OnFeatureStart", span=""];
m92_86 [file="RedisConnectionFacts.cs", label="HangFire.Tests.ClientFeature", span=""];
m93_35 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m93_37 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="RedisMonitoringApi.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer(_options))", span="50-50"];
m93_36 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="RedisMonitoringApi.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="49-49"];
m93_38 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m93_4 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RedisMonitoringApi.cs", label="_serverMock = new Mock<BackgroundJobServer>(_options, _storage.Object)\r\n            {\r\n                CallBase = true\r\n            }", span="21-24"];
m93_5 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RedisMonitoringApi.cs", label="_serverMock.Setup(x => x.GetServerRunner()).Returns(_runner.Object)", span="25-25"];
m93_22 [cluster="Unk.Equal", file="RedisMonitoringApi.cs", label="Entry Unk.Equal", span=""];
m93_83 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="137-137"];
m93_128 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: return new BackgroundJobServer(_options, _storage.Object);", span="139-139"];
m93_129 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="137-137"];
m93_65 [cluster="Unk.Stop", file="RedisMonitoringApi.cs", label="Entry Unk.Stop", span=""];
m93_0 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m93_1 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RedisMonitoringApi.cs", label="_storage = new Mock<JobStorage>()", span="17-17"];
m93_2 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", color=red, community=0, file="RedisMonitoringApi.cs", label="0: _options = new BackgroundJobServerOptions()", span="18-18"];
m93_3 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: _runner = new Mock<IServerComponentRunner>()", span="20-20"];
m93_61 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m93_62 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="RedisMonitoringApi.cs", label="_serverMock.Object.Stop()", span="71-71"];
m93_63 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="RedisMonitoringApi.cs", label="_runner.Verify(x => x.Stop())", span="73-73"];
m93_64 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m93_104 [cluster="object.GetType()", file="RedisMonitoringApi.cs", label="Entry object.GetType()", span="0-0"];
m93_39 [cluster="Unk.DoesNotThrow", file="RedisMonitoringApi.cs", label="Entry Unk.DoesNotThrow", span=""];
m93_69 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m93_70 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: _serverMock.Object.Dispose()", span="79-79"];
m93_71 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: _runner.Verify(x => x.Dispose())", span="81-81"];
m93_72 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m93_9 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RedisMonitoringApi.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m93_21 [cluster="Unk.>", file="RedisMonitoringApi.cs", label="Entry Unk.>", span=""];
m93_112 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="118-118"];
m93_113 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: var storageComponent = new Mock<IServerComponent>()", span="121-121"];
m93_114 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: _storage.Setup(x => x.GetComponents()).Returns(new[] { storageComponent.Object })", span="122-122"];
m93_118 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: Assert.Contains(storageComponent.Object, components)", span="134-134"];
m93_115 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: var server = CreateServer()", span="124-124"];
m93_117 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: var components = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .ToArray()", span="130-132"];
m93_116 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: var runners = server.GetServerComponentsRunner()", span="127-127"];
m93_119 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="118-118"];
m93_6 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="RedisMonitoringApi.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32"];
m93_124 [cluster="Unk.GetComponents", file="RedisMonitoringApi.cs", label="Entry Unk.GetComponents", span=""];
m93_44 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m93_45 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="RedisMonitoringApi.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="56-56"];
m93_46 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="RedisMonitoringApi.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer())", span="57-57"];
m93_47 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m93_77 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m93_78 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: var server = CreateServer()", span="87-87"];
m93_79 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: var runner = server.GetServerRunner()", span="89-89"];
m93_80 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: Assert.NotNull(runner)", span="91-91"];
m93_81 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: Assert.IsType<ServerCore>(((ServerComponentRunner) runner).Component)", span="92-92"];
m93_82 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m93_100 [cluster="Unk.ToArray", file="RedisMonitoringApi.cs", label="Entry Unk.ToArray", span=""];
m93_7 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", color=red, community=0, file="RedisMonitoringApi.cs", label="0: return _jobQueue;", span="34-34"];
m93_85 [cluster="Unk.NotNull", file="RedisMonitoringApi.cs", label="Entry Unk.NotNull", span=""];
m93_8 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RedisMonitoringApi.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11"];
m93_43 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="RedisMonitoringApi.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m93_11 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RedisMonitoringApi.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m93_51 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="RedisMonitoringApi.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m93_73 [cluster="Unk.Dispose", file="RedisMonitoringApi.cs", label="Entry Unk.Dispose", span=""];
m93_34 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RedisMonitoringApi.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m93_10 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RedisMonitoringApi.cs", label="return _monitoringApi;", span="39-39"];
m93_120 [cluster="Mock<IServerComponent>.cstr", file="RedisMonitoringApi.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m93_52 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m93_53 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="RedisMonitoringApi.cs", label="_serverMock.Object.Start()", span="63-63"];
m93_54 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="RedisMonitoringApi.cs", label="_runner.Verify(x => x.Start())", span="65-65"];
m93_55 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m93_95 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="RedisMonitoringApi.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99"];
m93_99 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="RedisMonitoringApi.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m93_48 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="57-57"];
m93_23 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="32-32"];
m93_24 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="0: new BackgroundJobServer(null, _storage.Object)", span="32-32"];
m93_25 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="32-32"];
m93_31 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="41-41"];
m93_32 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="0: new BackgroundJobServer(_options, null)", span="41-41"];
m93_33 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="41-41"];
m93_74 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="81-81"];
m93_75 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="0: x.Dispose()", span="81-81"];
m93_76 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="81-81"];
m93_105 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="108-108"];
m93_108 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="109-109"];
m93_106 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="0: x.Component", span="108-108"];
m93_107 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="108-108"];
m93_109 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="0: x.GetType()", span="109-109"];
m93_110 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="109-109"];
m93_121 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="122-122"];
m93_125 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="131-131"];
m93_122 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="0: x.GetComponents()", span="122-122"];
m93_123 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="122-122"];
m93_126 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="0: x.Component", span="131-131"];
m93_127 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="131-131"];
m93_41 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new BackgroundJobServer(_options)", span="50-50"];
m93_101 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="105-105"];
m93_13 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="25-25"];
m93_40 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="50-50"];
m93_42 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="50-50"];
m93_58 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="65-65"];
m93_66 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="73-73"];
m93_103 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="105-105"];
m93_102 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetType()", span="105-105"];
m93_15 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="25-25"];
m93_14 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetServerRunner()", span="25-25"];
m93_59 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Start()", span="65-65"];
m93_60 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="65-65"];
m93_67 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Stop()", span="73-73"];
m93_68 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="73-73"];
m93_49 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new BackgroundJobServer()", span="57-57"];
m93_50 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="57-57"];
m93_17 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m93_18 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(null, _storage.Object))", span="31-32"];
m93_19 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: Assert.Equal(''options'', exception.ParamName)", span="34-34"];
m93_20 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m93_97 [cluster="Unk.Contains", file="RedisMonitoringApi.cs", label="Entry Unk.Contains", span=""];
m93_56 [cluster="Unk.Start", file="RedisMonitoringApi.cs", label="Entry Unk.Start", span=""];
m93_57 [cluster="Unk.Verify", file="RedisMonitoringApi.cs", label="Entry Unk.Verify", span=""];
m93_96 [cluster="Unk.Select", file="RedisMonitoringApi.cs", label="Entry Unk.Select", span=""];
m93_16 [cluster="Unk.GetServerRunner", file="RedisMonitoringApi.cs", label="Entry Unk.GetServerRunner", span=""];
m93_111 [cluster="Unk.GetType", file="RedisMonitoringApi.cs", label="Entry Unk.GetType", span=""];
m93_27 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m93_28 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(_options, null))", span="40-41"];
m93_29 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RedisMonitoringApi.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="43-43"];
m93_30 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m93_98 [cluster="Unk.True", file="RedisMonitoringApi.cs", label="Entry Unk.True", span=""];
m93_84 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="RedisMonitoringApi.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="77-77"];
m93_12 [cluster="Unk.Returns", file="RedisMonitoringApi.cs", label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", span=""];
m93_26 [cluster="BackgroundJobServer.cstr", file="RedisMonitoringApi.cs", label="Entry BackgroundJobServer.cstr", span=""];
m93_86 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RedisMonitoringApi.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96"];
m93_87 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="2: var server = CreateServer()", span="99-99"];
m93_88 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: var runners = server.GetServerComponentsRunner()", span="102-102"];
m93_89 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RedisMonitoringApi.cs", label="Assert.True(runners.Select(x => x.GetType()).Contains(typeof(WorkerManager)))", span="105-105"];
m93_90 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="2: var componentTypes = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .Select(x => x.GetType())\r\n                .ToArray()", span="107-110"];
m93_91 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="2: Assert.Contains(typeof(ServerHeartbeat), componentTypes)", span="112-112"];
m93_92 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: Assert.Contains(typeof(ServerWatchdog), componentTypes)", span="113-113"];
m93_93 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="RedisMonitoringApi.cs", label="0: Assert.Contains(typeof(SchedulePoller), componentTypes)", span="114-114"];
m93_94 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RedisMonitoringApi.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96"];
m93_130 [file="RedisMonitoringApi.cs", label="HangFire.Core.Tests.BackgroundJobServerFacts", span=""];
m94_5 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44"];
m94_6 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="var failedState = context.CandidateState as FailedState", span="46-46"];
m94_9 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="53-53"];
m94_11 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="ScheduleAgainLater(context, retryAttempt, failedState)", span="57-57"];
m94_13 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="TransitionToDeleted(context, failedState)", span="61-61"];
m94_15 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="Logger.ErrorException(\r\n                        String.Format(\r\n                            ''Failed to process the job '{0}': an exception occurred.'',\r\n                            context.JobId),\r\n                        failedState.Exception)", span="67-71"];
m94_7 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="failedState == null", span="47-47"];
m94_8 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="return;", span="50-50"];
m94_10 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="retryAttempt <= Attempts", span="55-55"];
m94_12 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="retryAttempt > Attempts && OnAttemptsExceeded == AttemptsExceededAction.Delete", span="59-59"];
m94_14 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label=LogEvents, span="65-65"];
m94_16 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisStorage.cs", label="Exit Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44"];
m94_31 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="RedisStorage.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m94_34 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RedisStorage.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="285-285"];
m94_28 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="RedisStorage.cs", label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
m94_40 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="RedisStorage.cs", label="var random = new Random()", span="134-134"];
m94_41 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="RedisStorage.cs", label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="135-136"];
m94_42 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="RedisStorage.cs", label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
m94_32 [cluster="string.Format(string, object, object)", file="RedisStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m94_17 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="RedisStorage.cs", label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54"];
m94_33 [cluster="string.Format(string, params object[])", file="RedisStorage.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m94_43 [cluster="System.Random.Random()", file="RedisStorage.cs", label="Entry System.Random.Random()", span="0-0"];
m94_18 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisStorage.cs", label="Entry Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
m94_22 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisStorage.cs", label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="84-84"];
m94_23 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisStorage.cs", label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="86-86"];
m94_24 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisStorage.cs", label="context.CandidateState = new ScheduledState(delay)\r\n            {\r\n                Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n            }", span="90-93"];
m94_26 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisStorage.cs", label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay),\r\n                    failedState.Exception)", span="97-104"];
m94_25 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisStorage.cs", label=LogEvents, span="95-95"];
m94_27 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisStorage.cs", label="Exit Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
m94_21 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RedisStorage.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="166-166"];
m94_29 [cluster="System.TimeSpan.FromSeconds(double)", file="RedisStorage.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m94_44 [cluster="System.Math.Pow(double, double)", file="RedisStorage.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m94_45 [cluster="System.Random.Next(int)", file="RedisStorage.cs", label="Entry System.Random.Next(int)", span="0-0"];
m94_46 [cluster="System.Math.Round(double)", file="RedisStorage.cs", label="Entry System.Math.Round(double)", span="0-0"];
m94_0 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisStorage.cs", label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
m94_1 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisStorage.cs", label="Attempts = DefaultRetryAttempts", span="22-22"];
m94_2 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisStorage.cs", label="LogEvents = true", span="23-23"];
m94_3 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisStorage.cs", label="OnAttemptsExceeded = AttemptsExceededAction.Fail", span="24-24"];
m94_4 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisStorage.cs", label="Exit Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
m94_20 [cluster="string.Format(string, object)", file="RedisStorage.cs", label="Entry string.Format(string, object)", span="0-0"];
m94_19 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisStorage.cs", label="Entry Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
m94_35 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisStorage.cs", label="context.CandidateState = new DeletedState\r\n            {\r\n                Reason = String.Format(''Automatic deletion after retry count exceeded {0}'', Attempts)\r\n            }", span="115-118"];
m94_37 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisStorage.cs", label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occured. Job was automatically deleted because the retry attempt count exceeded {1}.'',\r\n                        context.JobId,\r\n                        Attempts),\r\n                    failedState.Exception)", span="122-127"];
m94_36 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisStorage.cs", label=LogEvents, span="120-120"];
m94_38 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisStorage.cs", label="Exit Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
m94_30 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="RedisStorage.cs", label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49"];
m94_39 [cluster="Hangfire.States.DeletedState.DeletedState()", file="RedisStorage.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m94_47 [file="RedisStorage.cs", label="Hangfire.AutomaticRetryAttribute", span=""];
m95_92 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194"];
m95_104 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="var transaction = _connection.CreateWriteTransaction()", span="198-198"];
m95_105 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="200-202"];
m95_106 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="204-204"];
m95_107 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="return transaction.Commit();", span="206-206"];
m95_108 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194"];
m95_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m95_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m95_145 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m95_161 [cluster="System.Collections.Generic.List<T>.List()", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m95_93 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m95_50 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m95_94 [cluster="string.Format(string, object, object)", file="RedisWriteOnlyTransaction.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m95_87 [cluster="string.IsNullOrWhiteSpace(string)", file="RedisWriteOnlyTransaction.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m95_128 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m95_59 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m95_49 [cluster="System.TimeSpan.FromHours(double)", file="RedisWriteOnlyTransaction.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m95_91 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m95_127 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="26-26"];
m95_17 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="287-287"];
m95_153 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisWriteOnlyTransaction.cs", label="handler == null", span="289-289"];
m95_155 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisWriteOnlyTransaction.cs", label="String.IsNullOrEmpty(handler.StateName)", span="290-290"];
m95_157 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisWriteOnlyTransaction.cs", label="!_handlers.ContainsKey(handler.StateName)", span="292-292"];
m95_158 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisWriteOnlyTransaction.cs", label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="294-294"];
m95_159 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisWriteOnlyTransaction.cs", label="_handlers[handler.StateName].Add(handler)", span="297-297"];
m95_154 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''handler'');", span="289-289"];
m95_156 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''stateName'');", span="290-290"];
m95_160 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="287-287"];
m95_0 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m95_1 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m95_53 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m95_152 [cluster="System.Func<T, TResult>.Invoke(T)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m95_125 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m95_55 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m95_25 [cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38"];
m95_26 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m95_27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="method == null", span="69-69"];
m95_29 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="parameters == null", span="70-70"];
m95_31 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="state == null", span="71-71"];
m95_33 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78"];
m95_34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84"];
m95_35 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="var filterInfo = GetFilters(method)", span="86-86"];
m95_36 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="var context = new StateContext(jobId, method)", span="87-87"];
m95_37 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88"];
m95_28 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''method'');", span="69-69"];
m95_30 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''parameters'');", span="70-70"];
m95_32 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''state'');", span="71-71"];
m95_42 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="transaction.Jobs.Persist(jobId)", span="104-104"];
m95_44 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="return jobId;", span="110-110"];
m95_38 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90"];
m95_41 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="ApplyState(\r\n                    changedContext, \r\n                    null,\r\n                    changingContext.CandidateState,\r\n                    filterInfo.StateChangedFilters)", span="98-102"];
m95_40 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="94-96"];
m95_39 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="var transaction = _connection.CreateWriteTransaction()", span="92-92"];
m95_43 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="transaction.Commit()", span="107-107"];
m95_45 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m95_15 [cluster="HangFire.JobStorage.GetStateHandlers()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52"];
m95_95 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="RedisWriteOnlyTransaction.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m95_151 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m95_146 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m95_144 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m95_123 [cluster="string.IsNullOrEmpty(string)", file="RedisWriteOnlyTransaction.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m95_56 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m95_88 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m95_129 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259"];
m95_135 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="var properties = new Dictionary<string, string>(\r\n                state.GetProperties(context.JobMethod))", span="265-266"];
m95_137 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="properties.Add(''State'', state.StateName)", span="269-269"];
m95_138 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label=appendToJob, span="271-271"];
m95_139 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="transaction.Jobs.SetState(context.JobId, state.StateName, properties)", span="273-273"];
m95_140 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="properties.Add(''Reason'', state.Reason)", span="276-276"];
m95_142 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="transaction.Jobs.AppendHistory(context.JobId, properties)", span="279-279"];
m95_136 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="var now = DateTime.UtcNow", span="267-267"];
m95_141 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="277-277"];
m95_143 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259"];
m95_124 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m95_48 [cluster="Unk.ToJson", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.ToJson", span=""];
m95_60 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="77-77"];
m95_19 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m95_18 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="59-59"];
m95_20 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="59-59"];
m95_22 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="59-59"];
m95_23 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59"];
m95_24 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="59-59"];
m95_61 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ParameterType", span="77-77"];
m95_62 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="77-77"];
m95_147 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m95_21 [cluster="Unk.Select", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Select", span=""];
m95_54 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m95_96 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisWriteOnlyTransaction.cs", label=filters, span="182-182"];
m95_97 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisWriteOnlyTransaction.cs", label="var oldState = context.CandidateState", span="184-184"];
m95_98 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisWriteOnlyTransaction.cs", label="filter.OnStateChanging(context)", span="185-185"];
m95_99 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisWriteOnlyTransaction.cs", label="oldState != context.CandidateState", span="187-187"];
m95_100 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisWriteOnlyTransaction.cs", label="AppendHistory(context, oldState, false)", span="189-189"];
m95_101 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m95_57 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m95_109 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="!String.IsNullOrEmpty(oldState)", span="216-216"];
m95_110 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="_handlers.ContainsKey(oldState)", span="218-218"];
m95_111 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="_handlers[oldState]", span="220-220"];
m95_112 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="handler.Unapply(context)", span="222-222"];
m95_113 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label=stateChangedFilters, span="226-226"];
m95_114 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="filter.OnStateUnapplied(context)", span="228-228"];
m95_115 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="_handlers.ContainsKey(chosenState.StateName)", span="232-232"];
m95_116 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="var stateData = chosenState.GetProperties(context.JobMethod)", span="234-234"];
m95_117 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="_handlers[chosenState.StateName]", span="235-235"];
m95_118 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="handler.Apply(context, stateData)", span="237-237"];
m95_119 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="AppendHistory(context.Transaction, context, chosenState, true)", span="241-241"];
m95_120 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label=stateChangedFilters, span="243-243"];
m95_121 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="filter.OnStateApplied(context)", span="245-245"];
m95_122 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m95_63 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m95_64 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="String.IsNullOrWhiteSpace(jobId)", span="116-116"];
m95_66 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="0: state == null", span="117-117"];
m95_68 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="_connection.AcquireJobLock(jobId)", span="119-119"];
m95_69 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123"];
m95_73 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="132-132"];
m95_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="var context = new StateContext(jobId, jobMethod)", span="142-142"];
m95_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143"];
m95_82 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(ex)\r\n                            {\r\n                                Reason = String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId)\r\n                            },\r\n                            currentState,\r\n                            _connection)", span="156-165"];
m95_65 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''jobId'');", span="116-116"];
m95_67 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="0: throw new ArgumentNullException(''state'');", span="117-117"];
m95_70 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="jobData == null", span="125-125"];
m95_72 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="var currentState = jobData.State", span="131-131"];
m95_75 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="139-139"];
m95_71 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="return false;", span="128-128"];
m95_74 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="return false;", span="134-134"];
m95_76 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="var filterInfo = GetFilters(jobMethod)", span="140-140"];
m95_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145"];
m95_80 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147"];
m95_81 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label=JobLoadException, span="149-149"];
m95_83 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="167-169"];
m95_84 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label=Exception, span="172-172"];
m95_85 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="throw;", span="174-174"];
m95_86 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m95_102 [cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m95_130 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m95_163 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m95_58 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m95_51 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m95_149 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="284-284"];
m95_150 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m95_148 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m95_126 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m95_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m95_47 [cluster="System.Reflection.MethodBase.GetParameters()", file="RedisWriteOnlyTransaction.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m95_103 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249"];
m95_131 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="var transaction = _connection.CreateWriteTransaction()", span="252-252"];
m95_132 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="AppendHistory(transaction, context, state, appendToJob)", span="254-254"];
m95_133 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="transaction.Commit()", span="255-255"];
m95_134 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249"];
m95_162 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m95_52 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m95_46 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m95_89 [cluster="HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", span="6-6"];
m95_2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m95_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="connection == null", span="46-46"];
m95_5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="stateHandlers == null", span="47-47"];
m95_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="_connection = connection", span="49-49"];
m95_8 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51"];
m95_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="filters != null", span="57-57"];
m95_12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m95_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''connection'');", span="46-46"];
m95_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''stateHandlers'');", span="47-47"];
m95_9 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label=handlers, span="52-52"];
m95_10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="RegisterHandler(handler)", span="54-54"];
m95_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m95_164 [file="RedisWriteOnlyTransaction.cs", label="HangFire.States.StateMachine", span=""];
m95_165 [file="RedisWriteOnlyTransaction.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m96_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m96_15 [cluster="System.Collections.Generic.List<T>.List(int)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m96_30 [cluster="HangFire.Server.WorkerManager.ToString()", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.WorkerManager.ToString()", span="66-66"];
m96_31 [cluster="HangFire.Server.WorkerManager.ToString()", file="RedisWriteOnlyTransactionFacts.cs", label="return ''Worker Manager'';", span="68-68"];
m96_32 [cluster="HangFire.Server.WorkerManager.ToString()", file="RedisWriteOnlyTransactionFacts.cs", label="Exit HangFire.Server.WorkerManager.ToString()", span="66-66"];
m96_16 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m96_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m96_14 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m96_24 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m96_26 [cluster="HangFire.Server.WorkerManager.Dispose()", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.WorkerManager.Dispose()", span="61-61"];
m96_27 [cluster="HangFire.Server.WorkerManager.Dispose()", file="RedisWriteOnlyTransactionFacts.cs", label="_workerRunners.Dispose()", span="63-63"];
m96_28 [cluster="HangFire.Server.WorkerManager.Dispose()", file="RedisWriteOnlyTransactionFacts.cs", label="Exit HangFire.Server.WorkerManager.Dispose()", span="61-61"];
m96_17 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="71-71"];
m96_33 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="RedisWriteOnlyTransactionFacts.cs", label="return new ServerComponentRunner(\r\n                new Worker(context),\r\n                new ServerComponentRunnerOptions { LowerLogVerbosity = true });", span="73-75"];
m96_34 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="RedisWriteOnlyTransactionFacts.cs", label="Exit HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="71-71"];
m96_29 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m96_37 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m96_0 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="29-29"];
m96_1 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="sharedContext == null", span="31-31"];
m96_3 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="workerCount <= 0", span="33-33"];
m96_5 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="var workerRunners = new List<IServerComponentRunner>(workerCount)", span="35-35"];
m96_7 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="i <= workerCount", span="36-36"];
m96_8 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="var workerContext = new WorkerContext(sharedContext, i)", span="38-38"];
m96_2 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="throw new ArgumentNullException(''sharedContext'');", span="31-31"];
m96_4 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="33-33"];
m96_6 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="var i = 1", span="36-36"];
m96_9 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="workerRunners.Add(CreateWorkerRunner(workerContext))", span="41-41"];
m96_11 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="_workerRunners = new ServerComponentRunnerCollection(workerRunners)", span="44-44"];
m96_10 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="i++", span="36-36"];
m96_12 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="RedisWriteOnlyTransactionFacts.cs", label="Exit HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="29-29"];
m96_25 [cluster="System.Threading.WaitHandle.WaitOne()", file="RedisWriteOnlyTransactionFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m96_35 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m96_36 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m96_19 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m96_20 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="47-47"];
m96_21 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs", label="_workerRunners.Start()", span="51-51"];
m96_22 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs", label="cancellationToken.WaitHandle.WaitOne()", span="53-53"];
m96_23 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs", label="Exit HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="47-47"];
m96_38 [file="RedisWriteOnlyTransactionFacts.cs", label="HangFire.Server.WorkerManager", span=""];
m97_0 [cluster="HangFire.RetryAttribute.RetryAttribute()", file="RetryAttribute.cs", label="Entry HangFire.RetryAttribute.RetryAttribute()", span="23-23"];
m97_1 [cluster="HangFire.RetryAttribute.RetryAttribute()", file="RetryAttribute.cs", label="Exit HangFire.RetryAttribute.RetryAttribute()", span="23-23"];
m97_2 [cluster="HangFire.RetryAttribute.RetryAttribute(int)", file="RetryAttribute.cs", label="Entry HangFire.RetryAttribute.RetryAttribute(int)", span="27-27"];
m97_3 [cluster="HangFire.RetryAttribute.RetryAttribute(int)", color=green, community=0, file="RetryAttribute.cs", label="0: Attempts = attempts", span="29-29"];
m97_4 [cluster="HangFire.RetryAttribute.RetryAttribute(int)", file="RetryAttribute.cs", label="Exit HangFire.RetryAttribute.RetryAttribute(int)", span="27-27"];
m97_5 [file="RetryAttribute.cs", label="HangFire.RetryAttribute", span=""];
m100_64 [cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33"];
m100_59 [cluster="Unk.TryParse", file="ScheduledJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m100_57 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m100_65 [cluster="HangFire.Web.RazorPage.Write(object)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m100_60 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m100_6 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: Pager pager", span="69-69"];
m100_0 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m100_1 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="51-51"];
m100_2 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62"];
m100_3 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="int from, perPage", span="64-64"];
m100_4 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: int.TryParse(Request.QueryString[''from''], out from)", span="66-66"];
m100_5 [cluster="System.TimeSpan.FromSeconds(double)", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m100_9 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: pager = new Pager(from, perPage, monitor.ScheduledCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/scheduled'')\r\n        }", span="74-77"];
m100_8 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: var monitor = JobStorage.Current.GetMonitoringApi()", span="72-72"];
m100_10 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="79-79"];
m100_12 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="91-91"];
m100_19 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="151-151"];
m100_55 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="383-383"];
m100_7 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: HangFire.SqlServer.SqlServerStorageOptions", span=""];
m100_13 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        There are no scheduled jobs.\r\n    </d'' +\r\n''iv>\r\n'')", span="97-98"];
m100_14 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="110-112"];
m100_15 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/scheduled/enqueue''))", span="117-117"];
m100_16 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: WriteLiteral(@''''''\r\n                    data-loading-text=''''Enqueueing...''''>\r\n                <span class=''''glyphicon glyphicon-play''''></span>\r\n                Enqueue now\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="122-129"];
m100_17 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/scheduled/delete''))", span="134-134"];
m100_18 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="139-146"];
m100_20 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Enqueue</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Scheduled</th>\r\n                </tr>\r\n            </thead>\r\n'')", span="156-171"];
m100_21 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label=scheduledJobs, span="176-176"];
m100_28 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", span="213-214"];
m100_27 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="job.Value.InScheduledState", span="207-207"];
m100_29 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Key)", span="219-219"];
m100_31 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="2: WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <a href=\'''')", span="234-235"];
m100_30 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\'' />\r\n'')", span="224-224"];
m100_32 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="240-240"];
m100_37 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="266-267"];
m100_36 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="!job.Value.InScheduledState", span="260-260"];
m100_38 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <span data-moment=\'''')", span="277-278"];
m100_39 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueueAt))", span="283-283"];
m100_42 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: WriteLiteral(''\r\n                        </span>\r\n                    </td>\r\n                   '' +\r\n'' <td>\r\n                        <a class=\''job-method\'' href=\'''')", span="298-299"];
m100_41 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Value.EnqueueAt)", span="293-293"];
m100_43 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="304-304"];
m100_46 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="1: WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d class=\''align-right\''>\r\n'')", span="319-320"];
m100_45 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="314-314"];
m100_47 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="job.Value.ScheduledAt != null", span="325-325"];
m100_48 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="0: WriteLiteral(''                            <span data-moment=\'''')", span="331-331"];
m100_49 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.ScheduledAt.Value))", span="336-336"];
m100_11 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="86-86"];
m100_22 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", span="182-182"];
m100_23 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="187-187"];
m100_24 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral('' '')", span="192-192"];
m100_25 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Value.InScheduledState ? ''hover'' : null)", span="197-197"];
m100_26 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                    <td>\r\n'')", span="202-202"];
m100_33 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", span="245-245"];
m100_34 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="250-250"];
m100_35 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n'')", span="255-255"];
m100_40 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", span="288-288"];
m100_44 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", span="309-309"];
m100_50 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", span="341-341"];
m100_51 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Value.ScheduledAt)", span="346-346"];
m100_52 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n'')", span="351-351"];
m100_53 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="361-361"];
m100_54 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''        </table>\r\n    </div>\r\n'')", span="371-371"];
m100_56 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m100_66 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m100_68 [cluster="Unk.Write", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m100_63 [cluster="HttpRequestBase.LinkTo(string)", file="ScheduledJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m100_71 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m100_58 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m100_72 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m100_62 [cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38"];
m100_67 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m100_70 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m100_61 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m100_69 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m100_73 [file="ScheduledJobsPage.generated.cs", label="HangFire.Web.Pages.ScheduledJobsPage", span=""];
m101_25 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="ScheduledState.cs", label="visitedTypes.Add(filterInstanceType)", span="71-71"];
m101_29 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="ScheduledState.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m101_26 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="ScheduledState.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="58-58"];
m101_27 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="ScheduledState.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m101_28 [cluster="object.GetType()", file="ScheduledState.cs", label="Entry object.GetType()", span="0-0"];
m101_21 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="ScheduledState.cs", label="var filterInstance = filter.Instance", span="65-65"];
m101_10 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", file="ScheduledState.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m101_15 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="ScheduledState.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client filters''))", span="48-49"];
m101_52 [cluster="Unk.And", file="ScheduledState.cs", label="Entry Unk.And", span=""];
m101_5 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", color=green, community=0, file="ScheduledState.cs", label="2: IEnumerable<JobFilter> combinedFilters =\r\n                Items.SelectMany(fp => fp.GetFilters(job))\r\n                    .OrderBy(filter => filter, _filterComparer)", span="50-52"];
m101_98 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", span="215-215"];
m101_99 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter can handle the exception'', ((string[])(null)))", span="217-217"];
m101_100 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="this.ScenarioSetup(scenarioInfo)", span="219-219"];
m101_101 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="this.FeatureBackground()", span="221-221"];
m101_102 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="223-223"];
m101_103 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="225-225"];
m101_104 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="227-227"];
m101_105 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="229-229"];
m101_106 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="231-232"];
m101_107 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="table5.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="233-234"];
m101_108 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="table5.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="235-236"];
m101_109 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="table5.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="237-238"];
m101_110 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="table5.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="239-240"];
m101_111 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="table5.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="241-242"];
m101_112 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.Then(''the client filter methods were executed in the following order:'', ((string)(null)), table5, ''Then '')", span="244-244"];
m101_113 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.And(''no exception were thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="246-246"];
m101_114 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="this.ScenarioCleanup()", span="248-248"];
m101_115 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", span="215-215"];
m101_4 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m101_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="ScheduledState.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m101_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ScheduledState.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m101_53 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", span="113-113"];
m101_54 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="Hangfire.Common.JobFilterProviderCollection", span=""];
m101_55 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="Hangfire.Common.Job", span=""];
m101_56 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="this.FeatureBackground()", span="119-119"];
m101_57 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="121-121"];
m101_58 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.And(''the client filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="123-123"];
m101_59 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="125-125"];
m101_60 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="127-128"];
m101_61 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="table2.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="129-130"];
m101_62 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="table2.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="131-132"];
m101_63 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="table2.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="133-134"];
m101_64 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="table2.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="135-136"];
m101_65 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.Then(''the client filter methods were executed in the following order:'', ((string)(null)), table2, ''Then '')", span="138-138"];
m101_66 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="this.ScenarioCleanup()", span="140-140"];
m101_67 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", span="113-113"];
m101_30 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="71-71"];
m101_32 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="71-71"];
m101_34 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", span="83-83"];
m101_35 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filters are executed when I create a job'', ((string[])(null)))", span="85-85"];
m101_33 [cluster="Unk.Given", file="ScheduledState.cs", label="Entry Unk.Given", span=""];
m101_36 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="this.ScenarioSetup(scenarioInfo)", span="87-87"];
m101_84 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="183-183"];
m101_85 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter\'s OnCreated could be skipped if there was an exception'', ((string[])(null)))", span="185-185"];
m101_86 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="this.ScenarioSetup(scenarioInfo)", span="187-187"];
m101_87 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="this.FeatureBackground()", span="189-189"];
m101_88 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="191-191"];
m101_89 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="testRunner.And(''the client filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193"];
m101_90 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="195-195"];
m101_91 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="197-198"];
m101_92 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="table4.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="199-200"];
m101_93 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="table4.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="201-202"];
m101_94 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="table4.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="203-204"];
m101_95 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="testRunner.Then(''only the following client filter methods were executed:'', ((string)(null)), table4, ''Then '')", span="206-206"];
m101_96 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="this.ScenarioCleanup()", span="208-208"];
m101_97 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="183-183"];
m101_22 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="ScheduledState.cs", label="var filterInstanceType = filterInstance.GetType()", span="66-66"];
m101_23 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="ScheduledState.cs", label="!visitedTypes.Contains(filterInstanceType) || AllowMultiple(filterInstance)", span="68-68"];
m101_24 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="ScheduledState.cs", label="yield return filter;", span="70-70"];
m101_13 [cluster="lambda expression", color=green, community=0, file="ScheduledState.cs", label="0: fp.GetFilters(job)", span="51-51"];
m101_142 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", span="316-316"];
m101_143 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Exception filter can handle the exception'', ((string[])(null)))", span="318-318"];
m101_144 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="this.ScenarioSetup(scenarioInfo)", span="320-320"];
m101_145 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="this.FeatureBackground()", span="322-322"];
m101_146 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="324-324"];
m101_147 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="326-326"];
m101_148 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="328-328"];
m101_149 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="330-330"];
m101_150 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="332-332"];
m101_151 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="334-335"];
m101_152 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="table7.AddRow(new string[] {\r\n                        ''first''})", span="336-337"];
m101_153 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="table7.AddRow(new string[] {\r\n                        ''second''})", span="338-339"];
m101_154 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="table7.AddRow(new string[] {\r\n                        ''third''})", span="340-341"];
m101_155 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.Then(''the following exceptions filter were executed:'', ((string)(null)), table7, ''Then '')", span="343-343"];
m101_156 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="testRunner.And(''no exception were thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="345-345"];
m101_157 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="this.ScenarioCleanup()", span="347-347"];
m101_158 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", span="316-316"];
m101_8 [cluster="Unk.OnFeatureStart", file="ScheduledState.cs", label="Entry Unk.OnFeatureStart", span=""];
m101_48 [cluster="Unk.When", file="ScheduledState.cs", label="Entry Unk.When", span=""];
m101_37 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="this.FeatureBackground()", span="89-89"];
m101_38 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="testRunner.Given(''the client filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="91-91"];
m101_39 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="93-93"];
m101_40 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="95-96"];
m101_41 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="table1.AddRow(new string[] {\r\n                        ''test::OnCreating''})", span="97-98"];
m101_42 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="table1.AddRow(new string[] {\r\n                        ''test::OnCreated''})", span="99-100"];
m101_43 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="testRunner.Then(''the client filter methods were executed in the following order:'', ((string)(null)), table1, ''Then '')", span="102-102"];
m101_44 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="testRunner.And(''the storage contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m101_45 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="this.ScenarioCleanup()", span="106-106"];
m101_46 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", span="83-83"];
m101_9 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", file="ScheduledState.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0"];
m101_11 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="ScheduledState.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="58-58"];
m101_12 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="51-51"];
m101_50 [cluster="Unk.AddRow", file="ScheduledState.cs", label="Entry Unk.AddRow", span=""];
m101_31 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="ScheduledState.cs", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m101_16 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", color=red, community=0, file="ScheduledState.cs", label="0: HangFire.Tests.ClientFiltersFeature.FeatureSetup(null)", span="51-51"];
m101_14 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="46-46"];
m101_17 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="46-46"];
m101_18 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="56-56"];
m101_47 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ScheduledState.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m101_51 [cluster="Unk.Then", file="ScheduledState.cs", label="Entry Unk.Then", span=""];
m101_0 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m101_1 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ScheduledState.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m101_2 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", file="ScheduledState.cs", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
m101_3 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", file="ScheduledState.cs", label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
m101_49 [cluster="TechTalk.SpecFlow.Table.cstr", file="ScheduledState.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m101_19 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", file="ScheduledState.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m101_20 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="56-56"];
m101_127 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", span="282-282"];
m101_128 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple exception filters are executed depending on their order'', ((string[])(null)))", span="284-284"];
m101_129 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="this.ScenarioSetup(scenarioInfo)", span="286-286"];
m101_130 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="this.FeatureBackground()", span="288-288"];
m101_131 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="290-290"];
m101_132 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="292-292"];
m101_133 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="294-294"];
m101_134 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="296-296"];
m101_135 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="298-299"];
m101_136 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="table6.AddRow(new string[] {\r\n                        ''first''})", span="300-301"];
m101_137 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="table6.AddRow(new string[] {\r\n                        ''second''})", span="302-303"];
m101_138 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.Then(''the client exception filters were executed in the following order:'', ((string)(null)), table6, ''Then '')", span="305-305"];
m101_139 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="testRunner.And(''the CreateJobFailedException was thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="307-307"];
m101_140 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="this.ScenarioCleanup()", span="309-309"];
m101_141 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", span="282-282"];
m101_68 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", span="147-147"];
m101_69 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter can cancel the creation of the job'', ((string[])(null)))", span="149-149"];
m101_70 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="this.ScenarioSetup(scenarioInfo)", span="151-151"];
m101_71 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="this.FeatureBackground()", span="153-153"];
m101_72 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="155-155"];
m101_73 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="157-157"];
m101_74 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="159-159"];
m101_75 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="161-161"];
m101_76 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="testRunner.Then(''the storage does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="163-163"];
m101_77 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="165-166"];
m101_78 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="table3.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="167-168"];
m101_79 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="table3.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="169-170"];
m101_80 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="table3.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="171-172"];
m101_81 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="testRunner.And(''only the following client filter methods were executed:'', ((string)(null)), table3, ''And '')", span="174-174"];
m101_82 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="this.ScenarioCleanup()", span="176-176"];
m101_83 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", span="147-147"];
m101_116 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="256-256"];
m101_117 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters are executed when there was an exception while creating '' +\r\n                    ''a job'', ((string[])(null)))", span="258-259"];
m101_118 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="this.ScenarioSetup(scenarioInfo)", span="261-261"];
m101_119 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="this.FeatureBackground()", span="263-263"];
m101_120 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="265-265"];
m101_121 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="267-267"];
m101_122 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="269-269"];
m101_123 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="testRunner.Then(''the client exception filter was executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="271-271"];
m101_124 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="testRunner.And(''the CreateJobFailedException was thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="273-273"];
m101_125 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="this.ScenarioCleanup()", span="275-275"];
m101_126 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ScheduledState.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="256-256"];
m101_159 [file="ScheduledState.cs", label="HangFire.Tests.ClientFiltersFeature", span=""];
m102_11 [cluster="System.DateTime.DateTime(int, int, int)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m102_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m102_20 [cluster="System.DateTime.AddMinutes(double)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m102_6 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m102_7 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="var date = new DateTime(2012, 12, 12)", span="20-20"];
m102_8 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(date)", span="21-21"];
m102_9 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Assert.Equal(date, state.EnqueueAt)", span="22-22"];
m102_10 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m102_0 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11"];
m102_1 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="13-13"];
m102_2 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Assert.Equal(ScheduledState.StateName, state.Name)", span="14-14"];
m102_3 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11"];
m102_21 [cluster="Unk.True", file="ScheduledStateFacts.cs", label="Entry Unk.True", span=""];
m102_34 [cluster="Unk.False", file="ScheduledStateFacts.cs", label="Entry Unk.False", span=""];
m102_17 [cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m102_35 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m102_36 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="55-55"];
m102_37 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Assert.False(state.IgnoreJobLoadException)", span="56-56"];
m102_38 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m102_5 [cluster="Unk.Equal", file="ScheduledStateFacts.cs", label="Entry Unk.Equal", span=""];
m102_28 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m102_30 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m102_31 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="47-47"];
m102_32 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Assert.False(state.IsFinal)", span="49-49"];
m102_33 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m102_18 [cluster="System.TimeSpan.FromDays(double)", file="ScheduledStateFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m102_22 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m102_23 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36"];
m102_24 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var data = state.SerializeData()", span="38-38"];
m102_25 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=red, community=0, file="ScheduledStateFacts.cs", label="0: Assert.Equal(JobHelper.ToStringTimestamp(state.EnqueueAt), data[''EnqueueAt''])", span="40-40"];
m102_26 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=red, community=0, file="ScheduledStateFacts.cs", label="0: Assert.Equal(JobHelper.ToStringTimestamp(state.ScheduledAt), data[''ScheduledAt''])", span="41-41"];
m102_27 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m102_12 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26"];
m102_13 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(TimeSpan.FromDays(1))", span="28-28"];
m102_14 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="Assert.True(DateTime.UtcNow.AddDays(1).AddMinutes(-1) < state.EnqueueAt)", span="29-29"];
m102_15 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="Assert.True(state.EnqueueAt < DateTime.UtcNow.AddDays(1).AddMinutes(1))", span="30-30"];
m102_16 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26"];
m102_29 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m102_19 [cluster="System.DateTime.AddDays(double)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m103_74 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80"];
m103_75 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="82-83"];
m103_76 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="84-84"];
m103_77 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_token)", span="86-86"];
m103_78 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="_stateMachine.Verify(\r\n                x => x.TryToChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>()),\r\n                Times.Never)", span="88-90"];
m103_79 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80"];
m103_14 [cluster="Mock<IStateMachineFactory>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m103_56 [cluster="HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs", label="Entry HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47"];
m103_0 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m103_1 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_storage = new Mock<JobStorage>()", span="21-21"];
m103_37 [cluster="Unk.Equal", file="SchedulePollerFacts.cs", label="Entry Unk.Equal", span=""];
m103_65 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67"];
m103_66 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="69-69"];
m103_67 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_token)", span="71-71"];
m103_68 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName }))", span="73-76"];
m103_69 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67"];
m103_20 [cluster="Unk.>", file="SchedulePollerFacts.cs", label="Entry Unk.>", span=""];
m103_41 [cluster="SchedulePoller.cstr", file="SchedulePollerFacts.cs", label="Entry SchedulePoller.cstr", span=""];
m103_29 [cluster="Unk.GetFirstByLowestScoreFromSet", file="SchedulePollerFacts.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m103_25 [cluster="Unk.GetConnection", file="SchedulePollerFacts.cs", label="Entry Unk.GetConnection", span=""];
m103_49 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56"];
m103_50 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="58-58"];
m103_51 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_token)", span="60-60"];
m103_52 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="_storage.Verify(x => x.GetConnection())", span="62-62"];
m103_53 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="_connection.Verify(x => x.Dispose())", span="63-63"];
m103_54 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56"];
m103_33 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36"];
m103_34 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan))", span="38-40"];
m103_35 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m103_36 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36"];
m103_2 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="22-22"];
m103_3 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="23-23"];
m103_15 [cluster="Unk.Setup", file="SchedulePollerFacts.cs", label="Entry Unk.Setup", span=""];
m103_64 [cluster="Unk.Dispose", file="SchedulePollerFacts.cs", label="Entry Unk.Dispose", span=""];
m103_73 [cluster="Unk.TryToChangeState", file="SchedulePollerFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m103_4 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=green, community=0, file="SchedulePollerFacts.cs", label="0: _token = new CancellationToken(true)", span="24-24"];
m103_5 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26"];
m103_6 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28"];
m103_7 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="30-30"];
m103_8 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="31-32"];
m103_9 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m103_83 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="83-83"];
m103_39 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan)", span="39-40"];
m103_47 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan)", span="49-50"];
m103_17 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="27-27"];
m103_22 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="30-30"];
m103_26 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="31-32"];
m103_38 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="39-40"];
m103_40 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="39-40"];
m103_46 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="49-50"];
m103_48 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="49-50"];
m103_58 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="62-62"];
m103_61 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="63-63"];
m103_70 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="73-76"];
m103_80 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="82-83"];
m103_86 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="89-89"];
m103_19 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="27-27"];
m103_18 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27"];
m103_24 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="30-30"];
m103_23 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetConnection()", span="30-30"];
m103_28 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="31-32"];
m103_27 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="31-32"];
m103_71 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName })", span="73-76"];
m103_81 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="82-83"];
m103_87 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.TryToChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>())", span="89-89"];
m103_60 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="62-62"];
m103_59 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetConnection()", span="62-62"];
m103_63 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="63-63"];
m103_62 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Dispose()", span="63-63"];
m103_72 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="73-76"];
m103_82 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="82-83"];
m103_88 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="89-89"];
m103_30 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="32-32"];
m103_32 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="32-32"];
m103_31 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="32-32"];
m103_84 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="83-83"];
m103_85 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="83-83"];
m103_13 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="SchedulePollerFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m103_57 [cluster="Unk.Verify", file="SchedulePollerFacts.cs", label="Entry Unk.Verify", span=""];
m103_55 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93"];
m103_89 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan);", span="95-95"];
m103_90 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93"];
m103_12 [cluster="Mock<IStateMachine>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m103_21 [cluster="Unk.Create", file="SchedulePollerFacts.cs", label="Entry Unk.Create", span=""];
m103_16 [cluster="Unk.Returns", file="SchedulePollerFacts.cs", label="Entry Unk.Returns", span=""];
m103_11 [cluster="Mock<IStorageConnection>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m103_10 [cluster="Mock<JobStorage>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m103_42 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m103_43 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan))", span="48-50"];
m103_44 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="52-52"];
m103_45 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m103_91 [file="SchedulePollerFacts.cs", label="HangFire.Core.Tests.Server.SchedulePollerFacts", span=""];
m105_61 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129"];
m105_123 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="return new ServerBootstrapper(ServerId, _context, _storage.Object, _supervisorFactory);", span="131-131"];
m105_124 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129"];
m105_34 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m105_35 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory))", span="44-45"];
m105_36 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="47-47"];
m105_37 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m105_82 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90"];
m105_83 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="92-92"];
m105_84 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: server.Execute(_token)", span="93-93"];
m105_85 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", label="_supervisor.Verify(x => x.Start())", span="95-95"];
m105_86 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90"];
m105_29 [cluster="Unk.Equal", file="ServerBootstrapperFacts.cs", label="Entry Unk.Equal", span=""];
m105_48 [cluster="HangFire.Server.ServerBootstrapper.ServerBootstrapper(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerSupervisor>)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Server.ServerBootstrapper.ServerBootstrapper(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerSupervisor>)", span="31-31"];
m105_11 [cluster="Mock<IServerSupervisor>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<IServerSupervisor>.cstr", span=""];
m105_41 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51"];
m105_42 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, null, _supervisorFactory))", span="53-54"];
m105_43 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="56-56"];
m105_44 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51"];
m105_99 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109"];
m105_100 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="111-111"];
m105_101 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: server.Execute(_token)", span="113-113"];
m105_102 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.RemoveServer(ServerId))", span="115-115"];
m105_103 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109"];
m105_28 [cluster="Unk.>", file="ServerBootstrapperFacts.cs", label="Entry Unk.>", span=""];
m105_12 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ServerBootstrapperFacts.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m105_108 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119"];
m105_109 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="_supervisor.Setup(x => x.Dispose()).Throws<InvalidOperationException>()", span="121-121"];
m105_110 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="122-122"];
m105_111 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: Assert.Throws<InvalidOperationException>(() => server.Execute(_token))", span="124-124"];
m105_112 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.RemoveServer(It.IsAny<string>()))", span="126-126"];
m105_113 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119"];
m105_23 [cluster="Unk.GetConnection", file="ServerBootstrapperFacts.cs", label="Entry Unk.GetConnection", span=""];
m105_24 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33"];
m105_25 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory))", span="35-36"];
m105_26 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="38-38"];
m105_27 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33"];
m105_62 [cluster="HangFire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", span="48-48"];
m105_68 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79"];
m105_69 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="81-81"];
m105_70 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: server.Execute(_token)", span="83-83"];
m105_71 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="85-85"];
m105_72 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="86-86"];
m105_73 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79"];
m105_49 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60"];
m105_50 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="62-63"];
m105_51 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''supervisorFactory'', exception.ParamName)", span="65-65"];
m105_52 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60"];
m105_15 [cluster="Unk.Setup", file="ServerBootstrapperFacts.cs", label="Entry Unk.Setup", span=""];
m105_81 [cluster="Unk.Dispose", file="ServerBootstrapperFacts.cs", label="Entry Unk.Dispose", span=""];
m105_9 [cluster="HangFire.Server.ServerContext.ServerContext()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18"];
m105_33 [cluster="ServerBootstrapper.cstr", file="ServerBootstrapperFacts.cs", label="Entry ServerBootstrapper.cstr", span=""];
m105_120 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="126-126"];
m105_20 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="29-29"];
m105_17 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="25-25"];
m105_18 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="_supervisor.Object", span="25-25"];
m105_19 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="25-25"];
m105_21 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.GetConnection()", span="29-29"];
m105_22 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="29-29"];
m105_30 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="36-36"];
m105_31 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory)", span="36-36"];
m105_32 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="36-36"];
m105_38 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="45-45"];
m105_39 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory)", span="45-45"];
m105_40 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="45-45"];
m105_45 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="54-54"];
m105_46 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(ServerId, _context, null, _supervisorFactory)", span="54-54"];
m105_47 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="54-54"];
m105_53 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="63-63"];
m105_54 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="63-63"];
m105_55 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="63-63"];
m105_64 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="75-75"];
m105_65 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.AnnounceServer(ServerId, _context)", span="75-75"];
m105_66 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="75-75"];
m105_75 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="85-85"];
m105_78 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="86-86"];
m105_76 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.GetConnection()", span="85-85"];
m105_77 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="85-85"];
m105_79 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Dispose()", span="86-86"];
m105_80 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="86-86"];
m105_87 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="95-95"];
m105_88 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Start()", span="95-95"];
m105_89 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="95-95"];
m105_96 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="105-105"];
m105_97 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Dispose()", span="105-105"];
m105_98 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="105-105"];
m105_104 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="115-115"];
m105_105 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.RemoveServer(ServerId)", span="115-115"];
m105_106 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="115-115"];
m105_114 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="121-121"];
m105_118 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: server.Execute(_token)", span="124-124"];
m105_117 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="124-124"];
m105_115 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Dispose()", span="121-121"];
m105_116 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="121-121"];
m105_119 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="124-124"];
m105_121 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.RemoveServer(It.IsAny<string>())", span="126-126"];
m105_122 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="126-126"];
m105_0 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m105_1 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_context = new ServerContext()", span="22-22"];
m105_2 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_storage = new Mock<JobStorage>()", span="23-23"];
m105_3 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_supervisor = new Mock<IServerSupervisor>()", span="24-24"];
m105_4 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_supervisorFactory = new Lazy<IServerSupervisor>(() => _supervisor.Object)", span="25-25"];
m105_5 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="26-26"];
m105_6 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: _token = new CancellationToken(true)", span="27-27"];
m105_7 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="29-29"];
m105_8 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m105_67 [cluster="Unk.AnnounceServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.AnnounceServer", span=""];
m105_74 [cluster="Unk.Exactly", file="ServerBootstrapperFacts.cs", label="Entry Unk.Exactly", span=""];
m105_14 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ServerBootstrapperFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m105_90 [cluster="Unk.Start", file="ServerBootstrapperFacts.cs", label="Entry Unk.Start", span=""];
m105_63 [cluster="Unk.Verify", file="ServerBootstrapperFacts.cs", label="Entry Unk.Verify", span=""];
m105_107 [cluster="Unk.RemoveServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.RemoveServer", span=""];
m105_16 [cluster="Unk.Returns", file="ServerBootstrapperFacts.cs", label="Entry Unk.Returns", span=""];
m105_56 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69"];
m105_57 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="71-71"];
m105_58 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: server.Execute(_token)", span="73-73"];
m105_59 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="75-75"];
m105_60 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69"];
m105_91 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99"];
m105_92 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="101-101"];
m105_93 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: server.Execute(_token)", span="103-103"];
m105_94 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="_supervisor.Verify(x => x.Dispose())", span="105-105"];
m105_95 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99"];
m105_13 [cluster="Mock<IStorageConnection>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m105_10 [cluster="Mock<JobStorage>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m105_125 [file="ServerBootstrapperFacts.cs", label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", span=""];
m105_126 [file="ServerBootstrapperFacts.cs", label=server, span=""];
m106_51 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", color=red, community=0, file="ServerHeartbeatFacts.cs", label="2: server.Execute(_token)", span="59-59"];
m106_52 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="ServerHeartbeatFacts.cs", label="_connection.Verify(x => x.Heartbeat(ServerId))", span="61-61"];
m106_53 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="ServerHeartbeatFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="55-55"];
m106_54 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="61-61"];
m106_55 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="x.Heartbeat(ServerId)", span="61-61"];
m106_56 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="61-61"];
m106_16 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerHeartbeatFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(null, ServerId))", span="28-29"];
m106_39 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="64-64"];
m106_20 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="28-28"];
m106_7 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="ServerHeartbeatFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="28-29"];
m106_33 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="time > 0", span="33-33"];
m106_34 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="33-33"];
m106_35 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="ServerHeartbeatFacts.cs", label="0: Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m106_36 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerHeartbeatFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan))", span="39-41"];
m106_37 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerHeartbeatFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="43-43"];
m106_38 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerHeartbeatFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m106_15 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="26-26"];
m106_22 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="new ServerHeartbeat(null, ServerId)", span="29-29"];
m106_19 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="28-28"];
m106_76 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="82-82"];
m106_77 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="ServerHeartbeatFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="84-85"];
m106_78 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="ServerHeartbeatFacts.cs", label="var scheduler = CreateScheduler()", span="86-86"];
m106_79 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="ServerHeartbeatFacts.cs", label="scheduler.Execute(_cts.Token)", span="88-88"];
m106_80 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="ServerHeartbeatFacts.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="90-92"];
m106_81 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="ServerHeartbeatFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="82-82"];
m106_44 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="50-50"];
m106_45 [cluster="lambda expression", color=green, community=0, file="ServerHeartbeatFacts.cs", label="0: Entry lambda expression", span="51-51"];
m106_46 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="x.Dispose()", span="51-51"];
m106_47 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="51-51"];
m106_43 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="x.GetConnection()", span="50-50"];
m106_31 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="38-38"];
m106_14 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerHeartbeatFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m106_67 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68"];
m106_68 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="ServerHeartbeatFacts.cs", label="var scheduler = CreateScheduler()", span="70-70"];
m106_69 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="ServerHeartbeatFacts.cs", label="scheduler.Execute(_cts.Token)", span="72-72"];
m106_70 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="ServerHeartbeatFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName },\r\n                It.IsAny<CancellationToken>()))", span="74-78"];
m106_71 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="ServerHeartbeatFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68"];
m106_58 [cluster="Unk.Execute", file="ServerHeartbeatFacts.cs", label="Entry Unk.Execute", span=""];
m106_59 [cluster="Unk.Verify", file="ServerHeartbeatFacts.cs", label="Entry Unk.Verify", span=""];
m106_75 [cluster="Unk.ChangeState", file="ServerHeartbeatFacts.cs", label="Entry Unk.ChangeState", span=""];
m106_25 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="35-35"];
m106_26 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerHeartbeatFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(_storage.Object, null))", span="37-38"];
m106_27 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerHeartbeatFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="40-40"];
m106_28 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="32-33"];
m106_24 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m106_17 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerHeartbeatFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="31-31"];
m106_18 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerHeartbeatFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="26-26"];
m106_40 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="40-41"];
m106_57 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="ServerHeartbeatFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="95-95"];
m106_9 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="ServerHeartbeatFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="32-33"];
m106_48 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="50-51"];
m106_0 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16"];
m106_1 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", color=green, community=0, file="ServerHeartbeatFacts.cs", label="0: _storage = new Mock<JobStorage>()", span="18-18"];
m106_2 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ServerHeartbeatFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="19-19"];
m106_3 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", color=red, community=0, file="ServerHeartbeatFacts.cs", label="0: _token = new CancellationToken(true)", span="20-20"];
m106_4 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ServerHeartbeatFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="22-22"];
m106_5 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ServerHeartbeatFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16"];
m106_6 [cluster="Mock<JobStorage>.cstr", file="ServerHeartbeatFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m106_8 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ServerHeartbeatFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m106_10 [cluster="Unk.Returns", file="ServerHeartbeatFacts.cs", label="Entry Unk.Returns", span=""];
m106_85 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="85-85"];
m106_11 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="22-22"];
m106_12 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="x.GetConnection()", span="22-22"];
m106_13 [cluster="Mock<IStateMachine>.cstr", file="ServerHeartbeatFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m106_21 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="28-28"];
m106_23 [cluster="Unk.Create", file="ServerHeartbeatFacts.cs", label="Entry Unk.Create", span=""];
m106_29 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="32-33"];
m106_30 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="32-33"];
m106_42 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="40-41"];
m106_41 [cluster="Unk.Verify", file="ServerHeartbeatFacts.cs", label="Entry Unk.Verify", span=""];
m106_49 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="55-55"];
m106_73 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName },\r\n                It.IsAny<CancellationToken>())", span="74-78"];
m106_83 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="84-85"];
m106_89 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="91-91"];
m106_50 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="ServerHeartbeatFacts.cs", label="var server = CreateHeartbeat()", span="57-57"];
m106_60 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", span=""];
m106_63 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="64-64"];
m106_72 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="74-78"];
m106_82 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="84-85"];
m106_88 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="91-91"];
m106_32 [cluster="ServerHeartbeat.cstr", file="ServerHeartbeatFacts.cs", label="Entry ServerHeartbeat.cstr", span=""];
m106_74 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="74-78"];
m106_84 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="84-85"];
m106_90 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="91-91"];
m106_86 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="time > 0", span="85-85"];
m106_87 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="85-85"];
m106_91 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="ServerHeartbeatFacts.cs", label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan);", span="97-97"];
m106_92 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="ServerHeartbeatFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="95-95"];
m106_93 [file="ServerHeartbeatFacts.cs", label="Hangfire.Core.Tests.Server.SchedulePollerFacts", span=""];
m109_15 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="TestMethod()", span="20-20"];
m109_16 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="20-20"];
m109_17 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m109_9 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m109_18 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m109_12 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="ServerWatchdogFacts.cs", label="Exit HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m109_72 [cluster="Unk.OnClientException", file="ServerWatchdogFacts.cs", label="Entry Unk.OnClientException", span=""];
m109_11 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", color=red, community=0, file="ServerWatchdogFacts.cs", label="0: Connection.Jobs.SetParameter(JobId, name, JobHelper.ToJson(value))", span="59-59"];
m109_19 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="32-32"];
m109_0 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m109_6 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", color=green, community=0, file="ServerWatchdogFacts.cs", label="0: CurrentState = currentState", span="36-36"];
m109_1 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="ServerWatchdogFacts.cs", label="candidateState == null", span="32-32"];
m109_2 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="ServerWatchdogFacts.cs", label="throw new ArgumentNullException(''candidateState'');", span="32-32"];
m109_3 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="ServerWatchdogFacts.cs", label="connection == null", span="33-33"];
m109_4 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="ServerWatchdogFacts.cs", label="throw new ArgumentNullException(''connection'');", span="33-33"];
m109_5 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", color=green, community=0, file="ServerWatchdogFacts.cs", label="4: CandidateState = candidateState", span="35-35"];
m109_7 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="ServerWatchdogFacts.cs", label="Connection = connection", span="37-37"];
m109_25 [cluster="Unk.Equal", file="ServerWatchdogFacts.cs", label="Entry Unk.Equal", span=""];
m109_14 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="20-20"];
m109_13 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m109_97 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m109_98 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ServerWatchdogFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104"];
m109_101 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ServerWatchdogFacts.cs", label="_filters.Add(filter.Object)", span="109-109"];
m109_102 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="111-111"];
m109_103 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ServerWatchdogFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114"];
m109_99 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ServerWatchdogFacts.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="105-105"];
m109_100 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ServerWatchdogFacts.cs", label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107"];
m109_104 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m109_106 [cluster="Unk.DoesNotThrow", file="ServerWatchdogFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m109_8 [cluster="Mock<IStorageConnection>.cstr", file="ServerWatchdogFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m109_41 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51"];
m109_42 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="ServerWatchdogFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53"];
m109_43 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="54-54"];
m109_44 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="ServerWatchdogFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57"];
m109_45 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51"];
m109_251 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m109_254 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="_filters.Add(outerFilter.Object)", span="250-250"];
m109_255 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="_filters.Add(innerFilter.Object)", span="251-251"];
m109_257 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254"];
m109_258 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="256-256"];
m109_259 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260"];
m109_252 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="247-247"];
m109_253 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="248-248"];
m109_256 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="var exception = new InvalidOperationException()", span="253-253"];
m109_260 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262"];
m109_261 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m109_35 [cluster="Unk.Run", file="ServerWatchdogFacts.cs", label="Entry Unk.Run", span=""];
m109_237 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ServerWatchdogFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m109_53 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m109_55 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="ServerWatchdogFacts.cs", label="_filters.Add(filter.Object)", span="64-64"];
m109_56 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="ServerWatchdogFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66"];
m109_57 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="67-67"];
m109_58 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="ServerWatchdogFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70"];
m109_54 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="ServerWatchdogFacts.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="63-63"];
m109_59 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="ServerWatchdogFacts.cs", label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73"];
m109_60 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m109_24 [cluster="Unk.>", file="ServerWatchdogFacts.cs", label="Entry Unk.>", span=""];
m109_61 [cluster="Mock<IClientExceptionFilter>.cstr", file="ServerWatchdogFacts.cs", label="Entry Mock<IClientExceptionFilter>.cstr", span=""];
m109_29 [cluster="HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", span="45-45"];
m109_119 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m109_121 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="_filters.Add(filter.Object)", span="122-122"];
m109_123 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125"];
m109_125 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="128-128"];
m109_126 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="131-131"];
m109_120 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="var filter = new Mock<IClientFilter>()", span="121-121"];
m109_122 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124"];
m109_124 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126"];
m109_127 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m109_20 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ServerWatchdogFacts.cs", label="HangFire.Common.States.StateChangingContext", span=""];
m109_21 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ServerWatchdogFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="37-37"];
m109_22 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m109_164 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m109_166 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="ServerWatchdogFacts.cs", label="_filters.Add(filter.Object)", span="164-164"];
m109_168 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="169-169"];
m109_169 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="172-172"];
m109_170 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="ServerWatchdogFacts.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175"];
m109_165 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="ServerWatchdogFacts.cs", label="var filter = new Mock<IClientFilter>()", span="163-163"];
m109_167 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="ServerWatchdogFacts.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167"];
m109_171 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="ServerWatchdogFacts.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176"];
m109_172 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m109_23 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m109_328 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="ServerWatchdogFacts.cs", label="return new JobCreationProcess(_filters);", span="314-314"];
m109_329 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m109_139 [cluster="Unk.OnCreated", file="ServerWatchdogFacts.cs", label="Entry Unk.OnCreated", span=""];
m109_228 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m109_230 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="_filters.Add(filter.Object)", span="227-227"];
m109_232 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230"];
m109_233 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="232-232"];
m109_234 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236"];
m109_229 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="var filter = new Mock<IClientFilter>()", span="226-226"];
m109_231 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="var exception = new InvalidOperationException()", span="229-229"];
m109_235 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240"];
m109_236 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m109_62 [cluster="Unk.Add", file="ServerWatchdogFacts.cs", label="Entry Unk.Add", span=""];
m109_84 [cluster="Unk.InSequence", file="ServerWatchdogFacts.cs", label="Entry Unk.InSequence", span=""];
m109_10 [cluster="Mock<State>.cstr", file="ServerWatchdogFacts.cs", label="Entry Mock<State>.cstr", span=""];
m109_330 [cluster="HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m109_185 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m109_188 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="_filters.Add(outerFilter.Object)", span="186-186"];
m109_189 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="_filters.Add(innerFilter.Object)", span="187-187"];
m109_191 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="192-192"];
m109_192 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="195-195"];
m109_186 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="183-183"];
m109_187 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="184-184"];
m109_190 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190"];
m109_193 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198"];
m109_194 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m109_46 [cluster="Unk.Setup", file="ServerWatchdogFacts.cs", label="Entry Unk.Setup", span=""];
m109_238 [cluster="Unk.Throws", file="ServerWatchdogFacts.cs", label="Entry Unk.Throws", span=""];
m109_73 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m109_78 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="_filters.Add(filter1.Object)", span="86-86"];
m109_79 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="_filters.Add(filter2.Object)", span="87-87"];
m109_80 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89"];
m109_81 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="91-91"];
m109_82 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95"];
m109_74 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80"];
m109_77 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84"];
m109_75 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81"];
m109_76 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83"];
m109_83 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m109_30 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41"];
m109_31 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="43-43"];
m109_32 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="45-45"];
m109_33 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="ServerWatchdogFacts.cs", label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47"];
m109_34 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41"];
m109_324 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="305-305"];
m109_51 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="57-57"];
m109_67 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="70-70"];
m109_95 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="95-95"];
m109_117 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="114-114"];
m109_220 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="215-215"];
m109_243 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="236-236"];
m109_266 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="260-260"];
m109_296 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="281-281"];
m109_319 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="302-302"];
m109_27 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="process.Run(null)", span="35-35"];
m109_37 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="47-47"];
m109_47 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="53-53"];
m109_50 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="57-57"];
m109_52 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="57-57"];
m109_63 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="66-66"];
m109_66 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="70-70"];
m109_68 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="70-70"];
m109_91 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="89-89"];
m109_94 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="95-95"];
m109_96 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="95-95"];
m109_107 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="104-104"];
m109_116 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="114-114"];
m109_118 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="114-114"];
m109_133 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="125-125"];
m109_179 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="175-175"];
m109_219 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="215-215"];
m109_221 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="215-215"];
m109_222 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="218-218"];
m109_239 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="230-230"];
m109_242 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="236-236"];
m109_244 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="236-236"];
m109_262 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="254-254"];
m109_265 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="260-260"];
m109_267 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="260-260"];
m109_283 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="273-273"];
m109_295 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="281-281"];
m109_297 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="281-281"];
m109_309 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="294-294"];
m109_318 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="302-302"];
m109_320 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="302-302"];
m109_26 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="35-35"];
m109_28 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="35-35"];
m109_39 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="47-47"];
m109_38 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="47-47"];
m109_70 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73"];
m109_86 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83"];
m109_89 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84"];
m109_111 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106"];
m109_130 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124"];
m109_137 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126"];
m109_153 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146"];
m109_156 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147"];
m109_159 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148"];
m109_162 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149"];
m109_174 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166"];
m109_183 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176"];
m109_196 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189"];
m109_202 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198"];
m109_217 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208"];
m109_226 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219"];
m109_246 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240"];
m109_269 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262"];
m109_287 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275"];
m109_313 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296"];
m109_322 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305"];
m109_49 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="53-53"];
m109_48 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="53-53"];
m109_65 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="66-66"];
m109_64 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="66-66"];
m109_69 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="72-73"];
m109_88 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="84-84"];
m109_93 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="89-89"];
m109_92 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="89-89"];
m109_109 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="104-104"];
m109_108 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="104-104"];
m109_110 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="106-106"];
m109_113 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="107-107"];
m109_129 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="124-124"];
m109_136 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="126-126"];
m109_135 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="125-125"];
m109_134 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="125-125"];
m109_152 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="146-146"];
m109_161 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="149-149"];
m109_173 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="166-166"];
m109_176 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="167-167"];
m109_182 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="176-176"];
m109_181 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="175-175"];
m109_180 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="175-175"];
m109_195 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="189-189"];
m109_198 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="190-190"];
m109_201 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="198-198"];
m109_216 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="208-208"];
m109_225 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="219-219"];
m109_224 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="218-218"];
m109_223 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="218-218"];
m109_249 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="context.Exception == exception", span="240-240"];
m109_241 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="230-230"];
m109_240 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="230-230"];
m109_245 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="239-240"];
m109_272 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="context.Exception == exception", span="262-262"];
m109_264 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="254-254"];
m109_263 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="254-254"];
m109_268 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="262-262"];
m109_290 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="context.Exception == exception", span="275-275"];
m109_286 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="275-275"];
m109_292 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="276-276"];
m109_285 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="273-273"];
m109_284 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="273-273"];
m109_312 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="296-296"];
m109_315 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="297-297"];
m109_311 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="294-294"];
m109_310 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.CreateJob()", span="294-294"];
m109_321 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="305-305"];
m109_85 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="83-83"];
m109_155 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="147-147"];
m109_158 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="148-148"];
m109_71 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="72-73"];
m109_87 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="83-83"];
m109_90 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="84-84"];
m109_112 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="106-106"];
m109_131 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="124-124"];
m109_138 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="126-126"];
m109_154 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="146-146"];
m109_157 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="147-147"];
m109_160 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="148-148"];
m109_163 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="149-149"];
m109_175 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="166-166"];
m109_184 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="176-176"];
m109_197 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="189-189"];
m109_203 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="198-198"];
m109_204 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="198-198"];
m109_218 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="208-208"];
m109_227 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="219-219"];
m109_247 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="239-240"];
m109_248 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="240-240"];
m109_270 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="262-262"];
m109_271 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="262-262"];
m109_288 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="275-275"];
m109_289 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="275-275"];
m109_314 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="296-296"];
m109_323 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="305-305"];
m109_115 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="107-107"];
m109_114 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.ExceptionHandled = true", span="107-107"];
m109_178 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="167-167"];
m109_177 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.Canceled = true", span="167-167"];
m109_200 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="190-190"];
m109_199 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="context.Canceled = true", span="190-190"];
m109_250 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="240-240"];
m109_273 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="262-262"];
m109_291 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="275-275"];
m109_294 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="276-276"];
m109_293 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.ExceptionHandled = true", span="276-276"];
m109_317 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="297-297"];
m109_316 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.ExceptionHandled = true", span="297-297"];
m109_206 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="198-198"];
m109_205 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="context.Canceled", span="198-198"];
m109_325 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="context.Exception != null", span="305-305"];
m109_326 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="305-305"];
m109_36 [cluster="Unk.Verify", file="ServerWatchdogFacts.cs", label="Entry Unk.Verify", span=""];
m109_207 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m109_209 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="ServerWatchdogFacts.cs", label="_filters.Add(filter.Object)", span="206-206"];
m109_211 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="211-211"];
m109_212 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="ServerWatchdogFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215"];
m109_213 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="ServerWatchdogFacts.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218"];
m109_208 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="ServerWatchdogFacts.cs", label="var filter = new Mock<IClientFilter>()", span="205-205"];
m109_210 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="ServerWatchdogFacts.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209"];
m109_214 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="ServerWatchdogFacts.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219"];
m109_215 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m109_298 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m109_301 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="_filters.Add(outerFilter.Object)", span="291-291"];
m109_302 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="_filters.Add(innerFilter.Object)", span="292-292"];
m109_303 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294"];
m109_305 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="299-299"];
m109_306 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302"];
m109_299 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="288-288"];
m109_300 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="289-289"];
m109_304 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297"];
m109_307 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305"];
m109_308 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m109_132 [cluster="Unk.OnCreating", file="ServerWatchdogFacts.cs", label="Entry Unk.OnCreating", span=""];
m109_274 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m109_276 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ServerWatchdogFacts.cs", label="_filters.Add(filter.Object)", span="270-270"];
m109_278 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ServerWatchdogFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273"];
m109_280 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="278-278"];
m109_281 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ServerWatchdogFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281"];
m109_275 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ServerWatchdogFacts.cs", label="var filter = new Mock<IClientFilter>()", span="269-269"];
m109_277 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ServerWatchdogFacts.cs", label="var exception = new InvalidOperationException()", span="272-272"];
m109_279 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ServerWatchdogFacts.cs", label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276"];
m109_282 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m109_105 [cluster="Unk.Callback", file="ServerWatchdogFacts.cs", label="Entry Unk.Callback", span=""];
m109_327 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m109_128 [cluster="Mock<IClientFilter>.cstr", file="ServerWatchdogFacts.cs", label="Entry Mock<IClientFilter>.cstr", span=""];
m109_40 [cluster="Unk.CreateJob", file="ServerWatchdogFacts.cs", label="Entry Unk.CreateJob", span=""];
m109_140 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m109_143 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="_filters.Add(outerFilter.Object)", span="143-143"];
m109_144 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="_filters.Add(innerFilter.Object)", span="144-144"];
m109_149 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="var process = CreateProcess()", span="151-151"];
m109_150 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="process.Run(_context.Object)", span="154-154"];
m109_141 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="140-140"];
m109_142 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="141-141"];
m109_145 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146"];
m109_148 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149"];
m109_146 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147"];
m109_147 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148"];
m109_151 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m109_331 [file="ServerWatchdogFacts.cs", label="HangFire.Core.Tests.Client.JobCreationProcessFacts", span=""];
m109_333 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_334 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_335 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_336 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_337 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_338 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_340 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_343 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_344 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_332 [file="ServerWatchdogFacts.cs", label=process, span=""];
m109_339 [file="ServerWatchdogFacts.cs", label=exception, span=""];
m109_341 [file="ServerWatchdogFacts.cs", label=exception, span=""];
m109_342 [file="ServerWatchdogFacts.cs", label=exception, span=""];
m111_4 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="SingleResourceHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9"];
m111_5 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="SingleResourceHandler.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9"];
m111_6 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", file="SingleResourceHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", span="10-10"];
m111_2 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", color=green, community=0, file="SingleResourceHandler.cs", label="0: _resourceName = resourceName", span="28-28"];
m111_3 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="SingleResourceHandler.cs", label="Exit HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25"];
m111_0 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="SingleResourceHandler.cs", label="Entry HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25"];
m111_1 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="SingleResourceHandler.cs", label="_assembly = assembly", span="27-27"];
m111_7 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", file="SingleResourceHandler.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", span="10-10"];
m111_8 [file="SingleResourceHandler.cs", label="HangFire.Web.SingleResourceHandler", span=""];
m114_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerConnection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m114_5 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="_connection = connection", span="42-42"];
m114_117 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="231-231"];
m114_123 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", color=green, community=0, file="SqlServerConnection.cs", label="5: _connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="243-249"];
m114_122 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="236-241"];
m114_119 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="233-233"];
m114_121 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''context'');", span="234-234"];
m114_118 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="serverId == null", span="233-233"];
m114_120 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="context == null", span="234-234"];
m114_124 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="231-231"];
m114_102 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="209-209"];
m114_107 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="214-217"];
m114_104 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="211-211"];
m114_106 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''name'');", span="212-212"];
m114_105 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="name == null", span="212-212"];
m114_103 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="id == null", span="211-211"];
m114_108 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="209-209"];
m114_125 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m114_85 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetStateData(string)", span="171-171"];
m114_89 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="var sqlState = _connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="181-181"];
m114_92 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="return new StateData\r\n            {\r\n                Name = sqlState.Name,\r\n                Reason = sqlState.Reason,\r\n                Data = JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data)\r\n            };", span="187-192"];
m114_87 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''jobId'');", span="173-173"];
m114_88 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="175-179"];
m114_90 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="sqlState == null", span="182-182"];
m114_86 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="jobId == null", span="173-173"];
m114_91 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="return null;", span="184-184"];
m114_93 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetStateData(string)", span="171-171"];
m114_21 [cluster="string.Format(string, object)", file="SqlServerConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m114_17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="56-56"];
m114_18 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:{0}'', resource),\r\n                timeout,\r\n                _connection);", span="58-61"];
m114_19 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="56-56"];
m114_143 [cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m114_62 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m114_66 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="134-134"];
m114_69 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", color=green, community=0, file="SqlServerConnection.cs", label="1: string sql = \r\n                @''select InvocationData, StateName, Arguments, CreatedAt from HangFire.Job where id = @id''", span="138-139"];
m114_67 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="id == null", span="136-136"];
m114_70 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="141-142"];
m114_68 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="136-136"];
m114_71 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="jobData == null", span="144-144"];
m114_73 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="147-147"];
m114_74 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="invocationData.Arguments = jobData.Arguments", span="148-148"];
m114_80 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                CreatedAt = jobData.CreatedAt,\r\n                LoadException = loadException\r\n            };", span="162-168"];
m114_75 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Job job = null", span="150-150"];
m114_76 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="JobLoadException loadException = null", span="151-151"];
m114_72 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="return null;", span="144-144"];
m114_77 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="job = invocationData.Deserialize()", span="155-155"];
m114_79 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="loadException = ex", span="159-159"];
m114_78 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label=JobLoadException, span="157-157"];
m114_81 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="134-134"];
m114_116 [cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m114_13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="51-51"];
m114_14 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="return new SqlServerWriteOnlyTransaction(_connection, _queueProviders);", span="53-53"];
m114_15 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="51-51"];
m114_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m114_35 [cluster="string.Join(string, params string[])", file="SqlServerConnection.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m114_33 [cluster="Unk.ToArray", file="SqlServerConnection.cs", label="Entry Unk.ToArray", span=""];
m114_64 [cluster="Unk.ToString", file="SqlServerConnection.cs", label="Entry Unk.ToString", span=""];
m114_20 [cluster="SqlServerDistributedLock.cstr", file="SqlServerConnection.cs", label="Entry SqlServerDistributedLock.cstr", span=""];
m114_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerConnection.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m114_61 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m114_94 [cluster="HangFire.Storage.StateData.StateData()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.StateData.StateData()", span="21-21"];
m114_22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="64-64"];
m114_25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var providers = queues\r\n                .Select(queue => _queueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="68-71"];
m114_28 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var persistentQueue = providers[0].GetJobQueue(_connection)", span="80-80"];
m114_24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''queues'');", span="66-66"];
m114_23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="queues == null || queues.Length == 0", span="66-66"];
m114_26 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="providers.Length != 1", span="73-73"];
m114_29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="return persistentQueue.Dequeue(queues, cancellationToken);", span="81-81"];
m114_27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Multiple provider instances registered for queues: {0}. You should choose only one type of persistent queues per server instance.'',\r\n                    String.Join('', '', queues)));", span="75-77"];
m114_30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="64-64"];
m114_136 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="270-270"];
m114_137 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="SqlServerConnection.cs", label="0: timeOut.Duration() != timeOut", span="272-272"];
m114_138 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="SqlServerConnection.cs", label="0: throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="274-274"];
m114_139 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="277-279"];
m114_140 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="270-270"];
m114_12 [cluster="Unk.Dispose", file="SqlServerConnection.cs", label="Entry Unk.Dispose", span=""];
m114_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m114_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="connection == null", span="39-39"];
m114_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="queueProviders == null", span="40-40"];
m114_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''connection'');", span="39-39"];
m114_4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''queueProviders'');", span="40-40"];
m114_141 [cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m114_41 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m114_42 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84"];
m114_49 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = createdAt,\r\n                    expireAt = createdAt.Add(expireIn)\r\n                }).Single().ToString()", span="100-108"];
m114_56 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="128-128"];
m114_44 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''job'');", span="90-90"];
m114_46 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''parameters'');", span="91-91"];
m114_48 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var invocationData = InvocationData.Serialize(job)", span="98-98"];
m114_47 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="93-96"];
m114_50 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters.Count > 0", span="110-110"];
m114_54 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="116-121"];
m114_57 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="return jobId;", span="131-131"];
m114_51 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var parameterArray = new object[parameters.Count]", span="112-112"];
m114_55 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="124-126"];
m114_43 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="job == null", span="90-90"];
m114_45 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters == null", span="91-91"];
m114_53 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label=parameters, span="114-114"];
m114_52 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="int parameterIndex = 0", span="113-113"];
m114_58 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84"];
m114_9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="46-46"];
m114_10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="_connection.Dispose()", span="48-48"];
m114_11 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="46-46"];
m114_37 [cluster="Unk.Dequeue", file="SqlServerConnection.cs", label="Entry Unk.Dequeue", span=""];
m114_38 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="69-69"];
m114_39 [cluster="lambda expression", file="SqlServerConnection.cs", label="_queueProviders.GetProvider(queue)", span="69-69"];
m114_40 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="69-69"];
m114_32 [cluster="Unk.Distinct", file="SqlServerConnection.cs", label="Entry Unk.Distinct", span=""];
m114_95 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195"];
m114_100 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="200-206"];
m114_97 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="197-197"];
m114_99 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''name'');", span="198-198"];
m114_98 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="name == null", span="198-198"];
m114_96 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="id == null", span="197-197"];
m114_101 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195"];
m114_31 [cluster="Unk.Select", file="SqlServerConnection.cs", label="Entry Unk.Select", span=""];
m114_109 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="220-220"];
m114_110 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", color=green, community=0, file="SqlServerConnection.cs", label="0: key == null", span="222-222"];
m114_111 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", color=green, community=0, file="SqlServerConnection.cs", label="0: throw new ArgumentNullException(''key'');", span="222-222"];
m114_112 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", color=green, community=0, file="SqlServerConnection.cs", label="0: toScore < fromScore", span="223-223"];
m114_113 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", color=green, community=0, file="SqlServerConnection.cs", label="0: throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="223-223"];
m114_114 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", color=green, community=0, file="SqlServerConnection.cs", label="0: return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="225-228"];
m114_115 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="220-220"];
m114_60 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m114_142 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m114_63 [cluster="Unk.Single", file="SqlServerConnection.cs", label="Entry Unk.Single", span=""];
m114_126 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="252-252"];
m114_127 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: serverId == null", span="254-254"];
m114_128 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: throw new ArgumentNullException(''serverId'');", span="254-254"];
m114_129 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: _connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="256-258"];
m114_130 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="252-252"];
m114_65 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m114_84 [cluster="HangFire.Storage.JobData.JobData()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.JobData.JobData()", span="21-21"];
m114_36 [cluster="Unk.GetJobQueue", file="SqlServerConnection.cs", label="Entry Unk.GetJobQueue", span=""];
m114_83 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m114_131 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="261-261"];
m114_132 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: serverId == null", span="263-263"];
m114_133 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: throw new ArgumentNullException(''serverId'');", span="263-263"];
m114_134 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: _connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="265-267"];
m114_135 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="261-261"];
m114_82 [cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs", label="Entry Unk.SingleOrDefault", span=""];
m114_59 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m114_6 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m114_7 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m114_144 [file="SqlServerConnection.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m115_14 [cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m115_11 [cluster="Hangfire.JobStorage.GetConnection()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m115_16 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.ServerWatchdog.ToString()", span="53-53"];
m115_17 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="SqlServerConnectionFacts.cs", label="return GetType().Name;", span="55-55"];
m115_18 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.Server.ServerWatchdog.ToString()", span="53-53"];
m115_4 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m115_5 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="var connection = context.Storage.GetConnection()", span="39-39"];
m115_9 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="context.Wait(_checkInterval)", span="50-50"];
m115_6 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="var serversRemoved = connection.RemoveTimedOutServers(_serverTimeout)", span="41-41"];
m115_7 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="serversRemoved != 0", span="42-42"];
m115_8 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="Logger.Info(String.Format(\r\n                        ''{0} servers were removed due to timeout'', \r\n                        serversRemoved))", span="44-46"];
m115_10 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m115_15 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="57-57"];
m115_12 [cluster="Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="50-50"];
m115_0 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", span="31-31"];
m115_1 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="_checkInterval = checkInterval", span="33-33"];
m115_2 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="_serverTimeout = serverTimeout", span="34-34"];
m115_3 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", span="31-31"];
m115_19 [cluster="object.GetType()", file="SqlServerConnectionFacts.cs", label="Entry object.GetType()", span="0-0"];
m115_13 [cluster="string.Format(string, object)", file="SqlServerConnectionFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m115_20 [file="SqlServerConnectionFacts.cs", label="Hangfire.Server.ServerWatchdog", span=""];
m116_0 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.States.SucceededState.SucceededState(long, long)", span="28-28"];
m116_1 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SqlServerMonitoringApi.cs", label="Latency = latency", span="30-30"];
m116_2 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SqlServerMonitoringApi.cs", label="PerformanceDuration = performanceDuration", span="31-31"];
m116_18 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="37-37"];
m116_8 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="SqlServerMonitoringApi.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="76-76"];
m116_24 [cluster="Unk.>", file="SqlServerMonitoringApi.cs", label="Entry Unk.>", span=""];
m116_7 [cluster="HangFire.States.SucceededState.SerializeData()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.States.SucceededState.SerializeData()", span="45-45"];
m116_10 [cluster="long.ToString(System.IFormatProvider)", file="SqlServerMonitoringApi.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m116_11 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57"];
m116_20 [cluster="Unk.Map", file="SqlServerMonitoringApi.cs", label="Entry Unk.Map", span=""];
m116_19 [cluster="Unk.AddConversions", file="SqlServerMonitoringApi.cs", label="HangFire.States.SucceededState", span=""];
m116_12 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerMonitoringApi.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="59-59"];
m116_16 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: transaction.DecrementCounter(''stats:succeeded'')", span="64-64"];
m116_15 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62"];
m116_13 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57"];
m116_14 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="35-35"];
m116_17 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62"];
m116_4 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.States.SucceededState.SucceededState(long, long)", span="28-28"];
m116_5 [cluster="HangFire.States.SucceededState.SerializeData()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="45-45"];
m116_6 [cluster="HangFire.States.SucceededState.SerializeData()", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.SerializeDateTime(SucceededAt) },\r\n                { ''PerformanceDuration'', PerformanceDuration.ToString(CultureInfo.InvariantCulture) },\r\n                { ''Latency'', Latency.ToString(CultureInfo.InvariantCulture) }\r\n            };", span="47-52"];
m116_21 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="120-124"];
m116_22 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="120-124"];
m116_23 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="120-124"];
m116_3 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: SucceededAt = DateTime.UtcNow", span="32-32"];
m116_9 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m116_25 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m116_26 [file="SqlServerMonitoringApi.cs", label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
m116_27 [file="SqlServerMonitoringApi.cs", label="Hangfire.JobStorage", span=""];
m117_16 [cluster="string.Replace(string, string)", file="SqlServerObjectsInstaller.cs", label="Entry string.Replace(string, string)", span="0-0"];
m117_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m117_0 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m117_1 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="connection == null", span="36-36"];
m117_4 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="!IsSqlEditionSupported(connection)", span="40-40"];
m117_8 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="connection.Execute(script)", span="51-51"];
m117_2 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="throw new ArgumentNullException(''connection'');", span="36-36"];
m117_3 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Log.Info(''Start installing HangFire SQL objects...'')", span="38-38"];
m117_5 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="42-42"];
m117_6 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''HangFire.SqlServer.Install.sql'')", span="45-47"];
m117_7 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0, file="SqlServerObjectsInstaller.cs", label="0: script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="49-49"];
m117_9 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Log.Info(''HangFire SQL objects installed.'')", span="53-53"];
m117_10 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m117_21 [cluster="Unk.>", file="SqlServerObjectsInstaller.cs", label="Entry Unk.>", span=""];
m117_32 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerObjectsInstaller.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m117_22 [cluster="Unk.Single", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Single", span=""];
m117_30 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m117_17 [cluster="Unk.Execute", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Execute", span=""];
m117_31 [cluster="string.Format(string, object, object)", file="SqlServerObjectsInstaller.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m117_33 [cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerObjectsInstaller.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m117_15 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62"];
m117_23 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="64-64"];
m117_25 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="68-71"];
m117_24 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="stream == null", span="66-66"];
m117_26 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="var reader = new StreamReader(stream)", span="74-74"];
m117_27 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="return reader.ReadToEnd();", span="76-76"];
m117_28 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62"];
m117_13 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56"];
m117_18 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="58-58"];
m117_19 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.SqlAzure;", span="59-59"];
m117_20 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56"];
m117_29 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m117_14 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m117_12 [cluster="Unk.Info", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Info", span=""];
m118_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerStorage.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m118_24 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="64-64"];
m118_25 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", color=green, community=0, file="SqlServerStorage.cs", label="0: var connection = CreateAndOpenConnection()", span="66-66"];
m118_26 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", color=green, community=0, file="SqlServerStorage.cs", label="0: return new SqlServerConnection(connection, QueueProviders);", span="68-68"];
m118_27 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="64-64"];
m118_40 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.ToString()", span="83-83"];
m118_42 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value)", span="89-92"];
m118_41 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="85-85"];
m118_43 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="var builder = new StringBuilder()", span="94-94"];
m118_45 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="parts.ContainsKey(alias)", span="98-98"];
m118_46 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.AppendFormat(''{1}'', alias, parts[alias])", span="100-100"];
m118_50 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="parts.ContainsKey(alias)", span="109-109"];
m118_51 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.AppendFormat(''{1}'', alias, parts[alias])", span="111-111"];
m118_52 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="return builder.Length != 0 \r\n                    ? String.Format(''SQL Server: {0}'', builder) \r\n                    : canNotParseMessage;", span="116-118"];
m118_54 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="return canNotParseMessage;", span="122-122"];
m118_44 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="96-96"];
m118_47 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.Length != 0", span="105-105"];
m118_48 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.Append(''@'')", span="105-105"];
m118_49 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="new[] { ''Database'', ''Initial Catalog'' }", span="107-107"];
m118_53 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label=Exception, span="120-120"];
m118_55 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.ToString()", span="83-83"];
m118_62 [cluster="System.Text.StringBuilder.Append(string)", file="SqlServerStorage.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m118_58 [cluster="Unk.ToDictionary", file="SqlServerStorage.cs", label="Entry Unk.ToDictionary", span=""];
m118_60 [cluster="Unk.ContainsKey", file="SqlServerStorage.cs", label="Entry Unk.ContainsKey", span=""];
m118_63 [cluster="string.Format(string, object)", file="SqlServerStorage.cs", label="Entry string.Format(string, object)", span="0-0"];
m118_38 [cluster="Unk.Info", file="SqlServerStorage.cs", label="Entry Unk.Info", span=""];
m118_33 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", span="76-76"];
m118_35 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="logger.InfoFormat(''    Queue poll interval: {0}.'', _options.QueuePollInterval)", span="79-79"];
m118_36 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="logger.InfoFormat(''    Invisibility timeout: {0}.'', _options.InvisibilityTimeout)", span="80-80"];
m118_34 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="logger.Info(''Using the following options for SQL Server job storage:'')", span="78-78"];
m118_37 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", span="76-76"];
m118_59 [cluster="System.Text.StringBuilder.StringBuilder()", file="SqlServerStorage.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m118_82 [cluster="Unk.Open", file="SqlServerStorage.cs", label="Entry Unk.Open", span=""];
m118_39 [cluster="Unk.InfoFormat", file="SqlServerStorage.cs", label="Entry Unk.InfoFormat", span=""];
m118_70 [cluster="Unk.Trim", file="SqlServerStorage.cs", label="Entry Unk.Trim", span=""];
m118_19 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(HangFire.SqlServer.IPersistentJobQueueProvider)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(HangFire.SqlServer.IPersistentJobQueueProvider)", span="31-31"];
m118_81 [cluster="SqlConnection.cstr", file="SqlServerStorage.cs", label="Entry SqlConnection.cstr", span=""];
m118_61 [cluster="Unk.AppendFormat", file="SqlServerStorage.cs", label="Entry Unk.AppendFormat", span=""];
m118_20 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="59-59"];
m118_21 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", color=green, community=0, file="SqlServerStorage.cs", label="0: return new SqlServerMonitoringApi(CreateAndOpenConnection(), QueueProviders);", span="61-61"];
m118_22 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="59-59"];
m118_18 [cluster="HangFire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(HangFire.SqlServer.SqlServerStorageOptions)", span="25-25"];
m118_32 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m118_2 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
m118_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs", label="0: connectionString == null", span="39-39"];
m118_4 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs", label="0: throw new ArgumentNullException(''connectionString'');", span="39-39"];
m118_5 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs", label="0: options == null", span="40-40"];
m118_6 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs", label="0: throw new ArgumentNullException(''options'');", span="40-40"];
m118_7 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs", label="0: _options = options", span="42-42"];
m118_8 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs", label="0: _connectionString = connectionString", span="43-43"];
m118_9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs", label="0: options.PrepareSchemaIfNecessary", span="45-45"];
m118_10 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs", label="0: var connection = CreateAndOpenConnection()", span="47-47"];
m118_12 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="var defaultQueueProvider = new SqlServerJobQueueProvider(options)", span="53-53"];
m118_11 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs", label="0: SqlServerObjectsInstaller.Install(connection)", span="49-49"];
m118_13 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="54-54"];
m118_14 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
m118_56 [cluster="string.Split(char[], System.StringSplitOptions)", file="SqlServerStorage.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m118_74 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="92-92"];
m118_64 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="90-90"];
m118_67 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="91-91"];
m118_71 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="92-92"];
m118_65 [cluster="lambda expression", file="SqlServerStorage.cs", label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="90-90"];
m118_66 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="90-90"];
m118_69 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="91-91"];
m118_68 [cluster="lambda expression", file="SqlServerStorage.cs", label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="91-91"];
m118_73 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="92-92"];
m118_72 [cluster="lambda expression", file="SqlServerStorage.cs", label="x.Key", span="92-92"];
m118_75 [cluster="lambda expression", file="SqlServerStorage.cs", label="x.Value", span="92-92"];
m118_76 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="92-92"];
m118_23 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36"];
m118_57 [cluster="Unk.Select", file="SqlServerStorage.cs", label="Entry Unk.Select", span=""];
m118_29 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="71-71"];
m118_30 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new ExpirationManager(this);", span="73-73"];
m118_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="71-71"];
m118_17 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m118_16 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="126-126"];
m118_77 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="var connection = new SqlConnection(_connectionString)", span="128-128"];
m118_78 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="connection.Open()", span="129-129"];
m118_79 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="return connection;", span="131-131"];
m118_80 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="126-126"];
m118_28 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m118_83 [file="SqlServerStorage.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m119_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m119_89 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m119_90 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="AddToSet(key, value, 0.0)", span="157-157"];
m119_91 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m119_105 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181"];
m119_106 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="183-185"];
m119_107 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181"];
m119_92 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160"];
m119_94 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="169-171"];
m119_93 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="162-167"];
m119_95 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160"];
m119_71 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134"];
m119_72 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="136-138"];
m119_73 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134"];
m119_126 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m119_47 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="101-101"];
m119_49 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="107-116"];
m119_48 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="103-105"];
m119_50 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="101-101"];
m119_0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m119_5 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="_connection = connection", span="42-42"];
m119_6 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="_queueProviders = queueProviders", span="43-43"];
m119_3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="queueProviders == null", span="40-40"];
m119_1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="connection == null", span="39-39"];
m119_4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''queueProviders'');", span="40-40"];
m119_2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''connection'');", span="39-39"];
m119_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m119_117 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195"];
m119_119 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="202-204"];
m119_118 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num, [Key] from HangFire.List)\r\ndelete from cte where row_num not between @start and @end and [Key] = @key''", span="197-200"];
m119_120 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195"];
m119_26 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="207-207"];
m119_124 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _commandQueue.Enqueue(action)", span="209-209"];
m119_125 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="207-207"];
m119_45 [cluster="HangFire.States.IState.SerializeData()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.IState.SerializeData()", span="27-27"];
m119_20 [cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.EnlistTransaction", span=""];
m119_83 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148"];
m119_84 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="150-152"];
m119_85 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148"];
m119_38 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="81-81"];
m119_40 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="88-98"];
m119_39 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="83-86"];
m119_41 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="81-81"];
m119_21 [cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m119_77 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141"];
m119_78 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="143-145"];
m119_79 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141"];
m119_18 [cluster="TransactionScope.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionScope.cstr", span=""];
m119_22 [cluster="Unk.Complete", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Complete", span=""];
m119_64 [cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", span="24-24"];
m119_30 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m119_99 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174"];
m119_100 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="176-178"];
m119_101 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174"];
m119_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="67-67"];
m119_24 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="69-71"];
m119_25 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="67-67"];
m119_111 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188"];
m119_112 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="190-192"];
m119_113 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188"];
m119_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50"];
m119_13 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="56-56"];
m119_14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label=_commandQueue, span="58-58"];
m119_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="command(_connection)", span="60-60"];
m119_12 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="52-54"];
m119_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="transaction.Complete()", span="63-63"];
m119_17 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50"];
m119_59 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m119_19 [cluster="TransactionOptions.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionOptions.cstr", span=""];
m119_121 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="202-204"];
m119_27 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="69-71"];
m119_35 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="76-78"];
m119_42 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="88-98"];
m119_51 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="107-116"];
m119_62 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="persistentQueue.Enqueue(queue, jobId)", span="124-124"];
m119_61 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="124-124"];
m119_68 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="129-131"];
m119_74 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="136-138"];
m119_80 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="143-145"];
m119_86 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="150-152"];
m119_96 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="169-171"];
m119_102 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="176-178"];
m119_108 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="183-185"];
m119_114 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="190-192"];
m119_28 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="69-71"];
m119_29 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="69-71"];
m119_36 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="76-78"];
m119_37 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="76-78"];
m119_43 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="88-98"];
m119_44 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="88-98"];
m119_52 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="107-116"];
m119_53 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="107-116"];
m119_63 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="124-124"];
m119_69 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="129-131"];
m119_70 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="129-131"];
m119_75 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="136-138"];
m119_76 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="136-138"];
m119_81 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="143-145"];
m119_82 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="143-145"];
m119_87 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="150-152"];
m119_88 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="150-152"];
m119_97 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="169-171"];
m119_98 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="169-171"];
m119_103 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="176-178"];
m119_104 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="176-178"];
m119_109 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="183-185"];
m119_110 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="183-185"];
m119_115 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="190-192"];
m119_116 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="190-192"];
m119_122 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="202-204"];
m119_123 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="202-204"];
m119_46 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m119_31 [cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Execute", span=""];
m119_54 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119"];
m119_55 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="var provider = _queueProviders.GetProvider(queue)", span="121-121"];
m119_56 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="var persistentQueue = provider.GetJobQueue(_connection)", span="122-122"];
m119_57 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(_ => persistentQueue.Enqueue(queue, jobId))", span="124-124"];
m119_58 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119"];
m119_60 [cluster="Unk.GetJobQueue", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.GetJobQueue", span=""];
m119_65 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127"];
m119_66 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="129-131"];
m119_67 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127"];
m119_32 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="74-74"];
m119_33 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="76-78"];
m119_34 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="74-74"];
m119_127 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m119_137 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_138 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_139 [file="SqlServerWriteOnlyTransaction.cs", label=persistentQueue, span=""];
m119_128 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_129 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m119_130 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_131 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_132 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.States.IState", span=""];
m119_133 [file="SqlServerWriteOnlyTransaction.cs", label=addAndSetStateSql, span=""];
m119_134 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_135 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.States.IState", span=""];
m119_136 [file="SqlServerWriteOnlyTransaction.cs", label=addStateSql, span=""];
m119_140 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_141 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_142 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m119_143 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_144 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_145 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m119_146 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_147 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_148 [file="SqlServerWriteOnlyTransaction.cs", label=double, span=""];
m119_149 [file="SqlServerWriteOnlyTransaction.cs", label=addSql, span=""];
m119_150 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_151 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_152 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_153 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_154 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_155 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_156 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m119_157 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m119_158 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m119_159 [file="SqlServerWriteOnlyTransaction.cs", label=trimSql, span=""];
m124_0 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="StyleSheetHandler.cs", label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29"];
m124_1 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", color=red, community=0, file="StyleSheetHandler.cs", label="0: ContentType = ''text/css''", span="32-32"];
m124_2 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", color=red, community=0, file="StyleSheetHandler.cs", label="0: ContentEncoding = Encoding.UTF8", span="33-33"];
m124_3 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="StyleSheetHandler.cs", label="Exit HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29"];
m124_4 [file="StyleSheetHandler.cs", label="HangFire.Web.StyleSheetHandler", span=""];
m125_71 [cluster="HangFire.Web.RazorPage.Write(object)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m125_65 [cluster="Unk.TryParse", file="SucceededJobs1.generated.cs", label="Entry Unk.TryParse", span=""];
m125_63 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m125_70 [cluster="HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", span="34-34"];
m125_78 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m125_66 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="SucceededJobs1.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m125_74 [cluster="Unk.Write", file="SucceededJobs1.generated.cs", label="Entry Unk.Write", span=""];
m125_72 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m125_64 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m125_77 [cluster="System.TimeSpan.FromMilliseconds(double)", file="SucceededJobs1.generated.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m125_69 [cluster="HttpRequestBase.LinkTo(string)", file="SucceededJobs1.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m125_76 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m125_0 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.SucceededJobs.Execute()", span="58-58"];
m125_4 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: int.TryParse(Request.QueryString[''from''], out from)", span="79-79"];
m125_3 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="int from, perPage", span="77-77"];
m125_5 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: int.TryParse(Request.QueryString[''count''], out perPage)", span="80-80"];
m125_9 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: pager = new Pager(from, perPage, monitor.SucceededListCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/succeeded'')\r\n        }", span="87-90"];
m125_6 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: Pager pager", span="82-82"];
m125_8 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: var monitor = JobStorage.Current.GetMonitoringApi()", span="85-85"];
m125_10 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="succeededJobs = monitor\r\n            .SucceededJobs(pager.FromRecord, pager.RecordsPerPage)", span="92-93"];
m125_12 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="pager.TotalPageCount == 0", span="105-105"];
m125_17 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="143-143"];
m125_61 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="428-428"];
m125_7 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: JobList<SucceededJobDto> succeededJobs", span="83-83"];
m125_13 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No succeeded jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="111-112"];
m125_14 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="124-126"];
m125_15 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Request.LinkTo(''/succeeded/requeue''))", span="131-131"];
m125_16 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''\''\r\n                    data-loading-text=\''Enqueueing...\''>\r\n                <span '' +\r\n''class=\''glyphicon glyphicon-repeat\''></span>\r\n                Requeue jobs\r\n      '' +\r\n''      </button>\r\n\r\n            '')", span="136-138"];
m125_18 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="1: WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Job</th>\r\n                    <th class=''''min-width''''>Total Duration</th>\r\n                    <th class=''''align-right''''>Succeeded</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="148-164"];
m125_19 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label=succeededJobs, span="169-169"];
m125_26 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="1: WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="206-207"];
m125_25 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value != null && job.Value.InSucceededState", span="200-200"];
m125_27 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(job.Key)", span="212-212"];
m125_29 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="2: WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <a href=\'''')", span="227-228"];
m125_28 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\'' />\r\n'')", span="217-217"];
m125_30 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="233-233"];
m125_35 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="2: WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="259-260"];
m125_34 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value != null && !job.Value.InSucceededState", span="253-253"];
m125_36 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                        </td>\r\n\r\n'')", span="270-270"];
m125_38 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="1: WriteLiteral(''                            <td colspan=\''3\''>\r\n                                <em'' +\r\n''>Job was expired.</em>\r\n                            </td>\r\n'')", span="281-282"];
m125_37 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value == null", span="275-275"];
m125_59 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                    </tr>\r\n'')", span="407-407"];
m125_39 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="1: WriteLiteral(''                            <td>\r\n                                <a class=\''job-m'' +\r\n''ethod\'' href=\'''')", span="294-295"];
m125_40 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="300-300"];
m125_53 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs1.generated.cs", label="0: WriteLiteral(''                                    <span data-moment=\'''')", span="367-367"];
m125_52 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value.SucceededAt.HasValue", span="361-361"];
m125_54 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.SucceededAt.Value))", span="372-372"];
m125_1 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n'')", span="62-62"];
m125_2 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Layout = new LayoutPage { Title = ''Succeeded Jobs'' }", span="75-75"];
m125_11 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n'')", span="100-100"];
m125_20 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="175-175"];
m125_21 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(job.Value != null && !job.Value.InSucceededState ? ''obsolete-data'' : null)", span="180-180"];
m125_22 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral('' '')", span="185-185"];
m125_23 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(job.Value != null && job.Value.InSucceededState ? ''hover'' : null)", span="190-190"];
m125_24 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''>\r\n                        <td>\r\n'')", span="195-195"];
m125_31 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", span="238-238"];
m125_32 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="243-243"];
m125_33 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="248-248"];
m125_41 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''>\r\n                                    '')", span="305-305"];
m125_42 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="310-310"];
m125_43 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n                                </a>\r\n                            </td>\r\n'')", span="315-315"];
m125_44 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                            <td class=\''min-width align-right\''>\r\n'')", span="319-319"];
m125_46 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                    '')", span="330-330"];
m125_47 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral('' '')", span="332-332"];
m125_48 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(HtmlHelper.ToHumanDuration(TimeSpan.FromMilliseconds(job.Value.TotalDuration.Value) , false))", span="337-337"];
m125_49 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n'')", span="342-342"];
m125_50 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                            </td>\r\n'')", span="352-352"];
m125_51 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                            <td class=\''min-width align-right\''>\r\n'')", span="356-356"];
m125_55 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''>\r\n                                        '')", span="377-377"];
m125_56 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(job.Value.SucceededAt)", span="382-382"];
m125_57 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n                                    </span>\r\n'')", span="387-387"];
m125_58 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                            </td>\r\n'')", span="397-397"];
m125_60 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="417-417"];
m125_45 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value.TotalDuration.HasValue", span="324-324"];
m125_62 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Exit HangFire.Web.Pages.SucceededJobs.Execute()", span="58-58"];
m125_68 [cluster="HangFire.Storage.IMonitoringApi.SucceededListCount()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededListCount()", span="44-44"];
m125_80 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m125_73 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m125_79 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m125_67 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m125_75 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m125_81 [file="SucceededJobs1.generated.cs", label="HangFire.Web.Pages.SucceededJobs", span=""];
m126_8 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.Dispose()", span="24-24"];
m126_9 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="SucceededState.cs", label="_redis.Dispose()", span="26-26"];
m126_10 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.Dispose()", span="24-24"];
m126_73 [cluster="int.ToString(System.IFormatProvider)", file="SucceededState.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m126_132 [cluster="Unk.FromNullableStringTimestamp", file="SucceededState.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m126_20 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17"];
m126_51 [cluster="Unk.SetRangeInHash", file="SucceededState.cs", label="Entry Unk.SetRangeInHash", span=""];
m126_17 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m126_18 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="return new RedisJobFetcher(_redis, queueNames, TimeSpan.FromSeconds(1));", span="36-36"];
m126_19 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m126_26 [cluster="System.TimeSpan.FromMinutes(double)", file="SucceededState.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m126_6 [cluster="HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", file="SucceededState.cs", label="Entry HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", span="12-12"];
m126_131 [cluster="Unk.FromStringTimestamp", file="SucceededState.cs", label="Entry Unk.FromStringTimestamp", span=""];
m126_99 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137"];
m126_100 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="var serverNames = _redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="139-139"];
m126_111 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="utcNow > maxTime.Add(timeOut)", span="170-170"];
m126_101 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="140-140"];
m126_104 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label=serverNames, span="146-146"];
m126_102 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="var utcNow = DateTime.UtcNow", span="142-142"];
m126_106 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="150-158"];
m126_109 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label=heartbeats, span="165-165"];
m126_103 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="var pipeline = _redis.CreatePipeline()", span="144-144"];
m126_107 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="pipeline.Flush()", span="161-161"];
m126_105 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="var name = serverName", span="148-148"];
m126_108 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="var removedServerCount = 0", span="164-164"];
m126_113 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="removedServerCount++", span="173-173"];
m126_114 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="return removedServerCount;", span="177-177"];
m126_110 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="167-168"];
m126_112 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="RemoveServer(_redis, heartbeat.Key)", span="172-172"];
m126_115 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137"];
m126_98 [cluster="Unk.SetEntryInHash", file="SucceededState.cs", label="Entry Unk.SetEntryInHash", span=""];
m126_68 [cluster="Unk.AddItemToSet", file="SucceededState.cs", label="Entry Unk.AddItemToSet", span=""];
m126_25 [cluster="string.Format(string, object)", file="SucceededState.cs", label="Entry string.Format(string, object)", span="0-0"];
m126_148 [cluster="Unk.RemoveEntryFromHash", file="SucceededState.cs", label="Entry Unk.RemoveEntryFromHash", span=""];
m126_96 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="SucceededState.cs", label="_redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="131-134"];
m126_95 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="129-129"];
m126_97 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="129-129"];
m126_94 [cluster="Unk.RemoveEntry", file="SucceededState.cs", label="Entry Unk.RemoveEntry", span=""];
m126_84 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="121-123"];
m126_81 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="113-113"];
m126_82 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SucceededState.cs", label="var transaction = redis.CreateTransaction()", span="115-115"];
m126_83 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="117-119"];
m126_85 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SucceededState.cs", label="transaction.Commit()", span="125-125"];
m126_86 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="113-113"];
m126_12 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="29-29"];
m126_13 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="SucceededState.cs", label="return new RedisWriteOnlyTransaction(_redis.CreateTransaction());", span="31-31"];
m126_14 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="29-29"];
m126_7 [cluster="HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", file="SucceededState.cs", label="Entry HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", span="11-11"];
m126_21 [cluster="System.TimeSpan.FromSeconds(double)", file="SucceededState.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m126_55 [cluster="Unk.ExpireEntryIn", file="SucceededState.cs", label="Entry Unk.ExpireEntryIn", span=""];
m126_42 [cluster="System.Guid.ToString()", file="SucceededState.cs", label="Entry System.Guid.ToString()", span="0-0"];
m126_118 [cluster="Unk.Flush", file="SucceededState.cs", label="Entry Unk.Flush", span=""];
m126_15 [cluster="RedisWriteOnlyTransaction.cstr", file="SucceededState.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m126_133 [cluster="Unk.Add", file="SucceededState.cs", label="Entry Unk.Add", span=""];
m126_121 [cluster="System.DateTime.Add(System.TimeSpan)", file="SucceededState.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m126_72 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m126_130 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SucceededState.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m126_138 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked''))", span="195-197"];
m126_134 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180"];
m126_135 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="SucceededState.cs", label="var transaction = redis.CreateTransaction()", span="185-185"];
m126_136 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="187-190"];
m126_137 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched''))", span="192-194"];
m126_139 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="SucceededState.cs", label="transaction.Commit()", span="199-199"];
m126_140 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180"];
m126_77 [cluster="Unk.AddItemToList", file="SucceededState.cs", label="Entry Unk.AddItemToList", span=""];
m126_11 [cluster="Unk.Dispose", file="SucceededState.cs", label="Entry Unk.Dispose", span=""];
m126_56 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="81-81"];
m126_57 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="var transaction = _redis.CreateTransaction()", span="83-83"];
m126_58 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="85-86"];
m126_59 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="88-94"];
m126_60 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label=queues, span="96-96"];
m126_62 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="99-101"];
m126_63 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="transaction.Commit()", span="104-104"];
m126_61 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="var queue1 = queue", span="98-98"];
m126_64 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="81-81"];
m126_90 [cluster="Unk.RemoveItemFromSet", file="SucceededState.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m126_119 [cluster="System.DateTime.DateTime(long)", file="SucceededState.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m126_78 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="108-108"];
m126_79 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="SucceededState.cs", label="RemoveServer(_redis, serverId)", span="110-110"];
m126_80 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="108-108"];
m126_37 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="70-72"];
m126_28 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="50-50"];
m126_29 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="var jobId = Guid.NewGuid().ToString()", span="56-56"];
m126_30 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="parameters.Add(''Type'', invocationData.Type)", span="58-58"];
m126_31 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="parameters.Add(''Method'', invocationData.Method)", span="59-59"];
m126_32 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="parameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="60-60"];
m126_33 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="parameters.Add(''Arguments'', JobHelper.ToJson(arguments))", span="61-61"];
m126_34 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="parameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="62-62"];
m126_36 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters))", span="66-68"];
m126_39 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="return jobId;", span="78-78"];
m126_35 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="var transaction = _redis.CreateTransaction()", span="64-64"];
m126_38 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="transaction.Commit()", span="75-75"];
m126_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="50-50"];
m126_120 [cluster="System.Math.Max(long, long)", file="SucceededState.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m126_149 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="195-197"];
m126_49 [cluster="lambda expression", file="SucceededState.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters)", span="66-68"];
m126_53 [cluster="lambda expression", file="SucceededState.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="70-72"];
m126_48 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="66-68"];
m126_52 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="70-72"];
m126_50 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="66-68"];
m126_54 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="70-72"];
m126_66 [cluster="lambda expression", file="SucceededState.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="85-86"];
m126_70 [cluster="lambda expression", file="SucceededState.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="88-94"];
m126_75 [cluster="lambda expression", file="SucceededState.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="99-101"];
m126_65 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="85-86"];
m126_69 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="88-94"];
m126_74 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="99-101"];
m126_67 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="85-86"];
m126_71 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="88-94"];
m126_76 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="99-101"];
m126_88 [cluster="lambda expression", file="SucceededState.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="117-119"];
m126_92 [cluster="lambda expression", file="SucceededState.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="121-123"];
m126_87 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="117-119"];
m126_91 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="121-123"];
m126_89 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="117-119"];
m126_93 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="121-123"];
m126_128 [cluster="lambda expression", file="SucceededState.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="154-158"];
m126_123 [cluster="lambda expression", file="SucceededState.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="151-153"];
m126_122 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="151-153"];
m126_127 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="154-158"];
m126_124 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="151-153"];
m126_129 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="154-158"];
m126_142 [cluster="lambda expression", file="SucceededState.cs", label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="187-190"];
m126_146 [cluster="lambda expression", file="SucceededState.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'')", span="192-194"];
m126_150 [cluster="lambda expression", file="SucceededState.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked'')", span="195-197"];
m126_141 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="187-190"];
m126_145 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="192-194"];
m126_143 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="187-190"];
m126_147 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="192-194"];
m126_151 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="195-197"];
m126_45 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m126_22 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="39-39"];
m126_23 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="SucceededState.cs", label="return _redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="41-43"];
m126_24 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="39-39"];
m126_117 [cluster="Unk.CreatePipeline", file="SucceededState.cs", label="Entry Unk.CreatePipeline", span=""];
m126_144 [cluster="Unk.RemoveItemFromList", file="SucceededState.cs", label="Entry Unk.RemoveItemFromList", span=""];
m126_41 [cluster="System.Guid.NewGuid()", file="SucceededState.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m126_44 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SucceededState.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m126_47 [cluster="Unk.Commit", file="SucceededState.cs", label="Entry Unk.Commit", span=""];
m126_116 [cluster="Unk.GetAllItemsFromSet", file="SucceededState.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m126_126 [cluster="Unk.GetValuesFromHash", file="SucceededState.cs", label="Entry Unk.GetValuesFromHash", span=""];
m126_125 [cluster="Unk.Format", file="SucceededState.cs", label="Entry Unk.Format", span=""];
m126_46 [cluster="Unk.QueueCommand", file="SucceededState.cs", label="Entry Unk.QueueCommand", span=""];
m126_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="SucceededState.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15"];
m126_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="SucceededState.cs", label="_redis = redis", span="17-17"];
m126_2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="SucceededState.cs", label="Jobs = new RedisJob(redis)", span="19-19"];
m126_3 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="SucceededState.cs", label="Sets = new RedisSet(redis)", span="20-20"];
m126_4 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="SucceededState.cs", label="Storage = storage", span="21-21"];
m126_5 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="SucceededState.cs", label="Exit HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15"];
m126_43 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SucceededState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m126_27 [cluster="Unk.AcquireLock", file="SucceededState.cs", label="Entry Unk.AcquireLock", span=""];
m126_16 [cluster="Unk.CreateTransaction", file="SucceededState.cs", label="Entry Unk.CreateTransaction", span=""];
m126_152 [file="SucceededState.cs", label="HangFire.Redis.RedisConnection", span=""];
m126_153 [file="SucceededState.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m126_154 [file="SucceededState.cs", label=jobId, span=""];
m126_155 [file="SucceededState.cs", label="System.TimeSpan", span=""];
m126_156 [file="SucceededState.cs", label=string, span=""];
m126_157 [file="SucceededState.cs", label=int, span=""];
m126_158 [file="SucceededState.cs", label=queue1, span=""];
m126_159 [file="SucceededState.cs", label=string, span=""];
m126_160 [file="SucceededState.cs", label=name, span=""];
m126_161 [file="SucceededState.cs", label=heartbeats, span=""];
m126_162 [file="SucceededState.cs", label=string, span=""];
m126_163 [file="SucceededState.cs", label=string, span=""];
m127_20 [cluster="string.Equals(string)", file="SucceededStateFacts.cs", label="Entry string.Equals(string)", span="0-0"];
m127_0 [cluster="HangFire.Tests.Transforms.InXDaysTransform(int)", file="SucceededStateFacts.cs", label="Entry HangFire.Tests.Transforms.InXDaysTransform(int)", span="9-9"];
m127_1 [cluster="HangFire.Tests.Transforms.InXDaysTransform(int)", file="SucceededStateFacts.cs", label="return DateTime.Today.AddDays(days);", span="11-11"];
m127_2 [cluster="HangFire.Tests.Transforms.InXDaysTransform(int)", file="SucceededStateFacts.cs", label="Exit HangFire.Tests.Transforms.InXDaysTransform(int)", span="9-9"];
m127_4 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="Entry HangFire.Tests.Transforms.ATimeAgo(string)", span="15-15"];
m127_5 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="var now = DateTime.UtcNow", span="17-17"];
m127_6 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="''millisecond''.Equals(timeAgo)", span="18-18"];
m127_8 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="''second''.Equals(timeAgo)", span="22-22"];
m127_10 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="''minute''.Equals(timeAgo)", span="26-26"];
m127_12 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="''hour''.Equals(timeAgo)", span="30-30"];
m127_14 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="''day''.Equals(timeAgo)", span="34-34"];
m127_16 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="''month''.Equals(timeAgo)", span="38-38"];
m127_18 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="throw new InvalidOperationException(String.Format(''Wrong time unit '{0}''', timeAgo));", span="43-43"];
m127_7 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="return now.AddMilliseconds(-1);", span="20-20"];
m127_9 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="return now.AddSeconds(-1);", span="24-24"];
m127_11 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=red, community=0, file="SucceededStateFacts.cs", label="0: return now.AddMinutes(-1);", span="28-28"];
m127_13 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="return now.AddHours(-1);", span="32-32"];
m127_15 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="return now.AddDays(-1);", span="36-36"];
m127_17 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="return now.AddMonths(-1);", span="40-40"];
m127_19 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="SucceededStateFacts.cs", label="Exit HangFire.Tests.Transforms.ATimeAgo(string)", span="15-15"];
m127_26 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SucceededStateFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m127_24 [cluster="System.DateTime.AddHours(double)", file="SucceededStateFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m127_23 [cluster="System.DateTime.AddMinutes(double)", file="SucceededStateFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m127_22 [cluster="System.DateTime.AddSeconds(double)", file="SucceededStateFacts.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m127_21 [cluster="System.DateTime.AddMilliseconds(double)", file="SucceededStateFacts.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m127_27 [cluster="string.Format(string, object)", file="SucceededStateFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m127_3 [cluster="System.DateTime.AddDays(double)", file="SucceededStateFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m127_25 [cluster="System.DateTime.AddMonths(int)", file="SucceededStateFacts.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m129_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="WorkerManagerFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m129_30 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m129_53 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m129_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", color=red, community=0, file="WorkerManagerFacts.cs", label="0: Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="81-85"];
m129_29 [cluster="Unk.CollectScenarioErrors", file="WorkerManagerFacts.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m129_55 [cluster="Unk.GetInstant", file="WorkerManagerFacts.cs", label="Entry Unk.GetInstant", span=""];
m129_58 [cluster="Hangfire.Server.IScheduleInstant.GetMatches(System.DateTime?)", file="WorkerManagerFacts.cs", label="Entry Hangfire.Server.IScheduleInstant.GetMatches(System.DateTime?)", span="25-25"];
m129_57 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="WorkerManagerFacts.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m129_62 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WorkerManagerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m129_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="WorkerManagerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m129_59 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="WorkerManagerFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m129_61 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="WorkerManagerFacts.cs", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41"];
m129_60 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="WorkerManagerFacts.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m129_63 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="WorkerManagerFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m129_37 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="this.ScenarioCleanup()", span="89-89"];
m129_38 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m129_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="WorkerManagerFacts.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m129_76 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="WorkerManagerFacts.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m129_79 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="WorkerManagerFacts.cs", label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="173-173"];
m129_78 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="WorkerManagerFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="171-171"];
m129_83 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="WorkerManagerFacts.cs", label="this.ScenarioCleanup()", span="181-181"];
m129_77 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="WorkerManagerFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="169-169"];
m129_80 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="WorkerManagerFacts.cs", label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175"];
m129_82 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="WorkerManagerFacts.cs", label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179"];
m129_81 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="WorkerManagerFacts.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177"];
m129_84 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="WorkerManagerFacts.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m129_64 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m129_32 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m129_41 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="WorkerManagerFacts.cs", label="var job = serializedJob.Deserialize()", span="101-101"];
m129_54 [cluster="Unk.Parse", file="WorkerManagerFacts.cs", label="Entry Unk.Parse", span=""];
m129_34 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m129_40 [cluster="Unk.Given", file="WorkerManagerFacts.cs", label="Entry Unk.Given", span=""];
m129_42 [cluster="Unk.When", file="WorkerManagerFacts.cs", label="Entry Unk.When", span=""];
m129_45 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98"];
m129_49 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m129_50 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="testRunner.Then(''the queue does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m129_48 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m129_43 [cluster="Unk.Then", file="WorkerManagerFacts.cs", label="Entry Unk.Then", span=""];
m129_44 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m129_46 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="100-100"];
m129_47 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m129_51 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="testRunner.But(''the dequeued jobs list contains it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="110-110"];
m129_15 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="56-56"];
m129_16 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="_throttler.Throttle(cancellationToken)", span="58-58"];
m129_26 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="WorkerManagerFacts.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m129_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="var connection = _storage.GetConnection()", span="60-60"];
m129_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="61-61"];
m129_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="63-63"];
m129_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="67-68"];
m129_23 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="WorkerManagerFacts.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m129_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label=recurringJobIds, span="65-65"];
m129_22 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="WorkerManagerFacts.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m129_24 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="WorkerManagerFacts.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m129_27 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="WorkerManagerFacts.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m129_35 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m129_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="_storage = storage", span="50-50"];
m129_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", color=green, community=0, file="WorkerManagerFacts.cs", label="2: _client = client", span="51-51"];
m129_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="_instantFactory = instantFactory", span="52-52"];
m129_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="_throttler = throttler", span="53-53"];
m129_85 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m129_88 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="194-194"];
m129_87 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="192-192"];
m129_92 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="this.ScenarioCleanup()", span="202-202"];
m129_86 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="190-190"];
m129_89 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="196-196"];
m129_91 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m129_90 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m129_93 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m129_28 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="WorkerManagerFacts.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m129_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39"];
m129_67 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146"];
m129_66 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="144-144"];
m129_74 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="this.ScenarioCleanup()", span="160-160"];
m129_65 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m129_68 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148"];
m129_69 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="150-150"];
m129_73 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="testRunner.Then(''the fetcher returns the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158"];
m129_70 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="152-152"];
m129_72 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156"];
m129_71 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="testRunner.Then(''the fetcher returns the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="154-154"];
m129_75 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="WorkerManagerFacts.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m129_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39"];
m129_1 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="storage == null", span="45-45"];
m129_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="client == null", span="46-46"];
m129_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="instantFactory == null", span="47-47"];
m129_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="throttler == null", span="48-48"];
m129_2 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="throw new ArgumentNullException(''storage'');", span="45-45"];
m129_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="throw new ArgumentNullException(''client'');", span="46-46"];
m129_6 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="throw new ArgumentNullException(''instantFactory'');", span="47-47"];
m129_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="WorkerManagerFacts.cs", label="throw new ArgumentNullException(''throttler'');", span="48-48"];
m129_52 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="WorkerManagerFacts.cs", label="this.ScenarioCleanup()", span="112-112"];
m129_36 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="testRunner.Then(''the fetcher returns the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m129_31 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="WorkerManagerFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns the job payload when it dequeues a job'', ((string[])(null)))", span="77-77"];
m129_33 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", color=green, community=0, file="WorkerManagerFacts.cs", label="0: testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m129_94 [file="WorkerManagerFacts.cs", label="HangFire.Tests.Server.JobFetcherFeature", span=""];
m132_0 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="_PerPageSelector.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m132_1 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="_PerPageSelector.cs", label="_pager = pager", span="8-8"];
m132_2 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="_PerPageSelector.cs", label="Exit HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m132_3 [file="_PerPageSelector.cs", label="HangFire.Web.Pages.PerPageSelector", span=""];
m133_14 [cluster="HangFire.Web.RazorPage.Write(object)", file="_PerPageSelector.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m133_13 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="_PerPageSelector.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m133_15 [cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="_PerPageSelector.generated.cs", label="Entry HangFire.Web.Pager.RecordsPerPageUrl(int)", span="58-58"];
m133_0 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.Execute()", span="23-23"];
m133_1 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="WriteLiteral(''\r\n'')", span="27-27"];
m133_2 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="WriteLiteral(''\r\n    <div class=\''btn-group pull-right paginator\''>\r\n'')", span="30-30"];
m133_3 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="new[] { 10, 20, 50, 100 }", span="35-35"];
m133_4 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="WriteLiteral(''            <a class=\''btn btn-sm btn-default '')", span="41-41"];
m133_11 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="WriteLiteral(''    </div>\r\n    <div class=\''btn-toolbar-spacer pull-right\''></div>\r\n    <div class'' +\r\n''=\''btn-toolbar-label btn-toolbar-label-sm pull-right\''>\r\n        Jobs per page:\r\n '' +\r\n''   </div>\r\n'')", span="81-83"];
m133_5 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="Write(count == _pager.RecordsPerPage ? ''active'' : null)", span="46-46"];
m133_7 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="Write(_pager.RecordsPerPageUrl(count))", span="56-56"];
m133_9 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="Write(count)", span="66-66"];
m133_6 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="WriteLiteral(''\'' \r\n                   href=\'''')", span="51-51"];
m133_8 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="WriteLiteral(''\''>'')", span="61-61"];
m133_10 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="WriteLiteral(''</a>    \r\n'')", span="71-71"];
m133_12 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs", label="Exit HangFire.Web.Pages.PerPageSelector.Execute()", span="23-23"];
m133_16 [file="_PerPageSelector.generated.cs", label="HangFire.Web.Pages.PerPageSelector", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_7 -> m1_11  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_7 -> m1_14  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_19  [key=2, style=dotted];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_20  [key=2, style=dotted];
m1_9 -> m1_13  [color=darkseagreen4, key=1, label=method, style=dashed];
m1_9 -> m1_14  [color=darkseagreen4, key=1, label=method, style=dashed];
m1_11 -> m1_17  [key=0, style=solid];
m1_11 -> m1_21  [key=2, style=dotted];
m1_11 -> m1_22  [key=2, style=dotted];
m1_11 -> m1_23  [key=2, style=dotted];
m1_11 -> m1_24  [key=2, style=dotted];
m1_11 -> m1_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_14 -> m1_17  [key=0, style=solid];
m1_14 -> m1_26  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_25  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_19  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_27  [key=2, style=dotted];
m1_17 -> m1_6  [color=blue, key=0, style=bold];
m1_20 -> m1_87  [key=0, style=solid];
m1_20 -> m1_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_20 -> m1_91  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m1_20 -> m1_98  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_108  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_88  [key=0, style=solid];
m1_89 -> m1_109  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_88  [key=0, style=solid];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_100  [color=darkseagreen4, key=1, label=actualType, style=dashed];
m1_98 -> m1_101  [color=darkseagreen4, key=1, label=actualType, style=dashed];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_106  [key=0, style=solid];
m1_88 -> m1_90  [color=darkseagreen4, key=1, label=methodCandidate, style=dashed];
m1_88 -> m1_105  [color=darkseagreen4, key=1, label=methodCandidate, style=dashed];
m1_106 -> m1_107  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_34  [key=2, style=dotted];
m1_90 -> m1_95  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_90 -> m1_96  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_105 -> m1_107  [key=0, style=solid];
m1_105 -> m1_55  [key=2, style=dotted];
m1_105 -> m1_112  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_104  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_104  [color=darkseagreen4, key=1, label=parameterTypesMatched, style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_110  [key=2, style=dotted];
m1_93 -> m1_100  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m1_93 -> m1_105  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_88  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_96  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_94 -> m1_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_94 -> m1_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_100 -> m1_95  [key=0, style=solid];
m1_100 -> m1_54  [key=2, style=dotted];
m1_103 -> m1_95  [key=0, style=solid];
m1_103 -> m1_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m1_97 -> m1_101  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_101  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_95  [key=0, style=solid];
m1_101 -> m1_111  [key=2, style=dotted];
m1_102 -> m1_104  [key=0, style=solid];
m1_107 -> m1_20  [color=blue, key=0, style=bold];
m1_25 -> m1_56  [key=0, style=solid];
m1_25 -> m1_57  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_25 -> m1_61  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_34  [key=2, style=dotted];
m1_56 -> m1_59  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_56 -> m1_60  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_52  [key=2, style=dotted];
m1_57 -> m1_66  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_57 -> m1_68  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_65  [color=darkseagreen4, key=1, label=argument, style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_68  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_63  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m1_60 -> m1_64  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m1_60 -> m1_65  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_58 -> m1_61  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_58 -> m1_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_54  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_55  [key=2, style=dotted];
m1_67 -> m1_59  [key=0, style=solid];
m1_67 -> m1_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=0, style=solid];
m1_63 -> m1_70  [key=2, style=dotted];
m1_64 -> m1_66  [key=0, style=solid];
m1_64 -> m1_71  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_72  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_69 -> m1_25  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_72 -> m1_76  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_72 -> m1_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_72 -> m1_78  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_72 -> m1_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_82  [key=0, style=solid];
m1_74 -> m1_84  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_78  [key=0, style=solid];
m1_77 -> m1_82  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_85  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_82  [key=0, style=solid];
m1_79 -> m1_86  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_80 -> m1_81  [key=0, style=solid];
m1_81 -> m1_83  [key=0, style=solid];
m1_83 -> m1_72  [color=blue, key=0, style=bold];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_0  [key=2, style=dotted];
m1_32 -> m1_34  [key=2, style=dotted];
m1_32 -> m1_22  [key=2, style=dotted];
m1_32 -> m1_35  [key=2, style=dotted];
m1_32 -> m1_36  [key=2, style=dotted];
m1_32 -> m1_37  [key=2, style=dotted];
m1_32 -> m1_38  [key=2, style=dotted];
m1_32 -> m1_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_33 -> m1_31  [color=blue, key=0, style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_28  [color=blue, key=0, style=bold];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_39  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_37 -> m1_42  [key=0, style=solid];
m1_37 -> m1_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyCollection<object>", style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_52  [key=2, style=dotted];
m1_42 -> m1_49  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m1_42 -> m1_50  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m1_42 -> m1_6  [color=darkorchid, key=3, label="Parameter variable long retryCount", style=bold];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_50  [key=0, style=solid];
m1_43 -> m1_45  [color=darkseagreen4, key=1, label=argument, style=dashed];
m1_43 -> m1_46  [color=darkseagreen4, key=1, label=argument, style=dashed];
m1_43 -> m1_47  [color=darkseagreen4, key=1, label=argument, style=dashed];
m1_43 -> m1_48  [color=darkseagreen4, key=1, label=argument, style=dashed];
m1_49 -> m1_43  [key=0, style=solid];
m1_49 -> m1_54  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_55  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_49  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_49  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=0, style=solid];
m1_47 -> m1_53  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_38  [key=2, style=dotted];
m1_51 -> m1_37  [color=blue, key=0, style=bold];
m1_113 -> m1_1  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m1_113 -> m1_2  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m1_113 -> m1_3  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m1_113 -> m1_4  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m1_113 -> m1_7  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m1_113 -> m1_8  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m1_113 -> m1_9  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m1_113 -> m1_11  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m1_113 -> m1_12  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m2_7 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_14  [key=2, style=dotted];
m2_7 -> m2_15  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_0  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_7  [key=2, style=dotted];
m2_9 -> m2_12  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_13  [key=2, style=dotted];
m2_11 -> m2_8  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_7  [key=2, style=dotted];
m2_15 -> m2_22  [key=2, style=dotted];
m2_15 -> m2_17  [color=darkseagreen4, key=1, label=state, style=dashed];
m2_15 -> m2_20  [color=darkseagreen4, key=1, label=state, style=dashed];
m2_22 -> m2_13  [key=2, style=dotted];
m2_22 -> m2_24  [key=0, style=solid];
m2_22 -> m2_12  [key=2, style=dotted];
m2_16 -> m2_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m2_16 -> m2_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m2_16 -> m2_23  [key=2, style=dotted];
m2_16 -> m2_19  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m2_23 -> m2_13  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_14  [key=2, style=dotted];
m2_23 -> m2_15  [key=2, style=dotted];
m2_20 -> m2_22  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_9  [key=2, style=dotted];
m2_20 -> m2_25  [key=2, style=dotted];
m2_20 -> m2_13  [key=2, style=dotted];
m2_17 -> m2_23  [color=darkseagreen4, key=1, label=time, style=dashed];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_24  [key=2, style=dotted];
m2_17 -> m2_13  [key=2, style=dotted];
m2_19 -> m2_23  [key=0, style=solid];
m2_19 -> m2_10  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_13  [key=2, style=dotted];
m2_21 -> m2_23  [key=0, style=solid];
m2_21 -> m2_11  [key=2, style=dotted];
m2_21 -> m2_14  [color=blue, key=0, style=bold];
m2_18 -> m2_20  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_9  [key=2, style=dotted];
m2_18 -> m2_13  [key=2, style=dotted];
m2_24 -> m2_16  [color=blue, key=0, style=bold];
m2_14 -> m2_15  [key=0, style=solid];
m2_3 -> m2_7  [key=0, style=solid];
m2_3 -> m2_10  [key=2, style=dotted];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_6 -> m2_13  [key=2, style=dotted];
m2_6 -> m2_8  [key=0, style=solid];
m2_6 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m2_4 -> m2_6  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_9  [key=2, style=dotted];
m2_1 -> m2_7  [color=darkseagreen4, key=1, label=time, style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_7  [key=0, style=solid];
m2_5 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_2 -> m2_4  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [key=0, style=solid];
m2_52 -> m2_13  [key=2, style=dotted];
m2_52 -> m2_37  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_53 -> m2_38  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_51  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_57 -> m2_58  [color=green, key=0, style=solid];
m2_57 -> m2_50  [color=green, key=2, style=dotted];
m2_56 -> m2_57  [color=green, key=0, style=solid];
m2_56 -> m2_13  [key=2, style=dotted];
m2_56 -> m2_37  [key=2, style=dotted];
m2_58 -> m2_55  [color=blue, key=0, style=bold];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_13  [key=2, style=dotted];
m2_47 -> m2_37  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_48 -> m2_50  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_46  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_13  [key=2, style=dotted];
m2_32 -> m2_37  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [color=darkseagreen4, key=1, label=checkedTimestamp, style=dashed];
m2_33 -> m2_38  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_39  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_40  [key=2, style=dotted];
m2_35 -> m2_41  [key=2, style=dotted];
m2_36 -> m2_31  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [color=green, key=0, style=solid];
m2_43 -> m2_44  [color=green, key=0, style=solid];
m2_43 -> m2_13  [color=green, key=2, style=dotted];
m2_43 -> m2_37  [color=green, key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_38  [key=2, style=dotted];
m2_45 -> m2_42  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_7  [key=2, style=dotted];
m2_27 -> m2_12  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_29 -> m2_26  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_6  [key=2, style=dotted];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [key=2, style=dotted];
m3_9 -> m3_7  [color=blue, key=0, style=bold];
m3_11 -> m3_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m3_11 -> m3_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m3_11 -> m3_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m3_11 -> m3_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m5_58 -> m5_75  [color=green, key=0, style=solid];
m5_75 -> m5_76  [color=green, key=0, style=solid];
m5_75 -> m5_78  [color=green, key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_79  [key=2, style=dotted];
m5_76 -> m5_80  [key=2, style=dotted];
m5_76 -> m5_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_77 -> m5_58  [color=blue, key=0, style=bold];
m5_45 -> m5_4  [color=darkorchid, key=3, label="Field variable HangFire.BackgroundJobServerOptions _options", style=bold];
m5_56 -> m5_60  [key=0, style=solid];
m5_56 -> m5_62  [color=crimson, key=0, style=bold];
m5_56 -> m5_63  [color=crimson, key=0, style=bold];
m5_56 -> m5_64  [color=crimson, key=0, style=bold];
m5_56 -> m5_65  [color=crimson, key=0, style=bold];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_67  [key=2, style=dotted];
m5_60 -> m5_65  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_68  [key=2, style=dotted];
m5_61 -> m5_69  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_70  [key=2, style=dotted];
m5_62 -> m5_71  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_70  [key=2, style=dotted];
m5_63 -> m5_72  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_70  [key=2, style=dotted];
m5_64 -> m5_73  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_70  [key=2, style=dotted];
m5_65 -> m5_74  [key=2, style=dotted];
m5_66 -> m5_56  [color=blue, key=0, style=bold];
m5_18 -> m5_40  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_44  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_45  [key=2, style=dotted];
m5_41 -> m5_46  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_47  [key=2, style=dotted];
m5_42 -> m5_48  [key=2, style=dotted];
m5_43 -> m5_18  [color=blue, key=0, style=bold];
m5_4 -> m5_9  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m5_4 -> m5_10  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_7  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_15  [key=2, style=dotted];
m5_11 -> m5_16  [key=2, style=dotted];
m5_11 -> m5_17  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_18  [key=2, style=dotted];
m5_7 -> m5_9  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_5 -> m5_7  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_8 -> m5_13  [key=0, style=solid];
m5_8 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_13  [key=0, style=solid];
m5_6 -> m5_14  [key=2, style=dotted];
m5_13 -> m5_4  [color=blue, key=0, style=bold];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_34  [key=2, style=dotted];
m5_33 -> m5_31  [color=blue, key=0, style=bold];
m5_81 -> m5_82  [key=0, style=solid];
m5_82 -> m5_70  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_83 -> m5_81  [color=blue, key=0, style=bold];
m5_74 -> m5_18  [color=darkorchid, key=3, label="Field variable HangFire.Server.IServerSupervisor _bootstrapSupervisor", style=bold];
m5_19 -> m5_20  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_27  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_28  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_29  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_30  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_26  [key=2, style=dotted];
m5_25 -> m5_19  [color=blue, key=0, style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_39  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_26  [key=2, style=dotted];
m5_38 -> m5_35  [color=blue, key=0, style=bold];
m5_49 -> m5_50  [key=0, style=solid];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_56  [key=2, style=dotted];
m5_51 -> m5_57  [key=2, style=dotted];
m5_52 -> m5_58  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_57  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_52  [color=darkseagreen4, key=1, label=supervisors, style=dashed];
m5_50 -> m5_55  [key=2, style=dotted];
m5_50 -> m5_53  [color=darkseagreen4, key=1, label=supervisors, style=dashed];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_59  [key=2, style=dotted];
m5_54 -> m5_49  [color=blue, key=0, style=bold];
m5_71 -> m5_4  [color=darkorchid, key=3, label="Field variable HangFire.JobStorage _storage", style=bold];
m5_84 -> m5_75  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_9  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_11  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_12  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_21  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_22  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_23  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_24  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_32  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_36  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_40  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_41  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_42  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_51  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_52  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_60  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_61  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_62  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_63  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_64  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_84 -> m5_65  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_7  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=2, style=dotted];
m6_6 -> m6_0  [color=blue, key=0, style=bold];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_10  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m6_8 -> m6_11  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m6_8 -> m6_12  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m6_8 -> m6_13  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_15  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_15  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_16  [key=2, style=dotted];
m6_11 -> m6_17  [key=2, style=dotted];
m6_11 -> m6_15  [key=2, style=dotted];
m6_11 -> m6_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_15  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_14 -> m6_8  [color=blue, key=0, style=bold];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_18  [color=blue, key=0, style=bold];
m6_21 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m6_21 -> m6_2  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m6_21 -> m6_3  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m6_21 -> m6_4  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m6_21 -> m6_5  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m6_21 -> m6_10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m6_21 -> m6_11  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m6_21 -> m6_12  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m6_21 -> m6_13  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m7_46 -> m7_47  [key=0, style=solid];
m7_49 -> m7_5  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_51  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_9  [key=2, style=dotted];
m7_50 -> m7_46  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [color=red, key=0, style=solid];
m7_5 -> m7_13  [color=red, key=2, style=dotted];
m7_5 -> m7_9  [color=red, key=1, label=jobIds, style=dashed];
m7_32 -> m7_33  [key=0, style=solid];
m7_34 -> m7_35  [color=green, key=0, style=solid];
m7_34 -> m7_38  [color=green, key=2, style=dotted];
m7_33 -> m7_34  [color=green, key=0, style=solid];
m7_33 -> m7_23  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_39  [key=2, style=dotted];
m7_35 -> m7_40  [key=2, style=dotted];
m7_35 -> m7_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_41  [key=2, style=dotted];
m7_37 -> m7_32  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [color=red, key=0, style=solid];
m7_3 -> m7_4  [color=red, key=0, style=solid];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_6 -> m7_7  [color=red, key=0, style=solid];
m7_6 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [color=red, key=0, style=solid];
m7_7 -> m7_8  [color=red, key=0, style=solid];
m7_7 -> m7_9  [key=2, style=dotted];
m7_8 -> m7_12  [key=0, style=solid];
m7_8 -> m7_6  [color=blue, key=0, style=bold];
m7_10 -> m7_9  [key=0, style=solid];
m7_10 -> m7_14  [key=2, style=dotted];
m7_10 -> m7_11  [color=green, key=0, style=solid];
m7_11 -> m7_12  [color=green, key=0, style=solid];
m7_11 -> m7_4  [color=green, key=2, style=dotted];
m7_11 -> m7_14  [color=green, key=1, label="lambda expression", style=dashed];
m7_12 -> m7_3  [color=blue, key=0, style=bold];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_12 -> m7_5  [color=green, key=2, style=dotted];
m7_13 -> m7_10  [color=blue, key=0, style=bold];
m7_23 -> m7_52  [key=0, style=solid];
m7_52 -> m7_17  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_54  [key=2, style=dotted];
m7_52 -> m7_55  [key=2, style=dotted];
m7_53 -> m7_23  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_2 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_14 -> m7_15  [color=green, key=0, style=solid];
m7_15 -> m7_16  [color=green, key=0, style=solid];
m7_15 -> m7_17  [color=green, key=2, style=dotted];
m7_15 -> m7_1  [color=darkseagreen4, key=1, label="HangFire.Web.BatchCommandHandler", style=dashed];
m7_15 -> m7_7  [color=red, key=1, label="HangFire.Web.BatchCommandHandler", style=dashed];
m7_15 -> m7_10  [color=darkseagreen4, key=1, label="HangFire.Web.BatchCommandHandler", style=dashed];
m7_15 -> m7_11  [color=red, key=1, label="HangFire.Web.BatchCommandHandler", style=dashed];
m7_16 -> m7_14  [color=blue, key=0, style=bold];
m7_42 -> m7_43  [key=0, style=solid];
m7_44 -> m7_42  [color=blue, key=0, style=bold];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_45  [key=2, style=dotted];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_27 -> m7_28  [color=green, key=0, style=solid];
m7_27 -> m7_23  [color=green, key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_31  [key=2, style=dotted];
m7_29 -> m7_25  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_30 -> m7_26  [color=blue, key=0, style=bold];
m7_18 -> m7_19  [key=0, style=solid];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_25  [color=green, key=2, style=dotted];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_24  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_23  [key=2, style=dotted];
m7_22 -> m7_18  [color=blue, key=0, style=bold];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_8  [key=0, style=solid];
m10_7 -> m10_6  [key=0, style=solid];
m10_7 -> m10_9  [key=2, style=dotted];
m10_7 -> m10_10  [key=2, style=dotted];
m10_8 -> m10_5  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_0  [color=blue, key=0, style=bold];
m10_11 -> m10_1  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m10_11 -> m10_2  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m10_11 -> m10_3  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m10_11 -> m10_6  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m10_11 -> m10_7  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m11_0 -> m11_1  [color=green, key=0, style=solid];
m11_1 -> m11_2  [color=green, key=0, style=solid];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_3 -> m11_4  [color=green, key=0, style=solid];
m11_4 -> m11_5  [color=green, key=0, style=solid];
m11_4 -> m11_6  [color=green, key=0, style=solid];
m11_5 -> m11_9  [color=green, key=0, style=solid];
m11_5 -> m11_10  [color=green, key=2, style=dotted];
m11_6 -> m11_7  [color=green, key=0, style=solid];
m11_6 -> m11_8  [color=green, key=0, style=solid];
m11_6 -> m11_11  [color=green, key=2, style=dotted];
m11_7 -> m11_9  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_9 -> m11_3  [color=blue, key=0, style=bold];
m11_12 -> m11_1  [color=green, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m11_12 -> m11_4  [color=green, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m11_12 -> m11_6  [color=green, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m11_12 -> m11_7  [color=darkseagreen4, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m11_12 -> m11_8  [color=darkseagreen4, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m14_25 -> m14_3  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IDictionary<System.DateTime, long> failed", style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_25  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_26  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_18  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m14_3 -> m14_20  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m14_3 -> m14_3  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IDictionary<System.DateTime, long> succeeded", style=bold];
m14_4 -> m14_5  [color=red, key=0, style=solid];
m14_4 -> m14_18  [color=darkseagreen4, key=1, label=failed, style=dashed];
m14_4 -> m14_22  [color=darkseagreen4, key=1, label=failed, style=dashed];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_24  [key=0, style=solid];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_34  [key=2, style=dotted];
m14_20 -> m14_35  [key=2, style=dotted];
m14_5 -> m14_6  [color=red, key=0, style=solid];
m14_5 -> m14_7  [color=red, key=1, label=period, style=dashed];
m14_5 -> m14_10  [color=red, key=1, label=period, style=dashed];
m14_5 -> m14_14  [color=red, key=1, label=period, style=dashed];
m14_5 -> m14_16  [color=red, key=1, label=period, style=dashed];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_34  [key=2, style=dotted];
m14_22 -> m14_35  [key=2, style=dotted];
m14_6 -> m14_7  [color=red, key=0, style=solid];
m14_6 -> m14_27  [color=red, key=2, style=dotted];
m14_6 -> m14_8  [color=red, key=1, label=monitor, style=dashed];
m14_6 -> m14_9  [color=red, key=1, label=monitor, style=dashed];
m14_6 -> m14_11  [color=red, key=1, label=monitor, style=dashed];
m14_6 -> m14_12  [color=red, key=1, label=monitor, style=dashed];
m14_7 -> m14_8  [color=red, key=0, style=solid];
m14_7 -> m14_10  [color=red, key=0, style=solid];
m14_7 -> m14_28  [color=red, key=2, style=dotted];
m14_10 -> m14_11  [color=red, key=0, style=solid];
m14_10 -> m14_13  [color=red, key=0, style=solid];
m14_10 -> m14_28  [color=red, key=2, style=dotted];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_28  [key=2, style=dotted];
m14_14 -> m14_33  [key=2, style=dotted];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_28  [key=2, style=dotted];
m14_16 -> m14_33  [key=2, style=dotted];
m14_8 -> m14_9  [color=red, key=0, style=solid];
m14_8 -> m14_29  [color=red, key=2, style=dotted];
m14_8 -> m14_18  [color=red, key=1, label=succeeded, style=dashed];
m14_8 -> m14_20  [color=red, key=1, label=succeeded, style=dashed];
m14_9 -> m14_13  [color=red, key=0, style=solid];
m14_9 -> m14_30  [color=red, key=2, style=dotted];
m14_9 -> m14_18  [color=red, key=1, label=failed, style=dashed];
m14_9 -> m14_22  [color=red, key=1, label=failed, style=dashed];
m14_11 -> m14_12  [color=red, key=0, style=solid];
m14_11 -> m14_31  [color=red, key=2, style=dotted];
m14_11 -> m14_18  [color=red, key=1, label=succeeded, style=dashed];
m14_11 -> m14_20  [color=red, key=1, label=succeeded, style=dashed];
m14_12 -> m14_13  [color=red, key=0, style=solid];
m14_12 -> m14_32  [color=red, key=2, style=dotted];
m14_12 -> m14_18  [color=red, key=1, label=failed, style=dashed];
m14_12 -> m14_22  [color=red, key=1, label=failed, style=dashed];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_25  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_25  [key=2, style=dotted];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_25  [key=2, style=dotted];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_25  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_25  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_25  [key=2, style=dotted];
m14_24 -> m14_0  [color=blue, key=0, style=bold];
m14_36 -> m14_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_5  [color=red, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m14_36 -> m14_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m17_29 -> m17_33  [key=0, style=solid];
m17_29 -> m17_34  [key=2, style=dotted];
m17_29 -> m17_37  [key=2, style=dotted];
m17_29 -> m17_38  [key=2, style=dotted];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_10  [key=2, style=dotted];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_24 -> m17_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_24 -> m17_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_24 -> m17_16  [key=2, style=dotted];
m17_24 -> m17_27  [key=2, style=dotted];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_34  [key=2, style=dotted];
m17_25 -> m17_35  [key=2, style=dotted];
m17_25 -> m17_27  [color=darkseagreen4, key=1, label=flags, style=dashed];
m17_25 -> m17_16  [key=2, style=dotted];
m17_31 -> m17_32  [color=green, key=0, style=solid];
m17_31 -> m17_41  [key=2, style=dotted];
m17_31 -> m17_4  [key=2, style=dotted];
m17_32 -> m17_33  [color=green, key=0, style=solid];
m17_32 -> m17_42  [key=2, style=dotted];
m17_32 -> m17_35  [color=green, key=2, style=dotted];
m17_32 -> m17_16  [color=green, key=2, style=dotted];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_28  [color=red, key=1, label=fetched, style=dashed];
m17_26 -> m17_30  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m17_26 -> m17_22  [color=blue, key=0, style=bold];
m17_27 -> m17_28  [color=red, key=0, style=solid];
m17_27 -> m17_30  [color=darkseagreen4, key=1, label="@checked", style=dashed];
m17_28 -> m17_29  [color=red, key=0, style=solid];
m17_28 -> m17_30  [color=red, key=0, style=solid];
m17_28 -> m17_36  [color=red, key=2, style=dotted];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_33  [key=0, style=solid];
m17_30 -> m17_39  [key=2, style=dotted];
m17_30 -> m17_40  [key=2, style=dotted];
m17_30 -> m17_32  [color=green, key=1, label=data, style=dashed];
m17_30 -> m17_34  [key=2, style=dotted];
m17_33 -> m17_24  [color=blue, key=0, style=bold];
m17_33 -> m17_28  [color=blue, key=0, style=bold];
m17_20 -> m17_16  [key=2, style=dotted];
m17_20 -> m17_21  [key=0, style=solid];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_4  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_5  [key=2, style=dotted];
m17_2 -> m17_4  [key=2, style=dotted];
m17_3 -> m17_0  [color=blue, key=0, style=bold];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_10  [color=blue, key=0, style=bold];
m17_19 -> m17_20  [key=0, style=solid];
m17_18 -> m17_10  [key=2, style=dotted];
m17_18 -> m17_19  [key=0, style=solid];
m17_21 -> m17_17  [color=blue, key=0, style=bold];
m17_37 -> m17_10  [color=blue, key=0, style=bold];
m17_5 -> m17_6  [key=0, style=solid];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_62 -> m17_64  [color=darkorchid, key=3, label="method methodReturn bool TimedOutByCheckedTime", style=bold];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_65  [key=0, style=solid];
m17_63 -> m17_60  [key=2, style=dotted];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_60  [key=2, style=dotted];
m17_65 -> m17_61  [key=2, style=dotted];
m17_64 -> m17_66  [key=0, style=solid];
m17_66 -> m17_62  [color=blue, key=0, style=bold];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_36  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_18  [key=2, style=dotted];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_17  [key=0, style=solid];
m17_12 -> m17_14  [color=darkseagreen4, key=1, label=queue, style=dashed];
m17_12 -> m17_16  [color=darkseagreen4, key=1, label=queue, style=dashed];
m17_12 -> m17_10  [key=2, style=dotted];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_19  [key=2, style=dotted];
m17_13 -> m17_20  [key=2, style=dotted];
m17_13 -> m17_21  [key=2, style=dotted];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_19  [key=2, style=dotted];
m17_14 -> m17_22  [key=2, style=dotted];
m17_14 -> m17_16  [key=2, style=dotted];
m17_16 -> m17_15  [key=0, style=solid];
m17_16 -> m17_23  [key=2, style=dotted];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_12  [key=0, style=solid];
m17_15 -> m17_11  [color=blue, key=0, style=bold];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_10  [key=2, style=dotted];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_9  [key=2, style=dotted];
m17_8 -> m17_6  [color=blue, key=0, style=bold];
m17_8 -> m17_4  [key=2, style=dotted];
m17_8 -> m17_9  [key=0, style=solid];
m17_22 -> m17_23  [key=0, style=solid];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_25  [color=darkseagreen4, key=1, label=state, style=dashed];
m17_23 -> m17_10  [key=2, style=dotted];
m17_67 -> m17_68  [key=0, style=solid];
m17_68 -> m17_69  [key=0, style=solid];
m17_68 -> m17_71  [key=0, style=solid];
m17_68 -> m17_73  [key=0, style=solid];
m17_69 -> m17_70  [key=0, style=solid];
m17_69 -> m17_10  [key=2, style=dotted];
m17_71 -> m17_72  [key=0, style=solid];
m17_70 -> m17_68  [key=0, style=solid];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_73  [key=0, style=solid];
m17_70 -> m17_74  [key=2, style=dotted];
m17_72 -> m17_73  [key=0, style=solid];
m17_72 -> m17_75  [key=2, style=dotted];
m17_73 -> m17_67  [color=blue, key=0, style=bold];
m17_9 -> m17_5  [color=blue, key=0, style=bold];
m17_41 -> m17_43  [key=0, style=solid];
m17_41 -> m17_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_41 -> m17_24  [color=darkorchid, key=3, label="Parameter variable string jobId", style=bold];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_34  [key=2, style=dotted];
m17_43 -> m17_51  [key=2, style=dotted];
m17_43 -> m17_45  [color=darkseagreen4, key=1, label=jobType, style=dashed];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_56  [key=2, style=dotted];
m17_44 -> m17_45  [key=0, style=solid];
m17_45 -> m17_46  [key=0, style=solid];
m17_45 -> m17_52  [key=2, style=dotted];
m17_45 -> m17_53  [key=2, style=dotted];
m17_46 -> m17_47  [key=0, style=solid];
m17_46 -> m17_49  [key=0, style=solid];
m17_46 -> m17_54  [key=2, style=dotted];
m17_47 -> m17_48  [key=0, style=solid];
m17_48 -> m17_49  [key=0, style=solid];
m17_48 -> m17_55  [key=2, style=dotted];
m17_50 -> m17_41  [color=blue, key=0, style=bold];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_38  [key=2, style=dotted];
m17_57 -> m17_58  [key=0, style=solid];
m17_58 -> m17_59  [key=0, style=solid];
m17_58 -> m17_60  [key=2, style=dotted];
m17_58 -> m17_61  [key=2, style=dotted];
m17_59 -> m17_57  [color=blue, key=0, style=bold];
m17_76 -> m17_77  [key=0, style=solid];
m17_76 -> m17_78  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_80  [key=2, style=dotted];
m17_78 -> m17_79  [key=0, style=solid];
m17_78 -> m17_81  [key=2, style=dotted];
m17_79 -> m17_76  [color=blue, key=0, style=bold];
m17_82 -> m17_1  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_2  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_7  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_11  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_13  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_14  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_16  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_25  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_29  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_30  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_31  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_32  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_43  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_49  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_69  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_70  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_72  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m17_82 -> m17_77  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m18_6 -> m18_7  [color=green, key=0, style=solid];
m18_7 -> m18_8  [color=green, key=0, style=solid];
m18_7 -> m18_10  [color=green, key=2, style=dotted];
m18_7 -> m18_12  [color=green, key=1, label="lambda expression", style=dashed];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_11  [key=2, style=dotted];
m18_9 -> m18_6  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_4  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_5  [key=2, style=dotted];
m18_3 -> m18_0  [color=blue, key=0, style=bold];
m18_35 -> m18_36  [color=green, key=0, style=solid];
m18_36 -> m18_37  [color=green, key=0, style=solid];
m18_36 -> m18_40  [color=green, key=2, style=dotted];
m18_36 -> m18_10  [color=green, key=2, style=dotted];
m18_36 -> m18_42  [color=green, key=1, label="lambda expression", style=dashed];
m18_37 -> m18_38  [color=green, key=0, style=solid];
m18_37 -> m18_46  [color=green, key=1, label=task, style=dashed];
m18_37 -> m18_21  [key=2, style=dotted];
m18_38 -> m18_39  [color=green, key=0, style=solid];
m18_38 -> m18_41  [color=green, key=2, style=dotted];
m18_38 -> m18_45  [color=green, key=1, label="lambda expression", style=dashed];
m18_39 -> m18_35  [color=blue, key=0, style=bold];
m18_45 -> m18_46  [color=green, key=0, style=solid];
m18_12 -> m18_13  [key=0, style=solid];
m18_31 -> m18_32  [color=green, key=0, style=solid];
m18_32 -> m18_33  [color=green, key=0, style=solid];
m18_32 -> m18_34  [color=green, key=2, style=dotted];
m18_33 -> m18_31  [color=blue, key=0, style=bold];
m18_42 -> m18_43  [color=green, key=0, style=solid];
m18_46 -> m18_47  [color=green, key=0, style=solid];
m18_46 -> m18_29  [color=green, key=2, style=dotted];
m18_47 -> m18_45  [color=blue, key=0, style=bold];
m18_43 -> m18_44  [color=green, key=0, style=solid];
m18_43 -> m18_10  [color=green, key=2, style=dotted];
m18_43 -> m18_34  [color=green, key=2, style=dotted];
m18_44 -> m18_42  [color=blue, key=0, style=bold];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_15  [key=2, style=dotted];
m18_14 -> m18_12  [color=blue, key=0, style=bold];
m18_24 -> m18_25  [color=green, key=0, style=solid];
m18_25 -> m18_26  [color=green, key=0, style=solid];
m18_25 -> m18_21  [color=green, key=2, style=dotted];
m18_26 -> m18_27  [color=green, key=0, style=solid];
m18_26 -> m18_29  [key=2, style=dotted];
m18_27 -> m18_28  [color=green, key=0, style=solid];
m18_27 -> m18_30  [color=green, key=2, style=dotted];
m18_27 -> m18_31  [color=green, key=1, label="lambda expression", style=dashed];
m18_28 -> m18_24  [color=blue, key=0, style=bold];
m18_16 -> m18_17  [color=green, key=0, style=solid];
m18_17 -> m18_18  [color=green, key=0, style=solid];
m18_17 -> m18_21  [color=green, key=2, style=dotted];
m18_17 -> m18_19  [color=green, key=1, label=task, style=dashed];
m18_18 -> m18_19  [color=green, key=0, style=solid];
m18_18 -> m18_22  [color=green, key=2, style=dotted];
m18_18 -> m18_23  [color=green, key=2, style=dotted];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_22  [key=2, style=dotted];
m18_19 -> m18_23  [key=2, style=dotted];
m18_20 -> m18_16  [color=blue, key=0, style=bold];
m18_48 -> m18_7  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_48 -> m18_17  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_48 -> m18_25  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_48 -> m18_27  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_48 -> m18_32  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_48 -> m18_36  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_48 -> m18_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_48 -> m18_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_48 -> m18_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_48 -> m18_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m18_49 -> m18_46  [color=green, key=1, label=task, style=dashed];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_2 -> m19_0  [color=blue, key=0, style=bold];
m19_3 -> m19_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_239 -> m20_240  [key=0, style=solid];
m20_239 -> m20_243  [color=darkseagreen4, key=1, label=Table, style=dashed];
m20_239 -> m20_244  [color=darkseagreen4, key=1, label=Table, style=dashed];
m20_240 -> m20_241  [key=0, style=solid];
m20_240 -> m20_47  [key=2, style=dotted];
m20_240 -> m20_247  [key=2, style=dotted];
m20_243 -> m20_244  [key=0, style=solid];
m20_243 -> m20_246  [key=0, style=solid];
m20_243 -> m20_232  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m20_244 -> m20_245  [key=0, style=solid];
m20_244 -> m20_97  [key=2, style=dotted];
m20_241 -> m20_242  [key=0, style=solid];
m20_241 -> m20_248  [key=2, style=dotted];
m20_241 -> m20_249  [key=2, style=dotted];
m20_241 -> m20_244  [color=darkseagreen4, key=1, label=history, style=dashed];
m20_242 -> m20_243  [key=0, style=solid];
m20_242 -> m20_244  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_242 -> m20_245  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_245 -> m20_243  [key=0, style=solid];
m20_245 -> m20_245  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_246 -> m20_239  [color=blue, key=0, style=bold];
m20_153 -> m20_154  [key=0, style=solid];
m20_154 -> m20_155  [key=0, style=solid];
m20_154 -> m20_159  [key=2, style=dotted];
m20_155 -> m20_156  [key=0, style=solid];
m20_155 -> m20_160  [key=2, style=dotted];
m20_155 -> m20_157  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m20_156 -> m20_157  [key=0, style=solid];
m20_156 -> m20_161  [key=2, style=dotted];
m20_156 -> m20_109  [key=2, style=dotted];
m20_157 -> m20_158  [key=0, style=solid];
m20_157 -> m20_161  [key=2, style=dotted];
m20_157 -> m20_109  [key=2, style=dotted];
m20_158 -> m20_153  [color=blue, key=0, style=bold];
m20_137 -> m20_138  [key=0, style=solid];
m20_138 -> m20_139  [key=0, style=solid];
m20_138 -> m20_141  [key=2, style=dotted];
m20_138 -> m20_97  [key=2, style=dotted];
m20_139 -> m20_140  [key=0, style=solid];
m20_139 -> m20_142  [key=2, style=dotted];
m20_139 -> m20_109  [key=2, style=dotted];
m20_140 -> m20_137  [color=blue, key=0, style=bold];
m20_56 -> m20_57  [color=red, key=0, style=solid];
m20_90 -> m20_91  [key=0, style=solid];
m20_90 -> m20_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_91 -> m20_92  [key=0, style=solid];
m20_91 -> m20_77  [key=2, style=dotted];
m20_91 -> m20_78  [key=2, style=dotted];
m20_92 -> m20_93  [key=0, style=solid];
m20_92 -> m20_89  [key=2, style=dotted];
m20_93 -> m20_90  [color=blue, key=0, style=bold];
m20_51 -> m20_52  [color=red, key=0, style=solid];
m20_53 -> m20_54  [color=red, key=0, style=solid];
m20_19 -> m20_20  [color=red, key=0, style=solid];
m20_19 -> m20_48  [key=0, style=solid];
m20_19 -> m20_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_20 -> m20_21  [color=red, key=0, style=solid];
m20_20 -> m20_22  [color=red, key=2, style=dotted];
m20_20 -> m20_51  [key=2, style=dotted];
m20_21 -> m20_19  [color=blue, key=0, style=bold];
m20_21 -> m20_22  [color=green, key=0, style=solid];
m20_21 -> m20_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_21 -> m20_61  [key=2, style=dotted];
m20_21 -> m20_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_162 -> m20_163  [key=0, style=solid];
m20_163 -> m20_164  [key=0, style=solid];
m20_163 -> m20_142  [key=2, style=dotted];
m20_163 -> m20_109  [key=2, style=dotted];
m20_164 -> m20_165  [key=0, style=solid];
m20_164 -> m20_159  [key=2, style=dotted];
m20_165 -> m20_166  [key=0, style=solid];
m20_165 -> m20_160  [key=2, style=dotted];
m20_165 -> m20_167  [color=red, key=1, label=timestamp, style=dashed];
m20_166 -> m20_167  [color=red, key=0, style=solid];
m20_166 -> m20_18  [key=2, style=dotted];
m20_166 -> m20_109  [key=2, style=dotted];
m20_167 -> m20_168  [color=red, key=0, style=solid];
m20_167 -> m20_18  [color=red, key=2, style=dotted];
m20_167 -> m20_109  [color=red, key=2, style=dotted];
m20_168 -> m20_162  [color=blue, key=0, style=bold];
m20_64 -> m20_65  [key=0, style=solid];
m20_64 -> m20_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_65 -> m20_66  [key=0, style=solid];
m20_65 -> m20_47  [key=2, style=dotted];
m20_65 -> m20_48  [key=2, style=dotted];
m20_66 -> m20_67  [key=0, style=solid];
m20_66 -> m20_68  [key=2, style=dotted];
m20_66 -> m20_63  [key=2, style=dotted];
m20_67 -> m20_64  [color=blue, key=0, style=bold];
m20_48 -> m20_49  [key=0, style=solid];
m20_48 -> m20_51  [key=2, style=dotted];
m20_52 -> m20_50  [color=blue, key=0, style=bold];
m20_169 -> m20_170  [key=0, style=solid];
m20_170 -> m20_171  [key=0, style=solid];
m20_170 -> m20_142  [key=2, style=dotted];
m20_170 -> m20_152  [key=2, style=dotted];
m20_171 -> m20_169  [color=blue, key=0, style=bold];
m20_70 -> m20_71  [key=0, style=solid];
m20_70 -> m20_72  [key=2, style=dotted];
m20_70 -> m20_63  [key=2, style=dotted];
m20_212 -> m20_213  [key=0, style=solid];
m20_213 -> m20_214  [key=0, style=solid];
m20_213 -> m20_47  [key=2, style=dotted];
m20_213 -> m20_193  [key=2, style=dotted];
m20_213 -> m20_215  [color=darkseagreen4, key=1, label=entry, style=dashed];
m20_214 -> m20_215  [key=0, style=solid];
m20_214 -> m20_194  [key=2, style=dotted];
m20_215 -> m20_216  [key=0, style=solid];
m20_215 -> m20_40  [key=2, style=dotted];
m20_215 -> m20_218  [color=darkseagreen4, key=1, label=history, style=dashed];
m20_215 -> m20_219  [color=darkseagreen4, key=1, label=history, style=dashed];
m20_216 -> m20_217  [key=0, style=solid];
m20_216 -> m20_194  [key=2, style=dotted];
m20_218 -> m20_219  [key=0, style=solid];
m20_218 -> m20_221  [key=2, style=dotted];
m20_218 -> m20_109  [key=2, style=dotted];
m20_218 -> m20_218  [color=darkseagreen4, key=1, label=property, style=dashed];
m20_219 -> m20_217  [key=0, style=solid];
m20_219 -> m20_97  [key=2, style=dotted];
m20_219 -> m20_219  [color=darkseagreen4, key=1, label=property, style=dashed];
m20_217 -> m20_218  [key=0, style=solid];
m20_217 -> m20_220  [key=0, style=solid];
m20_220 -> m20_212  [color=blue, key=0, style=bold];
m20_121 -> m20_122  [key=0, style=solid];
m20_122 -> m20_123  [color=red, key=0, style=solid];
m20_122 -> m20_47  [key=2, style=dotted];
m20_123 -> m20_124  [color=red, key=0, style=solid];
m20_123 -> m20_102  [color=red, key=2, style=dotted];
m20_123 -> m20_125  [color=red, key=1, label="lambda expression", style=dashed];
m20_124 -> m20_121  [color=blue, key=0, style=bold];
m20_13 -> m20_51  [key=2, style=dotted];
m20_13 -> m20_50  [key=0, style=solid];
m20_60 -> m20_61  [key=0, style=solid];
m20_60 -> m20_62  [key=2, style=dotted];
m20_60 -> m20_63  [key=2, style=dotted];
m20_29 -> m20_30  [color=green, key=0, style=solid];
m20_29 -> m20_31  [color=green, key=0, style=solid];
m20_29 -> m20_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_29 -> m20_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_58 -> m20_56  [color=blue, key=0, style=bold];
m20_22 -> m20_23  [color=green, key=0, style=solid];
m20_22 -> m20_51  [color=green, key=2, style=dotted];
m20_94 -> m20_95  [key=0, style=solid];
m20_95 -> m20_96  [key=0, style=solid];
m20_95 -> m20_97  [key=2, style=dotted];
m20_96 -> m20_94  [color=blue, key=0, style=bold];
m20_59 -> m20_60  [key=0, style=solid];
m20_61 -> m20_59  [color=blue, key=0, style=bold];
m20_10 -> m20_11  [key=0, style=solid];
m20_10 -> m20_60  [key=2, style=dotted];
m20_10 -> m20_19  [color=darkseagreen4, key=1, label=enqueuedJobs, style=dashed];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_13  [key=2, style=dotted];
m20_11 -> m20_51  [key=2, style=dotted];
m20_12 -> m20_10  [color=blue, key=0, style=bold];
m20_12 -> m20_14  [color=green, key=0, style=solid];
m20_12 -> m20_13  [key=0, style=solid];
m20_18 -> m20_19  [color=green, key=0, style=solid];
m20_18 -> m20_51  [color=green, key=2, style=dotted];
m20_195 -> m20_196  [key=0, style=solid];
m20_196 -> m20_197  [key=0, style=solid];
m20_196 -> m20_198  [key=2, style=dotted];
m20_196 -> m20_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_197 -> m20_195  [color=blue, key=0, style=bold];
m20_227 -> m20_222  [color=blue, key=0, style=bold];
m20_222 -> m20_223  [key=0, style=solid];
m20_223 -> m20_224  [key=0, style=solid];
m20_223 -> m20_47  [key=2, style=dotted];
m20_223 -> m20_180  [key=2, style=dotted];
m20_223 -> m20_225  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m20_223 -> m20_226  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m20_224 -> m20_225  [key=0, style=solid];
m20_224 -> m20_227  [key=0, style=solid];
m20_225 -> m20_226  [key=0, style=solid];
m20_225 -> m20_228  [key=2, style=dotted];
m20_225 -> m20_109  [key=2, style=dotted];
m20_225 -> m20_225  [color=darkseagreen4, key=1, label=property, style=dashed];
m20_226 -> m20_224  [key=0, style=solid];
m20_226 -> m20_97  [key=2, style=dotted];
m20_226 -> m20_226  [color=darkseagreen4, key=1, label=property, style=dashed];
m20_229 -> m20_230  [key=0, style=solid];
m20_229 -> m20_232  [color=darkseagreen4, key=1, label=Table, style=dashed];
m20_229 -> m20_233  [color=darkseagreen4, key=1, label=Table, style=dashed];
m20_230 -> m20_231  [key=0, style=solid];
m20_230 -> m20_97  [key=2, style=dotted];
m20_232 -> m20_233  [key=0, style=solid];
m20_232 -> m20_235  [key=0, style=solid];
m20_232 -> m20_232  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m20_233 -> m20_234  [key=0, style=solid];
m20_233 -> m20_97  [key=2, style=dotted];
m20_231 -> m20_232  [key=0, style=solid];
m20_231 -> m20_233  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_231 -> m20_234  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_234 -> m20_232  [key=0, style=solid];
m20_234 -> m20_234  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_235 -> m20_229  [color=blue, key=0, style=bold];
m20_209 -> m20_210  [key=0, style=solid];
m20_34 -> m20_35  [color=green, key=0, style=solid];
m20_34 -> m20_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_34 -> m20_61  [key=2, style=dotted];
m20_34 -> m20_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_37 -> m20_38  [key=0, style=solid];
m20_37 -> m20_51  [key=2, style=dotted];
m20_35 -> m20_36  [color=green, key=0, style=solid];
m20_35 -> m20_51  [color=green, key=2, style=dotted];
m20_36 -> m20_34  [color=blue, key=0, style=bold];
m20_36 -> m20_55  [key=2, style=dotted];
m20_36 -> m20_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_36 -> m20_37  [key=0, style=solid];
m20_36 -> m20_61  [key=2, style=dotted];
m20_36 -> m20_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_38 -> m20_39  [color=green, key=0, style=solid];
m20_38 -> m20_40  [key=2, style=dotted];
m20_38 -> m20_41  [key=2, style=dotted];
m20_38 -> m20_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_38 -> m20_68  [key=2, style=dotted];
m20_38 -> m20_64  [key=2, style=dotted];
m20_39 -> m20_37  [color=blue, key=0, style=bold];
m20_39 -> m20_40  [color=green, key=0, style=solid];
m20_39 -> m20_51  [color=green, key=2, style=dotted];
m20_50 -> m20_51  [color=red, key=0, style=solid];
m20_50 -> m20_0  [color=blue, key=0, style=bold];
m20_54 -> m20_55  [color=red, key=0, style=solid];
m20_55 -> m20_53  [color=blue, key=0, style=bold];
m20_57 -> m20_58  [color=red, key=0, style=solid];
m20_57 -> m20_40  [color=red, key=2, style=dotted];
m20_57 -> m20_41  [color=red, key=2, style=dotted];
m20_103 -> m20_104  [key=0, style=solid];
m20_103 -> m20_105  [color=red, key=1, label="?", style=dashed];
m20_104 -> m20_105  [color=red, key=0, style=solid];
m20_104 -> m20_107  [key=2, style=dotted];
m20_105 -> m20_106  [color=red, key=0, style=solid];
m20_105 -> m20_108  [color=red, key=2, style=dotted];
m20_105 -> m20_109  [color=red, key=2, style=dotted];
m20_106 -> m20_103  [color=blue, key=0, style=bold];
m20_125 -> m20_126  [key=0, style=solid];
m20_125 -> m20_127  [color=red, key=1, label="?", style=dashed];
m20_126 -> m20_127  [color=red, key=0, style=solid];
m20_126 -> m20_107  [key=2, style=dotted];
m20_127 -> m20_128  [color=red, key=0, style=solid];
m20_127 -> m20_108  [color=red, key=2, style=dotted];
m20_127 -> m20_109  [color=red, key=2, style=dotted];
m20_128 -> m20_125  [color=blue, key=0, style=bold];
m20_199 -> m20_200  [key=0, style=solid];
m20_200 -> m20_201  [key=0, style=solid];
m20_200 -> m20_40  [key=2, style=dotted];
m20_200 -> m20_202  [key=2, style=dotted];
m20_200 -> m20_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_201 -> m20_199  [color=blue, key=0, style=bold];
m20_203 -> m20_204  [key=0, style=solid];
m20_204 -> m20_205  [key=0, style=solid];
m20_205 -> m20_203  [color=blue, key=0, style=bold];
m20_210 -> m20_211  [key=0, style=solid];
m20_210 -> m20_40  [key=2, style=dotted];
m20_210 -> m20_202  [key=2, style=dotted];
m20_211 -> m20_209  [color=blue, key=0, style=bold];
m20_149 -> m20_150  [color=red, key=0, style=solid];
m20_150 -> m20_151  [color=red, key=0, style=solid];
m20_150 -> m20_142  [color=red, key=2, style=dotted];
m20_150 -> m20_152  [color=red, key=2, style=dotted];
m20_151 -> m20_149  [color=blue, key=0, style=bold];
m20_31 -> m20_32  [color=green, key=0, style=solid];
m20_31 -> m20_51  [color=green, key=2, style=dotted];
m20_33 -> m20_51  [key=2, style=dotted];
m20_33 -> m20_34  [key=0, style=solid];
m20_80 -> m20_81  [color=red, key=0, style=solid];
m20_81 -> m20_82  [color=red, key=0, style=solid];
m20_81 -> m20_83  [color=red, key=2, style=dotted];
m20_81 -> m20_84  [color=red, key=2, style=dotted];
m20_82 -> m20_80  [color=blue, key=0, style=bold];
m20_69 -> m20_70  [key=0, style=solid];
m20_71 -> m20_69  [color=blue, key=0, style=bold];
m20_71 -> m20_4  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_5  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_9  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_14  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_16  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_18  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_22  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_24  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_30  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_31  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_35  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_39  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_41  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_71 -> m20_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m20_42 -> m20_43  [color=red, key=0, style=solid];
m20_42 -> m20_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_42 -> m20_45  [color=red, key=1, label=string, style=dashed];
m20_42 -> m20_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_42 -> m20_69  [key=2, style=dotted];
m20_42 -> m20_61  [key=2, style=dotted];
m20_43 -> m20_44  [color=red, key=0, style=solid];
m20_43 -> m20_47  [color=red, key=2, style=dotted];
m20_43 -> m20_48  [color=red, key=2, style=dotted];
m20_43 -> m20_51  [key=2, style=dotted];
m20_44 -> m20_45  [color=red, key=0, style=solid];
m20_44 -> m20_49  [color=red, key=2, style=dotted];
m20_44 -> m20_50  [color=red, key=1, label="lambda expression", style=dashed];
m20_44 -> m20_53  [color=red, key=1, label="lambda expression", style=dashed];
m20_44 -> m20_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_44 -> m20_61  [key=2, style=dotted];
m20_45 -> m20_46  [color=red, key=0, style=solid];
m20_45 -> m20_30  [color=red, key=2, style=dotted];
m20_45 -> m20_31  [color=red, key=2, style=dotted];
m20_45 -> m20_56  [color=red, key=1, label="lambda expression", style=dashed];
m20_45 -> m20_51  [key=2, style=dotted];
m20_45 -> m20_47  [key=0, style=solid];
m20_46 -> m20_42  [color=blue, key=0, style=bold];
m20_46 -> m20_51  [key=2, style=dotted];
m20_46 -> m20_47  [key=0, style=solid];
m20_206 -> m20_207  [key=0, style=solid];
m20_207 -> m20_208  [key=0, style=solid];
m20_207 -> m20_198  [key=2, style=dotted];
m20_207 -> m20_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_208 -> m20_206  [color=blue, key=0, style=bold];
m20_176 -> m20_177  [key=0, style=solid];
m20_176 -> m20_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_177 -> m20_178  [key=0, style=solid];
m20_177 -> m20_47  [key=2, style=dotted];
m20_177 -> m20_180  [key=2, style=dotted];
m20_178 -> m20_179  [key=0, style=solid];
m20_178 -> m20_97  [key=2, style=dotted];
m20_179 -> m20_176  [color=blue, key=0, style=bold];
m20_110 -> m20_111  [key=0, style=solid];
m20_111 -> m20_112  [key=0, style=solid];
m20_111 -> m20_113  [key=2, style=dotted];
m20_111 -> m20_114  [key=2, style=dotted];
m20_111 -> m20_97  [key=2, style=dotted];
m20_112 -> m20_110  [color=blue, key=0, style=bold];
m20_236 -> m20_237  [key=0, style=solid];
m20_237 -> m20_238  [key=0, style=solid];
m20_237 -> m20_97  [key=2, style=dotted];
m20_238 -> m20_236  [color=blue, key=0, style=bold];
m20_8 -> m20_9  [color=green, key=0, style=solid];
m20_8 -> m20_57  [color=green, key=2, style=dotted];
m20_8 -> m20_10  [color=green, key=1, label=monitor, style=dashed];
m20_23 -> m20_24  [color=green, key=0, style=solid];
m20_23 -> m20_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_23 -> m20_27  [color=red, key=1, label=string, style=dashed];
m20_23 -> m20_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_23 -> m20_61  [key=2, style=dotted];
m20_24 -> m20_25  [color=green, key=0, style=solid];
m20_24 -> m20_29  [key=2, style=dotted];
m20_24 -> m20_26  [color=darkseagreen4, key=1, label=mock, style=dashed];
m20_24 -> m20_27  [color=red, key=1, label=mock, style=dashed];
m20_24 -> m20_51  [color=green, key=2, style=dotted];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> m20_30  [key=2, style=dotted];
m20_25 -> m20_31  [key=2, style=dotted];
m20_25 -> m20_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_25 -> m20_55  [key=2, style=dotted];
m20_25 -> m20_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_25 -> m20_61  [key=2, style=dotted];
m20_25 -> m20_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_27 -> m20_28  [color=red, key=0, style=solid];
m20_27 -> m20_33  [color=red, key=2, style=dotted];
m20_27 -> m20_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_27 -> m20_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_27 -> m20_65  [key=2, style=dotted];
m20_27 -> m20_64  [key=2, style=dotted];
m20_26 -> m20_27  [color=red, key=0, style=solid];
m20_26 -> m20_30  [key=2, style=dotted];
m20_26 -> m20_32  [key=2, style=dotted];
m20_26 -> m20_31  [key=2, style=dotted];
m20_26 -> m20_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_26 -> m20_51  [key=2, style=dotted];
m20_28 -> m20_23  [color=blue, key=0, style=bold];
m20_28 -> m20_51  [key=2, style=dotted];
m20_28 -> m20_29  [key=0, style=solid];
m20_30 -> m20_31  [color=green, key=0, style=solid];
m20_30 -> m20_51  [color=green, key=2, style=dotted];
m20_14 -> m20_15  [color=green, key=0, style=solid];
m20_14 -> m20_51  [color=green, key=2, style=dotted];
m20_15 -> m20_16  [color=green, key=0, style=solid];
m20_15 -> m20_17  [key=2, style=dotted];
m20_15 -> m20_18  [key=2, style=dotted];
m20_15 -> m20_55  [key=2, style=dotted];
m20_15 -> m20_61  [key=2, style=dotted];
m20_16 -> m20_14  [color=blue, key=0, style=bold];
m20_16 -> m20_17  [color=green, key=0, style=solid];
m20_16 -> m20_51  [color=green, key=2, style=dotted];
m20_172 -> m20_173  [key=0, style=solid];
m20_173 -> m20_174  [key=0, style=solid];
m20_173 -> m20_175  [key=2, style=dotted];
m20_173 -> m20_109  [key=2, style=dotted];
m20_174 -> m20_172  [color=blue, key=0, style=bold];
m20_17 -> m20_18  [color=green, key=0, style=solid];
m20_17 -> m20_62  [key=2, style=dotted];
m20_17 -> m20_63  [key=2, style=dotted];
m20_17 -> m20_64  [key=2, style=dotted];
m20_146 -> m20_147  [key=0, style=solid];
m20_147 -> m20_148  [key=0, style=solid];
m20_147 -> m20_142  [key=2, style=dotted];
m20_147 -> m20_109  [key=2, style=dotted];
m20_148 -> m20_146  [color=blue, key=0, style=bold];
m20_115 -> m20_116  [key=0, style=solid];
m20_116 -> m20_117  [key=0, style=solid];
m20_116 -> m20_119  [key=2, style=dotted];
m20_116 -> m20_97  [key=2, style=dotted];
m20_117 -> m20_118  [key=0, style=solid];
m20_117 -> m20_120  [key=2, style=dotted];
m20_117 -> m20_97  [key=2, style=dotted];
m20_118 -> m20_115  [color=blue, key=0, style=bold];
m20_143 -> m20_144  [key=0, style=solid];
m20_144 -> m20_145  [key=0, style=solid];
m20_144 -> m20_141  [key=2, style=dotted];
m20_144 -> m20_97  [key=2, style=dotted];
m20_145 -> m20_143  [color=blue, key=0, style=bold];
m20_184 -> m20_181  [color=blue, key=0, style=bold];
m20_181 -> m20_182  [key=0, style=solid];
m20_181 -> m20_183  [color=darkseagreen4, key=1, label=Table, style=dashed];
m20_182 -> m20_183  [key=0, style=solid];
m20_182 -> m20_47  [key=2, style=dotted];
m20_182 -> m20_180  [key=2, style=dotted];
m20_183 -> m20_184  [key=0, style=solid];
m20_183 -> m20_185  [key=2, style=dotted];
m20_0 -> m20_1  [key=0, style=solid];
m20_4 -> m20_5  [color=green, key=0, style=solid];
m20_4 -> m20_56  [color=green, key=2, style=dotted];
m20_4 -> m20_9  [color=green, key=1, label=from, style=dashed];
m20_3 -> m20_4  [color=green, key=0, style=solid];
m20_5 -> m20_6  [color=red, key=0, style=solid];
m20_5 -> m20_56  [color=green, key=2, style=dotted];
m20_5 -> m20_9  [color=green, key=1, label=perPage, style=dashed];
m20_5 -> m20_8  [key=2, style=dotted];
m20_9 -> m20_10  [color=green, key=0, style=solid];
m20_9 -> m20_58  [color=green, key=2, style=dotted];
m20_9 -> m20_59  [color=green, key=2, style=dotted];
m20_9 -> m20_55  [color=green, key=2, style=dotted];
m20_9 -> m20_12  [color=green, key=1, label=pager, style=dashed];
m20_9 -> m20_17  [color=green, key=1, label=pager, style=dashed];
m20_9 -> m20_49  [color=green, key=1, label=pager, style=dashed];
m20_6 -> m20_7  [color=red, key=0, style=solid];
m20_6 -> m20_9  [color=red, key=2, style=dotted];
m20_49 -> m20_50  [key=0, style=solid];
m20_49 -> m20_70  [key=2, style=dotted];
m20_49 -> m20_63  [key=2, style=dotted];
m20_49 -> m20_64  [key=2, style=dotted];
m20_7 -> m20_8  [color=green, key=0, style=solid];
m20_7 -> m20_4  [color=blue, key=0, style=bold];
m20_32 -> m20_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_66  [key=2, style=dotted];
m20_32 -> m20_67  [key=2, style=dotted];
m20_32 -> m20_61  [key=2, style=dotted];
m20_32 -> m20_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_40 -> m20_41  [color=green, key=0, style=solid];
m20_40 -> m20_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_40 -> m20_46  [key=0, style=solid];
m20_40 -> m20_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_41 -> m20_42  [color=green, key=0, style=solid];
m20_41 -> m20_51  [color=green, key=2, style=dotted];
m20_1 -> m20_51  [key=2, style=dotted];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_55  [key=2, style=dotted];
m20_2 -> m20_52  [key=2, style=dotted];
m20_2 -> m20_53  [key=2, style=dotted];
m20_2 -> m20_54  [key=2, style=dotted];
m20_2 -> m20_0  [color=blue, key=0, style=bold];
m20_47 -> m20_51  [key=2, style=dotted];
m20_47 -> m20_19  [key=0, style=solid];
m20_98 -> m20_99  [color=red, key=0, style=solid];
m20_99 -> m20_100  [color=red, key=0, style=solid];
m20_99 -> m20_47  [color=red, key=2, style=dotted];
m20_100 -> m20_101  [color=red, key=0, style=solid];
m20_100 -> m20_102  [color=red, key=2, style=dotted];
m20_100 -> m20_103  [color=red, key=1, label="lambda expression", style=dashed];
m20_101 -> m20_98  [color=blue, key=0, style=bold];
m20_192 -> m20_186  [color=blue, key=0, style=bold];
m20_186 -> m20_187  [key=0, style=solid];
m20_186 -> m20_191  [color=darkseagreen4, key=1, label=Table, style=dashed];
m20_187 -> m20_188  [key=0, style=solid];
m20_187 -> m20_47  [key=2, style=dotted];
m20_187 -> m20_193  [key=2, style=dotted];
m20_187 -> m20_189  [color=darkseagreen4, key=1, label=entry, style=dashed];
m20_191 -> m20_192  [key=0, style=solid];
m20_191 -> m20_136  [key=2, style=dotted];
m20_188 -> m20_189  [key=0, style=solid];
m20_188 -> m20_194  [key=2, style=dotted];
m20_189 -> m20_190  [key=0, style=solid];
m20_189 -> m20_40  [key=2, style=dotted];
m20_189 -> m20_191  [color=darkseagreen4, key=1, label=history, style=dashed];
m20_190 -> m20_191  [key=0, style=solid];
m20_190 -> m20_194  [key=2, style=dotted];
m20_129 -> m20_130  [key=0, style=solid];
m20_130 -> m20_131  [key=0, style=solid];
m20_130 -> m20_119  [key=2, style=dotted];
m20_130 -> m20_97  [key=2, style=dotted];
m20_131 -> m20_129  [color=blue, key=0, style=bold];
m20_132 -> m20_133  [key=0, style=solid];
m20_133 -> m20_134  [key=0, style=solid];
m20_133 -> m20_135  [key=2, style=dotted];
m20_133 -> m20_136  [key=2, style=dotted];
m20_134 -> m20_132  [color=blue, key=0, style=bold];
m20_85 -> m20_86  [key=0, style=solid];
m20_85 -> m20_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_86 -> m20_87  [key=0, style=solid];
m20_86 -> m20_77  [key=2, style=dotted];
m20_86 -> m20_78  [key=2, style=dotted];
m20_87 -> m20_88  [key=0, style=solid];
m20_87 -> m20_89  [key=2, style=dotted];
m20_88 -> m20_85  [color=blue, key=0, style=bold];
m20_73 -> m20_74  [key=0, style=solid];
m20_74 -> m20_75  [key=0, style=solid];
m20_74 -> m20_77  [key=2, style=dotted];
m20_74 -> m20_78  [key=2, style=dotted];
m20_75 -> m20_76  [key=0, style=solid];
m20_75 -> m20_79  [key=2, style=dotted];
m20_76 -> m20_73  [color=blue, key=0, style=bold];
m20_250 -> m20_251  [key=0, style=solid];
m20_250 -> m20_253  [color=darkseagreen4, key=1, label=Table, style=dashed];
m20_250 -> m20_254  [color=darkseagreen4, key=1, label=Table, style=dashed];
m20_251 -> m20_252  [key=0, style=solid];
m20_251 -> m20_97  [key=2, style=dotted];
m20_253 -> m20_254  [key=0, style=solid];
m20_253 -> m20_256  [key=0, style=solid];
m20_253 -> m20_232  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m20_254 -> m20_255  [key=0, style=solid];
m20_254 -> m20_97  [key=2, style=dotted];
m20_252 -> m20_253  [key=0, style=solid];
m20_252 -> m20_254  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_252 -> m20_255  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_255 -> m20_253  [key=0, style=solid];
m20_255 -> m20_255  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_256 -> m20_250  [color=blue, key=0, style=bold];
m20_257 -> m20_1  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_5  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_6  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_11  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_15  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_20  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_27  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_44  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_45  [color=red, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_60  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_66  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_74  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_75  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_86  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_87  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_91  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_92  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_95  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_133  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_196  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_207  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_217  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_224  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_230  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_233  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_237  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_251  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m20_257 -> m20_254  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_15  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_15  [color=darkseagreen4, key=1, label=enqueuedState, style=dashed];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_19  [key=2, style=dotted];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_15  [key=0, style=solid];
m21_14 -> m21_16  [key=0, style=solid];
m21_14 -> m21_17  [key=2, style=dotted];
m21_14 -> m21_18  [key=2, style=dotted];
m21_16 -> m21_11  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [color=blue, key=0, style=bold];
m21_20 -> m21_21  [key=0, style=solid];
m21_21 -> m21_20  [color=blue, key=0, style=bold];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_3 -> m21_4  [key=0, style=solid];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_2  [color=blue, key=0, style=bold];
m21_6 -> m21_7  [color=red, key=0, style=solid];
m21_7 -> m21_8  [color=red, key=0, style=solid];
m21_7 -> m21_9  [color=red, key=2, style=dotted];
m21_7 -> m21_10  [color=red, key=2, style=dotted];
m21_8 -> m21_6  [color=blue, key=0, style=bold];
m21_22 -> m21_3  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m21_22 -> m21_4  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m21_22 -> m21_7  [color=red, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m22_38 -> m22_39  [key=0, style=solid];
m22_38 -> m22_41  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_41  [key=0, style=solid];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_4  [key=2, style=dotted];
m22_40 -> m22_42  [key=0, style=solid];
m22_42 -> m22_38  [color=blue, key=0, style=bold];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_35  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_4  [key=2, style=dotted];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_37  [key=2, style=dotted];
m22_36 -> m22_33  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_4  [key=2, style=dotted];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_5  [key=2, style=dotted];
m22_2 -> m22_6  [key=2, style=dotted];
m22_3 -> m22_0  [color=blue, key=0, style=bold];
m22_23 -> m22_24  [key=0, style=solid];
m22_23 -> m22_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_23 -> m22_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_24 -> m22_25  [key=0, style=solid];
m22_24 -> m22_26  [key=0, style=solid];
m22_24 -> m22_29  [key=2, style=dotted];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_28  [key=0, style=solid];
m22_26 -> m22_30  [key=2, style=dotted];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_31  [key=2, style=dotted];
m22_27 -> m22_32  [key=2, style=dotted];
m22_25 -> m22_28  [key=0, style=solid];
m22_25 -> m22_18  [key=2, style=dotted];
m22_28 -> m22_23  [color=blue, key=0, style=bold];
m22_4 -> m22_7  [key=0, style=solid];
m22_4 -> m22_10  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m22_4 -> m22_11  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m22_4 -> m22_13  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_9  [key=0, style=solid];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_12  [key=0, style=solid];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_19  [key=2, style=dotted];
m22_11 -> m22_20  [key=2, style=dotted];
m22_11 -> m22_21  [key=2, style=dotted];
m22_11 -> m22_14  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m22_13 -> m22_14  [key=0, style=solid];
m22_13 -> m22_19  [key=2, style=dotted];
m22_13 -> m22_20  [key=2, style=dotted];
m22_13 -> m22_21  [key=2, style=dotted];
m22_8 -> m22_17  [key=0, style=solid];
m22_8 -> m22_18  [key=2, style=dotted];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_12  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m22_9 -> m22_14  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_14  [key=0, style=solid];
m22_14 -> m22_15  [key=0, style=solid];
m22_14 -> m22_22  [key=2, style=dotted];
m22_14 -> m22_16  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m22_15 -> m22_16  [key=0, style=solid];
m22_15 -> m22_23  [key=2, style=dotted];
m22_16 -> m22_17  [key=0, style=solid];
m22_17 -> m22_4  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [color=red, key=0, style=solid];
m23_1 -> m23_2  [color=red, key=0, style=solid];
m23_1 -> m23_10  [color=red, key=2, style=dotted];
m23_2 -> m23_3  [color=red, key=0, style=solid];
m23_2 -> m23_10  [color=red, key=2, style=dotted];
m23_3 -> m23_4  [color=red, key=0, style=solid];
m23_3 -> m23_11  [color=red, key=2, style=dotted];
m23_3 -> m23_12  [color=red, key=2, style=dotted];
m23_4 -> m23_5  [color=red, key=0, style=solid];
m23_4 -> m23_10  [color=red, key=2, style=dotted];
m23_5 -> m23_6  [color=red, key=0, style=solid];
m23_5 -> m23_12  [color=red, key=2, style=dotted];
m23_6 -> m23_7  [color=red, key=0, style=solid];
m23_6 -> m23_10  [color=red, key=2, style=dotted];
m23_7 -> m23_8  [color=red, key=0, style=solid];
m23_7 -> m23_13  [color=red, key=2, style=dotted];
m23_7 -> m23_14  [color=red, key=2, style=dotted];
m23_7 -> m23_15  [color=red, key=2, style=dotted];
m23_8 -> m23_9  [color=red, key=0, style=solid];
m23_8 -> m23_10  [color=red, key=2, style=dotted];
m23_9 -> m23_0  [color=blue, key=0, style=bold];
m23_16 -> m23_1  [color=red, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m23_16 -> m23_2  [color=red, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m23_16 -> m23_3  [color=red, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m23_16 -> m23_4  [color=red, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m23_16 -> m23_5  [color=red, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m23_16 -> m23_6  [color=red, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m23_16 -> m23_7  [color=red, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m23_16 -> m23_8  [color=red, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_16  [key=2, style=dotted];
m24_10 -> m24_13  [color=darkseagreen4, key=1, label=connection, style=dashed];
m24_14 -> m24_15  [key=0, style=solid];
m24_14 -> m24_20  [key=2, style=dotted];
m24_14 -> m24_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m24_11 -> m24_12  [key=0, style=solid];
m24_11 -> m24_14  [key=0, style=solid];
m24_11 -> m24_13  [color=darkseagreen4, key=1, label=table, style=dashed];
m24_13 -> m24_11  [key=0, style=solid];
m24_13 -> m24_18  [key=2, style=dotted];
m24_13 -> m24_19  [key=2, style=dotted];
m24_12 -> m24_13  [key=0, style=solid];
m24_12 -> m24_17  [key=2, style=dotted];
m24_15 -> m24_9  [color=blue, key=0, style=bold];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m24_2 -> m24_6  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_5  [key=0, style=solid];
m24_5 -> m24_6  [key=0, style=solid];
m24_6 -> m24_7  [key=0, style=solid];
m24_4 -> m24_7  [key=0, style=solid];
m24_4 -> m24_8  [key=2, style=dotted];
m24_7 -> m24_2  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_0  [color=blue, key=0, style=bold];
m24_21 -> m24_22  [key=0, style=solid];
m24_22 -> m24_23  [key=0, style=solid];
m24_23 -> m24_21  [color=blue, key=0, style=bold];
m24_24 -> m24_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m24_24 -> m24_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m24_24 -> m24_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m24_24 -> m24_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m26_18 -> m26_19  [key=0, style=solid];
m26_45 -> m26_352  [color=green, key=0, style=solid];
m26_45 -> m26_353  [color=green, key=1, label=SqlConnection, style=dashed];
m26_45 -> m26_354  [color=darkseagreen4, key=1, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m26_352 -> m26_353  [color=green, key=0, style=solid];
m26_353 -> m26_354  [color=green, key=0, style=solid];
m26_353 -> m26_78  [color=green, key=2, style=dotted];
m26_353 -> m26_87  [color=green, key=2, style=dotted];
m26_354 -> m26_334  [key=2, style=dotted];
m26_354 -> m26_355  [key=0, style=solid];
m26_355 -> m26_45  [color=blue, key=0, style=bold];
m26_27 -> m26_28  [key=0, style=solid];
m26_28 -> m26_10  [key=2, style=dotted];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_29 -> m26_27  [color=blue, key=0, style=bold];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_20  [key=2, style=dotted];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_21  [key=2, style=dotted];
m26_25 -> m26_23  [color=blue, key=0, style=bold];
m26_25 -> m26_26  [key=0, style=solid];
m26_356 -> m26_361  [color=darkseagreen4, key=1, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m26_356 -> m26_357  [key=0, style=solid];
m26_356 -> m26_358  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>", style=dashed];
m26_362 -> m26_90  [key=2, style=dotted];
m26_362 -> m26_358  [key=0, style=solid];
m26_362 -> m26_367  [key=2, style=dotted];
m26_362 -> m26_368  [key=2, style=dotted];
m26_360 -> m26_220  [key=2, style=dotted];
m26_360 -> m26_361  [key=0, style=solid];
m26_361 -> m26_343  [key=2, style=dotted];
m26_361 -> m26_362  [key=0, style=solid];
m26_361 -> m26_366  [key=2, style=dotted];
m26_359 -> m26_350  [key=2, style=dotted];
m26_359 -> m26_360  [key=0, style=solid];
m26_357 -> m26_362  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_357 -> m26_358  [key=0, style=solid];
m26_357 -> m26_365  [key=2, style=dotted];
m26_357 -> m26_363  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_358 -> m26_362  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_358 -> m26_361  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_358 -> m26_359  [key=0, style=solid];
m26_358 -> m26_363  [key=0, style=solid];
m26_363 -> m26_364  [key=0, style=solid];
m26_363 -> m26_369  [key=2, style=dotted];
m26_364 -> m26_356  [color=blue, key=0, style=bold];
m26_14 -> m26_340  [color=green, key=1, label=SqlConnection, style=dashed];
m26_14 -> m26_339  [key=0, style=solid];
m26_14 -> m26_15  [key=0, style=solid];
m26_14 -> m26_16  [key=0, style=solid];
m26_340 -> m26_341  [color=green, key=0, style=solid];
m26_340 -> m26_78  [color=green, key=2, style=dotted];
m26_340 -> m26_255  [color=green, key=2, style=dotted];
m26_339 -> m26_340  [color=green, key=0, style=solid];
m26_341 -> m26_342  [key=0, style=solid];
m26_342 -> m26_14  [color=blue, key=0, style=bold];
m26_227 -> m26_228  [key=0, style=solid];
m26_228 -> m26_10  [key=2, style=dotted];
m26_228 -> m26_229  [key=0, style=solid];
m26_228 -> m26_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_229 -> m26_227  [color=blue, key=0, style=bold];
m26_10 -> m26_327  [key=0, style=solid];
m26_327 -> m26_328  [key=0, style=solid];
m26_327 -> m26_329  [key=2, style=dotted];
m26_328 -> m26_10  [color=blue, key=0, style=bold];
m26_186 -> m26_187  [color=green, key=0, style=solid];
m26_187 -> m26_188  [color=green, key=0, style=solid];
m26_187 -> m26_10  [color=green, key=2, style=dotted];
m26_187 -> m26_189  [color=green, key=1, label="lambda expression", style=dashed];
m26_188 -> m26_186  [color=blue, key=0, style=bold];
m26_233 -> m26_234  [color=green, key=0, style=solid];
m26_234 -> m26_235  [color=green, key=0, style=solid];
m26_234 -> m26_243  [color=green, key=1, label=sql, style=dashed];
m26_235 -> m26_236  [color=green, key=0, style=solid];
m26_235 -> m26_10  [color=green, key=2, style=dotted];
m26_235 -> m26_241  [color=green, key=1, label="lambda expression", style=dashed];
m26_235 -> m26_237  [color=green, key=1, label=statistics, style=dashed];
m26_236 -> m26_237  [key=0, style=solid];
m26_236 -> m26_239  [key=2, style=dotted];
m26_236 -> m26_240  [key=2, style=dotted];
m26_236 -> m26_256  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_237 -> m26_238  [key=0, style=solid];
m26_238 -> m26_233  [color=blue, key=0, style=bold];
m26_169 -> m26_170  [key=0, style=solid];
m26_169 -> m26_171  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_170 -> m26_20  [key=2, style=dotted];
m26_170 -> m26_171  [key=0, style=solid];
m26_172 -> m26_10  [key=2, style=dotted];
m26_172 -> m26_173  [key=0, style=solid];
m26_172 -> m26_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_171 -> m26_172  [key=0, style=solid];
m26_171 -> m26_176  [color=darkseagreen4, key=1, label=fetchedJobIds, style=dashed];
m26_171 -> m26_174  [key=2, style=dotted];
m26_173 -> m26_169  [color=blue, key=0, style=bold];
m26_185 -> m26_260  [key=0, style=solid];
m26_185 -> m26_268  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_185 -> m26_267  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_185 -> m26_273  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_265 -> m26_265  [color=green, key=1, label=endDate, style=dashed];
m26_265 -> m26_266  [color=green, key=0, style=solid];
m26_265 -> m26_270  [color=green, key=2, style=dotted];
m26_260 -> m26_265  [color=green, key=1, label=endDate, style=dashed];
m26_260 -> m26_261  [key=0, style=solid];
m26_260 -> m26_264  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m26_264 -> m26_265  [color=green, key=0, style=solid];
m26_264 -> m26_90  [key=2, style=dotted];
m26_266 -> m26_266  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_266 -> m26_263  [key=0, style=solid];
m26_268 -> m26_271  [key=2, style=dotted];
m26_268 -> m26_269  [key=0, style=solid];
m26_261 -> m26_264  [color=darkseagreen4, key=1, label=dates, style=dashed];
m26_261 -> m26_88  [key=2, style=dotted];
m26_261 -> m26_262  [key=0, style=solid];
m26_261 -> m26_267  [color=darkseagreen4, key=1, label=dates, style=dashed];
m26_263 -> m26_264  [key=0, style=solid];
m26_263 -> m26_267  [key=0, style=solid];
m26_262 -> m26_266  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_262 -> m26_263  [key=0, style=solid];
m26_267 -> m26_207  [key=2, style=dotted];
m26_267 -> m26_268  [key=0, style=solid];
m26_267 -> m26_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_267 -> m26_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_269 -> m26_185  [color=blue, key=0, style=bold];
m26_6 -> m26_9  [key=0, style=solid];
m26_6 -> m26_10  [key=2, style=dotted];
m26_19 -> m26_15  [color=blue, key=0, style=bold];
m26_123 -> m26_124  [key=0, style=solid];
m26_130 -> m26_126  [color=green, key=0, style=solid];
m26_130 -> m26_140  [color=green, key=2, style=dotted];
m26_130 -> m26_90  [color=green, key=2, style=dotted];
m26_125 -> m26_130  [color=green, key=1, label=result, style=dashed];
m26_125 -> m26_126  [key=0, style=solid];
m26_125 -> m26_137  [key=2, style=dotted];
m26_125 -> m26_131  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_126 -> m26_130  [color=green, key=1, label=tuple, style=dashed];
m26_126 -> m26_127  [key=0, style=solid];
m26_126 -> m26_131  [key=0, style=solid];
m26_126 -> m26_128  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m26_128 -> m26_130  [color=green, key=1, label=counters, style=dashed];
m26_128 -> m26_129  [key=0, style=solid];
m26_128 -> m26_139  [key=2, style=dotted];
m26_129 -> m26_130  [color=green, key=0, style=solid];
m26_129 -> m26_10  [key=2, style=dotted];
m26_129 -> m26_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_124 -> m26_125  [key=0, style=solid];
m26_124 -> m26_126  [color=darkseagreen4, key=1, label=tuples, style=dashed];
m26_124 -> m26_133  [key=2, style=dotted];
m26_124 -> m26_134  [key=2, style=dotted];
m26_124 -> m26_135  [key=2, style=dotted];
m26_124 -> m26_136  [key=2, style=dotted];
m26_124 -> m26_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_124 -> m26_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_124 -> m26_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_124 -> m26_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_131 -> m26_132  [key=0, style=solid];
m26_127 -> m26_128  [key=0, style=solid];
m26_127 -> m26_129  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m26_127 -> m26_156  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m26_127 -> m26_138  [key=2, style=dotted];
m26_132 -> m26_123  [color=blue, key=0, style=bold];
m26_0 -> m26_4  [color=green, key=1, label="int?", style=dashed];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m26_4 -> m26_5  [color=green, key=0, style=solid];
m26_4 -> m26_9  [key=0, style=solid];
m26_4 -> m26_10  [key=2, style=dotted];
m26_3 -> m26_4  [color=green, key=0, style=solid];
m26_3 -> m26_5  [key=0, style=solid];
m26_1 -> m26_3  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_0  [color=blue, key=0, style=bold];
m26_2 -> m26_5  [key=0, style=solid];
m26_2 -> m26_6  [key=2, style=dotted];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_7  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m26_2 -> m26_8  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
m26_5 -> m26_0  [color=blue, key=0, style=bold];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [key=0, style=solid];
m26_113 -> m26_114  [color=green, key=0, style=solid];
m26_113 -> m26_117  [color=green, key=1, label=int, style=dashed];
m26_114 -> m26_114  [color=green, key=3, label="Local variable int index", style=bold];
m26_114 -> m26_115  [color=green, key=0, style=solid];
m26_114 -> m26_10  [color=green, key=2, style=dotted];
m26_114 -> m26_116  [color=green, key=1, label="lambda expression", style=dashed];
m26_115 -> m26_113  [color=blue, key=0, style=bold];
m26_277 -> m26_278  [key=0, style=solid];
m26_36 -> m26_37  [color=green, key=0, style=solid];
m26_37 -> m26_38  [color=green, key=0, style=solid];
m26_37 -> m26_14  [color=green, key=2, style=dotted];
m26_38 -> m26_36  [color=blue, key=0, style=bold];
m26_42 -> m26_43  [color=green, key=0, style=solid];
m26_43 -> m26_44  [color=green, key=0, style=solid];
m26_43 -> m26_45  [color=green, key=2, style=dotted];
m26_43 -> m26_46  [color=green, key=1, label="lambda expression", style=dashed];
m26_44 -> m26_42  [color=blue, key=0, style=bold];
m26_46 -> m26_47  [key=0, style=solid];
m26_79 -> m26_80  [key=0, style=solid];
m26_84 -> m26_82  [color=green, key=0, style=solid];
m26_84 -> m26_89  [color=green, key=2, style=dotted];
m26_84 -> m26_90  [color=green, key=2, style=dotted];
m26_81 -> m26_84  [color=green, key=1, label=result, style=dashed];
m26_81 -> m26_82  [key=0, style=solid];
m26_81 -> m26_88  [key=2, style=dotted];
m26_81 -> m26_85  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_82 -> m26_84  [color=green, key=1, label=server, style=dashed];
m26_82 -> m26_83  [key=0, style=solid];
m26_82 -> m26_85  [key=0, style=solid];
m26_83 -> m26_84  [color=green, key=0, style=solid];
m26_83 -> m26_78  [key=2, style=dotted];
m26_94 -> m26_95  [color=green, key=0, style=solid];
m26_95 -> m26_96  [color=green, key=0, style=solid];
m26_95 -> m26_45  [color=green, key=2, style=dotted];
m26_95 -> m26_97  [color=green, key=1, label="lambda expression", style=dashed];
m26_96 -> m26_94  [color=blue, key=0, style=bold];
m26_97 -> m26_98  [color=green, key=0, style=solid];
m26_98 -> m26_99  [color=green, key=0, style=solid];
m26_98 -> m26_100  [color=green, key=2, style=dotted];
m26_98 -> m26_101  [color=green, key=2, style=dotted];
m26_99 -> m26_97  [color=blue, key=0, style=bold];
m26_105 -> m26_106  [color=green, key=0, style=solid];
m26_106 -> m26_107  [color=green, key=0, style=solid];
m26_106 -> m26_45  [color=green, key=2, style=dotted];
m26_106 -> m26_108  [color=green, key=1, label="lambda expression", style=dashed];
m26_107 -> m26_105  [color=blue, key=0, style=bold];
m26_108 -> m26_109  [color=green, key=0, style=solid];
m26_109 -> m26_110  [color=green, key=0, style=solid];
m26_109 -> m26_111  [color=green, key=2, style=dotted];
m26_109 -> m26_50  [color=green, key=2, style=dotted];
m26_109 -> m26_112  [color=green, key=2, style=dotted];
m26_109 -> m26_101  [color=green, key=2, style=dotted];
m26_110 -> m26_108  [color=blue, key=0, style=bold];
m26_116 -> m26_117  [color=green, key=0, style=solid];
m26_117 -> m26_118  [color=green, key=0, style=solid];
m26_117 -> m26_45  [color=green, key=2, style=dotted];
m26_117 -> m26_119  [color=green, key=1, label="lambda expression", style=dashed];
m26_118 -> m26_116  [color=blue, key=0, style=bold];
m26_119 -> m26_120  [key=0, style=solid];
m26_189 -> m26_190  [key=0, style=solid];
m26_195 -> m26_196  [color=green, key=0, style=solid];
m26_195 -> m26_197  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_196 -> m26_197  [color=green, key=0, style=solid];
m26_197 -> m26_202  [color=green, key=1, label=multi, style=dashed];
m26_197 -> m26_198  [key=0, style=solid];
m26_197 -> m26_205  [key=2, style=dotted];
m26_197 -> m26_201  [color=darkseagreen4, key=1, label=multi, style=dashed];
m26_202 -> m26_203  [color=green, key=0, style=solid];
m26_202 -> m26_78  [color=green, key=2, style=dotted];
m26_202 -> m26_87  [color=green, key=2, style=dotted];
m26_202 -> m26_133  [color=green, key=2, style=dotted];
m26_202 -> m26_216  [color=green, key=1, label="lambda expression", style=dashed];
m26_201 -> m26_202  [color=green, key=0, style=solid];
m26_201 -> m26_203  [color=green, key=1, label=parameters, style=dashed];
m26_201 -> m26_78  [key=2, style=dotted];
m26_201 -> m26_207  [key=2, style=dotted];
m26_201 -> m26_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_201 -> m26_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_203 -> m26_204  [color=green, key=0, style=solid];
m26_203 -> m26_208  [color=green, key=2, style=dotted];
m26_203 -> m26_209  [color=green, key=2, style=dotted];
m26_216 -> m26_217  [color=green, key=0, style=solid];
m26_198 -> m26_203  [color=green, key=1, label=job, style=dashed];
m26_198 -> m26_78  [key=2, style=dotted];
m26_198 -> m26_199  [key=0, style=solid];
m26_198 -> m26_206  [key=2, style=dotted];
m26_204 -> m26_195  [color=blue, key=0, style=bold];
m26_217 -> m26_218  [color=green, key=0, style=solid];
m26_217 -> m26_219  [color=green, key=2, style=dotted];
m26_217 -> m26_220  [color=green, key=2, style=dotted];
m26_217 -> m26_78  [color=green, key=2, style=dotted];
m26_218 -> m26_216  [color=blue, key=0, style=bold];
m26_243 -> m26_244  [color=green, key=0, style=solid];
m26_243 -> m26_251  [color=green, key=1, label=multi, style=dashed];
m26_243 -> m26_205  [key=2, style=dotted];
m26_243 -> m26_245  [color=darkseagreen4, key=1, label=multi, style=dashed];
m26_243 -> m26_246  [color=darkseagreen4, key=1, label=multi, style=dashed];
m26_243 -> m26_247  [color=darkseagreen4, key=1, label=multi, style=dashed];
m26_243 -> m26_248  [color=darkseagreen4, key=1, label=multi, style=dashed];
m26_243 -> m26_249  [color=darkseagreen4, key=1, label=multi, style=dashed];
m26_243 -> m26_250  [color=darkseagreen4, key=1, label=multi, style=dashed];
m26_241 -> m26_243  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_241 -> m26_242  [key=0, style=solid];
m26_244 -> m26_245  [color=green, key=0, style=solid];
m26_244 -> m26_78  [color=green, key=2, style=dotted];
m26_244 -> m26_255  [color=green, key=2, style=dotted];
m26_242 -> m26_244  [color=green, key=1, label=stats, style=dashed];
m26_242 -> m26_251  [color=green, key=1, label=stats, style=dashed];
m26_242 -> m26_243  [key=0, style=solid];
m26_242 -> m26_254  [key=2, style=dotted];
m26_242 -> m26_245  [color=darkseagreen4, key=1, label=stats, style=dashed];
m26_242 -> m26_246  [color=darkseagreen4, key=1, label=stats, style=dashed];
m26_242 -> m26_247  [color=darkseagreen4, key=1, label=stats, style=dashed];
m26_242 -> m26_248  [color=darkseagreen4, key=1, label=stats, style=dashed];
m26_242 -> m26_249  [color=darkseagreen4, key=1, label=stats, style=dashed];
m26_242 -> m26_250  [color=darkseagreen4, key=1, label=stats, style=dashed];
m26_242 -> m26_252  [color=darkseagreen4, key=1, label=stats, style=dashed];
m26_245 -> m26_78  [key=2, style=dotted];
m26_245 -> m26_246  [key=0, style=solid];
m26_245 -> m26_255  [key=2, style=dotted];
m26_251 -> m26_252  [color=green, key=0, style=solid];
m26_251 -> m26_78  [color=green, key=2, style=dotted];
m26_251 -> m26_255  [color=green, key=2, style=dotted];
m26_250 -> m26_251  [color=green, key=0, style=solid];
m26_250 -> m26_78  [key=2, style=dotted];
m26_250 -> m26_206  [key=2, style=dotted];
m26_252 -> m26_253  [key=0, style=solid];
m26_316 -> m26_317  [key=0, style=solid];
m26_319 -> m26_320  [key=0, style=solid];
m26_335 -> m26_336  [color=green, key=0, style=solid];
m26_336 -> m26_337  [color=green, key=0, style=solid];
m26_336 -> m26_338  [color=green, key=2, style=dotted];
m26_336 -> m26_101  [color=green, key=2, style=dotted];
m26_337 -> m26_335  [color=blue, key=0, style=bold];
m26_12 -> m26_14  [key=2, style=dotted];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_18  [key=2, style=dotted];
m26_31 -> m26_14  [key=2, style=dotted];
m26_31 -> m26_32  [key=0, style=solid];
m26_56 -> m26_45  [key=2, style=dotted];
m26_56 -> m26_57  [key=0, style=solid];
m26_56 -> m26_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_66 -> m26_68  [key=2, style=dotted];
m26_66 -> m26_67  [key=0, style=solid];
m26_73 -> m26_68  [key=2, style=dotted];
m26_73 -> m26_74  [key=0, style=solid];
m26_156 -> m26_157  [key=0, style=solid];
m26_156 -> m26_158  [key=2, style=dotted];
m26_166 -> m26_168  [key=2, style=dotted];
m26_166 -> m26_167  [key=0, style=solid];
m26_176 -> m26_177  [key=0, style=solid];
m26_176 -> m26_178  [key=2, style=dotted];
m26_183 -> m26_184  [key=0, style=solid];
m26_183 -> m26_185  [key=2, style=dotted];
m26_190 -> m26_191  [key=0, style=solid];
m26_190 -> m26_185  [key=2, style=dotted];
m26_225 -> m26_14  [key=2, style=dotted];
m26_225 -> m26_226  [key=0, style=solid];
m26_231 -> m26_14  [key=2, style=dotted];
m26_231 -> m26_232  [key=0, style=solid];
m26_48 -> m26_46  [color=blue, key=0, style=bold];
m26_47 -> m26_50  [key=2, style=dotted];
m26_47 -> m26_48  [key=0, style=solid];
m26_47 -> m26_49  [key=2, style=dotted];
m26_47 -> m26_51  [key=2, style=dotted];
m26_80 -> m26_78  [key=2, style=dotted];
m26_80 -> m26_81  [key=0, style=solid];
m26_80 -> m26_82  [color=darkseagreen4, key=1, label=servers, style=dashed];
m26_80 -> m26_87  [key=2, style=dotted];
m26_246 -> m26_78  [key=2, style=dotted];
m26_246 -> m26_255  [key=2, style=dotted];
m26_246 -> m26_247  [key=0, style=solid];
m26_247 -> m26_78  [key=2, style=dotted];
m26_247 -> m26_255  [key=2, style=dotted];
m26_247 -> m26_248  [key=0, style=solid];
m26_248 -> m26_78  [key=2, style=dotted];
m26_248 -> m26_255  [key=2, style=dotted];
m26_248 -> m26_249  [key=0, style=solid];
m26_249 -> m26_78  [key=2, style=dotted];
m26_249 -> m26_250  [key=0, style=solid];
m26_249 -> m26_206  [key=2, style=dotted];
m26_86 -> m26_79  [color=blue, key=0, style=bold];
m26_85 -> m26_86  [key=0, style=solid];
m26_120 -> m26_101  [key=2, style=dotted];
m26_120 -> m26_121  [key=0, style=solid];
m26_120 -> m26_122  [key=2, style=dotted];
m26_121 -> m26_119  [color=blue, key=0, style=bold];
m26_155 -> m26_156  [key=0, style=solid];
m26_191 -> m26_189  [color=blue, key=0, style=bold];
m26_199 -> m26_201  [key=0, style=solid];
m26_199 -> m26_200  [key=0, style=solid];
m26_210 -> m26_211  [key=0, style=solid];
m26_213 -> m26_214  [key=0, style=solid];
m26_200 -> m26_204  [key=0, style=solid];
m26_256 -> m26_257  [key=0, style=solid];
m26_253 -> m26_241  [color=blue, key=0, style=bold];
m26_292 -> m26_293  [key=0, style=solid];
m26_292 -> m26_275  [key=2, style=dotted];
m26_292 -> m26_276  [key=2, style=dotted];
m26_291 -> m26_292  [key=0, style=solid];
m26_294 -> m26_295  [key=0, style=solid];
m26_318 -> m26_316  [color=blue, key=0, style=bold];
m26_317 -> m26_318  [key=0, style=solid];
m26_321 -> m26_319  [color=blue, key=0, style=bold];
m26_320 -> m26_321  [key=0, style=solid];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_13 -> m26_11  [color=blue, key=0, style=bold];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_19  [key=2, style=dotted];
m26_13 -> m26_15  [color=darkseagreen4, key=1, label=serversRemoved, style=dashed];
m26_30 -> m26_31  [key=0, style=solid];
m26_32 -> m26_30  [color=blue, key=0, style=bold];
m26_55 -> m26_56  [key=0, style=solid];
m26_57 -> m26_55  [color=blue, key=0, style=bold];
m26_58 -> m26_59  [key=0, style=solid];
m26_65 -> m26_66  [key=0, style=solid];
m26_67 -> m26_65  [color=blue, key=0, style=bold];
m26_72 -> m26_73  [key=0, style=solid];
m26_74 -> m26_72  [color=blue, key=0, style=bold];
m26_141 -> m26_142  [key=0, style=solid];
m26_145 -> m26_146  [key=0, style=solid];
m26_149 -> m26_150  [key=0, style=solid];
m26_152 -> m26_153  [key=0, style=solid];
m26_157 -> m26_155  [color=blue, key=0, style=bold];
m26_165 -> m26_166  [key=0, style=solid];
m26_167 -> m26_165  [color=blue, key=0, style=bold];
m26_175 -> m26_176  [key=0, style=solid];
m26_177 -> m26_175  [color=blue, key=0, style=bold];
m26_182 -> m26_183  [key=0, style=solid];
m26_184 -> m26_182  [color=blue, key=0, style=bold];
m26_224 -> m26_225  [key=0, style=solid];
m26_226 -> m26_224  [color=blue, key=0, style=bold];
m26_230 -> m26_231  [key=0, style=solid];
m26_232 -> m26_230  [color=blue, key=0, style=bold];
m26_212 -> m26_210  [color=blue, key=0, style=bold];
m26_211 -> m26_212  [key=0, style=solid];
m26_215 -> m26_213  [color=blue, key=0, style=bold];
m26_214 -> m26_215  [key=0, style=solid];
m26_258 -> m26_256  [color=blue, key=0, style=bold];
m26_257 -> m26_258  [key=0, style=solid];
m26_257 -> m26_144  [key=2, style=dotted];
m26_257 -> m26_259  [key=2, style=dotted];
m26_273 -> m26_274  [key=0, style=solid];
m26_273 -> m26_275  [key=2, style=dotted];
m26_273 -> m26_276  [key=2, style=dotted];
m26_293 -> m26_291  [color=blue, key=0, style=bold];
m26_296 -> m26_294  [color=blue, key=0, style=bold];
m26_295 -> m26_296  [key=0, style=solid];
m26_272 -> m26_273  [key=0, style=solid];
m26_60 -> m26_58  [color=blue, key=0, style=bold];
m26_59 -> m26_51  [key=2, style=dotted];
m26_59 -> m26_60  [key=0, style=solid];
m26_59 -> m26_61  [key=2, style=dotted];
m26_143 -> m26_141  [color=blue, key=0, style=bold];
m26_142 -> m26_143  [key=0, style=solid];
m26_142 -> m26_144  [key=2, style=dotted];
m26_147 -> m26_145  [color=blue, key=0, style=bold];
m26_146 -> m26_147  [key=0, style=solid];
m26_146 -> m26_148  [key=2, style=dotted];
m26_151 -> m26_149  [color=blue, key=0, style=bold];
m26_150 -> m26_151  [key=0, style=solid];
m26_154 -> m26_152  [color=blue, key=0, style=bold];
m26_153 -> m26_154  [key=0, style=solid];
m26_274 -> m26_272  [color=blue, key=0, style=bold];
m26_278 -> m26_279  [key=0, style=solid];
m26_279 -> m26_277  [color=blue, key=0, style=bold];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_26 -> m26_22  [color=blue, key=0, style=bold];
m26_26 -> m26_7  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m26_26 -> m26_8  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m26_26 -> m26_12  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m26_26 -> m26_13  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m26_26 -> m26_16  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m26_102 -> m26_103  [color=green, key=0, style=solid];
m26_102 -> m26_106  [color=green, key=1, label=int, style=dashed];
m26_103 -> m26_104  [color=green, key=0, style=solid];
m26_103 -> m26_10  [color=green, key=2, style=dotted];
m26_103 -> m26_105  [color=green, key=1, label="lambda expression", style=dashed];
m26_104 -> m26_102  [color=blue, key=0, style=bold];
m26_178 -> m26_371  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_178 -> m26_370  [key=0, style=solid];
m26_374 -> m26_90  [key=2, style=dotted];
m26_374 -> m26_209  [key=2, style=dotted];
m26_374 -> m26_373  [key=0, style=solid];
m26_374 -> m26_378  [key=2, style=dotted];
m26_374 -> m26_379  [key=2, style=dotted];
m26_374 -> m26_380  [key=2, style=dotted];
m26_371 -> m26_78  [key=2, style=dotted];
m26_371 -> m26_87  [key=2, style=dotted];
m26_371 -> m26_372  [key=0, style=solid];
m26_371 -> m26_373  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m26_372 -> m26_374  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_372 -> m26_373  [key=0, style=solid];
m26_372 -> m26_377  [key=2, style=dotted];
m26_372 -> m26_375  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_373 -> m26_374  [key=0, style=solid];
m26_373 -> m26_375  [key=0, style=solid];
m26_370 -> m26_371  [key=0, style=solid];
m26_375 -> m26_376  [key=0, style=solid];
m26_375 -> m26_369  [key=2, style=dotted];
m26_376 -> m26_178  [color=blue, key=0, style=bold];
m26_192 -> m26_193  [color=green, key=0, style=solid];
m26_192 -> m26_197  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_193 -> m26_194  [color=green, key=0, style=solid];
m26_193 -> m26_10  [color=green, key=2, style=dotted];
m26_193 -> m26_195  [color=green, key=1, label="lambda expression", style=dashed];
m26_194 -> m26_192  [color=blue, key=0, style=bold];
m26_7 -> m26_8  [key=0, style=solid];
m26_8 -> m26_10  [key=2, style=dotted];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_9 -> m26_7  [color=blue, key=0, style=bold];
m26_9 -> m26_2  [color=blue, key=0, style=bold];
m26_168 -> m26_331  [color=green, key=1, label=SqlConnection, style=dashed];
m26_168 -> m26_330  [key=0, style=solid];
m26_331 -> m26_332  [color=green, key=0, style=solid];
m26_331 -> m26_78  [color=green, key=2, style=dotted];
m26_331 -> m26_87  [color=green, key=2, style=dotted];
m26_330 -> m26_331  [color=green, key=0, style=solid];
m26_332 -> m26_333  [color=green, key=0, style=solid];
m26_332 -> m26_334  [color=green, key=2, style=dotted];
m26_332 -> m26_335  [color=green, key=1, label="lambda expression", style=dashed];
m26_333 -> m26_168  [color=blue, key=0, style=bold];
m26_221 -> m26_222  [key=0, style=solid];
m26_222 -> m26_10  [key=2, style=dotted];
m26_222 -> m26_223  [key=0, style=solid];
m26_222 -> m26_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_223 -> m26_221  [color=blue, key=0, style=bold];
m26_91 -> m26_92  [color=green, key=0, style=solid];
m26_91 -> m26_95  [color=green, key=1, label=int, style=dashed];
m26_92 -> m26_93  [color=green, key=0, style=solid];
m26_92 -> m26_10  [color=green, key=2, style=dotted];
m26_92 -> m26_94  [color=green, key=1, label="lambda expression", style=dashed];
m26_93 -> m26_91  [color=blue, key=0, style=bold];
m26_343 -> m26_344  [color=green, key=0, style=solid];
m26_343 -> m26_345  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_344 -> m26_345  [color=green, key=0, style=solid];
m26_344 -> m26_350  [color=green, key=2, style=dotted];
m26_344 -> m26_346  [color=green, key=1, label=data, style=dashed];
m26_345 -> m26_346  [key=0, style=solid];
m26_346 -> m26_349  [key=0, style=solid];
m26_346 -> m26_351  [key=2, style=dotted];
m26_348 -> m26_349  [key=0, style=solid];
m26_347 -> m26_348  [key=0, style=solid];
m26_349 -> m26_343  [color=blue, key=0, style=bold];
m26_75 -> m26_76  [color=green, key=0, style=solid];
m26_76 -> m26_77  [color=green, key=0, style=solid];
m26_76 -> m26_78  [color=green, key=2, style=dotted];
m26_76 -> m26_79  [color=green, key=1, label="lambda expression", style=dashed];
m26_77 -> m26_75  [color=blue, key=0, style=bold];
m26_39 -> m26_40  [color=green, key=0, style=solid];
m26_39 -> m26_43  [color=green, key=1, label=int, style=dashed];
m26_40 -> m26_41  [color=green, key=0, style=solid];
m26_40 -> m26_10  [color=green, key=2, style=dotted];
m26_40 -> m26_42  [color=green, key=1, label="lambda expression", style=dashed];
m26_41 -> m26_39  [color=blue, key=0, style=bold];
m26_20 -> m26_322  [key=0, style=solid];
m26_322 -> m26_323  [key=0, style=solid];
m26_322 -> m26_326  [key=2, style=dotted];
m26_323 -> m26_324  [key=0, style=solid];
m26_323 -> m26_144  [key=2, style=dotted];
m26_324 -> m26_325  [key=0, style=solid];
m26_325 -> m26_20  [color=blue, key=0, style=bold];
m26_52 -> m26_53  [key=0, style=solid];
m26_52 -> m26_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_53 -> m26_10  [key=2, style=dotted];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_54 -> m26_52  [color=blue, key=0, style=bold];
m26_69 -> m26_70  [key=0, style=solid];
m26_70 -> m26_10  [key=2, style=dotted];
m26_70 -> m26_71  [key=0, style=solid];
m26_70 -> m26_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_71 -> m26_69  [color=blue, key=0, style=bold];
m26_179 -> m26_180  [key=0, style=solid];
m26_180 -> m26_10  [key=2, style=dotted];
m26_180 -> m26_181  [key=0, style=solid];
m26_180 -> m26_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_181 -> m26_179  [color=blue, key=0, style=bold];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_22  [key=2, style=dotted];
m26_16 -> m26_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_16 -> m26_20  [key=2, style=dotted];
m26_15 -> m26_16  [key=0, style=solid];
m26_15 -> m26_20  [key=2, style=dotted];
m26_15 -> m26_21  [key=2, style=dotted];
m26_15 -> m26_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_17 -> m26_11  [color=blue, key=0, style=bold];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_21  [key=2, style=dotted];
m26_62 -> m26_63  [key=0, style=solid];
m26_63 -> m26_10  [key=2, style=dotted];
m26_63 -> m26_64  [key=0, style=solid];
m26_63 -> m26_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_64 -> m26_62  [color=blue, key=0, style=bold];
m26_68 -> m26_288  [color=green, key=1, label=SqlConnection, style=dashed];
m26_68 -> m26_280  [key=0, style=solid];
m26_68 -> m26_287  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_68 -> m26_292  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_288 -> m26_289  [color=green, key=0, style=solid];
m26_288 -> m26_271  [color=green, key=2, style=dotted];
m26_287 -> m26_288  [color=green, key=0, style=solid];
m26_287 -> m26_207  [key=2, style=dotted];
m26_287 -> m26_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_287 -> m26_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_284 -> m26_90  [key=2, style=dotted];
m26_284 -> m26_285  [key=0, style=solid];
m26_280 -> m26_284  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m26_280 -> m26_281  [key=0, style=solid];
m26_280 -> m26_285  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m26_281 -> m26_287  [color=darkseagreen4, key=1, label=dates, style=dashed];
m26_281 -> m26_88  [key=2, style=dotted];
m26_281 -> m26_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m26_281 -> m26_282  [key=0, style=solid];
m26_283 -> m26_287  [key=0, style=solid];
m26_283 -> m26_284  [key=0, style=solid];
m26_285 -> m26_285  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m26_285 -> m26_286  [key=0, style=solid];
m26_285 -> m26_290  [key=2, style=dotted];
m26_282 -> m26_283  [key=0, style=solid];
m26_282 -> m26_286  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_286 -> m26_283  [key=0, style=solid];
m26_286 -> m26_286  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_289 -> m26_68  [color=blue, key=0, style=bold];
m26_297 -> m26_299  [color=green, key=1, label=SqlConnection, style=dashed];
m26_297 -> m26_305  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m26_297 -> m26_298  [key=0, style=solid];
m26_297 -> m26_300  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m26_297 -> m26_306  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m26_297 -> m26_307  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m26_299 -> m26_300  [color=green, key=0, style=solid];
m26_299 -> m26_311  [color=green, key=2, style=dotted];
m26_299 -> m26_207  [color=green, key=2, style=dotted];
m26_299 -> m26_316  [color=green, key=1, label="lambda expression", style=dashed];
m26_299 -> m26_319  [color=green, key=1, label="lambda expression", style=dashed];
m26_299 -> m26_301  [color=green, key=1, label=valuesMap, style=dashed];
m26_299 -> m26_302  [color=green, key=1, label=valuesMap, style=dashed];
m26_299 -> m26_306  [color=green, key=1, label=valuesMap, style=dashed];
m26_298 -> m26_299  [color=green, key=0, style=solid];
m26_300 -> m26_301  [key=0, style=solid];
m26_300 -> m26_303  [key=0, style=solid];
m26_300 -> m26_302  [color=darkseagreen4, key=1, label=key, style=dashed];
m26_301 -> m26_300  [key=0, style=solid];
m26_301 -> m26_302  [key=0, style=solid];
m26_301 -> m26_312  [key=2, style=dotted];
m26_302 -> m26_300  [key=0, style=solid];
m26_302 -> m26_313  [key=2, style=dotted];
m26_306 -> m26_307  [key=0, style=solid];
m26_306 -> m26_315  [key=2, style=dotted];
m26_305 -> m26_306  [color=green, key=0, style=solid];
m26_305 -> m26_309  [color=green, key=0, style=solid];
m26_304 -> m26_305  [color=green, key=0, style=solid];
m26_304 -> m26_306  [color=green, key=1, label=i, style=dashed];
m26_304 -> m26_307  [color=green, key=1, label=i, style=dashed];
m26_304 -> m26_308  [color=green, key=1, label=i, style=dashed];
m26_308 -> m26_305  [color=green, key=0, style=solid];
m26_308 -> m26_308  [color=green, key=1, label=i, style=dashed];
m26_309 -> m26_310  [key=0, style=solid];
m26_303 -> m26_304  [color=green, key=0, style=solid];
m26_303 -> m26_309  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_303 -> m26_314  [key=2, style=dotted];
m26_303 -> m26_307  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_307 -> m26_308  [color=green, key=0, style=solid];
m26_307 -> m26_315  [key=2, style=dotted];
m26_307 -> m26_313  [key=2, style=dotted];
m26_310 -> m26_297  [color=blue, key=0, style=bold];
m26_159 -> m26_160  [color=green, key=0, style=solid];
m26_159 -> m26_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_160 -> m26_161  [color=green, key=0, style=solid];
m26_160 -> m26_20  [color=green, key=2, style=dotted];
m26_161 -> m26_162  [key=0, style=solid];
m26_161 -> m26_164  [key=2, style=dotted];
m26_161 -> m26_166  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m26_162 -> m26_10  [key=2, style=dotted];
m26_162 -> m26_163  [key=0, style=solid];
m26_162 -> m26_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_163 -> m26_159  [color=blue, key=0, style=bold];
m26_33 -> m26_34  [color=green, key=0, style=solid];
m26_34 -> m26_35  [color=green, key=0, style=solid];
m26_34 -> m26_10  [color=green, key=2, style=dotted];
m26_34 -> m26_36  [color=green, key=1, label="lambda expression", style=dashed];
m26_35 -> m26_33  [color=blue, key=0, style=bold];
m26_381 -> m26_4  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_34  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_37  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_40  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_43  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_76  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_92  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_95  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_103  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_106  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_114  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_117  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_160  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_187  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_193  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_203  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_235  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_288  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_332  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_340  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_28  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_53  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_56  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_63  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_66  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_73  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_124  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_129  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_156  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_162  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_166  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_170  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_172  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_180  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_183  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_190  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_222  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_225  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_228  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_231  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_236  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_322  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_327  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_339  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_381 -> m26_374  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_382 -> m26_43  [color=green, key=1, label=int, style=dashed];
m26_383 -> m26_43  [color=green, key=1, label=int, style=dashed];
m26_386 -> m26_95  [color=green, key=1, label=int, style=dashed];
m26_387 -> m26_95  [color=green, key=1, label=int, style=dashed];
m26_388 -> m26_106  [color=green, key=1, label=int, style=dashed];
m26_389 -> m26_106  [color=green, key=1, label=int, style=dashed];
m26_390 -> m26_117  [color=green, key=1, label=int, style=dashed];
m26_391 -> m26_117  [color=green, key=1, label=int, style=dashed];
m26_395 -> m26_197  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_396 -> m26_243  [color=darkseagreen4, key=1, label=sql, style=dashed];
m26_384 -> m26_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_385 -> m26_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_392 -> m26_156  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m26_393 -> m26_166  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m26_394 -> m26_176  [color=darkseagreen4, key=1, label=fetchedJobIds, style=dashed];
m26_398 -> m26_292  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_397 -> m26_273  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_4  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=0, style=solid];
m27_4 -> m27_5  [key=0, style=solid];
m27_2 -> m27_5  [key=0, style=solid];
m27_2 -> m27_6  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid];
m27_5 -> m27_0  [color=blue, key=0, style=bold];
m27_7 -> m27_8  [color=red, key=0, style=solid];
m27_8 -> m27_9  [color=red, key=0, style=solid];
m27_8 -> m27_10  [color=red, key=2, style=dotted];
m27_8 -> m27_11  [color=red, key=2, style=dotted];
m27_8 -> m27_12  [color=red, key=2, style=dotted];
m27_8 -> m27_13  [color=red, key=2, style=dotted];
m27_9 -> m27_7  [color=blue, key=0, style=bold];
m27_14 -> m27_3  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m27_14 -> m27_4  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m27_14 -> m27_8  [color=red, key=1, label="HangFire.States.FailedState", style=dashed];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_2 -> m29_0  [color=blue, key=0, style=bold];
m29_3 -> m29_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_0  [color=blue, key=0, style=bold];
m31_22 -> m31_23  [key=0, style=solid];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_25  [key=2, style=dotted];
m31_24 -> m31_22  [color=blue, key=0, style=bold];
m31_25 -> m31_25  [color=darkorchid, key=3, label="Property variable bool IsFinal", style=bold];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_16  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_15  [color=darkseagreen4, key=1, label=scheduledState, style=dashed];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_21  [key=2, style=dotted];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_15  [key=0, style=solid];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_20  [key=2, style=dotted];
m31_14 -> m31_17  [key=0, style=solid];
m31_14 -> m31_18  [key=2, style=dotted];
m31_14 -> m31_19  [key=2, style=dotted];
m31_17 -> m31_11  [color=blue, key=0, style=bold];
m31_6 -> m31_7  [key=0, style=solid];
m31_7 -> m31_8  [key=0, style=solid];
m31_7 -> m31_9  [key=2, style=dotted];
m31_7 -> m31_10  [key=2, style=dotted];
m31_8 -> m31_6  [color=blue, key=0, style=bold];
m31_2 -> m31_3  [key=0, style=solid];
m31_3 -> m31_4  [key=0, style=solid];
m31_4 -> m31_5  [key=0, style=solid];
m31_5 -> m31_2  [color=blue, key=0, style=bold];
m31_26 -> m31_3  [color=darkseagreen4, key=1, label="Hangfire.States.ScheduledState", style=dashed];
m31_26 -> m31_4  [color=darkseagreen4, key=1, label="Hangfire.States.ScheduledState", style=dashed];
m31_26 -> m31_7  [color=darkseagreen4, key=1, label="Hangfire.States.ScheduledState", style=dashed];
m32_0 -> m32_1  [key=0, style=solid];
m32_2 -> m32_3  [color=green, key=0, style=solid];
m32_2 -> m32_7  [color=green, key=2, style=dotted];
m32_1 -> m32_2  [color=green, key=0, style=solid];
m32_1 -> m32_4  [key=2, style=dotted];
m32_1 -> m32_5  [key=2, style=dotted];
m32_1 -> m32_6  [key=2, style=dotted];
m32_3 -> m32_0  [color=blue, key=0, style=bold];
m32_44 -> m32_45  [key=0, style=solid];
m32_50 -> m32_51  [color=green, key=0, style=solid];
m32_50 -> m32_52  [color=green, key=2, style=dotted];
m32_50 -> m32_53  [color=green, key=2, style=dotted];
m32_50 -> m32_54  [color=green, key=2, style=dotted];
m32_45 -> m32_50  [color=green, key=1, label=redis, style=dashed];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_31  [key=2, style=dotted];
m32_45 -> m32_47  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_49 -> m32_50  [color=green, key=0, style=solid];
m32_49 -> m32_38  [key=2, style=dotted];
m32_48 -> m32_49  [key=0, style=solid];
m32_48 -> m32_37  [key=2, style=dotted];
m32_46 -> m32_47  [key=0, style=solid];
m32_46 -> m32_32  [key=2, style=dotted];
m32_47 -> m32_48  [key=0, style=solid];
m32_47 -> m32_33  [key=2, style=dotted];
m32_51 -> m32_44  [color=blue, key=0, style=bold];
m32_27 -> m32_13  [key=2, style=dotted];
m32_27 -> m32_28  [key=0, style=solid];
m32_23 -> m32_24  [key=0, style=solid];
m32_23 -> m32_37  [key=2, style=dotted];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_38  [key=2, style=dotted];
m32_22 -> m32_35  [key=2, style=dotted];
m32_22 -> m32_36  [key=2, style=dotted];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_34  [key=2, style=dotted];
m32_25 -> m32_26  [key=0, style=solid];
m32_25 -> m32_39  [key=2, style=dotted];
m32_25 -> m32_13  [key=2, style=dotted];
m32_19 -> m32_31  [key=2, style=dotted];
m32_19 -> m32_22  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_19 -> m32_25  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_21  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_19 -> m32_26  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_19 -> m32_28  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_21 -> m32_22  [key=0, style=solid];
m32_21 -> m32_33  [key=2, style=dotted];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_40  [key=2, style=dotted];
m32_20 -> m32_32  [key=2, style=dotted];
m32_20 -> m32_21  [key=0, style=solid];
m32_18 -> m32_19  [key=0, style=solid];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_41  [key=2, style=dotted];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_42  [key=2, style=dotted];
m32_29 -> m32_43  [key=2, style=dotted];
m32_30 -> m32_18  [color=blue, key=0, style=bold];
m32_55 -> m32_56  [key=0, style=solid];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_37  [key=2, style=dotted];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_38  [key=2, style=dotted];
m32_59 -> m32_35  [key=2, style=dotted];
m32_59 -> m32_36  [key=2, style=dotted];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_34  [key=2, style=dotted];
m32_62 -> m32_63  [key=0, style=solid];
m32_62 -> m32_39  [key=2, style=dotted];
m32_62 -> m32_13  [key=2, style=dotted];
m32_56 -> m32_31  [key=2, style=dotted];
m32_56 -> m32_59  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_56 -> m32_62  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_58  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_56 -> m32_63  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_56 -> m32_64  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_33  [key=2, style=dotted];
m32_63 -> m32_39  [key=2, style=dotted];
m32_63 -> m32_13  [key=2, style=dotted];
m32_63 -> m32_64  [key=0, style=solid];
m32_57 -> m32_32  [key=2, style=dotted];
m32_57 -> m32_58  [key=0, style=solid];
m32_64 -> m32_65  [key=0, style=solid];
m32_64 -> m32_41  [key=2, style=dotted];
m32_65 -> m32_66  [key=0, style=solid];
m32_65 -> m32_42  [key=2, style=dotted];
m32_65 -> m32_43  [key=2, style=dotted];
m32_66 -> m32_55  [color=blue, key=0, style=bold];
m32_37 -> m32_77  [key=0, style=solid];
m32_77 -> m32_78  [key=0, style=solid];
m32_77 -> m32_17  [key=2, style=dotted];
m32_78 -> m32_37  [color=blue, key=0, style=bold];
m32_14 -> m32_15  [key=0, style=solid];
m32_15 -> m32_17  [key=2, style=dotted];
m32_15 -> m32_16  [key=0, style=solid];
m32_16 -> m32_14  [color=blue, key=0, style=bold];
m32_67 -> m32_68  [key=0, style=solid];
m32_72 -> m32_73  [color=green, key=0, style=solid];
m32_72 -> m32_35  [color=green, key=2, style=dotted];
m32_72 -> m32_36  [color=green, key=2, style=dotted];
m32_68 -> m32_72  [color=green, key=1, label=redis, style=dashed];
m32_68 -> m32_69  [key=0, style=solid];
m32_68 -> m32_31  [key=2, style=dotted];
m32_68 -> m32_70  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_68 -> m32_71  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_68 -> m32_75  [color=darkseagreen4, key=1, label=redis, style=dashed];
m32_71 -> m32_72  [color=green, key=0, style=solid];
m32_71 -> m32_34  [key=2, style=dotted];
m32_71 -> m32_35  [key=2, style=dotted];
m32_71 -> m32_36  [key=2, style=dotted];
m32_73 -> m32_74  [key=0, style=solid];
m32_73 -> m32_37  [key=2, style=dotted];
m32_74 -> m32_75  [key=0, style=solid];
m32_74 -> m32_38  [key=2, style=dotted];
m32_69 -> m32_70  [key=0, style=solid];
m32_69 -> m32_32  [key=2, style=dotted];
m32_70 -> m32_71  [key=0, style=solid];
m32_70 -> m32_33  [key=2, style=dotted];
m32_75 -> m32_76  [key=0, style=solid];
m32_75 -> m32_39  [key=2, style=dotted];
m32_75 -> m32_13  [key=2, style=dotted];
m32_76 -> m32_67  [color=blue, key=0, style=bold];
m32_8 -> m32_9  [key=0, style=solid];
m32_10 -> m32_13  [key=2, style=dotted];
m32_10 -> m32_11  [key=0, style=solid];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_9 -> m32_12  [key=2, style=dotted];
m32_11 -> m32_8  [color=blue, key=0, style=bold];
m32_79 -> m32_2  [color=green, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_1  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_23  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_24  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_48  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_49  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_60  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_61  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_73  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_74  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m32_79 -> m32_77  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m33_0 -> m33_1  [color=red, key=0, style=solid];
m33_1 -> m33_2  [color=red, key=0, style=solid];
m33_2 -> m33_3  [color=red, key=0, style=solid];
m33_2 -> m33_7  [color=red, key=2, style=dotted];
m33_2 -> m33_10  [color=red, key=1, label="lambda expression", style=dashed];
m33_3 -> m33_4  [color=red, key=0, style=solid];
m33_4 -> m33_5  [color=red, key=0, style=solid];
m33_4 -> m33_8  [color=red, key=2, style=dotted];
m33_5 -> m33_6  [color=red, key=0, style=solid];
m33_5 -> m33_9  [color=red, key=2, style=dotted];
m33_6 -> m33_0  [color=blue, key=0, style=bold];
m33_14 -> m33_15  [color=red, key=0, style=solid];
m33_10 -> m33_11  [color=red, key=0, style=solid];
m33_11 -> m33_12  [color=red, key=0, style=solid];
m33_11 -> m33_13  [color=red, key=2, style=dotted];
m33_12 -> m33_10  [color=blue, key=0, style=bold];
m33_15 -> m33_16  [color=red, key=0, style=solid];
m33_15 -> m33_17  [color=red, key=2, style=dotted];
m33_16 -> m33_14  [color=blue, key=0, style=bold];
m33_18 -> m33_1  [color=red, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m33_18 -> m33_2  [color=red, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m33_18 -> m33_3  [color=red, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m33_18 -> m33_4  [color=red, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m33_18 -> m33_5  [color=red, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m33_18 -> m33_15  [color=red, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m34_6 -> m34_7  [color=red, key=0, style=solid];
m34_7 -> m34_8  [color=red, key=0, style=solid];
m34_7 -> m34_4  [color=red, key=2, style=dotted];
m34_8 -> m34_6  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [color=red, key=0, style=solid];
m34_1 -> m34_2  [color=red, key=0, style=solid];
m34_1 -> m34_3  [color=red, key=2, style=dotted];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
m34_4 -> m34_5  [key=0, style=solid];
m34_5 -> m34_4  [color=blue, key=0, style=bold];
m34_9 -> m34_1  [color=red, key=1, label="HangFire.Web.GenericHandler", style=dashed];
m34_9 -> m34_7  [color=red, key=1, label="HangFire.Web.GenericHandler", style=dashed];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_0  [color=blue, key=0, style=bold];
m36_22 -> m36_23  [key=0, style=solid];
m36_23 -> m36_22  [color=blue, key=0, style=bold];
m36_26 -> m36_27  [key=0, style=solid];
m36_27 -> m36_26  [color=blue, key=0, style=bold];
m36_2 -> m36_3  [key=0, style=solid];
m36_3 -> m36_2  [color=blue, key=0, style=bold];
m36_18 -> m36_19  [key=0, style=solid];
m36_19 -> m36_18  [color=blue, key=0, style=bold];
m36_28 -> m36_29  [key=0, style=solid];
m36_29 -> m36_28  [color=blue, key=0, style=bold];
m36_8 -> m36_9  [key=0, style=solid];
m36_9 -> m36_8  [color=blue, key=0, style=bold];
m36_12 -> m36_13  [key=0, style=solid];
m36_13 -> m36_12  [color=blue, key=0, style=bold];
m36_30 -> m36_31  [key=0, style=solid];
m36_31 -> m36_30  [color=blue, key=0, style=bold];
m36_10 -> m36_11  [key=0, style=solid];
m36_11 -> m36_10  [color=blue, key=0, style=bold];
m36_20 -> m36_21  [key=0, style=solid];
m36_21 -> m36_20  [color=blue, key=0, style=bold];
m36_14 -> m36_15  [key=0, style=solid];
m36_15 -> m36_14  [color=blue, key=0, style=bold];
m36_4 -> m36_5  [key=0, style=solid];
m36_5 -> m36_4  [color=blue, key=0, style=bold];
m36_6 -> m36_7  [key=0, style=solid];
m36_7 -> m36_6  [color=blue, key=0, style=bold];
m36_16 -> m36_17  [key=0, style=solid];
m36_17 -> m36_16  [color=blue, key=0, style=bold];
m36_24 -> m36_25  [key=0, style=solid];
m36_25 -> m36_24  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [color=red, key=0, style=solid];
m38_1 -> m38_2  [color=red, key=0, style=solid];
m38_1 -> m38_33  [color=red, key=1, label="System.Exception", style=dashed];
m38_2 -> m38_3  [color=red, key=0, style=solid];
m38_2 -> m38_30  [color=red, key=2, style=dotted];
m38_2 -> m38_36  [color=red, key=1, label="lambda expression", style=dashed];
m38_3 -> m38_4  [color=red, key=0, style=solid];
m38_3 -> m38_31  [color=red, key=2, style=dotted];
m38_3 -> m38_40  [color=red, key=1, label="lambda expression", style=dashed];
m38_4 -> m38_5  [color=red, key=0, style=solid];
m38_4 -> m38_31  [color=red, key=2, style=dotted];
m38_4 -> m38_44  [color=red, key=1, label="lambda expression", style=dashed];
m38_5 -> m38_6  [color=red, key=0, style=solid];
m38_5 -> m38_31  [color=red, key=2, style=dotted];
m38_5 -> m38_48  [color=red, key=1, label="lambda expression", style=dashed];
m38_6 -> m38_7  [color=red, key=0, style=solid];
m38_6 -> m38_31  [color=red, key=2, style=dotted];
m38_6 -> m38_52  [color=red, key=1, label="lambda expression", style=dashed];
m38_7 -> m38_8  [color=red, key=0, style=solid];
m38_7 -> m38_31  [color=red, key=2, style=dotted];
m38_7 -> m38_56  [color=red, key=1, label="lambda expression", style=dashed];
m38_8 -> m38_9  [color=red, key=0, style=solid];
m38_8 -> m38_31  [color=red, key=2, style=dotted];
m38_8 -> m38_64  [color=red, key=1, label="lambda expression", style=dashed];
m38_9 -> m38_10  [color=red, key=0, style=solid];
m38_9 -> m38_31  [color=red, key=2, style=dotted];
m38_9 -> m38_71  [color=red, key=1, label="lambda expression", style=dashed];
m38_10 -> m38_11  [color=red, key=0, style=solid];
m38_10 -> m38_31  [color=red, key=2, style=dotted];
m38_10 -> m38_75  [color=red, key=1, label="lambda expression", style=dashed];
m38_11 -> m38_12  [color=red, key=0, style=solid];
m38_11 -> m38_31  [color=red, key=2, style=dotted];
m38_11 -> m38_82  [color=red, key=1, label="lambda expression", style=dashed];
m38_12 -> m38_13  [color=red, key=0, style=solid];
m38_12 -> m38_31  [color=red, key=2, style=dotted];
m38_12 -> m38_89  [color=red, key=1, label="lambda expression", style=dashed];
m38_13 -> m38_14  [color=red, key=0, style=solid];
m38_13 -> m38_31  [color=red, key=2, style=dotted];
m38_13 -> m38_93  [color=red, key=1, label="lambda expression", style=dashed];
m38_14 -> m38_15  [color=red, key=0, style=solid];
m38_14 -> m38_31  [color=red, key=2, style=dotted];
m38_14 -> m38_99  [color=red, key=1, label="lambda expression", style=dashed];
m38_15 -> m38_16  [color=red, key=0, style=solid];
m38_15 -> m38_31  [color=red, key=2, style=dotted];
m38_15 -> m38_105  [color=red, key=1, label="lambda expression", style=dashed];
m38_16 -> m38_17  [color=red, key=0, style=solid];
m38_16 -> m38_31  [color=red, key=2, style=dotted];
m38_16 -> m38_109  [color=red, key=1, label="lambda expression", style=dashed];
m38_17 -> m38_18  [color=red, key=0, style=solid];
m38_17 -> m38_31  [color=red, key=2, style=dotted];
m38_17 -> m38_113  [color=red, key=1, label="lambda expression", style=dashed];
m38_18 -> m38_19  [color=red, key=0, style=solid];
m38_18 -> m38_31  [color=red, key=2, style=dotted];
m38_18 -> m38_119  [color=red, key=1, label="lambda expression", style=dashed];
m38_19 -> m38_20  [color=red, key=0, style=solid];
m38_19 -> m38_31  [color=red, key=2, style=dotted];
m38_19 -> m38_123  [color=red, key=1, label="lambda expression", style=dashed];
m38_20 -> m38_21  [color=red, key=0, style=solid];
m38_20 -> m38_31  [color=red, key=2, style=dotted];
m38_20 -> m38_129  [color=red, key=1, label="lambda expression", style=dashed];
m38_21 -> m38_22  [color=red, key=0, style=solid];
m38_21 -> m38_31  [color=red, key=2, style=dotted];
m38_21 -> m38_135  [color=red, key=1, label="lambda expression", style=dashed];
m38_22 -> m38_23  [color=red, key=0, style=solid];
m38_22 -> m38_31  [color=red, key=2, style=dotted];
m38_22 -> m38_139  [color=red, key=1, label="lambda expression", style=dashed];
m38_23 -> m38_24  [color=red, key=0, style=solid];
m38_23 -> m38_31  [color=red, key=2, style=dotted];
m38_23 -> m38_145  [color=red, key=1, label="lambda expression", style=dashed];
m38_24 -> m38_25  [color=red, key=0, style=solid];
m38_24 -> m38_31  [color=red, key=2, style=dotted];
m38_24 -> m38_152  [color=red, key=1, label="lambda expression", style=dashed];
m38_25 -> m38_26  [color=red, key=0, style=solid];
m38_25 -> m38_31  [color=red, key=2, style=dotted];
m38_25 -> m38_158  [color=red, key=1, label="lambda expression", style=dashed];
m38_26 -> m38_27  [color=red, key=0, style=solid];
m38_26 -> m38_31  [color=red, key=2, style=dotted];
m38_26 -> m38_162  [color=red, key=1, label="lambda expression", style=dashed];
m38_27 -> m38_28  [color=red, key=0, style=solid];
m38_27 -> m38_31  [color=red, key=2, style=dotted];
m38_27 -> m38_166  [color=red, key=1, label="lambda expression", style=dashed];
m38_28 -> m38_29  [color=red, key=0, style=solid];
m38_28 -> m38_31  [color=red, key=2, style=dotted];
m38_28 -> m38_170  [color=red, key=1, label="lambda expression", style=dashed];
m38_29 -> m38_0  [color=blue, key=0, style=bold];
m38_179 -> m38_180  [color=red, key=0, style=solid];
m38_180 -> m38_181  [color=red, key=0, style=solid];
m38_181 -> m38_179  [color=blue, key=0, style=bold];
m38_220 -> m38_221  [color=red, key=0, style=solid];
m38_220 -> m38_224  [color=darkorchid, key=3, label="Parameter variable string contentFolder", style=bold];
m38_221 -> m38_222  [color=red, key=0, style=solid];
m38_221 -> m38_223  [color=red, key=2, style=dotted];
m38_222 -> m38_220  [color=blue, key=0, style=bold];
m38_200 -> m38_201  [color=red, key=0, style=solid];
m38_200 -> m38_209  [color=red, key=1, label=string, style=dashed];
m38_200 -> m38_212  [color=red, key=3, label="method methodReturn IHttpHandler FindHandler", style=bold];
m38_201 -> m38_202  [color=red, key=0, style=solid];
m38_201 -> m38_203  [color=red, key=0, style=solid];
m38_201 -> m38_214  [color=red, key=2, style=dotted];
m38_209 -> m38_210  [color=red, key=0, style=solid];
m38_209 -> m38_218  [color=red, key=2, style=dotted];
m38_209 -> m38_211  [color=red, key=1, label=match, style=dashed];
m38_202 -> m38_213  [color=red, key=0, style=solid];
m38_202 -> m38_215  [color=red, key=2, style=dotted];
m38_203 -> m38_204  [color=red, key=0, style=solid];
m38_203 -> m38_212  [color=red, key=0, style=solid];
m38_203 -> m38_211  [color=red, key=1, label=pathHandlerFactory, style=dashed];
m38_204 -> m38_205  [color=red, key=0, style=solid];
m38_204 -> m38_206  [color=red, key=1, label=pattern, style=dashed];
m38_204 -> m38_207  [color=red, key=1, label=pattern, style=dashed];
m38_204 -> m38_208  [color=red, key=1, label=pattern, style=dashed];
m38_204 -> m38_209  [color=red, key=1, label=pattern, style=dashed];
m38_212 -> m38_213  [color=red, key=0, style=solid];
m38_211 -> m38_213  [color=red, key=0, style=solid];
m38_211 -> m38_219  [color=red, key=2, style=dotted];
m38_205 -> m38_206  [color=red, key=0, style=solid];
m38_205 -> m38_207  [color=red, key=0, style=solid];
m38_205 -> m38_216  [color=red, key=2, style=dotted];
m38_206 -> m38_207  [color=red, key=0, style=solid];
m38_206 -> m38_206  [color=red, key=1, label=pattern, style=dashed];
m38_206 -> m38_208  [color=red, key=1, label=pattern, style=dashed];
m38_206 -> m38_209  [color=red, key=1, label=pattern, style=dashed];
m38_207 -> m38_208  [color=red, key=0, style=solid];
m38_207 -> m38_209  [color=red, key=0, style=solid];
m38_207 -> m38_217  [color=red, key=2, style=dotted];
m38_208 -> m38_209  [color=red, key=0, style=solid];
m38_208 -> m38_208  [color=red, key=1, label=pattern, style=dashed];
m38_210 -> m38_211  [color=red, key=0, style=solid];
m38_210 -> m38_203  [color=red, key=0, style=solid];
m38_213 -> m38_200  [color=blue, key=0, style=bold];
m38_155 -> m38_156  [color=red, key=0, style=solid];
m38_33 -> m38_34  [color=red, key=0, style=solid];
m38_33 -> m38_35  [color=red, key=2, style=dotted];
m38_36 -> m38_37  [color=red, key=0, style=solid];
m38_40 -> m38_41  [color=red, key=0, style=solid];
m38_44 -> m38_45  [color=red, key=0, style=solid];
m38_48 -> m38_49  [color=red, key=0, style=solid];
m38_52 -> m38_53  [color=red, key=0, style=solid];
m38_56 -> m38_57  [color=red, key=0, style=solid];
m38_64 -> m38_65  [color=red, key=0, style=solid];
m38_71 -> m38_72  [color=red, key=0, style=solid];
m38_75 -> m38_76  [color=red, key=0, style=solid];
m38_82 -> m38_83  [color=red, key=0, style=solid];
m38_89 -> m38_90  [color=red, key=0, style=solid];
m38_93 -> m38_94  [color=red, key=0, style=solid];
m38_99 -> m38_100  [color=red, key=0, style=solid];
m38_105 -> m38_106  [color=red, key=0, style=solid];
m38_109 -> m38_110  [color=red, key=0, style=solid];
m38_113 -> m38_114  [color=red, key=0, style=solid];
m38_119 -> m38_120  [color=red, key=0, style=solid];
m38_123 -> m38_124  [color=red, key=0, style=solid];
m38_129 -> m38_130  [color=red, key=0, style=solid];
m38_135 -> m38_136  [color=red, key=0, style=solid];
m38_139 -> m38_140  [color=red, key=0, style=solid];
m38_145 -> m38_146  [color=red, key=0, style=solid];
m38_145 -> m38_150  [color=red, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m38_152 -> m38_153  [color=red, key=0, style=solid];
m38_152 -> m38_156  [color=red, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m38_158 -> m38_159  [color=red, key=0, style=solid];
m38_162 -> m38_163  [color=red, key=0, style=solid];
m38_166 -> m38_167  [color=red, key=0, style=solid];
m38_170 -> m38_171  [color=red, key=0, style=solid];
m38_32 -> m38_33  [color=red, key=0, style=solid];
m38_34 -> m38_32  [color=blue, key=0, style=bold];
m38_34 -> m38_36  [color=green, key=0, style=bold];
m38_37 -> m38_38  [color=red, key=0, style=solid];
m38_37 -> m38_39  [color=red, key=2, style=dotted];
m38_38 -> m38_36  [color=blue, key=0, style=bold];
m38_38 -> m38_40  [color=green, key=0, style=bold];
m38_41 -> m38_42  [color=red, key=0, style=solid];
m38_41 -> m38_43  [color=red, key=2, style=dotted];
m38_42 -> m38_40  [color=blue, key=0, style=bold];
m38_42 -> m38_44  [color=green, key=0, style=bold];
m38_45 -> m38_46  [color=red, key=0, style=solid];
m38_45 -> m38_47  [color=red, key=2, style=dotted];
m38_46 -> m38_44  [color=blue, key=0, style=bold];
m38_49 -> m38_50  [color=red, key=0, style=solid];
m38_49 -> m38_51  [color=red, key=2, style=dotted];
m38_50 -> m38_48  [color=blue, key=0, style=bold];
m38_53 -> m38_54  [color=red, key=0, style=solid];
m38_53 -> m38_55  [color=red, key=2, style=dotted];
m38_54 -> m38_52  [color=blue, key=0, style=bold];
m38_57 -> m38_58  [color=red, key=0, style=solid];
m38_57 -> m38_59  [color=red, key=2, style=dotted];
m38_57 -> m38_61  [color=red, key=1, label=string, style=dashed];
m38_58 -> m38_56  [color=blue, key=0, style=bold];
m38_61 -> m38_62  [color=red, key=0, style=solid];
m38_61 -> m38_63  [color=red, key=2, style=dotted];
m38_60 -> m38_61  [color=red, key=0, style=solid];
m38_62 -> m38_60  [color=blue, key=0, style=bold];
m38_65 -> m38_66  [color=red, key=0, style=solid];
m38_65 -> m38_59  [color=red, key=2, style=dotted];
m38_65 -> m38_68  [color=red, key=1, label=string, style=dashed];
m38_66 -> m38_64  [color=blue, key=0, style=bold];
m38_68 -> m38_69  [color=red, key=0, style=solid];
m38_68 -> m38_70  [color=red, key=2, style=dotted];
m38_67 -> m38_68  [color=red, key=0, style=solid];
m38_69 -> m38_67  [color=blue, key=0, style=bold];
m38_72 -> m38_73  [color=red, key=0, style=solid];
m38_72 -> m38_74  [color=red, key=2, style=dotted];
m38_73 -> m38_71  [color=blue, key=0, style=bold];
m38_76 -> m38_77  [color=red, key=0, style=solid];
m38_76 -> m38_59  [color=red, key=2, style=dotted];
m38_76 -> m38_79  [color=red, key=1, label=string, style=dashed];
m38_77 -> m38_75  [color=blue, key=0, style=bold];
m38_79 -> m38_80  [color=red, key=0, style=solid];
m38_79 -> m38_81  [color=red, key=2, style=dotted];
m38_78 -> m38_79  [color=red, key=0, style=solid];
m38_80 -> m38_78  [color=blue, key=0, style=bold];
m38_83 -> m38_84  [color=red, key=0, style=solid];
m38_83 -> m38_59  [color=red, key=2, style=dotted];
m38_83 -> m38_86  [color=red, key=1, label=string, style=dashed];
m38_84 -> m38_82  [color=blue, key=0, style=bold];
m38_86 -> m38_87  [color=red, key=0, style=solid];
m38_86 -> m38_88  [color=red, key=2, style=dotted];
m38_85 -> m38_86  [color=red, key=0, style=solid];
m38_87 -> m38_85  [color=blue, key=0, style=bold];
m38_90 -> m38_91  [color=red, key=0, style=solid];
m38_90 -> m38_92  [color=red, key=2, style=dotted];
m38_91 -> m38_89  [color=blue, key=0, style=bold];
m38_94 -> m38_95  [color=red, key=0, style=solid];
m38_94 -> m38_59  [color=red, key=2, style=dotted];
m38_94 -> m38_97  [color=red, key=1, label=string, style=dashed];
m38_95 -> m38_93  [color=blue, key=0, style=bold];
m38_97 -> m38_98  [color=red, key=0, style=solid];
m38_97 -> m38_88  [color=red, key=2, style=dotted];
m38_96 -> m38_97  [color=red, key=0, style=solid];
m38_98 -> m38_96  [color=blue, key=0, style=bold];
m38_100 -> m38_101  [color=red, key=0, style=solid];
m38_100 -> m38_59  [color=red, key=2, style=dotted];
m38_100 -> m38_103  [color=red, key=1, label=string, style=dashed];
m38_101 -> m38_99  [color=blue, key=0, style=bold];
m38_103 -> m38_104  [color=red, key=0, style=solid];
m38_103 -> m38_81  [color=red, key=2, style=dotted];
m38_102 -> m38_103  [color=red, key=0, style=solid];
m38_104 -> m38_102  [color=blue, key=0, style=bold];
m38_106 -> m38_107  [color=red, key=0, style=solid];
m38_106 -> m38_108  [color=red, key=2, style=dotted];
m38_107 -> m38_105  [color=blue, key=0, style=bold];
m38_110 -> m38_111  [color=red, key=0, style=solid];
m38_110 -> m38_112  [color=red, key=2, style=dotted];
m38_111 -> m38_109  [color=blue, key=0, style=bold];
m38_114 -> m38_115  [color=red, key=0, style=solid];
m38_114 -> m38_59  [color=red, key=2, style=dotted];
m38_114 -> m38_117  [color=red, key=1, label=string, style=dashed];
m38_115 -> m38_113  [color=blue, key=0, style=bold];
m38_117 -> m38_118  [color=red, key=0, style=solid];
m38_117 -> m38_88  [color=red, key=2, style=dotted];
m38_116 -> m38_117  [color=red, key=0, style=solid];
m38_118 -> m38_116  [color=blue, key=0, style=bold];
m38_120 -> m38_121  [color=red, key=0, style=solid];
m38_120 -> m38_122  [color=red, key=2, style=dotted];
m38_121 -> m38_119  [color=blue, key=0, style=bold];
m38_124 -> m38_125  [color=red, key=0, style=solid];
m38_124 -> m38_59  [color=red, key=2, style=dotted];
m38_124 -> m38_127  [color=red, key=1, label=string, style=dashed];
m38_125 -> m38_123  [color=blue, key=0, style=bold];
m38_127 -> m38_128  [color=red, key=0, style=solid];
m38_127 -> m38_88  [color=red, key=2, style=dotted];
m38_126 -> m38_127  [color=red, key=0, style=solid];
m38_128 -> m38_126  [color=blue, key=0, style=bold];
m38_130 -> m38_131  [color=red, key=0, style=solid];
m38_130 -> m38_59  [color=red, key=2, style=dotted];
m38_130 -> m38_133  [color=red, key=1, label=string, style=dashed];
m38_131 -> m38_129  [color=blue, key=0, style=bold];
m38_133 -> m38_134  [color=red, key=0, style=solid];
m38_133 -> m38_81  [color=red, key=2, style=dotted];
m38_132 -> m38_133  [color=red, key=0, style=solid];
m38_134 -> m38_132  [color=blue, key=0, style=bold];
m38_136 -> m38_137  [color=red, key=0, style=solid];
m38_136 -> m38_138  [color=red, key=2, style=dotted];
m38_137 -> m38_135  [color=blue, key=0, style=bold];
m38_140 -> m38_141  [color=red, key=0, style=solid];
m38_140 -> m38_59  [color=red, key=2, style=dotted];
m38_140 -> m38_143  [color=red, key=1, label=string, style=dashed];
m38_141 -> m38_139  [color=blue, key=0, style=bold];
m38_143 -> m38_144  [color=red, key=0, style=solid];
m38_143 -> m38_88  [color=red, key=2, style=dotted];
m38_142 -> m38_143  [color=red, key=0, style=solid];
m38_144 -> m38_142  [color=blue, key=0, style=bold];
m38_146 -> m38_147  [color=red, key=0, style=solid];
m38_146 -> m38_148  [color=red, key=2, style=dotted];
m38_150 -> m38_151  [color=red, key=0, style=solid];
m38_150 -> m38_70  [color=red, key=2, style=dotted];
m38_147 -> m38_145  [color=blue, key=0, style=bold];
m38_149 -> m38_150  [color=red, key=0, style=solid];
m38_151 -> m38_149  [color=blue, key=0, style=bold];
m38_153 -> m38_154  [color=red, key=0, style=solid];
m38_153 -> m38_148  [color=red, key=2, style=dotted];
m38_156 -> m38_157  [color=red, key=0, style=solid];
m38_156 -> m38_63  [color=red, key=2, style=dotted];
m38_154 -> m38_152  [color=blue, key=0, style=bold];
m38_157 -> m38_155  [color=blue, key=0, style=bold];
m38_159 -> m38_160  [color=red, key=0, style=solid];
m38_159 -> m38_161  [color=red, key=2, style=dotted];
m38_160 -> m38_158  [color=blue, key=0, style=bold];
m38_163 -> m38_164  [color=red, key=0, style=solid];
m38_163 -> m38_165  [color=red, key=2, style=dotted];
m38_164 -> m38_162  [color=blue, key=0, style=bold];
m38_167 -> m38_168  [color=red, key=0, style=solid];
m38_167 -> m38_169  [color=red, key=2, style=dotted];
m38_168 -> m38_166  [color=blue, key=0, style=bold];
m38_171 -> m38_172  [color=red, key=0, style=solid];
m38_171 -> m38_173  [color=red, key=2, style=dotted];
m38_172 -> m38_170  [color=blue, key=0, style=bold];
m38_182 -> m38_183  [color=red, key=0, style=solid];
m38_182 -> m38_185  [color=red, key=1, label=HttpContext, style=dashed];
m38_182 -> m38_186  [color=red, key=1, label=HttpContext, style=dashed];
m38_182 -> m38_187  [color=red, key=1, label=HttpContext, style=dashed];
m38_182 -> m38_188  [color=red, key=1, label=HttpContext, style=dashed];
m38_182 -> m38_192  [color=red, key=1, label=HttpContext, style=dashed];
m38_182 -> m38_190  [color=red, key=3, label="method methodReturn IHttpHandler GetHandler", style=bold];
m38_183 -> m38_184  [color=red, key=0, style=solid];
m38_183 -> m38_185  [color=red, key=0, style=solid];
m38_185 -> m38_186  [color=red, key=0, style=solid];
m38_185 -> m38_187  [color=red, key=0, style=solid];
m38_186 -> m38_194  [color=red, key=0, style=solid];
m38_186 -> m38_196  [color=red, key=2, style=dotted];
m38_187 -> m38_188  [color=red, key=0, style=solid];
m38_187 -> m38_197  [color=red, key=2, style=dotted];
m38_188 -> m38_189  [color=red, key=0, style=solid];
m38_192 -> m38_194  [color=red, key=0, style=solid];
m38_192 -> m38_196  [color=red, key=2, style=dotted];
m38_184 -> m38_194  [color=red, key=0, style=solid];
m38_184 -> m38_195  [color=red, key=2, style=dotted];
m38_189 -> m38_190  [color=red, key=0, style=solid];
m38_189 -> m38_198  [color=red, key=2, style=dotted];
m38_190 -> m38_191  [color=red, key=0, style=solid];
m38_190 -> m38_199  [color=red, key=2, style=dotted];
m38_190 -> m38_193  [color=red, key=1, label=handler, style=dashed];
m38_191 -> m38_192  [color=red, key=0, style=solid];
m38_191 -> m38_193  [color=red, key=0, style=solid];
m38_193 -> m38_194  [color=red, key=0, style=solid];
m38_194 -> m38_182  [color=blue, key=0, style=bold];
m38_224 -> m38_225  [color=red, key=0, style=solid];
m38_225 -> m38_226  [color=red, key=0, style=solid];
m38_225 -> m38_220  [color=red, key=2, style=dotted];
m38_225 -> m38_223  [color=red, key=2, style=dotted];
m38_226 -> m38_224  [color=blue, key=0, style=bold];
m38_174 -> m38_175  [color=red, key=0, style=solid];
m38_175 -> m38_176  [color=red, key=0, style=solid];
m38_175 -> m38_177  [color=red, key=2, style=dotted];
m38_175 -> m38_178  [color=red, key=2, style=dotted];
m38_176 -> m38_174  [color=blue, key=0, style=bold];
m38_227 -> m38_228  [key=0, style=solid];
m38_228 -> m38_227  [color=blue, key=0, style=bold];
m38_229 -> m38_150  [color=red, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m38_230 -> m38_156  [color=red, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m38_231 -> m38_190  [color=red, key=1, label="HangFire.Web.HangFirePageFactory", style=dashed];
m39_57 -> m39_58  [key=0, style=solid];
m39_57 -> m39_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_60 -> m39_5  [key=2, style=dotted];
m39_60 -> m39_61  [key=0, style=solid];
m39_60 -> m39_64  [key=2, style=dotted];
m39_58 -> m39_60  [color=darkseagreen4, key=1, label=writer, style=dashed];
m39_58 -> m39_59  [key=0, style=solid];
m39_58 -> m39_62  [key=2, style=dotted];
m39_59 -> m39_60  [key=0, style=solid];
m39_59 -> m39_63  [key=2, style=dotted];
m39_61 -> m39_57  [color=blue, key=0, style=bold];
m39_114 -> m39_82  [color=green, key=3, label="Parameter variable int anchor", style=bold];
m39_114 -> m39_77  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter writer", style=bold];
m39_114 -> m39_120  [key=0, style=solid];
m39_114 -> m39_121  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Group", style=dashed];
m39_114 -> m39_122  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_114 -> m39_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_114 -> m39_88  [color=darkorchid, key=3, label="Parameter variable string klass", style=bold];
m39_114 -> m39_89  [color=darkorchid, key=3, label="Parameter variable string klass", style=bold];
m39_114 -> m39_107  [color=darkorchid, key=3, label="Parameter variable string klass", style=bold];
m39_114 -> m39_108  [color=darkorchid, key=3, label="Parameter variable string klass", style=bold];
m39_114 -> m39_84  [color=darkorchid, key=3, label="Parameter variable System.Text.RegularExpressions.Group group", style=bold];
m39_120 -> m39_74  [key=2, style=dotted];
m39_120 -> m39_121  [key=0, style=solid];
m39_121 -> m39_74  [key=2, style=dotted];
m39_121 -> m39_122  [key=0, style=solid];
m39_122 -> m39_74  [key=2, style=dotted];
m39_122 -> m39_123  [key=0, style=solid];
m39_123 -> m39_124  [key=0, style=solid];
m39_123 -> m39_125  [key=2, style=dotted];
m39_124 -> m39_114  [color=blue, key=0, style=bold];
m39_13 -> m39_10  [color=blue, key=0, style=bold];
m39_6 -> m39_4  [color=blue, key=0, style=bold];
m39_63 -> m39_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_63 -> m39_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_63 -> m39_65  [key=0, style=solid];
m39_63 -> m39_66  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_63 -> m39_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_63 -> m39_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_63 -> m39_57  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m39_63 -> m39_58  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter writer", style=bold];
m39_69 -> m39_15  [key=2, style=dotted];
m39_69 -> m39_70  [key=0, style=solid];
m39_69 -> m39_76  [key=2, style=dotted];
m39_70 -> m39_77  [key=2, style=dotted];
m39_70 -> m39_71  [key=0, style=solid];
m39_68 -> m39_69  [key=0, style=solid];
m39_68 -> m39_70  [color=darkseagreen4, key=1, label=match, style=dashed];
m39_68 -> m39_72  [key=0, style=solid];
m39_68 -> m39_75  [key=2, style=dotted];
m39_68 -> m39_71  [color=darkseagreen4, key=1, label=match, style=dashed];
m39_67 -> m39_69  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_67 -> m39_68  [key=0, style=solid];
m39_67 -> m39_67  [color=darkorchid, key=3, label="Local variable int anchor", style=bold];
m39_67 -> m39_72  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_71 -> m39_68  [key=0, style=solid];
m39_71 -> m39_72  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_72 -> m39_76  [key=2, style=dotted];
m39_72 -> m39_73  [key=0, style=solid];
m39_72 -> m39_78  [key=2, style=dotted];
m39_65 -> m39_74  [key=2, style=dotted];
m39_65 -> m39_66  [key=0, style=solid];
m39_66 -> m39_74  [key=2, style=dotted];
m39_66 -> m39_67  [key=0, style=solid];
m39_73 -> m39_63  [color=blue, key=0, style=bold];
m39_76 -> m39_77  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter writer", style=bold];
m39_76 -> m39_139  [key=0, style=solid];
m39_76 -> m39_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_76 -> m39_63  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter writer", style=bold];
m39_76 -> m39_125  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter writer", style=bold];
m39_76 -> m39_118  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m39_139 -> m39_74  [key=2, style=dotted];
m39_139 -> m39_140  [key=0, style=solid];
m39_140 -> m39_141  [key=0, style=solid];
m39_140 -> m39_142  [key=2, style=dotted];
m39_141 -> m39_76  [color=blue, key=0, style=bold];
m39_12 -> m39_13  [color=green, key=0, style=solid];
m39_12 -> m39_5  [color=green, key=2, style=dotted];
m39_12 -> m39_14  [color=green, key=2, style=dotted];
m39_12 -> m39_15  [color=green, key=2, style=dotted];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_0  [color=blue, key=0, style=bold];
m39_5 -> m39_6  [key=0, style=solid];
m39_5 -> m39_7  [key=2, style=dotted];
m39_8 -> m39_9  [color=green, key=0, style=solid];
m39_8 -> m39_10  [color=darkseagreen4, key=1, label=MessageQueue, style=dashed];
m39_8 -> m39_5  [color=green, key=2, style=dotted];
m39_9 -> m39_10  [color=red, key=0, style=solid];
m39_9 -> m39_12  [color=red, key=2, style=dotted];
m39_9 -> m39_7  [color=blue, key=0, style=bold];
m39_10 -> m39_11  [key=0, style=solid];
m39_10 -> m39_13  [key=2, style=dotted];
m39_10 -> m39_12  [color=green, key=1, label=string, style=dashed];
m39_11 -> m39_8  [color=blue, key=0, style=bold];
m39_11 -> m39_12  [color=green, key=0, style=solid];
m39_125 -> m39_114  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter writer", style=bold];
m39_125 -> m39_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_125 -> m39_126  [key=0, style=solid];
m39_125 -> m39_127  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_125 -> m39_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_125 -> m39_130  [color=darkseagreen4, key=1, label=int, style=dashed];
m39_128 -> m39_15  [key=2, style=dotted];
m39_128 -> m39_129  [key=0, style=solid];
m39_128 -> m39_76  [key=2, style=dotted];
m39_127 -> m39_128  [key=0, style=solid];
m39_127 -> m39_74  [key=2, style=dotted];
m39_129 -> m39_118  [key=2, style=dotted];
m39_129 -> m39_130  [key=0, style=solid];
m39_126 -> m39_74  [key=2, style=dotted];
m39_126 -> m39_127  [key=0, style=solid];
m39_130 -> m39_131  [key=0, style=solid];
m39_131 -> m39_125  [color=blue, key=0, style=bold];
m39_15 -> m39_16  [key=0, style=solid];
m39_15 -> m39_17  [key=2, style=dotted];
m39_16 -> m39_22  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m39_16 -> m39_17  [key=0, style=solid];
m39_16 -> m39_20  [color=darkseagreen4, key=1, label=bool, style=dashed];
m39_16 -> m39_21  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m39_16 -> m39_14  [color=blue, key=0, style=bold];
m39_30 -> m39_31  [color=green, key=0, style=solid];
m39_30 -> m39_39  [color=green, key=2, style=dotted];
m39_22 -> m39_30  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m39_22 -> m39_29  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m39_22 -> m39_22  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m39_22 -> m39_23  [key=0, style=solid];
m39_22 -> m39_38  [key=2, style=dotted];
m39_22 -> m39_24  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m39_22 -> m39_25  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m39_22 -> m39_26  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m39_22 -> m39_27  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m39_22 -> m39_28  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m39_22 -> m39_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqInternalTransaction", style=dashed];
m39_22 -> m39_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqInternalTransaction", style=dashed];
m39_22 -> m39_9  [color=red, key=1, label="Hangfire.SqlServer.Msmq.MsmqInternalTransaction", style=dashed];
m39_22 -> m39_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqInternalTransaction", style=dashed];
m39_22 -> m39_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqInternalTransaction", style=dashed];
m39_22 -> m39_19  [color=red, key=1, label="Hangfire.SqlServer.Msmq.MsmqInternalTransaction", style=dashed];
m39_19 -> m39_30  [color=green, key=1, label=builder, style=dashed];
m39_19 -> m39_31  [color=green, key=1, label=builder, style=dashed];
m39_19 -> m39_32  [color=green, key=1, label=builder, style=dashed];
m39_19 -> m39_33  [color=green, key=1, label=builder, style=dashed];
m39_19 -> m39_34  [color=green, key=1, label=builder, style=dashed];
m39_19 -> m39_20  [color=red, key=0, style=solid];
m39_19 -> m39_36  [key=2, style=dotted];
m39_19 -> m39_21  [color=darkseagreen4, key=1, label=builder, style=dashed];
m39_19 -> m39_24  [color=darkseagreen4, key=1, label=builder, style=dashed];
m39_19 -> m39_26  [color=darkseagreen4, key=1, label=builder, style=dashed];
m39_19 -> m39_28  [color=darkseagreen4, key=1, label=builder, style=dashed];
m39_29 -> m39_30  [color=green, key=0, style=solid];
m39_29 -> m39_31  [color=green, key=0, style=solid];
m39_31 -> m39_32  [color=green, key=0, style=solid];
m39_31 -> m39_33  [color=green, key=0, style=solid];
m39_32 -> m39_33  [color=green, key=0, style=solid];
m39_32 -> m39_37  [color=green, key=2, style=dotted];
m39_33 -> m39_34  [color=green, key=0, style=solid];
m39_33 -> m39_40  [color=green, key=2, style=dotted];
m39_34 -> m39_35  [color=green, key=0, style=solid];
m39_34 -> m39_41  [color=green, key=2, style=dotted];
m39_28 -> m39_29  [color=green, key=0, style=solid];
m39_28 -> m39_39  [key=2, style=dotted];
m39_27 -> m39_29  [color=green, key=0, style=solid];
m39_27 -> m39_28  [key=0, style=solid];
m39_20 -> m39_22  [key=0, style=solid];
m39_20 -> m39_21  [key=0, style=solid];
m39_20 -> m39_18  [color=blue, key=0, style=bold];
m39_21 -> m39_22  [key=0, style=solid];
m39_21 -> m39_37  [key=2, style=dotted];
m39_23 -> m39_24  [key=0, style=solid];
m39_23 -> m39_25  [key=0, style=solid];
m39_24 -> m39_39  [key=2, style=dotted];
m39_24 -> m39_25  [key=0, style=solid];
m39_25 -> m39_27  [key=0, style=solid];
m39_25 -> m39_26  [key=0, style=solid];
m39_26 -> m39_39  [key=2, style=dotted];
m39_26 -> m39_27  [key=0, style=solid];
m39_17 -> m39_19  [key=0, style=solid];
m39_17 -> m39_18  [key=0, style=solid];
m39_18 -> m39_35  [key=0, style=solid];
m39_18 -> m39_19  [color=red, key=0, style=solid];
m39_35 -> m39_16  [color=blue, key=0, style=bold];
m39_50 -> m39_52  [color=green, key=1, label=string, style=dashed];
m39_50 -> m39_51  [key=0, style=solid];
m39_50 -> m39_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_52 -> m39_53  [color=green, key=0, style=solid];
m39_52 -> m39_54  [color=green, key=0, style=solid];
m39_51 -> m39_52  [color=green, key=0, style=solid];
m39_53 -> m39_55  [key=0, style=solid];
m39_54 -> m39_55  [key=0, style=solid];
m39_55 -> m39_5  [key=2, style=dotted];
m39_55 -> m39_56  [key=0, style=solid];
m39_56 -> m39_50  [color=blue, key=0, style=bold];
m39_14 -> m39_15  [key=0, style=solid];
m39_7 -> m39_8  [color=green, key=0, style=solid];
m39_42 -> m39_43  [color=green, key=0, style=solid];
m39_43 -> m39_44  [color=green, key=0, style=solid];
m39_43 -> m39_45  [color=green, key=2, style=dotted];
m39_43 -> m39_46  [color=green, key=2, style=dotted];
m39_43 -> m39_47  [color=green, key=1, label="lambda expression", style=dashed];
m39_44 -> m39_42  [color=blue, key=0, style=bold];
m39_47 -> m39_48  [color=green, key=0, style=solid];
m39_48 -> m39_48  [color=green, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m39_48 -> m39_49  [color=green, key=0, style=solid];
m39_48 -> m39_6  [color=green, key=2, style=dotted];
m39_49 -> m39_47  [color=blue, key=0, style=bold];
m39_77 -> m39_82  [color=green, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m39_77 -> m39_79  [key=0, style=solid];
m39_77 -> m39_80  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m39_77 -> m39_81  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_83  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m39_77 -> m39_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_77 -> m39_87  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_77 -> m39_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_77 -> m39_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_77 -> m39_92  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_97  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_99  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_101  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_102  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_104  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_105  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_77 -> m39_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_77 -> m39_109  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_77 -> m39_110  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m39_77 -> m39_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_77 -> m39_63  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter writer", style=bold];
m39_77 -> m39_68  [color=darkorchid, key=3, label="Parameter variable System.Text.RegularExpressions.Match match", style=bold];
m39_82 -> m39_83  [color=green, key=0, style=solid];
m39_82 -> m39_85  [color=green, key=1, label=anchor, style=dashed];
m39_82 -> m39_114  [color=green, key=3, label="Local variable int anchor", style=bold];
m39_81 -> m39_82  [color=green, key=0, style=solid];
m39_81 -> m39_74  [key=2, style=dotted];
m39_83 -> m39_84  [key=0, style=solid];
m39_83 -> m39_89  [color=darkseagreen4, key=1, label=groups, style=dashed];
m39_83 -> m39_90  [color=darkseagreen4, key=1, label=groups, style=dashed];
m39_83 -> m39_107  [color=darkseagreen4, key=1, label=groups, style=dashed];
m39_83 -> m39_108  [color=darkseagreen4, key=1, label=groups, style=dashed];
m39_85 -> m39_15  [key=2, style=dotted];
m39_85 -> m39_86  [key=0, style=solid];
m39_85 -> m39_76  [key=2, style=dotted];
m39_91 -> m39_15  [key=2, style=dotted];
m39_91 -> m39_92  [key=0, style=solid];
m39_91 -> m39_76  [key=2, style=dotted];
m39_111 -> m39_15  [key=2, style=dotted];
m39_111 -> m39_112  [key=0, style=solid];
m39_111 -> m39_76  [key=2, style=dotted];
m39_100 -> m39_15  [key=2, style=dotted];
m39_100 -> m39_101  [key=0, style=solid];
m39_100 -> m39_117  [key=2, style=dotted];
m39_79 -> m39_80  [key=0, style=solid];
m39_79 -> m39_74  [key=2, style=dotted];
m39_80 -> m39_81  [key=0, style=solid];
m39_80 -> m39_74  [key=2, style=dotted];
m39_87 -> m39_88  [key=0, style=solid];
m39_87 -> m39_113  [key=2, style=dotted];
m39_88 -> m39_114  [key=2, style=dotted];
m39_88 -> m39_88  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_88 -> m39_89  [key=0, style=solid];
m39_89 -> m39_114  [key=2, style=dotted];
m39_89 -> m39_91  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_89 -> m39_89  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_89 -> m39_90  [key=0, style=solid];
m39_92 -> m39_93  [key=0, style=solid];
m39_92 -> m39_113  [key=2, style=dotted];
m39_97 -> m39_118  [key=2, style=dotted];
m39_97 -> m39_94  [key=0, style=solid];
m39_97 -> m39_117  [key=2, style=dotted];
m39_99 -> m39_100  [key=0, style=solid];
m39_99 -> m39_113  [key=2, style=dotted];
m39_101 -> m39_118  [key=2, style=dotted];
m39_101 -> m39_102  [key=0, style=solid];
m39_102 -> m39_103  [key=0, style=solid];
m39_102 -> m39_119  [key=2, style=dotted];
m39_104 -> m39_118  [key=2, style=dotted];
m39_104 -> m39_94  [key=0, style=solid];
m39_105 -> m39_106  [key=0, style=solid];
m39_105 -> m39_113  [key=2, style=dotted];
m39_107 -> m39_114  [key=2, style=dotted];
m39_107 -> m39_107  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_107 -> m39_108  [key=0, style=solid];
m39_108 -> m39_114  [key=2, style=dotted];
m39_108 -> m39_111  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_108 -> m39_108  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_108 -> m39_109  [key=0, style=solid];
m39_109 -> m39_110  [key=0, style=solid];
m39_109 -> m39_113  [key=2, style=dotted];
m39_110 -> m39_111  [key=0, style=solid];
m39_84 -> m39_85  [key=0, style=solid];
m39_84 -> m39_88  [color=darkseagreen4, key=1, label=type, style=dashed];
m39_84 -> m39_86  [color=darkseagreen4, key=1, label=type, style=dashed];
m39_90 -> m39_91  [key=0, style=solid];
m39_90 -> m39_94  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m39_90 -> m39_106  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m39_86 -> m39_87  [key=0, style=solid];
m39_86 -> m39_88  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m39_94 -> m39_100  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m39_94 -> m39_97  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m39_94 -> m39_105  [key=0, style=solid];
m39_94 -> m39_95  [key=0, style=solid];
m39_94 -> m39_115  [key=2, style=dotted];
m39_94 -> m39_103  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m39_98 -> m39_100  [key=0, style=solid];
m39_98 -> m39_99  [key=0, style=solid];
m39_98 -> m39_98  [color=darkseagreen4, key=1, label=position, style=dashed];
m39_95 -> m39_100  [color=darkseagreen4, key=1, label=spaceIndex, style=dashed];
m39_95 -> m39_96  [key=0, style=solid];
m39_95 -> m39_116  [key=2, style=dotted];
m39_95 -> m39_103  [color=darkseagreen4, key=1, label=spaceIndex, style=dashed];
m39_103 -> m39_104  [key=0, style=solid];
m39_103 -> m39_117  [key=2, style=dotted];
m39_103 -> m39_78  [key=2, style=dotted];
m39_93 -> m39_67  [color=darkorchid, key=3, label="Local variable int position", style=bold];
m39_93 -> m39_94  [key=0, style=solid];
m39_93 -> m39_98  [color=darkseagreen4, key=1, label=position, style=dashed];
m39_96 -> m39_97  [key=0, style=solid];
m39_96 -> m39_98  [key=0, style=solid];
m39_106 -> m39_107  [key=0, style=solid];
m39_112 -> m39_77  [color=blue, key=0, style=bold];
m39_0 -> m39_1  [key=0, style=solid];
m39_0 -> m39_3  [color=green, key=1, label="HangFire.Common.Job", style=dashed];
m39_1 -> m39_2  [color=green, key=0, style=solid];
m39_1 -> m39_3  [key=2, style=dotted];
m39_2 -> m39_0  [color=blue, key=0, style=bold];
m39_2 -> m39_4  [color=green, key=0, style=solid];
m39_2 -> m39_5  [color=green, key=2, style=dotted];
m39_3 -> m39_4  [color=green, key=0, style=solid];
m39_3 -> m39_5  [color=green, key=2, style=dotted];
m39_3 -> m39_6  [color=green, key=2, style=dotted];
m39_118 -> m39_77  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter writer", style=bold];
m39_118 -> m39_100  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m39_118 -> m39_132  [key=0, style=solid];
m39_118 -> m39_133  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_118 -> m39_134  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_118 -> m39_135  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_118 -> m39_136  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_118 -> m39_137  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_118 -> m39_125  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m39_118 -> m39_97  [color=darkorchid, key=3, label="Parameter variable string klass", style=bold];
m39_118 -> m39_101  [color=darkorchid, key=3, label="Parameter variable string klass", style=bold];
m39_118 -> m39_104  [color=darkorchid, key=3, label="Parameter variable string klass", style=bold];
m39_118 -> m39_103  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m39_136 -> m39_76  [key=2, style=dotted];
m39_136 -> m39_137  [key=0, style=solid];
m39_132 -> m39_74  [key=2, style=dotted];
m39_132 -> m39_133  [key=0, style=solid];
m39_133 -> m39_134  [key=0, style=solid];
m39_133 -> m39_113  [key=2, style=dotted];
m39_134 -> m39_135  [key=0, style=solid];
m39_134 -> m39_113  [key=2, style=dotted];
m39_135 -> m39_136  [key=0, style=solid];
m39_135 -> m39_113  [key=2, style=dotted];
m39_137 -> m39_138  [key=0, style=solid];
m39_137 -> m39_113  [key=2, style=dotted];
m39_138 -> m39_118  [color=blue, key=0, style=bold];
m40_0 -> m40_1  [color=red, key=0, style=solid];
m40_0 -> m40_2  [color=red, key=1, label="System.Net.HttpStatusCode", style=dashed];
m40_0 -> m40_5  [color=red, key=3, label="method methodReturn IHttpHandler Process", style=bold];
m40_1 -> m40_2  [color=red, key=0, style=solid];
m40_2 -> m40_3  [color=red, key=0, style=solid];
m40_2 -> m40_2  [color=red, key=1, label=response, style=dashed];
m40_2 -> m40_4  [color=red, key=1, label=response, style=dashed];
m40_3 -> m40_4  [color=red, key=0, style=solid];
m40_3 -> m40_7  [color=red, key=2, style=dotted];
m40_4 -> m40_5  [color=red, key=0, style=solid];
m40_4 -> m40_8  [color=red, key=2, style=dotted];
m40_5 -> m40_6  [color=red, key=0, style=solid];
m40_6 -> m40_0  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_0  [color=blue, key=0, style=bold];
m42_2 -> m42_3  [key=0, style=solid];
m42_3 -> m42_2  [color=blue, key=0, style=bold];
m45_0 -> m45_1  [key=0, style=solid];
m45_0 -> m45_16  [color=darkorchid, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_5  [key=2, style=dotted];
m45_2 -> m45_3  [key=0, style=solid];
m45_2 -> m45_6  [key=2, style=dotted];
m45_2 -> m45_7  [key=2, style=dotted];
m45_3 -> m45_4  [key=0, style=solid];
m45_3 -> m45_8  [key=2, style=dotted];
m45_4 -> m45_0  [color=blue, key=0, style=bold];
m45_14 -> m45_15  [key=0, style=solid];
m45_15 -> m45_16  [key=0, style=solid];
m45_15 -> m45_17  [key=0, style=solid];
m45_16 -> m45_17  [key=0, style=solid];
m45_16 -> m45_0  [key=2, style=dotted];
m45_17 -> m45_14  [color=blue, key=0, style=bold];
m45_26 -> m45_27  [key=0, style=solid];
m45_27 -> m45_28  [key=0, style=solid];
m45_27 -> m45_29  [key=2, style=dotted];
m45_28 -> m45_26  [color=blue, key=0, style=bold];
m45_18 -> m45_19  [key=0, style=solid];
m45_19 -> m45_20  [key=0, style=solid];
m45_19 -> m45_21  [key=2, style=dotted];
m45_20 -> m45_18  [color=blue, key=0, style=bold];
m45_58 -> m45_59  [key=0, style=solid];
m45_59 -> m45_60  [key=0, style=solid];
m45_59 -> m45_41  [key=2, style=dotted];
m45_60 -> m45_61  [key=0, style=solid];
m45_60 -> m45_22  [key=2, style=dotted];
m45_61 -> m45_62  [key=0, style=solid];
m45_61 -> m45_42  [key=2, style=dotted];
m45_62 -> m45_63  [key=0, style=solid];
m45_62 -> m45_45  [key=2, style=dotted];
m45_63 -> m45_64  [key=0, style=solid];
m45_63 -> m45_43  [key=2, style=dotted];
m45_64 -> m45_65  [key=0, style=solid];
m45_64 -> m45_44  [key=2, style=dotted];
m45_65 -> m45_66  [key=0, style=solid];
m45_65 -> m45_45  [key=2, style=dotted];
m45_66 -> m45_67  [key=0, style=solid];
m45_66 -> m45_26  [key=2, style=dotted];
m45_67 -> m45_58  [color=blue, key=0, style=bold];
m45_47 -> m45_48  [key=0, style=solid];
m45_48 -> m45_49  [key=0, style=solid];
m45_48 -> m45_41  [key=2, style=dotted];
m45_49 -> m45_50  [key=0, style=solid];
m45_49 -> m45_22  [key=2, style=dotted];
m45_50 -> m45_51  [key=0, style=solid];
m45_50 -> m45_42  [key=2, style=dotted];
m45_51 -> m45_52  [key=0, style=solid];
m45_51 -> m45_43  [key=2, style=dotted];
m45_52 -> m45_53  [key=0, style=solid];
m45_52 -> m45_44  [key=2, style=dotted];
m45_53 -> m45_54  [key=0, style=solid];
m45_53 -> m45_45  [key=2, style=dotted];
m45_54 -> m45_55  [key=0, style=solid];
m45_54 -> m45_45  [key=2, style=dotted];
m45_55 -> m45_56  [key=0, style=solid];
m45_55 -> m45_45  [key=2, style=dotted];
m45_56 -> m45_57  [key=0, style=solid];
m45_56 -> m45_26  [key=2, style=dotted];
m45_57 -> m45_47  [color=blue, key=0, style=bold];
m45_9 -> m45_10  [key=0, style=solid];
m45_10 -> m45_11  [key=0, style=solid];
m45_10 -> m45_13  [key=2, style=dotted];
m45_11 -> m45_12  [key=0, style=solid];
m45_12 -> m45_9  [color=blue, key=0, style=bold];
m45_30 -> m45_31  [key=0, style=solid];
m45_31 -> m45_32  [key=0, style=solid];
m45_31 -> m45_41  [key=2, style=dotted];
m45_32 -> m45_33  [key=0, style=solid];
m45_32 -> m45_22  [key=2, style=dotted];
m45_33 -> m45_34  [key=0, style=solid];
m45_33 -> m45_42  [key=2, style=dotted];
m45_34 -> m45_35  [key=0, style=solid];
m45_34 -> m45_43  [key=2, style=dotted];
m45_35 -> m45_36  [key=0, style=solid];
m45_35 -> m45_44  [key=2, style=dotted];
m45_36 -> m45_37  [key=0, style=solid];
m45_36 -> m45_45  [key=2, style=dotted];
m45_37 -> m45_38  [key=0, style=solid];
m45_37 -> m45_46  [key=2, style=dotted];
m45_38 -> m45_39  [key=0, style=solid];
m45_38 -> m45_45  [key=2, style=dotted];
m45_39 -> m45_40  [key=0, style=solid];
m45_39 -> m45_26  [key=2, style=dotted];
m45_40 -> m45_30  [color=blue, key=0, style=bold];
m45_22 -> m45_23  [key=0, style=solid];
m45_22 -> m45_31  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m45_22 -> m45_48  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m45_22 -> m45_59  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m45_22 -> m45_69  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m45_23 -> m45_24  [key=0, style=solid];
m45_23 -> m45_25  [key=2, style=dotted];
m45_24 -> m45_22  [color=blue, key=0, style=bold];
m45_68 -> m45_69  [key=0, style=solid];
m45_69 -> m45_70  [key=0, style=solid];
m45_69 -> m45_41  [key=2, style=dotted];
m45_70 -> m45_71  [key=0, style=solid];
m45_70 -> m45_22  [key=2, style=dotted];
m45_71 -> m45_72  [key=0, style=solid];
m45_71 -> m45_43  [key=2, style=dotted];
m45_72 -> m45_73  [key=0, style=solid];
m45_72 -> m45_44  [key=2, style=dotted];
m45_73 -> m45_74  [key=0, style=solid];
m45_73 -> m45_26  [key=2, style=dotted];
m45_74 -> m45_68  [color=blue, key=0, style=bold];
m45_75 -> m45_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m45_75 -> m45_39  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m45_75 -> m45_49  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m45_75 -> m45_56  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m45_75 -> m45_60  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m45_75 -> m45_66  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m45_75 -> m45_70  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m45_75 -> m45_73  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m47_153 -> m47_154  [key=0, style=solid];
m47_154 -> m47_155  [key=0, style=solid];
m47_154 -> m47_11  [key=2, style=dotted];
m47_154 -> m47_12  [key=2, style=dotted];
m47_154 -> m47_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_155 -> m47_156  [key=0, style=solid];
m47_155 -> m47_99  [key=2, style=dotted];
m47_155 -> m47_159  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_156 -> m47_157  [key=0, style=solid];
m47_156 -> m47_119  [key=2, style=dotted];
m47_159 -> m47_160  [key=0, style=solid];
m47_159 -> m47_81  [key=2, style=dotted];
m47_159 -> m47_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_157 -> m47_158  [key=0, style=solid];
m47_157 -> m47_161  [key=2, style=dotted];
m47_158 -> m47_159  [key=0, style=solid];
m47_158 -> m47_81  [key=2, style=dotted];
m47_158 -> m47_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_160 -> m47_153  [color=blue, key=0, style=bold];
m47_270 -> m47_271  [key=0, style=solid];
m47_271 -> m47_272  [key=0, style=solid];
m47_271 -> m47_99  [key=2, style=dotted];
m47_271 -> m47_274  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_271 -> m47_275  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_271 -> m47_276  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_272 -> m47_273  [key=0, style=solid];
m47_272 -> m47_262  [key=2, style=dotted];
m47_272 -> m47_8  [key=2, style=dotted];
m47_272 -> m47_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_272 -> m47_274  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_272 -> m47_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_272 -> m47_275  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_272 -> m47_276  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_272 -> m47_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_274 -> m47_275  [key=0, style=solid];
m47_274 -> m47_11  [key=2, style=dotted];
m47_274 -> m47_12  [key=2, style=dotted];
m47_274 -> m47_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_275 -> m47_276  [key=0, style=solid];
m47_275 -> m47_103  [key=2, style=dotted];
m47_276 -> m47_277  [key=0, style=solid];
m47_276 -> m47_81  [key=2, style=dotted];
m47_276 -> m47_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_273 -> m47_274  [key=0, style=solid];
m47_273 -> m47_10  [key=2, style=dotted];
m47_273 -> m47_276  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m47_273 -> m47_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m47_277 -> m47_270  [color=blue, key=0, style=bold];
m47_99 -> m47_348  [key=0, style=solid];
m47_348 -> m47_349  [key=0, style=solid];
m47_348 -> m47_350  [key=2, style=dotted];
m47_349 -> m47_99  [color=blue, key=0, style=bold];
m47_210 -> m47_211  [key=0, style=solid];
m47_211 -> m47_212  [key=0, style=solid];
m47_211 -> m47_11  [key=2, style=dotted];
m47_211 -> m47_179  [key=2, style=dotted];
m47_211 -> m47_8  [key=2, style=dotted];
m47_211 -> m47_12  [key=2, style=dotted];
m47_211 -> m47_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_211 -> m47_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_212 -> m47_213  [key=0, style=solid];
m47_212 -> m47_99  [key=2, style=dotted];
m47_212 -> m47_214  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_212 -> m47_215  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_213 -> m47_214  [key=0, style=solid];
m47_213 -> m47_11  [key=2, style=dotted];
m47_213 -> m47_12  [key=2, style=dotted];
m47_213 -> m47_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_214 -> m47_215  [key=0, style=solid];
m47_214 -> m47_119  [key=2, style=dotted];
m47_214 -> m47_216  [color=darkseagreen4, key=1, label=result, style=dashed];
m47_215 -> m47_216  [key=0, style=solid];
m47_215 -> m47_81  [key=2, style=dotted];
m47_215 -> m47_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_216 -> m47_217  [key=0, style=solid];
m47_216 -> m47_218  [key=2, style=dotted];
m47_217 -> m47_210  [color=blue, key=0, style=bold];
m47_38 -> m47_39  [key=0, style=solid];
m47_39 -> m47_40  [key=0, style=solid];
m47_39 -> m47_27  [key=2, style=dotted];
m47_39 -> m47_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_40 -> m47_41  [key=0, style=solid];
m47_40 -> m47_33  [key=2, style=dotted];
m47_41 -> m47_38  [color=blue, key=0, style=bold];
m47_129 -> m47_130  [key=0, style=solid];
m47_130 -> m47_131  [key=0, style=solid];
m47_130 -> m47_51  [key=2, style=dotted];
m47_130 -> m47_135  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_131 -> m47_132  [key=0, style=solid];
m47_131 -> m47_27  [key=2, style=dotted];
m47_131 -> m47_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_132 -> m47_133  [key=0, style=solid];
m47_132 -> m47_33  [key=2, style=dotted];
m47_133 -> m47_129  [color=blue, key=0, style=bold];
m47_111 -> m47_112  [key=0, style=solid];
m47_112 -> m47_113  [key=0, style=solid];
m47_112 -> m47_51  [key=2, style=dotted];
m47_112 -> m47_117  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_113 -> m47_114  [key=0, style=solid];
m47_113 -> m47_27  [key=2, style=dotted];
m47_113 -> m47_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_114 -> m47_115  [key=0, style=solid];
m47_114 -> m47_33  [key=2, style=dotted];
m47_115 -> m47_111  [color=blue, key=0, style=bold];
m47_288 -> m47_289  [key=0, style=solid];
m47_289 -> m47_290  [key=0, style=solid];
m47_289 -> m47_99  [key=2, style=dotted];
m47_289 -> m47_292  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_289 -> m47_293  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_289 -> m47_294  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_290 -> m47_291  [key=0, style=solid];
m47_290 -> m47_262  [key=2, style=dotted];
m47_290 -> m47_8  [key=2, style=dotted];
m47_290 -> m47_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_290 -> m47_292  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_290 -> m47_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_290 -> m47_293  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_290 -> m47_294  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_290 -> m47_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_292 -> m47_293  [key=0, style=solid];
m47_292 -> m47_11  [key=2, style=dotted];
m47_292 -> m47_298  [key=2, style=dotted];
m47_292 -> m47_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_293 -> m47_294  [key=0, style=solid];
m47_293 -> m47_103  [key=2, style=dotted];
m47_293 -> m47_295  [color=darkseagreen4, key=1, label=result, style=dashed];
m47_294 -> m47_295  [key=0, style=solid];
m47_294 -> m47_81  [key=2, style=dotted];
m47_294 -> m47_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_291 -> m47_292  [key=0, style=solid];
m47_291 -> m47_297  [key=2, style=dotted];
m47_291 -> m47_294  [color=darkseagreen4, key=1, label=exception, style=dashed];
m47_291 -> m47_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m47_291 -> m47_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m47_295 -> m47_296  [key=0, style=solid];
m47_295 -> m47_161  [key=2, style=dotted];
m47_296 -> m47_288  [color=blue, key=0, style=bold];
m47_255 -> m47_256  [key=0, style=solid];
m47_256 -> m47_257  [key=0, style=solid];
m47_256 -> m47_99  [key=2, style=dotted];
m47_256 -> m47_258  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_256 -> m47_259  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_257 -> m47_258  [key=0, style=solid];
m47_257 -> m47_262  [key=2, style=dotted];
m47_257 -> m47_8  [key=2, style=dotted];
m47_257 -> m47_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_257 -> m47_259  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_257 -> m47_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_258 -> m47_259  [key=0, style=solid];
m47_258 -> m47_103  [key=2, style=dotted];
m47_258 -> m47_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m47_259 -> m47_260  [key=0, style=solid];
m47_259 -> m47_81  [key=2, style=dotted];
m47_259 -> m47_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_260 -> m47_261  [key=0, style=solid];
m47_260 -> m47_218  [key=2, style=dotted];
m47_261 -> m47_255  [color=blue, key=0, style=bold];
m47_315 -> m47_316  [key=0, style=solid];
m47_316 -> m47_317  [key=0, style=solid];
m47_316 -> m47_327  [key=2, style=dotted];
m47_316 -> m47_320  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m47_316 -> m47_325  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m47_317 -> m47_318  [key=0, style=solid];
m47_317 -> m47_11  [key=2, style=dotted];
m47_317 -> m47_12  [key=2, style=dotted];
m47_317 -> m47_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_320 -> m47_321  [key=0, style=solid];
m47_320 -> m47_328  [key=2, style=dotted];
m47_325 -> m47_326  [key=0, style=solid];
m47_325 -> m47_81  [key=2, style=dotted];
m47_325 -> m47_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_318 -> m47_319  [key=0, style=solid];
m47_318 -> m47_327  [key=2, style=dotted];
m47_318 -> m47_321  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m47_319 -> m47_320  [key=0, style=solid];
m47_319 -> m47_11  [key=2, style=dotted];
m47_319 -> m47_12  [key=2, style=dotted];
m47_319 -> m47_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_321 -> m47_322  [key=0, style=solid];
m47_321 -> m47_328  [key=2, style=dotted];
m47_322 -> m47_323  [key=0, style=solid];
m47_322 -> m47_51  [key=2, style=dotted];
m47_322 -> m47_324  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_323 -> m47_324  [key=0, style=solid];
m47_323 -> m47_262  [key=2, style=dotted];
m47_323 -> m47_8  [key=2, style=dotted];
m47_323 -> m47_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_323 -> m47_325  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_323 -> m47_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_323 -> m47_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_324 -> m47_325  [key=0, style=solid];
m47_324 -> m47_329  [key=2, style=dotted];
m47_324 -> m47_269  [key=2, style=dotted];
m47_326 -> m47_315  [color=blue, key=0, style=bold];
m47_235 -> m47_236  [key=0, style=solid];
m47_236 -> m47_237  [key=0, style=solid];
m47_236 -> m47_11  [key=2, style=dotted];
m47_236 -> m47_179  [key=2, style=dotted];
m47_236 -> m47_242  [key=2, style=dotted];
m47_236 -> m47_12  [key=2, style=dotted];
m47_236 -> m47_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_237 -> m47_238  [key=0, style=solid];
m47_237 -> m47_99  [key=2, style=dotted];
m47_237 -> m47_239  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_238 -> m47_239  [key=0, style=solid];
m47_238 -> m47_119  [key=2, style=dotted];
m47_238 -> m47_240  [color=darkseagreen4, key=1, label=result, style=dashed];
m47_239 -> m47_240  [key=0, style=solid];
m47_239 -> m47_81  [key=2, style=dotted];
m47_239 -> m47_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_240 -> m47_241  [key=0, style=solid];
m47_240 -> m47_161  [key=2, style=dotted];
m47_241 -> m47_235  [color=blue, key=0, style=bold];
m47_94 -> m47_95  [key=0, style=solid];
m47_95 -> m47_96  [key=0, style=solid];
m47_95 -> m47_99  [key=2, style=dotted];
m47_95 -> m47_97  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_96 -> m47_97  [key=0, style=solid];
m47_96 -> m47_55  [key=2, style=dotted];
m47_97 -> m47_98  [key=0, style=solid];
m47_97 -> m47_81  [key=2, style=dotted];
m47_97 -> m47_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_98 -> m47_94  [color=blue, key=0, style=bold];
m47_137 -> m47_138  [key=0, style=solid];
m47_138 -> m47_139  [key=0, style=solid];
m47_138 -> m47_144  [key=2, style=dotted];
m47_138 -> m47_142  [color=darkseagreen4, key=1, label=disposableMock, style=dashed];
m47_139 -> m47_140  [key=0, style=solid];
m47_139 -> m47_11  [key=2, style=dotted];
m47_139 -> m47_12  [key=2, style=dotted];
m47_139 -> m47_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_142 -> m47_143  [key=0, style=solid];
m47_142 -> m47_81  [key=2, style=dotted];
m47_142 -> m47_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_140 -> m47_141  [key=0, style=solid];
m47_140 -> m47_51  [key=2, style=dotted];
m47_141 -> m47_142  [key=0, style=solid];
m47_141 -> m47_119  [key=2, style=dotted];
m47_143 -> m47_137  [color=blue, key=0, style=bold];
m47_120 -> m47_121  [key=0, style=solid];
m47_121 -> m47_122  [key=0, style=solid];
m47_121 -> m47_51  [key=2, style=dotted];
m47_121 -> m47_126  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_122 -> m47_123  [key=0, style=solid];
m47_122 -> m47_27  [key=2, style=dotted];
m47_122 -> m47_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_123 -> m47_124  [key=0, style=solid];
m47_123 -> m47_33  [key=2, style=dotted];
m47_124 -> m47_120  [color=blue, key=0, style=bold];
m47_190 -> m47_191  [key=0, style=solid];
m47_191 -> m47_192  [key=0, style=solid];
m47_191 -> m47_11  [key=2, style=dotted];
m47_191 -> m47_179  [key=2, style=dotted];
m47_191 -> m47_8  [key=2, style=dotted];
m47_191 -> m47_12  [key=2, style=dotted];
m47_191 -> m47_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_191 -> m47_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_192 -> m47_193  [key=0, style=solid];
m47_192 -> m47_99  [key=2, style=dotted];
m47_192 -> m47_194  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_192 -> m47_195  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_193 -> m47_194  [key=0, style=solid];
m47_193 -> m47_11  [key=2, style=dotted];
m47_193 -> m47_12  [key=2, style=dotted];
m47_193 -> m47_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_194 -> m47_195  [key=0, style=solid];
m47_194 -> m47_119  [key=2, style=dotted];
m47_194 -> m47_196  [color=darkseagreen4, key=1, label=result, style=dashed];
m47_195 -> m47_196  [key=0, style=solid];
m47_195 -> m47_81  [key=2, style=dotted];
m47_195 -> m47_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_196 -> m47_197  [key=0, style=solid];
m47_196 -> m47_161  [key=2, style=dotted];
m47_197 -> m47_190  [color=blue, key=0, style=bold];
m47_51 -> m47_346  [key=0, style=solid];
m47_346 -> m47_347  [key=0, style=solid];
m47_346 -> m47_45  [key=2, style=dotted];
m47_347 -> m47_51  [color=blue, key=0, style=bold];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> m47_8  [key=2, style=dotted];
m47_1 -> m47_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_2 -> m47_3  [key=0, style=solid];
m47_2 -> m47_9  [key=2, style=dotted];
m47_3 -> m47_4  [key=0, style=solid];
m47_3 -> m47_10  [key=2, style=dotted];
m47_4 -> m47_5  [key=0, style=solid];
m47_4 -> m47_11  [key=2, style=dotted];
m47_4 -> m47_12  [key=2, style=dotted];
m47_4 -> m47_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_11  [key=2, style=dotted];
m47_5 -> m47_12  [key=2, style=dotted];
m47_5 -> m47_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_6 -> m47_7  [key=0, style=solid];
m47_6 -> m47_11  [key=2, style=dotted];
m47_6 -> m47_12  [key=2, style=dotted];
m47_6 -> m47_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_7 -> m47_0  [color=blue, key=0, style=bold];
m47_107 -> m47_108  [key=0, style=solid];
m47_108 -> m47_109  [key=0, style=solid];
m47_108 -> m47_51  [key=2, style=dotted];
m47_109 -> m47_110  [key=0, style=solid];
m47_109 -> m47_55  [key=2, style=dotted];
m47_109 -> m47_33  [key=2, style=dotted];
m47_110 -> m47_107  [color=blue, key=0, style=bold];
m47_73 -> m47_74  [key=0, style=solid];
m47_74 -> m47_75  [key=0, style=solid];
m47_74 -> m47_8  [key=2, style=dotted];
m47_74 -> m47_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_74 -> m47_77  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_75 -> m47_76  [key=0, style=solid];
m47_75 -> m47_80  [key=2, style=dotted];
m47_77 -> m47_78  [key=0, style=solid];
m47_77 -> m47_55  [key=2, style=dotted];
m47_76 -> m47_77  [key=0, style=solid];
m47_76 -> m47_51  [key=2, style=dotted];
m47_78 -> m47_79  [key=0, style=solid];
m47_78 -> m47_81  [key=2, style=dotted];
m47_78 -> m47_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_79 -> m47_73  [color=blue, key=0, style=bold];
m47_343 -> m47_344  [key=0, style=solid];
m47_13 -> m47_14  [key=0, style=solid];
m47_17 -> m47_18  [key=0, style=solid];
m47_20 -> m47_21  [key=0, style=solid];
m47_24 -> m47_25  [key=0, style=solid];
m47_14 -> m47_15  [key=0, style=solid];
m47_14 -> m47_16  [key=2, style=dotted];
m47_15 -> m47_13  [color=blue, key=0, style=bold];
m47_18 -> m47_19  [key=0, style=solid];
m47_19 -> m47_17  [color=blue, key=0, style=bold];
m47_21 -> m47_22  [key=0, style=solid];
m47_21 -> m47_23  [key=2, style=dotted];
m47_22 -> m47_20  [color=blue, key=0, style=bold];
m47_25 -> m47_26  [key=0, style=solid];
m47_25 -> m47_27  [key=2, style=dotted];
m47_25 -> m47_28  [key=2, style=dotted];
m47_26 -> m47_24  [color=blue, key=0, style=bold];
m47_34 -> m47_35  [key=0, style=solid];
m47_35 -> m47_36  [key=0, style=solid];
m47_35 -> m47_37  [key=2, style=dotted];
m47_36 -> m47_34  [color=blue, key=0, style=bold];
m47_42 -> m47_43  [key=0, style=solid];
m47_43 -> m47_44  [key=0, style=solid];
m47_43 -> m47_45  [key=2, style=dotted];
m47_44 -> m47_42  [color=blue, key=0, style=bold];
m47_53 -> m47_54  [key=0, style=solid];
m47_53 -> m47_55  [key=2, style=dotted];
m47_52 -> m47_53  [key=0, style=solid];
m47_54 -> m47_52  [color=blue, key=0, style=bold];
m47_62 -> m47_63  [key=0, style=solid];
m47_62 -> m47_55  [key=2, style=dotted];
m47_61 -> m47_62  [key=0, style=solid];
m47_63 -> m47_61  [color=blue, key=0, style=bold];
m47_70 -> m47_71  [key=0, style=solid];
m47_70 -> m47_72  [key=2, style=dotted];
m47_69 -> m47_70  [key=0, style=solid];
m47_71 -> m47_69  [color=blue, key=0, style=bold];
m47_82 -> m47_83  [key=0, style=solid];
m47_85 -> m47_86  [key=0, style=solid];
m47_83 -> m47_84  [key=0, style=solid];
m47_83 -> m47_16  [key=2, style=dotted];
m47_84 -> m47_82  [color=blue, key=0, style=bold];
m47_86 -> m47_87  [key=0, style=solid];
m47_86 -> m47_27  [key=2, style=dotted];
m47_86 -> m47_28  [key=2, style=dotted];
m47_86 -> m47_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_86 -> m47_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_87 -> m47_85  [color=blue, key=0, style=bold];
m47_88 -> m47_89  [key=0, style=solid];
m47_91 -> m47_92  [key=0, style=solid];
m47_89 -> m47_90  [key=0, style=solid];
m47_90 -> m47_88  [color=blue, key=0, style=bold];
m47_92 -> m47_93  [key=0, style=solid];
m47_93 -> m47_91  [color=blue, key=0, style=bold];
m47_100 -> m47_101  [key=0, style=solid];
m47_101 -> m47_102  [key=0, style=solid];
m47_101 -> m47_27  [key=2, style=dotted];
m47_101 -> m47_103  [key=2, style=dotted];
m47_101 -> m47_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_102 -> m47_100  [color=blue, key=0, style=bold];
m47_104 -> m47_105  [key=0, style=solid];
m47_105 -> m47_106  [key=0, style=solid];
m47_106 -> m47_104  [color=blue, key=0, style=bold];
m47_117 -> m47_118  [key=0, style=solid];
m47_117 -> m47_119  [key=2, style=dotted];
m47_116 -> m47_117  [key=0, style=solid];
m47_118 -> m47_116  [color=blue, key=0, style=bold];
m47_126 -> m47_127  [key=0, style=solid];
m47_126 -> m47_128  [key=2, style=dotted];
m47_125 -> m47_126  [key=0, style=solid];
m47_127 -> m47_125  [color=blue, key=0, style=bold];
m47_135 -> m47_136  [key=0, style=solid];
m47_135 -> m47_119  [key=2, style=dotted];
m47_134 -> m47_135  [key=0, style=solid];
m47_136 -> m47_134  [color=blue, key=0, style=bold];
m47_145 -> m47_146  [key=0, style=solid];
m47_149 -> m47_150  [key=0, style=solid];
m47_146 -> m47_147  [key=0, style=solid];
m47_146 -> m47_148  [key=2, style=dotted];
m47_147 -> m47_145  [color=blue, key=0, style=bold];
m47_150 -> m47_151  [key=0, style=solid];
m47_150 -> m47_152  [key=2, style=dotted];
m47_151 -> m47_149  [color=blue, key=0, style=bold];
m47_162 -> m47_163  [key=0, style=solid];
m47_166 -> m47_167  [key=0, style=solid];
m47_169 -> m47_170  [key=0, style=solid];
m47_163 -> m47_164  [key=0, style=solid];
m47_163 -> m47_27  [key=2, style=dotted];
m47_163 -> m47_165  [key=2, style=dotted];
m47_164 -> m47_162  [color=blue, key=0, style=bold];
m47_167 -> m47_168  [key=0, style=solid];
m47_167 -> m47_165  [key=2, style=dotted];
m47_168 -> m47_166  [color=blue, key=0, style=bold];
m47_170 -> m47_171  [key=0, style=solid];
m47_170 -> m47_27  [key=2, style=dotted];
m47_170 -> m47_103  [key=2, style=dotted];
m47_171 -> m47_169  [color=blue, key=0, style=bold];
m47_180 -> m47_181  [key=0, style=solid];
m47_183 -> m47_184  [key=0, style=solid];
m47_187 -> m47_188  [key=0, style=solid];
m47_181 -> m47_182  [key=0, style=solid];
m47_181 -> m47_165  [key=2, style=dotted];
m47_182 -> m47_180  [color=blue, key=0, style=bold];
m47_184 -> m47_185  [key=0, style=solid];
m47_184 -> m47_186  [key=2, style=dotted];
m47_185 -> m47_183  [color=blue, key=0, style=bold];
m47_188 -> m47_189  [key=0, style=solid];
m47_188 -> m47_27  [key=2, style=dotted];
m47_188 -> m47_103  [key=2, style=dotted];
m47_189 -> m47_187  [color=blue, key=0, style=bold];
m47_198 -> m47_199  [key=0, style=solid];
m47_201 -> m47_202  [key=0, style=solid];
m47_204 -> m47_205  [key=0, style=solid];
m47_207 -> m47_208  [key=0, style=solid];
m47_199 -> m47_200  [key=0, style=solid];
m47_199 -> m47_165  [key=2, style=dotted];
m47_200 -> m47_198  [color=blue, key=0, style=bold];
m47_202 -> m47_203  [key=0, style=solid];
m47_202 -> m47_186  [key=2, style=dotted];
m47_203 -> m47_201  [color=blue, key=0, style=bold];
m47_205 -> m47_206  [key=0, style=solid];
m47_205 -> m47_27  [key=2, style=dotted];
m47_205 -> m47_103  [key=2, style=dotted];
m47_206 -> m47_204  [color=blue, key=0, style=bold];
m47_208 -> m47_209  [key=0, style=solid];
m47_208 -> m47_27  [key=2, style=dotted];
m47_208 -> m47_103  [key=2, style=dotted];
m47_209 -> m47_207  [color=blue, key=0, style=bold];
m47_219 -> m47_220  [key=0, style=solid];
m47_222 -> m47_223  [key=0, style=solid];
m47_225 -> m47_226  [key=0, style=solid];
m47_228 -> m47_229  [key=0, style=solid];
m47_220 -> m47_221  [key=0, style=solid];
m47_220 -> m47_165  [key=2, style=dotted];
m47_221 -> m47_219  [color=blue, key=0, style=bold];
m47_223 -> m47_224  [key=0, style=solid];
m47_223 -> m47_186  [key=2, style=dotted];
m47_224 -> m47_222  [color=blue, key=0, style=bold];
m47_226 -> m47_227  [key=0, style=solid];
m47_226 -> m47_27  [key=2, style=dotted];
m47_226 -> m47_103  [key=2, style=dotted];
m47_227 -> m47_225  [color=blue, key=0, style=bold];
m47_229 -> m47_230  [key=0, style=solid];
m47_229 -> m47_27  [key=2, style=dotted];
m47_229 -> m47_103  [key=2, style=dotted];
m47_229 -> m47_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_230 -> m47_228  [color=blue, key=0, style=bold];
m47_231 -> m47_232  [key=0, style=solid];
m47_232 -> m47_233  [key=0, style=solid];
m47_232 -> m47_234  [key=2, style=dotted];
m47_233 -> m47_231  [color=blue, key=0, style=bold];
m47_243 -> m47_244  [key=0, style=solid];
m47_246 -> m47_247  [key=0, style=solid];
m47_244 -> m47_245  [key=0, style=solid];
m47_244 -> m47_165  [key=2, style=dotted];
m47_245 -> m47_243  [color=blue, key=0, style=bold];
m47_247 -> m47_248  [key=0, style=solid];
m47_247 -> m47_27  [key=2, style=dotted];
m47_247 -> m47_103  [key=2, style=dotted];
m47_247 -> m47_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_247 -> m47_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_248 -> m47_246  [color=blue, key=0, style=bold];
m47_249 -> m47_250  [key=0, style=solid];
m47_252 -> m47_253  [key=0, style=solid];
m47_250 -> m47_251  [key=0, style=solid];
m47_251 -> m47_249  [color=blue, key=0, style=bold];
m47_253 -> m47_254  [key=0, style=solid];
m47_254 -> m47_252  [color=blue, key=0, style=bold];
m47_263 -> m47_264  [key=0, style=solid];
m47_267 -> m47_268  [key=0, style=solid];
m47_267 -> m47_27  [key=2, style=dotted];
m47_267 -> m47_269  [key=2, style=dotted];
m47_266 -> m47_267  [key=0, style=solid];
m47_264 -> m47_265  [key=0, style=solid];
m47_264 -> m47_186  [key=2, style=dotted];
m47_265 -> m47_263  [color=blue, key=0, style=bold];
m47_268 -> m47_266  [color=blue, key=0, style=bold];
m47_278 -> m47_279  [key=0, style=solid];
m47_282 -> m47_283  [key=0, style=solid];
m47_282 -> m47_27  [key=2, style=dotted];
m47_282 -> m47_284  [key=2, style=dotted];
m47_286 -> m47_287  [key=0, style=solid];
m47_286 -> m47_27  [key=2, style=dotted];
m47_286 -> m47_269  [key=2, style=dotted];
m47_281 -> m47_282  [key=0, style=solid];
m47_285 -> m47_286  [key=0, style=solid];
m47_279 -> m47_280  [key=0, style=solid];
m47_279 -> m47_186  [key=2, style=dotted];
m47_280 -> m47_278  [color=blue, key=0, style=bold];
m47_283 -> m47_281  [color=blue, key=0, style=bold];
m47_287 -> m47_285  [color=blue, key=0, style=bold];
m47_299 -> m47_300  [key=0, style=solid];
m47_303 -> m47_304  [key=0, style=solid];
m47_303 -> m47_27  [key=2, style=dotted];
m47_303 -> m47_269  [key=2, style=dotted];
m47_306 -> m47_307  [key=0, style=solid];
m47_306 -> m47_27  [key=2, style=dotted];
m47_306 -> m47_269  [key=2, style=dotted];
m47_306 -> m47_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_306 -> m47_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_309 -> m47_310  [key=0, style=solid];
m47_302 -> m47_303  [key=0, style=solid];
m47_305 -> m47_306  [key=0, style=solid];
m47_300 -> m47_301  [key=0, style=solid];
m47_300 -> m47_186  [key=2, style=dotted];
m47_301 -> m47_299  [color=blue, key=0, style=bold];
m47_304 -> m47_302  [color=blue, key=0, style=bold];
m47_307 -> m47_305  [color=blue, key=0, style=bold];
m47_308 -> m47_309  [key=0, style=solid];
m47_311 -> m47_312  [key=0, style=solid];
m47_310 -> m47_308  [color=blue, key=0, style=bold];
m47_312 -> m47_313  [key=0, style=solid];
m47_312 -> m47_314  [key=2, style=dotted];
m47_313 -> m47_311  [color=blue, key=0, style=bold];
m47_330 -> m47_331  [key=0, style=solid];
m47_333 -> m47_334  [key=0, style=solid];
m47_336 -> m47_337  [key=0, style=solid];
m47_340 -> m47_341  [key=0, style=solid];
m47_340 -> m47_27  [key=2, style=dotted];
m47_340 -> m47_342  [key=2, style=dotted];
m47_340 -> m47_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_344 -> m47_345  [key=0, style=solid];
m47_339 -> m47_340  [key=0, style=solid];
m47_331 -> m47_332  [key=0, style=solid];
m47_332 -> m47_330  [color=blue, key=0, style=bold];
m47_334 -> m47_335  [key=0, style=solid];
m47_335 -> m47_333  [color=blue, key=0, style=bold];
m47_337 -> m47_338  [key=0, style=solid];
m47_337 -> m47_186  [key=2, style=dotted];
m47_338 -> m47_336  [color=blue, key=0, style=bold];
m47_341 -> m47_339  [color=blue, key=0, style=bold];
m47_345 -> m47_343  [color=blue, key=0, style=bold];
m47_56 -> m47_57  [key=0, style=solid];
m47_57 -> m47_58  [key=0, style=solid];
m47_57 -> m47_51  [key=2, style=dotted];
m47_57 -> m47_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_58 -> m47_59  [key=0, style=solid];
m47_58 -> m47_27  [key=2, style=dotted];
m47_58 -> m47_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_59 -> m47_60  [key=0, style=solid];
m47_59 -> m47_33  [key=2, style=dotted];
m47_60 -> m47_56  [color=blue, key=0, style=bold];
m47_46 -> m47_47  [key=0, style=solid];
m47_47 -> m47_48  [key=0, style=solid];
m47_47 -> m47_51  [key=2, style=dotted];
m47_47 -> m47_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_48 -> m47_49  [key=0, style=solid];
m47_48 -> m47_27  [key=2, style=dotted];
m47_48 -> m47_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_49 -> m47_50  [key=0, style=solid];
m47_49 -> m47_33  [key=2, style=dotted];
m47_50 -> m47_46  [color=blue, key=0, style=bold];
m47_172 -> m47_173  [key=0, style=solid];
m47_173 -> m47_174  [key=0, style=solid];
m47_173 -> m47_11  [key=2, style=dotted];
m47_173 -> m47_179  [key=2, style=dotted];
m47_173 -> m47_8  [key=2, style=dotted];
m47_173 -> m47_12  [key=2, style=dotted];
m47_173 -> m47_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_173 -> m47_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_174 -> m47_175  [key=0, style=solid];
m47_174 -> m47_99  [key=2, style=dotted];
m47_174 -> m47_177  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_175 -> m47_176  [key=0, style=solid];
m47_175 -> m47_119  [key=2, style=dotted];
m47_177 -> m47_178  [key=0, style=solid];
m47_177 -> m47_81  [key=2, style=dotted];
m47_177 -> m47_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_176 -> m47_177  [key=0, style=solid];
m47_176 -> m47_161  [key=2, style=dotted];
m47_178 -> m47_172  [color=blue, key=0, style=bold];
m47_29 -> m47_30  [key=0, style=solid];
m47_30 -> m47_31  [key=0, style=solid];
m47_30 -> m47_27  [key=2, style=dotted];
m47_30 -> m47_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_31 -> m47_32  [key=0, style=solid];
m47_31 -> m47_33  [key=2, style=dotted];
m47_32 -> m47_29  [color=blue, key=0, style=bold];
m47_64 -> m47_65  [key=0, style=solid];
m47_65 -> m47_66  [key=0, style=solid];
m47_65 -> m47_51  [key=2, style=dotted];
m47_65 -> m47_70  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_66 -> m47_67  [key=0, style=solid];
m47_66 -> m47_27  [key=2, style=dotted];
m47_66 -> m47_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_67 -> m47_68  [key=0, style=solid];
m47_67 -> m47_33  [key=2, style=dotted];
m47_68 -> m47_64  [color=blue, key=0, style=bold];
m47_351 -> m47_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_70  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_105  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_113  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_130  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_131  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_139  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_140  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_154  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_155  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_191  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_194  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_211  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_212  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_214  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_215  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_229  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_236  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_237  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_238  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_256  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_258  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_259  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_267  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_271  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_274  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_282  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_275  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_289  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_292  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_303  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_293  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_320  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_321  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_322  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_324  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_325  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_340  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_344  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_346  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_351 -> m47_348  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m47_352 -> m47_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_353 -> m47_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_354 -> m47_70  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_355 -> m47_117  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_356 -> m47_126  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_357 -> m47_135  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m47_358 -> m47_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_359 -> m47_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_359 -> m47_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_360 -> m47_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m47_361 -> m47_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_361 -> m47_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_362 -> m47_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m47_362 -> m47_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m47_363 -> m47_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m47_363 -> m47_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m49_8 -> m49_9  [key=0, style=solid];
m49_9 -> m49_10  [color=red, key=0, style=solid];
m49_9 -> m49_7  [key=2, style=dotted];
m49_9 -> m49_12  [key=2, style=dotted];
m49_10 -> m49_11  [color=red, key=0, style=solid];
m49_10 -> m49_13  [color=red, key=2, style=dotted];
m49_11 -> m49_8  [color=blue, key=0, style=bold];
m49_0 -> m49_1  [key=0, style=solid];
m49_1 -> m49_2  [key=0, style=solid];
m49_1 -> m49_3  [key=2, style=dotted];
m49_1 -> m49_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_2 -> m49_0  [color=blue, key=0, style=bold];
m49_4 -> m49_5  [key=0, style=solid];
m49_5 -> m49_6  [key=0, style=solid];
m49_5 -> m49_7  [key=2, style=dotted];
m49_6 -> m49_4  [color=blue, key=0, style=bold];
m49_14 -> m49_15  [color=red, key=0, style=solid];
m49_15 -> m49_16  [color=red, key=0, style=solid];
m49_15 -> m49_7  [color=red, key=2, style=dotted];
m49_15 -> m49_19  [color=red, key=2, style=dotted];
m49_16 -> m49_17  [color=red, key=0, style=solid];
m49_16 -> m49_20  [color=red, key=2, style=dotted];
m49_17 -> m49_18  [color=red, key=0, style=solid];
m49_17 -> m49_21  [color=red, key=2, style=dotted];
m49_17 -> m49_22  [color=red, key=2, style=dotted];
m49_18 -> m49_14  [color=blue, key=0, style=bold];
m50_136 -> m50_137  [key=0, style=solid];
m50_137 -> m50_138  [key=0, style=solid];
m50_137 -> m50_42  [key=2, style=dotted];
m50_138 -> m50_139  [key=0, style=solid];
m50_138 -> m50_22  [key=2, style=dotted];
m50_139 -> m50_140  [key=0, style=solid];
m50_139 -> m50_30  [key=2, style=dotted];
m50_140 -> m50_141  [key=0, style=solid];
m50_140 -> m50_43  [key=2, style=dotted];
m50_141 -> m50_142  [key=0, style=solid];
m50_141 -> m50_56  [key=2, style=dotted];
m50_141 -> m50_143  [color=darkseagreen4, key=1, label=table3, style=dashed];
m50_142 -> m50_143  [key=0, style=solid];
m50_142 -> m50_57  [key=2, style=dotted];
m50_143 -> m50_144  [key=0, style=solid];
m50_143 -> m50_44  [key=2, style=dotted];
m50_144 -> m50_145  [key=0, style=solid];
m50_144 -> m50_26  [key=2, style=dotted];
m50_145 -> m50_136  [color=blue, key=0, style=bold];
m50_9 -> m50_10  [key=0, style=solid];
m50_10 -> m50_11  [key=0, style=solid];
m50_10 -> m50_13  [key=2, style=dotted];
m50_11 -> m50_12  [key=0, style=solid];
m50_12 -> m50_9  [color=blue, key=0, style=bold];
m50_93 -> m50_94  [key=0, style=solid];
m50_94 -> m50_95  [key=0, style=solid];
m50_94 -> m50_42  [key=2, style=dotted];
m50_95 -> m50_96  [key=0, style=solid];
m50_95 -> m50_22  [key=2, style=dotted];
m50_96 -> m50_97  [key=0, style=solid];
m50_96 -> m50_30  [key=2, style=dotted];
m50_97 -> m50_98  [key=0, style=solid];
m50_97 -> m50_43  [key=2, style=dotted];
m50_98 -> m50_99  [key=0, style=solid];
m50_98 -> m50_44  [key=2, style=dotted];
m50_99 -> m50_100  [key=0, style=solid];
m50_99 -> m50_26  [key=2, style=dotted];
m50_100 -> m50_93  [color=blue, key=0, style=bold];
m50_101 -> m50_102  [key=0, style=solid];
m50_102 -> m50_103  [key=0, style=solid];
m50_102 -> m50_42  [key=2, style=dotted];
m50_103 -> m50_104  [key=0, style=solid];
m50_103 -> m50_22  [key=2, style=dotted];
m50_104 -> m50_105  [key=0, style=solid];
m50_104 -> m50_30  [key=2, style=dotted];
m50_105 -> m50_106  [key=0, style=solid];
m50_105 -> m50_33  [key=2, style=dotted];
m50_106 -> m50_107  [key=0, style=solid];
m50_106 -> m50_43  [key=2, style=dotted];
m50_107 -> m50_108  [key=0, style=solid];
m50_107 -> m50_44  [key=2, style=dotted];
m50_108 -> m50_109  [key=0, style=solid];
m50_108 -> m50_26  [key=2, style=dotted];
m50_109 -> m50_101  [color=blue, key=0, style=bold];
m50_58 -> m50_59  [key=0, style=solid];
m50_59 -> m50_60  [key=0, style=solid];
m50_59 -> m50_42  [key=2, style=dotted];
m50_60 -> m50_61  [key=0, style=solid];
m50_60 -> m50_22  [key=2, style=dotted];
m50_61 -> m50_62  [key=0, style=solid];
m50_61 -> m50_30  [key=2, style=dotted];
m50_62 -> m50_63  [key=0, style=solid];
m50_62 -> m50_33  [key=2, style=dotted];
m50_63 -> m50_64  [key=0, style=solid];
m50_63 -> m50_43  [key=2, style=dotted];
m50_64 -> m50_65  [key=0, style=solid];
m50_64 -> m50_44  [key=2, style=dotted];
m50_65 -> m50_66  [key=0, style=solid];
m50_65 -> m50_26  [key=2, style=dotted];
m50_66 -> m50_58  [color=blue, key=0, style=bold];
m50_110 -> m50_111  [key=0, style=solid];
m50_111 -> m50_112  [key=0, style=solid];
m50_111 -> m50_42  [key=2, style=dotted];
m50_112 -> m50_113  [key=0, style=solid];
m50_112 -> m50_22  [key=2, style=dotted];
m50_113 -> m50_114  [key=0, style=solid];
m50_113 -> m50_30  [key=2, style=dotted];
m50_114 -> m50_115  [key=0, style=solid];
m50_114 -> m50_33  [key=2, style=dotted];
m50_115 -> m50_116  [key=0, style=solid];
m50_115 -> m50_43  [key=2, style=dotted];
m50_116 -> m50_117  [key=0, style=solid];
m50_116 -> m50_44  [key=2, style=dotted];
m50_117 -> m50_118  [key=0, style=solid];
m50_117 -> m50_26  [key=2, style=dotted];
m50_118 -> m50_110  [color=blue, key=0, style=bold];
m50_22 -> m50_23  [key=0, style=solid];
m50_23 -> m50_24  [key=0, style=solid];
m50_23 -> m50_25  [key=2, style=dotted];
m50_24 -> m50_22  [color=blue, key=0, style=bold];
m50_75 -> m50_76  [key=0, style=solid];
m50_76 -> m50_77  [key=0, style=solid];
m50_76 -> m50_42  [key=2, style=dotted];
m50_77 -> m50_78  [key=0, style=solid];
m50_77 -> m50_22  [key=2, style=dotted];
m50_78 -> m50_79  [key=0, style=solid];
m50_78 -> m50_30  [key=2, style=dotted];
m50_79 -> m50_80  [key=0, style=solid];
m50_79 -> m50_43  [key=2, style=dotted];
m50_80 -> m50_81  [key=0, style=solid];
m50_80 -> m50_44  [key=2, style=dotted];
m50_81 -> m50_82  [key=0, style=solid];
m50_81 -> m50_26  [key=2, style=dotted];
m50_82 -> m50_75  [color=blue, key=0, style=bold];
m50_26 -> m50_27  [key=0, style=solid];
m50_27 -> m50_28  [key=0, style=solid];
m50_27 -> m50_29  [key=2, style=dotted];
m50_28 -> m50_26  [color=blue, key=0, style=bold];
m50_83 -> m50_84  [key=0, style=solid];
m50_84 -> m50_85  [key=0, style=solid];
m50_84 -> m50_42  [key=2, style=dotted];
m50_85 -> m50_86  [key=0, style=solid];
m50_85 -> m50_22  [key=2, style=dotted];
m50_86 -> m50_87  [key=0, style=solid];
m50_86 -> m50_30  [key=2, style=dotted];
m50_87 -> m50_88  [key=0, style=solid];
m50_87 -> m50_43  [key=2, style=dotted];
m50_88 -> m50_89  [key=0, style=solid];
m50_88 -> m50_56  [key=2, style=dotted];
m50_88 -> m50_90  [color=darkseagreen4, key=1, label=table2, style=dashed];
m50_89 -> m50_90  [key=0, style=solid];
m50_89 -> m50_57  [key=2, style=dotted];
m50_90 -> m50_91  [key=0, style=solid];
m50_90 -> m50_44  [key=2, style=dotted];
m50_91 -> m50_92  [key=0, style=solid];
m50_91 -> m50_26  [key=2, style=dotted];
m50_92 -> m50_83  [color=blue, key=0, style=bold];
m50_14 -> m50_15  [key=0, style=solid];
m50_15 -> m50_16  [key=0, style=solid];
m50_15 -> m50_17  [key=0, style=solid];
m50_16 -> m50_17  [key=0, style=solid];
m50_16 -> m50_0  [key=2, style=dotted];
m50_17 -> m50_14  [color=blue, key=0, style=bold];
m50_18 -> m50_19  [key=0, style=solid];
m50_19 -> m50_20  [key=0, style=solid];
m50_19 -> m50_21  [key=2, style=dotted];
m50_20 -> m50_18  [color=blue, key=0, style=bold];
m50_146 -> m50_147  [key=0, style=solid];
m50_147 -> m50_148  [key=0, style=solid];
m50_147 -> m50_42  [key=2, style=dotted];
m50_148 -> m50_149  [key=0, style=solid];
m50_148 -> m50_22  [key=2, style=dotted];
m50_149 -> m50_150  [key=0, style=solid];
m50_149 -> m50_30  [key=2, style=dotted];
m50_150 -> m50_151  [key=0, style=solid];
m50_150 -> m50_43  [key=2, style=dotted];
m50_151 -> m50_152  [key=0, style=solid];
m50_151 -> m50_44  [key=2, style=dotted];
m50_152 -> m50_153  [key=0, style=solid];
m50_152 -> m50_26  [key=2, style=dotted];
m50_153 -> m50_146  [color=blue, key=0, style=bold];
m50_45 -> m50_46  [key=0, style=solid];
m50_46 -> m50_47  [key=0, style=solid];
m50_46 -> m50_42  [key=2, style=dotted];
m50_47 -> m50_48  [key=0, style=solid];
m50_47 -> m50_22  [key=2, style=dotted];
m50_48 -> m50_49  [key=0, style=solid];
m50_48 -> m50_30  [key=2, style=dotted];
m50_49 -> m50_50  [key=0, style=solid];
m50_49 -> m50_43  [key=2, style=dotted];
m50_50 -> m50_51  [key=0, style=solid];
m50_50 -> m50_56  [key=2, style=dotted];
m50_50 -> m50_52  [color=darkseagreen4, key=1, label=table1, style=dashed];
m50_50 -> m50_53  [color=darkseagreen4, key=1, label=table1, style=dashed];
m50_51 -> m50_52  [key=0, style=solid];
m50_51 -> m50_57  [key=2, style=dotted];
m50_52 -> m50_53  [key=0, style=solid];
m50_52 -> m50_57  [key=2, style=dotted];
m50_53 -> m50_54  [key=0, style=solid];
m50_53 -> m50_44  [key=2, style=dotted];
m50_54 -> m50_55  [key=0, style=solid];
m50_54 -> m50_26  [key=2, style=dotted];
m50_55 -> m50_45  [color=blue, key=0, style=bold];
m50_67 -> m50_68  [key=0, style=solid];
m50_68 -> m50_69  [key=0, style=solid];
m50_68 -> m50_42  [key=2, style=dotted];
m50_69 -> m50_70  [key=0, style=solid];
m50_69 -> m50_22  [key=2, style=dotted];
m50_70 -> m50_71  [key=0, style=solid];
m50_70 -> m50_30  [key=2, style=dotted];
m50_71 -> m50_72  [key=0, style=solid];
m50_71 -> m50_43  [key=2, style=dotted];
m50_72 -> m50_73  [key=0, style=solid];
m50_72 -> m50_44  [key=2, style=dotted];
m50_73 -> m50_74  [key=0, style=solid];
m50_73 -> m50_26  [key=2, style=dotted];
m50_74 -> m50_67  [color=blue, key=0, style=bold];
m50_30 -> m50_31  [key=0, style=solid];
m50_31 -> m50_32  [key=0, style=solid];
m50_31 -> m50_33  [key=2, style=dotted];
m50_32 -> m50_30  [color=blue, key=0, style=bold];
m50_128 -> m50_129  [key=0, style=solid];
m50_129 -> m50_130  [key=0, style=solid];
m50_129 -> m50_42  [key=2, style=dotted];
m50_130 -> m50_131  [key=0, style=solid];
m50_130 -> m50_22  [key=2, style=dotted];
m50_131 -> m50_132  [key=0, style=solid];
m50_131 -> m50_30  [key=2, style=dotted];
m50_132 -> m50_133  [key=0, style=solid];
m50_132 -> m50_43  [key=2, style=dotted];
m50_133 -> m50_134  [key=0, style=solid];
m50_133 -> m50_44  [key=2, style=dotted];
m50_134 -> m50_135  [key=0, style=solid];
m50_134 -> m50_26  [key=2, style=dotted];
m50_135 -> m50_128  [color=blue, key=0, style=bold];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> m50_5  [key=2, style=dotted];
m50_2 -> m50_3  [key=0, style=solid];
m50_2 -> m50_6  [key=2, style=dotted];
m50_2 -> m50_7  [key=2, style=dotted];
m50_3 -> m50_4  [key=0, style=solid];
m50_3 -> m50_8  [key=2, style=dotted];
m50_4 -> m50_0  [color=blue, key=0, style=bold];
m50_154 -> m50_155  [key=0, style=solid];
m50_155 -> m50_156  [key=0, style=solid];
m50_155 -> m50_42  [key=2, style=dotted];
m50_156 -> m50_157  [key=0, style=solid];
m50_156 -> m50_22  [key=2, style=dotted];
m50_157 -> m50_158  [key=0, style=solid];
m50_157 -> m50_30  [key=2, style=dotted];
m50_158 -> m50_159  [key=0, style=solid];
m50_158 -> m50_43  [key=2, style=dotted];
m50_159 -> m50_160  [key=0, style=solid];
m50_159 -> m50_56  [key=2, style=dotted];
m50_159 -> m50_161  [color=darkseagreen4, key=1, label=table4, style=dashed];
m50_160 -> m50_161  [key=0, style=solid];
m50_160 -> m50_57  [key=2, style=dotted];
m50_161 -> m50_162  [key=0, style=solid];
m50_161 -> m50_44  [key=2, style=dotted];
m50_162 -> m50_163  [key=0, style=solid];
m50_162 -> m50_26  [key=2, style=dotted];
m50_163 -> m50_154  [color=blue, key=0, style=bold];
m50_119 -> m50_120  [key=0, style=solid];
m50_120 -> m50_121  [key=0, style=solid];
m50_120 -> m50_42  [key=2, style=dotted];
m50_121 -> m50_122  [key=0, style=solid];
m50_121 -> m50_22  [key=2, style=dotted];
m50_122 -> m50_123  [key=0, style=solid];
m50_122 -> m50_30  [key=2, style=dotted];
m50_123 -> m50_124  [key=0, style=solid];
m50_123 -> m50_33  [key=2, style=dotted];
m50_124 -> m50_125  [key=0, style=solid];
m50_124 -> m50_43  [key=2, style=dotted];
m50_125 -> m50_126  [key=0, style=solid];
m50_125 -> m50_44  [key=2, style=dotted];
m50_126 -> m50_127  [key=0, style=solid];
m50_126 -> m50_26  [key=2, style=dotted];
m50_127 -> m50_119  [color=blue, key=0, style=bold];
m50_34 -> m50_35  [key=0, style=solid];
m50_35 -> m50_36  [key=0, style=solid];
m50_35 -> m50_42  [key=2, style=dotted];
m50_36 -> m50_37  [key=0, style=solid];
m50_36 -> m50_22  [key=2, style=dotted];
m50_37 -> m50_38  [key=0, style=solid];
m50_37 -> m50_30  [key=2, style=dotted];
m50_38 -> m50_39  [key=0, style=solid];
m50_38 -> m50_43  [key=2, style=dotted];
m50_39 -> m50_40  [key=0, style=solid];
m50_39 -> m50_44  [key=2, style=dotted];
m50_40 -> m50_41  [key=0, style=solid];
m50_40 -> m50_26  [key=2, style=dotted];
m50_41 -> m50_34  [color=blue, key=0, style=bold];
m50_164 -> m50_36  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_40  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_47  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_48  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_54  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_60  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_65  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_69  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_73  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_77  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_78  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_81  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_85  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_86  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_91  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_95  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_96  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_99  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_103  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_104  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_108  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_112  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_113  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_117  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_121  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_122  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_126  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_130  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_131  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_134  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_138  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_139  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_144  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_148  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_149  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_152  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_156  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_157  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m50_164 -> m50_162  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m51_2 -> m51_3  [key=0, style=solid];
m51_3 -> m51_2  [color=blue, key=0, style=bold];
m51_0 -> m51_1  [key=0, style=solid];
m51_1 -> m51_0  [color=blue, key=0, style=bold];
m51_4 -> m51_5  [key=0, style=solid];
m51_5 -> m51_4  [color=blue, key=0, style=bold];
m52_17 -> m52_18  [color=red, key=0, style=solid];
m52_17 -> m52_83  [key=2, style=dotted];
m52_17 -> m52_84  [key=2, style=dotted];
m52_17 -> m52_85  [key=2, style=dotted];
m52_0 -> m52_3  [color=green, key=1, label="System.Action<Hangfire.IBootstrapperConfiguration>", style=dashed];
m52_0 -> m52_1  [key=0, style=solid];
m52_0 -> m52_6  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IBootstrapperConfiguration>", style=dashed];
m52_0 -> m52_14  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m52_0 -> m52_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m52_3 -> m52_4  [color=green, key=0, style=solid];
m52_3 -> m52_5  [color=green, key=0, style=solid];
m52_1 -> m52_3  [color=green, key=0, style=solid];
m52_1 -> m52_2  [key=0, style=solid];
m52_1 -> m52_74  [key=2, style=dotted];
m52_4 -> m52_16  [color=green, key=0, style=solid];
m52_4 -> m52_17  [color=green, key=2, style=dotted];
m52_4 -> m52_5  [key=0, style=solid];
m52_4 -> m52_76  [key=2, style=dotted];
m52_4 -> m52_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m52_5 -> m52_10  [color=green, key=1, label=configuration, style=dashed];
m52_5 -> m52_6  [key=0, style=solid];
m52_5 -> m52_18  [key=2, style=dotted];
m52_5 -> m52_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m52_5 -> m52_8  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m52_5 -> m52_9  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m52_5 -> m52_11  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m52_5 -> m52_13  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m52_5 -> m52_15  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m52_5 -> m52_76  [key=2, style=dotted];
m52_10 -> m52_11  [color=green, key=0, style=solid];
m52_10 -> m52_12  [color=red, key=0, style=solid];
m52_9 -> m52_10  [color=red, key=0, style=solid];
m52_9 -> m52_11  [key=0, style=solid];
m52_9 -> m52_74  [color=red, key=2, style=dotted];
m52_11 -> m52_12  [key=0, style=solid];
m52_11 -> m52_13  [key=0, style=solid];
m52_11 -> m52_73  [key=0, style=solid];
m52_11 -> m52_74  [key=2, style=dotted];
m52_6 -> m52_7  [key=0, style=solid];
m52_6 -> m52_19  [key=2, style=dotted];
m52_6 -> m52_77  [key=2, style=dotted];
m52_6 -> m52_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m52_14 -> m52_13  [key=0, style=solid];
m52_14 -> m52_21  [key=2, style=dotted];
m52_14 -> m52_22  [key=2, style=dotted];
m52_14 -> m52_15  [color=red, key=0, style=solid];
m52_14 -> m52_74  [color=red, key=2, style=dotted];
m52_15 -> m52_16  [color=red, key=0, style=solid];
m52_15 -> m52_23  [key=2, style=dotted];
m52_15 -> m52_80  [color=red, key=2, style=dotted];
m52_15 -> m52_82  [color=red, key=2, style=dotted];
m52_2 -> m52_16  [key=0, style=solid];
m52_2 -> m52_17  [key=2, style=dotted];
m52_2 -> m52_3  [key=0, style=solid];
m52_2 -> m52_75  [key=2, style=dotted];
m52_7 -> m52_9  [key=0, style=solid];
m52_7 -> m52_8  [key=0, style=solid];
m52_7 -> m52_78  [key=2, style=dotted];
m52_7 -> m52_79  [key=2, style=dotted];
m52_7 -> m52_80  [key=2, style=dotted];
m52_7 -> m52_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_7 -> m52_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_7 -> m52_72  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_8 -> m52_9  [color=red, key=0, style=solid];
m52_8 -> m52_81  [key=2, style=dotted];
m52_8 -> m52_20  [color=darkseagreen4, key=1, label=failedJobs, style=dashed];
m52_13 -> m52_14  [color=red, key=0, style=solid];
m52_13 -> m52_15  [key=0, style=solid];
m52_13 -> m52_80  [key=2, style=dotted];
m52_13 -> m52_82  [key=2, style=dotted];
m52_12 -> m52_11  [key=0, style=solid];
m52_12 -> m52_20  [key=2, style=dotted];
m52_12 -> m52_13  [color=red, key=0, style=solid];
m52_12 -> m52_74  [color=red, key=2, style=dotted];
m52_16 -> m52_0  [color=blue, key=0, style=bold];
m52_16 -> m52_17  [key=0, style=solid];
m52_16 -> m52_74  [key=2, style=dotted];
m52_72 -> m52_73  [key=0, style=solid];
m52_72 -> m52_91  [key=2, style=dotted];
m52_72 -> m52_84  [key=2, style=dotted];
m52_72 -> m52_85  [key=2, style=dotted];
m52_20 -> m52_21  [key=0, style=solid];
m52_20 -> m52_71  [key=0, style=solid];
m52_20 -> m52_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_18 -> m52_19  [color=red, key=0, style=solid];
m52_18 -> m52_74  [color=red, key=2, style=dotted];
m52_19 -> m52_20  [key=0, style=solid];
m52_19 -> m52_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m52_60 -> m52_61  [color=red, key=0, style=solid];
m52_60 -> m52_82  [key=2, style=dotted];
m52_60 -> m52_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m52_21 -> m52_22  [key=0, style=solid];
m52_21 -> m52_74  [key=2, style=dotted];
m52_71 -> m52_72  [key=0, style=solid];
m52_71 -> m52_74  [key=2, style=dotted];
m52_22 -> m52_23  [key=0, style=solid];
m52_22 -> m52_82  [key=2, style=dotted];
m52_22 -> m52_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_22 -> m52_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_23 -> m52_24  [key=0, style=solid];
m52_23 -> m52_74  [key=2, style=dotted];
m52_24 -> m52_25  [key=0, style=solid];
m52_24 -> m52_82  [key=2, style=dotted];
m52_24 -> m52_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_24 -> m52_26  [color=red, key=1, label=job, style=dashed];
m52_25 -> m52_26  [color=red, key=0, style=solid];
m52_25 -> m52_74  [key=2, style=dotted];
m52_26 -> m52_27  [color=red, key=0, style=solid];
m52_26 -> m52_82  [color=red, key=2, style=dotted];
m52_26 -> m52_26  [color=red, key=1, label=job, style=dashed];
m52_26 -> m52_28  [color=red, key=1, label=job, style=dashed];
m52_27 -> m52_28  [key=0, style=solid];
m52_27 -> m52_74  [key=2, style=dotted];
m52_28 -> m52_29  [key=0, style=solid];
m52_28 -> m52_32  [key=0, style=solid];
m52_28 -> m52_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_28 -> m52_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_28 -> m52_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_29 -> m52_30  [key=0, style=solid];
m52_29 -> m52_74  [key=2, style=dotted];
m52_32 -> m52_33  [key=0, style=solid];
m52_32 -> m52_74  [key=2, style=dotted];
m52_30 -> m52_31  [key=0, style=solid];
m52_30 -> m52_82  [key=2, style=dotted];
m52_30 -> m52_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_30 -> m52_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_33 -> m52_34  [key=0, style=solid];
m52_33 -> m52_82  [key=2, style=dotted];
m52_33 -> m52_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_33 -> m52_35  [color=red, key=1, label=job, style=dashed];
m52_31 -> m52_32  [key=0, style=solid];
m52_31 -> m52_74  [key=2, style=dotted];
m52_34 -> m52_35  [color=red, key=0, style=solid];
m52_34 -> m52_74  [key=2, style=dotted];
m52_35 -> m52_36  [color=red, key=0, style=solid];
m52_35 -> m52_80  [color=red, key=2, style=dotted];
m52_35 -> m52_82  [color=red, key=2, style=dotted];
m52_35 -> m52_35  [color=red, key=1, label=job, style=dashed];
m52_35 -> m52_37  [color=red, key=1, label=job, style=dashed];
m52_36 -> m52_37  [key=0, style=solid];
m52_36 -> m52_74  [key=2, style=dotted];
m52_37 -> m52_38  [key=0, style=solid];
m52_37 -> m52_86  [key=2, style=dotted];
m52_37 -> m52_85  [key=2, style=dotted];
m52_37 -> m52_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_37 -> m52_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_38 -> m52_39  [key=0, style=solid];
m52_38 -> m52_74  [key=2, style=dotted];
m52_39 -> m52_40  [key=0, style=solid];
m52_39 -> m52_41  [key=0, style=solid];
m52_39 -> m52_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_39 -> m52_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_40 -> m52_41  [key=0, style=solid];
m52_40 -> m52_74  [key=2, style=dotted];
m52_41 -> m52_42  [key=0, style=solid];
m52_41 -> m52_74  [key=2, style=dotted];
m52_42 -> m52_43  [key=0, style=solid];
m52_42 -> m52_48  [key=0, style=solid];
m52_42 -> m52_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_42 -> m52_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_42 -> m52_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_43 -> m52_44  [key=0, style=solid];
m52_43 -> m52_74  [key=2, style=dotted];
m52_48 -> m52_49  [key=0, style=solid];
m52_48 -> m52_74  [key=2, style=dotted];
m52_44 -> m52_45  [key=0, style=solid];
m52_44 -> m52_87  [key=2, style=dotted];
m52_44 -> m52_82  [key=2, style=dotted];
m52_44 -> m52_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_44 -> m52_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_49 -> m52_50  [key=0, style=solid];
m52_49 -> m52_80  [key=2, style=dotted];
m52_49 -> m52_82  [key=2, style=dotted];
m52_49 -> m52_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_49 -> m52_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_45 -> m52_46  [key=0, style=solid];
m52_45 -> m52_74  [key=2, style=dotted];
m52_46 -> m52_47  [key=0, style=solid];
m52_46 -> m52_82  [key=2, style=dotted];
m52_46 -> m52_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_46 -> m52_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_47 -> m52_48  [key=0, style=solid];
m52_47 -> m52_74  [key=2, style=dotted];
m52_50 -> m52_51  [key=0, style=solid];
m52_50 -> m52_74  [key=2, style=dotted];
m52_51 -> m52_52  [key=0, style=solid];
m52_51 -> m52_88  [key=2, style=dotted];
m52_51 -> m52_85  [key=2, style=dotted];
m52_51 -> m52_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_51 -> m52_53  [color=red, key=1, label=job, style=dashed];
m52_52 -> m52_53  [color=red, key=0, style=solid];
m52_52 -> m52_74  [key=2, style=dotted];
m52_53 -> m52_54  [color=red, key=0, style=solid];
m52_53 -> m52_57  [color=red, key=0, style=solid];
m52_53 -> m52_89  [color=red, key=2, style=dotted];
m52_53 -> m52_53  [color=red, key=1, label=job, style=dashed];
m52_53 -> m52_55  [color=red, key=1, label=job, style=dashed];
m52_53 -> m52_58  [color=red, key=1, label=job, style=dashed];
m52_54 -> m52_55  [key=0, style=solid];
m52_54 -> m52_74  [key=2, style=dotted];
m52_57 -> m52_58  [key=0, style=solid];
m52_57 -> m52_74  [key=2, style=dotted];
m52_55 -> m52_56  [key=0, style=solid];
m52_55 -> m52_82  [key=2, style=dotted];
m52_55 -> m52_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_55 -> m52_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_58 -> m52_59  [color=red, key=0, style=solid];
m52_58 -> m52_20  [key=0, style=solid];
m52_58 -> m52_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_58 -> m52_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_57  [key=0, style=solid];
m52_56 -> m52_74  [key=2, style=dotted];
m52_59 -> m52_60  [color=red, key=0, style=solid];
m52_59 -> m52_74  [color=red, key=2, style=dotted];
m52_62 -> m52_63  [color=red, key=0, style=solid];
m52_62 -> m52_82  [key=2, style=dotted];
m52_62 -> m52_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_62 -> m52_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_61 -> m52_62  [color=red, key=0, style=solid];
m52_61 -> m52_74  [color=red, key=2, style=dotted];
m52_63 -> m52_64  [color=red, key=0, style=solid];
m52_63 -> m52_74  [color=red, key=2, style=dotted];
m52_64 -> m52_65  [key=0, style=solid];
m52_64 -> m52_82  [key=2, style=dotted];
m52_64 -> m52_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_64 -> m52_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_65 -> m52_66  [key=0, style=solid];
m52_65 -> m52_74  [key=2, style=dotted];
m52_66 -> m52_67  [key=0, style=solid];
m52_66 -> m52_70  [key=0, style=solid];
m52_66 -> m52_89  [key=2, style=dotted];
m52_66 -> m52_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_66 -> m52_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_67 -> m52_68  [key=0, style=solid];
m52_67 -> m52_74  [key=2, style=dotted];
m52_70 -> m52_20  [key=0, style=solid];
m52_70 -> m52_74  [key=2, style=dotted];
m52_68 -> m52_69  [key=0, style=solid];
m52_68 -> m52_90  [key=2, style=dotted];
m52_68 -> m52_85  [key=2, style=dotted];
m52_68 -> m52_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_69 -> m52_70  [key=0, style=solid];
m52_69 -> m52_74  [key=2, style=dotted];
m52_73 -> m52_0  [color=blue, key=0, style=bold];
m52_92 -> m52_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_9  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_12  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_14  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_15  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_18  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_26  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_35  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_59  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_61  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_63  [color=red, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m52_92 -> m52_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m53_0 -> m53_1  [key=0, style=solid];
m53_1 -> m53_0  [color=blue, key=0, style=bold];
m54_0 -> m54_1  [key=0, style=solid];
m54_0 -> m54_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m54_0 -> m54_4  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m54_1 -> m54_2  [key=0, style=solid];
m54_1 -> m54_3  [key=0, style=solid];
m54_3 -> m54_4  [key=0, style=solid];
m54_4 -> m54_5  [key=0, style=solid];
m54_2 -> m54_5  [key=0, style=solid];
m54_2 -> m54_6  [key=2, style=dotted];
m54_5 -> m54_0  [color=blue, key=0, style=bold];
m54_24 -> m54_31  [key=0, style=solid];
m54_31 -> m54_32  [key=0, style=solid];
m54_31 -> m54_33  [key=2, style=dotted];
m54_31 -> m54_34  [key=2, style=dotted];
m54_32 -> m54_24  [color=blue, key=0, style=bold];
m54_7 -> m54_8  [key=0, style=solid];
m54_7 -> m54_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m54_7 -> m54_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m54_8 -> m54_9  [key=0, style=solid];
m54_8 -> m54_17  [key=2, style=dotted];
m54_12 -> m54_13  [color=red, key=0, style=solid];
m54_12 -> m54_19  [key=2, style=dotted];
m54_12 -> m54_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m54_15 -> m54_16  [key=0, style=solid];
m54_15 -> m54_19  [key=2, style=dotted];
m54_15 -> m54_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m54_9 -> m54_10  [color=red, key=0, style=solid];
m54_10 -> m54_11  [color=red, key=0, style=solid];
m54_10 -> m54_18  [color=red, key=2, style=dotted];
m54_10 -> m54_21  [color=red, key=1, label="lambda expression", style=dashed];
m54_10 -> m54_14  [color=red, key=1, label=removedCount, style=dashed];
m54_11 -> m54_12  [color=red, key=0, style=solid];
m54_11 -> m54_14  [color=red, key=0, style=solid];
m54_14 -> m54_9  [key=0, style=solid];
m54_14 -> m54_15  [key=0, style=solid];
m54_13 -> m54_14  [color=red, key=0, style=solid];
m54_13 -> m54_20  [color=red, key=2, style=dotted];
m54_13 -> m54_13  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m54_13 -> m54_15  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m54_16 -> m54_7  [color=blue, key=0, style=bold];
m54_26 -> m54_27  [key=0, style=solid];
m54_27 -> m54_28  [key=0, style=solid];
m54_27 -> m54_29  [key=2, style=dotted];
m54_27 -> m54_30  [key=2, style=dotted];
m54_28 -> m54_26  [color=blue, key=0, style=bold];
m54_21 -> m54_22  [color=red, key=0, style=solid];
m54_22 -> m54_23  [color=red, key=0, style=solid];
m54_22 -> m54_24  [color=red, key=2, style=dotted];
m54_22 -> m54_25  [color=red, key=2, style=dotted];
m54_23 -> m54_21  [color=blue, key=0, style=bold];
m54_35 -> m54_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m54_35 -> m54_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m54_35 -> m54_10  [color=red, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m54_35 -> m54_22  [color=red, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m54_35 -> m54_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m54_35 -> m54_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m55_52 -> m55_53  [key=0, style=solid];
m55_52 -> m55_58  [key=2, style=dotted];
m55_18 -> m55_19  [key=0, style=solid];
m55_18 -> m55_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>", style=dashed];
m55_18 -> m55_21  [color=red, key=1, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>", style=dashed];
m55_18 -> m55_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString SidebarMenu", style=bold];
m55_19 -> m55_20  [key=0, style=solid];
m55_19 -> m55_21  [color=red, key=0, style=solid];
m55_20 -> m55_22  [key=0, style=solid];
m55_20 -> m55_5  [key=2, style=dotted];
m55_20 -> m55_6  [key=2, style=dotted];
m55_21 -> m55_22  [color=red, key=0, style=solid];
m55_21 -> m55_17  [color=red, key=2, style=dotted];
m55_21 -> m55_13  [color=red, key=2, style=dotted];
m55_21 -> m55_10  [color=red, key=3, label="Parameter variable object args", style=bold];
m55_22 -> m55_18  [color=blue, key=0, style=bold];
m55_22 -> m55_23  [key=0, style=solid];
m55_56 -> m55_57  [key=0, style=solid];
m55_56 -> m55_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_56 -> m55_75  [color=darkorchid, key=3, label="Parameter variable string jobId", style=bold];
m55_56 -> m55_45  [color=blue, key=0, style=bold];
m55_57 -> m55_58  [key=0, style=solid];
m55_58 -> m55_59  [key=0, style=solid];
m55_58 -> m55_51  [key=2, style=dotted];
m55_58 -> m55_60  [key=2, style=dotted];
m55_58 -> m55_61  [key=2, style=dotted];
m55_59 -> m55_56  [color=blue, key=0, style=bold];
m55_59 -> m55_60  [key=0, style=solid];
m55_130 -> m55_131  [key=0, style=solid];
m55_131 -> m55_132  [key=0, style=solid];
m55_131 -> m55_134  [key=2, style=dotted];
m55_132 -> m55_133  [key=0, style=solid];
m55_132 -> m55_51  [key=2, style=dotted];
m55_133 -> m55_130  [color=blue, key=0, style=bold];
m55_29 -> m55_30  [key=0, style=solid];
m55_29 -> m55_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m55_29 -> m55_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m55_29 -> m55_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString InlineMetric", style=bold];
m55_23 -> m55_24  [key=0, style=solid];
m55_23 -> m55_25  [key=2, style=dotted];
m55_23 -> m55_26  [color=red, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m55_23 -> m55_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString BlockMetric", style=bold];
m55_24 -> m55_22  [color=blue, key=0, style=bold];
m55_24 -> m55_25  [key=0, style=solid];
m55_24 -> m55_26  [color=red, key=0, style=solid];
m55_25 -> m55_27  [key=0, style=solid];
m55_25 -> m55_5  [key=2, style=dotted];
m55_25 -> m55_6  [key=2, style=dotted];
m55_35 -> m55_36  [key=0, style=solid];
m55_35 -> m55_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pager", style=dashed];
m55_35 -> m55_38  [color=red, key=1, label="Hangfire.Dashboard.Pager", style=dashed];
m55_35 -> m55_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString Paginator", style=bold];
m55_36 -> m55_37  [color=green, key=0, style=solid];
m55_36 -> m55_38  [color=red, key=0, style=solid];
m55_37 -> m55_39  [key=0, style=solid];
m55_37 -> m55_5  [key=2, style=dotted];
m55_37 -> m55_6  [key=2, style=dotted];
m55_37 -> m55_38  [color=green, key=0, style=solid];
m55_37 -> m55_43  [color=green, key=2, style=dotted];
m55_38 -> m55_39  [color=green, key=0, style=solid];
m55_38 -> m55_40  [color=red, key=2, style=dotted];
m55_38 -> m55_13  [color=red, key=2, style=dotted];
m55_38 -> m55_7  [color=red, key=3, label="Local variable int i", style=bold];
m55_38 -> m55_22  [color=green, key=2, style=dotted];
m55_39 -> m55_35  [color=blue, key=0, style=bold];
m55_39 -> m55_40  [color=green, key=0, style=solid];
m55_39 -> m55_30  [color=green, key=2, style=dotted];
m55_73 -> m55_74  [key=0, style=solid];
m55_73 -> m55_35  [key=2, style=dotted];
m55_40 -> m55_41  [color=green, key=0, style=solid];
m55_40 -> m55_44  [color=green, key=2, style=dotted];
m55_41 -> m55_26  [key=2, style=dotted];
m55_41 -> m55_42  [key=0, style=solid];
m55_41 -> m55_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pager", style=dashed];
m55_41 -> m55_44  [color=red, key=1, label="Hangfire.Dashboard.Pager", style=dashed];
m55_41 -> m55_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString PerPageSelector", style=bold];
m55_42 -> m55_36  [color=blue, key=0, style=bold];
m55_42 -> m55_43  [key=0, style=solid];
m55_42 -> m55_44  [color=red, key=0, style=solid];
m55_7 -> m55_8  [key=0, style=solid];
m55_7 -> m55_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m55_7 -> m55_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_7 -> m55_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString Breadcrumbs", style=bold];
m55_7 -> m55_7  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m55_8 -> m55_9  [key=0, style=solid];
m55_8 -> m55_10  [key=0, style=solid];
m55_9 -> m55_11  [key=0, style=solid];
m55_9 -> m55_5  [key=2, style=dotted];
m55_9 -> m55_6  [key=2, style=dotted];
m55_10 -> m55_11  [key=0, style=solid];
m55_10 -> m55_12  [key=2, style=dotted];
m55_10 -> m55_13  [key=2, style=dotted];
m55_10 -> m55_1  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan interval", style=bold];
m55_10 -> m55_21  [color=red, key=3, label="method methodReturn string In", style=bold];
m55_11 -> m55_7  [color=blue, key=0, style=bold];
m55_74 -> m55_44  [key=2, style=dotted];
m55_74 -> m55_75  [key=0, style=solid];
m55_122 -> m55_123  [key=0, style=solid];
m55_123 -> m55_124  [key=0, style=solid];
m55_123 -> m55_125  [key=2, style=dotted];
m55_123 -> m55_126  [key=2, style=dotted];
m55_123 -> m55_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m55_124 -> m55_122  [color=blue, key=0, style=bold];
m55_0 -> m55_1  [key=0, style=solid];
m55_0 -> m55_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m55_0 -> m55_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m55_1 -> m55_2  [key=0, style=solid];
m55_1 -> m55_5  [key=2, style=dotted];
m55_1 -> m55_3  [key=0, style=solid];
m55_1 -> m55_10  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m55_3 -> m55_4  [key=0, style=solid];
m55_3 -> m55_8  [key=2, style=dotted];
m55_2 -> m55_3  [key=0, style=solid];
m55_2 -> m55_6  [key=2, style=dotted];
m55_2 -> m55_7  [key=2, style=dotted];
m55_2 -> m55_4  [key=0, style=solid];
m55_2 -> m55_5  [key=2, style=dotted];
m55_4 -> m55_0  [color=blue, key=0, style=bold];
m55_17 -> m55_14  [color=blue, key=0, style=bold];
m55_14 -> m55_15  [color=green, key=0, style=solid];
m55_14 -> m55_13  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobsSidebar", style=bold];
m55_15 -> m55_16  [color=green, key=0, style=solid];
m55_15 -> m55_17  [color=red, key=2, style=dotted];
m55_15 -> m55_13  [color=red, key=2, style=dotted];
m55_16 -> m55_14  [color=blue, key=0, style=bold];
m55_16 -> m55_17  [key=0, style=solid];
m55_16 -> m55_0  [key=2, style=dotted];
m55_143 -> m55_144  [key=0, style=solid];
m55_144 -> m55_145  [key=0, style=solid];
m55_144 -> m55_51  [key=2, style=dotted];
m55_144 -> m55_146  [key=2, style=dotted];
m55_145 -> m55_143  [color=blue, key=0, style=bold];
m55_82 -> m55_147  [key=0, style=solid];
m55_82 -> m55_62  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m55_147 -> m55_148  [key=0, style=solid];
m55_147 -> m55_149  [key=2, style=dotted];
m55_148 -> m55_82  [color=blue, key=0, style=bold];
m55_53 -> m55_54  [key=0, style=solid];
m55_53 -> m55_58  [key=2, style=dotted];
m55_54 -> m55_55  [key=0, style=solid];
m55_54 -> m55_51  [key=2, style=dotted];
m55_54 -> m55_44  [key=2, style=dotted];
m55_55 -> m55_53  [color=blue, key=0, style=bold];
m55_55 -> m55_26  [key=2, style=dotted];
m55_55 -> m55_56  [key=0, style=solid];
m55_26 -> m55_27  [color=green, key=0, style=solid];
m55_26 -> m55_28  [color=red, key=2, style=dotted];
m55_26 -> m55_13  [color=red, key=2, style=dotted];
m55_27 -> m55_23  [color=blue, key=0, style=bold];
m55_27 -> m55_28  [color=green, key=0, style=solid];
m55_27 -> m55_29  [color=green, key=2, style=dotted];
m55_87 -> m55_88  [key=0, style=solid];
m55_87 -> m55_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString MomentTitle", style=bold];
m55_88 -> m55_89  [key=0, style=solid];
m55_88 -> m55_86  [key=2, style=dotted];
m55_88 -> m55_53  [key=2, style=dotted];
m55_89 -> m55_87  [color=blue, key=0, style=bold];
m55_61 -> m55_22  [key=2, style=dotted];
m55_61 -> m55_62  [key=0, style=solid];
m55_28 -> m55_26  [color=blue, key=0, style=bold];
m55_135 -> m55_136  [key=0, style=solid];
m55_135 -> m55_137  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_135 -> m55_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_136 -> m55_137  [key=0, style=solid];
m55_136 -> m55_140  [key=2, style=dotted];
m55_137 -> m55_138  [key=0, style=solid];
m55_137 -> m55_141  [key=2, style=dotted];
m55_137 -> m55_142  [key=2, style=dotted];
m55_138 -> m55_139  [key=0, style=solid];
m55_138 -> m55_51  [key=2, style=dotted];
m55_139 -> m55_135  [color=blue, key=0, style=bold];
m55_62 -> m55_63  [key=0, style=solid];
m55_62 -> m55_65  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m55_62 -> m55_79  [color=darkorchid, key=3, label="Parameter variable Hangfire.Common.Job job", style=bold];
m55_62 -> m55_30  [key=2, style=dotted];
m55_63 -> m55_64  [key=0, style=solid];
m55_63 -> m55_65  [key=0, style=solid];
m55_63 -> m55_67  [key=2, style=dotted];
m55_65 -> m55_66  [key=0, style=solid];
m55_65 -> m55_67  [key=2, style=dotted];
m55_65 -> m55_26  [key=2, style=dotted];
m55_64 -> m55_66  [key=0, style=solid];
m55_64 -> m55_44  [key=2, style=dotted];
m55_64 -> m55_65  [key=0, style=solid];
m55_66 -> m55_62  [color=blue, key=0, style=bold];
m55_66 -> m55_59  [color=blue, key=0, style=bold];
m55_90 -> m55_91  [key=0, style=solid];
m55_90 -> m55_94  [color=darkseagreen4, key=1, label=bool, style=dashed];
m55_90 -> m55_95  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_90 -> m55_96  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_91 -> m55_92  [key=0, style=solid];
m55_91 -> m55_93  [key=0, style=solid];
m55_94 -> m55_95  [key=0, style=solid];
m55_94 -> m55_96  [key=0, style=solid];
m55_95 -> m55_96  [key=0, style=solid];
m55_95 -> m55_117  [key=2, style=dotted];
m55_96 -> m55_97  [key=0, style=solid];
m55_96 -> m55_118  [key=2, style=dotted];
m55_96 -> m55_96  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_98  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_99  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_100  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_101  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_102  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_103  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_104  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_105  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_106  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_107  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_109  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_96 -> m55_110  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m55_92 -> m55_115  [key=0, style=solid];
m55_93 -> m55_94  [key=0, style=solid];
m55_93 -> m55_116  [key=2, style=dotted];
m55_93 -> m55_95  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_98  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_100  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_102  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_105  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_107  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_108  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_110  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_111  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_112  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_113  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_93 -> m55_114  [color=darkseagreen4, key=1, label=builder, style=dashed];
m55_98 -> m55_99  [key=0, style=solid];
m55_98 -> m55_117  [key=2, style=dotted];
m55_100 -> m55_101  [key=0, style=solid];
m55_100 -> m55_117  [key=2, style=dotted];
m55_102 -> m55_103  [key=0, style=solid];
m55_102 -> m55_117  [key=2, style=dotted];
m55_105 -> m55_106  [key=0, style=solid];
m55_105 -> m55_119  [key=2, style=dotted];
m55_107 -> m55_108  [key=0, style=solid];
m55_107 -> m55_117  [key=2, style=dotted];
m55_108 -> m55_111  [key=0, style=solid];
m55_108 -> m55_117  [key=2, style=dotted];
m55_110 -> m55_111  [key=0, style=solid];
m55_110 -> m55_117  [key=2, style=dotted];
m55_111 -> m55_112  [key=0, style=solid];
m55_111 -> m55_113  [key=0, style=solid];
m55_112 -> m55_113  [key=0, style=solid];
m55_112 -> m55_117  [key=2, style=dotted];
m55_113 -> m55_114  [key=0, style=solid];
m55_113 -> m55_120  [key=2, style=dotted];
m55_114 -> m55_115  [key=0, style=solid];
m55_114 -> m55_121  [key=2, style=dotted];
m55_97 -> m55_98  [key=0, style=solid];
m55_97 -> m55_99  [key=0, style=solid];
m55_99 -> m55_100  [key=0, style=solid];
m55_99 -> m55_101  [key=0, style=solid];
m55_101 -> m55_102  [key=0, style=solid];
m55_101 -> m55_103  [key=0, style=solid];
m55_103 -> m55_104  [key=0, style=solid];
m55_103 -> m55_111  [key=0, style=solid];
m55_104 -> m55_105  [key=0, style=solid];
m55_104 -> m55_109  [key=0, style=solid];
m55_106 -> m55_107  [key=0, style=solid];
m55_106 -> m55_108  [key=0, style=solid];
m55_109 -> m55_110  [key=0, style=solid];
m55_109 -> m55_111  [key=0, style=solid];
m55_115 -> m55_90  [color=blue, key=0, style=bold];
m55_60 -> m55_43  [key=2, style=dotted];
m55_60 -> m55_61  [key=0, style=solid];
m55_68 -> m55_69  [key=0, style=solid];
m55_68 -> m55_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_68 -> m55_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString StateLabel", style=bold];
m55_75 -> m55_26  [key=2, style=dotted];
m55_75 -> m55_76  [key=0, style=solid];
m55_75 -> m55_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobIdLink", style=bold];
m55_69 -> m55_43  [key=2, style=dotted];
m55_69 -> m55_70  [key=0, style=solid];
m55_69 -> m55_71  [key=0, style=solid];
m55_69 -> m55_73  [key=2, style=dotted];
m55_70 -> m55_22  [key=2, style=dotted];
m55_70 -> m55_71  [key=0, style=solid];
m55_70 -> m55_72  [key=0, style=solid];
m55_70 -> m55_53  [key=2, style=dotted];
m55_71 -> m55_30  [key=2, style=dotted];
m55_71 -> m55_72  [key=0, style=solid];
m55_71 -> m55_74  [key=2, style=dotted];
m55_71 -> m55_53  [key=2, style=dotted];
m55_72 -> m55_73  [key=0, style=solid];
m55_72 -> m55_67  [key=2, style=dotted];
m55_72 -> m55_68  [color=blue, key=0, style=bold];
m55_76 -> m55_68  [color=blue, key=0, style=bold];
m55_76 -> m55_77  [key=0, style=solid];
m55_76 -> m55_78  [key=2, style=dotted];
m55_76 -> m55_56  [key=2, style=dotted];
m55_76 -> m55_53  [key=2, style=dotted];
m55_30 -> m55_31  [key=0, style=solid];
m55_30 -> m55_32  [key=0, style=solid];
m55_31 -> m55_33  [key=0, style=solid];
m55_31 -> m55_5  [key=2, style=dotted];
m55_31 -> m55_6  [key=2, style=dotted];
m55_31 -> m55_32  [key=0, style=solid];
m55_31 -> m55_34  [key=2, style=dotted];
m55_32 -> m55_33  [key=0, style=solid];
m55_32 -> m55_34  [key=2, style=dotted];
m55_32 -> m55_13  [key=2, style=dotted];
m55_32 -> m55_35  [key=2, style=dotted];
m55_33 -> m55_29  [color=blue, key=0, style=bold];
m55_33 -> m55_30  [color=blue, key=0, style=bold];
m55_83 -> m55_84  [key=0, style=solid];
m55_83 -> m55_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString RelativeTime", style=bold];
m55_84 -> m55_85  [key=0, style=solid];
m55_84 -> m55_86  [key=2, style=dotted];
m55_84 -> m55_53  [key=2, style=dotted];
m55_85 -> m55_83  [color=blue, key=0, style=bold];
m55_51 -> m55_52  [key=0, style=solid];
m55_51 -> m55_58  [key=2, style=dotted];
m55_127 -> m55_128  [key=0, style=solid];
m55_128 -> m55_129  [key=0, style=solid];
m55_128 -> m55_128  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m55_129 -> m55_127  [color=blue, key=0, style=bold];
m55_43 -> m55_45  [key=0, style=solid];
m55_43 -> m55_5  [key=2, style=dotted];
m55_43 -> m55_6  [key=2, style=dotted];
m55_45 -> m55_46  [key=0, style=solid];
m55_45 -> m55_41  [color=blue, key=0, style=bold];
m55_46 -> m55_43  [key=2, style=dotted];
m55_46 -> m55_47  [key=0, style=solid];
m55_47 -> m55_22  [key=2, style=dotted];
m55_47 -> m55_48  [color=red, key=0, style=solid];
m55_47 -> m55_50  [color=red, key=2, style=dotted];
m55_48 -> m55_30  [key=2, style=dotted];
m55_48 -> m55_49  [key=0, style=solid];
m55_48 -> m55_51  [key=2, style=dotted];
m55_48 -> m55_52  [key=2, style=dotted];
m55_49 -> m55_54  [color=darkseagreen4, key=1, label=table1, style=dashed];
m55_49 -> m55_50  [key=0, style=solid];
m55_49 -> m55_57  [key=2, style=dotted];
m55_49 -> m55_51  [color=darkseagreen4, key=1, label=table1, style=dashed];
m55_49 -> m55_52  [color=darkseagreen4, key=1, label=table1, style=dashed];
m55_49 -> m55_53  [color=darkseagreen4, key=1, label=table1, style=dashed];
m55_49 -> m55_13  [color=blue, key=0, style=bold];
m55_50 -> m55_51  [key=0, style=solid];
m55_50 -> m55_58  [key=2, style=dotted];
m55_44 -> m55_45  [color=red, key=0, style=solid];
m55_44 -> m55_46  [color=red, key=2, style=dotted];
m55_44 -> m55_13  [color=red, key=2, style=dotted];
m55_77 -> m55_75  [color=blue, key=0, style=bold];
m55_77 -> m55_38  [color=green, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_39  [color=green, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_41  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_48  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_55  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_61  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_62  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_65  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_77 -> m55_71  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m55_79 -> m55_80  [key=0, style=solid];
m55_79 -> m55_53  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobNameLink", style=bold];
m55_80 -> m55_81  [key=0, style=solid];
m55_80 -> m55_78  [key=2, style=dotted];
m55_80 -> m55_62  [key=2, style=dotted];
m55_80 -> m55_82  [key=2, style=dotted];
m55_80 -> m55_53  [key=2, style=dotted];
m55_81 -> m55_79  [color=blue, key=0, style=bold];
m55_13 -> m55_47  [color=red, key=0, style=solid];
m55_13 -> m55_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m55_150 -> m55_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_15  [color=red, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_21  [color=red, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_26  [color=red, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_38  [color=red, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_44  [color=red, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_47  [color=red, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_76  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_84  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_88  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m55_150 -> m55_131  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m56_62 -> m56_63  [color=red, key=0, style=solid];
m56_62 -> m56_64  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_63 -> m56_64  [color=red, key=0, style=solid];
m56_63 -> m56_66  [color=red, key=2, style=dotted];
m56_63 -> m56_67  [color=red, key=2, style=dotted];
m56_64 -> m56_65  [color=red, key=0, style=solid];
m56_64 -> m56_60  [color=red, key=2, style=dotted];
m56_64 -> m56_68  [color=red, key=2, style=dotted];
m56_65 -> m56_62  [color=blue, key=0, style=bold];
m56_10 -> m56_11  [key=0, style=solid];
m56_10 -> m56_21  [key=2, style=dotted];
m56_9 -> m56_10  [key=0, style=solid];
m56_9 -> m56_21  [key=2, style=dotted];
m56_39 -> m56_40  [key=0, style=solid];
m56_39 -> m56_55  [key=2, style=dotted];
m56_91 -> m56_92  [color=red, key=0, style=solid];
m56_92 -> m56_93  [color=red, key=0, style=solid];
m56_92 -> m56_60  [color=red, key=2, style=dotted];
m56_92 -> m56_94  [color=red, key=2, style=dotted];
m56_92 -> m56_95  [color=red, key=2, style=dotted];
m56_93 -> m56_91  [color=blue, key=0, style=bold];
m56_29 -> m56_27  [color=blue, key=0, style=bold];
m56_24 -> m56_25  [key=0, style=solid];
m56_30 -> m56_31  [key=0, style=solid];
m56_31 -> m56_32  [key=0, style=solid];
m56_31 -> m56_33  [key=2, style=dotted];
m56_31 -> m56_23  [key=2, style=dotted];
m56_32 -> m56_30  [color=blue, key=0, style=bold];
m56_25 -> m56_26  [key=0, style=solid];
m56_25 -> m56_20  [color=blue, key=0, style=bold];
m56_26 -> m56_27  [key=0, style=solid];
m56_26 -> m56_19  [key=2, style=dotted];
m56_26 -> m56_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_27 -> m56_28  [key=0, style=solid];
m56_27 -> m56_29  [key=2, style=dotted];
m56_28 -> m56_25  [color=blue, key=0, style=bold];
m56_28 -> m56_29  [key=0, style=solid];
m56_28 -> m56_26  [key=2, style=dotted];
m56_15 -> m56_41  [key=0, style=solid];
m56_15 -> m56_16  [key=0, style=solid];
m56_15 -> m56_21  [key=2, style=dotted];
m56_41 -> m56_15  [color=blue, key=0, style=bold];
m56_41 -> m56_42  [key=0, style=solid];
m56_41 -> m56_45  [key=0, style=solid];
m56_41 -> m56_26  [key=2, style=dotted];
m56_19 -> m56_0  [color=blue, key=0, style=bold];
m56_33 -> m56_34  [key=0, style=solid];
m56_20 -> m56_22  [key=0, style=solid];
m56_20 -> m56_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_20 -> m56_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_20 -> m56_37  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IDictionary<string, string>, IHtmlString> renderer", style=bold];
m56_20 -> m56_62  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IDictionary<string, string>, IHtmlString> renderer", style=bold];
m56_20 -> m56_69  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IDictionary<string, string>, IHtmlString> renderer", style=bold];
m56_20 -> m56_87  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IDictionary<string, string>, IHtmlString> renderer", style=bold];
m56_20 -> m56_91  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IDictionary<string, string>, IHtmlString> renderer", style=bold];
m56_20 -> m56_34  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IDictionary<string, string>, IHtmlString> renderer", style=bold];
m56_20 -> m56_21  [key=0, style=solid];
m56_22 -> m56_23  [key=0, style=solid];
m56_22 -> m56_24  [key=0, style=solid];
m56_22 -> m56_26  [key=2, style=dotted];
m56_22 -> m56_20  [color=blue, key=0, style=bold];
m56_23 -> m56_25  [key=0, style=solid];
m56_23 -> m56_21  [key=2, style=dotted];
m56_40 -> m56_41  [key=0, style=solid];
m56_40 -> m56_50  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m56_40 -> m56_40  [color=darkorchid, key=3, label="Local variable bool itemsAdded", style=bold];
m56_87 -> m56_88  [color=red, key=0, style=solid];
m56_88 -> m56_89  [color=red, key=0, style=solid];
m56_88 -> m56_60  [color=red, key=2, style=dotted];
m56_88 -> m56_90  [color=red, key=2, style=dotted];
m56_89 -> m56_87  [color=blue, key=0, style=bold];
m56_69 -> m56_70  [key=0, style=solid];
m56_69 -> m56_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_69 -> m56_74  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_69 -> m56_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_69 -> m56_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_69 -> m56_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_69 -> m56_82  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_70 -> m56_71  [key=0, style=solid];
m56_70 -> m56_54  [key=2, style=dotted];
m56_70 -> m56_78  [color=darkseagreen4, key=1, label=builder, style=dashed];
m56_70 -> m56_79  [color=darkseagreen4, key=1, label=builder, style=dashed];
m56_70 -> m56_81  [color=darkseagreen4, key=1, label=builder, style=dashed];
m56_70 -> m56_82  [color=darkseagreen4, key=1, label=builder, style=dashed];
m56_70 -> m56_83  [color=darkseagreen4, key=1, label=builder, style=dashed];
m56_70 -> m56_84  [color=red, key=1, label=builder, style=dashed];
m56_73 -> m56_74  [key=0, style=solid];
m56_73 -> m56_75  [key=0, style=solid];
m56_73 -> m56_26  [key=2, style=dotted];
m56_74 -> m56_77  [key=0, style=solid];
m56_74 -> m56_79  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m56_75 -> m56_76  [key=0, style=solid];
m56_75 -> m56_77  [key=0, style=solid];
m56_75 -> m56_26  [key=2, style=dotted];
m56_76 -> m56_77  [key=0, style=solid];
m56_76 -> m56_79  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m56_80 -> m56_81  [key=0, style=solid];
m56_80 -> m56_83  [key=0, style=solid];
m56_80 -> m56_26  [key=2, style=dotted];
m56_82 -> m56_83  [key=0, style=solid];
m56_82 -> m56_59  [key=2, style=dotted];
m56_71 -> m56_72  [key=0, style=solid];
m56_71 -> m56_55  [key=2, style=dotted];
m56_78 -> m56_79  [key=0, style=solid];
m56_78 -> m56_55  [key=2, style=dotted];
m56_79 -> m56_80  [key=0, style=solid];
m56_79 -> m56_86  [key=2, style=dotted];
m56_79 -> m56_59  [key=2, style=dotted];
m56_81 -> m56_82  [key=0, style=solid];
m56_81 -> m56_55  [key=2, style=dotted];
m56_83 -> m56_84  [color=red, key=0, style=solid];
m56_83 -> m56_55  [key=2, style=dotted];
m56_84 -> m56_85  [color=red, key=0, style=solid];
m56_84 -> m56_60  [color=red, key=2, style=dotted];
m56_84 -> m56_61  [color=red, key=2, style=dotted];
m56_72 -> m56_73  [key=0, style=solid];
m56_72 -> m56_77  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m56_72 -> m56_79  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m56_72 -> m56_35  [color=darkorchid, key=3, label="Local variable string serverId", style=bold];
m56_77 -> m56_78  [key=0, style=solid];
m56_77 -> m56_80  [key=0, style=solid];
m56_85 -> m56_69  [color=blue, key=0, style=bold];
m56_34 -> m56_35  [key=0, style=solid];
m56_34 -> m56_24  [key=2, style=dotted];
m56_34 -> m56_36  [color=darkseagreen4, key=1, label=exception, style=dashed];
m56_35 -> m56_36  [key=0, style=solid];
m56_35 -> m56_23  [key=2, style=dotted];
m56_35 -> m56_37  [color=darkseagreen4, key=1, label=context, style=dashed];
m56_36 -> m56_34  [color=blue, key=0, style=bold];
m56_36 -> m56_37  [key=0, style=solid];
m56_36 -> m56_39  [key=2, style=dotted];
m56_37 -> m56_38  [key=0, style=solid];
m56_37 -> m56_40  [key=2, style=dotted];
m56_37 -> m56_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_37 -> m56_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_37 -> m56_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_37 -> m56_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_37 -> m56_35  [color=darkorchid, key=3, label="method methodReturn IHtmlString SucceededRenderer", style=bold];
m56_38 -> m56_33  [color=blue, key=0, style=bold];
m56_38 -> m56_39  [key=0, style=solid];
m56_38 -> m56_54  [key=2, style=dotted];
m56_38 -> m56_43  [color=darkseagreen4, key=1, label=builder, style=dashed];
m56_38 -> m56_47  [color=darkseagreen4, key=1, label=builder, style=dashed];
m56_38 -> m56_49  [color=darkseagreen4, key=1, label=builder, style=dashed];
m56_38 -> m56_52  [color=red, key=1, label=builder, style=dashed];
m56_0 -> m56_1  [key=0, style=solid];
m56_5 -> m56_6  [color=green, key=0, style=solid];
m56_5 -> m56_11  [color=green, key=2, style=dotted];
m56_5 -> m56_20  [key=2, style=dotted];
m56_1 -> m56_5  [color=green, key=1, label=connection, style=dashed];
m56_1 -> m56_2  [key=0, style=solid];
m56_1 -> m56_7  [key=2, style=dotted];
m56_1 -> m56_20  [key=2, style=dotted];
m56_2 -> m56_5  [color=green, key=1, label=job, style=dashed];
m56_2 -> m56_3  [key=0, style=solid];
m56_2 -> m56_8  [key=2, style=dotted];
m56_2 -> m56_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_2 -> m56_20  [key=2, style=dotted];
m56_3 -> m56_5  [color=green, key=1, label=state, style=dashed];
m56_3 -> m56_4  [key=0, style=solid];
m56_3 -> m56_9  [key=2, style=dotted];
m56_3 -> m56_20  [key=2, style=dotted];
m56_4 -> m56_5  [color=green, key=0, style=solid];
m56_4 -> m56_10  [key=2, style=dotted];
m56_4 -> m56_20  [key=2, style=dotted];
m56_6 -> m56_0  [color=blue, key=0, style=bold];
m56_6 -> m56_7  [key=0, style=solid];
m56_6 -> m56_20  [key=2, style=dotted];
m56_12 -> m56_13  [key=0, style=solid];
m56_12 -> m56_21  [key=2, style=dotted];
m56_14 -> m56_12  [color=blue, key=0, style=bold];
m56_14 -> m56_15  [key=0, style=solid];
m56_14 -> m56_21  [key=2, style=dotted];
m56_13 -> m56_14  [key=0, style=solid];
m56_13 -> m56_15  [key=2, style=dotted];
m56_13 -> m56_21  [key=2, style=dotted];
m56_21 -> m56_23  [key=2, style=dotted];
m56_21 -> m56_22  [key=0, style=solid];
m56_21 -> m56_24  [key=2, style=dotted];
m56_11 -> m56_12  [key=0, style=solid];
m56_11 -> m56_21  [key=2, style=dotted];
m56_16 -> m56_17  [key=0, style=solid];
m56_16 -> m56_21  [key=2, style=dotted];
m56_17 -> m56_19  [key=2, style=dotted];
m56_17 -> m56_18  [key=0, style=solid];
m56_17 -> m56_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_17 -> m56_21  [key=2, style=dotted];
m56_18 -> m56_16  [color=blue, key=0, style=bold];
m56_18 -> m56_19  [key=0, style=solid];
m56_18 -> m56_21  [key=2, style=dotted];
m56_42 -> m56_43  [key=0, style=solid];
m56_42 -> m56_56  [key=2, style=dotted];
m56_42 -> m56_57  [key=2, style=dotted];
m56_42 -> m56_5  [color=green, key=1, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", style=dashed];
m56_42 -> m56_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", style=dashed];
m56_42 -> m56_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", style=dashed];
m56_42 -> m56_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", style=dashed];
m56_45 -> m56_46  [key=0, style=solid];
m56_45 -> m56_49  [key=0, style=solid];
m56_45 -> m56_26  [key=2, style=dotted];
m56_46 -> m56_47  [key=0, style=solid];
m56_46 -> m56_56  [key=2, style=dotted];
m56_46 -> m56_57  [key=2, style=dotted];
m56_43 -> m56_44  [key=0, style=solid];
m56_43 -> m56_58  [key=2, style=dotted];
m56_43 -> m56_59  [key=2, style=dotted];
m56_47 -> m56_48  [key=0, style=solid];
m56_47 -> m56_58  [key=2, style=dotted];
m56_47 -> m56_59  [key=2, style=dotted];
m56_49 -> m56_50  [key=0, style=solid];
m56_49 -> m56_55  [key=2, style=dotted];
m56_52 -> m56_53  [color=red, key=0, style=solid];
m56_52 -> m56_60  [color=red, key=2, style=dotted];
m56_52 -> m56_61  [color=red, key=2, style=dotted];
m56_50 -> m56_51  [key=0, style=solid];
m56_50 -> m56_52  [color=red, key=0, style=solid];
m56_44 -> m56_45  [key=0, style=solid];
m56_44 -> m56_50  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m56_48 -> m56_49  [key=0, style=solid];
m56_48 -> m56_50  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m56_51 -> m56_53  [key=0, style=solid];
m56_53 -> m56_37  [color=blue, key=0, style=bold];
m56_8 -> m56_9  [key=0, style=solid];
m56_8 -> m56_21  [key=2, style=dotted];
m56_7 -> m56_8  [key=0, style=solid];
m56_7 -> m56_21  [key=2, style=dotted];
m57_54 -> m57_11  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_54 -> m57_84  [key=0, style=solid];
m57_54 -> m57_33  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_84 -> m57_85  [key=0, style=solid];
m57_84 -> m57_86  [key=2, style=dotted];
m57_85 -> m57_54  [color=blue, key=0, style=bold];
m57_71 -> m57_80  [color=green, key=0, style=solid];
m57_71 -> m57_69  [color=darkorchid, key=3, label="Parameter variable string class", style=bold];
m57_71 -> m57_72  [color=darkorchid, key=3, label="Parameter variable string class", style=bold];
m57_71 -> m57_75  [color=darkorchid, key=3, label="Parameter variable string class", style=bold];
m57_71 -> m57_78  [color=darkorchid, key=3, label="Parameter variable string class", style=bold];
m57_71 -> m57_52  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_71 -> m57_58  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_71 -> m57_74  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_71 -> m57_77  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_80 -> m57_81  [color=green, key=0, style=solid];
m57_80 -> m57_82  [color=green, key=2, style=dotted];
m57_80 -> m57_83  [color=green, key=2, style=dotted];
m57_81 -> m57_71  [color=blue, key=0, style=bold];
m57_14 -> m57_15  [key=0, style=solid];
m57_14 -> m57_55  [key=2, style=dotted];
m57_15 -> m57_14  [color=blue, key=0, style=bold];
m57_15 -> m57_17  [key=0, style=solid];
m57_15 -> m57_54  [key=2, style=dotted];
m57_15 -> m57_53  [key=2, style=dotted];
m57_9 -> m57_10  [key=0, style=solid];
m57_9 -> m57_55  [key=2, style=dotted];
m57_7 -> m57_8  [key=0, style=solid];
m57_7 -> m57_53  [key=2, style=dotted];
m57_77 -> m57_71  [color=darkorchid, key=3, label="method methodReturn string WrapComment", style=bold];
m57_77 -> m57_78  [key=0, style=solid];
m57_78 -> m57_71  [key=2, style=dotted];
m57_78 -> m57_79  [key=0, style=solid];
m57_79 -> m57_77  [color=blue, key=0, style=bold];
m57_58 -> m57_71  [color=darkorchid, key=3, label="method methodReturn string WrapType", style=bold];
m57_58 -> m57_72  [key=0, style=solid];
m57_58 -> m57_54  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_72 -> m57_71  [key=2, style=dotted];
m57_72 -> m57_73  [key=0, style=solid];
m57_73 -> m57_58  [color=blue, key=0, style=bold];
m57_118 -> m57_62  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m57_118 -> m57_118  [color=darkorchid, key=3, label="method methodReturn bool IsNumericType", style=bold];
m57_118 -> m57_119  [key=0, style=solid];
m57_118 -> m57_121  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m57_118 -> m57_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m57_118 -> m57_136  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m57_118 -> m57_133  [color=darkorchid, key=3, label="method methodReturn bool IsNumericType", style=bold];
m57_136 -> m57_118  [key=2, style=dotted];
m57_136 -> m57_139  [key=0, style=solid];
m57_136 -> m57_142  [key=2, style=dotted];
m57_119 -> m57_120  [key=0, style=solid];
m57_119 -> m57_121  [key=0, style=solid];
m57_121 -> m57_122  [key=0, style=solid];
m57_121 -> m57_134  [key=0, style=solid];
m57_121 -> m57_140  [key=2, style=dotted];
m57_135 -> m57_136  [key=0, style=solid];
m57_135 -> m57_141  [key=2, style=dotted];
m57_135 -> m57_137  [key=0, style=solid];
m57_133 -> m57_139  [key=0, style=solid];
m57_120 -> m57_139  [key=0, style=solid];
m57_137 -> m57_139  [key=0, style=solid];
m57_138 -> m57_139  [key=0, style=solid];
m57_122 -> m57_123  [key=0, style=solid];
m57_134 -> m57_135  [key=0, style=solid];
m57_132 -> m57_133  [key=0, style=solid];
m57_123 -> m57_124  [key=0, style=solid];
m57_131 -> m57_132  [key=0, style=solid];
m57_124 -> m57_125  [key=0, style=solid];
m57_130 -> m57_131  [key=0, style=solid];
m57_125 -> m57_126  [key=0, style=solid];
m57_129 -> m57_130  [key=0, style=solid];
m57_126 -> m57_127  [key=0, style=solid];
m57_128 -> m57_129  [key=0, style=solid];
m57_127 -> m57_128  [key=0, style=solid];
m57_139 -> m57_118  [color=blue, key=0, style=bold];
m57_87 -> m57_88  [key=0, style=solid];
m57_88 -> m57_89  [key=0, style=solid];
m57_89 -> m57_90  [key=0, style=solid];
m57_90 -> m57_87  [color=blue, key=0, style=bold];
m57_52 -> m57_71  [color=darkorchid, key=3, label="method methodReturn string WrapKeyword", style=bold];
m57_52 -> m57_4  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_52 -> m57_69  [key=0, style=solid];
m57_52 -> m57_92  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_69 -> m57_71  [key=2, style=dotted];
m57_69 -> m57_70  [key=0, style=solid];
m57_70 -> m57_52  [color=blue, key=0, style=bold];
m57_74 -> m57_71  [color=darkorchid, key=3, label="method methodReturn string WrapString", style=bold];
m57_74 -> m57_75  [key=0, style=solid];
m57_75 -> m57_71  [key=2, style=dotted];
m57_75 -> m57_76  [key=0, style=solid];
m57_76 -> m57_74  [color=blue, key=0, style=bold];
m57_10 -> m57_11  [color=red, key=0, style=solid];
m57_10 -> m57_16  [key=0, style=solid];
m57_11 -> m57_12  [color=red, key=0, style=solid];
m57_11 -> m57_13  [color=red, key=2, style=dotted];
m57_11 -> m57_56  [key=2, style=dotted];
m57_11 -> m57_57  [key=2, style=dotted];
m57_11 -> m57_15  [color=darkseagreen4, key=1, label=serviceName, style=dashed];
m57_12 -> m57_10  [color=blue, key=0, style=bold];
m57_12 -> m57_13  [key=0, style=solid];
m57_12 -> m57_58  [key=2, style=dotted];
m57_12 -> m57_53  [key=2, style=dotted];
m57_0 -> m57_1  [color=green, key=0, style=solid];
m57_0 -> m57_6  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_0 -> m57_10  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_0 -> m57_11  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_0 -> m57_12  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_0 -> m57_13  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_0 -> m57_16  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_0 -> m57_18  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_0 -> m57_20  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_0 -> m57_27  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_0 -> m57_28  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m57_1 -> m57_2  [color=green, key=0, style=solid];
m57_1 -> m57_3  [color=green, key=0, style=solid];
m57_1 -> m57_6  [key=2, style=dotted];
m57_2 -> m57_49  [color=green, key=0, style=solid];
m57_2 -> m57_50  [color=green, key=2, style=dotted];
m57_2 -> m57_3  [key=0, style=solid];
m57_2 -> m57_7  [key=2, style=dotted];
m57_3 -> m57_48  [color=green, key=1, label=builder, style=dashed];
m57_3 -> m57_4  [color=red, key=0, style=solid];
m57_3 -> m57_51  [key=2, style=dotted];
m57_3 -> m57_5  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_6  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_7  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_8  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_9  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_12  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_13  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_14  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_15  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_16  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_17  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_18  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_19  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_39  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_40  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_42  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_43  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_45  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_3 -> m57_47  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_48 -> m57_49  [color=green, key=0, style=solid];
m57_48 -> m57_50  [color=green, key=2, style=dotted];
m57_48 -> m57_65  [color=green, key=2, style=dotted];
m57_47 -> m57_48  [color=green, key=0, style=solid];
m57_47 -> m57_53  [key=2, style=dotted];
m57_6 -> m57_7  [key=0, style=solid];
m57_6 -> m57_54  [key=2, style=dotted];
m57_6 -> m57_53  [key=2, style=dotted];
m57_13 -> m57_14  [key=0, style=solid];
m57_13 -> m57_54  [key=2, style=dotted];
m57_13 -> m57_58  [key=2, style=dotted];
m57_13 -> m57_59  [key=2, style=dotted];
m57_16 -> m57_17  [key=0, style=solid];
m57_16 -> m57_54  [key=2, style=dotted];
m57_16 -> m57_58  [key=2, style=dotted];
m57_16 -> m57_53  [key=2, style=dotted];
m57_16 -> m57_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m57_16 -> m57_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m57_16 -> m57_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m57_16 -> m57_4  [color=red, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m57_16 -> m57_11  [color=red, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m57_18 -> m57_19  [key=0, style=solid];
m57_18 -> m57_54  [key=2, style=dotted];
m57_18 -> m57_53  [key=2, style=dotted];
m57_20 -> m57_21  [key=0, style=solid];
m57_20 -> m57_60  [key=2, style=dotted];
m57_20 -> m57_25  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m57_20 -> m57_26  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m57_27 -> m57_28  [key=0, style=solid];
m57_27 -> m57_33  [key=0, style=solid];
m57_28 -> m57_29  [key=0, style=solid];
m57_28 -> m57_30  [color=darkseagreen4, key=1, label=argument, style=dashed];
m57_4 -> m57_5  [color=red, key=0, style=solid];
m57_4 -> m57_52  [key=2, style=dotted];
m57_4 -> m57_53  [key=2, style=dotted];
m57_4 -> m57_9  [color=red, key=2, style=dotted];
m57_5 -> m57_6  [key=0, style=solid];
m57_5 -> m57_53  [key=2, style=dotted];
m57_5 -> m57_0  [color=blue, key=0, style=bold];
m57_8 -> m57_9  [key=0, style=solid];
m57_8 -> m57_55  [key=2, style=dotted];
m57_17 -> m57_18  [key=0, style=solid];
m57_17 -> m57_53  [key=2, style=dotted];
m57_19 -> m57_20  [key=0, style=solid];
m57_19 -> m57_53  [key=2, style=dotted];
m57_39 -> m57_40  [key=0, style=solid];
m57_39 -> m57_55  [key=2, style=dotted];
m57_40 -> m57_43  [key=0, style=solid];
m57_40 -> m57_53  [key=2, style=dotted];
m57_42 -> m57_43  [key=0, style=solid];
m57_42 -> m57_53  [key=2, style=dotted];
m57_43 -> m57_44  [key=0, style=solid];
m57_43 -> m57_53  [key=2, style=dotted];
m57_45 -> m57_46  [key=0, style=solid];
m57_45 -> m57_53  [key=2, style=dotted];
m57_36 -> m57_47  [key=0, style=solid];
m57_36 -> m57_37  [key=0, style=solid];
m57_36 -> m57_22  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m57_21 -> m57_36  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m57_21 -> m57_22  [key=0, style=solid];
m57_21 -> m57_61  [key=2, style=dotted];
m57_21 -> m57_31  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m57_21 -> m57_33  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m57_21 -> m57_37  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m57_21 -> m57_44  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m57_25 -> m57_26  [key=0, style=solid];
m57_25 -> m57_35  [key=0, style=solid];
m57_25 -> m57_22  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m57_26 -> m57_27  [key=0, style=solid];
m57_26 -> m57_29  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m57_26 -> m57_30  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m57_24 -> m57_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_24 -> m57_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_24 -> m57_25  [key=0, style=solid];
m57_24 -> m57_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_24 -> m57_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_33 -> m57_54  [key=2, style=dotted];
m57_33 -> m57_34  [key=0, style=solid];
m57_33 -> m57_64  [key=2, style=dotted];
m57_29 -> m57_30  [key=0, style=solid];
m57_29 -> m57_62  [key=2, style=dotted];
m57_30 -> m57_63  [key=2, style=dotted];
m57_30 -> m57_31  [key=0, style=solid];
m57_30 -> m57_32  [color=darkseagreen4, key=1, label=renderedArgument, style=dashed];
m57_38 -> m57_39  [key=0, style=solid];
m57_38 -> m57_41  [key=0, style=solid];
m57_41 -> m57_42  [key=0, style=solid];
m57_41 -> m57_43  [key=0, style=solid];
m57_37 -> m57_43  [color=darkseagreen4, key=1, label=renderedArgument, style=dashed];
m57_37 -> m57_38  [key=0, style=solid];
m57_44 -> m57_45  [key=0, style=solid];
m57_44 -> m57_46  [key=0, style=solid];
m57_46 -> m57_36  [key=0, style=solid];
m57_46 -> m57_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_35 -> m57_36  [key=0, style=solid];
m57_35 -> m57_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_35 -> m57_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_35 -> m57_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_35 -> m57_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_22 -> m57_38  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m57_22 -> m57_22  [color=darkorchid, key=3, label="Local variable int renderedArgumentsTotalLength", style=bold];
m57_22 -> m57_23  [key=0, style=solid];
m57_22 -> m57_32  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m57_31 -> m57_32  [key=0, style=solid];
m57_31 -> m57_64  [key=2, style=dotted];
m57_34 -> m57_25  [key=0, style=solid];
m57_34 -> m57_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m57_23 -> m57_24  [key=0, style=solid];
m57_23 -> m57_38  [color=darkseagreen4, key=1, label=splitStringMinLength, style=dashed];
m57_23 -> m57_23  [color=darkorchid, key=3, label="Local variable int splitStringMinLength", style=bold];
m57_32 -> m57_38  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m57_32 -> m57_34  [key=0, style=solid];
m57_32 -> m57_32  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m57_49 -> m57_0  [color=blue, key=0, style=bold];
m57_66 -> m57_66  [color=darkorchid, key=3, label="method methodReturn string WrapIdentifier", style=bold];
m57_66 -> m57_67  [key=0, style=solid];
m57_67 -> m57_68  [key=0, style=solid];
m57_68 -> m57_66  [color=blue, key=0, style=bold];
m57_141 -> m57_118  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m57_141 -> m57_143  [key=0, style=solid];
m57_143 -> m57_144  [key=0, style=solid];
m57_143 -> m57_145  [key=2, style=dotted];
m57_144 -> m57_141  [color=blue, key=0, style=bold];
m57_62 -> m57_108  [key=0, style=solid];
m57_62 -> m57_110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m57_62 -> m57_112  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m57_62 -> m57_114  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m57_62 -> m57_116  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m57_108 -> m57_118  [key=2, style=dotted];
m57_108 -> m57_109  [key=0, style=solid];
m57_108 -> m57_110  [key=0, style=solid];
m57_110 -> m57_111  [key=0, style=solid];
m57_110 -> m57_112  [key=0, style=solid];
m57_112 -> m57_113  [key=0, style=solid];
m57_112 -> m57_114  [key=0, style=solid];
m57_114 -> m57_115  [key=0, style=solid];
m57_114 -> m57_116  [key=0, style=solid];
m57_116 -> m57_117  [key=0, style=solid];
m57_116 -> m57_87  [key=2, style=dotted];
m57_109 -> m57_117  [key=0, style=solid];
m57_109 -> m57_87  [key=2, style=dotted];
m57_111 -> m57_117  [key=0, style=solid];
m57_111 -> m57_87  [key=2, style=dotted];
m57_113 -> m57_117  [key=0, style=solid];
m57_113 -> m57_87  [key=2, style=dotted];
m57_115 -> m57_117  [key=0, style=solid];
m57_115 -> m57_87  [key=2, style=dotted];
m57_117 -> m57_62  [color=blue, key=0, style=bold];
m57_63 -> m57_28  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m57_63 -> m57_52  [color=darkorchid, key=3, label="method methodReturn string Render", style=bold];
m57_63 -> m57_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_63 -> m57_91  [key=0, style=solid];
m57_63 -> m57_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_63 -> m57_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_63 -> m57_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_103 -> m57_65  [key=2, style=dotted];
m57_103 -> m57_104  [key=0, style=solid];
m57_95 -> m57_82  [key=2, style=dotted];
m57_95 -> m57_96  [key=0, style=solid];
m57_95 -> m57_105  [key=2, style=dotted];
m57_93 -> m57_51  [key=2, style=dotted];
m57_93 -> m57_103  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_93 -> m57_95  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_93 -> m57_94  [key=0, style=solid];
m57_93 -> m57_97  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_93 -> m57_98  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_93 -> m57_100  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_93 -> m57_102  [color=darkseagreen4, key=1, label=builder, style=dashed];
m57_98 -> m57_53  [key=2, style=dotted];
m57_98 -> m57_54  [key=2, style=dotted];
m57_98 -> m57_99  [key=0, style=solid];
m57_98 -> m57_107  [key=2, style=dotted];
m57_97 -> m57_53  [key=2, style=dotted];
m57_97 -> m57_58  [key=2, style=dotted];
m57_97 -> m57_98  [key=0, style=solid];
m57_97 -> m57_106  [key=2, style=dotted];
m57_97 -> m57_66  [key=2, style=dotted];
m57_100 -> m57_53  [key=2, style=dotted];
m57_100 -> m57_101  [key=0, style=solid];
m57_102 -> m57_53  [key=2, style=dotted];
m57_102 -> m57_103  [key=0, style=solid];
m57_101 -> m57_103  [key=0, style=solid];
m57_101 -> m57_102  [key=0, style=solid];
m57_92 -> m57_52  [key=2, style=dotted];
m57_92 -> m57_104  [key=0, style=solid];
m57_94 -> m57_95  [key=0, style=solid];
m57_94 -> m57_96  [key=0, style=solid];
m57_96 -> m57_98  [key=0, style=solid];
m57_96 -> m57_97  [key=0, style=solid];
m57_91 -> m57_93  [key=0, style=solid];
m57_91 -> m57_92  [key=0, style=solid];
m57_99 -> m57_100  [key=0, style=solid];
m57_99 -> m57_101  [key=0, style=solid];
m57_104 -> m57_63  [color=blue, key=0, style=bold];
m57_146 -> m57_98  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m57_146 -> m57_97  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m57_146 -> m57_96  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m57_146 -> m57_88  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m57_146 -> m57_89  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m57_146 -> m57_99  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m58_10 -> m58_11  [key=0, style=solid];
m58_10 -> m58_14  [key=2, style=dotted];
m58_12 -> m58_2  [color=blue, key=0, style=bold];
m58_16 -> m58_17  [key=0, style=solid];
m58_17 -> m58_18  [key=0, style=solid];
m58_17 -> m58_19  [key=2, style=dotted];
m58_17 -> m58_14  [key=2, style=dotted];
m58_18 -> m58_16  [color=blue, key=0, style=bold];
m58_24 -> m58_25  [key=0, style=solid];
m58_25 -> m58_26  [key=0, style=solid];
m58_25 -> m58_27  [key=2, style=dotted];
m58_26 -> m58_24  [color=blue, key=0, style=bold];
m58_15 -> m58_5  [color=red, key=1, label="HangFire.Web.JsonStats", style=dashed];
m58_15 -> m58_6  [color=red, key=1, label="HangFire.Web.JsonStats", style=dashed];
m58_15 -> m58_7  [color=red, key=1, label="HangFire.Web.JsonStats", style=dashed];
m58_9 -> m58_12  [key=0, style=solid];
m58_9 -> m58_10  [key=0, style=solid];
m58_20 -> m58_21  [key=0, style=solid];
m58_21 -> m58_22  [key=0, style=solid];
m58_21 -> m58_23  [key=2, style=dotted];
m58_21 -> m58_14  [key=2, style=dotted];
m58_22 -> m58_20  [color=blue, key=0, style=bold];
m58_14 -> m58_28  [key=0, style=solid];
m58_28 -> m58_29  [key=0, style=solid];
m58_28 -> m58_32  [key=2, style=dotted];
m58_28 -> m58_30  [color=darkseagreen4, key=1, label=connection, style=dashed];
m58_29 -> m58_30  [key=0, style=solid];
m58_29 -> m58_33  [key=2, style=dotted];
m58_30 -> m58_31  [key=0, style=solid];
m58_31 -> m58_14  [color=blue, key=0, style=bold];
m58_2 -> m58_5  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m58_2 -> m58_3  [color=red, key=0, style=solid];
m58_2 -> m58_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m58_2 -> m58_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m58_2 -> m58_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m58_2 -> m58_10  [color=red, key=2, style=dotted];
m58_2 -> m58_4  [color=red, key=1, label=response, style=dashed];
m58_5 -> m58_6  [color=red, key=0, style=solid];
m58_5 -> m58_7  [color=green, key=0, style=solid];
m58_3 -> m58_5  [color=green, key=0, style=solid];
m58_3 -> m58_4  [color=red, key=0, style=solid];
m58_3 -> m58_11  [color=red, key=2, style=dotted];
m58_3 -> m58_12  [color=red, key=2, style=dotted];
m58_6 -> m58_12  [color=green, key=0, style=solid];
m58_6 -> m58_13  [color=green, key=2, style=dotted];
m58_6 -> m58_7  [color=red, key=0, style=solid];
m58_7 -> m58_8  [color=red, key=0, style=solid];
m58_7 -> m58_14  [color=red, key=2, style=dotted];
m58_8 -> m58_9  [key=0, style=solid];
m58_8 -> m58_0  [color=blue, key=0, style=bold];
m58_4 -> m58_12  [key=0, style=solid];
m58_4 -> m58_13  [color=red, key=2, style=dotted];
m58_4 -> m58_5  [color=red, key=0, style=solid];
m58_4 -> m58_7  [color=red, key=1, label=serialized, style=dashed];
m58_11 -> m58_12  [key=0, style=solid];
m58_11 -> m58_15  [key=2, style=dotted];
m58_0 -> m58_1  [color=red, key=0, style=solid];
m58_1 -> m58_2  [color=red, key=0, style=solid];
m58_1 -> m58_9  [color=red, key=2, style=dotted];
m58_34 -> m58_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m58_34 -> m58_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m58_34 -> m58_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m58_34 -> m58_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m58_34 -> m58_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m58_34 -> m58_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m58_34 -> m58_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m60_0 -> m60_1  [key=0, style=solid];
m60_5 -> m60_6  [color=green, key=0, style=solid];
m60_5 -> m60_99  [color=green, key=2, style=dotted];
m60_5 -> m60_98  [color=green, key=2, style=dotted];
m60_4 -> m60_5  [color=green, key=0, style=solid];
m60_4 -> m60_97  [key=2, style=dotted];
m60_6 -> m60_7  [key=0, style=solid];
m60_6 -> m60_97  [key=2, style=dotted];
m60_8 -> m60_9  [color=green, key=0, style=solid];
m60_8 -> m60_97  [color=green, key=2, style=dotted];
m60_7 -> m60_8  [color=green, key=0, style=solid];
m60_7 -> m60_99  [key=2, style=dotted];
m60_7 -> m60_98  [key=2, style=dotted];
m60_9 -> m60_10  [color=green, key=0, style=solid];
m60_10 -> m60_11  [color=green, key=0, style=solid];
m60_10 -> m60_100  [color=green, key=2, style=dotted];
m60_11 -> m60_27  [color=green, key=1, label=statistics, style=dashed];
m60_11 -> m60_12  [key=0, style=solid];
m60_11 -> m60_101  [key=2, style=dotted];
m60_11 -> m60_21  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m60_11 -> m60_29  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m60_11 -> m60_35  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m60_11 -> m60_41  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m60_11 -> m60_47  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m60_11 -> m60_53  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m60_11 -> m60_59  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m60_27 -> m60_28  [color=green, key=0, style=solid];
m60_27 -> m60_98  [color=green, key=2, style=dotted];
m60_26 -> m60_27  [color=green, key=0, style=solid];
m60_26 -> m60_97  [color=green, key=2, style=dotted];
m60_28 -> m60_29  [color=green, key=0, style=solid];
m60_28 -> m60_97  [color=green, key=2, style=dotted];
m60_22 -> m60_23  [color=green, key=0, style=solid];
m60_22 -> m60_97  [color=green, key=2, style=dotted];
m60_21 -> m60_22  [color=green, key=0, style=solid];
m60_21 -> m60_98  [key=2, style=dotted];
m60_23 -> m60_24  [color=green, key=0, style=solid];
m60_23 -> m60_103  [color=green, key=2, style=dotted];
m60_23 -> m60_98  [color=green, key=2, style=dotted];
m60_24 -> m60_25  [color=green, key=0, style=solid];
m60_24 -> m60_97  [key=2, style=dotted];
m60_25 -> m60_26  [color=green, key=0, style=solid];
m60_25 -> m60_99  [color=green, key=2, style=dotted];
m60_25 -> m60_98  [color=green, key=2, style=dotted];
m60_29 -> m60_30  [color=green, key=0, style=solid];
m60_29 -> m60_98  [key=2, style=dotted];
m60_30 -> m60_31  [color=green, key=0, style=solid];
m60_30 -> m60_97  [color=green, key=2, style=dotted];
m60_31 -> m60_98  [key=2, style=dotted];
m60_31 -> m60_32  [key=0, style=solid];
m60_31 -> m60_102  [key=2, style=dotted];
m60_62 -> m60_63  [color=green, key=0, style=solid];
m60_62 -> m60_97  [color=green, key=2, style=dotted];
m60_61 -> m60_62  [color=green, key=0, style=solid];
m60_61 -> m60_74  [key=0, style=solid];
m60_63 -> m60_99  [key=2, style=dotted];
m60_63 -> m60_98  [key=2, style=dotted];
m60_63 -> m60_64  [key=0, style=solid];
m60_72 -> m60_73  [color=green, key=0, style=solid];
m60_72 -> m60_98  [color=green, key=2, style=dotted];
m60_71 -> m60_72  [color=green, key=0, style=solid];
m60_71 -> m60_97  [key=2, style=dotted];
m60_73 -> m60_97  [key=2, style=dotted];
m60_73 -> m60_74  [key=0, style=solid];
m60_75 -> m60_76  [color=green, key=0, style=solid];
m60_75 -> m60_98  [color=green, key=2, style=dotted];
m60_74 -> m60_75  [color=green, key=0, style=solid];
m60_74 -> m60_97  [key=2, style=dotted];
m60_76 -> m60_77  [color=green, key=0, style=solid];
m60_76 -> m60_97  [key=2, style=dotted];
m60_77 -> m60_78  [color=green, key=0, style=solid];
m60_77 -> m60_81  [color=green, key=0, style=solid];
m60_77 -> m60_104  [color=green, key=2, style=dotted];
m60_78 -> m60_97  [key=2, style=dotted];
m60_78 -> m60_79  [key=0, style=solid];
m60_81 -> m60_97  [key=2, style=dotted];
m60_81 -> m60_82  [key=0, style=solid];
m60_83 -> m60_84  [color=green, key=0, style=solid];
m60_83 -> m60_97  [color=green, key=2, style=dotted];
m60_82 -> m60_83  [color=green, key=0, style=solid];
m60_82 -> m60_98  [key=2, style=dotted];
m60_82 -> m60_105  [key=2, style=dotted];
m60_84 -> m60_85  [color=green, key=0, style=solid];
m60_84 -> m60_106  [color=green, key=2, style=dotted];
m60_84 -> m60_107  [color=green, key=2, style=dotted];
m60_84 -> m60_98  [color=green, key=2, style=dotted];
m60_85 -> m60_97  [key=2, style=dotted];
m60_85 -> m60_86  [key=0, style=solid];
m60_91 -> m60_92  [color=green, key=0, style=solid];
m60_91 -> m60_97  [color=green, key=2, style=dotted];
m60_90 -> m60_91  [color=green, key=0, style=solid];
m60_90 -> m60_108  [key=2, style=dotted];
m60_92 -> m60_93  [color=green, key=0, style=solid];
m60_92 -> m60_99  [color=green, key=2, style=dotted];
m60_92 -> m60_98  [color=green, key=2, style=dotted];
m60_93 -> m60_94  [color=green, key=0, style=solid];
m60_93 -> m60_97  [color=green, key=2, style=dotted];
m60_94 -> m60_99  [key=2, style=dotted];
m60_94 -> m60_98  [key=2, style=dotted];
m60_94 -> m60_95  [key=0, style=solid];
m60_1 -> m60_97  [key=2, style=dotted];
m60_1 -> m60_2  [key=0, style=solid];
m60_2 -> m60_97  [key=2, style=dotted];
m60_2 -> m60_3  [key=0, style=solid];
m60_3 -> m60_4  [key=0, style=solid];
m60_3 -> m60_98  [key=2, style=dotted];
m60_12 -> m60_97  [key=2, style=dotted];
m60_12 -> m60_13  [key=0, style=solid];
m60_13 -> m60_98  [key=2, style=dotted];
m60_13 -> m60_14  [key=0, style=solid];
m60_13 -> m60_102  [key=2, style=dotted];
m60_14 -> m60_97  [key=2, style=dotted];
m60_14 -> m60_15  [key=0, style=solid];
m60_15 -> m60_99  [key=2, style=dotted];
m60_15 -> m60_98  [key=2, style=dotted];
m60_15 -> m60_16  [key=0, style=solid];
m60_16 -> m60_97  [key=2, style=dotted];
m60_16 -> m60_17  [key=0, style=solid];
m60_17 -> m60_98  [key=2, style=dotted];
m60_17 -> m60_18  [key=0, style=solid];
m60_17 -> m60_102  [key=2, style=dotted];
m60_18 -> m60_97  [key=2, style=dotted];
m60_18 -> m60_19  [key=0, style=solid];
m60_19 -> m60_99  [key=2, style=dotted];
m60_19 -> m60_98  [key=2, style=dotted];
m60_19 -> m60_20  [key=0, style=solid];
m60_20 -> m60_97  [key=2, style=dotted];
m60_20 -> m60_21  [key=0, style=solid];
m60_32 -> m60_97  [key=2, style=dotted];
m60_32 -> m60_33  [key=0, style=solid];
m60_33 -> m60_99  [key=2, style=dotted];
m60_33 -> m60_98  [key=2, style=dotted];
m60_33 -> m60_34  [key=0, style=solid];
m60_34 -> m60_97  [key=2, style=dotted];
m60_34 -> m60_35  [key=0, style=solid];
m60_35 -> m60_98  [key=2, style=dotted];
m60_35 -> m60_36  [key=0, style=solid];
m60_36 -> m60_97  [key=2, style=dotted];
m60_36 -> m60_37  [key=0, style=solid];
m60_37 -> m60_98  [key=2, style=dotted];
m60_37 -> m60_38  [key=0, style=solid];
m60_37 -> m60_102  [key=2, style=dotted];
m60_38 -> m60_97  [key=2, style=dotted];
m60_38 -> m60_39  [key=0, style=solid];
m60_39 -> m60_99  [key=2, style=dotted];
m60_39 -> m60_98  [key=2, style=dotted];
m60_39 -> m60_40  [key=0, style=solid];
m60_40 -> m60_97  [key=2, style=dotted];
m60_40 -> m60_41  [key=0, style=solid];
m60_41 -> m60_98  [key=2, style=dotted];
m60_41 -> m60_42  [key=0, style=solid];
m60_42 -> m60_97  [key=2, style=dotted];
m60_42 -> m60_43  [key=0, style=solid];
m60_43 -> m60_98  [key=2, style=dotted];
m60_43 -> m60_44  [key=0, style=solid];
m60_43 -> m60_102  [key=2, style=dotted];
m60_44 -> m60_97  [key=2, style=dotted];
m60_44 -> m60_45  [key=0, style=solid];
m60_45 -> m60_99  [key=2, style=dotted];
m60_45 -> m60_98  [key=2, style=dotted];
m60_45 -> m60_46  [key=0, style=solid];
m60_46 -> m60_97  [key=2, style=dotted];
m60_46 -> m60_47  [key=0, style=solid];
m60_47 -> m60_98  [key=2, style=dotted];
m60_47 -> m60_48  [key=0, style=solid];
m60_48 -> m60_97  [key=2, style=dotted];
m60_48 -> m60_49  [key=0, style=solid];
m60_49 -> m60_98  [key=2, style=dotted];
m60_49 -> m60_50  [key=0, style=solid];
m60_49 -> m60_102  [key=2, style=dotted];
m60_50 -> m60_97  [key=2, style=dotted];
m60_50 -> m60_51  [key=0, style=solid];
m60_51 -> m60_99  [key=2, style=dotted];
m60_51 -> m60_98  [key=2, style=dotted];
m60_51 -> m60_52  [key=0, style=solid];
m60_52 -> m60_97  [key=2, style=dotted];
m60_52 -> m60_53  [key=0, style=solid];
m60_53 -> m60_98  [key=2, style=dotted];
m60_53 -> m60_54  [key=0, style=solid];
m60_54 -> m60_97  [key=2, style=dotted];
m60_54 -> m60_55  [key=0, style=solid];
m60_55 -> m60_98  [key=2, style=dotted];
m60_55 -> m60_56  [key=0, style=solid];
m60_55 -> m60_102  [key=2, style=dotted];
m60_56 -> m60_97  [key=2, style=dotted];
m60_56 -> m60_57  [key=0, style=solid];
m60_57 -> m60_99  [key=2, style=dotted];
m60_57 -> m60_98  [key=2, style=dotted];
m60_57 -> m60_58  [key=0, style=solid];
m60_58 -> m60_97  [key=2, style=dotted];
m60_58 -> m60_59  [key=0, style=solid];
m60_59 -> m60_98  [key=2, style=dotted];
m60_59 -> m60_60  [key=0, style=solid];
m60_60 -> m60_97  [key=2, style=dotted];
m60_60 -> m60_61  [key=0, style=solid];
m60_64 -> m60_97  [key=2, style=dotted];
m60_64 -> m60_65  [key=0, style=solid];
m60_65 -> m60_71  [key=0, style=solid];
m60_65 -> m60_66  [key=0, style=solid];
m60_65 -> m60_67  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m60_66 -> m60_97  [key=2, style=dotted];
m60_66 -> m60_67  [key=0, style=solid];
m60_67 -> m60_98  [key=2, style=dotted];
m60_67 -> m60_67  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m60_67 -> m60_68  [key=0, style=solid];
m60_67 -> m60_69  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m60_68 -> m60_97  [key=2, style=dotted];
m60_68 -> m60_69  [key=0, style=solid];
m60_69 -> m60_98  [key=2, style=dotted];
m60_69 -> m60_69  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m60_69 -> m60_70  [key=0, style=solid];
m60_70 -> m60_97  [key=2, style=dotted];
m60_70 -> m60_65  [key=0, style=solid];
m60_79 -> m60_98  [key=2, style=dotted];
m60_79 -> m60_80  [key=0, style=solid];
m60_80 -> m60_97  [key=2, style=dotted];
m60_80 -> m60_81  [key=0, style=solid];
m60_86 -> m60_98  [key=2, style=dotted];
m60_86 -> m60_87  [key=0, style=solid];
m60_87 -> m60_97  [key=2, style=dotted];
m60_87 -> m60_88  [key=0, style=solid];
m60_88 -> m60_98  [key=2, style=dotted];
m60_88 -> m60_89  [key=0, style=solid];
m60_89 -> m60_97  [key=2, style=dotted];
m60_89 -> m60_90  [key=0, style=solid];
m60_95 -> m60_97  [key=2, style=dotted];
m60_95 -> m60_96  [key=0, style=solid];
m60_96 -> m60_0  [color=blue, key=0, style=bold];
m60_109 -> m60_5  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_8  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_27  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_22  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_23  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_25  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_26  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_28  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_30  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_62  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_72  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_75  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_77  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_83  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_84  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_91  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_92  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_93  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_76  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_78  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_79  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_80  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_81  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_82  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_85  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_86  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_87  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_88  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_89  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_90  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_94  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m60_109 -> m60_95  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m61_0 -> m61_1  [color=red, key=0, style=solid];
m61_0 -> m61_2  [color=red, key=1, label=HttpRequestBase, style=dashed];
m61_0 -> m61_12  [color=red, key=1, label=string, style=dashed];
m61_1 -> m61_2  [color=red, key=0, style=solid];
m61_1 -> m61_14  [color=red, key=2, style=dotted];
m61_1 -> m61_4  [color=red, key=1, label=sb, style=dashed];
m61_1 -> m61_5  [color=red, key=1, label=sb, style=dashed];
m61_1 -> m61_6  [color=red, key=1, label=sb, style=dashed];
m61_1 -> m61_9  [color=red, key=1, label=sb, style=dashed];
m61_2 -> m61_3  [color=red, key=0, style=solid];
m61_2 -> m61_5  [color=red, key=1, label=pathInfo, style=dashed];
m61_12 -> m61_13  [color=red, key=0, style=solid];
m61_12 -> m61_19  [color=red, key=2, style=dotted];
m61_4 -> m61_5  [color=red, key=0, style=solid];
m61_4 -> m61_6  [color=red, key=1, label=sbIndex, style=dashed];
m61_4 -> m61_7  [color=red, key=1, label=sbIndex, style=dashed];
m61_5 -> m61_6  [color=red, key=0, style=solid];
m61_5 -> m61_9  [color=red, key=0, style=solid];
m61_5 -> m61_15  [color=red, key=2, style=dotted];
m61_6 -> m61_7  [color=red, key=0, style=solid];
m61_6 -> m61_16  [color=red, key=2, style=dotted];
m61_9 -> m61_10  [color=red, key=0, style=solid];
m61_9 -> m61_17  [color=red, key=2, style=dotted];
m61_9 -> m61_11  [color=red, key=1, label=basePath, style=dashed];
m61_9 -> m61_12  [color=red, key=1, label=basePath, style=dashed];
m61_3 -> m61_4  [color=red, key=0, style=solid];
m61_3 -> m61_5  [color=red, key=1, label=pathInfoIndex, style=dashed];
m61_3 -> m61_8  [color=red, key=1, label=pathInfoIndex, style=dashed];
m61_8 -> m61_5  [color=red, key=0, style=solid];
m61_8 -> m61_8  [color=red, key=1, label=pathInfoIndex, style=dashed];
m61_7 -> m61_8  [color=red, key=0, style=solid];
m61_7 -> m61_7  [color=red, key=1, label=sbIndex, style=dashed];
m61_10 -> m61_11  [color=red, key=0, style=solid];
m61_10 -> m61_12  [color=red, key=0, style=solid];
m61_10 -> m61_18  [color=red, key=2, style=dotted];
m61_11 -> m61_12  [color=red, key=0, style=solid];
m61_11 -> m61_11  [color=red, key=1, label=basePath, style=dashed];
m61_13 -> m61_0  [color=blue, key=0, style=bold];
m63_0 -> m63_1  [color=green, key=0, style=solid];
m63_1 -> m63_2  [color=green, key=0, style=solid];
m63_1 -> m63_5  [color=red, key=2, style=dotted];
m63_1 -> m63_7  [color=green, key=2, style=dotted];
m63_2 -> m63_3  [key=0, style=solid];
m63_2 -> m63_6  [key=2, style=dotted];
m63_2 -> m63_8  [key=2, style=dotted];
m63_2 -> m63_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_2 -> m63_5  [color=darkseagreen4, key=1, label=job, style=dashed];
m63_3 -> m63_4  [key=0, style=solid];
m63_3 -> m63_5  [color=darkseagreen4, key=1, label=state, style=dashed];
m63_3 -> m63_9  [key=2, style=dotted];
m63_4 -> m63_0  [color=blue, key=0, style=bold];
m63_4 -> m63_5  [key=0, style=solid];
m63_4 -> m63_10  [key=2, style=dotted];
m63_24 -> m63_25  [key=0, style=solid];
m63_25 -> m63_26  [key=0, style=solid];
m63_25 -> m63_11  [key=2, style=dotted];
m63_25 -> m63_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_26 -> m63_27  [key=0, style=solid];
m63_26 -> m63_12  [key=2, style=dotted];
m63_26 -> m63_19  [key=2, style=dotted];
m63_26 -> m63_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_27 -> m63_24  [color=blue, key=0, style=bold];
m63_27 -> m63_28  [key=0, style=solid];
m63_27 -> m63_29  [key=2, style=dotted];
m63_9 -> m63_10  [key=0, style=solid];
m63_9 -> m63_12  [key=2, style=dotted];
m63_10 -> m63_7  [color=blue, key=0, style=bold];
m63_39 -> m63_40  [key=0, style=solid];
m63_39 -> m63_37  [key=2, style=dotted];
m63_7 -> m63_8  [key=0, style=solid];
m63_8 -> m63_9  [key=0, style=solid];
m63_8 -> m63_11  [key=2, style=dotted];
m63_8 -> m63_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_29 -> m63_30  [key=0, style=solid];
m63_29 -> m63_16  [key=2, style=dotted];
m63_12 -> m63_13  [key=0, style=solid];
m63_31 -> m63_32  [key=0, style=solid];
m63_31 -> m63_23  [key=2, style=dotted];
m63_32 -> m63_33  [key=0, style=solid];
m63_32 -> m63_5  [key=2, style=dotted];
m63_32 -> m63_30  [color=blue, key=0, style=bold];
m63_33 -> m63_34  [key=0, style=solid];
m63_33 -> m63_37  [key=2, style=dotted];
m63_34 -> m63_35  [key=0, style=solid];
m63_34 -> m63_24  [key=2, style=dotted];
m63_34 -> m63_36  [color=darkseagreen4, key=1, label=exception, style=dashed];
m63_35 -> m63_36  [key=0, style=solid];
m63_35 -> m63_5  [key=2, style=dotted];
m63_35 -> m63_12  [key=2, style=dotted];
m63_35 -> m63_23  [key=2, style=dotted];
m63_35 -> m63_37  [color=darkseagreen4, key=1, label=context, style=dashed];
m63_36 -> m63_31  [color=blue, key=0, style=bold];
m63_36 -> m63_37  [key=0, style=solid];
m63_36 -> m63_39  [key=2, style=dotted];
m63_17 -> m63_18  [key=0, style=solid];
m63_17 -> m63_19  [key=2, style=dotted];
m63_17 -> m63_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_18 -> m63_19  [key=0, style=solid];
m63_18 -> m63_11  [key=2, style=dotted];
m63_18 -> m63_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_18 -> m63_16  [color=blue, key=0, style=bold];
m63_19 -> m63_20  [key=0, style=solid];
m63_19 -> m63_12  [key=2, style=dotted];
m63_20 -> m63_17  [color=blue, key=0, style=bold];
m63_20 -> m63_21  [key=0, style=solid];
m63_15 -> m63_41  [key=0, style=solid];
m63_15 -> m63_13  [color=blue, key=0, style=bold];
m63_41 -> m63_15  [color=blue, key=0, style=bold];
m63_41 -> m63_42  [key=0, style=solid];
m63_41 -> m63_43  [key=2, style=dotted];
m63_41 -> m63_12  [key=2, style=dotted];
m63_28 -> m63_25  [color=blue, key=0, style=bold];
m63_28 -> m63_29  [key=0, style=solid];
m63_16 -> m63_17  [key=0, style=solid];
m63_40 -> m63_41  [key=0, style=solid];
m63_5 -> m63_6  [key=0, style=solid];
m63_5 -> m63_11  [key=2, style=dotted];
m63_37 -> m63_78  [key=0, style=solid];
m63_37 -> m63_38  [key=0, style=solid];
m63_37 -> m63_40  [key=2, style=dotted];
m63_78 -> m63_79  [key=0, style=solid];
m63_78 -> m63_16  [key=2, style=dotted];
m63_79 -> m63_37  [color=blue, key=0, style=bold];
m63_63 -> m63_64  [key=0, style=solid];
m63_64 -> m63_65  [key=0, style=solid];
m63_64 -> m63_5  [key=2, style=dotted];
m63_64 -> m63_68  [color=darkseagreen4, key=1, label=time, style=dashed];
m63_65 -> m63_66  [key=0, style=solid];
m63_65 -> m63_37  [key=2, style=dotted];
m63_68 -> m63_69  [key=0, style=solid];
m63_68 -> m63_12  [key=2, style=dotted];
m63_66 -> m63_67  [key=0, style=solid];
m63_66 -> m63_51  [key=2, style=dotted];
m63_66 -> m63_62  [key=2, style=dotted];
m63_66 -> m63_68  [color=darkseagreen4, key=1, label=matches, style=dashed];
m63_67 -> m63_68  [key=0, style=solid];
m63_67 -> m63_12  [key=2, style=dotted];
m63_69 -> m63_63  [color=blue, key=0, style=bold];
m63_6 -> m63_0  [color=blue, key=0, style=bold];
m63_44 -> m63_45  [key=0, style=solid];
m63_45 -> m63_46  [key=0, style=solid];
m63_45 -> m63_37  [key=2, style=dotted];
m63_45 -> m63_49  [color=darkseagreen4, key=1, label=instant, style=dashed];
m63_46 -> m63_47  [key=0, style=solid];
m63_46 -> m63_11  [key=2, style=dotted];
m63_46 -> m63_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_47 -> m63_44  [color=blue, key=0, style=bold];
m63_38 -> m63_33  [color=blue, key=0, style=bold];
m63_38 -> m63_39  [key=0, style=solid];
m63_42 -> m63_38  [color=blue, key=0, style=bold];
m63_42 -> m63_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", style=dashed];
m63_42 -> m63_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", style=dashed];
m63_42 -> m63_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", style=dashed];
m63_42 -> m63_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", style=dashed];
m63_52 -> m63_53  [key=0, style=solid];
m63_53 -> m63_54  [key=0, style=solid];
m63_53 -> m63_5  [key=2, style=dotted];
m63_53 -> m63_55  [color=darkseagreen4, key=1, label=time, style=dashed];
m63_53 -> m63_57  [color=darkseagreen4, key=1, label=time, style=dashed];
m63_53 -> m63_58  [color=darkseagreen4, key=1, label=time, style=dashed];
m63_53 -> m63_59  [color=darkseagreen4, key=1, label=time, style=dashed];
m63_54 -> m63_55  [key=0, style=solid];
m63_54 -> m63_37  [key=2, style=dotted];
m63_55 -> m63_56  [key=0, style=solid];
m63_55 -> m63_61  [key=2, style=dotted];
m63_55 -> m63_51  [key=2, style=dotted];
m63_55 -> m63_62  [key=2, style=dotted];
m63_55 -> m63_57  [color=darkseagreen4, key=1, label=matches, style=dashed];
m63_55 -> m63_58  [color=darkseagreen4, key=1, label=matches, style=dashed];
m63_55 -> m63_59  [color=darkseagreen4, key=1, label=matches, style=dashed];
m63_57 -> m63_58  [key=0, style=solid];
m63_57 -> m63_61  [key=2, style=dotted];
m63_57 -> m63_12  [key=2, style=dotted];
m63_58 -> m63_59  [key=0, style=solid];
m63_58 -> m63_61  [key=2, style=dotted];
m63_58 -> m63_12  [key=2, style=dotted];
m63_59 -> m63_60  [key=0, style=solid];
m63_59 -> m63_12  [key=2, style=dotted];
m63_56 -> m63_57  [key=0, style=solid];
m63_56 -> m63_12  [key=2, style=dotted];
m63_60 -> m63_52  [color=blue, key=0, style=bold];
m63_70 -> m63_71  [key=0, style=solid];
m63_71 -> m63_72  [key=0, style=solid];
m63_71 -> m63_5  [key=2, style=dotted];
m63_71 -> m63_73  [color=darkseagreen4, key=1, label=time, style=dashed];
m63_72 -> m63_73  [key=0, style=solid];
m63_72 -> m63_76  [key=2, style=dotted];
m63_72 -> m63_6  [key=2, style=dotted];
m63_73 -> m63_74  [key=0, style=solid];
m63_73 -> m63_61  [key=2, style=dotted];
m63_73 -> m63_51  [key=2, style=dotted];
m63_74 -> m63_75  [key=0, style=solid];
m63_74 -> m63_77  [key=2, style=dotted];
m63_75 -> m63_70  [color=blue, key=0, style=bold];
m63_13 -> m63_14  [key=0, style=solid];
m63_13 -> m63_15  [key=2, style=dotted];
m63_14 -> m63_15  [key=0, style=solid];
m63_14 -> m63_16  [key=2, style=dotted];
m63_14 -> m63_5  [key=2, style=dotted];
m63_14 -> m63_12  [color=blue, key=0, style=bold];
m63_21 -> m63_22  [key=0, style=solid];
m63_21 -> m63_23  [key=2, style=dotted];
m63_21 -> m63_24  [key=2, style=dotted];
m63_22 -> m63_23  [key=0, style=solid];
m63_22 -> m63_16  [key=2, style=dotted];
m63_22 -> m63_5  [key=2, style=dotted];
m63_22 -> m63_20  [color=blue, key=0, style=bold];
m63_23 -> m63_21  [color=blue, key=0, style=bold];
m63_30 -> m63_28  [color=blue, key=0, style=bold];
m63_30 -> m63_31  [key=0, style=solid];
m63_49 -> m63_50  [key=0, style=solid];
m63_49 -> m63_51  [key=2, style=dotted];
m63_48 -> m63_49  [key=0, style=solid];
m63_50 -> m63_48  [color=blue, key=0, style=bold];
m63_80 -> m63_1  [color=red, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_18  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_33  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_80 -> m63_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m63_81 -> m63_49  [color=darkseagreen4, key=1, label=instant, style=dashed];
m65_46 -> m65_54  [key=0, style=solid];
m65_46 -> m65_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>", style=dashed];
m65_46 -> m65_28  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.ICollection<HangFire.Web.Pager.Item> results", style=bold];
m65_54 -> m65_55  [key=0, style=solid];
m65_54 -> m65_60  [key=0, style=solid];
m65_59 -> m65_60  [key=0, style=solid];
m65_59 -> m65_53  [key=2, style=dotted];
m65_55 -> m65_56  [key=0, style=solid];
m65_55 -> m65_58  [color=darkseagreen4, key=1, label=index, style=dashed];
m65_56 -> m65_57  [key=0, style=solid];
m65_56 -> m65_58  [key=0, style=solid];
m65_58 -> m65_59  [key=0, style=solid];
m65_58 -> m65_44  [key=2, style=dotted];
m65_57 -> m65_58  [key=0, style=solid];
m65_60 -> m65_46  [color=blue, key=0, style=bold];
m65_44 -> m65_77  [key=0, style=solid];
m65_44 -> m65_78  [color=darkseagreen4, key=1, label=bool, style=dashed];
m65_44 -> m65_79  [color=darkseagreen4, key=1, label="HangFire.Web.Pager.ItemType", style=dashed];
m65_77 -> m65_78  [key=0, style=solid];
m65_78 -> m65_79  [key=0, style=solid];
m65_79 -> m65_80  [key=0, style=solid];
m65_80 -> m65_44  [color=blue, key=0, style=bold];
m65_43 -> m65_50  [key=0, style=solid];
m65_43 -> m65_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>", style=dashed];
m65_43 -> m65_28  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.ICollection<HangFire.Web.Pager.Item> results", style=bold];
m65_50 -> m65_51  [key=0, style=solid];
m65_50 -> m65_44  [key=2, style=dotted];
m65_51 -> m65_52  [key=0, style=solid];
m65_51 -> m65_53  [key=2, style=dotted];
m65_52 -> m65_43  [color=blue, key=0, style=bold];
m65_48 -> m65_61  [key=0, style=solid];
m65_48 -> m65_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>", style=dashed];
m65_48 -> m65_28  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.ICollection<HangFire.Web.Pager.Item> results", style=bold];
m65_61 -> m65_62  [key=0, style=solid];
m65_61 -> m65_67  [key=0, style=solid];
m65_66 -> m65_67  [key=0, style=solid];
m65_66 -> m65_53  [key=2, style=dotted];
m65_62 -> m65_63  [key=0, style=solid];
m65_62 -> m65_65  [color=darkseagreen4, key=1, label=index, style=dashed];
m65_63 -> m65_64  [key=0, style=solid];
m65_63 -> m65_65  [key=0, style=solid];
m65_65 -> m65_66  [key=0, style=solid];
m65_65 -> m65_44  [key=2, style=dotted];
m65_64 -> m65_65  [key=0, style=solid];
m65_67 -> m65_48  [color=blue, key=0, style=bold];
m65_10 -> m65_11  [key=0, style=solid];
m65_10 -> m65_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m65_11 -> m65_12  [key=0, style=solid];
m65_11 -> m65_13  [key=0, style=solid];
m65_13 -> m65_14  [key=0, style=solid];
m65_12 -> m65_14  [key=0, style=solid];
m65_14 -> m65_10  [color=blue, key=0, style=bold];
m65_49 -> m65_74  [key=0, style=solid];
m65_49 -> m65_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>", style=dashed];
m65_49 -> m65_28  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.ICollection<HangFire.Web.Pager.Item> results", style=bold];
m65_74 -> m65_75  [key=0, style=solid];
m65_74 -> m65_44  [key=2, style=dotted];
m65_75 -> m65_76  [key=0, style=solid];
m65_75 -> m65_53  [key=2, style=dotted];
m65_76 -> m65_49  [color=blue, key=0, style=bold];
m65_9 -> m65_20  [key=0, style=solid];
m65_9 -> m65_28  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.ICollection<HangFire.Web.Pager.Item> GenerateItems", style=bold];
m65_20 -> m65_21  [key=0, style=solid];
m65_21 -> m65_22  [key=0, style=solid];
m65_21 -> m65_23  [key=0, style=solid];
m65_22 -> m65_23  [key=0, style=solid];
m65_23 -> m65_24  [key=0, style=solid];
m65_23 -> m65_25  [key=0, style=solid];
m65_24 -> m65_25  [key=0, style=solid];
m65_25 -> m65_26  [key=0, style=solid];
m65_26 -> m65_27  [key=0, style=solid];
m65_26 -> m65_28  [key=0, style=solid];
m65_27 -> m65_28  [key=0, style=solid];
m65_28 -> m65_29  [key=0, style=solid];
m65_28 -> m65_42  [key=2, style=dotted];
m65_28 -> m65_30  [color=darkseagreen4, key=1, label=pagerItems, style=dashed];
m65_28 -> m65_31  [color=darkseagreen4, key=1, label=pagerItems, style=dashed];
m65_28 -> m65_33  [color=darkseagreen4, key=1, label=pagerItems, style=dashed];
m65_28 -> m65_34  [color=darkseagreen4, key=1, label=pagerItems, style=dashed];
m65_28 -> m65_35  [color=darkseagreen4, key=1, label=pagerItems, style=dashed];
m65_28 -> m65_36  [color=darkseagreen4, key=1, label=pagerItems, style=dashed];
m65_28 -> m65_38  [color=darkseagreen4, key=1, label=pagerItems, style=dashed];
m65_28 -> m65_39  [color=darkseagreen4, key=1, label=pagerItems, style=dashed];
m65_28 -> m65_40  [color=darkseagreen4, key=1, label=pagerItems, style=dashed];
m65_29 -> m65_30  [key=0, style=solid];
m65_29 -> m65_31  [key=0, style=solid];
m65_30 -> m65_41  [key=0, style=solid];
m65_31 -> m65_32  [key=0, style=solid];
m65_31 -> m65_43  [key=2, style=dotted];
m65_33 -> m65_34  [key=0, style=solid];
m65_33 -> m65_44  [key=2, style=dotted];
m65_33 -> m65_45  [key=2, style=dotted];
m65_34 -> m65_35  [key=0, style=solid];
m65_34 -> m65_46  [key=2, style=dotted];
m65_35 -> m65_36  [key=0, style=solid];
m65_35 -> m65_47  [key=2, style=dotted];
m65_36 -> m65_37  [key=0, style=solid];
m65_36 -> m65_48  [key=2, style=dotted];
m65_38 -> m65_39  [key=0, style=solid];
m65_38 -> m65_44  [key=2, style=dotted];
m65_38 -> m65_45  [key=2, style=dotted];
m65_39 -> m65_40  [key=0, style=solid];
m65_39 -> m65_49  [key=2, style=dotted];
m65_40 -> m65_41  [key=0, style=solid];
m65_32 -> m65_33  [key=0, style=solid];
m65_32 -> m65_34  [key=0, style=solid];
m65_37 -> m65_38  [key=0, style=solid];
m65_37 -> m65_39  [key=0, style=solid];
m65_41 -> m65_9  [color=blue, key=0, style=bold];
m65_0 -> m65_1  [key=0, style=solid];
m65_0 -> m65_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m65_0 -> m65_3  [color=darkseagreen4, key=1, label=long, style=dashed];
m65_1 -> m65_2  [key=0, style=solid];
m65_2 -> m65_3  [key=0, style=solid];
m65_3 -> m65_4  [key=0, style=solid];
m65_4 -> m65_5  [key=0, style=solid];
m65_5 -> m65_6  [key=0, style=solid];
m65_5 -> m65_8  [key=2, style=dotted];
m65_6 -> m65_7  [key=0, style=solid];
m65_6 -> m65_9  [key=2, style=dotted];
m65_7 -> m65_0  [color=blue, key=0, style=bold];
m65_47 -> m65_68  [key=0, style=solid];
m65_47 -> m65_71  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>", style=dashed];
m65_47 -> m65_28  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.ICollection<HangFire.Web.Pager.Item> results", style=bold];
m65_68 -> m65_69  [key=0, style=solid];
m65_68 -> m65_70  [color=darkseagreen4, key=1, label=pageIndex, style=dashed];
m65_68 -> m65_72  [color=darkseagreen4, key=1, label=pageIndex, style=dashed];
m65_71 -> m65_72  [key=0, style=solid];
m65_71 -> m65_53  [key=2, style=dotted];
m65_69 -> m65_70  [key=0, style=solid];
m65_69 -> m65_73  [key=0, style=solid];
m65_70 -> m65_71  [key=0, style=solid];
m65_70 -> m65_44  [key=2, style=dotted];
m65_72 -> m65_69  [key=0, style=solid];
m65_72 -> m65_72  [color=darkseagreen4, key=1, label=pageIndex, style=dashed];
m65_73 -> m65_47  [color=blue, key=0, style=bold];
m65_15 -> m65_16  [key=0, style=solid];
m65_15 -> m65_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m65_15 -> m65_11  [color=darkorchid, key=3, label="method methodReturn string RecordsPerPageUrl", style=bold];
m65_16 -> m65_17  [key=0, style=solid];
m65_16 -> m65_18  [key=0, style=solid];
m65_18 -> m65_19  [key=0, style=solid];
m65_17 -> m65_19  [key=0, style=solid];
m65_19 -> m65_15  [color=blue, key=0, style=bold];
m65_81 -> m65_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_81 -> m65_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pager", style=dashed];
m65_82 -> m65_77  [color=darkseagreen4, key=1, label="HangFire.Web.Pager.Item", style=dashed];
m65_82 -> m65_78  [color=darkseagreen4, key=1, label="HangFire.Web.Pager.Item", style=dashed];
m65_82 -> m65_79  [color=darkseagreen4, key=1, label="HangFire.Web.Pager.Item", style=dashed];
m66_14 -> m66_7  [color=blue, key=0, style=bold];
m66_8 -> m66_9  [key=0, style=solid];
m66_8 -> m66_10  [key=0, style=solid];
m66_15 -> m66_10  [color=green, key=1, label="HangFire.States.ProcessingState", style=dashed];
m66_15 -> m66_3  [color=darkseagreen4, key=1, label="HangFire.States.ProcessingState", style=dashed];
m66_15 -> m66_4  [color=darkseagreen4, key=1, label="HangFire.States.ProcessingState", style=dashed];
m66_15 -> m66_5  [color=darkseagreen4, key=1, label="HangFire.States.ProcessingState", style=dashed];
m66_25 -> m66_26  [key=0, style=solid];
m66_26 -> m66_27  [key=0, style=solid];
m66_26 -> m66_28  [key=2, style=dotted];
m66_27 -> m66_25  [color=blue, key=0, style=bold];
m66_33 -> m66_34  [key=0, style=solid];
m66_34 -> m66_35  [key=0, style=solid];
m66_34 -> m66_36  [key=2, style=dotted];
m66_35 -> m66_33  [color=blue, key=0, style=bold];
m66_7 -> m66_8  [key=0, style=solid];
m66_7 -> m66_10  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m66_21 -> m66_22  [key=0, style=solid];
m66_22 -> m66_23  [key=0, style=solid];
m66_22 -> m66_24  [key=2, style=dotted];
m66_23 -> m66_21  [color=blue, key=0, style=bold];
m66_20 -> m66_50  [key=0, style=solid];
m66_20 -> m66_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m66_50 -> m66_51  [key=0, style=solid];
m66_50 -> m66_52  [key=0, style=solid];
m66_50 -> m66_53  [key=2, style=dotted];
m66_51 -> m66_52  [key=0, style=solid];
m66_51 -> m66_54  [key=2, style=dotted];
m66_51 -> m66_55  [key=2, style=dotted];
m66_52 -> m66_20  [color=blue, key=0, style=bold];
m66_37 -> m66_38  [key=0, style=solid];
m66_38 -> m66_39  [key=0, style=solid];
m66_38 -> m66_29  [key=2, style=dotted];
m66_38 -> m66_40  [key=2, style=dotted];
m66_39 -> m66_37  [color=blue, key=0, style=bold];
m66_29 -> m66_30  [key=0, style=solid];
m66_30 -> m66_31  [key=0, style=solid];
m66_31 -> m66_32  [key=0, style=solid];
m66_31 -> m66_31  [color=darkseagreen4, key=1, label=elapsedTime, style=dashed];
m66_32 -> m66_29  [color=blue, key=0, style=bold];
m66_10 -> m66_11  [color=green, key=0, style=solid];
m66_10 -> m66_16  [key=2, style=dotted];
m66_10 -> m66_17  [key=2, style=dotted];
m66_10 -> m66_18  [key=2, style=dotted];
m66_10 -> m66_12  [color=green, key=2, style=dotted];
m66_10 -> m66_13  [color=green, key=2, style=dotted];
m66_10 -> m66_14  [color=green, key=2, style=dotted];
m66_9 -> m66_14  [key=0, style=solid];
m66_9 -> m66_15  [key=2, style=dotted];
m66_9 -> m66_10  [color=green, key=0, style=solid];
m66_11 -> m66_12  [key=0, style=solid];
m66_11 -> m66_19  [key=2, style=dotted];
m66_11 -> m66_13  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m66_11 -> m66_9  [color=blue, key=0, style=bold];
m66_12 -> m66_13  [key=0, style=solid];
m66_12 -> m66_20  [key=2, style=dotted];
m66_13 -> m66_14  [key=0, style=solid];
m66_45 -> m66_46  [key=0, style=solid];
m66_45 -> m66_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m66_46 -> m66_47  [key=0, style=solid];
m66_46 -> m66_48  [key=0, style=solid];
m66_46 -> m66_19  [key=2, style=dotted];
m66_48 -> m66_49  [key=0, style=solid];
m66_48 -> m66_41  [key=2, style=dotted];
m66_47 -> m66_49  [key=0, style=solid];
m66_49 -> m66_45  [color=blue, key=0, style=bold];
m66_6 -> m66_0  [color=blue, key=0, style=bold];
m66_0 -> m66_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m66_0 -> m66_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m66_0 -> m66_1  [key=0, style=solid];
m66_3 -> m66_4  [key=0, style=solid];
m66_3 -> m66_5  [key=0, style=solid];
m66_4 -> m66_5  [key=0, style=solid];
m66_4 -> m66_7  [key=2, style=dotted];
m66_5 -> m66_6  [key=0, style=solid];
m66_5 -> m66_0  [color=blue, key=0, style=bold];
m66_1 -> m66_3  [key=0, style=solid];
m66_1 -> m66_2  [key=0, style=solid];
m66_1 -> m66_7  [key=2, style=dotted];
m66_1 -> m66_6  [key=2, style=dotted];
m66_1 -> m66_4  [color=darkseagreen4, key=1, label=type, style=dashed];
m66_2 -> m66_6  [key=0, style=solid];
m66_2 -> m66_8  [key=2, style=dotted];
m66_2 -> m66_3  [key=0, style=solid];
m66_2 -> m66_4  [key=0, style=solid];
m66_41 -> m66_42  [key=0, style=solid];
m66_42 -> m66_43  [key=0, style=solid];
m66_42 -> m66_44  [key=2, style=dotted];
m66_42 -> m66_33  [key=2, style=dotted];
m66_43 -> m66_41  [color=blue, key=0, style=bold];
m67_62 -> m67_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_62 -> m67_63  [key=0, style=solid];
m67_64 -> m67_60  [key=2, style=dotted];
m67_64 -> m67_65  [key=0, style=solid];
m67_64 -> m67_68  [key=2, style=dotted];
m67_63 -> m67_64  [key=0, style=solid];
m67_63 -> m67_66  [key=2, style=dotted];
m67_63 -> m67_67  [key=2, style=dotted];
m67_63 -> m67_47  [color=blue, key=0, style=bold];
m67_65 -> m67_62  [color=blue, key=0, style=bold];
m67_5 -> m67_6  [color=green, key=0, style=solid];
m67_5 -> m67_20  [color=green, key=2, style=dotted];
m67_117 -> m67_118  [key=0, style=solid];
m67_117 -> m67_120  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m67_117 -> m67_122  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m67_117 -> m67_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_118 -> m67_119  [key=0, style=solid];
m67_118 -> m67_120  [key=0, style=solid];
m67_120 -> m67_121  [key=0, style=solid];
m67_120 -> m67_122  [key=0, style=solid];
m67_122 -> m67_123  [key=0, style=solid];
m67_122 -> m67_125  [key=2, style=dotted];
m67_123 -> m67_124  [key=0, style=solid];
m67_123 -> m67_65  [key=2, style=dotted];
m67_123 -> m67_69  [key=2, style=dotted];
m67_119 -> m67_124  [key=0, style=solid];
m67_119 -> m67_5  [key=2, style=dotted];
m67_121 -> m67_124  [key=0, style=solid];
m67_121 -> m67_5  [key=2, style=dotted];
m67_124 -> m67_117  [color=blue, key=0, style=bold];
m67_95 -> m67_96  [key=0, style=solid];
m67_95 -> m67_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_95 -> m67_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_96 -> m67_97  [key=0, style=solid];
m67_96 -> m67_98  [key=0, style=solid];
m67_98 -> m67_99  [key=0, style=solid];
m67_98 -> m67_100  [key=0, style=solid];
m67_100 -> m67_101  [key=0, style=solid];
m67_100 -> m67_67  [key=2, style=dotted];
m67_100 -> m67_42  [key=2, style=dotted];
m67_97 -> m67_101  [key=0, style=solid];
m67_97 -> m67_5  [key=2, style=dotted];
m67_99 -> m67_101  [key=0, style=solid];
m67_99 -> m67_5  [key=2, style=dotted];
m67_101 -> m67_95  [color=blue, key=0, style=bold];
m67_91 -> m67_92  [key=0, style=solid];
m67_91 -> m67_93  [key=0, style=solid];
m67_92 -> m67_60  [key=2, style=dotted];
m67_92 -> m67_93  [key=0, style=solid];
m67_92 -> m67_94  [key=2, style=dotted];
m67_92 -> m67_95  [key=2, style=dotted];
m67_92 -> m67_5  [key=2, style=dotted];
m67_93 -> m67_91  [color=blue, key=0, style=bold];
m67_93 -> m67_94  [key=0, style=solid];
m67_93 -> m67_69  [key=2, style=dotted];
m67_57 -> m67_58  [key=0, style=solid];
m67_57 -> m67_59  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m67_47 -> m67_48  [key=0, style=solid];
m67_47 -> m67_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_47 -> m67_53  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m67_47 -> m67_54  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m67_47 -> m67_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_47 -> m67_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_47 -> m67_58  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_47 -> m67_59  [key=2, style=dotted];
m67_48 -> m67_49  [key=0, style=solid];
m67_48 -> m67_50  [key=0, style=solid];
m67_50 -> m67_51  [key=0, style=solid];
m67_50 -> m67_52  [key=0, style=solid];
m67_53 -> m67_54  [key=0, style=solid];
m67_53 -> m67_64  [key=2, style=dotted];
m67_53 -> m67_37  [color=blue, key=0, style=bold];
m67_54 -> m67_55  [key=0, style=solid];
m67_54 -> m67_65  [key=2, style=dotted];
m67_54 -> m67_66  [key=2, style=dotted];
m67_54 -> m67_67  [key=2, style=dotted];
m67_54 -> m67_68  [key=2, style=dotted];
m67_54 -> m67_46  [key=2, style=dotted];
m67_54 -> m67_59  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m67_54 -> m67_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m67_55 -> m67_56  [key=0, style=solid];
m67_55 -> m67_62  [key=0, style=solid];
m67_56 -> m67_57  [key=0, style=solid];
m67_56 -> m67_59  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m67_56 -> m67_61  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m67_58 -> m67_59  [key=0, style=solid];
m67_58 -> m67_60  [key=0, style=solid];
m67_49 -> m67_63  [key=0, style=solid];
m67_49 -> m67_5  [key=2, style=dotted];
m67_49 -> m67_50  [key=0, style=solid];
m67_49 -> m67_55  [key=2, style=dotted];
m67_51 -> m67_63  [key=0, style=solid];
m67_51 -> m67_5  [key=2, style=dotted];
m67_51 -> m67_53  [key=0, style=solid];
m67_52 -> m67_53  [key=0, style=solid];
m67_52 -> m67_54  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m67_52 -> m67_60  [key=2, style=dotted];
m67_52 -> m67_61  [key=2, style=dotted];
m67_59 -> m67_58  [key=0, style=solid];
m67_59 -> m67_59  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m67_61 -> m67_62  [key=0, style=solid];
m67_61 -> m67_69  [key=2, style=dotted];
m67_60 -> m67_61  [key=0, style=solid];
m67_90 -> m67_94  [key=0, style=solid];
m67_90 -> m67_5  [key=2, style=dotted];
m67_18 -> m67_21  [key=2, style=dotted];
m67_18 -> m67_19  [key=0, style=solid];
m67_94 -> m67_88  [color=blue, key=0, style=bold];
m67_40 -> m67_41  [key=0, style=solid];
m67_40 -> m67_50  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m67_45 -> m67_26  [key=2, style=dotted];
m67_45 -> m67_46  [key=0, style=solid];
m67_45 -> m67_49  [key=0, style=solid];
m67_70 -> m67_71  [key=0, style=solid];
m67_70 -> m67_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_70 -> m67_79  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_70 -> m67_81  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_70 -> m67_83  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_70 -> m67_54  [key=2, style=dotted];
m67_70 -> m67_78  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_70 -> m67_82  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_70 -> m67_84  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_71 -> m67_72  [key=0, style=solid];
m67_71 -> m67_73  [key=0, style=solid];
m67_71 -> m67_55  [key=2, style=dotted];
m67_74 -> m67_75  [key=0, style=solid];
m67_74 -> m67_67  [key=2, style=dotted];
m67_74 -> m67_42  [key=2, style=dotted];
m67_74 -> m67_77  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m67_74 -> m67_78  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m67_74 -> m67_84  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m67_74 -> m67_79  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m67_72 -> m67_85  [key=0, style=solid];
m67_72 -> m67_5  [key=2, style=dotted];
m67_72 -> m67_73  [key=0, style=solid];
m67_72 -> m67_77  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m67_72 -> m67_79  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m67_73 -> m67_74  [key=0, style=solid];
m67_73 -> m67_26  [key=2, style=dotted];
m67_73 -> m67_75  [key=0, style=solid];
m67_75 -> m67_76  [key=0, style=solid];
m67_75 -> m67_77  [key=0, style=solid];
m67_75 -> m67_26  [key=2, style=dotted];
m67_77 -> m67_78  [key=0, style=solid];
m67_77 -> m67_67  [key=2, style=dotted];
m67_77 -> m67_81  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m67_77 -> m67_80  [key=0, style=solid];
m67_78 -> m67_79  [key=0, style=solid];
m67_78 -> m67_55  [key=2, style=dotted];
m67_84 -> m67_85  [key=0, style=solid];
m67_84 -> m67_87  [key=2, style=dotted];
m67_84 -> m67_60  [key=2, style=dotted];
m67_84 -> m67_61  [key=2, style=dotted];
m67_76 -> m67_85  [key=0, style=solid];
m67_76 -> m67_77  [key=0, style=solid];
m67_76 -> m67_79  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m67_81 -> m67_82  [key=0, style=solid];
m67_81 -> m67_84  [key=0, style=solid];
m67_81 -> m67_86  [key=2, style=dotted];
m67_81 -> m67_55  [key=2, style=dotted];
m67_79 -> m67_80  [key=0, style=solid];
m67_79 -> m67_86  [key=2, style=dotted];
m67_79 -> m67_59  [key=2, style=dotted];
m67_80 -> m67_81  [key=0, style=solid];
m67_80 -> m67_26  [key=2, style=dotted];
m67_80 -> m67_83  [key=0, style=solid];
m67_82 -> m67_83  [key=0, style=solid];
m67_82 -> m67_59  [key=2, style=dotted];
m67_83 -> m67_84  [key=0, style=solid];
m67_83 -> m67_55  [key=2, style=dotted];
m67_85 -> m67_70  [color=blue, key=0, style=bold];
m67_85 -> m67_69  [color=blue, key=0, style=bold];
m67_10 -> m67_11  [key=0, style=solid];
m67_10 -> m67_21  [key=2, style=dotted];
m67_11 -> m67_12  [key=0, style=solid];
m67_11 -> m67_13  [key=2, style=dotted];
m67_11 -> m67_21  [key=2, style=dotted];
m67_12 -> m67_10  [color=blue, key=0, style=bold];
m67_12 -> m67_21  [key=2, style=dotted];
m67_12 -> m67_13  [key=0, style=solid];
m67_20 -> m67_22  [key=0, style=solid];
m67_20 -> m67_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_20 -> m67_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_20 -> m67_21  [key=0, style=solid];
m67_22 -> m67_23  [key=0, style=solid];
m67_22 -> m67_24  [key=0, style=solid];
m67_22 -> m67_26  [key=2, style=dotted];
m67_23 -> m67_25  [key=0, style=solid];
m67_23 -> m67_21  [key=2, style=dotted];
m67_23 -> m67_37  [key=0, style=solid];
m67_23 -> m67_38  [key=2, style=dotted];
m67_24 -> m67_25  [key=0, style=solid];
m67_25 -> m67_20  [color=blue, key=0, style=bold];
m67_25 -> m67_26  [key=0, style=solid];
m67_25 -> m67_29  [color=darkseagreen4, key=1, label=fetchJobSqlTemplate, style=dashed];
m67_27 -> m67_28  [key=0, style=solid];
m67_27 -> m67_29  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m67_27 -> m67_31  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m67_27 -> m67_34  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m67_28 -> m67_26  [key=2, style=dotted];
m67_28 -> m67_29  [key=0, style=solid];
m67_28 -> m67_39  [key=2, style=dotted];
m67_28 -> m67_28  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m67_28 -> m67_32  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m67_29 -> m67_27  [color=blue, key=0, style=bold];
m67_29 -> m67_30  [key=0, style=solid];
m67_29 -> m67_18  [key=2, style=dotted];
m67_29 -> m67_40  [key=2, style=dotted];
m67_29 -> m67_41  [key=2, style=dotted];
m67_29 -> m67_42  [key=2, style=dotted];
m67_29 -> m67_35  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m67_29 -> m67_36  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m67_43 -> m67_44  [key=0, style=solid];
m67_43 -> m67_58  [key=2, style=dotted];
m67_43 -> m67_59  [key=2, style=dotted];
m67_41 -> m67_26  [key=2, style=dotted];
m67_41 -> m67_42  [key=0, style=solid];
m67_41 -> m67_45  [key=0, style=solid];
m67_46 -> m67_47  [key=0, style=solid];
m67_46 -> m67_56  [key=2, style=dotted];
m67_46 -> m67_57  [key=2, style=dotted];
m67_39 -> m67_40  [key=0, style=solid];
m67_39 -> m67_55  [key=2, style=dotted];
m67_17 -> m67_21  [key=2, style=dotted];
m67_17 -> m67_18  [key=0, style=solid];
m67_69 -> m67_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_69 -> m67_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_69 -> m67_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_69 -> m67_70  [key=0, style=solid];
m67_69 -> m67_74  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_69 -> m67_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_69 -> m67_82  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_87 -> m67_88  [key=0, style=solid];
m67_88 -> m67_60  [key=2, style=dotted];
m67_88 -> m67_89  [key=0, style=solid];
m67_88 -> m67_90  [key=2, style=dotted];
m67_88 -> m67_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_88 -> m67_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_89 -> m67_87  [color=blue, key=0, style=bold];
m67_89 -> m67_90  [key=0, style=solid];
m67_89 -> m67_91  [key=0, style=solid];
m67_19 -> m67_20  [key=0, style=solid];
m67_19 -> m67_22  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m67_19 -> m67_28  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m67_19 -> m67_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m67_19 -> m67_0  [color=blue, key=0, style=bold];
m67_21 -> m67_37  [key=0, style=solid];
m67_21 -> m67_5  [key=2, style=dotted];
m67_26 -> m67_27  [key=0, style=solid];
m67_26 -> m67_29  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m67_26 -> m67_31  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m67_26 -> m67_34  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m67_31 -> m67_32  [key=0, style=solid];
m67_31 -> m67_34  [key=0, style=solid];
m67_34 -> m67_35  [key=0, style=solid];
m67_34 -> m67_34  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m67_32 -> m67_33  [key=0, style=solid];
m67_32 -> m67_43  [key=2, style=dotted];
m67_32 -> m67_44  [key=2, style=dotted];
m67_32 -> m67_32  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m67_30 -> m67_31  [key=0, style=solid];
m67_30 -> m67_34  [key=0, style=solid];
m67_35 -> m67_27  [key=0, style=solid];
m67_35 -> m67_36  [key=0, style=solid];
m67_36 -> m67_37  [key=0, style=solid];
m67_36 -> m67_45  [key=2, style=dotted];
m67_36 -> m67_46  [key=2, style=dotted];
m67_33 -> m67_34  [key=0, style=solid];
m67_33 -> m67_39  [key=2, style=dotted];
m67_33 -> m67_33  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m67_37 -> m67_19  [color=blue, key=0, style=bold];
m67_37 -> m67_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_37 -> m67_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_37 -> m67_38  [key=0, style=solid];
m67_37 -> m67_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_37 -> m67_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m67_136 -> m67_137  [key=0, style=solid];
m67_137 -> m67_138  [key=0, style=solid];
m67_137 -> m67_139  [key=0, style=solid];
m67_137 -> m67_141  [key=2, style=dotted];
m67_137 -> m67_137  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m67_138 -> m67_140  [key=0, style=solid];
m67_138 -> m67_38  [key=2, style=dotted];
m67_139 -> m67_140  [key=0, style=solid];
m67_139 -> m67_40  [key=2, style=dotted];
m67_139 -> m67_66  [key=2, style=dotted];
m67_139 -> m67_69  [key=2, style=dotted];
m67_139 -> m67_139  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m67_140 -> m67_136  [color=blue, key=0, style=bold];
m67_0 -> m67_1  [key=0, style=solid];
m67_0 -> m67_3  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m67_1 -> m67_2  [key=0, style=solid];
m67_1 -> m67_3  [key=0, style=solid];
m67_1 -> m67_20  [key=2, style=dotted];
m67_3 -> m67_4  [key=0, style=solid];
m67_3 -> m67_20  [key=2, style=dotted];
m67_2 -> m67_4  [key=0, style=solid];
m67_2 -> m67_5  [key=2, style=dotted];
m67_2 -> m67_20  [key=2, style=dotted];
m67_2 -> m67_3  [key=0, style=solid];
m67_4 -> m67_0  [color=blue, key=0, style=bold];
m67_4 -> m67_5  [color=green, key=0, style=solid];
m67_4 -> m67_20  [key=2, style=dotted];
m67_9 -> m67_21  [key=2, style=dotted];
m67_9 -> m67_10  [key=0, style=solid];
m67_6 -> m67_7  [key=0, style=solid];
m67_6 -> m67_20  [key=2, style=dotted];
m67_7 -> m67_8  [key=0, style=solid];
m67_7 -> m67_9  [key=2, style=dotted];
m67_7 -> m67_21  [key=2, style=dotted];
m67_8 -> m67_6  [color=blue, key=0, style=bold];
m67_8 -> m67_9  [key=0, style=solid];
m67_8 -> m67_21  [key=2, style=dotted];
m67_102 -> m67_103  [key=0, style=solid];
m67_102 -> m67_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_102 -> m67_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_103 -> m67_104  [key=0, style=solid];
m67_103 -> m67_105  [key=0, style=solid];
m67_105 -> m67_106  [key=0, style=solid];
m67_105 -> m67_107  [key=0, style=solid];
m67_107 -> m67_108  [key=0, style=solid];
m67_107 -> m67_69  [key=2, style=dotted];
m67_104 -> m67_108  [key=0, style=solid];
m67_104 -> m67_5  [key=2, style=dotted];
m67_106 -> m67_108  [key=0, style=solid];
m67_106 -> m67_5  [key=2, style=dotted];
m67_108 -> m67_102  [color=blue, key=0, style=bold];
m67_13 -> m67_21  [key=2, style=dotted];
m67_13 -> m67_14  [key=0, style=solid];
m67_109 -> m67_110  [key=0, style=solid];
m67_109 -> m67_112  [color=darkseagreen4, key=1, label=double, style=dashed];
m67_109 -> m67_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_110 -> m67_111  [key=0, style=solid];
m67_110 -> m67_112  [key=0, style=solid];
m67_112 -> m67_113  [key=0, style=solid];
m67_112 -> m67_114  [key=0, style=solid];
m67_114 -> m67_115  [key=0, style=solid];
m67_114 -> m67_67  [key=2, style=dotted];
m67_114 -> m67_42  [key=2, style=dotted];
m67_111 -> m67_115  [key=0, style=solid];
m67_111 -> m67_5  [key=2, style=dotted];
m67_113 -> m67_115  [key=0, style=solid];
m67_113 -> m67_116  [key=2, style=dotted];
m67_115 -> m67_109  [color=blue, key=0, style=bold];
m67_14 -> m67_15  [key=0, style=solid];
m67_14 -> m67_21  [key=2, style=dotted];
m67_15 -> m67_16  [key=0, style=solid];
m67_15 -> m67_17  [key=2, style=dotted];
m67_15 -> m67_18  [key=2, style=dotted];
m67_15 -> m67_21  [key=2, style=dotted];
m67_16 -> m67_14  [color=blue, key=0, style=bold];
m67_16 -> m67_21  [key=2, style=dotted];
m67_16 -> m67_17  [key=0, style=solid];
m67_38 -> m67_49  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_38 -> m67_39  [key=0, style=solid];
m67_38 -> m67_54  [key=2, style=dotted];
m67_38 -> m67_43  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_38 -> m67_47  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_38 -> m67_52  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_42 -> m67_43  [key=0, style=solid];
m67_42 -> m67_56  [key=2, style=dotted];
m67_42 -> m67_57  [key=2, style=dotted];
m67_44 -> m67_45  [key=0, style=solid];
m67_44 -> m67_50  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m67_126 -> m67_127  [key=0, style=solid];
m67_126 -> m67_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_127 -> m67_128  [key=0, style=solid];
m67_127 -> m67_129  [key=0, style=solid];
m67_129 -> m67_130  [key=0, style=solid];
m67_129 -> m67_69  [key=2, style=dotted];
m67_128 -> m67_130  [key=0, style=solid];
m67_128 -> m67_5  [key=2, style=dotted];
m67_130 -> m67_126  [color=blue, key=0, style=bold];
m67_131 -> m67_132  [key=0, style=solid];
m67_131 -> m67_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m67_132 -> m67_133  [key=0, style=solid];
m67_132 -> m67_134  [key=0, style=solid];
m67_134 -> m67_135  [key=0, style=solid];
m67_134 -> m67_69  [key=2, style=dotted];
m67_133 -> m67_135  [key=0, style=solid];
m67_133 -> m67_5  [key=2, style=dotted];
m67_135 -> m67_131  [color=blue, key=0, style=bold];
m67_142 -> m67_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_29  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_54  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_61  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_74  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_93  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_100  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_107  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_114  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_123  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_129  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_134  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m67_142 -> m67_139  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m68_0 -> m68_1  [key=0, style=solid];
m68_1 -> m68_2  [key=0, style=solid];
m68_1 -> m68_67  [key=2, style=dotted];
m68_2 -> m68_3  [key=0, style=solid];
m68_2 -> m68_68  [key=2, style=dotted];
m68_2 -> m68_4  [color=darkseagreen4, key=1, label=sqlServerStorage, style=dashed];
m68_3 -> m68_4  [key=0, style=solid];
m68_3 -> m68_69  [key=2, style=dotted];
m68_4 -> m68_5  [color=green, key=0, style=solid];
m68_5 -> m68_6  [color=green, key=0, style=solid];
m68_5 -> m68_70  [color=green, key=2, style=dotted];
m68_6 -> m68_7  [key=0, style=solid];
m68_6 -> m68_71  [key=2, style=dotted];
m68_6 -> m68_12  [color=darkseagreen4, key=1, label=server, style=dashed];
m68_7 -> m68_8  [key=0, style=solid];
m68_7 -> m68_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m68_12 -> m68_13  [key=0, style=solid];
m68_12 -> m68_74  [key=2, style=dotted];
m68_8 -> m68_9  [key=0, style=solid];
m68_8 -> m68_64  [key=0, style=solid];
m68_46 -> m68_47  [key=0, style=solid];
m68_46 -> m68_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m68_46 -> m68_104  [color=darkseagreen4, key=1, label=number, style=dashed];
m68_9 -> m68_10  [key=0, style=solid];
m68_9 -> m68_72  [key=2, style=dotted];
m68_9 -> m68_11  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_13  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_14  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_23  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_24  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_32  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_33  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_38  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_39  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_44  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_45  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_48  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_49  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_51  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_52  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_58  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_9 -> m68_59  [color=darkseagreen4, key=1, label=command, style=dashed];
m68_64 -> m68_65  [key=0, style=solid];
m68_64 -> m68_79  [key=2, style=dotted];
m68_10 -> m68_11  [key=0, style=solid];
m68_10 -> m68_64  [key=0, style=solid];
m68_10 -> m68_73  [key=2, style=dotted];
m68_11 -> m68_12  [key=0, style=solid];
m68_11 -> m68_13  [key=0, style=solid];
m68_11 -> m68_73  [key=2, style=dotted];
m68_13 -> m68_14  [key=0, style=solid];
m68_13 -> m68_23  [key=0, style=solid];
m68_13 -> m68_75  [key=2, style=dotted];
m68_14 -> m68_15  [key=0, style=solid];
m68_14 -> m68_76  [key=2, style=dotted];
m68_14 -> m68_77  [key=2, style=dotted];
m68_14 -> m68_16  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m68_23 -> m68_24  [key=0, style=solid];
m68_23 -> m68_32  [key=0, style=solid];
m68_23 -> m68_75  [key=2, style=dotted];
m68_24 -> m68_25  [key=0, style=solid];
m68_24 -> m68_76  [key=2, style=dotted];
m68_24 -> m68_77  [key=2, style=dotted];
m68_24 -> m68_26  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m68_32 -> m68_33  [key=0, style=solid];
m68_32 -> m68_38  [key=0, style=solid];
m68_32 -> m68_75  [key=2, style=dotted];
m68_33 -> m68_34  [key=0, style=solid];
m68_33 -> m68_76  [key=2, style=dotted];
m68_33 -> m68_77  [key=2, style=dotted];
m68_33 -> m68_35  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m68_38 -> m68_39  [key=0, style=solid];
m68_38 -> m68_44  [key=0, style=solid];
m68_38 -> m68_75  [key=2, style=dotted];
m68_39 -> m68_40  [key=0, style=solid];
m68_39 -> m68_76  [key=2, style=dotted];
m68_39 -> m68_77  [key=2, style=dotted];
m68_39 -> m68_41  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m68_44 -> m68_45  [key=0, style=solid];
m68_44 -> m68_48  [key=0, style=solid];
m68_44 -> m68_75  [key=2, style=dotted];
m68_45 -> m68_46  [key=0, style=solid];
m68_45 -> m68_76  [key=2, style=dotted];
m68_45 -> m68_77  [key=2, style=dotted];
m68_45 -> m68_47  [color=darkseagreen4, key=1, label=seconds, style=dashed];
m68_48 -> m68_49  [key=0, style=solid];
m68_48 -> m68_51  [key=0, style=solid];
m68_48 -> m68_75  [key=2, style=dotted];
m68_49 -> m68_50  [key=0, style=solid];
m68_49 -> m68_76  [key=2, style=dotted];
m68_49 -> m68_77  [key=2, style=dotted];
m68_49 -> m68_107  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m68_51 -> m68_52  [key=0, style=solid];
m68_51 -> m68_58  [key=0, style=solid];
m68_51 -> m68_75  [key=2, style=dotted];
m68_52 -> m68_53  [key=0, style=solid];
m68_52 -> m68_76  [key=2, style=dotted];
m68_52 -> m68_77  [key=2, style=dotted];
m68_52 -> m68_54  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m68_58 -> m68_59  [key=0, style=solid];
m68_58 -> m68_8  [key=0, style=solid];
m68_58 -> m68_75  [key=2, style=dotted];
m68_59 -> m68_60  [key=0, style=solid];
m68_59 -> m68_76  [key=2, style=dotted];
m68_59 -> m68_77  [key=2, style=dotted];
m68_15 -> m68_16  [key=0, style=solid];
m68_15 -> m68_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_15 -> m68_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_15 -> m68_15  [color=green, key=3, label="Local variable int i", style=bold];
m68_16 -> m68_17  [key=0, style=solid];
m68_16 -> m68_20  [key=0, style=solid];
m68_17 -> m68_18  [key=0, style=solid];
m68_17 -> m68_86  [color=darkseagreen4, key=1, label=number, style=dashed];
m68_17 -> m68_15  [color=green, key=3, label="Local variable int number", style=bold];
m68_19 -> m68_16  [key=0, style=solid];
m68_19 -> m68_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_20 -> m68_21  [key=0, style=solid];
m68_20 -> m68_23  [key=0, style=solid];
m68_20 -> m68_79  [key=2, style=dotted];
m68_18 -> m68_19  [key=0, style=solid];
m68_18 -> m68_78  [key=2, style=dotted];
m68_18 -> m68_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_21 -> m68_22  [key=0, style=solid];
m68_22 -> m68_23  [key=0, style=solid];
m68_22 -> m68_79  [key=2, style=dotted];
m68_25 -> m68_26  [key=0, style=solid];
m68_25 -> m68_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_25 -> m68_15  [color=green, key=3, label="Local variable int i", style=bold];
m68_26 -> m68_27  [key=0, style=solid];
m68_26 -> m68_29  [key=0, style=solid];
m68_28 -> m68_26  [key=0, style=solid];
m68_28 -> m68_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_27 -> m68_28  [key=0, style=solid];
m68_27 -> m68_80  [key=2, style=dotted];
m68_27 -> m68_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_29 -> m68_30  [key=0, style=solid];
m68_29 -> m68_32  [key=0, style=solid];
m68_29 -> m68_79  [key=2, style=dotted];
m68_30 -> m68_31  [key=0, style=solid];
m68_31 -> m68_32  [key=0, style=solid];
m68_31 -> m68_79  [key=2, style=dotted];
m68_34 -> m68_35  [key=0, style=solid];
m68_34 -> m68_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_34 -> m68_15  [color=green, key=3, label="Local variable int i", style=bold];
m68_35 -> m68_36  [key=0, style=solid];
m68_35 -> m68_38  [key=0, style=solid];
m68_37 -> m68_35  [key=0, style=solid];
m68_37 -> m68_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_36 -> m68_37  [key=0, style=solid];
m68_36 -> m68_78  [key=2, style=dotted];
m68_36 -> m68_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_40 -> m68_41  [key=0, style=solid];
m68_40 -> m68_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_40 -> m68_15  [color=green, key=3, label="Local variable int i", style=bold];
m68_41 -> m68_42  [key=0, style=solid];
m68_41 -> m68_44  [key=0, style=solid];
m68_43 -> m68_41  [key=0, style=solid];
m68_43 -> m68_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_42 -> m68_43  [key=0, style=solid];
m68_42 -> m68_78  [key=2, style=dotted];
m68_42 -> m68_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_47 -> m68_48  [key=0, style=solid];
m68_47 -> m68_81  [key=2, style=dotted];
m68_47 -> m68_82  [key=2, style=dotted];
m68_47 -> m68_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_50 -> m68_51  [key=0, style=solid];
m68_50 -> m68_78  [key=2, style=dotted];
m68_50 -> m68_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_53 -> m68_54  [key=0, style=solid];
m68_53 -> m68_57  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_53 -> m68_15  [color=green, key=3, label="Local variable int i", style=bold];
m68_54 -> m68_55  [key=0, style=solid];
m68_54 -> m68_58  [key=0, style=solid];
m68_57 -> m68_54  [key=0, style=solid];
m68_57 -> m68_57  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_55 -> m68_56  [key=0, style=solid];
m68_55 -> m68_78  [key=2, style=dotted];
m68_55 -> m68_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_56 -> m68_57  [key=0, style=solid];
m68_56 -> m68_83  [key=2, style=dotted];
m68_60 -> m68_61  [key=0, style=solid];
m68_60 -> m68_84  [key=2, style=dotted];
m68_60 -> m68_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_61 -> m68_62  [key=0, style=solid];
m68_61 -> m68_8  [key=0, style=solid];
m68_61 -> m68_79  [key=2, style=dotted];
m68_62 -> m68_63  [key=0, style=solid];
m68_63 -> m68_8  [key=0, style=solid];
m68_63 -> m68_79  [key=2, style=dotted];
m68_65 -> m68_66  [key=0, style=solid];
m68_65 -> m68_72  [key=2, style=dotted];
m68_66 -> m68_0  [color=blue, key=0, style=bold];
m68_119 -> m68_120  [key=0, style=solid];
m68_86 -> m68_87  [key=0, style=solid];
m68_86 -> m68_88  [key=2, style=dotted];
m68_85 -> m68_86  [key=0, style=solid];
m68_89 -> m68_90  [key=0, style=solid];
m68_93 -> m68_94  [key=0, style=solid];
m68_97 -> m68_98  [key=0, style=solid];
m68_104 -> m68_105  [key=0, style=solid];
m68_104 -> m68_88  [key=2, style=dotted];
m68_103 -> m68_104  [key=0, style=solid];
m68_107 -> m68_108  [key=0, style=solid];
m68_107 -> m68_109  [key=2, style=dotted];
m68_106 -> m68_107  [key=0, style=solid];
m68_110 -> m68_111  [key=0, style=solid];
m68_114 -> m68_115  [key=0, style=solid];
m68_87 -> m68_85  [color=blue, key=0, style=bold];
m68_90 -> m68_91  [key=0, style=solid];
m68_90 -> m68_92  [key=2, style=dotted];
m68_91 -> m68_89  [color=blue, key=0, style=bold];
m68_94 -> m68_95  [key=0, style=solid];
m68_94 -> m68_96  [key=2, style=dotted];
m68_95 -> m68_93  [color=blue, key=0, style=bold];
m68_98 -> m68_99  [key=0, style=solid];
m68_98 -> m68_100  [key=2, style=dotted];
m68_98 -> m68_101  [key=2, style=dotted];
m68_98 -> m68_102  [key=2, style=dotted];
m68_99 -> m68_97  [color=blue, key=0, style=bold];
m68_105 -> m68_103  [color=blue, key=0, style=bold];
m68_108 -> m68_106  [color=blue, key=0, style=bold];
m68_111 -> m68_112  [key=0, style=solid];
m68_111 -> m68_113  [key=2, style=dotted];
m68_112 -> m68_110  [color=blue, key=0, style=bold];
m68_115 -> m68_116  [key=0, style=solid];
m68_115 -> m68_117  [key=0, style=solid];
m68_116 -> m68_118  [key=0, style=solid];
m68_116 -> m68_78  [key=2, style=dotted];
m68_116 -> m68_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_117 -> m68_118  [key=0, style=solid];
m68_117 -> m68_78  [key=2, style=dotted];
m68_117 -> m68_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_118 -> m68_114  [color=blue, key=0, style=bold];
m68_123 -> m68_124  [key=0, style=solid];
m68_120 -> m68_121  [key=0, style=solid];
m68_120 -> m68_122  [key=2, style=dotted];
m68_121 -> m68_119  [color=blue, key=0, style=bold];
m68_124 -> m68_125  [key=0, style=solid];
m68_124 -> m68_113  [key=2, style=dotted];
m68_125 -> m68_123  [color=blue, key=0, style=bold];
m68_68 -> m68_68  [color=green, key=3, label="Local variable int count", style=bold];
m68_126 -> m68_86  [color=darkseagreen4, key=1, label=number, style=dashed];
m68_127 -> m68_104  [color=darkseagreen4, key=1, label=number, style=dashed];
m68_128 -> m68_107  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m69_0 -> m69_1  [key=0, style=solid];
m69_1 -> m69_0  [color=blue, key=0, style=bold];
m69_1 -> m69_54  [key=2, style=dotted];
m69_1 -> m69_2  [key=0, style=solid];
m69_7 -> m69_8  [color=green, key=0, style=solid];
m69_7 -> m69_58  [color=green, key=2, style=dotted];
m69_7 -> m69_59  [color=green, key=2, style=dotted];
m69_7 -> m69_60  [color=green, key=2, style=dotted];
m69_7 -> m69_10  [color=green, key=1, label=pager, style=dashed];
m69_7 -> m69_15  [color=green, key=1, label=pager, style=dashed];
m69_7 -> m69_52  [color=green, key=1, label=pager, style=dashed];
m69_4 -> m69_7  [color=green, key=1, label=from, style=dashed];
m69_4 -> m69_5  [key=0, style=solid];
m69_4 -> m69_56  [key=2, style=dotted];
m69_5 -> m69_7  [color=green, key=1, label=perPage, style=dashed];
m69_5 -> m69_6  [color=green, key=0, style=solid];
m69_5 -> m69_56  [key=2, style=dotted];
m69_6 -> m69_7  [color=green, key=0, style=solid];
m69_6 -> m69_57  [color=green, key=2, style=dotted];
m69_6 -> m69_8  [color=green, key=1, label=monitor, style=dashed];
m69_8 -> m69_17  [color=green, key=1, label=jobs, style=dashed];
m69_8 -> m69_9  [key=0, style=solid];
m69_8 -> m69_61  [key=2, style=dotted];
m69_10 -> m69_11  [color=green, key=0, style=solid];
m69_10 -> m69_12  [key=0, style=solid];
m69_15 -> m69_16  [color=green, key=0, style=solid];
m69_15 -> m69_63  [key=2, style=dotted];
m69_15 -> m69_64  [key=2, style=dotted];
m69_15 -> m69_65  [key=2, style=dotted];
m69_52 -> m69_53  [key=0, style=solid];
m69_52 -> m69_69  [key=2, style=dotted];
m69_52 -> m69_64  [key=2, style=dotted];
m69_52 -> m69_65  [key=2, style=dotted];
m69_17 -> m69_18  [color=green, key=0, style=solid];
m69_17 -> m69_51  [color=green, key=0, style=solid];
m69_17 -> m69_19  [color=green, key=1, label=job, style=dashed];
m69_16 -> m69_17  [color=green, key=0, style=solid];
m69_16 -> m69_54  [color=green, key=2, style=dotted];
m69_50 -> m69_17  [color=green, key=0, style=solid];
m69_50 -> m69_54  [key=2, style=dotted];
m69_18 -> m69_19  [key=0, style=solid];
m69_18 -> m69_54  [key=2, style=dotted];
m69_51 -> m69_52  [key=0, style=solid];
m69_51 -> m69_54  [key=2, style=dotted];
m69_19 -> m69_21  [color=green, key=1, label=job, style=dashed];
m69_19 -> m69_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_19 -> m69_20  [key=0, style=solid];
m69_19 -> m69_62  [key=2, style=dotted];
m69_11 -> m69_53  [color=green, key=0, style=solid];
m69_11 -> m69_54  [color=green, key=2, style=dotted];
m69_21 -> m69_21  [color=green, key=1, label=job, style=dashed];
m69_21 -> m69_22  [color=green, key=0, style=solid];
m69_21 -> m69_62  [color=green, key=2, style=dotted];
m69_21 -> m69_23  [color=green, key=1, label=job, style=dashed];
m69_20 -> m69_21  [color=green, key=0, style=solid];
m69_20 -> m69_54  [key=2, style=dotted];
m69_22 -> m69_23  [color=green, key=0, style=solid];
m69_22 -> m69_54  [key=2, style=dotted];
m69_23 -> m69_23  [color=green, key=1, label=job, style=dashed];
m69_23 -> m69_24  [color=green, key=0, style=solid];
m69_23 -> m69_27  [color=green, key=0, style=solid];
m69_23 -> m69_25  [color=green, key=1, label=job, style=dashed];
m69_23 -> m69_28  [color=green, key=1, label=job, style=dashed];
m69_24 -> m69_54  [key=2, style=dotted];
m69_24 -> m69_25  [key=0, style=solid];
m69_27 -> m69_54  [key=2, style=dotted];
m69_27 -> m69_28  [key=0, style=solid];
m69_25 -> m69_62  [key=2, style=dotted];
m69_25 -> m69_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_25 -> m69_26  [key=0, style=solid];
m69_25 -> m69_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_28 -> m69_30  [color=green, key=1, label=job, style=dashed];
m69_28 -> m69_60  [key=2, style=dotted];
m69_28 -> m69_62  [key=2, style=dotted];
m69_28 -> m69_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_28 -> m69_29  [key=0, style=solid];
m69_30 -> m69_30  [color=green, key=1, label=job, style=dashed];
m69_30 -> m69_31  [color=green, key=0, style=solid];
m69_30 -> m69_66  [color=green, key=2, style=dotted];
m69_30 -> m69_65  [color=green, key=2, style=dotted];
m69_30 -> m69_32  [color=green, key=1, label=job, style=dashed];
m69_29 -> m69_30  [color=green, key=0, style=solid];
m69_29 -> m69_54  [key=2, style=dotted];
m69_31 -> m69_54  [key=2, style=dotted];
m69_31 -> m69_32  [key=0, style=solid];
m69_32 -> m69_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_32 -> m69_33  [key=0, style=solid];
m69_32 -> m69_34  [key=0, style=solid];
m69_32 -> m69_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_2 -> m69_3  [key=0, style=solid];
m69_2 -> m69_55  [key=2, style=dotted];
m69_9 -> m69_10  [key=0, style=solid];
m69_9 -> m69_54  [key=2, style=dotted];
m69_12 -> m69_54  [key=2, style=dotted];
m69_12 -> m69_13  [key=0, style=solid];
m69_13 -> m69_60  [key=2, style=dotted];
m69_13 -> m69_62  [key=2, style=dotted];
m69_13 -> m69_14  [key=0, style=solid];
m69_14 -> m69_15  [key=0, style=solid];
m69_14 -> m69_54  [key=2, style=dotted];
m69_26 -> m69_54  [key=2, style=dotted];
m69_26 -> m69_27  [key=0, style=solid];
m69_33 -> m69_54  [key=2, style=dotted];
m69_33 -> m69_34  [key=0, style=solid];
m69_34 -> m69_54  [key=2, style=dotted];
m69_34 -> m69_35  [key=0, style=solid];
m69_36 -> m69_50  [key=0, style=solid];
m69_36 -> m69_54  [key=2, style=dotted];
m69_37 -> m69_54  [key=2, style=dotted];
m69_37 -> m69_38  [key=0, style=solid];
m69_38 -> m69_60  [key=2, style=dotted];
m69_38 -> m69_62  [key=2, style=dotted];
m69_38 -> m69_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_38 -> m69_39  [key=0, style=solid];
m69_38 -> m69_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_39 -> m69_54  [key=2, style=dotted];
m69_39 -> m69_40  [key=0, style=solid];
m69_40 -> m69_65  [key=2, style=dotted];
m69_40 -> m69_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_40 -> m69_41  [key=0, style=solid];
m69_40 -> m69_67  [key=2, style=dotted];
m69_40 -> m69_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_41 -> m69_54  [key=2, style=dotted];
m69_41 -> m69_42  [key=0, style=solid];
m69_42 -> m69_54  [key=2, style=dotted];
m69_42 -> m69_43  [key=0, style=solid];
m69_44 -> m69_54  [key=2, style=dotted];
m69_44 -> m69_45  [key=0, style=solid];
m69_45 -> m69_62  [key=2, style=dotted];
m69_45 -> m69_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_45 -> m69_46  [key=0, style=solid];
m69_45 -> m69_68  [key=2, style=dotted];
m69_45 -> m69_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_46 -> m69_54  [key=2, style=dotted];
m69_46 -> m69_47  [key=0, style=solid];
m69_47 -> m69_62  [key=2, style=dotted];
m69_47 -> m69_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_47 -> m69_48  [key=0, style=solid];
m69_48 -> m69_54  [key=2, style=dotted];
m69_48 -> m69_49  [key=0, style=solid];
m69_49 -> m69_50  [key=0, style=solid];
m69_49 -> m69_54  [key=2, style=dotted];
m69_3 -> m69_4  [key=0, style=solid];
m69_35 -> m69_36  [key=0, style=solid];
m69_35 -> m69_37  [key=0, style=solid];
m69_35 -> m69_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_35 -> m69_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_43 -> m69_44  [key=0, style=solid];
m69_43 -> m69_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_43 -> m69_49  [key=0, style=solid];
m69_43 -> m69_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m69_53 -> m69_0  [color=blue, key=0, style=bold];
m69_70 -> m69_7  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_11  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_16  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_21  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_30  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m69_70 -> m69_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m70_0 -> m70_1  [key=0, style=solid];
m70_1 -> m70_2  [key=0, style=solid];
m70_2 -> m70_3  [key=0, style=solid];
m70_2 -> m70_4  [key=2, style=dotted];
m70_3 -> m70_0  [color=blue, key=0, style=bold];
m70_5 -> m70_6  [key=0, style=solid];
m70_6 -> m70_7  [key=0, style=solid];
m70_6 -> m70_8  [key=2, style=dotted];
m70_7 -> m70_5  [color=blue, key=0, style=bold];
m70_9 -> m70_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel", style=dashed];
m70_9 -> m70_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel", style=dashed];
m70_9 -> m70_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel", style=dashed];
m71_6 -> m71_7  [color=green, key=0, style=solid];
m71_6 -> m71_9  [color=green, key=1, label=string, style=dashed];
m71_6 -> m71_11  [color=green, key=1, label=string, style=dashed];
m71_6 -> m71_13  [color=green, key=1, label=string, style=dashed];
m71_6 -> m71_14  [color=green, key=1, label=string, style=dashed];
m71_6 -> m71_15  [color=green, key=1, label=string, style=dashed];
m71_6 -> m71_16  [color=green, key=1, label=int, style=dashed];
m71_7 -> m71_8  [color=green, key=0, style=solid];
m71_7 -> m71_9  [color=green, key=0, style=solid];
m71_8 -> m71_18  [color=green, key=0, style=solid];
m71_8 -> m71_19  [color=green, key=2, style=dotted];
m71_9 -> m71_10  [color=green, key=0, style=solid];
m71_9 -> m71_11  [color=green, key=0, style=solid];
m71_10 -> m71_18  [color=green, key=0, style=solid];
m71_10 -> m71_19  [color=green, key=2, style=dotted];
m71_11 -> m71_12  [color=green, key=0, style=solid];
m71_11 -> m71_13  [color=green, key=0, style=solid];
m71_12 -> m71_18  [color=green, key=0, style=solid];
m71_12 -> m71_19  [color=green, key=2, style=dotted];
m71_13 -> m71_14  [color=green, key=0, style=solid];
m71_14 -> m71_15  [color=green, key=0, style=solid];
m71_15 -> m71_16  [color=green, key=0, style=solid];
m71_16 -> m71_17  [color=green, key=0, style=solid];
m71_17 -> m71_18  [color=green, key=0, style=solid];
m71_18 -> m71_6  [color=blue, key=0, style=bold];
m71_20 -> m71_13  [color=green, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration", style=dashed];
m71_20 -> m71_14  [color=green, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration", style=dashed];
m71_20 -> m71_15  [color=green, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration", style=dashed];
m71_20 -> m71_16  [color=green, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration", style=dashed];
m71_20 -> m71_17  [color=green, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration", style=dashed];
m72_0 -> m72_1  [color=green, key=0, style=solid];
m72_1 -> m72_2  [color=green, key=0, style=solid];
m72_1 -> m72_58  [color=green, key=2, style=dotted];
m72_2 -> m72_3  [color=green, key=0, style=solid];
m72_2 -> m72_59  [color=green, key=2, style=dotted];
m72_3 -> m72_4  [color=green, key=0, style=solid];
m72_3 -> m72_60  [color=green, key=2, style=dotted];
m72_3 -> m72_61  [color=green, key=2, style=dotted];
m72_4 -> m72_5  [color=green, key=0, style=solid];
m72_4 -> m72_62  [color=green, key=2, style=dotted];
m72_4 -> m72_10  [color=green, key=1, label=server, style=dashed];
m72_5 -> m72_6  [color=green, key=0, style=solid];
m72_5 -> m72_44  [color=green, key=1, label=count, style=dashed];
m72_10 -> m72_11  [color=green, key=0, style=solid];
m72_10 -> m72_65  [color=green, key=2, style=dotted];
m72_6 -> m72_7  [color=green, key=0, style=solid];
m72_6 -> m72_55  [color=green, key=0, style=solid];
m72_44 -> m72_44  [color=darkseagreen4, key=1, label=count, style=dashed];
m72_44 -> m72_45  [key=0, style=solid];
m72_44 -> m72_94  [color=darkseagreen4, key=1, label=number, style=dashed];
m72_9 -> m72_10  [color=green, key=0, style=solid];
m72_9 -> m72_11  [color=green, key=0, style=solid];
m72_9 -> m72_64  [color=green, key=2, style=dotted];
m72_11 -> m72_12  [color=green, key=0, style=solid];
m72_11 -> m72_21  [color=green, key=0, style=solid];
m72_11 -> m72_66  [color=green, key=2, style=dotted];
m72_49 -> m72_6  [color=green, key=0, style=solid];
m72_49 -> m72_50  [key=0, style=solid];
m72_49 -> m72_66  [key=2, style=dotted];
m72_52 -> m72_6  [color=green, key=0, style=solid];
m72_52 -> m72_53  [key=0, style=solid];
m72_52 -> m72_70  [key=2, style=dotted];
m72_54 -> m72_6  [color=green, key=0, style=solid];
m72_54 -> m72_70  [key=2, style=dotted];
m72_7 -> m72_8  [color=green, key=0, style=solid];
m72_7 -> m72_63  [color=green, key=2, style=dotted];
m72_7 -> m72_9  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_11  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_12  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_21  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_22  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_30  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_31  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_36  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_37  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_42  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_43  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_46  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_49  [color=green, key=1, label=command, style=dashed];
m72_7 -> m72_50  [color=green, key=1, label=command, style=dashed];
m72_55 -> m72_56  [key=0, style=solid];
m72_55 -> m72_70  [key=2, style=dotted];
m72_8 -> m72_9  [color=green, key=0, style=solid];
m72_8 -> m72_55  [color=green, key=0, style=solid];
m72_8 -> m72_64  [color=green, key=2, style=dotted];
m72_12 -> m72_13  [color=green, key=0, style=solid];
m72_12 -> m72_67  [color=green, key=2, style=dotted];
m72_12 -> m72_68  [color=green, key=2, style=dotted];
m72_12 -> m72_14  [color=green, key=1, label=workCount, style=dashed];
m72_21 -> m72_22  [color=green, key=0, style=solid];
m72_21 -> m72_30  [color=green, key=0, style=solid];
m72_21 -> m72_66  [color=green, key=2, style=dotted];
m72_22 -> m72_23  [color=green, key=0, style=solid];
m72_22 -> m72_67  [color=green, key=2, style=dotted];
m72_22 -> m72_68  [color=green, key=2, style=dotted];
m72_22 -> m72_24  [color=green, key=1, label=workCount, style=dashed];
m72_30 -> m72_31  [color=green, key=0, style=solid];
m72_30 -> m72_36  [color=green, key=0, style=solid];
m72_30 -> m72_66  [color=green, key=2, style=dotted];
m72_31 -> m72_32  [color=green, key=0, style=solid];
m72_31 -> m72_67  [color=green, key=2, style=dotted];
m72_31 -> m72_68  [color=green, key=2, style=dotted];
m72_31 -> m72_33  [color=green, key=1, label=workCount, style=dashed];
m72_36 -> m72_37  [key=0, style=solid];
m72_36 -> m72_42  [key=0, style=solid];
m72_36 -> m72_66  [key=2, style=dotted];
m72_37 -> m72_38  [key=0, style=solid];
m72_37 -> m72_67  [key=2, style=dotted];
m72_37 -> m72_68  [key=2, style=dotted];
m72_37 -> m72_39  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m72_42 -> m72_43  [key=0, style=solid];
m72_42 -> m72_46  [key=0, style=solid];
m72_42 -> m72_66  [key=2, style=dotted];
m72_43 -> m72_44  [key=0, style=solid];
m72_43 -> m72_67  [key=2, style=dotted];
m72_43 -> m72_68  [key=2, style=dotted];
m72_43 -> m72_45  [color=darkseagreen4, key=1, label=seconds, style=dashed];
m72_46 -> m72_49  [key=0, style=solid];
m72_46 -> m72_47  [key=0, style=solid];
m72_46 -> m72_66  [key=2, style=dotted];
m72_50 -> m72_51  [key=0, style=solid];
m72_50 -> m72_67  [key=2, style=dotted];
m72_50 -> m72_68  [key=2, style=dotted];
m72_13 -> m72_14  [color=green, key=0, style=solid];
m72_13 -> m72_15  [color=green, key=1, label=i, style=dashed];
m72_13 -> m72_17  [color=green, key=1, label=i, style=dashed];
m72_14 -> m72_15  [color=green, key=0, style=solid];
m72_14 -> m72_18  [color=green, key=0, style=solid];
m72_18 -> m72_21  [color=green, key=0, style=solid];
m72_18 -> m72_19  [color=green, key=0, style=solid];
m72_18 -> m72_70  [color=green, key=2, style=dotted];
m72_20 -> m72_21  [color=green, key=0, style=solid];
m72_20 -> m72_70  [color=green, key=2, style=dotted];
m72_23 -> m72_24  [color=green, key=0, style=solid];
m72_23 -> m72_26  [color=green, key=1, label=i, style=dashed];
m72_24 -> m72_25  [color=green, key=0, style=solid];
m72_24 -> m72_27  [color=green, key=0, style=solid];
m72_27 -> m72_30  [color=green, key=0, style=solid];
m72_27 -> m72_28  [color=green, key=0, style=solid];
m72_27 -> m72_70  [color=green, key=2, style=dotted];
m72_29 -> m72_30  [color=green, key=0, style=solid];
m72_29 -> m72_70  [color=green, key=2, style=dotted];
m72_32 -> m72_33  [color=green, key=0, style=solid];
m72_32 -> m72_35  [color=green, key=1, label=i, style=dashed];
m72_33 -> m72_34  [color=green, key=0, style=solid];
m72_33 -> m72_36  [color=green, key=0, style=solid];
m72_15 -> m72_16  [color=green, key=0, style=solid];
m72_15 -> m72_76  [color=green, key=1, label=number, style=dashed];
m72_17 -> m72_14  [color=green, key=0, style=solid];
m72_17 -> m72_17  [color=green, key=1, label=i, style=dashed];
m72_16 -> m72_17  [color=green, key=0, style=solid];
m72_16 -> m72_69  [color=green, key=2, style=dotted];
m72_16 -> m72_75  [color=green, key=1, label="lambda expression", style=dashed];
m72_19 -> m72_20  [color=green, key=0, style=solid];
m72_26 -> m72_24  [color=green, key=0, style=solid];
m72_26 -> m72_26  [color=green, key=1, label=i, style=dashed];
m72_25 -> m72_26  [color=green, key=0, style=solid];
m72_25 -> m72_71  [color=green, key=2, style=dotted];
m72_25 -> m72_79  [color=green, key=1, label="lambda expression", style=dashed];
m72_28 -> m72_29  [color=green, key=0, style=solid];
m72_35 -> m72_33  [color=green, key=0, style=solid];
m72_35 -> m72_35  [color=green, key=1, label=i, style=dashed];
m72_34 -> m72_35  [color=green, key=0, style=solid];
m72_34 -> m72_69  [color=green, key=2, style=dotted];
m72_34 -> m72_83  [color=green, key=1, label="lambda expression", style=dashed];
m72_45 -> m72_46  [key=0, style=solid];
m72_45 -> m72_72  [key=2, style=dotted];
m72_45 -> m72_73  [key=2, style=dotted];
m72_45 -> m72_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_48 -> m72_49  [key=0, style=solid];
m72_48 -> m72_70  [key=2, style=dotted];
m72_51 -> m72_52  [key=0, style=solid];
m72_51 -> m72_74  [key=2, style=dotted];
m72_51 -> m72_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_53 -> m72_54  [key=0, style=solid];
m72_56 -> m72_63  [key=2, style=dotted];
m72_56 -> m72_57  [key=0, style=solid];
m72_38 -> m72_39  [key=0, style=solid];
m72_38 -> m72_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m72_39 -> m72_42  [key=0, style=solid];
m72_39 -> m72_40  [key=0, style=solid];
m72_47 -> m72_69  [key=2, style=dotted];
m72_47 -> m72_48  [key=0, style=solid];
m72_47 -> m72_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_40 -> m72_69  [key=2, style=dotted];
m72_40 -> m72_41  [key=0, style=solid];
m72_40 -> m72_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_41 -> m72_39  [key=0, style=solid];
m72_41 -> m72_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m72_57 -> m72_0  [color=blue, key=0, style=bold];
m72_109 -> m72_110  [key=0, style=solid];
m72_76 -> m72_77  [color=green, key=0, style=solid];
m72_76 -> m72_78  [color=green, key=2, style=dotted];
m72_75 -> m72_76  [color=green, key=0, style=solid];
m72_77 -> m72_75  [color=blue, key=0, style=bold];
m72_79 -> m72_80  [color=green, key=0, style=solid];
m72_83 -> m72_84  [color=green, key=0, style=solid];
m72_80 -> m72_81  [color=green, key=0, style=solid];
m72_80 -> m72_82  [color=green, key=2, style=dotted];
m72_81 -> m72_79  [color=blue, key=0, style=bold];
m72_84 -> m72_85  [color=green, key=0, style=solid];
m72_84 -> m72_86  [color=green, key=2, style=dotted];
m72_85 -> m72_83  [color=blue, key=0, style=bold];
m72_94 -> m72_78  [key=2, style=dotted];
m72_94 -> m72_95  [key=0, style=solid];
m72_102 -> m72_69  [key=2, style=dotted];
m72_102 -> m72_104  [key=0, style=solid];
m72_102 -> m72_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_103 -> m72_69  [key=2, style=dotted];
m72_103 -> m72_104  [key=0, style=solid];
m72_103 -> m72_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_93 -> m72_94  [key=0, style=solid];
m72_95 -> m72_93  [color=blue, key=0, style=bold];
m72_100 -> m72_101  [key=0, style=solid];
m72_96 -> m72_97  [key=0, style=solid];
m72_87 -> m72_88  [key=0, style=solid];
m72_101 -> m72_102  [key=0, style=solid];
m72_101 -> m72_103  [key=0, style=solid];
m72_104 -> m72_100  [color=blue, key=0, style=bold];
m72_105 -> m72_106  [key=0, style=solid];
m72_98 -> m72_96  [color=blue, key=0, style=bold];
m72_97 -> m72_98  [key=0, style=solid];
m72_97 -> m72_99  [key=2, style=dotted];
m72_89 -> m72_87  [color=blue, key=0, style=bold];
m72_88 -> m72_89  [key=0, style=solid];
m72_88 -> m72_90  [key=2, style=dotted];
m72_88 -> m72_91  [key=2, style=dotted];
m72_88 -> m72_92  [key=2, style=dotted];
m72_107 -> m72_105  [color=blue, key=0, style=bold];
m72_106 -> m72_107  [key=0, style=solid];
m72_106 -> m72_108  [key=2, style=dotted];
m72_110 -> m72_111  [key=0, style=solid];
m72_110 -> m72_112  [key=2, style=dotted];
m72_111 -> m72_109  [color=blue, key=0, style=bold];
m72_113 -> m72_76  [color=green, key=1, label=number, style=dashed];
m72_114 -> m72_94  [color=darkseagreen4, key=1, label=number, style=dashed];
m73_637 -> m73_650  [key=0, style=solid];
m73_637 -> m73_651  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.LoupeLogProvider.WriteDelegate", style=dashed];
m73_650 -> m73_651  [key=0, style=solid];
m73_651 -> m73_652  [key=0, style=solid];
m73_652 -> m73_653  [key=0, style=solid];
m73_653 -> m73_637  [color=blue, key=0, style=bold];
m73_634 -> m73_635  [key=0, style=solid];
m73_635 -> m73_636  [key=0, style=solid];
m73_635 -> m73_637  [key=2, style=dotted];
m73_636 -> m73_634  [color=blue, key=0, style=bold];
m73_54 -> m73_55  [key=0, style=solid];
m73_54 -> m73_56  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_55 -> m73_56  [key=0, style=solid];
m73_55 -> m73_57  [key=0, style=solid];
m73_55 -> m73_53  [key=2, style=dotted];
m73_56 -> m73_57  [key=0, style=solid];
m73_56 -> m73_41  [key=2, style=dotted];
m73_57 -> m73_54  [color=blue, key=0, style=bold];
m73_348 -> m73_360  [key=0, style=solid];
m73_360 -> m73_361  [key=0, style=solid];
m73_361 -> m73_348  [color=blue, key=0, style=bold];
m73_6 -> m73_129  [key=0, style=solid];
m73_129 -> m73_130  [key=0, style=solid];
m73_129 -> m73_131  [key=0, style=solid];
m73_130 -> m73_131  [key=0, style=solid];
m73_130 -> m73_132  [key=2, style=dotted];
m73_131 -> m73_6  [color=blue, key=0, style=bold];
m73_203 -> m73_204  [key=0, style=solid];
m73_204 -> m73_205  [key=0, style=solid];
m73_205 -> m73_203  [color=blue, key=0, style=bold];
m73_686 -> m73_709  [key=0, style=solid];
m73_709 -> m73_710  [key=0, style=solid];
m73_710 -> m73_686  [color=blue, key=0, style=bold];
m73_687 -> m73_688  [key=0, style=solid];
m73_687 -> m73_691  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_687 -> m73_692  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_687 -> m73_693  [color=darkseagreen4, key=1, label=object, style=dashed];
m73_687 -> m73_694  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m73_687 -> m73_695  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m73_687 -> m73_696  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m73_687 -> m73_697  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m73_688 -> m73_689  [key=0, style=solid];
m73_688 -> m73_700  [key=2, style=dotted];
m73_688 -> m73_690  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
m73_688 -> m73_691  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
m73_688 -> m73_692  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
m73_688 -> m73_693  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
m73_688 -> m73_695  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
m73_688 -> m73_696  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
m73_688 -> m73_697  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
m73_688 -> m73_698  [color=darkseagreen4, key=1, label=stringBuilder, style=dashed];
m73_691 -> m73_692  [key=0, style=solid];
m73_691 -> m73_703  [key=2, style=dotted];
m73_691 -> m73_704  [key=2, style=dotted];
m73_691 -> m73_705  [key=2, style=dotted];
m73_691 -> m73_702  [key=2, style=dotted];
m73_692 -> m73_693  [key=0, style=solid];
m73_692 -> m73_702  [key=2, style=dotted];
m73_693 -> m73_694  [key=0, style=solid];
m73_693 -> m73_706  [key=2, style=dotted];
m73_694 -> m73_695  [key=0, style=solid];
m73_694 -> m73_698  [key=0, style=solid];
m73_695 -> m73_696  [key=0, style=solid];
m73_695 -> m73_702  [key=2, style=dotted];
m73_695 -> m73_707  [key=2, style=dotted];
m73_695 -> m73_706  [key=2, style=dotted];
m73_696 -> m73_697  [key=0, style=solid];
m73_696 -> m73_702  [key=2, style=dotted];
m73_697 -> m73_698  [key=0, style=solid];
m73_697 -> m73_702  [key=2, style=dotted];
m73_689 -> m73_690  [key=0, style=solid];
m73_689 -> m73_701  [key=2, style=dotted];
m73_689 -> m73_702  [key=2, style=dotted];
m73_690 -> m73_691  [key=0, style=solid];
m73_690 -> m73_702  [key=2, style=dotted];
m73_698 -> m73_699  [key=0, style=solid];
m73_698 -> m73_708  [key=2, style=dotted];
m73_699 -> m73_687  [color=blue, key=0, style=bold];
m73_49 -> m73_50  [key=0, style=solid];
m73_49 -> m73_51  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_50 -> m73_51  [key=0, style=solid];
m73_50 -> m73_52  [key=0, style=solid];
m73_50 -> m73_53  [key=2, style=dotted];
m73_51 -> m73_52  [key=0, style=solid];
m73_51 -> m73_36  [key=2, style=dotted];
m73_51 -> m73_0  [key=2, style=dotted];
m73_52 -> m73_49  [color=blue, key=0, style=bold];
m73_520 -> m73_521  [key=0, style=solid];
m73_521 -> m73_522  [key=0, style=solid];
m73_521 -> m73_241  [key=2, style=dotted];
m73_522 -> m73_520  [color=blue, key=0, style=bold];
m73_37 -> m73_38  [key=0, style=solid];
m73_37 -> m73_39  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_38 -> m73_39  [key=0, style=solid];
m73_38 -> m73_40  [key=0, style=solid];
m73_38 -> m73_35  [key=2, style=dotted];
m73_39 -> m73_40  [key=0, style=solid];
m73_39 -> m73_41  [key=2, style=dotted];
m73_40 -> m73_37  [color=blue, key=0, style=bold];
m73_23 -> m73_24  [key=0, style=solid];
m73_23 -> m73_25  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_24 -> m73_25  [key=0, style=solid];
m73_24 -> m73_6  [key=2, style=dotted];
m73_25 -> m73_26  [key=0, style=solid];
m73_25 -> m73_0  [key=2, style=dotted];
m73_26 -> m73_23  [color=blue, key=0, style=bold];
m73_78 -> m73_79  [key=0, style=solid];
m73_78 -> m73_80  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_79 -> m73_80  [key=0, style=solid];
m73_79 -> m73_6  [key=2, style=dotted];
m73_80 -> m73_81  [key=0, style=solid];
m73_80 -> m73_0  [key=2, style=dotted];
m73_81 -> m73_78  [color=blue, key=0, style=bold];
m73_42 -> m73_43  [key=0, style=solid];
m73_42 -> m73_44  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_43 -> m73_44  [key=0, style=solid];
m73_43 -> m73_45  [key=0, style=solid];
m73_43 -> m73_35  [key=2, style=dotted];
m73_44 -> m73_45  [key=0, style=solid];
m73_44 -> m73_36  [key=2, style=dotted];
m73_44 -> m73_0  [key=2, style=dotted];
m73_45 -> m73_42  [color=blue, key=0, style=bold];
m73_517 -> m73_567  [key=0, style=solid];
m73_567 -> m73_568  [key=0, style=solid];
m73_568 -> m73_517  [color=blue, key=0, style=bold];
m73_654 -> m73_655  [key=0, style=solid];
m73_654 -> m73_657  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_655 -> m73_656  [key=0, style=solid];
m73_655 -> m73_657  [key=0, style=solid];
m73_657 -> m73_658  [key=0, style=solid];
m73_657 -> m73_660  [key=2, style=dotted];
m73_657 -> m73_220  [key=2, style=dotted];
m73_657 -> m73_661  [key=2, style=dotted];
m73_656 -> m73_659  [key=0, style=solid];
m73_658 -> m73_659  [key=0, style=solid];
m73_659 -> m73_654  [color=blue, key=0, style=bold];
m73_146 -> m73_147  [key=0, style=solid];
m73_147 -> m73_148  [key=0, style=solid];
m73_147 -> m73_149  [key=2, style=dotted];
m73_148 -> m73_146  [color=blue, key=0, style=bold];
m73_11 -> m73_12  [key=0, style=solid];
m73_11 -> m73_13  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_12 -> m73_13  [key=0, style=solid];
m73_12 -> m73_6  [key=2, style=dotted];
m73_13 -> m73_14  [key=0, style=solid];
m73_13 -> m73_0  [key=2, style=dotted];
m73_14 -> m73_11  [color=blue, key=0, style=bold];
m73_717 -> m73_718  [key=0, style=solid];
m73_717 -> m73_720  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_718 -> m73_719  [key=0, style=solid];
m73_718 -> m73_727  [key=2, style=dotted];
m73_718 -> m73_724  [color=darkseagreen4, key=1, label=formattedMessage, style=dashed];
m73_718 -> m73_725  [color=darkseagreen4, key=1, label=formattedMessage, style=dashed];
m73_720 -> m73_721  [key=0, style=solid];
m73_720 -> m73_725  [key=0, style=solid];
m73_720 -> m73_728  [key=2, style=dotted];
m73_720 -> m73_723  [color=darkseagreen4, key=1, label=color, style=dashed];
m73_719 -> m73_720  [key=0, style=solid];
m73_724 -> m73_726  [key=0, style=solid];
m73_724 -> m73_729  [key=2, style=dotted];
m73_725 -> m73_726  [key=0, style=solid];
m73_725 -> m73_729  [key=2, style=dotted];
m73_721 -> m73_722  [key=0, style=solid];
m73_723 -> m73_724  [key=0, style=solid];
m73_722 -> m73_723  [key=0, style=solid];
m73_726 -> m73_717  [color=blue, key=0, style=bold];
m73_91 -> m73_92  [key=0, style=solid];
m73_91 -> m73_93  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_92 -> m73_93  [key=0, style=solid];
m73_92 -> m73_94  [key=0, style=solid];
m73_92 -> m73_86  [key=2, style=dotted];
m73_93 -> m73_94  [key=0, style=solid];
m73_93 -> m73_36  [key=2, style=dotted];
m73_93 -> m73_0  [key=2, style=dotted];
m73_94 -> m73_91  [color=blue, key=0, style=bold];
m73_116 -> m73_117  [key=0, style=solid];
m73_116 -> m73_118  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_117 -> m73_118  [key=0, style=solid];
m73_117 -> m73_119  [key=0, style=solid];
m73_117 -> m73_120  [key=2, style=dotted];
m73_118 -> m73_119  [key=0, style=solid];
m73_118 -> m73_36  [key=2, style=dotted];
m73_118 -> m73_0  [key=2, style=dotted];
m73_119 -> m73_116  [color=blue, key=0, style=bold];
m73_351 -> m73_352  [key=0, style=solid];
m73_352 -> m73_353  [key=0, style=solid];
m73_352 -> m73_241  [key=2, style=dotted];
m73_353 -> m73_351  [color=blue, key=0, style=bold];
m73_741 -> m73_742  [key=0, style=solid];
m73_742 -> m73_743  [key=0, style=solid];
m73_742 -> m73_744  [key=2, style=dotted];
m73_742 -> m73_220  [key=2, style=dotted];
m73_743 -> m73_741  [color=blue, key=0, style=bold];
m73_238 -> m73_239  [key=0, style=solid];
m73_239 -> m73_240  [key=0, style=solid];
m73_239 -> m73_241  [key=2, style=dotted];
m73_240 -> m73_238  [color=blue, key=0, style=bold];
m73_7 -> m73_8  [key=0, style=solid];
m73_7 -> m73_9  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_8 -> m73_9  [key=0, style=solid];
m73_8 -> m73_6  [key=2, style=dotted];
m73_9 -> m73_10  [key=0, style=solid];
m73_9 -> m73_0  [key=2, style=dotted];
m73_10 -> m73_7  [color=blue, key=0, style=bold];
m73_87 -> m73_88  [key=0, style=solid];
m73_87 -> m73_89  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_88 -> m73_89  [key=0, style=solid];
m73_88 -> m73_90  [key=0, style=solid];
m73_88 -> m73_86  [key=2, style=dotted];
m73_89 -> m73_90  [key=0, style=solid];
m73_89 -> m73_41  [key=2, style=dotted];
m73_90 -> m73_87  [color=blue, key=0, style=bold];
m73_287 -> m73_294  [key=0, style=solid];
m73_287 -> m73_297  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_287 -> m73_301  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_287 -> m73_305  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_287 -> m73_309  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_287 -> m73_313  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_287 -> m73_316  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_294 -> m73_295  [key=0, style=solid];
m73_294 -> m73_299  [key=0, style=solid];
m73_294 -> m73_303  [key=0, style=solid];
m73_294 -> m73_307  [key=0, style=solid];
m73_294 -> m73_311  [key=0, style=solid];
m73_294 -> m73_315  [key=0, style=solid];
m73_297 -> m73_298  [key=0, style=solid];
m73_297 -> m73_220  [key=2, style=dotted];
m73_297 -> m73_320  [key=2, style=dotted];
m73_301 -> m73_302  [key=0, style=solid];
m73_301 -> m73_220  [key=2, style=dotted];
m73_301 -> m73_321  [key=2, style=dotted];
m73_305 -> m73_306  [key=0, style=solid];
m73_305 -> m73_220  [key=2, style=dotted];
m73_305 -> m73_322  [key=2, style=dotted];
m73_309 -> m73_310  [key=0, style=solid];
m73_309 -> m73_220  [key=2, style=dotted];
m73_309 -> m73_323  [key=2, style=dotted];
m73_313 -> m73_314  [key=0, style=solid];
m73_313 -> m73_220  [key=2, style=dotted];
m73_313 -> m73_324  [key=2, style=dotted];
m73_316 -> m73_317  [key=0, style=solid];
m73_316 -> m73_220  [key=2, style=dotted];
m73_316 -> m73_325  [key=2, style=dotted];
m73_295 -> m73_296  [key=0, style=solid];
m73_299 -> m73_300  [key=0, style=solid];
m73_303 -> m73_304  [key=0, style=solid];
m73_307 -> m73_308  [key=0, style=solid];
m73_311 -> m73_312  [key=0, style=solid];
m73_315 -> m73_316  [key=0, style=solid];
m73_315 -> m73_318  [key=0, style=solid];
m73_296 -> m73_297  [key=0, style=solid];
m73_296 -> m73_318  [key=0, style=solid];
m73_318 -> m73_319  [key=0, style=solid];
m73_298 -> m73_319  [key=0, style=solid];
m73_300 -> m73_301  [key=0, style=solid];
m73_300 -> m73_318  [key=0, style=solid];
m73_302 -> m73_319  [key=0, style=solid];
m73_304 -> m73_305  [key=0, style=solid];
m73_304 -> m73_318  [key=0, style=solid];
m73_306 -> m73_319  [key=0, style=solid];
m73_308 -> m73_309  [key=0, style=solid];
m73_308 -> m73_318  [key=0, style=solid];
m73_310 -> m73_319  [key=0, style=solid];
m73_312 -> m73_313  [key=0, style=solid];
m73_312 -> m73_318  [key=0, style=solid];
m73_314 -> m73_319  [key=0, style=solid];
m73_317 -> m73_319  [key=0, style=solid];
m73_319 -> m73_287  [color=blue, key=0, style=bold];
m73_479 -> m73_480  [key=0, style=solid];
m73_479 -> m73_481  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_479 -> m73_483  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m73_479 -> m73_484  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_479 -> m73_485  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_480 -> m73_481  [key=0, style=solid];
m73_480 -> m73_488  [key=2, style=dotted];
m73_480 -> m73_482  [color=darkseagreen4, key=1, label=severity, style=dashed];
m73_480 -> m73_485  [color=darkseagreen4, key=1, label=severity, style=dashed];
m73_481 -> m73_482  [key=0, style=solid];
m73_481 -> m73_483  [key=0, style=solid];
m73_483 -> m73_484  [key=0, style=solid];
m73_483 -> m73_485  [key=0, style=solid];
m73_484 -> m73_487  [key=0, style=solid];
m73_484 -> m73_490  [key=2, style=dotted];
m73_485 -> m73_486  [key=0, style=solid];
m73_485 -> m73_220  [key=2, style=dotted];
m73_485 -> m73_491  [key=2, style=dotted];
m73_482 -> m73_487  [key=0, style=solid];
m73_482 -> m73_489  [key=2, style=dotted];
m73_486 -> m73_487  [key=0, style=solid];
m73_487 -> m73_479  [color=blue, key=0, style=bold];
m73_488 -> m73_497  [key=0, style=solid];
m73_497 -> m73_498  [key=0, style=solid];
m73_497 -> m73_500  [key=0, style=solid];
m73_497 -> m73_502  [key=0, style=solid];
m73_497 -> m73_504  [key=0, style=solid];
m73_497 -> m73_506  [key=0, style=solid];
m73_498 -> m73_499  [key=0, style=solid];
m73_500 -> m73_501  [key=0, style=solid];
m73_502 -> m73_503  [key=0, style=solid];
m73_504 -> m73_505  [key=0, style=solid];
m73_506 -> m73_507  [key=0, style=solid];
m73_499 -> m73_507  [key=0, style=solid];
m73_501 -> m73_507  [key=0, style=solid];
m73_503 -> m73_507  [key=0, style=solid];
m73_505 -> m73_507  [key=0, style=solid];
m73_507 -> m73_488  [color=blue, key=0, style=bold];
m73_678 -> m73_679  [key=0, style=solid];
m73_679 -> m73_680  [key=0, style=solid];
m73_680 -> m73_681  [key=0, style=solid];
m73_680 -> m73_682  [key=2, style=dotted];
m73_681 -> m73_678  [color=blue, key=0, style=bold];
m73_536 -> m73_537  [key=0, style=solid];
m73_537 -> m73_538  [key=0, style=solid];
m73_537 -> m73_241  [key=2, style=dotted];
m73_537 -> m73_539  [color=darkseagreen4, key=1, label=logEventTypeType, style=dashed];
m73_537 -> m73_540  [color=darkseagreen4, key=1, label=logEventTypeType, style=dashed];
m73_537 -> m73_541  [color=darkseagreen4, key=1, label=logEventTypeType, style=dashed];
m73_537 -> m73_542  [color=darkseagreen4, key=1, label=logEventTypeType, style=dashed];
m73_537 -> m73_543  [color=darkseagreen4, key=1, label=logEventTypeType, style=dashed];
m73_537 -> m73_549  [color=darkseagreen4, key=1, label=logEventTypeType, style=dashed];
m73_537 -> m73_552  [color=darkseagreen4, key=1, label=logEventTypeType, style=dashed];
m73_537 -> m73_557  [color=darkseagreen4, key=1, label=logEventTypeType, style=dashed];
m73_538 -> m73_539  [key=0, style=solid];
m73_538 -> m73_562  [key=2, style=dotted];
m73_539 -> m73_540  [key=0, style=solid];
m73_539 -> m73_562  [key=2, style=dotted];
m73_540 -> m73_541  [key=0, style=solid];
m73_540 -> m73_562  [key=2, style=dotted];
m73_541 -> m73_542  [key=0, style=solid];
m73_541 -> m73_562  [key=2, style=dotted];
m73_542 -> m73_543  [key=0, style=solid];
m73_542 -> m73_562  [key=2, style=dotted];
m73_543 -> m73_544  [key=0, style=solid];
m73_543 -> m73_562  [key=2, style=dotted];
m73_549 -> m73_550  [key=0, style=solid];
m73_549 -> m73_565  [key=2, style=dotted];
m73_549 -> m73_555  [color=darkseagreen4, key=1, label=levelCast, style=dashed];
m73_549 -> m73_559  [color=darkseagreen4, key=1, label=levelCast, style=dashed];
m73_552 -> m73_553  [key=0, style=solid];
m73_552 -> m73_248  [key=2, style=dotted];
m73_552 -> m73_555  [color=darkseagreen4, key=1, label=writeMethodInfo, style=dashed];
m73_557 -> m73_558  [key=0, style=solid];
m73_557 -> m73_248  [key=2, style=dotted];
m73_557 -> m73_559  [color=darkseagreen4, key=1, label=writeExceptionMethodInfo, style=dashed];
m73_544 -> m73_545  [key=0, style=solid];
m73_544 -> m73_241  [key=2, style=dotted];
m73_544 -> m73_547  [color=darkseagreen4, key=1, label=loggerType, style=dashed];
m73_544 -> m73_552  [color=darkseagreen4, key=1, label=loggerType, style=dashed];
m73_544 -> m73_557  [color=darkseagreen4, key=1, label=loggerType, style=dashed];
m73_545 -> m73_546  [key=0, style=solid];
m73_545 -> m73_563  [key=2, style=dotted];
m73_545 -> m73_550  [color=darkseagreen4, key=1, label=isEnabledMethodInfo, style=dashed];
m73_547 -> m73_548  [key=0, style=solid];
m73_547 -> m73_565  [key=2, style=dotted];
m73_547 -> m73_550  [color=darkseagreen4, key=1, label=instanceCast, style=dashed];
m73_547 -> m73_555  [color=darkseagreen4, key=1, label=instanceCast, style=dashed];
m73_547 -> m73_559  [color=darkseagreen4, key=1, label=instanceCast, style=dashed];
m73_546 -> m73_547  [key=0, style=solid];
m73_546 -> m73_564  [key=2, style=dotted];
m73_546 -> m73_551  [color=darkseagreen4, key=1, label=instanceParam, style=dashed];
m73_546 -> m73_556  [color=darkseagreen4, key=1, label=instanceParam, style=dashed];
m73_546 -> m73_560  [color=darkseagreen4, key=1, label=instanceParam, style=dashed];
m73_550 -> m73_551  [key=0, style=solid];
m73_550 -> m73_250  [key=2, style=dotted];
m73_551 -> m73_552  [key=0, style=solid];
m73_551 -> m73_251  [key=2, style=dotted];
m73_551 -> m73_252  [key=2, style=dotted];
m73_556 -> m73_557  [key=0, style=solid];
m73_556 -> m73_251  [key=2, style=dotted];
m73_556 -> m73_252  [key=2, style=dotted];
m73_560 -> m73_561  [key=0, style=solid];
m73_560 -> m73_251  [key=2, style=dotted];
m73_560 -> m73_252  [key=2, style=dotted];
m73_548 -> m73_549  [key=0, style=solid];
m73_548 -> m73_564  [key=2, style=dotted];
m73_548 -> m73_551  [color=darkseagreen4, key=1, label=levelParam, style=dashed];
m73_548 -> m73_556  [color=darkseagreen4, key=1, label=levelParam, style=dashed];
m73_548 -> m73_560  [color=darkseagreen4, key=1, label=levelParam, style=dashed];
m73_555 -> m73_556  [key=0, style=solid];
m73_555 -> m73_566  [key=2, style=dotted];
m73_559 -> m73_560  [key=0, style=solid];
m73_559 -> m73_250  [key=2, style=dotted];
m73_553 -> m73_554  [key=0, style=solid];
m73_553 -> m73_564  [key=2, style=dotted];
m73_553 -> m73_555  [color=darkseagreen4, key=1, label=messageParam, style=dashed];
m73_553 -> m73_556  [color=darkseagreen4, key=1, label=messageParam, style=dashed];
m73_553 -> m73_559  [color=darkseagreen4, key=1, label=messageParam, style=dashed];
m73_553 -> m73_560  [color=darkseagreen4, key=1, label=messageParam, style=dashed];
m73_554 -> m73_555  [key=0, style=solid];
m73_554 -> m73_464  [key=2, style=dotted];
m73_554 -> m73_559  [color=darkseagreen4, key=1, label=propertyValuesParam, style=dashed];
m73_558 -> m73_559  [key=0, style=solid];
m73_558 -> m73_564  [key=2, style=dotted];
m73_558 -> m73_560  [color=darkseagreen4, key=1, label=exceptionParam, style=dashed];
m73_561 -> m73_536  [color=blue, key=0, style=bold];
m73_465 -> m73_466  [key=0, style=solid];
m73_455 -> m73_465  [key=0, style=solid];
m73_455 -> m73_466  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m73_466 -> m73_467  [key=0, style=solid];
m73_466 -> m73_469  [key=2, style=dotted];
m73_466 -> m73_470  [key=2, style=dotted];
m73_466 -> m73_471  [key=2, style=dotted];
m73_466 -> m73_472  [key=2, style=dotted];
m73_466 -> m73_248  [key=2, style=dotted];
m73_466 -> m73_473  [key=2, style=dotted];
m73_466 -> m73_474  [key=2, style=dotted];
m73_467 -> m73_468  [key=0, style=solid];
m73_468 -> m73_455  [color=blue, key=0, style=bold];
m73_343 -> m73_349  [key=0, style=solid];
m73_349 -> m73_350  [key=0, style=solid];
m73_349 -> m73_351  [key=2, style=dotted];
m73_350 -> m73_343  [color=blue, key=0, style=bold];
m73_74 -> m73_75  [key=0, style=solid];
m73_74 -> m73_76  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_75 -> m73_76  [key=0, style=solid];
m73_75 -> m73_77  [key=0, style=solid];
m73_75 -> m73_69  [key=2, style=dotted];
m73_76 -> m73_77  [key=0, style=solid];
m73_76 -> m73_36  [key=2, style=dotted];
m73_76 -> m73_0  [key=2, style=dotted];
m73_77 -> m73_74  [color=blue, key=0, style=bold];
m73_158 -> m73_159  [key=0, style=solid];
m73_158 -> m73_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_159 -> m73_160  [key=0, style=solid];
m73_159 -> m73_162  [key=2, style=dotted];
m73_160 -> m73_161  [key=0, style=solid];
m73_160 -> m73_163  [key=2, style=dotted];
m73_160 -> m73_164  [key=2, style=dotted];
m73_160 -> m73_144  [key=2, style=dotted];
m73_161 -> m73_158  [color=blue, key=0, style=bold];
m73_99 -> m73_100  [key=0, style=solid];
m73_99 -> m73_101  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_100 -> m73_101  [key=0, style=solid];
m73_100 -> m73_102  [key=0, style=solid];
m73_100 -> m73_103  [key=2, style=dotted];
m73_101 -> m73_102  [key=0, style=solid];
m73_101 -> m73_36  [key=2, style=dotted];
m73_101 -> m73_0  [key=2, style=dotted];
m73_102 -> m73_99  [color=blue, key=0, style=bold];
m73_191 -> m73_730  [key=0, style=solid];
m73_730 -> m73_191  [color=blue, key=0, style=bold];
m73_31 -> m73_32  [key=0, style=solid];
m73_31 -> m73_33  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_32 -> m73_33  [key=0, style=solid];
m73_32 -> m73_34  [key=0, style=solid];
m73_32 -> m73_35  [key=2, style=dotted];
m73_33 -> m73_34  [key=0, style=solid];
m73_33 -> m73_36  [key=2, style=dotted];
m73_33 -> m73_0  [key=2, style=dotted];
m73_34 -> m73_31  [color=blue, key=0, style=bold];
m73_165 -> m73_166  [key=0, style=solid];
m73_166 -> m73_167  [key=0, style=solid];
m73_167 -> m73_165  [color=blue, key=0, style=bold];
m73_512 -> m73_518  [key=0, style=solid];
m73_518 -> m73_519  [key=0, style=solid];
m73_518 -> m73_520  [key=2, style=dotted];
m73_519 -> m73_512  [color=blue, key=0, style=bold];
m73_390 -> m73_391  [key=0, style=solid];
m73_390 -> m73_394  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_390 -> m73_398  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_390 -> m73_402  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_390 -> m73_406  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_390 -> m73_409  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_391 -> m73_392  [key=0, style=solid];
m73_391 -> m73_396  [key=0, style=solid];
m73_391 -> m73_400  [key=0, style=solid];
m73_391 -> m73_404  [key=0, style=solid];
m73_391 -> m73_408  [key=0, style=solid];
m73_394 -> m73_395  [key=0, style=solid];
m73_394 -> m73_220  [key=2, style=dotted];
m73_394 -> m73_289  [key=2, style=dotted];
m73_398 -> m73_399  [key=0, style=solid];
m73_398 -> m73_220  [key=2, style=dotted];
m73_398 -> m73_290  [key=2, style=dotted];
m73_402 -> m73_403  [key=0, style=solid];
m73_402 -> m73_220  [key=2, style=dotted];
m73_402 -> m73_291  [key=2, style=dotted];
m73_406 -> m73_407  [key=0, style=solid];
m73_406 -> m73_220  [key=2, style=dotted];
m73_406 -> m73_292  [key=2, style=dotted];
m73_409 -> m73_410  [key=0, style=solid];
m73_409 -> m73_220  [key=2, style=dotted];
m73_409 -> m73_288  [key=2, style=dotted];
m73_392 -> m73_393  [key=0, style=solid];
m73_396 -> m73_397  [key=0, style=solid];
m73_400 -> m73_401  [key=0, style=solid];
m73_404 -> m73_405  [key=0, style=solid];
m73_408 -> m73_409  [key=0, style=solid];
m73_408 -> m73_411  [key=0, style=solid];
m73_393 -> m73_394  [key=0, style=solid];
m73_393 -> m73_411  [key=0, style=solid];
m73_411 -> m73_412  [key=0, style=solid];
m73_395 -> m73_412  [key=0, style=solid];
m73_397 -> m73_398  [key=0, style=solid];
m73_397 -> m73_411  [key=0, style=solid];
m73_399 -> m73_412  [key=0, style=solid];
m73_401 -> m73_402  [key=0, style=solid];
m73_401 -> m73_411  [key=0, style=solid];
m73_403 -> m73_412  [key=0, style=solid];
m73_405 -> m73_406  [key=0, style=solid];
m73_405 -> m73_411  [key=0, style=solid];
m73_407 -> m73_412  [key=0, style=solid];
m73_410 -> m73_412  [key=0, style=solid];
m73_412 -> m73_390  [color=blue, key=0, style=bold];
m73_133 -> m73_134  [key=0, style=solid];
m73_133 -> m73_135  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_134 -> m73_135  [key=0, style=solid];
m73_134 -> m73_137  [key=2, style=dotted];
m73_135 -> m73_136  [key=0, style=solid];
m73_135 -> m73_36  [key=2, style=dotted];
m73_135 -> m73_0  [key=2, style=dotted];
m73_136 -> m73_133  [color=blue, key=0, style=bold];
m73_15 -> m73_16  [key=0, style=solid];
m73_15 -> m73_17  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_16 -> m73_17  [key=0, style=solid];
m73_16 -> m73_6  [key=2, style=dotted];
m73_17 -> m73_18  [key=0, style=solid];
m73_17 -> m73_0  [key=2, style=dotted];
m73_18 -> m73_15  [color=blue, key=0, style=bold];
m73_0 -> m73_1  [key=0, style=solid];
m73_1 -> m73_0  [color=blue, key=0, style=bold];
m73_150 -> m73_151  [key=0, style=solid];
m73_151 -> m73_152  [key=0, style=solid];
m73_151 -> m73_154  [key=2, style=dotted];
m73_152 -> m73_153  [key=0, style=solid];
m73_152 -> m73_155  [key=2, style=dotted];
m73_152 -> m73_149  [key=2, style=dotted];
m73_153 -> m73_150  [color=blue, key=0, style=bold];
m73_532 -> m73_533  [key=0, style=solid];
m73_168 -> m73_169  [key=0, style=solid];
m73_169 -> m73_170  [key=0, style=solid];
m73_169 -> m73_171  [key=2, style=dotted];
m73_170 -> m73_168  [color=blue, key=0, style=bold];
m73_172 -> m73_173  [key=0, style=solid];
m73_173 -> m73_174  [key=0, style=solid];
m73_173 -> m73_175  [key=2, style=dotted];
m73_174 -> m73_172  [color=blue, key=0, style=bold];
m73_176 -> m73_177  [key=0, style=solid];
m73_177 -> m73_178  [key=0, style=solid];
m73_177 -> m73_179  [key=2, style=dotted];
m73_178 -> m73_176  [color=blue, key=0, style=bold];
m73_180 -> m73_181  [key=0, style=solid];
m73_181 -> m73_182  [key=0, style=solid];
m73_181 -> m73_183  [key=2, style=dotted];
m73_182 -> m73_180  [color=blue, key=0, style=bold];
m73_184 -> m73_185  [key=0, style=solid];
m73_185 -> m73_186  [key=0, style=solid];
m73_185 -> m73_187  [key=2, style=dotted];
m73_186 -> m73_184  [color=blue, key=0, style=bold];
m73_188 -> m73_189  [key=0, style=solid];
m73_189 -> m73_190  [key=0, style=solid];
m73_189 -> m73_191  [key=2, style=dotted];
m73_190 -> m73_188  [color=blue, key=0, style=bold];
m73_215 -> m73_219  [key=0, style=solid];
m73_215 -> m73_220  [key=2, style=dotted];
m73_217 -> m73_218  [key=0, style=solid];
m73_217 -> m73_208  [key=2, style=dotted];
m73_217 -> m73_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m73_214 -> m73_215  [key=0, style=solid];
m73_216 -> m73_217  [key=0, style=solid];
m73_218 -> m73_219  [key=0, style=solid];
m73_221 -> m73_222  [key=0, style=solid];
m73_219 -> m73_214  [color=blue, key=0, style=bold];
m73_222 -> m73_223  [key=0, style=solid];
m73_223 -> m73_221  [color=blue, key=0, style=bold];
m73_533 -> m73_534  [key=0, style=solid];
m73_533 -> m73_535  [key=2, style=dotted];
m73_534 -> m73_532  [color=blue, key=0, style=bold];
m73_738 -> m73_745  [key=0, style=solid];
m73_745 -> m73_746  [key=0, style=solid];
m73_745 -> m73_747  [key=2, style=dotted];
m73_745 -> m73_739  [key=2, style=dotted];
m73_746 -> m73_738  [color=blue, key=0, style=bold];
m73_432 -> m73_433  [key=0, style=solid];
m73_432 -> m73_436  [key=2, style=dotted];
m73_183 -> m73_437  [key=0, style=solid];
m73_426 -> m73_427  [key=0, style=solid];
m73_427 -> m73_428  [key=0, style=solid];
m73_427 -> m73_434  [key=2, style=dotted];
m73_427 -> m73_241  [key=2, style=dotted];
m73_428 -> m73_429  [key=0, style=solid];
m73_428 -> m73_434  [key=2, style=dotted];
m73_428 -> m73_241  [key=2, style=dotted];
m73_429 -> m73_430  [key=0, style=solid];
m73_429 -> m73_431  [key=0, style=solid];
m73_430 -> m73_433  [key=0, style=solid];
m73_431 -> m73_432  [key=0, style=solid];
m73_431 -> m73_435  [key=2, style=dotted];
m73_433 -> m73_426  [color=blue, key=0, style=bold];
m73_437 -> m73_438  [key=0, style=solid];
m73_437 -> m73_439  [key=0, style=solid];
m73_437 -> m73_440  [key=2, style=dotted];
m73_438 -> m73_439  [key=0, style=solid];
m73_438 -> m73_229  [key=2, style=dotted];
m73_439 -> m73_183  [color=blue, key=0, style=bold];
m73_141 -> m73_142  [key=0, style=solid];
m73_142 -> m73_143  [key=0, style=solid];
m73_143 -> m73_141  [color=blue, key=0, style=bold];
m73_445 -> m73_446  [key=0, style=solid];
m73_440 -> m73_445  [key=0, style=solid];
m73_446 -> m73_440  [color=blue, key=0, style=bold];
m73_255 -> m73_256  [key=0, style=solid];
m73_255 -> m73_257  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_255 -> m73_258  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m73_255 -> m73_259  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_255 -> m73_260  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_255 -> m73_263  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_255 -> m73_267  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_255 -> m73_271  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_255 -> m73_275  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_255 -> m73_279  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_255 -> m73_282  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_256 -> m73_257  [key=0, style=solid];
m73_256 -> m73_258  [key=0, style=solid];
m73_257 -> m73_285  [key=0, style=solid];
m73_257 -> m73_286  [key=2, style=dotted];
m73_258 -> m73_259  [key=0, style=solid];
m73_258 -> m73_260  [key=0, style=solid];
m73_259 -> m73_285  [key=0, style=solid];
m73_259 -> m73_287  [key=2, style=dotted];
m73_260 -> m73_261  [key=0, style=solid];
m73_260 -> m73_265  [key=0, style=solid];
m73_260 -> m73_269  [key=0, style=solid];
m73_260 -> m73_273  [key=0, style=solid];
m73_260 -> m73_277  [key=0, style=solid];
m73_260 -> m73_281  [key=0, style=solid];
m73_263 -> m73_264  [key=0, style=solid];
m73_263 -> m73_220  [key=2, style=dotted];
m73_263 -> m73_288  [key=2, style=dotted];
m73_267 -> m73_268  [key=0, style=solid];
m73_267 -> m73_220  [key=2, style=dotted];
m73_267 -> m73_289  [key=2, style=dotted];
m73_271 -> m73_272  [key=0, style=solid];
m73_271 -> m73_220  [key=2, style=dotted];
m73_271 -> m73_290  [key=2, style=dotted];
m73_275 -> m73_276  [key=0, style=solid];
m73_275 -> m73_220  [key=2, style=dotted];
m73_275 -> m73_291  [key=2, style=dotted];
m73_279 -> m73_280  [key=0, style=solid];
m73_279 -> m73_220  [key=2, style=dotted];
m73_279 -> m73_292  [key=2, style=dotted];
m73_282 -> m73_283  [key=0, style=solid];
m73_282 -> m73_220  [key=2, style=dotted];
m73_282 -> m73_293  [key=2, style=dotted];
m73_261 -> m73_262  [key=0, style=solid];
m73_265 -> m73_266  [key=0, style=solid];
m73_269 -> m73_270  [key=0, style=solid];
m73_273 -> m73_274  [key=0, style=solid];
m73_277 -> m73_278  [key=0, style=solid];
m73_281 -> m73_282  [key=0, style=solid];
m73_281 -> m73_284  [key=0, style=solid];
m73_262 -> m73_263  [key=0, style=solid];
m73_262 -> m73_284  [key=0, style=solid];
m73_284 -> m73_285  [key=0, style=solid];
m73_264 -> m73_285  [key=0, style=solid];
m73_266 -> m73_267  [key=0, style=solid];
m73_266 -> m73_284  [key=0, style=solid];
m73_268 -> m73_285  [key=0, style=solid];
m73_270 -> m73_271  [key=0, style=solid];
m73_270 -> m73_284  [key=0, style=solid];
m73_272 -> m73_285  [key=0, style=solid];
m73_274 -> m73_275  [key=0, style=solid];
m73_274 -> m73_284  [key=0, style=solid];
m73_276 -> m73_285  [key=0, style=solid];
m73_278 -> m73_279  [key=0, style=solid];
m73_278 -> m73_284  [key=0, style=solid];
m73_280 -> m73_285  [key=0, style=solid];
m73_283 -> m73_285  [key=0, style=solid];
m73_285 -> m73_255  [color=blue, key=0, style=bold];
m73_228 -> m73_236  [key=0, style=solid];
m73_236 -> m73_237  [key=0, style=solid];
m73_236 -> m73_238  [key=2, style=dotted];
m73_237 -> m73_228  [color=blue, key=0, style=bold];
m73_231 -> m73_232  [key=0, style=solid];
m73_232 -> m73_233  [key=0, style=solid];
m73_232 -> m73_234  [key=2, style=dotted];
m73_232 -> m73_235  [key=2, style=dotted];
m73_233 -> m73_231  [color=blue, key=0, style=bold];
m73_95 -> m73_96  [key=0, style=solid];
m73_95 -> m73_97  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_96 -> m73_97  [key=0, style=solid];
m73_96 -> m73_6  [key=2, style=dotted];
m73_97 -> m73_98  [key=0, style=solid];
m73_97 -> m73_0  [key=2, style=dotted];
m73_98 -> m73_95  [color=blue, key=0, style=bold];
m73_46 -> m73_47  [key=0, style=solid];
m73_47 -> m73_48  [key=0, style=solid];
m73_47 -> m73_0  [key=2, style=dotted];
m73_48 -> m73_46  [color=blue, key=0, style=bold];
m73_234 -> m73_253  [key=0, style=solid];
m73_253 -> m73_254  [key=0, style=solid];
m73_254 -> m73_234  [color=blue, key=0, style=bold];
m73_744 -> m73_763  [key=0, style=solid];
m73_744 -> m73_764  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m73_744 -> m73_765  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m73_763 -> m73_764  [key=0, style=solid];
m73_764 -> m73_765  [key=0, style=solid];
m73_765 -> m73_766  [key=0, style=solid];
m73_766 -> m73_744  [color=blue, key=0, style=bold];
m73_750 -> m73_751  [key=0, style=solid];
m73_751 -> m73_752  [key=0, style=solid];
m73_751 -> m73_434  [key=2, style=dotted];
m73_751 -> m73_241  [key=2, style=dotted];
m73_752 -> m73_750  [color=blue, key=0, style=bold];
m73_444 -> m73_475  [key=0, style=solid];
m73_444 -> m73_476  [color=darkseagreen4, key=1, label="System.Action<string, string, System.Diagnostics.TraceEventType>", style=dashed];
m73_444 -> m73_477  [color=darkseagreen4, key=1, label="System.Func<string, System.Diagnostics.TraceEventType, bool>", style=dashed];
m73_475 -> m73_476  [key=0, style=solid];
m73_476 -> m73_477  [key=0, style=solid];
m73_477 -> m73_478  [key=0, style=solid];
m73_478 -> m73_444  [color=blue, key=0, style=bold];
m73_463 -> m73_436  [color=blue, key=0, style=bold];
m73_436 -> m73_457  [key=0, style=solid];
m73_457 -> m73_458  [key=0, style=solid];
m73_457 -> m73_249  [key=2, style=dotted];
m73_457 -> m73_459  [color=darkseagreen4, key=1, label=logNameParameter, style=dashed];
m73_457 -> m73_462  [color=darkseagreen4, key=1, label=logNameParameter, style=dashed];
m73_458 -> m73_459  [key=0, style=solid];
m73_458 -> m73_249  [key=2, style=dotted];
m73_458 -> m73_462  [color=darkseagreen4, key=1, label=severityParameter, style=dashed];
m73_459 -> m73_460  [key=0, style=solid];
m73_459 -> m73_464  [key=2, style=dotted];
m73_459 -> m73_455  [key=2, style=dotted];
m73_459 -> m73_461  [color=darkseagreen4, key=1, label=memberInit, style=dashed];
m73_462 -> m73_463  [key=0, style=solid];
m73_462 -> m73_251  [key=2, style=dotted];
m73_462 -> m73_252  [key=2, style=dotted];
m73_460 -> m73_461  [key=0, style=solid];
m73_460 -> m73_248  [key=2, style=dotted];
m73_461 -> m73_462  [key=0, style=solid];
m73_461 -> m73_456  [key=2, style=dotted];
m73_108 -> m73_109  [key=0, style=solid];
m73_108 -> m73_110  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_109 -> m73_110  [key=0, style=solid];
m73_109 -> m73_111  [key=0, style=solid];
m73_109 -> m73_103  [key=2, style=dotted];
m73_110 -> m73_111  [key=0, style=solid];
m73_110 -> m73_36  [key=2, style=dotted];
m73_110 -> m73_0  [key=2, style=dotted];
m73_111 -> m73_108  [color=blue, key=0, style=bold];
m73_632 -> m73_638  [key=0, style=solid];
m73_638 -> m73_639  [key=0, style=solid];
m73_638 -> m73_640  [key=2, style=dotted];
m73_639 -> m73_632  [color=blue, key=0, style=bold];
m73_121 -> m73_122  [key=0, style=solid];
m73_121 -> m73_123  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_122 -> m73_123  [key=0, style=solid];
m73_122 -> m73_124  [key=0, style=solid];
m73_122 -> m73_120  [key=2, style=dotted];
m73_123 -> m73_124  [key=0, style=solid];
m73_123 -> m73_41  [key=2, style=dotted];
m73_124 -> m73_121  [color=blue, key=0, style=bold];
m73_600 -> m73_601  [key=0, style=solid];
m73_600 -> m73_604  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_600 -> m73_608  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_600 -> m73_612  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_600 -> m73_616  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_600 -> m73_620  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_600 -> m73_623  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_601 -> m73_602  [key=0, style=solid];
m73_601 -> m73_606  [key=0, style=solid];
m73_601 -> m73_610  [key=0, style=solid];
m73_601 -> m73_614  [key=0, style=solid];
m73_601 -> m73_618  [key=0, style=solid];
m73_601 -> m73_622  [key=0, style=solid];
m73_604 -> m73_605  [key=0, style=solid];
m73_604 -> m73_220  [key=2, style=dotted];
m73_604 -> m73_627  [key=2, style=dotted];
m73_608 -> m73_609  [key=0, style=solid];
m73_608 -> m73_220  [key=2, style=dotted];
m73_608 -> m73_627  [key=2, style=dotted];
m73_612 -> m73_613  [key=0, style=solid];
m73_612 -> m73_220  [key=2, style=dotted];
m73_612 -> m73_627  [key=2, style=dotted];
m73_616 -> m73_617  [key=0, style=solid];
m73_616 -> m73_220  [key=2, style=dotted];
m73_616 -> m73_627  [key=2, style=dotted];
m73_620 -> m73_621  [key=0, style=solid];
m73_620 -> m73_220  [key=2, style=dotted];
m73_620 -> m73_627  [key=2, style=dotted];
m73_623 -> m73_624  [key=0, style=solid];
m73_623 -> m73_220  [key=2, style=dotted];
m73_623 -> m73_627  [key=2, style=dotted];
m73_602 -> m73_603  [key=0, style=solid];
m73_606 -> m73_607  [key=0, style=solid];
m73_610 -> m73_611  [key=0, style=solid];
m73_614 -> m73_615  [key=0, style=solid];
m73_618 -> m73_619  [key=0, style=solid];
m73_622 -> m73_623  [key=0, style=solid];
m73_622 -> m73_625  [key=0, style=solid];
m73_622 -> m73_489  [key=2, style=dotted];
m73_603 -> m73_604  [key=0, style=solid];
m73_603 -> m73_625  [key=0, style=solid];
m73_603 -> m73_489  [key=2, style=dotted];
m73_625 -> m73_626  [key=0, style=solid];
m73_605 -> m73_626  [key=0, style=solid];
m73_607 -> m73_608  [key=0, style=solid];
m73_607 -> m73_625  [key=0, style=solid];
m73_607 -> m73_489  [key=2, style=dotted];
m73_609 -> m73_626  [key=0, style=solid];
m73_611 -> m73_612  [key=0, style=solid];
m73_611 -> m73_625  [key=0, style=solid];
m73_611 -> m73_489  [key=2, style=dotted];
m73_613 -> m73_626  [key=0, style=solid];
m73_615 -> m73_616  [key=0, style=solid];
m73_615 -> m73_625  [key=0, style=solid];
m73_615 -> m73_489  [key=2, style=dotted];
m73_617 -> m73_626  [key=0, style=solid];
m73_619 -> m73_620  [key=0, style=solid];
m73_619 -> m73_625  [key=0, style=solid];
m73_619 -> m73_489  [key=2, style=dotted];
m73_621 -> m73_626  [key=0, style=solid];
m73_624 -> m73_626  [key=0, style=solid];
m73_626 -> m73_600  [color=blue, key=0, style=bold];
m73_179 -> m73_339  [key=0, style=solid];
m73_339 -> m73_340  [key=0, style=solid];
m73_339 -> m73_341  [key=0, style=solid];
m73_339 -> m73_343  [key=2, style=dotted];
m73_340 -> m73_342  [key=0, style=solid];
m73_340 -> m73_229  [key=2, style=dotted];
m73_341 -> m73_342  [key=0, style=solid];
m73_341 -> m73_344  [key=2, style=dotted];
m73_342 -> m73_179  [color=blue, key=0, style=bold];
m73_104 -> m73_105  [key=0, style=solid];
m73_104 -> m73_106  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_105 -> m73_106  [key=0, style=solid];
m73_105 -> m73_107  [key=0, style=solid];
m73_105 -> m73_103  [key=2, style=dotted];
m73_106 -> m73_107  [key=0, style=solid];
m73_106 -> m73_41  [key=2, style=dotted];
m73_107 -> m73_104  [color=blue, key=0, style=bold];
m73_747 -> m73_748  [key=0, style=solid];
m73_748 -> m73_749  [key=0, style=solid];
m73_748 -> m73_241  [key=2, style=dotted];
m73_749 -> m73_747  [color=blue, key=0, style=bold];
m73_171 -> m73_508  [key=0, style=solid];
m73_508 -> m73_509  [key=0, style=solid];
m73_508 -> m73_510  [key=0, style=solid];
m73_508 -> m73_512  [key=2, style=dotted];
m73_509 -> m73_511  [key=0, style=solid];
m73_509 -> m73_229  [key=2, style=dotted];
m73_510 -> m73_511  [key=0, style=solid];
m73_510 -> m73_513  [key=2, style=dotted];
m73_511 -> m73_171  [color=blue, key=0, style=bold];
m73_344 -> m73_354  [key=0, style=solid];
m73_354 -> m73_355  [key=0, style=solid];
m73_354 -> m73_351  [key=2, style=dotted];
m73_355 -> m73_356  [key=0, style=solid];
m73_355 -> m73_248  [key=2, style=dotted];
m73_355 -> m73_357  [color=darkseagreen4, key=1, label=method, style=dashed];
m73_356 -> m73_357  [key=0, style=solid];
m73_356 -> m73_249  [key=2, style=dotted];
m73_356 -> m73_358  [color=darkseagreen4, key=1, label=nameParam, style=dashed];
m73_357 -> m73_358  [key=0, style=solid];
m73_357 -> m73_250  [key=2, style=dotted];
m73_358 -> m73_359  [key=0, style=solid];
m73_358 -> m73_251  [key=2, style=dotted];
m73_358 -> m73_252  [key=2, style=dotted];
m73_359 -> m73_344  [color=blue, key=0, style=bold];
m73_62 -> m73_63  [key=0, style=solid];
m73_63 -> m73_64  [key=0, style=solid];
m73_63 -> m73_0  [key=2, style=dotted];
m73_64 -> m73_62  [color=blue, key=0, style=bold];
m73_144 -> m73_145  [key=0, style=solid];
m73_145 -> m73_144  [color=blue, key=0, style=bold];
m73_739 -> m73_753  [key=0, style=solid];
m73_753 -> m73_754  [key=0, style=solid];
m73_753 -> m73_241  [key=2, style=dotted];
m73_754 -> m73_739  [color=blue, key=0, style=bold];
m73_513 -> m73_523  [key=0, style=solid];
m73_523 -> m73_524  [key=0, style=solid];
m73_523 -> m73_520  [key=2, style=dotted];
m73_524 -> m73_525  [key=0, style=solid];
m73_524 -> m73_248  [key=2, style=dotted];
m73_524 -> m73_528  [color=darkseagreen4, key=1, label=method, style=dashed];
m73_525 -> m73_526  [key=0, style=solid];
m73_525 -> m73_249  [key=2, style=dotted];
m73_525 -> m73_528  [color=darkseagreen4, key=1, label=propertyNameParam, style=dashed];
m73_525 -> m73_529  [color=darkseagreen4, key=1, label=propertyNameParam, style=dashed];
m73_528 -> m73_529  [key=0, style=solid];
m73_528 -> m73_250  [key=2, style=dotted];
m73_526 -> m73_527  [key=0, style=solid];
m73_526 -> m73_249  [key=2, style=dotted];
m73_526 -> m73_528  [color=darkseagreen4, key=1, label=valueParam, style=dashed];
m73_526 -> m73_529  [color=darkseagreen4, key=1, label=valueParam, style=dashed];
m73_529 -> m73_530  [key=0, style=solid];
m73_529 -> m73_251  [key=2, style=dotted];
m73_529 -> m73_252  [key=2, style=dotted];
m73_529 -> m73_533  [color=darkseagreen4, key=1, label=func, style=dashed];
m73_527 -> m73_528  [key=0, style=solid];
m73_527 -> m73_249  [key=2, style=dotted];
m73_527 -> m73_529  [color=darkseagreen4, key=1, label=destructureObjectsParam, style=dashed];
m73_530 -> m73_531  [key=0, style=solid];
m73_530 -> m73_533  [color=darkseagreen4, key=1, label=string, style=dashed];
m73_531 -> m73_513  [color=blue, key=0, style=bold];
m73_286 -> m73_326  [key=0, style=solid];
m73_326 -> m73_327  [key=0, style=solid];
m73_326 -> m73_329  [key=0, style=solid];
m73_326 -> m73_331  [key=0, style=solid];
m73_326 -> m73_333  [key=0, style=solid];
m73_326 -> m73_335  [key=0, style=solid];
m73_326 -> m73_337  [key=0, style=solid];
m73_327 -> m73_328  [key=0, style=solid];
m73_329 -> m73_330  [key=0, style=solid];
m73_331 -> m73_332  [key=0, style=solid];
m73_333 -> m73_334  [key=0, style=solid];
m73_335 -> m73_336  [key=0, style=solid];
m73_337 -> m73_338  [key=0, style=solid];
m73_328 -> m73_338  [key=0, style=solid];
m73_330 -> m73_338  [key=0, style=solid];
m73_332 -> m73_338  [key=0, style=solid];
m73_334 -> m73_338  [key=0, style=solid];
m73_336 -> m73_338  [key=0, style=solid];
m73_338 -> m73_286  [color=blue, key=0, style=bold];
m73_569 -> m73_570  [key=0, style=solid];
m73_569 -> m73_571  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_569 -> m73_572  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m73_569 -> m73_573  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_569 -> m73_574  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_569 -> m73_577  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_569 -> m73_581  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_569 -> m73_585  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_569 -> m73_589  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_569 -> m73_593  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_569 -> m73_596  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_570 -> m73_571  [key=0, style=solid];
m73_570 -> m73_572  [key=0, style=solid];
m73_571 -> m73_599  [key=0, style=solid];
m73_571 -> m73_489  [key=2, style=dotted];
m73_572 -> m73_573  [key=0, style=solid];
m73_572 -> m73_574  [key=0, style=solid];
m73_573 -> m73_599  [key=0, style=solid];
m73_573 -> m73_600  [key=2, style=dotted];
m73_574 -> m73_575  [key=0, style=solid];
m73_574 -> m73_579  [key=0, style=solid];
m73_574 -> m73_583  [key=0, style=solid];
m73_574 -> m73_587  [key=0, style=solid];
m73_574 -> m73_591  [key=0, style=solid];
m73_574 -> m73_595  [key=0, style=solid];
m73_577 -> m73_578  [key=0, style=solid];
m73_577 -> m73_220  [key=2, style=dotted];
m73_577 -> m73_491  [key=2, style=dotted];
m73_581 -> m73_582  [key=0, style=solid];
m73_581 -> m73_220  [key=2, style=dotted];
m73_581 -> m73_491  [key=2, style=dotted];
m73_585 -> m73_586  [key=0, style=solid];
m73_585 -> m73_220  [key=2, style=dotted];
m73_585 -> m73_491  [key=2, style=dotted];
m73_589 -> m73_590  [key=0, style=solid];
m73_589 -> m73_220  [key=2, style=dotted];
m73_589 -> m73_491  [key=2, style=dotted];
m73_593 -> m73_594  [key=0, style=solid];
m73_593 -> m73_220  [key=2, style=dotted];
m73_593 -> m73_491  [key=2, style=dotted];
m73_596 -> m73_597  [key=0, style=solid];
m73_596 -> m73_220  [key=2, style=dotted];
m73_596 -> m73_491  [key=2, style=dotted];
m73_575 -> m73_576  [key=0, style=solid];
m73_579 -> m73_580  [key=0, style=solid];
m73_583 -> m73_584  [key=0, style=solid];
m73_587 -> m73_588  [key=0, style=solid];
m73_591 -> m73_592  [key=0, style=solid];
m73_595 -> m73_596  [key=0, style=solid];
m73_595 -> m73_598  [key=0, style=solid];
m73_595 -> m73_489  [key=2, style=dotted];
m73_576 -> m73_577  [key=0, style=solid];
m73_576 -> m73_598  [key=0, style=solid];
m73_576 -> m73_489  [key=2, style=dotted];
m73_598 -> m73_599  [key=0, style=solid];
m73_578 -> m73_599  [key=0, style=solid];
m73_580 -> m73_581  [key=0, style=solid];
m73_580 -> m73_598  [key=0, style=solid];
m73_580 -> m73_489  [key=2, style=dotted];
m73_582 -> m73_599  [key=0, style=solid];
m73_584 -> m73_585  [key=0, style=solid];
m73_584 -> m73_598  [key=0, style=solid];
m73_584 -> m73_489  [key=2, style=dotted];
m73_586 -> m73_599  [key=0, style=solid];
m73_588 -> m73_589  [key=0, style=solid];
m73_588 -> m73_598  [key=0, style=solid];
m73_588 -> m73_489  [key=2, style=dotted];
m73_590 -> m73_599  [key=0, style=solid];
m73_592 -> m73_593  [key=0, style=solid];
m73_592 -> m73_598  [key=0, style=solid];
m73_592 -> m73_489  [key=2, style=dotted];
m73_594 -> m73_599  [key=0, style=solid];
m73_597 -> m73_599  [key=0, style=solid];
m73_599 -> m73_569  [color=blue, key=0, style=bold];
m73_70 -> m73_71  [key=0, style=solid];
m73_70 -> m73_72  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_71 -> m73_72  [key=0, style=solid];
m73_71 -> m73_73  [key=0, style=solid];
m73_71 -> m73_69  [key=2, style=dotted];
m73_72 -> m73_73  [key=0, style=solid];
m73_72 -> m73_41  [key=2, style=dotted];
m73_73 -> m73_70  [color=blue, key=0, style=bold];
m73_19 -> m73_20  [key=0, style=solid];
m73_19 -> m73_21  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_20 -> m73_21  [key=0, style=solid];
m73_20 -> m73_6  [key=2, style=dotted];
m73_21 -> m73_22  [key=0, style=solid];
m73_21 -> m73_0  [key=2, style=dotted];
m73_22 -> m73_19  [color=blue, key=0, style=bold];
m73_162 -> m73_192  [key=0, style=solid];
m73_192 -> m73_193  [key=0, style=solid];
m73_192 -> m73_195  [key=0, style=solid];
m73_192 -> m73_197  [key=0, style=solid];
m73_192 -> m73_194  [color=darkseagreen4, key=1, label=providerResolver, style=dashed];
m73_193 -> m73_194  [key=0, style=solid];
m73_193 -> m73_192  [key=0, style=solid];
m73_193 -> m73_199  [key=2, style=dotted];
m73_195 -> m73_196  [key=0, style=solid];
m73_197 -> m73_198  [key=0, style=solid];
m73_194 -> m73_198  [key=0, style=solid];
m73_194 -> m73_200  [key=2, style=dotted];
m73_196 -> m73_197  [key=0, style=solid];
m73_196 -> m73_201  [key=2, style=dotted];
m73_196 -> m73_202  [key=2, style=dotted];
m73_198 -> m73_162  [color=blue, key=0, style=bold];
m73_711 -> m73_712  [key=0, style=solid];
m73_711 -> m73_714  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_712 -> m73_713  [key=0, style=solid];
m73_712 -> m73_714  [key=0, style=solid];
m73_714 -> m73_715  [key=0, style=solid];
m73_714 -> m73_220  [key=2, style=dotted];
m73_714 -> m73_717  [key=2, style=dotted];
m73_713 -> m73_716  [key=0, style=solid];
m73_715 -> m73_716  [key=0, style=solid];
m73_716 -> m73_711  [color=blue, key=0, style=bold];
m73_362 -> m73_363  [key=0, style=solid];
m73_362 -> m73_364  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_362 -> m73_365  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m73_362 -> m73_366  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_362 -> m73_367  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_362 -> m73_370  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_362 -> m73_374  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_362 -> m73_378  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_362 -> m73_382  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_362 -> m73_385  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_363 -> m73_364  [key=0, style=solid];
m73_363 -> m73_365  [key=0, style=solid];
m73_364 -> m73_388  [key=0, style=solid];
m73_364 -> m73_389  [key=2, style=dotted];
m73_365 -> m73_366  [key=0, style=solid];
m73_365 -> m73_367  [key=0, style=solid];
m73_366 -> m73_388  [key=0, style=solid];
m73_366 -> m73_390  [key=2, style=dotted];
m73_367 -> m73_368  [key=0, style=solid];
m73_367 -> m73_372  [key=0, style=solid];
m73_367 -> m73_376  [key=0, style=solid];
m73_367 -> m73_380  [key=0, style=solid];
m73_367 -> m73_384  [key=0, style=solid];
m73_370 -> m73_371  [key=0, style=solid];
m73_370 -> m73_220  [key=2, style=dotted];
m73_370 -> m73_289  [key=2, style=dotted];
m73_374 -> m73_375  [key=0, style=solid];
m73_374 -> m73_220  [key=2, style=dotted];
m73_374 -> m73_290  [key=2, style=dotted];
m73_378 -> m73_379  [key=0, style=solid];
m73_378 -> m73_220  [key=2, style=dotted];
m73_378 -> m73_291  [key=2, style=dotted];
m73_382 -> m73_383  [key=0, style=solid];
m73_382 -> m73_220  [key=2, style=dotted];
m73_382 -> m73_292  [key=2, style=dotted];
m73_385 -> m73_386  [key=0, style=solid];
m73_385 -> m73_220  [key=2, style=dotted];
m73_385 -> m73_288  [key=2, style=dotted];
m73_368 -> m73_369  [key=0, style=solid];
m73_372 -> m73_373  [key=0, style=solid];
m73_376 -> m73_377  [key=0, style=solid];
m73_380 -> m73_381  [key=0, style=solid];
m73_384 -> m73_385  [key=0, style=solid];
m73_384 -> m73_387  [key=0, style=solid];
m73_369 -> m73_370  [key=0, style=solid];
m73_369 -> m73_387  [key=0, style=solid];
m73_387 -> m73_388  [key=0, style=solid];
m73_371 -> m73_388  [key=0, style=solid];
m73_373 -> m73_374  [key=0, style=solid];
m73_373 -> m73_387  [key=0, style=solid];
m73_375 -> m73_388  [key=0, style=solid];
m73_377 -> m73_378  [key=0, style=solid];
m73_377 -> m73_387  [key=0, style=solid];
m73_379 -> m73_388  [key=0, style=solid];
m73_381 -> m73_382  [key=0, style=solid];
m73_381 -> m73_387  [key=0, style=solid];
m73_383 -> m73_388  [key=0, style=solid];
m73_386 -> m73_388  [key=0, style=solid];
m73_388 -> m73_362  [color=blue, key=0, style=bold];
m73_767 -> m73_768  [key=0, style=solid];
m73_767 -> m73_769  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_767 -> m73_770  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_767 -> m73_771  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m73_767 -> m73_773  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_768 -> m73_769  [key=0, style=solid];
m73_768 -> m73_770  [key=0, style=solid];
m73_769 -> m73_779  [key=0, style=solid];
m73_770 -> m73_771  [key=0, style=solid];
m73_770 -> m73_220  [key=2, style=dotted];
m73_770 -> m73_772  [color=darkseagreen4, key=1, label=message, style=dashed];
m73_771 -> m73_772  [key=0, style=solid];
m73_771 -> m73_780  [key=2, style=dotted];
m73_771 -> m73_781  [key=2, style=dotted];
m73_771 -> m73_773  [color=darkseagreen4, key=1, label=error, style=dashed];
m73_771 -> m73_774  [color=darkseagreen4, key=1, label=error, style=dashed];
m73_771 -> m73_775  [color=darkseagreen4, key=1, label=error, style=dashed];
m73_773 -> m73_774  [key=0, style=solid];
m73_773 -> m73_703  [key=2, style=dotted];
m73_772 -> m73_773  [key=0, style=solid];
m73_774 -> m73_775  [key=0, style=solid];
m73_775 -> m73_776  [key=0, style=solid];
m73_775 -> m73_778  [key=0, style=solid];
m73_775 -> m73_782  [key=2, style=dotted];
m73_776 -> m73_777  [key=0, style=solid];
m73_778 -> m73_779  [key=0, style=solid];
m73_777 -> m73_778  [key=0, style=solid];
m73_777 -> m73_783  [key=2, style=dotted];
m73_779 -> m73_767  [color=blue, key=0, style=bold];
m73_230 -> m73_242  [key=0, style=solid];
m73_242 -> m73_243  [key=0, style=solid];
m73_242 -> m73_238  [key=2, style=dotted];
m73_243 -> m73_244  [key=0, style=solid];
m73_243 -> m73_248  [key=2, style=dotted];
m73_243 -> m73_245  [color=darkseagreen4, key=1, label=method, style=dashed];
m73_244 -> m73_245  [key=0, style=solid];
m73_244 -> m73_249  [key=2, style=dotted];
m73_244 -> m73_246  [color=darkseagreen4, key=1, label=nameParam, style=dashed];
m73_245 -> m73_246  [key=0, style=solid];
m73_245 -> m73_250  [key=2, style=dotted];
m73_246 -> m73_247  [key=0, style=solid];
m73_246 -> m73_251  [key=2, style=dotted];
m73_246 -> m73_252  [key=2, style=dotted];
m73_247 -> m73_230  [color=blue, key=0, style=bold];
m73_138 -> m73_139  [key=0, style=solid];
m73_139 -> m73_140  [key=0, style=solid];
m73_140 -> m73_138  [color=blue, key=0, style=bold];
m73_27 -> m73_28  [key=0, style=solid];
m73_27 -> m73_29  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_28 -> m73_29  [key=0, style=solid];
m73_28 -> m73_6  [key=2, style=dotted];
m73_29 -> m73_30  [key=0, style=solid];
m73_29 -> m73_0  [key=2, style=dotted];
m73_30 -> m73_27  [color=blue, key=0, style=bold];
m73_164 -> m73_206  [key=0, style=solid];
m73_206 -> m73_207  [key=0, style=solid];
m73_207 -> m73_164  [color=blue, key=0, style=bold];
m73_454 -> m73_435  [color=blue, key=0, style=bold];
m73_435 -> m73_447  [key=0, style=solid];
m73_447 -> m73_448  [key=0, style=solid];
m73_447 -> m73_249  [key=2, style=dotted];
m73_447 -> m73_450  [color=darkseagreen4, key=1, label=logNameParameter, style=dashed];
m73_447 -> m73_453  [color=darkseagreen4, key=1, label=logNameParameter, style=dashed];
m73_448 -> m73_449  [key=0, style=solid];
m73_448 -> m73_249  [key=2, style=dotted];
m73_448 -> m73_450  [color=darkseagreen4, key=1, label=messageParameter, style=dashed];
m73_448 -> m73_453  [color=darkseagreen4, key=1, label=messageParameter, style=dashed];
m73_450 -> m73_451  [key=0, style=solid];
m73_450 -> m73_455  [key=2, style=dotted];
m73_450 -> m73_452  [color=darkseagreen4, key=1, label=memberInit, style=dashed];
m73_453 -> m73_454  [key=0, style=solid];
m73_453 -> m73_251  [key=2, style=dotted];
m73_453 -> m73_252  [key=2, style=dotted];
m73_449 -> m73_450  [key=0, style=solid];
m73_449 -> m73_249  [key=2, style=dotted];
m73_449 -> m73_453  [color=darkseagreen4, key=1, label=severityParameter, style=dashed];
m73_451 -> m73_452  [key=0, style=solid];
m73_451 -> m73_248  [key=2, style=dotted];
m73_452 -> m73_453  [key=0, style=solid];
m73_452 -> m73_456  [key=2, style=dotted];
m73_740 -> m73_755  [key=0, style=solid];
m73_755 -> m73_756  [key=0, style=solid];
m73_755 -> m73_747  [key=2, style=dotted];
m73_755 -> m73_757  [color=darkseagreen4, key=1, label=logManagerType, style=dashed];
m73_756 -> m73_757  [key=0, style=solid];
m73_756 -> m73_750  [key=2, style=dotted];
m73_756 -> m73_758  [color=darkseagreen4, key=1, label=httpContextType, style=dashed];
m73_757 -> m73_758  [key=0, style=solid];
m73_757 -> m73_248  [key=2, style=dotted];
m73_757 -> m73_759  [color=darkseagreen4, key=1, label=method, style=dashed];
m73_758 -> m73_759  [key=0, style=solid];
m73_758 -> m73_762  [key=2, style=dotted];
m73_759 -> m73_760  [key=0, style=solid];
m73_759 -> m73_250  [key=2, style=dotted];
m73_760 -> m73_761  [key=0, style=solid];
m73_760 -> m73_251  [key=2, style=dotted];
m73_760 -> m73_252  [key=2, style=dotted];
m73_761 -> m73_740  [color=blue, key=0, style=bold];
m73_175 -> m73_224  [key=0, style=solid];
m73_224 -> m73_225  [key=0, style=solid];
m73_224 -> m73_226  [key=0, style=solid];
m73_224 -> m73_228  [key=2, style=dotted];
m73_225 -> m73_227  [key=0, style=solid];
m73_225 -> m73_229  [key=2, style=dotted];
m73_226 -> m73_227  [key=0, style=solid];
m73_226 -> m73_230  [key=2, style=dotted];
m73_227 -> m73_175  [color=blue, key=0, style=bold];
m73_58 -> m73_59  [key=0, style=solid];
m73_58 -> m73_60  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_59 -> m73_60  [key=0, style=solid];
m73_59 -> m73_61  [key=0, style=solid];
m73_59 -> m73_53  [key=2, style=dotted];
m73_60 -> m73_61  [key=0, style=solid];
m73_60 -> m73_36  [key=2, style=dotted];
m73_60 -> m73_0  [key=2, style=dotted];
m73_61 -> m73_58  [color=blue, key=0, style=bold];
m73_660 -> m73_662  [key=0, style=solid];
m73_662 -> m73_663  [key=0, style=solid];
m73_662 -> m73_665  [key=0, style=solid];
m73_662 -> m73_667  [key=0, style=solid];
m73_662 -> m73_669  [key=0, style=solid];
m73_662 -> m73_671  [key=0, style=solid];
m73_662 -> m73_673  [key=0, style=solid];
m73_662 -> m73_675  [key=0, style=solid];
m73_663 -> m73_664  [key=0, style=solid];
m73_665 -> m73_666  [key=0, style=solid];
m73_667 -> m73_668  [key=0, style=solid];
m73_669 -> m73_670  [key=0, style=solid];
m73_671 -> m73_672  [key=0, style=solid];
m73_673 -> m73_674  [key=0, style=solid];
m73_675 -> m73_676  [key=0, style=solid];
m73_675 -> m73_677  [key=2, style=dotted];
m73_664 -> m73_676  [key=0, style=solid];
m73_666 -> m73_676  [key=0, style=solid];
m73_668 -> m73_676  [key=0, style=solid];
m73_670 -> m73_676  [key=0, style=solid];
m73_672 -> m73_676  [key=0, style=solid];
m73_674 -> m73_676  [key=0, style=solid];
m73_676 -> m73_660  [color=blue, key=0, style=bold];
m73_633 -> m73_643  [key=0, style=solid];
m73_643 -> m73_644  [key=0, style=solid];
m73_643 -> m73_640  [key=2, style=dotted];
m73_643 -> m73_646  [color=darkseagreen4, key=1, label=logManagerType, style=dashed];
m73_644 -> m73_645  [key=0, style=solid];
m73_644 -> m73_241  [key=2, style=dotted];
m73_644 -> m73_646  [color=darkseagreen4, key=1, label=logMessageSeverityType, style=dashed];
m73_646 -> m73_647  [key=0, style=solid];
m73_646 -> m73_248  [key=2, style=dotted];
m73_645 -> m73_646  [key=0, style=solid];
m73_645 -> m73_241  [key=2, style=dotted];
m73_647 -> m73_648  [key=0, style=solid];
m73_647 -> m73_649  [key=2, style=dotted];
m73_648 -> m73_633  [color=blue, key=0, style=bold];
m73_208 -> m73_209  [key=0, style=solid];
m73_208 -> m73_210  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_208 -> m73_211  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_208 -> m73_215  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_208 -> m73_212  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_209 -> m73_210  [key=0, style=solid];
m73_209 -> m73_211  [key=0, style=solid];
m73_210 -> m73_213  [key=0, style=solid];
m73_210 -> m73_0  [key=2, style=dotted];
m73_211 -> m73_212  [key=0, style=solid];
m73_211 -> m73_217  [color=darkseagreen4, key=1, label=ex, style=dashed];
m73_212 -> m73_213  [key=0, style=solid];
m73_212 -> m73_0  [key=2, style=dotted];
m73_213 -> m73_208  [color=blue, key=0, style=bold];
m73_490 -> m73_492  [key=0, style=solid];
m73_490 -> m73_493  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_492 -> m73_493  [key=0, style=solid];
m73_492 -> m73_488  [key=2, style=dotted];
m73_492 -> m73_494  [color=darkseagreen4, key=1, label=severity, style=dashed];
m73_493 -> m73_494  [key=0, style=solid];
m73_493 -> m73_220  [key=2, style=dotted];
m73_494 -> m73_495  [key=0, style=solid];
m73_494 -> m73_491  [key=2, style=dotted];
m73_495 -> m73_496  [key=0, style=solid];
m73_496 -> m73_490  [color=blue, key=0, style=bold];
m73_65 -> m73_66  [key=0, style=solid];
m73_65 -> m73_67  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_66 -> m73_67  [key=0, style=solid];
m73_66 -> m73_68  [key=0, style=solid];
m73_66 -> m73_69  [key=2, style=dotted];
m73_67 -> m73_68  [key=0, style=solid];
m73_67 -> m73_36  [key=2, style=dotted];
m73_67 -> m73_0  [key=2, style=dotted];
m73_68 -> m73_65  [color=blue, key=0, style=bold];
m73_640 -> m73_641  [key=0, style=solid];
m73_641 -> m73_642  [key=0, style=solid];
m73_641 -> m73_241  [key=2, style=dotted];
m73_642 -> m73_640  [color=blue, key=0, style=bold];
m73_82 -> m73_83  [key=0, style=solid];
m73_82 -> m73_84  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_83 -> m73_84  [key=0, style=solid];
m73_83 -> m73_85  [key=0, style=solid];
m73_83 -> m73_86  [key=2, style=dotted];
m73_84 -> m73_85  [key=0, style=solid];
m73_84 -> m73_36  [key=2, style=dotted];
m73_84 -> m73_0  [key=2, style=dotted];
m73_85 -> m73_82  [color=blue, key=0, style=bold];
m73_345 -> m73_346  [key=0, style=solid];
m73_346 -> m73_347  [key=0, style=solid];
m73_346 -> m73_348  [key=2, style=dotted];
m73_346 -> m73_235  [key=2, style=dotted];
m73_347 -> m73_345  [color=blue, key=0, style=bold];
m73_514 -> m73_515  [key=0, style=solid];
m73_515 -> m73_516  [key=0, style=solid];
m73_515 -> m73_517  [key=2, style=dotted];
m73_515 -> m73_235  [key=2, style=dotted];
m73_516 -> m73_514  [color=blue, key=0, style=bold];
m73_683 -> m73_684  [key=0, style=solid];
m73_684 -> m73_685  [key=0, style=solid];
m73_684 -> m73_686  [key=2, style=dotted];
m73_685 -> m73_683  [color=blue, key=0, style=bold];
m73_125 -> m73_126  [key=0, style=solid];
m73_125 -> m73_127  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_126 -> m73_127  [key=0, style=solid];
m73_126 -> m73_128  [key=0, style=solid];
m73_126 -> m73_120  [key=2, style=dotted];
m73_127 -> m73_128  [key=0, style=solid];
m73_127 -> m73_36  [key=2, style=dotted];
m73_127 -> m73_0  [key=2, style=dotted];
m73_128 -> m73_125  [color=blue, key=0, style=bold];
m73_389 -> m73_413  [key=0, style=solid];
m73_413 -> m73_414  [key=0, style=solid];
m73_413 -> m73_416  [key=0, style=solid];
m73_413 -> m73_418  [key=0, style=solid];
m73_413 -> m73_420  [key=0, style=solid];
m73_413 -> m73_422  [key=0, style=solid];
m73_413 -> m73_424  [key=0, style=solid];
m73_414 -> m73_415  [key=0, style=solid];
m73_416 -> m73_417  [key=0, style=solid];
m73_418 -> m73_419  [key=0, style=solid];
m73_420 -> m73_421  [key=0, style=solid];
m73_422 -> m73_423  [key=0, style=solid];
m73_424 -> m73_425  [key=0, style=solid];
m73_415 -> m73_425  [key=0, style=solid];
m73_417 -> m73_425  [key=0, style=solid];
m73_419 -> m73_425  [key=0, style=solid];
m73_421 -> m73_425  [key=0, style=solid];
m73_423 -> m73_425  [key=0, style=solid];
m73_425 -> m73_389  [color=blue, key=0, style=bold];
m73_149 -> m73_156  [key=0, style=solid];
m73_156 -> m73_157  [key=0, style=solid];
m73_156 -> m73_158  [key=2, style=dotted];
m73_157 -> m73_149  [color=blue, key=0, style=bold];
m73_442 -> m73_443  [key=0, style=solid];
m73_442 -> m73_444  [key=2, style=dotted];
m73_441 -> m73_442  [key=0, style=solid];
m73_443 -> m73_441  [color=blue, key=0, style=bold];
m73_731 -> m73_732  [key=0, style=solid];
m73_731 -> m73_734  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogLevel", style=dashed];
m73_732 -> m73_733  [key=0, style=solid];
m73_732 -> m73_734  [key=0, style=solid];
m73_732 -> m73_738  [key=2, style=dotted];
m73_734 -> m73_735  [key=0, style=solid];
m73_733 -> m73_737  [key=0, style=solid];
m73_733 -> m73_229  [key=2, style=dotted];
m73_735 -> m73_736  [key=0, style=solid];
m73_735 -> m73_739  [key=2, style=dotted];
m73_736 -> m73_737  [key=0, style=solid];
m73_736 -> m73_740  [key=2, style=dotted];
m73_737 -> m73_731  [color=blue, key=0, style=bold];
m73_112 -> m73_113  [key=0, style=solid];
m73_112 -> m73_114  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_113 -> m73_114  [key=0, style=solid];
m73_113 -> m73_6  [key=2, style=dotted];
m73_114 -> m73_115  [key=0, style=solid];
m73_114 -> m73_0  [key=2, style=dotted];
m73_115 -> m73_112  [color=blue, key=0, style=bold];
m73_187 -> m73_628  [key=0, style=solid];
m73_628 -> m73_629  [key=0, style=solid];
m73_628 -> m73_630  [key=0, style=solid];
m73_628 -> m73_632  [key=2, style=dotted];
m73_629 -> m73_631  [key=0, style=solid];
m73_629 -> m73_229  [key=2, style=dotted];
m73_630 -> m73_631  [key=0, style=solid];
m73_630 -> m73_633  [key=2, style=dotted];
m73_631 -> m73_187  [color=blue, key=0, style=bold];
m73_2 -> m73_3  [key=0, style=solid];
m73_2 -> m73_4  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m73_3 -> m73_4  [key=0, style=solid];
m73_3 -> m73_6  [key=2, style=dotted];
m73_4 -> m73_5  [key=0, style=solid];
m73_4 -> m73_0  [key=2, style=dotted];
m73_5 -> m73_2  [color=blue, key=0, style=bold];
m73_784 -> m73_206  [color=darkseagreen4, key=1, label="Hangfire.Logging.LoggerExecutionWrapper", style=dashed];
m73_784 -> m73_210  [color=darkseagreen4, key=1, label="Hangfire.Logging.LoggerExecutionWrapper", style=dashed];
m73_784 -> m73_211  [color=darkseagreen4, key=1, label="Hangfire.Logging.LoggerExecutionWrapper", style=dashed];
m73_784 -> m73_217  [color=darkseagreen4, key=1, label="Hangfire.Logging.LoggerExecutionWrapper", style=dashed];
m73_784 -> m73_212  [color=darkseagreen4, key=1, label="Hangfire.Logging.LoggerExecutionWrapper", style=dashed];
m73_785 -> m73_215  [color=darkseagreen4, key=1, label="System.Func<string>", style=dashed];
m73_786 -> m73_226  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider", style=dashed];
m73_786 -> m73_232  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider", style=dashed];
m73_787 -> m73_253  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_257  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_259  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_262  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_263  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_266  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_267  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_270  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_271  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_274  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_275  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_278  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_279  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_281  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_282  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_296  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_297  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_300  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_301  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_304  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_305  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_308  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_309  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_312  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_313  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_315  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_316  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_328  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_330  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_332  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_334  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_336  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_787 -> m73_337  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", style=dashed];
m73_788 -> m73_341  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider", style=dashed];
m73_788 -> m73_346  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider", style=dashed];
m73_789 -> m73_360  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_364  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_366  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_369  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_370  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_373  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_374  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_377  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_378  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_381  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_382  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_384  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_385  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_393  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_394  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_397  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_398  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_401  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_402  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_405  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_406  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_408  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_409  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_415  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_417  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_419  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_421  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_423  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_789 -> m73_424  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", style=dashed];
m73_790 -> m73_475  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger", style=dashed];
m73_790 -> m73_476  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger", style=dashed];
m73_790 -> m73_477  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger", style=dashed];
m73_790 -> m73_482  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger", style=dashed];
m73_790 -> m73_484  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger", style=dashed];
m73_790 -> m73_485  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger", style=dashed];
m73_790 -> m73_494  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.EntLibLogProvider.EntLibLogger", style=dashed];
m73_791 -> m73_510  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider", style=dashed];
m73_791 -> m73_515  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider", style=dashed];
m73_792 -> m73_533  [color=darkseagreen4, key=1, label=func, style=dashed];
m73_793 -> m73_567  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_571  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_573  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_576  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_577  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_580  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_581  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_584  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_585  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_588  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_589  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_592  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_593  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_595  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_596  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_603  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_604  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_607  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_608  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_611  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_612  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_615  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_616  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_619  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_620  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_622  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_793 -> m73_623  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", style=dashed];
m73_794 -> m73_630  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.LoupeLogProvider", style=dashed];
m73_794 -> m73_635  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.LoupeLogProvider", style=dashed];
m73_795 -> m73_650  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger", style=dashed];
m73_795 -> m73_651  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger", style=dashed];
m73_795 -> m73_652  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger", style=dashed];
m73_795 -> m73_657  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.LoupeLogProvider.LoupeLogger", style=dashed];
m73_796 -> m73_709  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger", style=dashed];
m73_796 -> m73_714  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger", style=dashed];
m73_796 -> m73_718  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger", style=dashed];
m73_797 -> m73_734  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider", style=dashed];
m73_797 -> m73_735  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider", style=dashed];
m73_797 -> m73_736  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider", style=dashed];
m73_797 -> m73_742  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider", style=dashed];
m73_798 -> m73_763  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog", style=dashed];
m73_798 -> m73_764  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog", style=dashed];
m73_798 -> m73_765  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog", style=dashed];
m73_798 -> m73_769  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog", style=dashed];
m73_798 -> m73_771  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog", style=dashed];
m73_798 -> m73_775  [color=darkseagreen4, key=1, label="Hangfire.Logging.LogProviders.ElmahLogProvider.ElmahLog", style=dashed];
m74_15 -> m74_16  [key=0, style=solid];
m74_15 -> m74_18  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m74_15 -> m74_19  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m74_15 -> m74_20  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m74_16 -> m74_17  [key=0, style=solid];
m74_18 -> m74_19  [key=0, style=solid];
m74_18 -> m74_18  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m74_19 -> m74_20  [key=0, style=solid];
m74_19 -> m74_21  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m74_20 -> m74_21  [key=0, style=solid];
m74_20 -> m74_32  [key=2, style=dotted];
m74_20 -> m74_20  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m74_17 -> m74_18  [key=0, style=solid];
m74_17 -> m74_17  [color=darkorchid, key=3, label="Local variable int queueIndex", style=bold];
m74_21 -> m74_22  [key=0, style=solid];
m74_21 -> m74_33  [key=2, style=dotted];
m74_22 -> m74_23  [key=0, style=solid];
m74_22 -> m74_26  [color=green, key=0, style=solid];
m74_22 -> m74_29  [key=0, style=solid];
m74_22 -> m74_34  [key=2, style=dotted];
m74_23 -> m74_24  [key=0, style=solid];
m74_26 -> m74_27  [color=green, key=0, style=solid];
m74_29 -> m74_17  [key=0, style=solid];
m74_29 -> m74_30  [key=0, style=solid];
m74_24 -> m74_25  [key=0, style=solid];
m74_24 -> m74_14  [key=2, style=dotted];
m74_25 -> m74_29  [key=0, style=solid];
m74_27 -> m74_28  [key=0, style=solid];
m74_27 -> m74_14  [key=2, style=dotted];
m74_28 -> m74_29  [key=0, style=solid];
m74_28 -> m74_30  [color=darkseagreen4, key=1, label=message, style=dashed];
m74_30 -> m74_31  [key=0, style=solid];
m74_30 -> m74_35  [key=2, style=dotted];
m74_31 -> m74_15  [color=blue, key=0, style=bold];
m74_46 -> m74_47  [key=0, style=solid];
m74_47 -> m74_48  [key=0, style=solid];
m74_47 -> m74_51  [key=0, style=solid];
m74_48 -> m74_49  [key=0, style=solid];
m74_48 -> m74_50  [key=0, style=solid];
m74_49 -> m74_50  [key=0, style=solid];
m74_49 -> m74_56  [key=2, style=dotted];
m74_50 -> m74_51  [key=0, style=solid];
m74_50 -> m74_57  [key=2, style=dotted];
m74_51 -> m74_52  [key=0, style=solid];
m74_51 -> m74_55  [key=0, style=solid];
m74_52 -> m74_53  [key=0, style=solid];
m74_52 -> m74_54  [key=0, style=solid];
m74_53 -> m74_54  [key=0, style=solid];
m74_53 -> m74_56  [key=2, style=dotted];
m74_54 -> m74_55  [key=0, style=solid];
m74_54 -> m74_57  [key=2, style=dotted];
m74_55 -> m74_46  [color=blue, key=0, style=bold];
m74_35 -> m74_0  [color=darkorchid, key=3, label="Field variable System.Collections.Generic.IEnumerable<string> _queues", style=bold];
m74_14 -> m74_58  [key=0, style=solid];
m74_58 -> m74_59  [key=0, style=solid];
m74_59 -> m74_60  [key=0, style=solid];
m74_59 -> m74_61  [key=0, style=solid];
m74_60 -> m74_71  [key=0, style=solid];
m74_61 -> m74_62  [key=0, style=solid];
m74_61 -> m74_63  [key=0, style=solid];
m74_62 -> m74_63  [key=0, style=solid];
m74_62 -> m74_72  [key=2, style=dotted];
m74_63 -> m74_64  [key=0, style=solid];
m74_63 -> m74_65  [key=0, style=solid];
m74_64 -> m74_65  [key=0, style=solid];
m74_64 -> m74_12  [key=2, style=dotted];
m74_65 -> m74_66  [key=0, style=solid];
m74_65 -> m74_73  [key=2, style=dotted];
m74_66 -> m74_67  [key=0, style=solid];
m74_66 -> m74_74  [key=2, style=dotted];
m74_67 -> m74_68  [key=0, style=solid];
m74_67 -> m74_43  [key=2, style=dotted];
m74_68 -> m74_69  [key=0, style=solid];
m74_68 -> m74_44  [key=2, style=dotted];
m74_69 -> m74_70  [key=0, style=solid];
m74_69 -> m74_71  [key=0, style=solid];
m74_70 -> m74_69  [key=0, style=solid];
m74_70 -> m74_75  [key=2, style=dotted];
m74_71 -> m74_14  [color=blue, key=0, style=bold];
m74_0 -> m74_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m74_0 -> m74_6  [color=darkseagreen4, key=1, label=ConnectionFactory, style=dashed];
m74_0 -> m74_7  [color=darkseagreen4, key=1, label=ConnectionFactory, style=dashed];
m74_0 -> m74_1  [key=0, style=solid];
m74_0 -> m74_3  [color=darkseagreen4, key=1, label=ConnectionFactory, style=dashed];
m74_5 -> m74_6  [key=0, style=solid];
m74_6 -> m74_7  [key=0, style=solid];
m74_7 -> m74_8  [key=0, style=solid];
m74_7 -> m74_12  [key=2, style=dotted];
m74_8 -> m74_9  [key=0, style=solid];
m74_8 -> m74_13  [key=2, style=dotted];
m74_9 -> m74_14  [key=2, style=dotted];
m74_9 -> m74_10  [key=0, style=solid];
m74_3 -> m74_5  [key=0, style=solid];
m74_3 -> m74_4  [key=0, style=solid];
m74_1 -> m74_3  [key=0, style=solid];
m74_1 -> m74_2  [key=0, style=solid];
m74_4 -> m74_10  [key=0, style=solid];
m74_4 -> m74_11  [key=2, style=dotted];
m74_2 -> m74_10  [key=0, style=solid];
m74_2 -> m74_11  [key=2, style=dotted];
m74_10 -> m74_0  [color=blue, key=0, style=bold];
m74_36 -> m74_37  [key=0, style=solid];
m74_36 -> m74_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m74_37 -> m74_38  [key=0, style=solid];
m74_37 -> m74_42  [key=2, style=dotted];
m74_37 -> m74_40  [color=darkseagreen4, key=1, label=body, style=dashed];
m74_40 -> m74_41  [key=0, style=solid];
m74_40 -> m74_45  [key=2, style=dotted];
m74_38 -> m74_39  [key=0, style=solid];
m74_38 -> m74_43  [key=2, style=dotted];
m74_38 -> m74_40  [color=darkseagreen4, key=1, label=properties, style=dashed];
m74_39 -> m74_40  [key=0, style=solid];
m74_39 -> m74_44  [key=2, style=dotted];
m74_41 -> m74_36  [color=blue, key=0, style=bold];
m74_33 -> m74_76  [key=0, style=solid];
m74_33 -> m74_77  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m74_33 -> m74_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m74_33 -> m74_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m74_33 -> m74_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m74_33 -> m74_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m74_33 -> m74_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m74_33 -> m74_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m74_33 -> m74_19  [color=darkorchid, key=3, label="Parameter variable string queue", style=bold];
m74_33 -> m74_15  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m74_76 -> m74_77  [key=0, style=solid];
m74_76 -> m74_87  [color=darkorchid, key=3, label="Local variable QueueingBasicConsumer consumer", style=bold];
m74_77 -> m74_78  [key=0, style=solid];
m74_77 -> m74_32  [key=2, style=dotted];
m74_77 -> m74_77  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m74_78 -> m74_79  [key=0, style=solid];
m74_78 -> m74_84  [key=0, style=solid];
m74_78 -> m74_93  [key=2, style=dotted];
m74_78 -> m74_86  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m74_78 -> m74_91  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m74_80 -> m74_81  [key=0, style=solid];
m74_80 -> m74_91  [key=0, style=solid];
m74_80 -> m74_93  [key=2, style=dotted];
m74_82 -> m74_83  [key=0, style=solid];
m74_82 -> m74_95  [key=2, style=dotted];
m74_82 -> m74_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m74_83 -> m74_91  [key=0, style=solid];
m74_83 -> m74_96  [key=2, style=dotted];
m74_88 -> m74_89  [key=0, style=solid];
m74_88 -> m74_95  [key=2, style=dotted];
m74_88 -> m74_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m74_89 -> m74_90  [key=0, style=solid];
m74_89 -> m74_96  [key=2, style=dotted];
m74_79 -> m74_80  [key=0, style=solid];
m74_84 -> m74_85  [key=0, style=solid];
m74_84 -> m74_91  [key=0, style=solid];
m74_86 -> m74_87  [key=0, style=solid];
m74_86 -> m74_91  [key=0, style=solid];
m74_91 -> m74_92  [key=0, style=solid];
m74_81 -> m74_82  [key=0, style=solid];
m74_81 -> m74_94  [key=2, style=dotted];
m74_81 -> m74_98  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m74_81 -> m74_83  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m74_81 -> m74_91  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m74_85 -> m74_86  [key=0, style=solid];
m74_87 -> m74_88  [key=0, style=solid];
m74_87 -> m74_94  [key=2, style=dotted];
m74_87 -> m74_101  [color=darkseagreen4, key=1, label=newConsumer, style=dashed];
m74_87 -> m74_89  [color=darkseagreen4, key=1, label=newConsumer, style=dashed];
m74_87 -> m74_90  [color=darkseagreen4, key=1, label=newConsumer, style=dashed];
m74_90 -> m74_91  [key=0, style=solid];
m74_92 -> m74_33  [color=blue, key=0, style=bold];
m74_100 -> m74_101  [key=0, style=solid];
m74_98 -> m74_99  [key=0, style=solid];
m74_97 -> m74_98  [key=0, style=solid];
m74_101 -> m74_102  [key=0, style=solid];
m74_99 -> m74_97  [color=blue, key=0, style=bold];
m74_102 -> m74_100  [color=blue, key=0, style=bold];
m74_103 -> m74_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_24  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_27  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_38  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_48  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_49  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_50  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_51  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_52  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_53  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_54  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_59  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_61  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_62  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_63  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_64  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_65  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_66  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_67  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_69  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_70  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_78  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_80  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_81  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_82  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_83  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_87  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_88  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_103 -> m74_89  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqJobQueue", style=dashed];
m74_104 -> m74_98  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m74_105 -> m74_101  [color=darkseagreen4, key=1, label=newConsumer, style=dashed];
m75_0 -> m75_1  [key=0, style=solid];
m75_1 -> m75_0  [color=blue, key=0, style=bold];
m76_16 -> m76_17  [key=0, style=solid];
m76_17 -> m76_18  [key=0, style=solid];
m76_18 -> m76_16  [color=blue, key=0, style=bold];
m76_0 -> m76_1  [key=0, style=solid];
m76_0 -> m76_3  [color=darkseagreen4, key=1, label="System.Action<ConnectionFactory>", style=dashed];
m76_0 -> m76_6  [color=red, key=1, label="System.Action<ConnectionFactory>", style=dashed];
m76_0 -> m76_7  [color=red, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m76_0 -> m76_8  [color=red, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m76_1 -> m76_2  [key=0, style=solid];
m76_1 -> m76_3  [key=0, style=solid];
m76_3 -> m76_4  [key=0, style=solid];
m76_3 -> m76_5  [color=red, key=0, style=solid];
m76_6 -> m76_7  [color=red, key=0, style=solid];
m76_6 -> m76_12  [color=red, key=2, style=dotted];
m76_7 -> m76_8  [color=red, key=0, style=solid];
m76_7 -> m76_13  [color=red, key=2, style=dotted];
m76_8 -> m76_9  [color=red, key=0, style=solid];
m76_8 -> m76_14  [color=red, key=2, style=dotted];
m76_8 -> m76_15  [color=red, key=2, style=dotted];
m76_2 -> m76_9  [key=0, style=solid];
m76_2 -> m76_10  [key=2, style=dotted];
m76_4 -> m76_9  [key=0, style=solid];
m76_4 -> m76_10  [key=2, style=dotted];
m76_5 -> m76_6  [color=red, key=0, style=solid];
m76_5 -> m76_11  [color=red, key=2, style=dotted];
m76_5 -> m76_7  [color=red, key=1, label=factory, style=dashed];
m76_5 -> m76_8  [color=red, key=1, label=factory, style=dashed];
m76_9 -> m76_0  [color=blue, key=0, style=bold];
m76_19 -> m76_20  [key=0, style=solid];
m76_20 -> m76_21  [key=0, style=solid];
m76_21 -> m76_19  [color=blue, key=0, style=bold];
m76_22 -> m76_7  [color=red, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m76_22 -> m76_8  [color=red, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m76_22 -> m76_17  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m76_22 -> m76_20  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m77_15 -> m77_16  [key=0, style=solid];
m77_15 -> m77_18  [key=2, style=dotted];
m77_11 -> m77_12  [key=0, style=solid];
m77_11 -> m77_7  [key=2, style=dotted];
m77_8 -> m77_9  [key=0, style=solid];
m77_9 -> m77_10  [key=0, style=solid];
m77_9 -> m77_11  [key=2, style=dotted];
m77_9 -> m77_5  [key=2, style=dotted];
m77_10 -> m77_8  [color=blue, key=0, style=bold];
m77_10 -> m77_11  [key=0, style=solid];
m77_10 -> m77_13  [key=2, style=dotted];
m77_12 -> m77_13  [key=0, style=solid];
m77_12 -> m77_8  [color=blue, key=0, style=bold];
m77_13 -> m77_14  [key=0, style=solid];
m77_13 -> m77_15  [key=2, style=dotted];
m77_14 -> m77_12  [color=blue, key=0, style=bold];
m77_14 -> m77_15  [color=green, key=0, style=solid];
m77_14 -> m77_17  [color=green, key=2, style=dotted];
m77_18 -> m77_16  [color=blue, key=0, style=bold];
m77_0 -> m77_1  [key=0, style=solid];
m77_0 -> m77_0  [color=darkorchid, key=3, label="Field variable string HostName", style=bold];
m77_1 -> m77_2  [key=0, style=solid];
m77_1 -> m77_6  [key=2, style=dotted];
m77_1 -> m77_5  [key=2, style=dotted];
m77_2 -> m77_3  [key=0, style=solid];
m77_2 -> m77_6  [key=2, style=dotted];
m77_3 -> m77_4  [key=0, style=solid];
m77_3 -> m77_7  [key=2, style=dotted];
m77_4 -> m77_5  [key=0, style=solid];
m77_4 -> m77_0  [color=blue, key=0, style=bold];
m77_5 -> m77_0  [color=blue, key=0, style=bold];
m77_5 -> m77_14  [color=green, key=0, style=solid];
m77_17 -> m77_18  [key=0, style=solid];
m77_17 -> m77_19  [key=2, style=dotted];
m77_16 -> m77_17  [key=0, style=solid];
m77_16 -> m77_5  [color=blue, key=0, style=bold];
m77_20 -> m77_1  [color=darkseagreen4, key=1, label="HangFire.Host", style=dashed];
m77_20 -> m77_2  [color=darkseagreen4, key=1, label="HangFire.Host", style=dashed];
m77_20 -> m77_3  [color=darkseagreen4, key=1, label="HangFire.Host", style=dashed];
m77_20 -> m77_4  [color=darkseagreen4, key=1, label="HangFire.Host", style=dashed];
m77_20 -> m77_9  [color=darkseagreen4, key=1, label="HangFire.Host", style=dashed];
m77_20 -> m77_13  [color=darkseagreen4, key=1, label="HangFire.Host", style=dashed];
m77_20 -> m77_17  [color=darkseagreen4, key=1, label="HangFire.Host", style=dashed];
m78_0 -> m78_1  [key=0, style=solid];
m78_1 -> m78_2  [key=0, style=solid];
m78_2 -> m78_3  [key=0, style=solid];
m78_3 -> m78_4  [key=0, style=solid];
m78_4 -> m78_5  [key=0, style=solid];
m78_4 -> m78_6  [key=2, style=dotted];
m78_5 -> m78_0  [color=blue, key=0, style=bold];
m78_7 -> m78_8  [key=0, style=solid];
m78_8 -> m78_9  [key=0, style=solid];
m78_8 -> m78_10  [key=2, style=dotted];
m78_9 -> m78_7  [color=blue, key=0, style=bold];
m78_11 -> m78_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.WorkerContextMock", style=dashed];
m78_11 -> m78_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.WorkerContextMock", style=dashed];
m78_11 -> m78_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.WorkerContextMock", style=dashed];
m78_11 -> m78_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.WorkerContextMock", style=dashed];
m78_11 -> m78_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.WorkerContextMock", style=dashed];
m80_0 -> m80_8  [color=green, key=1, label="System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>", style=dashed];
m80_0 -> m80_14  [color=green, key=1, label="params string[]", style=dashed];
m80_0 -> m80_0  [color=darkorchid, key=3, label="method methodReturn HangFire.SqlServer.SqlServerStorage UseRabbitMq", style=bold];
m80_0 -> m80_1  [key=0, style=solid];
m80_0 -> m80_3  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m80_0 -> m80_5  [color=darkseagreen4, key=1, label="System.Action<HangFire.SqlServer.RabbitMQ.RabbitMqConnectionConfiguration>", style=dashed];
m80_0 -> m80_15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m80_0 -> m80_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m80_8 -> m80_9  [color=green, key=0, style=solid];
m80_8 -> m80_20  [color=green, key=2, style=dotted];
m80_7 -> m80_8  [color=green, key=0, style=solid];
m80_7 -> m80_19  [color=green, key=2, style=dotted];
m80_7 -> m80_10  [color=green, key=1, label=conf, style=dashed];
m80_7 -> m80_11  [color=green, key=1, label=conf, style=dashed];
m80_7 -> m80_12  [color=green, key=1, label=conf, style=dashed];
m80_7 -> m80_13  [color=green, key=1, label=conf, style=dashed];
m80_9 -> m80_10  [color=green, key=0, style=solid];
m80_9 -> m80_21  [color=green, key=2, style=dotted];
m80_14 -> m80_15  [color=green, key=0, style=solid];
m80_14 -> m80_22  [color=green, key=2, style=dotted];
m80_13 -> m80_14  [color=green, key=0, style=solid];
m80_13 -> m80_13  [color=green, key=1, label=cf, style=dashed];
m80_15 -> m80_16  [key=0, style=solid];
m80_15 -> m80_23  [key=2, style=dotted];
m80_5 -> m80_7  [color=green, key=0, style=solid];
m80_5 -> m80_6  [key=0, style=solid];
m80_10 -> m80_10  [color=green, key=1, label=cf, style=dashed];
m80_10 -> m80_11  [color=green, key=0, style=solid];
m80_11 -> m80_11  [color=green, key=1, label=cf, style=dashed];
m80_11 -> m80_12  [color=green, key=0, style=solid];
m80_12 -> m80_12  [color=green, key=1, label=cf, style=dashed];
m80_12 -> m80_13  [color=green, key=0, style=solid];
m80_1 -> m80_2  [key=0, style=solid];
m80_1 -> m80_3  [key=0, style=solid];
m80_3 -> m80_5  [key=0, style=solid];
m80_3 -> m80_4  [key=0, style=solid];
m80_16 -> m80_17  [key=0, style=solid];
m80_6 -> m80_17  [key=0, style=solid];
m80_6 -> m80_18  [key=2, style=dotted];
m80_2 -> m80_17  [key=0, style=solid];
m80_2 -> m80_18  [key=2, style=dotted];
m80_2 -> m80_0  [color=blue, key=0, style=bold];
m80_4 -> m80_17  [key=0, style=solid];
m80_4 -> m80_18  [key=2, style=dotted];
m80_17 -> m80_0  [color=blue, key=0, style=bold];
m81_35 -> m81_1  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqSqlServerStorageExtensionsFacts", style=dashed];
m81_35 -> m81_20  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqSqlServerStorageExtensionsFacts", style=dashed];
m81_35 -> m81_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqSqlServerStorageExtensionsFacts", style=dashed];
m81_18 -> m81_19  [key=0, style=solid];
m81_18 -> m81_30  [key=2, style=dotted];
m81_20 -> m81_21  [key=0, style=solid];
m81_20 -> m81_25  [key=2, style=dotted];
m81_20 -> m81_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m81_20 -> m81_30  [key=2, style=dotted];
m81_21 -> m81_22  [key=0, style=solid];
m81_21 -> m81_26  [key=2, style=dotted];
m81_21 -> m81_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m81_21 -> m81_27  [key=0, style=solid];
m81_19 -> m81_20  [key=0, style=solid];
m81_19 -> m81_24  [key=2, style=dotted];
m81_19 -> m81_35  [key=2, style=dotted];
m81_22 -> m81_23  [key=0, style=solid];
m81_22 -> m81_27  [key=2, style=dotted];
m81_22 -> m81_30  [key=2, style=dotted];
m81_23 -> m81_18  [color=blue, key=0, style=bold];
m81_23 -> m81_24  [key=0, style=solid];
m81_23 -> m81_40  [key=2, style=dotted];
m81_23 -> m81_35  [key=2, style=dotted];
m81_30 -> m81_28  [color=blue, key=0, style=bold];
m81_24 -> m81_25  [key=0, style=solid];
m81_24 -> m81_30  [key=2, style=dotted];
m81_0 -> m81_1  [color=green, key=0, style=solid];
m81_1 -> m81_2  [color=green, key=0, style=solid];
m81_1 -> m81_3  [color=green, key=2, style=dotted];
m81_1 -> m81_4  [color=green, key=2, style=dotted];
m81_1 -> m81_30  [key=2, style=dotted];
m81_2 -> m81_0  [color=blue, key=0, style=bold];
m81_2 -> m81_3  [key=0, style=solid];
m81_2 -> m81_31  [key=2, style=dotted];
m81_3 -> m81_4  [key=0, style=solid];
m81_3 -> m81_32  [key=2, style=dotted];
m81_4 -> m81_5  [key=0, style=solid];
m81_4 -> m81_33  [key=2, style=dotted];
m81_4 -> m81_6  [color=darkseagreen4, key=1, label=servers, style=dashed];
m81_4 -> m81_9  [color=darkseagreen4, key=1, label=servers, style=dashed];
m81_5 -> m81_6  [key=0, style=solid];
m81_5 -> m81_30  [key=2, style=dotted];
m81_6 -> m81_7  [key=0, style=solid];
m81_6 -> m81_8  [key=0, style=solid];
m81_9 -> m81_10  [key=0, style=solid];
m81_9 -> m81_28  [key=0, style=solid];
m81_9 -> m81_11  [color=darkseagreen4, key=1, label=server, style=dashed];
m81_9 -> m81_13  [color=darkseagreen4, key=1, label=server, style=dashed];
m81_9 -> m81_15  [color=darkseagreen4, key=1, label=server, style=dashed];
m81_9 -> m81_17  [color=darkseagreen4, key=1, label=server, style=dashed];
m81_9 -> m81_19  [color=darkseagreen4, key=1, label=server, style=dashed];
m81_9 -> m81_21  [color=darkseagreen4, key=1, label=server, style=dashed];
m81_9 -> m81_23  [color=darkseagreen4, key=1, label=server, style=dashed];
m81_9 -> m81_25  [color=darkseagreen4, key=1, label=server, style=dashed];
m81_7 -> m81_29  [key=0, style=solid];
m81_7 -> m81_30  [key=2, style=dotted];
m81_8 -> m81_9  [key=0, style=solid];
m81_8 -> m81_30  [key=2, style=dotted];
m81_10 -> m81_11  [key=0, style=solid];
m81_10 -> m81_30  [key=2, style=dotted];
m81_28 -> m81_29  [key=0, style=solid];
m81_28 -> m81_30  [key=2, style=dotted];
m81_11 -> m81_12  [key=0, style=solid];
m81_11 -> m81_34  [key=2, style=dotted];
m81_11 -> m81_35  [key=2, style=dotted];
m81_13 -> m81_14  [key=0, style=solid];
m81_13 -> m81_35  [key=2, style=dotted];
m81_15 -> m81_16  [key=0, style=solid];
m81_15 -> m81_36  [key=2, style=dotted];
m81_15 -> m81_37  [key=2, style=dotted];
m81_15 -> m81_38  [key=2, style=dotted];
m81_15 -> m81_39  [key=2, style=dotted];
m81_17 -> m81_18  [key=0, style=solid];
m81_17 -> m81_40  [key=2, style=dotted];
m81_17 -> m81_35  [key=2, style=dotted];
m81_25 -> m81_26  [key=0, style=solid];
m81_25 -> m81_35  [key=2, style=dotted];
m81_12 -> m81_13  [key=0, style=solid];
m81_12 -> m81_30  [key=2, style=dotted];
m81_14 -> m81_15  [key=0, style=solid];
m81_14 -> m81_30  [key=2, style=dotted];
m81_16 -> m81_17  [key=0, style=solid];
m81_16 -> m81_30  [key=2, style=dotted];
m81_27 -> m81_9  [key=0, style=solid];
m81_27 -> m81_30  [key=2, style=dotted];
m81_26 -> m81_27  [key=0, style=solid];
m81_26 -> m81_30  [key=2, style=dotted];
m81_29 -> m81_0  [color=blue, key=0, style=bold];
m81_29 -> m81_30  [key=0, style=solid];
m81_31 -> m81_32  [key=0, style=solid];
m81_32 -> m81_33  [key=0, style=solid];
m81_32 -> m81_34  [key=2, style=dotted];
m81_33 -> m81_31  [color=blue, key=0, style=bold];
m81_41 -> m81_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m81_41 -> m81_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m91_0 -> m91_1  [key=0, style=solid];
m91_1 -> m91_0  [color=blue, key=0, style=bold];
m91_2 -> m91_3  [key=0, style=solid];
m91_2 -> m91_5  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m91_2 -> m91_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_2 -> m91_8  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m91_2 -> m91_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m91_3 -> m91_4  [key=0, style=solid];
m91_3 -> m91_5  [key=0, style=solid];
m91_5 -> m91_6  [key=0, style=solid];
m91_5 -> m91_7  [key=0, style=solid];
m91_7 -> m91_8  [key=0, style=solid];
m91_8 -> m91_9  [key=0, style=solid];
m91_9 -> m91_10  [key=0, style=solid];
m91_4 -> m91_10  [key=0, style=solid];
m91_4 -> m91_11  [key=2, style=dotted];
m91_6 -> m91_10  [key=0, style=solid];
m91_6 -> m91_11  [key=2, style=dotted];
m91_10 -> m91_2  [color=blue, key=0, style=bold];
m91_12 -> m91_7  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m91_12 -> m91_8  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m91_12 -> m91_9  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m92_67 -> m92_68  [key=0, style=solid];
m92_68 -> m92_69  [key=0, style=solid];
m92_68 -> m92_42  [key=2, style=dotted];
m92_69 -> m92_70  [key=0, style=solid];
m92_69 -> m92_22  [key=2, style=dotted];
m92_70 -> m92_71  [key=0, style=solid];
m92_70 -> m92_30  [key=2, style=dotted];
m92_71 -> m92_72  [key=0, style=solid];
m92_71 -> m92_55  [key=2, style=dotted];
m92_71 -> m92_73  [color=darkseagreen4, key=1, label=table3, style=dashed];
m92_71 -> m92_74  [color=darkseagreen4, key=1, label=table3, style=dashed];
m92_72 -> m92_73  [key=0, style=solid];
m92_72 -> m92_56  [key=2, style=dotted];
m92_73 -> m92_74  [key=0, style=solid];
m92_73 -> m92_56  [key=2, style=dotted];
m92_74 -> m92_75  [key=0, style=solid];
m92_74 -> m92_43  [key=2, style=dotted];
m92_75 -> m92_76  [key=0, style=solid];
m92_75 -> m92_44  [key=2, style=dotted];
m92_76 -> m92_77  [key=0, style=solid];
m92_76 -> m92_26  [key=2, style=dotted];
m92_77 -> m92_67  [color=blue, key=0, style=bold];
m92_9 -> m92_10  [key=0, style=solid];
m92_10 -> m92_11  [key=0, style=solid];
m92_10 -> m92_13  [key=2, style=dotted];
m92_11 -> m92_12  [key=0, style=solid];
m92_12 -> m92_9  [color=blue, key=0, style=bold];
m92_78 -> m92_79  [key=0, style=solid];
m92_79 -> m92_80  [key=0, style=solid];
m92_79 -> m92_42  [key=2, style=dotted];
m92_80 -> m92_81  [key=0, style=solid];
m92_80 -> m92_22  [key=2, style=dotted];
m92_81 -> m92_82  [key=0, style=solid];
m92_81 -> m92_30  [key=2, style=dotted];
m92_82 -> m92_83  [key=0, style=solid];
m92_82 -> m92_43  [key=2, style=dotted];
m92_83 -> m92_84  [key=0, style=solid];
m92_83 -> m92_44  [key=2, style=dotted];
m92_84 -> m92_85  [key=0, style=solid];
m92_84 -> m92_26  [key=2, style=dotted];
m92_85 -> m92_78  [color=blue, key=0, style=bold];
m92_22 -> m92_23  [key=0, style=solid];
m92_23 -> m92_24  [key=0, style=solid];
m92_23 -> m92_25  [key=2, style=dotted];
m92_24 -> m92_22  [color=blue, key=0, style=bold];
m92_26 -> m92_27  [key=0, style=solid];
m92_27 -> m92_28  [key=0, style=solid];
m92_27 -> m92_29  [key=2, style=dotted];
m92_28 -> m92_26  [color=blue, key=0, style=bold];
m92_44 -> m92_45  [color=green, key=0, style=solid];
m92_44 -> m92_46  [color=green, key=1, label="System.Action<HangFire.Redis.RedisConnection>", style=dashed];
m92_45 -> m92_46  [color=green, key=0, style=solid];
m92_45 -> m92_42  [color=green, key=2, style=dotted];
m92_45 -> m92_41  [color=green, key=2, style=dotted];
m92_46 -> m92_47  [color=green, key=0, style=solid];
m92_46 -> m92_48  [color=green, key=2, style=dotted];
m92_46 -> m92_42  [key=2, style=dotted];
m92_47 -> m92_44  [color=blue, key=0, style=bold];
m92_47 -> m92_48  [key=0, style=solid];
m92_47 -> m92_22  [key=2, style=dotted];
m92_48 -> m92_49  [key=0, style=solid];
m92_48 -> m92_30  [key=2, style=dotted];
m92_34 -> m92_35  [key=0, style=solid];
m92_35 -> m92_36  [key=0, style=solid];
m92_35 -> m92_42  [key=2, style=dotted];
m92_36 -> m92_37  [color=green, key=0, style=solid];
m92_36 -> m92_22  [key=2, style=dotted];
m92_36 -> m92_39  [color=green, key=1, label="System.Action<IRedisClient, HangFire.Redis.RedisConnection>", style=dashed];
m92_37 -> m92_38  [color=green, key=0, style=solid];
m92_37 -> m92_30  [key=2, style=dotted];
m92_37 -> m92_41  [color=green, key=2, style=dotted];
m92_37 -> m92_39  [color=green, key=1, label=redis, style=dashed];
m92_38 -> m92_39  [color=green, key=0, style=solid];
m92_38 -> m92_43  [key=2, style=dotted];
m92_38 -> m92_42  [color=green, key=2, style=dotted];
m92_39 -> m92_40  [color=green, key=0, style=solid];
m92_39 -> m92_44  [key=2, style=dotted];
m92_39 -> m92_43  [color=green, key=2, style=dotted];
m92_40 -> m92_41  [key=0, style=solid];
m92_40 -> m92_26  [key=2, style=dotted];
m92_40 -> m92_36  [color=blue, key=0, style=bold];
m92_41 -> m92_34  [color=blue, key=0, style=bold];
m92_14 -> m92_15  [key=0, style=solid];
m92_15 -> m92_16  [key=0, style=solid];
m92_15 -> m92_17  [key=0, style=solid];
m92_16 -> m92_17  [key=0, style=solid];
m92_16 -> m92_0  [key=2, style=dotted];
m92_17 -> m92_14  [color=blue, key=0, style=bold];
m92_18 -> m92_19  [key=0, style=solid];
m92_19 -> m92_20  [key=0, style=solid];
m92_19 -> m92_21  [key=2, style=dotted];
m92_20 -> m92_18  [color=blue, key=0, style=bold];
m92_57 -> m92_58  [key=0, style=solid];
m92_58 -> m92_59  [key=0, style=solid];
m92_58 -> m92_42  [key=2, style=dotted];
m92_59 -> m92_60  [key=0, style=solid];
m92_59 -> m92_22  [key=2, style=dotted];
m92_60 -> m92_61  [key=0, style=solid];
m92_60 -> m92_30  [key=2, style=dotted];
m92_61 -> m92_62  [key=0, style=solid];
m92_61 -> m92_43  [key=2, style=dotted];
m92_62 -> m92_63  [key=0, style=solid];
m92_62 -> m92_55  [key=2, style=dotted];
m92_62 -> m92_64  [color=darkseagreen4, key=1, label=table2, style=dashed];
m92_63 -> m92_64  [key=0, style=solid];
m92_63 -> m92_56  [key=2, style=dotted];
m92_64 -> m92_65  [key=0, style=solid];
m92_64 -> m92_44  [key=2, style=dotted];
m92_65 -> m92_66  [key=0, style=solid];
m92_65 -> m92_26  [key=2, style=dotted];
m92_66 -> m92_57  [color=blue, key=0, style=bold];
m92_49 -> m92_50  [key=0, style=solid];
m92_49 -> m92_43  [key=2, style=dotted];
m92_50 -> m92_51  [key=0, style=solid];
m92_50 -> m92_55  [key=2, style=dotted];
m92_50 -> m92_52  [color=darkseagreen4, key=1, label=table1, style=dashed];
m92_51 -> m92_52  [key=0, style=solid];
m92_51 -> m92_56  [key=2, style=dotted];
m92_52 -> m92_53  [key=0, style=solid];
m92_52 -> m92_44  [key=2, style=dotted];
m92_53 -> m92_54  [key=0, style=solid];
m92_53 -> m92_26  [key=2, style=dotted];
m92_54 -> m92_45  [color=blue, key=0, style=bold];
m92_30 -> m92_31  [key=0, style=solid];
m92_31 -> m92_32  [key=0, style=solid];
m92_31 -> m92_33  [key=2, style=dotted];
m92_32 -> m92_30  [color=blue, key=0, style=bold];
m92_0 -> m92_1  [key=0, style=solid];
m92_1 -> m92_2  [key=0, style=solid];
m92_1 -> m92_5  [key=2, style=dotted];
m92_2 -> m92_3  [key=0, style=solid];
m92_2 -> m92_6  [key=2, style=dotted];
m92_2 -> m92_7  [key=2, style=dotted];
m92_3 -> m92_4  [key=0, style=solid];
m92_3 -> m92_8  [key=2, style=dotted];
m92_4 -> m92_0  [color=blue, key=0, style=bold];
m92_86 -> m92_36  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_40  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_47  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_48  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_53  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_59  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_60  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_65  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_69  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_76  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_80  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_81  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m92_86 -> m92_84  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m93_35 -> m93_36  [key=0, style=solid];
m93_37 -> m93_38  [key=0, style=solid];
m93_37 -> m93_39  [key=2, style=dotted];
m93_37 -> m93_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_36 -> m93_37  [key=0, style=solid];
m93_36 -> m93_7  [key=2, style=dotted];
m93_38 -> m93_35  [color=blue, key=0, style=bold];
m93_4 -> m93_5  [key=0, style=solid];
m93_4 -> m93_10  [key=2, style=dotted];
m93_5 -> m93_11  [key=2, style=dotted];
m93_5 -> m93_12  [key=2, style=dotted];
m93_5 -> m93_6  [key=0, style=solid];
m93_5 -> m93_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_83 -> m93_128  [color=green, key=0, style=solid];
m93_128 -> m93_129  [color=green, key=0, style=solid];
m93_128 -> m93_26  [color=green, key=2, style=dotted];
m93_129 -> m93_83  [color=blue, key=0, style=bold];
m93_0 -> m93_1  [key=0, style=solid];
m93_0 -> m93_2  [color=red, key=1, label=string, style=dashed];
m93_1 -> m93_2  [color=red, key=0, style=solid];
m93_1 -> m93_4  [key=2, style=dotted];
m93_1 -> m93_7  [key=2, style=dotted];
m93_2 -> m93_3  [color=green, key=0, style=solid];
m93_2 -> m93_5  [color=red, key=2, style=dotted];
m93_2 -> m93_4  [color=red, key=3, label="Field variable IRedisClient _redis", style=bold];
m93_2 -> m93_8  [key=2, style=dotted];
m93_3 -> m93_0  [color=blue, key=0, style=bold];
m93_3 -> m93_4  [color=green, key=0, style=solid];
m93_3 -> m93_9  [color=green, key=2, style=dotted];
m93_61 -> m93_62  [key=0, style=solid];
m93_62 -> m93_63  [key=0, style=solid];
m93_62 -> m93_65  [key=2, style=dotted];
m93_63 -> m93_57  [key=2, style=dotted];
m93_63 -> m93_64  [key=0, style=solid];
m93_63 -> m93_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_64 -> m93_61  [color=blue, key=0, style=bold];
m93_69 -> m93_70  [color=green, key=0, style=solid];
m93_70 -> m93_71  [color=green, key=0, style=solid];
m93_70 -> m93_73  [color=green, key=2, style=dotted];
m93_71 -> m93_72  [color=green, key=0, style=solid];
m93_71 -> m93_57  [color=green, key=2, style=dotted];
m93_71 -> m93_74  [color=green, key=1, label="lambda expression", style=dashed];
m93_72 -> m93_69  [color=blue, key=0, style=bold];
m93_9 -> m93_10  [key=0, style=solid];
m93_112 -> m93_113  [color=green, key=0, style=solid];
m93_113 -> m93_114  [color=green, key=0, style=solid];
m93_113 -> m93_120  [color=green, key=2, style=dotted];
m93_113 -> m93_118  [color=green, key=1, label=storageComponent, style=dashed];
m93_114 -> m93_115  [color=green, key=0, style=solid];
m93_114 -> m93_11  [color=green, key=2, style=dotted];
m93_114 -> m93_12  [color=green, key=2, style=dotted];
m93_114 -> m93_121  [color=green, key=1, label="lambda expression", style=dashed];
m93_118 -> m93_119  [color=green, key=0, style=solid];
m93_118 -> m93_97  [color=green, key=2, style=dotted];
m93_115 -> m93_116  [color=green, key=0, style=solid];
m93_115 -> m93_83  [color=green, key=2, style=dotted];
m93_117 -> m93_118  [color=green, key=0, style=solid];
m93_117 -> m93_99  [color=green, key=2, style=dotted];
m93_117 -> m93_96  [color=green, key=2, style=dotted];
m93_117 -> m93_100  [color=green, key=2, style=dotted];
m93_117 -> m93_125  [color=green, key=1, label="lambda expression", style=dashed];
m93_116 -> m93_117  [color=green, key=0, style=solid];
m93_116 -> m93_95  [color=green, key=2, style=dotted];
m93_119 -> m93_112  [color=blue, key=0, style=bold];
m93_6 -> m93_0  [color=blue, key=0, style=bold];
m93_6 -> m93_7  [color=red, key=0, style=solid];
m93_44 -> m93_45  [key=0, style=solid];
m93_45 -> m93_7  [key=2, style=dotted];
m93_45 -> m93_46  [key=0, style=solid];
m93_46 -> m93_39  [key=2, style=dotted];
m93_46 -> m93_47  [key=0, style=solid];
m93_46 -> m93_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_47 -> m93_44  [color=blue, key=0, style=bold];
m93_77 -> m93_78  [color=green, key=0, style=solid];
m93_78 -> m93_79  [color=green, key=0, style=solid];
m93_78 -> m93_83  [color=green, key=2, style=dotted];
m93_79 -> m93_80  [color=green, key=0, style=solid];
m93_79 -> m93_84  [color=green, key=2, style=dotted];
m93_79 -> m93_81  [color=green, key=1, label=runner, style=dashed];
m93_80 -> m93_81  [color=green, key=0, style=solid];
m93_80 -> m93_85  [color=green, key=2, style=dotted];
m93_81 -> m93_82  [color=green, key=0, style=solid];
m93_81 -> m93_21  [color=green, key=2, style=dotted];
m93_82 -> m93_77  [color=blue, key=0, style=bold];
m93_7 -> m93_8  [color=red, key=0, style=solid];
m93_8 -> m93_6  [color=blue, key=0, style=bold];
m93_11 -> m93_9  [color=blue, key=0, style=bold];
m93_10 -> m93_11  [key=0, style=solid];
m93_52 -> m93_53  [key=0, style=solid];
m93_53 -> m93_54  [key=0, style=solid];
m93_53 -> m93_56  [key=2, style=dotted];
m93_54 -> m93_57  [key=2, style=dotted];
m93_54 -> m93_55  [key=0, style=solid];
m93_54 -> m93_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_55 -> m93_52  [color=blue, key=0, style=bold];
m93_48 -> m93_49  [key=0, style=solid];
m93_23 -> m93_24  [color=green, key=0, style=solid];
m93_24 -> m93_25  [color=green, key=0, style=solid];
m93_24 -> m93_26  [color=green, key=2, style=dotted];
m93_25 -> m93_23  [color=blue, key=0, style=bold];
m93_31 -> m93_32  [color=green, key=0, style=solid];
m93_32 -> m93_33  [color=green, key=0, style=solid];
m93_32 -> m93_34  [color=green, key=2, style=dotted];
m93_33 -> m93_31  [color=blue, key=0, style=bold];
m93_74 -> m93_75  [color=green, key=0, style=solid];
m93_75 -> m93_76  [color=green, key=0, style=solid];
m93_75 -> m93_73  [color=green, key=2, style=dotted];
m93_76 -> m93_74  [color=blue, key=0, style=bold];
m93_105 -> m93_106  [color=green, key=0, style=solid];
m93_108 -> m93_109  [color=green, key=0, style=solid];
m93_106 -> m93_107  [color=green, key=0, style=solid];
m93_107 -> m93_105  [color=blue, key=0, style=bold];
m93_109 -> m93_110  [color=green, key=0, style=solid];
m93_109 -> m93_111  [color=green, key=2, style=dotted];
m93_110 -> m93_108  [color=blue, key=0, style=bold];
m93_121 -> m93_122  [color=green, key=0, style=solid];
m93_125 -> m93_126  [color=green, key=0, style=solid];
m93_122 -> m93_123  [color=green, key=0, style=solid];
m93_122 -> m93_124  [color=green, key=2, style=dotted];
m93_123 -> m93_121  [color=blue, key=0, style=bold];
m93_126 -> m93_127  [color=green, key=0, style=solid];
m93_127 -> m93_125  [color=blue, key=0, style=bold];
m93_41 -> m93_42  [key=0, style=solid];
m93_41 -> m93_43  [key=2, style=dotted];
m93_101 -> m93_102  [key=0, style=solid];
m93_13 -> m93_14  [key=0, style=solid];
m93_40 -> m93_41  [key=0, style=solid];
m93_42 -> m93_40  [color=blue, key=0, style=bold];
m93_58 -> m93_59  [key=0, style=solid];
m93_66 -> m93_67  [key=0, style=solid];
m93_103 -> m93_101  [color=blue, key=0, style=bold];
m93_102 -> m93_103  [key=0, style=solid];
m93_102 -> m93_104  [key=2, style=dotted];
m93_15 -> m93_13  [color=blue, key=0, style=bold];
m93_14 -> m93_15  [key=0, style=solid];
m93_14 -> m93_16  [key=2, style=dotted];
m93_59 -> m93_56  [key=2, style=dotted];
m93_59 -> m93_60  [key=0, style=solid];
m93_60 -> m93_58  [color=blue, key=0, style=bold];
m93_67 -> m93_65  [key=2, style=dotted];
m93_67 -> m93_68  [key=0, style=solid];
m93_68 -> m93_66  [color=blue, key=0, style=bold];
m93_49 -> m93_50  [key=0, style=solid];
m93_49 -> m93_51  [key=2, style=dotted];
m93_50 -> m93_48  [color=blue, key=0, style=bold];
m93_17 -> m93_18  [color=green, key=0, style=solid];
m93_18 -> m93_19  [color=green, key=0, style=solid];
m93_18 -> m93_21  [color=green, key=2, style=dotted];
m93_18 -> m93_23  [color=green, key=1, label="lambda expression", style=dashed];
m93_19 -> m93_20  [color=green, key=0, style=solid];
m93_19 -> m93_22  [color=green, key=2, style=dotted];
m93_19 -> m93_28  [color=green, key=3, label="Field variable Hangfire.JobStorage _storage", style=bold];
m93_20 -> m93_17  [color=blue, key=0, style=bold];
m93_27 -> m93_28  [color=green, key=0, style=solid];
m93_28 -> m93_29  [color=green, key=0, style=solid];
m93_28 -> m93_21  [color=green, key=2, style=dotted];
m93_28 -> m93_31  [color=green, key=1, label="lambda expression", style=dashed];
m93_29 -> m93_22  [key=2, style=dotted];
m93_29 -> m93_30  [key=0, style=solid];
m93_30 -> m93_27  [color=blue, key=0, style=bold];
m93_12 -> m93_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m93_12 -> m93_2  [color=red, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m93_12 -> m93_7  [color=red, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m93_12 -> m93_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m93_86 -> m93_87  [color=green, key=0, style=solid];
m93_87 -> m93_88  [color=green, key=0, style=solid];
m93_87 -> m93_83  [color=green, key=2, style=dotted];
m93_88 -> m93_89  [color=green, key=0, style=solid];
m93_88 -> m93_95  [color=green, key=2, style=dotted];
m93_88 -> m93_90  [color=green, key=1, label=runners, style=dashed];
m93_89 -> m93_90  [color=green, key=0, style=solid];
m93_89 -> m93_96  [key=2, style=dotted];
m93_89 -> m93_97  [key=2, style=dotted];
m93_89 -> m93_98  [key=2, style=dotted];
m93_89 -> m93_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_90 -> m93_91  [color=green, key=0, style=solid];
m93_90 -> m93_99  [color=green, key=2, style=dotted];
m93_90 -> m93_96  [color=green, key=2, style=dotted];
m93_90 -> m93_100  [color=green, key=2, style=dotted];
m93_90 -> m93_105  [color=green, key=1, label="lambda expression", style=dashed];
m93_90 -> m93_108  [color=green, key=1, label="lambda expression", style=dashed];
m93_90 -> m93_92  [color=green, key=1, label=componentTypes, style=dashed];
m93_90 -> m93_93  [color=green, key=1, label=componentTypes, style=dashed];
m93_91 -> m93_90  [color=green, key=3, label="Local variable var job", style=bold];
m93_91 -> m93_92  [color=green, key=0, style=solid];
m93_91 -> m93_97  [color=green, key=2, style=dotted];
m93_92 -> m93_93  [color=green, key=0, style=solid];
m93_92 -> m93_97  [color=green, key=2, style=dotted];
m93_93 -> m93_94  [color=green, key=0, style=solid];
m93_93 -> m93_97  [color=green, key=2, style=dotted];
m93_94 -> m93_86  [color=blue, key=0, style=bold];
m93_130 -> m93_3  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_18  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_24  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_28  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_32  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_70  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_71  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_78  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_87  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_114  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_115  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_128  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_41  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m93_130 -> m93_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m94_5 -> m94_6  [key=0, style=solid];
m94_5 -> m94_9  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m94_5 -> m94_11  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m94_5 -> m94_13  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m94_5 -> m94_15  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m94_6 -> m94_7  [key=0, style=solid];
m94_6 -> m94_11  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m94_6 -> m94_13  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m94_6 -> m94_15  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m94_9 -> m94_10  [key=0, style=solid];
m94_9 -> m94_17  [key=2, style=dotted];
m94_9 -> m94_11  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m94_9 -> m94_12  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m94_11 -> m94_16  [key=0, style=solid];
m94_11 -> m94_18  [key=2, style=dotted];
m94_13 -> m94_16  [key=0, style=solid];
m94_13 -> m94_19  [key=2, style=dotted];
m94_15 -> m94_16  [key=0, style=solid];
m94_15 -> m94_20  [key=2, style=dotted];
m94_15 -> m94_21  [key=2, style=dotted];
m94_15 -> m94_7  [color=darkorchid, key=3, label="Property variable HangFire.Redis.RedisStorageOptions Options", style=bold];
m94_7 -> m94_8  [key=0, style=solid];
m94_7 -> m94_9  [key=0, style=solid];
m94_8 -> m94_16  [key=0, style=solid];
m94_10 -> m94_11  [key=0, style=solid];
m94_10 -> m94_12  [key=0, style=solid];
m94_12 -> m94_13  [key=0, style=solid];
m94_12 -> m94_14  [key=0, style=solid];
m94_14 -> m94_15  [key=0, style=solid];
m94_14 -> m94_16  [key=0, style=solid];
m94_16 -> m94_5  [color=blue, key=0, style=bold];
m94_28 -> m94_40  [key=0, style=solid];
m94_28 -> m94_41  [color=darkseagreen4, key=1, label=long, style=dashed];
m94_28 -> m94_18  [color=darkorchid, key=3, label="Parameter variable long retryCount", style=bold];
m94_40 -> m94_41  [key=0, style=solid];
m94_40 -> m94_43  [key=2, style=dotted];
m94_41 -> m94_42  [key=0, style=solid];
m94_41 -> m94_44  [key=2, style=dotted];
m94_41 -> m94_45  [key=2, style=dotted];
m94_41 -> m94_46  [key=2, style=dotted];
m94_42 -> m94_28  [color=blue, key=0, style=bold];
m94_18 -> m94_22  [key=0, style=solid];
m94_18 -> m94_23  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m94_18 -> m94_24  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m94_18 -> m94_26  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m94_18 -> m94_5  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ElectStateContext context", style=bold];
m94_18 -> m94_9  [color=darkorchid, key=3, label="Parameter variable int retryAttempt", style=bold];
m94_18 -> m94_6  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.FailedState failedState", style=bold];
m94_22 -> m94_23  [key=0, style=solid];
m94_22 -> m94_28  [key=2, style=dotted];
m94_22 -> m94_29  [key=2, style=dotted];
m94_22 -> m94_24  [color=darkseagreen4, key=1, label=delay, style=dashed];
m94_22 -> m94_26  [color=darkseagreen4, key=1, label=delay, style=dashed];
m94_23 -> m94_24  [key=0, style=solid];
m94_23 -> m94_30  [key=2, style=dotted];
m94_24 -> m94_25  [key=0, style=solid];
m94_24 -> m94_31  [key=2, style=dotted];
m94_24 -> m94_32  [key=2, style=dotted];
m94_26 -> m94_27  [key=0, style=solid];
m94_26 -> m94_33  [key=2, style=dotted];
m94_26 -> m94_34  [key=2, style=dotted];
m94_25 -> m94_26  [key=0, style=solid];
m94_25 -> m94_27  [key=0, style=solid];
m94_27 -> m94_18  [color=blue, key=0, style=bold];
m94_0 -> m94_1  [key=0, style=solid];
m94_1 -> m94_2  [key=0, style=solid];
m94_2 -> m94_3  [key=0, style=solid];
m94_3 -> m94_4  [key=0, style=solid];
m94_4 -> m94_0  [color=blue, key=0, style=bold];
m94_19 -> m94_35  [key=0, style=solid];
m94_19 -> m94_37  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m94_19 -> m94_5  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ElectStateContext context", style=bold];
m94_19 -> m94_6  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.FailedState failedState", style=bold];
m94_35 -> m94_36  [key=0, style=solid];
m94_35 -> m94_39  [key=2, style=dotted];
m94_35 -> m94_20  [key=2, style=dotted];
m94_37 -> m94_38  [key=0, style=solid];
m94_37 -> m94_32  [key=2, style=dotted];
m94_37 -> m94_34  [key=2, style=dotted];
m94_36 -> m94_37  [key=0, style=solid];
m94_36 -> m94_38  [key=0, style=solid];
m94_38 -> m94_19  [color=blue, key=0, style=bold];
m94_47 -> m94_1  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_2  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_3  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_10  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_11  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_12  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_13  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_14  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_24  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_25  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_26  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_35  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_36  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m94_47 -> m94_37  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m95_92 -> m95_104  [key=0, style=solid];
m95_92 -> m95_105  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m95_92 -> m95_106  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m95_104 -> m95_105  [key=0, style=solid];
m95_104 -> m95_55  [key=2, style=dotted];
m95_104 -> m95_107  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m95_105 -> m95_106  [key=0, style=solid];
m95_105 -> m95_56  [key=2, style=dotted];
m95_106 -> m95_107  [key=0, style=solid];
m95_106 -> m95_57  [key=2, style=dotted];
m95_107 -> m95_108  [key=0, style=solid];
m95_107 -> m95_59  [key=2, style=dotted];
m95_108 -> m95_92  [color=blue, key=0, style=bold];
m95_17 -> m95_153  [key=0, style=solid];
m95_17 -> m95_155  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m95_17 -> m95_157  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m95_17 -> m95_158  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m95_17 -> m95_159  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m95_153 -> m95_154  [key=0, style=solid];
m95_153 -> m95_155  [key=0, style=solid];
m95_155 -> m95_156  [key=0, style=solid];
m95_155 -> m95_157  [key=0, style=solid];
m95_155 -> m95_123  [key=2, style=dotted];
m95_157 -> m95_158  [key=0, style=solid];
m95_157 -> m95_159  [key=0, style=solid];
m95_157 -> m95_124  [key=2, style=dotted];
m95_158 -> m95_159  [key=0, style=solid];
m95_158 -> m95_161  [key=2, style=dotted];
m95_158 -> m95_162  [key=2, style=dotted];
m95_159 -> m95_160  [key=0, style=solid];
m95_159 -> m95_163  [key=2, style=dotted];
m95_154 -> m95_160  [key=0, style=solid];
m95_154 -> m95_14  [key=2, style=dotted];
m95_156 -> m95_160  [key=0, style=solid];
m95_156 -> m95_14  [key=2, style=dotted];
m95_160 -> m95_17  [color=blue, key=0, style=bold];
m95_0 -> m95_1  [key=0, style=solid];
m95_1 -> m95_0  [color=blue, key=0, style=bold];
m95_26 -> m95_27  [key=0, style=solid];
m95_26 -> m95_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m95_26 -> m95_31  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m95_26 -> m95_33  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m95_26 -> m95_34  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m95_26 -> m95_35  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m95_26 -> m95_36  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m95_26 -> m95_37  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m95_27 -> m95_28  [key=0, style=solid];
m95_27 -> m95_29  [key=0, style=solid];
m95_29 -> m95_30  [key=0, style=solid];
m95_29 -> m95_31  [key=0, style=solid];
m95_31 -> m95_32  [key=0, style=solid];
m95_31 -> m95_33  [key=0, style=solid];
m95_33 -> m95_34  [key=0, style=solid];
m95_33 -> m95_46  [key=2, style=dotted];
m95_33 -> m95_47  [key=2, style=dotted];
m95_33 -> m95_21  [key=2, style=dotted];
m95_33 -> m95_48  [key=2, style=dotted];
m95_33 -> m95_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m95_34 -> m95_35  [key=0, style=solid];
m95_34 -> m95_49  [key=2, style=dotted];
m95_34 -> m95_50  [key=2, style=dotted];
m95_34 -> m95_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m95_34 -> m95_42  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m95_34 -> m95_44  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m95_35 -> m95_36  [key=0, style=solid];
m95_35 -> m95_51  [key=2, style=dotted];
m95_35 -> m95_38  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m95_35 -> m95_41  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m95_36 -> m95_37  [key=0, style=solid];
m95_36 -> m95_52  [key=2, style=dotted];
m95_36 -> m95_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m95_37 -> m95_38  [key=0, style=solid];
m95_37 -> m95_53  [key=2, style=dotted];
m95_37 -> m95_41  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m95_28 -> m95_45  [key=0, style=solid];
m95_28 -> m95_14  [key=2, style=dotted];
m95_30 -> m95_45  [key=0, style=solid];
m95_30 -> m95_14  [key=2, style=dotted];
m95_32 -> m95_45  [key=0, style=solid];
m95_32 -> m95_14  [key=2, style=dotted];
m95_42 -> m95_43  [key=0, style=solid];
m95_42 -> m95_58  [key=2, style=dotted];
m95_44 -> m95_45  [key=0, style=solid];
m95_38 -> m95_39  [key=0, style=solid];
m95_38 -> m95_54  [key=2, style=dotted];
m95_41 -> m95_42  [key=0, style=solid];
m95_41 -> m95_57  [key=2, style=dotted];
m95_40 -> m95_41  [key=0, style=solid];
m95_40 -> m95_56  [key=2, style=dotted];
m95_39 -> m95_40  [key=0, style=solid];
m95_39 -> m95_55  [key=2, style=dotted];
m95_39 -> m95_42  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m95_39 -> m95_43  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m95_43 -> m95_44  [key=0, style=solid];
m95_43 -> m95_59  [key=2, style=dotted];
m95_45 -> m95_26  [color=blue, key=0, style=bold];
m95_129 -> m95_135  [key=0, style=solid];
m95_129 -> m95_137  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m95_129 -> m95_138  [color=darkseagreen4, key=1, label=bool, style=dashed];
m95_129 -> m95_139  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m95_129 -> m95_140  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m95_129 -> m95_142  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m95_135 -> m95_136  [key=0, style=solid];
m95_135 -> m95_144  [key=2, style=dotted];
m95_135 -> m95_127  [key=2, style=dotted];
m95_135 -> m95_137  [color=darkseagreen4, key=1, label=properties, style=dashed];
m95_135 -> m95_139  [color=darkseagreen4, key=1, label=properties, style=dashed];
m95_135 -> m95_140  [color=darkseagreen4, key=1, label=properties, style=dashed];
m95_135 -> m95_141  [color=darkseagreen4, key=1, label=properties, style=dashed];
m95_135 -> m95_142  [color=darkseagreen4, key=1, label=properties, style=dashed];
m95_137 -> m95_138  [key=0, style=solid];
m95_137 -> m95_145  [key=2, style=dotted];
m95_138 -> m95_139  [key=0, style=solid];
m95_138 -> m95_140  [key=0, style=solid];
m95_139 -> m95_140  [key=0, style=solid];
m95_139 -> m95_146  [key=2, style=dotted];
m95_140 -> m95_141  [key=0, style=solid];
m95_140 -> m95_145  [key=2, style=dotted];
m95_142 -> m95_143  [key=0, style=solid];
m95_142 -> m95_148  [key=2, style=dotted];
m95_136 -> m95_137  [key=0, style=solid];
m95_136 -> m95_141  [color=darkseagreen4, key=1, label=now, style=dashed];
m95_141 -> m95_142  [key=0, style=solid];
m95_141 -> m95_147  [key=2, style=dotted];
m95_141 -> m95_145  [key=2, style=dotted];
m95_143 -> m95_129  [color=blue, key=0, style=bold];
m95_60 -> m95_61  [key=0, style=solid];
m95_19 -> m95_20  [key=0, style=solid];
m95_19 -> m95_21  [key=2, style=dotted];
m95_19 -> m95_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m95_18 -> m95_19  [key=0, style=solid];
m95_20 -> m95_18  [color=blue, key=0, style=bold];
m95_22 -> m95_23  [key=0, style=solid];
m95_23 -> m95_24  [key=0, style=solid];
m95_23 -> m95_25  [key=2, style=dotted];
m95_24 -> m95_22  [color=blue, key=0, style=bold];
m95_61 -> m95_62  [key=0, style=solid];
m95_62 -> m95_60  [color=blue, key=0, style=bold];
m95_54 -> m95_96  [key=0, style=solid];
m95_54 -> m95_97  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m95_54 -> m95_98  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m95_54 -> m95_99  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m95_54 -> m95_100  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m95_96 -> m95_97  [key=0, style=solid];
m95_96 -> m95_101  [key=0, style=solid];
m95_96 -> m95_98  [color=darkseagreen4, key=1, label=filter, style=dashed];
m95_97 -> m95_98  [key=0, style=solid];
m95_97 -> m95_99  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m95_97 -> m95_100  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m95_98 -> m95_99  [key=0, style=solid];
m95_98 -> m95_102  [key=2, style=dotted];
m95_99 -> m95_100  [key=0, style=solid];
m95_99 -> m95_96  [key=0, style=solid];
m95_100 -> m95_96  [key=0, style=solid];
m95_100 -> m95_103  [key=2, style=dotted];
m95_101 -> m95_54  [color=blue, key=0, style=bold];
m95_57 -> m95_109  [key=0, style=solid];
m95_57 -> m95_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m95_57 -> m95_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m95_57 -> m95_112  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m95_57 -> m95_113  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m95_57 -> m95_114  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m95_57 -> m95_115  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m95_57 -> m95_116  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m95_57 -> m95_117  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m95_57 -> m95_118  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m95_57 -> m95_119  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m95_57 -> m95_120  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m95_57 -> m95_121  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m95_109 -> m95_110  [key=0, style=solid];
m95_109 -> m95_115  [key=0, style=solid];
m95_109 -> m95_123  [key=2, style=dotted];
m95_110 -> m95_111  [key=0, style=solid];
m95_110 -> m95_113  [key=0, style=solid];
m95_110 -> m95_124  [key=2, style=dotted];
m95_111 -> m95_112  [key=0, style=solid];
m95_111 -> m95_113  [key=0, style=solid];
m95_112 -> m95_111  [key=0, style=solid];
m95_112 -> m95_125  [key=2, style=dotted];
m95_113 -> m95_114  [key=0, style=solid];
m95_113 -> m95_115  [key=0, style=solid];
m95_114 -> m95_113  [key=0, style=solid];
m95_114 -> m95_126  [key=2, style=dotted];
m95_115 -> m95_116  [key=0, style=solid];
m95_115 -> m95_119  [key=0, style=solid];
m95_115 -> m95_124  [key=2, style=dotted];
m95_116 -> m95_117  [key=0, style=solid];
m95_116 -> m95_127  [key=2, style=dotted];
m95_116 -> m95_118  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m95_117 -> m95_118  [key=0, style=solid];
m95_117 -> m95_119  [key=0, style=solid];
m95_118 -> m95_117  [key=0, style=solid];
m95_118 -> m95_128  [key=2, style=dotted];
m95_119 -> m95_120  [key=0, style=solid];
m95_119 -> m95_129  [key=2, style=dotted];
m95_120 -> m95_121  [key=0, style=solid];
m95_120 -> m95_122  [key=0, style=solid];
m95_121 -> m95_120  [key=0, style=solid];
m95_121 -> m95_130  [key=2, style=dotted];
m95_122 -> m95_57  [color=blue, key=0, style=bold];
m95_63 -> m95_64  [key=0, style=solid];
m95_63 -> m95_66  [color=red, key=1, label="HangFire.Common.States.JobState", style=dashed];
m95_63 -> m95_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m95_63 -> m95_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m95_63 -> m95_73  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m95_63 -> m95_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m95_63 -> m95_78  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m95_63 -> m95_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m95_64 -> m95_65  [key=0, style=solid];
m95_64 -> m95_66  [color=red, key=0, style=solid];
m95_64 -> m95_87  [key=2, style=dotted];
m95_66 -> m95_67  [color=red, key=0, style=solid];
m95_66 -> m95_68  [color=red, key=0, style=solid];
m95_68 -> m95_69  [key=0, style=solid];
m95_68 -> m95_88  [key=2, style=dotted];
m95_69 -> m95_70  [key=0, style=solid];
m95_69 -> m95_89  [key=2, style=dotted];
m95_69 -> m95_72  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m95_69 -> m95_75  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m95_73 -> m95_74  [key=0, style=solid];
m95_73 -> m95_75  [key=0, style=solid];
m95_73 -> m95_90  [key=2, style=dotted];
m95_77 -> m95_78  [key=0, style=solid];
m95_77 -> m95_52  [key=2, style=dotted];
m95_78 -> m95_79  [key=0, style=solid];
m95_78 -> m95_53  [key=2, style=dotted];
m95_78 -> m95_80  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m95_82 -> m95_83  [key=0, style=solid];
m95_82 -> m95_53  [key=2, style=dotted];
m95_82 -> m95_52  [key=2, style=dotted];
m95_82 -> m95_93  [key=2, style=dotted];
m95_82 -> m95_94  [key=2, style=dotted];
m95_65 -> m95_86  [key=0, style=solid];
m95_65 -> m95_14  [key=2, style=dotted];
m95_67 -> m95_86  [color=red, key=0, style=solid];
m95_67 -> m95_14  [color=red, key=2, style=dotted];
m95_70 -> m95_71  [key=0, style=solid];
m95_70 -> m95_72  [key=0, style=solid];
m95_72 -> m95_73  [key=0, style=solid];
m95_72 -> m95_78  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m95_72 -> m95_82  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m95_75 -> m95_76  [key=0, style=solid];
m95_75 -> m95_91  [key=2, style=dotted];
m95_75 -> m95_77  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m95_71 -> m95_86  [key=0, style=solid];
m95_74 -> m95_86  [key=0, style=solid];
m95_76 -> m95_77  [key=0, style=solid];
m95_76 -> m95_51  [key=2, style=dotted];
m95_76 -> m95_79  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m95_76 -> m95_80  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m95_79 -> m95_80  [key=0, style=solid];
m95_79 -> m95_54  [key=2, style=dotted];
m95_80 -> m95_86  [key=0, style=solid];
m95_80 -> m95_92  [key=2, style=dotted];
m95_81 -> m95_82  [key=0, style=solid];
m95_83 -> m95_86  [key=0, style=solid];
m95_83 -> m95_95  [key=2, style=dotted];
m95_83 -> m95_92  [key=2, style=dotted];
m95_84 -> m95_85  [key=0, style=solid];
m95_85 -> m95_86  [key=0, style=solid];
m95_86 -> m95_63  [color=blue, key=0, style=bold];
m95_51 -> m95_149  [key=0, style=solid];
m95_149 -> m95_150  [key=0, style=solid];
m95_149 -> m95_151  [key=2, style=dotted];
m95_149 -> m95_152  [key=2, style=dotted];
m95_150 -> m95_51  [color=blue, key=0, style=bold];
m95_103 -> m95_131  [key=0, style=solid];
m95_103 -> m95_132  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateContext", style=dashed];
m95_131 -> m95_132  [key=0, style=solid];
m95_131 -> m95_55  [key=2, style=dotted];
m95_131 -> m95_133  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m95_132 -> m95_133  [key=0, style=solid];
m95_132 -> m95_129  [key=2, style=dotted];
m95_133 -> m95_134  [key=0, style=solid];
m95_133 -> m95_59  [key=2, style=dotted];
m95_134 -> m95_103  [color=blue, key=0, style=bold];
m95_2 -> m95_3  [key=0, style=solid];
m95_2 -> m95_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>", style=dashed];
m95_2 -> m95_7  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m95_2 -> m95_8  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m95_2 -> m95_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m95_2 -> m95_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m95_2 -> m95_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m95_3 -> m95_4  [key=0, style=solid];
m95_3 -> m95_5  [key=0, style=solid];
m95_5 -> m95_6  [key=0, style=solid];
m95_5 -> m95_7  [key=0, style=solid];
m95_7 -> m95_8  [key=0, style=solid];
m95_7 -> m95_7  [color=darkorchid, key=3, label="Local variable int replayCount", style=bold];
m95_8 -> m95_9  [key=0, style=solid];
m95_8 -> m95_15  [key=2, style=dotted];
m95_8 -> m95_16  [key=2, style=dotted];
m95_11 -> m95_12  [key=0, style=solid];
m95_11 -> m95_13  [key=0, style=solid];
m95_12 -> m95_13  [key=0, style=solid];
m95_4 -> m95_13  [key=0, style=solid];
m95_4 -> m95_14  [key=2, style=dotted];
m95_6 -> m95_13  [key=0, style=solid];
m95_6 -> m95_14  [key=2, style=dotted];
m95_9 -> m95_10  [key=0, style=solid];
m95_9 -> m95_11  [key=0, style=solid];
m95_10 -> m95_9  [key=0, style=solid];
m95_10 -> m95_17  [key=2, style=dotted];
m95_13 -> m95_2  [color=blue, key=0, style=bold];
m95_164 -> m95_7  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_10  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_12  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_34  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_35  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_37  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_38  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_39  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_41  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_68  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_69  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_76  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_78  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_79  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_80  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_82  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_100  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_104  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_106  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_110  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_111  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_115  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_117  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_119  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_131  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_132  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_149  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_157  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_158  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_164 -> m95_159  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m95_165 -> m95_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m96_30 -> m96_31  [key=0, style=solid];
m96_31 -> m96_32  [key=0, style=solid];
m96_32 -> m96_30  [color=blue, key=0, style=bold];
m96_26 -> m96_27  [key=0, style=solid];
m96_27 -> m96_28  [key=0, style=solid];
m96_27 -> m96_29  [key=2, style=dotted];
m96_28 -> m96_26  [color=blue, key=0, style=bold];
m96_17 -> m96_33  [key=0, style=solid];
m96_33 -> m96_34  [key=0, style=solid];
m96_33 -> m96_35  [key=2, style=dotted];
m96_33 -> m96_36  [key=2, style=dotted];
m96_33 -> m96_37  [key=2, style=dotted];
m96_34 -> m96_17  [color=blue, key=0, style=bold];
m96_0 -> m96_1  [key=0, style=solid];
m96_0 -> m96_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m96_0 -> m96_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m96_0 -> m96_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m96_0 -> m96_8  [color=darkseagreen4, key=1, label="HangFire.Server.SharedWorkerContext", style=dashed];
m96_1 -> m96_2  [key=0, style=solid];
m96_1 -> m96_3  [key=0, style=solid];
m96_3 -> m96_4  [key=0, style=solid];
m96_3 -> m96_5  [key=0, style=solid];
m96_5 -> m96_6  [key=0, style=solid];
m96_5 -> m96_15  [key=2, style=dotted];
m96_5 -> m96_9  [color=darkseagreen4, key=1, label=workerRunners, style=dashed];
m96_5 -> m96_11  [color=darkseagreen4, key=1, label=workerRunners, style=dashed];
m96_7 -> m96_8  [key=0, style=solid];
m96_7 -> m96_11  [key=0, style=solid];
m96_8 -> m96_9  [key=0, style=solid];
m96_8 -> m96_16  [key=2, style=dotted];
m96_2 -> m96_12  [key=0, style=solid];
m96_2 -> m96_13  [key=2, style=dotted];
m96_4 -> m96_12  [key=0, style=solid];
m96_4 -> m96_14  [key=2, style=dotted];
m96_6 -> m96_7  [key=0, style=solid];
m96_6 -> m96_8  [color=darkseagreen4, key=1, label=i, style=dashed];
m96_6 -> m96_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m96_9 -> m96_10  [key=0, style=solid];
m96_9 -> m96_17  [key=2, style=dotted];
m96_9 -> m96_18  [key=2, style=dotted];
m96_11 -> m96_12  [key=0, style=solid];
m96_11 -> m96_19  [key=2, style=dotted];
m96_10 -> m96_7  [key=0, style=solid];
m96_10 -> m96_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m96_12 -> m96_0  [color=blue, key=0, style=bold];
m96_20 -> m96_21  [key=0, style=solid];
m96_20 -> m96_22  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m96_21 -> m96_22  [key=0, style=solid];
m96_21 -> m96_24  [key=2, style=dotted];
m96_22 -> m96_23  [key=0, style=solid];
m96_22 -> m96_25  [key=2, style=dotted];
m96_22 -> m96_22  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m96_23 -> m96_20  [color=blue, key=0, style=bold];
m96_38 -> m96_9  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m96_38 -> m96_11  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m96_38 -> m96_21  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m96_38 -> m96_27  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m97_0 -> m97_1  [key=0, style=solid];
m97_1 -> m97_0  [color=blue, key=0, style=bold];
m97_2 -> m97_3  [color=green, key=0, style=solid];
m97_3 -> m97_4  [color=green, key=0, style=solid];
m97_4 -> m97_2  [color=blue, key=0, style=bold];
m97_5 -> m97_3  [color=green, key=1, label="HangFire.RetryAttribute", style=dashed];
m100_6 -> m100_7  [color=green, key=0, style=solid];
m100_0 -> m100_1  [key=0, style=solid];
m100_1 -> m100_2  [key=0, style=solid];
m100_1 -> m100_5  [key=2, style=dotted];
m100_1 -> m100_57  [key=2, style=dotted];
m100_2 -> m100_3  [key=0, style=solid];
m100_2 -> m100_6  [key=2, style=dotted];
m100_2 -> m100_58  [key=2, style=dotted];
m100_3 -> m100_4  [color=green, key=0, style=solid];
m100_4 -> m100_0  [color=blue, key=0, style=bold];
m100_4 -> m100_5  [color=green, key=0, style=solid];
m100_4 -> m100_59  [color=green, key=2, style=dotted];
m100_4 -> m100_9  [color=green, key=1, label=from, style=dashed];
m100_5 -> m100_6  [color=green, key=0, style=solid];
m100_5 -> m100_59  [color=green, key=2, style=dotted];
m100_5 -> m100_9  [color=green, key=1, label=perPage, style=dashed];
m100_9 -> m100_10  [color=green, key=0, style=solid];
m100_9 -> m100_61  [color=green, key=2, style=dotted];
m100_9 -> m100_62  [color=green, key=2, style=dotted];
m100_9 -> m100_63  [color=green, key=2, style=dotted];
m100_9 -> m100_12  [color=green, key=1, label=pager, style=dashed];
m100_9 -> m100_19  [color=green, key=1, label=pager, style=dashed];
m100_9 -> m100_55  [color=green, key=1, label=pager, style=dashed];
m100_8 -> m100_9  [color=green, key=0, style=solid];
m100_8 -> m100_60  [color=green, key=2, style=dotted];
m100_8 -> m100_10  [color=green, key=1, label=monitor, style=dashed];
m100_10 -> m100_11  [key=0, style=solid];
m100_10 -> m100_64  [key=2, style=dotted];
m100_10 -> m100_21  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m100_12 -> m100_13  [color=green, key=0, style=solid];
m100_12 -> m100_14  [color=green, key=0, style=solid];
m100_19 -> m100_20  [color=green, key=0, style=solid];
m100_19 -> m100_66  [key=2, style=dotted];
m100_19 -> m100_67  [key=2, style=dotted];
m100_19 -> m100_68  [key=2, style=dotted];
m100_55 -> m100_56  [key=0, style=solid];
m100_55 -> m100_72  [key=2, style=dotted];
m100_55 -> m100_67  [key=2, style=dotted];
m100_55 -> m100_68  [key=2, style=dotted];
m100_7 -> m100_8  [color=green, key=0, style=solid];
m100_7 -> m100_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m100_7 -> m100_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m100_7 -> m100_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m100_13 -> m100_56  [color=green, key=0, style=solid];
m100_13 -> m100_57  [color=green, key=2, style=dotted];
m100_14 -> m100_15  [color=green, key=0, style=solid];
m100_14 -> m100_57  [color=green, key=2, style=dotted];
m100_15 -> m100_16  [color=green, key=0, style=solid];
m100_15 -> m100_63  [key=2, style=dotted];
m100_15 -> m100_65  [key=2, style=dotted];
m100_16 -> m100_17  [color=green, key=0, style=solid];
m100_16 -> m100_57  [color=green, key=2, style=dotted];
m100_17 -> m100_18  [color=green, key=0, style=solid];
m100_17 -> m100_63  [key=2, style=dotted];
m100_17 -> m100_65  [key=2, style=dotted];
m100_18 -> m100_19  [color=green, key=0, style=solid];
m100_18 -> m100_57  [color=green, key=2, style=dotted];
m100_20 -> m100_21  [color=green, key=0, style=solid];
m100_20 -> m100_57  [color=green, key=2, style=dotted];
m100_21 -> m100_22  [key=0, style=solid];
m100_21 -> m100_54  [key=0, style=solid];
m100_21 -> m100_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_28 -> m100_29  [color=green, key=0, style=solid];
m100_28 -> m100_57  [color=green, key=2, style=dotted];
m100_27 -> m100_28  [color=green, key=0, style=solid];
m100_27 -> m100_31  [color=green, key=0, style=solid];
m100_27 -> m100_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_27 -> m100_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_27 -> m100_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_29 -> m100_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_29 -> m100_30  [key=0, style=solid];
m100_29 -> m100_65  [key=2, style=dotted];
m100_29 -> m100_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_31 -> m100_32  [color=green, key=0, style=solid];
m100_31 -> m100_57  [color=green, key=2, style=dotted];
m100_30 -> m100_31  [color=green, key=0, style=solid];
m100_30 -> m100_57  [key=2, style=dotted];
m100_32 -> m100_63  [key=2, style=dotted];
m100_32 -> m100_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_32 -> m100_33  [key=0, style=solid];
m100_32 -> m100_65  [key=2, style=dotted];
m100_32 -> m100_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_37 -> m100_38  [color=green, key=0, style=solid];
m100_37 -> m100_57  [color=green, key=2, style=dotted];
m100_36 -> m100_37  [color=green, key=0, style=solid];
m100_36 -> m100_38  [color=green, key=0, style=solid];
m100_36 -> m100_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_36 -> m100_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_38 -> m100_39  [color=green, key=0, style=solid];
m100_38 -> m100_57  [color=green, key=2, style=dotted];
m100_39 -> m100_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_39 -> m100_40  [key=0, style=solid];
m100_39 -> m100_70  [key=2, style=dotted];
m100_39 -> m100_65  [key=2, style=dotted];
m100_39 -> m100_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_42 -> m100_43  [color=green, key=0, style=solid];
m100_42 -> m100_57  [color=green, key=2, style=dotted];
m100_41 -> m100_42  [color=green, key=0, style=solid];
m100_41 -> m100_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_41 -> m100_65  [key=2, style=dotted];
m100_41 -> m100_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_43 -> m100_63  [key=2, style=dotted];
m100_43 -> m100_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_43 -> m100_44  [key=0, style=solid];
m100_43 -> m100_65  [key=2, style=dotted];
m100_43 -> m100_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_46 -> m100_47  [color=green, key=0, style=solid];
m100_46 -> m100_57  [color=green, key=2, style=dotted];
m100_45 -> m100_46  [color=green, key=0, style=solid];
m100_45 -> m100_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_45 -> m100_71  [key=2, style=dotted];
m100_45 -> m100_68  [key=2, style=dotted];
m100_45 -> m100_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_47 -> m100_48  [color=green, key=0, style=solid];
m100_47 -> m100_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_47 -> m100_53  [key=0, style=solid];
m100_47 -> m100_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_48 -> m100_49  [color=green, key=0, style=solid];
m100_48 -> m100_57  [color=green, key=2, style=dotted];
m100_49 -> m100_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_49 -> m100_50  [key=0, style=solid];
m100_49 -> m100_70  [key=2, style=dotted];
m100_49 -> m100_65  [key=2, style=dotted];
m100_49 -> m100_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_11 -> m100_12  [key=0, style=solid];
m100_11 -> m100_57  [key=2, style=dotted];
m100_22 -> m100_57  [key=2, style=dotted];
m100_22 -> m100_23  [key=0, style=solid];
m100_23 -> m100_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_23 -> m100_24  [key=0, style=solid];
m100_23 -> m100_65  [key=2, style=dotted];
m100_23 -> m100_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_24 -> m100_57  [key=2, style=dotted];
m100_24 -> m100_25  [key=0, style=solid];
m100_25 -> m100_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_25 -> m100_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_25 -> m100_26  [key=0, style=solid];
m100_25 -> m100_65  [key=2, style=dotted];
m100_26 -> m100_57  [key=2, style=dotted];
m100_26 -> m100_27  [key=0, style=solid];
m100_33 -> m100_57  [key=2, style=dotted];
m100_33 -> m100_34  [key=0, style=solid];
m100_34 -> m100_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_34 -> m100_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_34 -> m100_35  [key=0, style=solid];
m100_34 -> m100_69  [key=2, style=dotted];
m100_34 -> m100_68  [key=2, style=dotted];
m100_35 -> m100_57  [key=2, style=dotted];
m100_35 -> m100_36  [key=0, style=solid];
m100_40 -> m100_57  [key=2, style=dotted];
m100_40 -> m100_41  [key=0, style=solid];
m100_44 -> m100_57  [key=2, style=dotted];
m100_44 -> m100_45  [key=0, style=solid];
m100_50 -> m100_57  [key=2, style=dotted];
m100_50 -> m100_51  [key=0, style=solid];
m100_51 -> m100_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m100_51 -> m100_52  [key=0, style=solid];
m100_51 -> m100_65  [key=2, style=dotted];
m100_52 -> m100_57  [key=2, style=dotted];
m100_52 -> m100_53  [key=0, style=solid];
m100_53 -> m100_57  [key=2, style=dotted];
m100_53 -> m100_21  [key=0, style=solid];
m100_54 -> m100_55  [key=0, style=solid];
m100_54 -> m100_57  [key=2, style=dotted];
m100_56 -> m100_0  [color=blue, key=0, style=bold];
m100_73 -> m100_4  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_5  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_9  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_13  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_14  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_16  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_18  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_20  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_28  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_31  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_37  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_38  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_42  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_46  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_48  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m100_73 -> m100_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m101_25 -> m101_20  [key=0, style=solid];
m101_25 -> m101_31  [key=2, style=dotted];
m101_26 -> m101_27  [key=0, style=solid];
m101_26 -> m101_11  [color=blue, key=0, style=bold];
m101_27 -> m101_28  [key=0, style=solid];
m101_27 -> m101_29  [key=2, style=dotted];
m101_28 -> m101_26  [color=blue, key=0, style=bold];
m101_21 -> m101_23  [color=darkseagreen4, key=1, label=filterInstance, style=dashed];
m101_21 -> m101_22  [key=0, style=solid];
m101_10 -> m101_11  [key=0, style=solid];
m101_10 -> m101_13  [key=2, style=dotted];
m101_15 -> m101_16  [color=red, key=0, style=solid];
m101_15 -> m101_17  [key=0, style=solid];
m101_5 -> m101_6  [color=green, key=0, style=solid];
m101_5 -> m101_8  [color=green, key=2, style=dotted];
m101_5 -> m101_9  [color=green, key=2, style=dotted];
m101_5 -> m101_12  [color=green, key=1, label="lambda expression", style=dashed];
m101_5 -> m101_16  [color=green, key=1, label="lambda expression", style=dashed];
m101_98 -> m101_99  [key=0, style=solid];
m101_99 -> m101_100  [key=0, style=solid];
m101_99 -> m101_47  [key=2, style=dotted];
m101_100 -> m101_101  [key=0, style=solid];
m101_100 -> m101_22  [key=2, style=dotted];
m101_101 -> m101_102  [key=0, style=solid];
m101_101 -> m101_30  [key=2, style=dotted];
m101_102 -> m101_103  [key=0, style=solid];
m101_102 -> m101_33  [key=2, style=dotted];
m101_103 -> m101_104  [key=0, style=solid];
m101_103 -> m101_52  [key=2, style=dotted];
m101_104 -> m101_105  [key=0, style=solid];
m101_104 -> m101_52  [key=2, style=dotted];
m101_105 -> m101_106  [key=0, style=solid];
m101_105 -> m101_48  [key=2, style=dotted];
m101_106 -> m101_107  [key=0, style=solid];
m101_106 -> m101_49  [key=2, style=dotted];
m101_106 -> m101_108  [color=darkseagreen4, key=1, label=table5, style=dashed];
m101_106 -> m101_109  [color=darkseagreen4, key=1, label=table5, style=dashed];
m101_106 -> m101_110  [color=darkseagreen4, key=1, label=table5, style=dashed];
m101_106 -> m101_111  [color=darkseagreen4, key=1, label=table5, style=dashed];
m101_106 -> m101_112  [color=darkseagreen4, key=1, label=table5, style=dashed];
m101_107 -> m101_108  [key=0, style=solid];
m101_107 -> m101_50  [key=2, style=dotted];
m101_108 -> m101_109  [key=0, style=solid];
m101_108 -> m101_50  [key=2, style=dotted];
m101_109 -> m101_110  [key=0, style=solid];
m101_109 -> m101_50  [key=2, style=dotted];
m101_110 -> m101_111  [key=0, style=solid];
m101_110 -> m101_50  [key=2, style=dotted];
m101_111 -> m101_112  [key=0, style=solid];
m101_111 -> m101_50  [key=2, style=dotted];
m101_112 -> m101_113  [key=0, style=solid];
m101_112 -> m101_51  [key=2, style=dotted];
m101_113 -> m101_114  [key=0, style=solid];
m101_113 -> m101_52  [key=2, style=dotted];
m101_114 -> m101_115  [key=0, style=solid];
m101_114 -> m101_26  [key=2, style=dotted];
m101_115 -> m101_98  [color=blue, key=0, style=bold];
m101_4 -> m101_5  [color=green, key=0, style=solid];
m101_4 -> m101_13  [color=green, key=1, label="Hangfire.Common.Job", style=dashed];
m101_4 -> m101_0  [color=blue, key=0, style=bold];
m101_6 -> m101_7  [key=0, style=solid];
m101_6 -> m101_10  [key=2, style=dotted];
m101_6 -> m101_11  [key=2, style=dotted];
m101_7 -> m101_4  [color=blue, key=0, style=bold];
m101_53 -> m101_54  [key=0, style=solid];
m101_54 -> m101_55  [key=0, style=solid];
m101_54 -> m101_47  [key=2, style=dotted];
m101_54 -> m101_5  [color=green, key=1, label="Hangfire.Common.JobFilterProviderCollection", style=dashed];
m101_55 -> m101_56  [key=0, style=solid];
m101_55 -> m101_22  [key=2, style=dotted];
m101_55 -> m101_13  [color=green, key=1, label="Hangfire.Common.Job", style=dashed];
m101_56 -> m101_57  [key=0, style=solid];
m101_56 -> m101_30  [key=2, style=dotted];
m101_57 -> m101_58  [key=0, style=solid];
m101_57 -> m101_33  [key=2, style=dotted];
m101_58 -> m101_59  [key=0, style=solid];
m101_58 -> m101_52  [key=2, style=dotted];
m101_59 -> m101_60  [key=0, style=solid];
m101_59 -> m101_48  [key=2, style=dotted];
m101_60 -> m101_61  [key=0, style=solid];
m101_60 -> m101_49  [key=2, style=dotted];
m101_60 -> m101_62  [color=darkseagreen4, key=1, label=table2, style=dashed];
m101_60 -> m101_63  [color=darkseagreen4, key=1, label=table2, style=dashed];
m101_60 -> m101_64  [color=darkseagreen4, key=1, label=table2, style=dashed];
m101_60 -> m101_65  [color=darkseagreen4, key=1, label=table2, style=dashed];
m101_61 -> m101_62  [key=0, style=solid];
m101_61 -> m101_50  [key=2, style=dotted];
m101_62 -> m101_63  [key=0, style=solid];
m101_62 -> m101_50  [key=2, style=dotted];
m101_63 -> m101_64  [key=0, style=solid];
m101_63 -> m101_50  [key=2, style=dotted];
m101_64 -> m101_65  [key=0, style=solid];
m101_64 -> m101_50  [key=2, style=dotted];
m101_65 -> m101_66  [key=0, style=solid];
m101_65 -> m101_51  [key=2, style=dotted];
m101_66 -> m101_67  [key=0, style=solid];
m101_66 -> m101_26  [key=2, style=dotted];
m101_67 -> m101_53  [color=blue, key=0, style=bold];
m101_30 -> m101_21  [color=darkorchid, key=3, label="Parameter variable object filterInstance", style=bold];
m101_30 -> m101_32  [key=0, style=solid];
m101_30 -> m101_34  [color=darkorchid, key=3, label="method methodReturn bool AllowMultiple", style=bold];
m101_30 -> m101_31  [key=0, style=solid];
m101_32 -> m101_33  [key=0, style=solid];
m101_32 -> m101_35  [color=darkseagreen4, key=1, label=mvcFilter, style=dashed];
m101_32 -> m101_30  [color=blue, key=0, style=bold];
m101_34 -> m101_36  [key=0, style=solid];
m101_34 -> m101_35  [key=0, style=solid];
m101_35 -> m101_36  [key=0, style=solid];
m101_35 -> m101_47  [key=2, style=dotted];
m101_33 -> m101_34  [key=0, style=solid];
m101_33 -> m101_35  [key=0, style=solid];
m101_36 -> m101_30  [color=blue, key=0, style=bold];
m101_36 -> m101_37  [key=0, style=solid];
m101_36 -> m101_22  [key=2, style=dotted];
m101_84 -> m101_85  [key=0, style=solid];
m101_85 -> m101_86  [key=0, style=solid];
m101_85 -> m101_47  [key=2, style=dotted];
m101_86 -> m101_87  [key=0, style=solid];
m101_86 -> m101_22  [key=2, style=dotted];
m101_87 -> m101_88  [key=0, style=solid];
m101_87 -> m101_30  [key=2, style=dotted];
m101_88 -> m101_89  [key=0, style=solid];
m101_88 -> m101_33  [key=2, style=dotted];
m101_89 -> m101_90  [key=0, style=solid];
m101_89 -> m101_52  [key=2, style=dotted];
m101_90 -> m101_91  [key=0, style=solid];
m101_90 -> m101_48  [key=2, style=dotted];
m101_91 -> m101_92  [key=0, style=solid];
m101_91 -> m101_49  [key=2, style=dotted];
m101_91 -> m101_93  [color=darkseagreen4, key=1, label=table4, style=dashed];
m101_91 -> m101_94  [color=darkseagreen4, key=1, label=table4, style=dashed];
m101_91 -> m101_95  [color=darkseagreen4, key=1, label=table4, style=dashed];
m101_92 -> m101_93  [key=0, style=solid];
m101_92 -> m101_50  [key=2, style=dotted];
m101_93 -> m101_94  [key=0, style=solid];
m101_93 -> m101_50  [key=2, style=dotted];
m101_94 -> m101_95  [key=0, style=solid];
m101_94 -> m101_50  [key=2, style=dotted];
m101_95 -> m101_96  [key=0, style=solid];
m101_95 -> m101_51  [key=2, style=dotted];
m101_96 -> m101_97  [key=0, style=solid];
m101_96 -> m101_26  [key=2, style=dotted];
m101_97 -> m101_84  [color=blue, key=0, style=bold];
m101_22 -> m101_23  [key=0, style=solid];
m101_22 -> m101_35  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m101_22 -> m101_54  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m101_22 -> m101_69  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m101_22 -> m101_85  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m101_22 -> m101_99  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m101_22 -> m101_117  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m101_22 -> m101_128  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m101_22 -> m101_143  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m101_22 -> m101_25  [color=darkseagreen4, key=1, label=filterInstanceType, style=dashed];
m101_22 -> m101_28  [key=2, style=dotted];
m101_23 -> m101_24  [key=0, style=solid];
m101_23 -> m101_25  [key=2, style=dotted];
m101_23 -> m101_20  [key=0, style=solid];
m101_23 -> m101_29  [key=2, style=dotted];
m101_23 -> m101_30  [key=2, style=dotted];
m101_24 -> m101_22  [color=blue, key=0, style=bold];
m101_24 -> m101_25  [key=0, style=solid];
m101_13 -> m101_14  [color=green, key=0, style=solid];
m101_13 -> m101_15  [color=green, key=2, style=dotted];
m101_142 -> m101_143  [key=0, style=solid];
m101_143 -> m101_144  [key=0, style=solid];
m101_143 -> m101_47  [key=2, style=dotted];
m101_144 -> m101_145  [key=0, style=solid];
m101_144 -> m101_22  [key=2, style=dotted];
m101_145 -> m101_146  [key=0, style=solid];
m101_145 -> m101_30  [key=2, style=dotted];
m101_146 -> m101_147  [key=0, style=solid];
m101_146 -> m101_33  [key=2, style=dotted];
m101_147 -> m101_148  [key=0, style=solid];
m101_147 -> m101_52  [key=2, style=dotted];
m101_148 -> m101_149  [key=0, style=solid];
m101_148 -> m101_52  [key=2, style=dotted];
m101_149 -> m101_150  [key=0, style=solid];
m101_149 -> m101_48  [key=2, style=dotted];
m101_150 -> m101_151  [key=0, style=solid];
m101_150 -> m101_52  [key=2, style=dotted];
m101_151 -> m101_152  [key=0, style=solid];
m101_151 -> m101_49  [key=2, style=dotted];
m101_151 -> m101_153  [color=darkseagreen4, key=1, label=table7, style=dashed];
m101_151 -> m101_154  [color=darkseagreen4, key=1, label=table7, style=dashed];
m101_151 -> m101_155  [color=darkseagreen4, key=1, label=table7, style=dashed];
m101_152 -> m101_153  [key=0, style=solid];
m101_152 -> m101_50  [key=2, style=dotted];
m101_153 -> m101_154  [key=0, style=solid];
m101_153 -> m101_50  [key=2, style=dotted];
m101_154 -> m101_155  [key=0, style=solid];
m101_154 -> m101_50  [key=2, style=dotted];
m101_155 -> m101_156  [key=0, style=solid];
m101_155 -> m101_51  [key=2, style=dotted];
m101_156 -> m101_157  [key=0, style=solid];
m101_156 -> m101_52  [key=2, style=dotted];
m101_157 -> m101_158  [key=0, style=solid];
m101_157 -> m101_26  [key=2, style=dotted];
m101_158 -> m101_142  [color=blue, key=0, style=bold];
m101_37 -> m101_38  [key=0, style=solid];
m101_37 -> m101_30  [key=2, style=dotted];
m101_38 -> m101_39  [key=0, style=solid];
m101_38 -> m101_33  [key=2, style=dotted];
m101_39 -> m101_40  [key=0, style=solid];
m101_39 -> m101_48  [key=2, style=dotted];
m101_40 -> m101_41  [key=0, style=solid];
m101_40 -> m101_49  [key=2, style=dotted];
m101_40 -> m101_42  [color=darkseagreen4, key=1, label=table1, style=dashed];
m101_40 -> m101_43  [color=darkseagreen4, key=1, label=table1, style=dashed];
m101_41 -> m101_42  [key=0, style=solid];
m101_41 -> m101_50  [key=2, style=dotted];
m101_42 -> m101_43  [key=0, style=solid];
m101_42 -> m101_50  [key=2, style=dotted];
m101_43 -> m101_44  [key=0, style=solid];
m101_43 -> m101_51  [key=2, style=dotted];
m101_44 -> m101_45  [key=0, style=solid];
m101_44 -> m101_52  [key=2, style=dotted];
m101_45 -> m101_46  [key=0, style=solid];
m101_45 -> m101_26  [key=2, style=dotted];
m101_46 -> m101_34  [color=blue, key=0, style=bold];
m101_9 -> m101_10  [key=0, style=solid];
m101_11 -> m101_12  [key=0, style=solid];
m101_11 -> m101_19  [key=0, style=solid];
m101_11 -> m101_24  [color=crimson, key=0, style=bold];
m101_11 -> m101_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>", style=dashed];
m101_12 -> m101_9  [color=blue, key=0, style=bold];
m101_12 -> m101_13  [color=green, key=0, style=solid];
m101_31 -> m101_32  [key=0, style=solid];
m101_31 -> m101_33  [key=2, style=dotted];
m101_16 -> m101_17  [color=red, key=0, style=solid];
m101_16 -> m101_0  [color=red, key=2, style=dotted];
m101_14 -> m101_12  [color=blue, key=0, style=bold];
m101_14 -> m101_15  [key=0, style=solid];
m101_17 -> m101_18  [key=0, style=solid];
m101_17 -> m101_14  [color=blue, key=0, style=bold];
m101_18 -> m101_16  [color=blue, key=0, style=bold];
m101_18 -> m101_19  [key=0, style=solid];
m101_0 -> m101_1  [key=0, style=solid];
m101_0 -> m101_16  [color=red, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m101_1 -> m101_2  [key=0, style=solid];
m101_1 -> m101_5  [key=2, style=dotted];
m101_2 -> m101_3  [key=0, style=solid];
m101_2 -> m101_6  [key=2, style=dotted];
m101_2 -> m101_7  [key=2, style=dotted];
m101_2 -> m101_15  [color=darkorchid, key=3, label="Property variable System.DateTime EnqueueAt", style=bold];
m101_3 -> m101_4  [key=0, style=solid];
m101_3 -> m101_8  [key=2, style=dotted];
m101_3 -> m101_2  [color=blue, key=0, style=bold];
m101_19 -> m101_20  [key=0, style=solid];
m101_19 -> m101_27  [key=2, style=dotted];
m101_19 -> m101_23  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m101_19 -> m101_25  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m101_19 -> m101_21  [key=2, style=dotted];
m101_20 -> m101_26  [key=0, style=solid];
m101_20 -> m101_24  [color=darkseagreen4, key=1, label=filter, style=dashed];
m101_20 -> m101_21  [key=0, style=solid];
m101_20 -> m101_18  [color=blue, key=0, style=bold];
m101_127 -> m101_128  [key=0, style=solid];
m101_128 -> m101_129  [key=0, style=solid];
m101_128 -> m101_47  [key=2, style=dotted];
m101_129 -> m101_130  [key=0, style=solid];
m101_129 -> m101_22  [key=2, style=dotted];
m101_130 -> m101_131  [key=0, style=solid];
m101_130 -> m101_30  [key=2, style=dotted];
m101_131 -> m101_132  [key=0, style=solid];
m101_131 -> m101_33  [key=2, style=dotted];
m101_132 -> m101_133  [key=0, style=solid];
m101_132 -> m101_52  [key=2, style=dotted];
m101_133 -> m101_134  [key=0, style=solid];
m101_133 -> m101_48  [key=2, style=dotted];
m101_134 -> m101_135  [key=0, style=solid];
m101_134 -> m101_52  [key=2, style=dotted];
m101_135 -> m101_136  [key=0, style=solid];
m101_135 -> m101_49  [key=2, style=dotted];
m101_135 -> m101_137  [color=darkseagreen4, key=1, label=table6, style=dashed];
m101_135 -> m101_138  [color=darkseagreen4, key=1, label=table6, style=dashed];
m101_136 -> m101_137  [key=0, style=solid];
m101_136 -> m101_50  [key=2, style=dotted];
m101_137 -> m101_138  [key=0, style=solid];
m101_137 -> m101_50  [key=2, style=dotted];
m101_138 -> m101_139  [key=0, style=solid];
m101_138 -> m101_51  [key=2, style=dotted];
m101_139 -> m101_140  [key=0, style=solid];
m101_139 -> m101_52  [key=2, style=dotted];
m101_140 -> m101_141  [key=0, style=solid];
m101_140 -> m101_26  [key=2, style=dotted];
m101_141 -> m101_127  [color=blue, key=0, style=bold];
m101_68 -> m101_69  [key=0, style=solid];
m101_69 -> m101_70  [key=0, style=solid];
m101_69 -> m101_47  [key=2, style=dotted];
m101_70 -> m101_71  [key=0, style=solid];
m101_70 -> m101_22  [key=2, style=dotted];
m101_71 -> m101_72  [key=0, style=solid];
m101_71 -> m101_30  [key=2, style=dotted];
m101_72 -> m101_73  [key=0, style=solid];
m101_72 -> m101_33  [key=2, style=dotted];
m101_73 -> m101_74  [key=0, style=solid];
m101_73 -> m101_52  [key=2, style=dotted];
m101_74 -> m101_75  [key=0, style=solid];
m101_74 -> m101_52  [key=2, style=dotted];
m101_75 -> m101_76  [key=0, style=solid];
m101_75 -> m101_48  [key=2, style=dotted];
m101_76 -> m101_77  [key=0, style=solid];
m101_76 -> m101_51  [key=2, style=dotted];
m101_77 -> m101_78  [key=0, style=solid];
m101_77 -> m101_49  [key=2, style=dotted];
m101_77 -> m101_79  [color=darkseagreen4, key=1, label=table3, style=dashed];
m101_77 -> m101_80  [color=darkseagreen4, key=1, label=table3, style=dashed];
m101_77 -> m101_81  [color=darkseagreen4, key=1, label=table3, style=dashed];
m101_78 -> m101_79  [key=0, style=solid];
m101_78 -> m101_50  [key=2, style=dotted];
m101_79 -> m101_80  [key=0, style=solid];
m101_79 -> m101_50  [key=2, style=dotted];
m101_80 -> m101_81  [key=0, style=solid];
m101_80 -> m101_50  [key=2, style=dotted];
m101_81 -> m101_82  [key=0, style=solid];
m101_81 -> m101_52  [key=2, style=dotted];
m101_82 -> m101_83  [key=0, style=solid];
m101_82 -> m101_26  [key=2, style=dotted];
m101_83 -> m101_68  [color=blue, key=0, style=bold];
m101_116 -> m101_117  [key=0, style=solid];
m101_117 -> m101_118  [key=0, style=solid];
m101_117 -> m101_47  [key=2, style=dotted];
m101_118 -> m101_119  [key=0, style=solid];
m101_118 -> m101_22  [key=2, style=dotted];
m101_119 -> m101_120  [key=0, style=solid];
m101_119 -> m101_30  [key=2, style=dotted];
m101_120 -> m101_121  [key=0, style=solid];
m101_120 -> m101_33  [key=2, style=dotted];
m101_121 -> m101_122  [key=0, style=solid];
m101_121 -> m101_48  [key=2, style=dotted];
m101_122 -> m101_123  [key=0, style=solid];
m101_122 -> m101_52  [key=2, style=dotted];
m101_123 -> m101_124  [key=0, style=solid];
m101_123 -> m101_51  [key=2, style=dotted];
m101_124 -> m101_125  [key=0, style=solid];
m101_124 -> m101_52  [key=2, style=dotted];
m101_125 -> m101_126  [key=0, style=solid];
m101_125 -> m101_26  [key=2, style=dotted];
m101_126 -> m101_116  [color=blue, key=0, style=bold];
m101_159 -> m101_36  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_45  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_55  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_56  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_71  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_82  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_86  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_87  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_96  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_100  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_101  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_114  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_118  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_119  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_125  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_129  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_130  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_140  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_144  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_145  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m101_159 -> m101_157  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m102_6 -> m102_7  [key=0, style=solid];
m102_7 -> m102_8  [key=0, style=solid];
m102_7 -> m102_11  [key=2, style=dotted];
m102_7 -> m102_9  [color=darkseagreen4, key=1, label=date, style=dashed];
m102_8 -> m102_9  [key=0, style=solid];
m102_8 -> m102_4  [key=2, style=dotted];
m102_9 -> m102_10  [key=0, style=solid];
m102_9 -> m102_5  [key=2, style=dotted];
m102_10 -> m102_6  [color=blue, key=0, style=bold];
m102_0 -> m102_1  [key=0, style=solid];
m102_1 -> m102_2  [key=0, style=solid];
m102_1 -> m102_4  [key=2, style=dotted];
m102_2 -> m102_3  [key=0, style=solid];
m102_2 -> m102_5  [key=2, style=dotted];
m102_3 -> m102_0  [color=blue, key=0, style=bold];
m102_35 -> m102_36  [key=0, style=solid];
m102_36 -> m102_37  [key=0, style=solid];
m102_36 -> m102_4  [key=2, style=dotted];
m102_37 -> m102_38  [key=0, style=solid];
m102_37 -> m102_34  [key=2, style=dotted];
m102_38 -> m102_35  [color=blue, key=0, style=bold];
m102_30 -> m102_31  [key=0, style=solid];
m102_31 -> m102_32  [key=0, style=solid];
m102_31 -> m102_4  [key=2, style=dotted];
m102_32 -> m102_33  [key=0, style=solid];
m102_32 -> m102_34  [key=2, style=dotted];
m102_33 -> m102_30  [color=blue, key=0, style=bold];
m102_22 -> m102_23  [key=0, style=solid];
m102_23 -> m102_24  [key=0, style=solid];
m102_23 -> m102_4  [key=2, style=dotted];
m102_23 -> m102_11  [key=2, style=dotted];
m102_23 -> m102_25  [color=red, key=1, label=state, style=dashed];
m102_23 -> m102_26  [color=red, key=1, label=state, style=dashed];
m102_24 -> m102_25  [color=red, key=0, style=solid];
m102_24 -> m102_28  [key=2, style=dotted];
m102_24 -> m102_26  [color=red, key=1, label=data, style=dashed];
m102_25 -> m102_26  [color=red, key=0, style=solid];
m102_25 -> m102_29  [color=red, key=2, style=dotted];
m102_25 -> m102_5  [color=red, key=2, style=dotted];
m102_26 -> m102_27  [color=red, key=0, style=solid];
m102_26 -> m102_29  [color=red, key=2, style=dotted];
m102_26 -> m102_5  [color=red, key=2, style=dotted];
m102_27 -> m102_22  [color=blue, key=0, style=bold];
m102_12 -> m102_13  [key=0, style=solid];
m102_13 -> m102_14  [key=0, style=solid];
m102_13 -> m102_17  [key=2, style=dotted];
m102_13 -> m102_18  [key=2, style=dotted];
m102_13 -> m102_15  [color=darkseagreen4, key=1, label=state, style=dashed];
m102_14 -> m102_15  [key=0, style=solid];
m102_14 -> m102_19  [key=2, style=dotted];
m102_14 -> m102_20  [key=2, style=dotted];
m102_14 -> m102_21  [key=2, style=dotted];
m102_15 -> m102_16  [key=0, style=solid];
m102_15 -> m102_19  [key=2, style=dotted];
m102_15 -> m102_20  [key=2, style=dotted];
m102_15 -> m102_21  [key=2, style=dotted];
m102_16 -> m102_12  [color=blue, key=0, style=bold];
m103_74 -> m103_75  [key=0, style=solid];
m103_75 -> m103_76  [key=0, style=solid];
m103_75 -> m103_15  [key=2, style=dotted];
m103_75 -> m103_16  [key=2, style=dotted];
m103_75 -> m103_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_76 -> m103_77  [key=0, style=solid];
m103_76 -> m103_55  [key=2, style=dotted];
m103_77 -> m103_78  [key=0, style=solid];
m103_77 -> m103_56  [key=2, style=dotted];
m103_78 -> m103_79  [key=0, style=solid];
m103_78 -> m103_57  [key=2, style=dotted];
m103_78 -> m103_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_79 -> m103_74  [color=blue, key=0, style=bold];
m103_0 -> m103_1  [key=0, style=solid];
m103_1 -> m103_0  [color=blue, key=0, style=bold];
m103_1 -> m103_2  [key=0, style=solid];
m103_1 -> m103_10  [key=2, style=dotted];
m103_65 -> m103_66  [key=0, style=solid];
m103_66 -> m103_67  [key=0, style=solid];
m103_66 -> m103_55  [key=2, style=dotted];
m103_67 -> m103_68  [key=0, style=solid];
m103_67 -> m103_56  [key=2, style=dotted];
m103_68 -> m103_69  [key=0, style=solid];
m103_68 -> m103_57  [key=2, style=dotted];
m103_68 -> m103_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_69 -> m103_65  [color=blue, key=0, style=bold];
m103_49 -> m103_50  [key=0, style=solid];
m103_50 -> m103_51  [key=0, style=solid];
m103_50 -> m103_55  [key=2, style=dotted];
m103_51 -> m103_52  [key=0, style=solid];
m103_51 -> m103_56  [key=2, style=dotted];
m103_52 -> m103_53  [key=0, style=solid];
m103_52 -> m103_57  [key=2, style=dotted];
m103_52 -> m103_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_53 -> m103_54  [key=0, style=solid];
m103_53 -> m103_57  [key=2, style=dotted];
m103_53 -> m103_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_54 -> m103_49  [color=blue, key=0, style=bold];
m103_33 -> m103_34  [key=0, style=solid];
m103_34 -> m103_35  [key=0, style=solid];
m103_34 -> m103_20  [key=2, style=dotted];
m103_34 -> m103_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_35 -> m103_36  [key=0, style=solid];
m103_35 -> m103_37  [key=2, style=dotted];
m103_36 -> m103_33  [color=blue, key=0, style=bold];
m103_2 -> m103_3  [key=0, style=solid];
m103_2 -> m103_11  [key=2, style=dotted];
m103_3 -> m103_2  [color=blue, key=0, style=bold];
m103_3 -> m103_4  [color=green, key=0, style=solid];
m103_3 -> m103_12  [key=2, style=dotted];
m103_4 -> m103_5  [color=green, key=0, style=solid];
m103_4 -> m103_13  [color=green, key=2, style=dotted];
m103_5 -> m103_6  [key=0, style=solid];
m103_5 -> m103_14  [key=2, style=dotted];
m103_6 -> m103_7  [key=0, style=solid];
m103_6 -> m103_15  [key=2, style=dotted];
m103_6 -> m103_16  [key=2, style=dotted];
m103_6 -> m103_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_7 -> m103_8  [key=0, style=solid];
m103_7 -> m103_15  [key=2, style=dotted];
m103_7 -> m103_16  [key=2, style=dotted];
m103_7 -> m103_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_8 -> m103_9  [key=0, style=solid];
m103_8 -> m103_15  [key=2, style=dotted];
m103_8 -> m103_16  [key=2, style=dotted];
m103_8 -> m103_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_9 -> m103_0  [color=blue, key=0, style=bold];
m103_83 -> m103_84  [key=0, style=solid];
m103_39 -> m103_40  [key=0, style=solid];
m103_39 -> m103_41  [key=2, style=dotted];
m103_47 -> m103_48  [key=0, style=solid];
m103_47 -> m103_41  [key=2, style=dotted];
m103_17 -> m103_18  [key=0, style=solid];
m103_22 -> m103_23  [key=0, style=solid];
m103_26 -> m103_27  [key=0, style=solid];
m103_38 -> m103_39  [key=0, style=solid];
m103_40 -> m103_38  [color=blue, key=0, style=bold];
m103_46 -> m103_47  [key=0, style=solid];
m103_48 -> m103_46  [color=blue, key=0, style=bold];
m103_58 -> m103_59  [key=0, style=solid];
m103_61 -> m103_62  [key=0, style=solid];
m103_70 -> m103_71  [key=0, style=solid];
m103_80 -> m103_81  [key=0, style=solid];
m103_86 -> m103_87  [key=0, style=solid];
m103_19 -> m103_17  [color=blue, key=0, style=bold];
m103_18 -> m103_20  [key=2, style=dotted];
m103_18 -> m103_19  [key=0, style=solid];
m103_18 -> m103_21  [key=2, style=dotted];
m103_24 -> m103_22  [color=blue, key=0, style=bold];
m103_23 -> m103_24  [key=0, style=solid];
m103_23 -> m103_25  [key=2, style=dotted];
m103_28 -> m103_26  [color=blue, key=0, style=bold];
m103_27 -> m103_20  [key=2, style=dotted];
m103_27 -> m103_28  [key=0, style=solid];
m103_27 -> m103_29  [key=2, style=dotted];
m103_27 -> m103_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_71 -> m103_20  [key=2, style=dotted];
m103_71 -> m103_72  [key=0, style=solid];
m103_71 -> m103_73  [key=2, style=dotted];
m103_81 -> m103_20  [key=2, style=dotted];
m103_81 -> m103_82  [key=0, style=solid];
m103_81 -> m103_29  [key=2, style=dotted];
m103_81 -> m103_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_87 -> m103_20  [key=2, style=dotted];
m103_87 -> m103_88  [key=0, style=solid];
m103_87 -> m103_73  [key=2, style=dotted];
m103_60 -> m103_58  [color=blue, key=0, style=bold];
m103_59 -> m103_60  [key=0, style=solid];
m103_59 -> m103_25  [key=2, style=dotted];
m103_63 -> m103_61  [color=blue, key=0, style=bold];
m103_62 -> m103_63  [key=0, style=solid];
m103_62 -> m103_64  [key=2, style=dotted];
m103_72 -> m103_70  [color=blue, key=0, style=bold];
m103_82 -> m103_80  [color=blue, key=0, style=bold];
m103_88 -> m103_86  [color=blue, key=0, style=bold];
m103_30 -> m103_31  [key=0, style=solid];
m103_32 -> m103_30  [color=blue, key=0, style=bold];
m103_31 -> m103_32  [key=0, style=solid];
m103_84 -> m103_85  [key=0, style=solid];
m103_85 -> m103_83  [color=blue, key=0, style=bold];
m103_55 -> m103_89  [key=0, style=solid];
m103_89 -> m103_90  [key=0, style=solid];
m103_89 -> m103_41  [key=2, style=dotted];
m103_90 -> m103_55  [color=blue, key=0, style=bold];
m103_42 -> m103_43  [key=0, style=solid];
m103_43 -> m103_44  [key=0, style=solid];
m103_43 -> m103_20  [key=2, style=dotted];
m103_43 -> m103_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m103_44 -> m103_45  [key=0, style=solid];
m103_44 -> m103_37  [key=2, style=dotted];
m103_45 -> m103_42  [color=blue, key=0, style=bold];
m103_91 -> m103_4  [color=green, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m103_91 -> m103_89  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m105_61 -> m105_123  [key=0, style=solid];
m105_123 -> m105_124  [key=0, style=solid];
m105_123 -> m105_33  [key=2, style=dotted];
m105_124 -> m105_61  [color=blue, key=0, style=bold];
m105_34 -> m105_35  [key=0, style=solid];
m105_35 -> m105_36  [key=0, style=solid];
m105_35 -> m105_28  [key=2, style=dotted];
m105_35 -> m105_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_36 -> m105_37  [key=0, style=solid];
m105_36 -> m105_29  [key=2, style=dotted];
m105_37 -> m105_34  [color=blue, key=0, style=bold];
m105_82 -> m105_83  [key=0, style=solid];
m105_83 -> m105_84  [color=green, key=0, style=solid];
m105_83 -> m105_61  [key=2, style=dotted];
m105_84 -> m105_85  [color=green, key=0, style=solid];
m105_84 -> m105_62  [color=green, key=2, style=dotted];
m105_85 -> m105_86  [key=0, style=solid];
m105_85 -> m105_63  [key=2, style=dotted];
m105_85 -> m105_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_86 -> m105_82  [color=blue, key=0, style=bold];
m105_41 -> m105_42  [key=0, style=solid];
m105_42 -> m105_43  [key=0, style=solid];
m105_42 -> m105_28  [key=2, style=dotted];
m105_42 -> m105_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_43 -> m105_44  [key=0, style=solid];
m105_43 -> m105_29  [key=2, style=dotted];
m105_44 -> m105_41  [color=blue, key=0, style=bold];
m105_99 -> m105_100  [key=0, style=solid];
m105_100 -> m105_101  [color=green, key=0, style=solid];
m105_100 -> m105_61  [key=2, style=dotted];
m105_101 -> m105_102  [color=green, key=0, style=solid];
m105_101 -> m105_62  [color=green, key=2, style=dotted];
m105_102 -> m105_103  [key=0, style=solid];
m105_102 -> m105_63  [key=2, style=dotted];
m105_102 -> m105_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_103 -> m105_99  [color=blue, key=0, style=bold];
m105_108 -> m105_109  [key=0, style=solid];
m105_109 -> m105_110  [key=0, style=solid];
m105_109 -> m105_15  [key=2, style=dotted];
m105_109 -> m105_28  [key=2, style=dotted];
m105_109 -> m105_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_110 -> m105_111  [color=green, key=0, style=solid];
m105_110 -> m105_61  [key=2, style=dotted];
m105_110 -> m105_118  [color=green, key=1, label=server, style=dashed];
m105_111 -> m105_112  [color=green, key=0, style=solid];
m105_111 -> m105_28  [color=green, key=2, style=dotted];
m105_111 -> m105_117  [color=green, key=1, label="lambda expression", style=dashed];
m105_112 -> m105_113  [key=0, style=solid];
m105_112 -> m105_63  [key=2, style=dotted];
m105_112 -> m105_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_113 -> m105_108  [color=blue, key=0, style=bold];
m105_24 -> m105_25  [key=0, style=solid];
m105_25 -> m105_26  [key=0, style=solid];
m105_25 -> m105_28  [key=2, style=dotted];
m105_25 -> m105_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_26 -> m105_27  [key=0, style=solid];
m105_26 -> m105_29  [key=2, style=dotted];
m105_27 -> m105_24  [color=blue, key=0, style=bold];
m105_68 -> m105_69  [key=0, style=solid];
m105_69 -> m105_70  [color=green, key=0, style=solid];
m105_69 -> m105_61  [key=2, style=dotted];
m105_70 -> m105_71  [color=green, key=0, style=solid];
m105_70 -> m105_62  [color=green, key=2, style=dotted];
m105_71 -> m105_72  [key=0, style=solid];
m105_71 -> m105_74  [key=2, style=dotted];
m105_71 -> m105_63  [key=2, style=dotted];
m105_71 -> m105_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_72 -> m105_73  [key=0, style=solid];
m105_72 -> m105_74  [key=2, style=dotted];
m105_72 -> m105_63  [key=2, style=dotted];
m105_72 -> m105_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_73 -> m105_68  [color=blue, key=0, style=bold];
m105_49 -> m105_50  [key=0, style=solid];
m105_50 -> m105_51  [key=0, style=solid];
m105_50 -> m105_28  [key=2, style=dotted];
m105_50 -> m105_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_51 -> m105_52  [key=0, style=solid];
m105_51 -> m105_29  [key=2, style=dotted];
m105_52 -> m105_49  [color=blue, key=0, style=bold];
m105_120 -> m105_121  [key=0, style=solid];
m105_20 -> m105_21  [key=0, style=solid];
m105_17 -> m105_18  [key=0, style=solid];
m105_18 -> m105_19  [key=0, style=solid];
m105_19 -> m105_17  [color=blue, key=0, style=bold];
m105_21 -> m105_22  [key=0, style=solid];
m105_21 -> m105_23  [key=2, style=dotted];
m105_22 -> m105_20  [color=blue, key=0, style=bold];
m105_30 -> m105_31  [key=0, style=solid];
m105_31 -> m105_32  [key=0, style=solid];
m105_31 -> m105_33  [key=2, style=dotted];
m105_32 -> m105_30  [color=blue, key=0, style=bold];
m105_38 -> m105_39  [key=0, style=solid];
m105_39 -> m105_40  [key=0, style=solid];
m105_39 -> m105_33  [key=2, style=dotted];
m105_40 -> m105_38  [color=blue, key=0, style=bold];
m105_45 -> m105_46  [key=0, style=solid];
m105_46 -> m105_47  [key=0, style=solid];
m105_46 -> m105_48  [key=2, style=dotted];
m105_47 -> m105_45  [color=blue, key=0, style=bold];
m105_53 -> m105_54  [key=0, style=solid];
m105_54 -> m105_55  [key=0, style=solid];
m105_54 -> m105_33  [key=2, style=dotted];
m105_55 -> m105_53  [color=blue, key=0, style=bold];
m105_64 -> m105_65  [key=0, style=solid];
m105_65 -> m105_66  [key=0, style=solid];
m105_65 -> m105_67  [key=2, style=dotted];
m105_66 -> m105_64  [color=blue, key=0, style=bold];
m105_75 -> m105_76  [key=0, style=solid];
m105_78 -> m105_79  [key=0, style=solid];
m105_76 -> m105_77  [key=0, style=solid];
m105_76 -> m105_23  [key=2, style=dotted];
m105_77 -> m105_75  [color=blue, key=0, style=bold];
m105_79 -> m105_80  [key=0, style=solid];
m105_79 -> m105_81  [key=2, style=dotted];
m105_80 -> m105_78  [color=blue, key=0, style=bold];
m105_87 -> m105_88  [key=0, style=solid];
m105_88 -> m105_89  [key=0, style=solid];
m105_88 -> m105_90  [key=2, style=dotted];
m105_89 -> m105_87  [color=blue, key=0, style=bold];
m105_96 -> m105_97  [key=0, style=solid];
m105_97 -> m105_98  [key=0, style=solid];
m105_97 -> m105_81  [key=2, style=dotted];
m105_98 -> m105_96  [color=blue, key=0, style=bold];
m105_104 -> m105_105  [key=0, style=solid];
m105_105 -> m105_106  [key=0, style=solid];
m105_105 -> m105_107  [key=2, style=dotted];
m105_106 -> m105_104  [color=blue, key=0, style=bold];
m105_114 -> m105_115  [key=0, style=solid];
m105_118 -> m105_119  [color=green, key=0, style=solid];
m105_118 -> m105_62  [color=green, key=2, style=dotted];
m105_117 -> m105_118  [color=green, key=0, style=solid];
m105_115 -> m105_116  [key=0, style=solid];
m105_115 -> m105_81  [key=2, style=dotted];
m105_116 -> m105_114  [color=blue, key=0, style=bold];
m105_119 -> m105_117  [color=blue, key=0, style=bold];
m105_121 -> m105_122  [key=0, style=solid];
m105_121 -> m105_28  [key=2, style=dotted];
m105_121 -> m105_107  [key=2, style=dotted];
m105_122 -> m105_120  [color=blue, key=0, style=bold];
m105_0 -> m105_1  [key=0, style=solid];
m105_1 -> m105_2  [key=0, style=solid];
m105_1 -> m105_9  [key=2, style=dotted];
m105_2 -> m105_3  [key=0, style=solid];
m105_2 -> m105_10  [key=2, style=dotted];
m105_3 -> m105_4  [key=0, style=solid];
m105_3 -> m105_11  [key=2, style=dotted];
m105_4 -> m105_5  [key=0, style=solid];
m105_4 -> m105_12  [key=2, style=dotted];
m105_5 -> m105_6  [color=green, key=0, style=solid];
m105_5 -> m105_13  [key=2, style=dotted];
m105_6 -> m105_7  [color=green, key=0, style=solid];
m105_6 -> m105_14  [color=green, key=2, style=dotted];
m105_7 -> m105_8  [key=0, style=solid];
m105_7 -> m105_15  [key=2, style=dotted];
m105_7 -> m105_16  [key=2, style=dotted];
m105_7 -> m105_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_8 -> m105_0  [color=blue, key=0, style=bold];
m105_56 -> m105_57  [key=0, style=solid];
m105_57 -> m105_58  [color=green, key=0, style=solid];
m105_57 -> m105_61  [key=2, style=dotted];
m105_58 -> m105_59  [color=green, key=0, style=solid];
m105_58 -> m105_62  [color=green, key=2, style=dotted];
m105_59 -> m105_60  [key=0, style=solid];
m105_59 -> m105_63  [key=2, style=dotted];
m105_59 -> m105_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_60 -> m105_56  [color=blue, key=0, style=bold];
m105_91 -> m105_92  [key=0, style=solid];
m105_92 -> m105_93  [color=green, key=0, style=solid];
m105_92 -> m105_61  [key=2, style=dotted];
m105_93 -> m105_94  [color=green, key=0, style=solid];
m105_93 -> m105_62  [color=green, key=2, style=dotted];
m105_94 -> m105_95  [key=0, style=solid];
m105_94 -> m105_63  [key=2, style=dotted];
m105_94 -> m105_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_95 -> m105_91  [color=blue, key=0, style=bold];
m105_125 -> m105_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_18  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_6  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_58  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_59  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_70  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_71  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_72  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_84  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_85  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_92  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_93  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_94  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_100  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_101  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_110  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_111  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_118  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_125 -> m105_123  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m105_126 -> m105_118  [color=green, key=1, label=server, style=dashed];
m106_51 -> m106_52  [color=red, key=0, style=solid];
m106_51 -> m106_40  [color=red, key=2, style=dotted];
m106_52 -> m106_53  [key=0, style=solid];
m106_52 -> m106_57  [key=2, style=dotted];
m106_52 -> m106_41  [key=2, style=dotted];
m106_52 -> m106_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_53 -> m106_54  [key=0, style=solid];
m106_53 -> m106_58  [key=2, style=dotted];
m106_53 -> m106_49  [color=blue, key=0, style=bold];
m106_54 -> m106_55  [key=0, style=solid];
m106_54 -> m106_59  [key=2, style=dotted];
m106_54 -> m106_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_55 -> m106_56  [key=0, style=solid];
m106_55 -> m106_59  [key=2, style=dotted];
m106_55 -> m106_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_55 -> m106_57  [key=2, style=dotted];
m106_56 -> m106_51  [color=blue, key=0, style=bold];
m106_56 -> m106_54  [color=blue, key=0, style=bold];
m106_16 -> m106_17  [key=0, style=solid];
m106_16 -> m106_19  [key=2, style=dotted];
m106_16 -> m106_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_39 -> m106_58  [key=0, style=solid];
m106_20 -> m106_22  [key=2, style=dotted];
m106_20 -> m106_21  [key=0, style=solid];
m106_20 -> m106_23  [key=2, style=dotted];
m106_7 -> m106_8  [key=0, style=solid];
m106_7 -> m106_9  [key=2, style=dotted];
m106_7 -> m106_10  [key=2, style=dotted];
m106_7 -> m106_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_33 -> m106_34  [key=0, style=solid];
m106_34 -> m106_35  [color=red, key=0, style=solid];
m106_34 -> m106_39  [key=2, style=dotted];
m106_34 -> m106_32  [color=blue, key=0, style=bold];
m106_35 -> m106_36  [color=red, key=0, style=solid];
m106_35 -> m106_40  [color=red, key=2, style=dotted];
m106_36 -> m106_37  [key=0, style=solid];
m106_36 -> m106_41  [key=2, style=dotted];
m106_36 -> m106_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_36 -> m106_22  [key=2, style=dotted];
m106_36 -> m106_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_37 -> m106_38  [key=0, style=solid];
m106_37 -> m106_41  [key=2, style=dotted];
m106_37 -> m106_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_37 -> m106_39  [key=2, style=dotted];
m106_38 -> m106_33  [color=blue, key=0, style=bold];
m106_38 -> m106_35  [color=blue, key=0, style=bold];
m106_15 -> m106_16  [key=0, style=solid];
m106_22 -> m106_23  [key=0, style=solid];
m106_22 -> m106_24  [key=2, style=dotted];
m106_19 -> m106_20  [key=0, style=solid];
m106_76 -> m106_77  [key=0, style=solid];
m106_77 -> m106_78  [key=0, style=solid];
m106_77 -> m106_9  [key=2, style=dotted];
m106_77 -> m106_10  [key=2, style=dotted];
m106_77 -> m106_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_78 -> m106_79  [key=0, style=solid];
m106_78 -> m106_57  [key=2, style=dotted];
m106_79 -> m106_80  [key=0, style=solid];
m106_79 -> m106_58  [key=2, style=dotted];
m106_80 -> m106_81  [key=0, style=solid];
m106_80 -> m106_59  [key=2, style=dotted];
m106_80 -> m106_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_81 -> m106_76  [color=blue, key=0, style=bold];
m106_44 -> m106_45  [color=green, key=0, style=solid];
m106_44 -> m106_42  [color=blue, key=0, style=bold];
m106_44 -> m106_60  [color=blue, key=0, style=bold];
m106_45 -> m106_46  [color=green, key=0, style=solid];
m106_45 -> m106_22  [color=green, key=2, style=dotted];
m106_45 -> m106_48  [color=green, key=1, label="lambda expression", style=dashed];
m106_46 -> m106_47  [key=0, style=solid];
m106_46 -> m106_39  [key=2, style=dotted];
m106_46 -> m106_48  [key=2, style=dotted];
m106_47 -> m106_44  [color=blue, key=0, style=bold];
m106_47 -> m106_45  [color=blue, key=0, style=bold];
m106_47 -> m106_63  [color=blue, key=0, style=bold];
m106_43 -> m106_44  [key=0, style=solid];
m106_43 -> m106_14  [key=2, style=dotted];
m106_31 -> m106_29  [color=blue, key=0, style=bold];
m106_67 -> m106_68  [key=0, style=solid];
m106_68 -> m106_69  [key=0, style=solid];
m106_68 -> m106_57  [key=2, style=dotted];
m106_69 -> m106_70  [key=0, style=solid];
m106_69 -> m106_58  [key=2, style=dotted];
m106_70 -> m106_71  [key=0, style=solid];
m106_70 -> m106_59  [key=2, style=dotted];
m106_70 -> m106_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_71 -> m106_67  [color=blue, key=0, style=bold];
m106_58 -> m106_59  [key=0, style=solid];
m106_58 -> m106_32  [key=2, style=dotted];
m106_59 -> m106_39  [color=blue, key=0, style=bold];
m106_25 -> m106_26  [key=0, style=solid];
m106_26 -> m106_27  [key=0, style=solid];
m106_26 -> m106_19  [key=2, style=dotted];
m106_26 -> m106_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_27 -> m106_28  [key=0, style=solid];
m106_27 -> m106_20  [key=2, style=dotted];
m106_28 -> m106_25  [color=blue, key=0, style=bold];
m106_28 -> m106_29  [key=0, style=solid];
m106_17 -> m106_18  [key=0, style=solid];
m106_17 -> m106_20  [key=2, style=dotted];
m106_18 -> m106_15  [color=blue, key=0, style=bold];
m106_40 -> m106_41  [key=0, style=solid];
m106_57 -> m106_91  [key=0, style=solid];
m106_9 -> m106_10  [key=0, style=solid];
m106_9 -> m106_9  [key=2, style=dotted];
m106_9 -> m106_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_48 -> m106_49  [key=0, style=solid];
m106_0 -> m106_1  [color=green, key=0, style=solid];
m106_1 -> m106_2  [color=green, key=0, style=solid];
m106_1 -> m106_6  [color=green, key=2, style=dotted];
m106_2 -> m106_3  [color=red, key=0, style=solid];
m106_2 -> m106_7  [key=2, style=dotted];
m106_3 -> m106_4  [color=red, key=0, style=solid];
m106_3 -> m106_13  [key=2, style=dotted];
m106_3 -> m106_8  [color=red, key=2, style=dotted];
m106_4 -> m106_5  [key=0, style=solid];
m106_4 -> m106_14  [key=2, style=dotted];
m106_4 -> m106_9  [key=2, style=dotted];
m106_4 -> m106_10  [key=2, style=dotted];
m106_4 -> m106_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_5 -> m106_6  [key=0, style=solid];
m106_5 -> m106_15  [key=2, style=dotted];
m106_5 -> m106_0  [color=blue, key=0, style=bold];
m106_6 -> m106_7  [key=0, style=solid];
m106_6 -> m106_16  [key=2, style=dotted];
m106_8 -> m106_9  [key=0, style=solid];
m106_8 -> m106_10  [key=2, style=dotted];
m106_8 -> m106_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_10 -> m106_0  [color=blue, key=0, style=bold];
m106_85 -> m106_86  [key=0, style=solid];
m106_11 -> m106_12  [key=0, style=solid];
m106_12 -> m106_13  [key=0, style=solid];
m106_12 -> m106_14  [key=2, style=dotted];
m106_13 -> m106_11  [color=blue, key=0, style=bold];
m106_21 -> m106_22  [key=0, style=solid];
m106_21 -> m106_19  [color=blue, key=0, style=bold];
m106_23 -> m106_21  [color=blue, key=0, style=bold];
m106_29 -> m106_30  [key=0, style=solid];
m106_29 -> m106_22  [key=2, style=dotted];
m106_29 -> m106_31  [key=2, style=dotted];
m106_29 -> m106_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_30 -> m106_31  [key=0, style=solid];
m106_30 -> m106_32  [key=2, style=dotted];
m106_30 -> m106_28  [color=blue, key=0, style=bold];
m106_42 -> m106_43  [key=0, style=solid];
m106_42 -> m106_40  [color=blue, key=0, style=bold];
m106_41 -> m106_42  [key=0, style=solid];
m106_41 -> m106_43  [key=2, style=dotted];
m106_49 -> m106_50  [key=0, style=solid];
m106_49 -> m106_43  [key=2, style=dotted];
m106_73 -> m106_22  [key=2, style=dotted];
m106_73 -> m106_74  [key=0, style=solid];
m106_73 -> m106_75  [key=2, style=dotted];
m106_83 -> m106_22  [key=2, style=dotted];
m106_83 -> m106_84  [key=0, style=solid];
m106_83 -> m106_31  [key=2, style=dotted];
m106_83 -> m106_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m106_89 -> m106_22  [key=2, style=dotted];
m106_89 -> m106_90  [key=0, style=solid];
m106_89 -> m106_75  [key=2, style=dotted];
m106_50 -> m106_48  [color=blue, key=0, style=bold];
m106_50 -> m106_51  [color=red, key=0, style=solid];
m106_50 -> m106_39  [key=2, style=dotted];
m106_60 -> m106_43  [key=0, style=solid];
m106_60 -> m106_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_3  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_35  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_51  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_60 -> m106_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m106_63 -> m106_46  [key=0, style=solid];
m106_72 -> m106_73  [key=0, style=solid];
m106_82 -> m106_83  [key=0, style=solid];
m106_88 -> m106_89  [key=0, style=solid];
m106_32 -> m106_33  [key=0, style=solid];
m106_74 -> m106_72  [color=blue, key=0, style=bold];
m106_84 -> m106_82  [color=blue, key=0, style=bold];
m106_90 -> m106_88  [color=blue, key=0, style=bold];
m106_86 -> m106_87  [key=0, style=solid];
m106_87 -> m106_85  [color=blue, key=0, style=bold];
m106_91 -> m106_92  [key=0, style=solid];
m106_91 -> m106_43  [key=2, style=dotted];
m106_92 -> m106_57  [color=blue, key=0, style=bold];
m106_93 -> m106_1  [color=green, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_45  [color=green, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_49  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_80  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m106_93 -> m106_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m109_15 -> m109_16  [key=0, style=solid];
m109_15 -> m109_17  [key=2, style=dotted];
m109_16 -> m109_17  [key=0, style=solid];
m109_16 -> m109_18  [key=2, style=dotted];
m109_16 -> m109_19  [key=2, style=dotted];
m109_16 -> m109_14  [color=blue, key=0, style=bold];
m109_17 -> m109_15  [color=blue, key=0, style=bold];
m109_17 -> m109_327  [key=0, style=solid];
m109_18 -> m109_19  [key=0, style=solid];
m109_12 -> m109_10  [color=blue, key=0, style=bold];
m109_11 -> m109_12  [color=red, key=0, style=solid];
m109_11 -> m109_13  [color=red, key=2, style=dotted];
m109_11 -> m109_14  [color=red, key=2, style=dotted];
m109_19 -> m109_20  [key=0, style=solid];
m109_19 -> m109_23  [key=2, style=dotted];
m109_19 -> m109_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_0 -> m109_1  [key=0, style=solid];
m109_0 -> m109_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m109_0 -> m109_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m109_0 -> m109_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m109_0 -> m109_7  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m109_6 -> m109_7  [color=green, key=0, style=solid];
m109_6 -> m109_13  [color=green, key=2, style=dotted];
m109_1 -> m109_6  [color=green, key=1, label=connection, style=dashed];
m109_1 -> m109_2  [key=0, style=solid];
m109_1 -> m109_8  [key=2, style=dotted];
m109_1 -> m109_3  [key=0, style=solid];
m109_2 -> m109_6  [color=green, key=1, label=job, style=dashed];
m109_2 -> m109_3  [key=0, style=solid];
m109_2 -> m109_9  [key=2, style=dotted];
m109_2 -> m109_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_2 -> m109_8  [key=0, style=solid];
m109_3 -> m109_6  [color=green, key=1, label=state, style=dashed];
m109_3 -> m109_4  [key=0, style=solid];
m109_3 -> m109_10  [key=2, style=dotted];
m109_3 -> m109_5  [key=0, style=solid];
m109_4 -> m109_6  [color=green, key=1, label=stateMachineFactory, style=dashed];
m109_4 -> m109_5  [color=green, key=0, style=solid];
m109_4 -> m109_11  [key=2, style=dotted];
m109_4 -> m109_8  [key=0, style=solid];
m109_4 -> m109_9  [key=2, style=dotted];
m109_5 -> m109_6  [color=green, key=0, style=solid];
m109_5 -> m109_12  [color=green, key=2, style=dotted];
m109_7 -> m109_0  [color=blue, key=0, style=bold];
m109_7 -> m109_8  [key=0, style=solid];
m109_14 -> m109_15  [key=0, style=solid];
m109_97 -> m109_98  [key=0, style=solid];
m109_98 -> m109_99  [key=0, style=solid];
m109_98 -> m109_46  [key=2, style=dotted];
m109_98 -> m109_24  [key=2, style=dotted];
m109_98 -> m109_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_101 -> m109_102  [key=0, style=solid];
m109_101 -> m109_62  [key=2, style=dotted];
m109_102 -> m109_103  [key=0, style=solid];
m109_102 -> m109_23  [key=2, style=dotted];
m109_102 -> m109_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_103 -> m109_104  [key=0, style=solid];
m109_103 -> m109_106  [key=2, style=dotted];
m109_103 -> m109_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_99 -> m109_101  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_99 -> m109_100  [key=0, style=solid];
m109_99 -> m109_61  [key=2, style=dotted];
m109_100 -> m109_101  [key=0, style=solid];
m109_100 -> m109_46  [key=2, style=dotted];
m109_100 -> m109_105  [key=2, style=dotted];
m109_100 -> m109_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_100 -> m109_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_104 -> m109_97  [color=blue, key=0, style=bold];
m109_8 -> m109_0  [color=blue, key=0, style=bold];
m109_41 -> m109_42  [key=0, style=solid];
m109_42 -> m109_43  [key=0, style=solid];
m109_42 -> m109_46  [key=2, style=dotted];
m109_42 -> m109_24  [key=2, style=dotted];
m109_42 -> m109_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_43 -> m109_44  [key=0, style=solid];
m109_43 -> m109_23  [key=2, style=dotted];
m109_43 -> m109_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_44 -> m109_45  [key=0, style=solid];
m109_44 -> m109_24  [key=2, style=dotted];
m109_44 -> m109_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_45 -> m109_41  [color=blue, key=0, style=bold];
m109_251 -> m109_252  [key=0, style=solid];
m109_254 -> m109_255  [key=0, style=solid];
m109_254 -> m109_62  [key=2, style=dotted];
m109_255 -> m109_256  [key=0, style=solid];
m109_255 -> m109_62  [key=2, style=dotted];
m109_257 -> m109_258  [key=0, style=solid];
m109_257 -> m109_46  [key=2, style=dotted];
m109_257 -> m109_238  [key=2, style=dotted];
m109_257 -> m109_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_258 -> m109_259  [key=0, style=solid];
m109_258 -> m109_23  [key=2, style=dotted];
m109_258 -> m109_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_259 -> m109_260  [key=0, style=solid];
m109_259 -> m109_24  [key=2, style=dotted];
m109_259 -> m109_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_252 -> m109_254  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m109_252 -> m109_253  [key=0, style=solid];
m109_252 -> m109_128  [key=2, style=dotted];
m109_252 -> m109_260  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m109_253 -> m109_254  [key=0, style=solid];
m109_253 -> m109_255  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m109_253 -> m109_128  [key=2, style=dotted];
m109_256 -> m109_257  [key=0, style=solid];
m109_256 -> m109_237  [key=2, style=dotted];
m109_256 -> m109_260  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_256 -> m109_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_256 -> m109_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_260 -> m109_36  [key=2, style=dotted];
m109_260 -> m109_261  [key=0, style=solid];
m109_260 -> m109_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_261 -> m109_251  [color=blue, key=0, style=bold];
m109_53 -> m109_54  [key=0, style=solid];
m109_55 -> m109_56  [key=0, style=solid];
m109_55 -> m109_62  [key=2, style=dotted];
m109_56 -> m109_57  [key=0, style=solid];
m109_56 -> m109_46  [key=2, style=dotted];
m109_56 -> m109_24  [key=2, style=dotted];
m109_56 -> m109_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_57 -> m109_58  [key=0, style=solid];
m109_57 -> m109_23  [key=2, style=dotted];
m109_57 -> m109_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_58 -> m109_59  [key=0, style=solid];
m109_58 -> m109_24  [key=2, style=dotted];
m109_58 -> m109_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_54 -> m109_55  [key=0, style=solid];
m109_54 -> m109_61  [key=2, style=dotted];
m109_54 -> m109_59  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_59 -> m109_36  [key=2, style=dotted];
m109_59 -> m109_60  [key=0, style=solid];
m109_59 -> m109_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_60 -> m109_53  [color=blue, key=0, style=bold];
m109_119 -> m109_120  [key=0, style=solid];
m109_121 -> m109_122  [key=0, style=solid];
m109_121 -> m109_62  [key=2, style=dotted];
m109_123 -> m109_124  [key=0, style=solid];
m109_123 -> m109_46  [key=2, style=dotted];
m109_123 -> m109_84  [key=2, style=dotted];
m109_123 -> m109_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_125 -> m109_126  [key=0, style=solid];
m109_125 -> m109_23  [key=2, style=dotted];
m109_126 -> m109_127  [key=0, style=solid];
m109_126 -> m109_35  [key=2, style=dotted];
m109_120 -> m109_121  [key=0, style=solid];
m109_120 -> m109_128  [key=2, style=dotted];
m109_120 -> m109_122  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_120 -> m109_124  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_122 -> m109_123  [key=0, style=solid];
m109_122 -> m109_46  [key=2, style=dotted];
m109_122 -> m109_84  [key=2, style=dotted];
m109_122 -> m109_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_124 -> m109_125  [key=0, style=solid];
m109_124 -> m109_46  [key=2, style=dotted];
m109_124 -> m109_84  [key=2, style=dotted];
m109_124 -> m109_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_127 -> m109_119  [color=blue, key=0, style=bold];
m109_20 -> m109_21  [key=0, style=solid];
m109_20 -> m109_24  [key=2, style=dotted];
m109_20 -> m109_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_20 -> m109_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m109_20 -> m109_6  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m109_20 -> m109_7  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m109_20 -> m109_11  [color=red, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m109_20 -> m109_16  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m109_21 -> m109_22  [key=0, style=solid];
m109_21 -> m109_25  [key=2, style=dotted];
m109_22 -> m109_18  [color=blue, key=0, style=bold];
m109_164 -> m109_165  [key=0, style=solid];
m109_166 -> m109_167  [key=0, style=solid];
m109_166 -> m109_62  [key=2, style=dotted];
m109_168 -> m109_169  [key=0, style=solid];
m109_168 -> m109_23  [key=2, style=dotted];
m109_169 -> m109_170  [key=0, style=solid];
m109_169 -> m109_35  [key=2, style=dotted];
m109_170 -> m109_171  [key=0, style=solid];
m109_170 -> m109_36  [key=2, style=dotted];
m109_170 -> m109_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_165 -> m109_166  [key=0, style=solid];
m109_165 -> m109_128  [key=2, style=dotted];
m109_165 -> m109_167  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_165 -> m109_171  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_167 -> m109_168  [key=0, style=solid];
m109_167 -> m109_46  [key=2, style=dotted];
m109_167 -> m109_105  [key=2, style=dotted];
m109_167 -> m109_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_167 -> m109_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_171 -> m109_36  [key=2, style=dotted];
m109_171 -> m109_172  [key=0, style=solid];
m109_171 -> m109_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_172 -> m109_164  [color=blue, key=0, style=bold];
m109_23 -> m109_328  [key=0, style=solid];
m109_328 -> m109_329  [key=0, style=solid];
m109_328 -> m109_330  [key=2, style=dotted];
m109_329 -> m109_23  [color=blue, key=0, style=bold];
m109_228 -> m109_229  [key=0, style=solid];
m109_230 -> m109_231  [key=0, style=solid];
m109_230 -> m109_62  [key=2, style=dotted];
m109_232 -> m109_233  [key=0, style=solid];
m109_232 -> m109_46  [key=2, style=dotted];
m109_232 -> m109_238  [key=2, style=dotted];
m109_232 -> m109_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_233 -> m109_234  [key=0, style=solid];
m109_233 -> m109_23  [key=2, style=dotted];
m109_233 -> m109_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_234 -> m109_235  [key=0, style=solid];
m109_234 -> m109_24  [key=2, style=dotted];
m109_234 -> m109_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_229 -> m109_230  [key=0, style=solid];
m109_229 -> m109_128  [key=2, style=dotted];
m109_229 -> m109_235  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_231 -> m109_232  [key=0, style=solid];
m109_231 -> m109_237  [key=2, style=dotted];
m109_231 -> m109_235  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_231 -> m109_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_231 -> m109_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_235 -> m109_36  [key=2, style=dotted];
m109_235 -> m109_236  [key=0, style=solid];
m109_235 -> m109_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_236 -> m109_228  [color=blue, key=0, style=bold];
m109_10 -> m109_11  [color=red, key=0, style=solid];
m109_185 -> m109_186  [key=0, style=solid];
m109_188 -> m109_189  [key=0, style=solid];
m109_188 -> m109_62  [key=2, style=dotted];
m109_189 -> m109_190  [key=0, style=solid];
m109_189 -> m109_62  [key=2, style=dotted];
m109_191 -> m109_192  [key=0, style=solid];
m109_191 -> m109_23  [key=2, style=dotted];
m109_192 -> m109_193  [key=0, style=solid];
m109_192 -> m109_35  [key=2, style=dotted];
m109_186 -> m109_188  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m109_186 -> m109_187  [key=0, style=solid];
m109_186 -> m109_128  [key=2, style=dotted];
m109_186 -> m109_193  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m109_187 -> m109_188  [key=0, style=solid];
m109_187 -> m109_189  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m109_187 -> m109_128  [key=2, style=dotted];
m109_187 -> m109_190  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m109_190 -> m109_191  [key=0, style=solid];
m109_190 -> m109_46  [key=2, style=dotted];
m109_190 -> m109_105  [key=2, style=dotted];
m109_190 -> m109_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_190 -> m109_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_193 -> m109_36  [key=2, style=dotted];
m109_193 -> m109_194  [key=0, style=solid];
m109_193 -> m109_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_194 -> m109_185  [color=blue, key=0, style=bold];
m109_73 -> m109_74  [key=0, style=solid];
m109_78 -> m109_79  [key=0, style=solid];
m109_78 -> m109_62  [key=2, style=dotted];
m109_79 -> m109_80  [key=0, style=solid];
m109_79 -> m109_62  [key=2, style=dotted];
m109_80 -> m109_81  [key=0, style=solid];
m109_80 -> m109_46  [key=2, style=dotted];
m109_80 -> m109_24  [key=2, style=dotted];
m109_80 -> m109_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_81 -> m109_82  [key=0, style=solid];
m109_81 -> m109_23  [key=2, style=dotted];
m109_81 -> m109_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_82 -> m109_83  [key=0, style=solid];
m109_82 -> m109_24  [key=2, style=dotted];
m109_82 -> m109_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_74 -> m109_78  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m109_74 -> m109_75  [key=0, style=solid];
m109_74 -> m109_61  [key=2, style=dotted];
m109_74 -> m109_77  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m109_77 -> m109_78  [key=0, style=solid];
m109_77 -> m109_46  [key=2, style=dotted];
m109_77 -> m109_84  [key=2, style=dotted];
m109_77 -> m109_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_75 -> m109_79  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m109_75 -> m109_76  [key=0, style=solid];
m109_75 -> m109_61  [key=2, style=dotted];
m109_76 -> m109_46  [key=2, style=dotted];
m109_76 -> m109_77  [key=0, style=solid];
m109_76 -> m109_84  [key=2, style=dotted];
m109_76 -> m109_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_83 -> m109_73  [color=blue, key=0, style=bold];
m109_30 -> m109_31  [key=0, style=solid];
m109_31 -> m109_32  [key=0, style=solid];
m109_31 -> m109_23  [key=2, style=dotted];
m109_32 -> m109_33  [key=0, style=solid];
m109_32 -> m109_35  [key=2, style=dotted];
m109_33 -> m109_34  [key=0, style=solid];
m109_33 -> m109_36  [key=2, style=dotted];
m109_33 -> m109_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_34 -> m109_30  [color=blue, key=0, style=bold];
m109_324 -> m109_325  [key=0, style=solid];
m109_51 -> m109_52  [key=0, style=solid];
m109_51 -> m109_35  [key=2, style=dotted];
m109_67 -> m109_68  [key=0, style=solid];
m109_67 -> m109_35  [key=2, style=dotted];
m109_95 -> m109_96  [key=0, style=solid];
m109_95 -> m109_35  [key=2, style=dotted];
m109_117 -> m109_118  [key=0, style=solid];
m109_117 -> m109_35  [key=2, style=dotted];
m109_220 -> m109_221  [key=0, style=solid];
m109_220 -> m109_35  [key=2, style=dotted];
m109_243 -> m109_244  [key=0, style=solid];
m109_243 -> m109_35  [key=2, style=dotted];
m109_266 -> m109_267  [key=0, style=solid];
m109_266 -> m109_35  [key=2, style=dotted];
m109_296 -> m109_297  [key=0, style=solid];
m109_296 -> m109_35  [key=2, style=dotted];
m109_319 -> m109_320  [key=0, style=solid];
m109_319 -> m109_35  [key=2, style=dotted];
m109_27 -> m109_28  [key=0, style=solid];
m109_27 -> m109_29  [key=2, style=dotted];
m109_37 -> m109_38  [key=0, style=solid];
m109_47 -> m109_48  [key=0, style=solid];
m109_50 -> m109_51  [key=0, style=solid];
m109_52 -> m109_50  [color=blue, key=0, style=bold];
m109_63 -> m109_64  [key=0, style=solid];
m109_66 -> m109_67  [key=0, style=solid];
m109_68 -> m109_66  [color=blue, key=0, style=bold];
m109_91 -> m109_92  [key=0, style=solid];
m109_94 -> m109_95  [key=0, style=solid];
m109_96 -> m109_94  [color=blue, key=0, style=bold];
m109_107 -> m109_108  [key=0, style=solid];
m109_116 -> m109_117  [key=0, style=solid];
m109_118 -> m109_116  [color=blue, key=0, style=bold];
m109_133 -> m109_134  [key=0, style=solid];
m109_179 -> m109_180  [key=0, style=solid];
m109_219 -> m109_220  [key=0, style=solid];
m109_221 -> m109_219  [color=blue, key=0, style=bold];
m109_222 -> m109_223  [key=0, style=solid];
m109_239 -> m109_240  [key=0, style=solid];
m109_242 -> m109_243  [key=0, style=solid];
m109_244 -> m109_242  [color=blue, key=0, style=bold];
m109_262 -> m109_263  [key=0, style=solid];
m109_265 -> m109_266  [key=0, style=solid];
m109_267 -> m109_265  [color=blue, key=0, style=bold];
m109_283 -> m109_284  [key=0, style=solid];
m109_295 -> m109_296  [key=0, style=solid];
m109_297 -> m109_295  [color=blue, key=0, style=bold];
m109_309 -> m109_310  [key=0, style=solid];
m109_318 -> m109_319  [key=0, style=solid];
m109_320 -> m109_318  [color=blue, key=0, style=bold];
m109_26 -> m109_27  [key=0, style=solid];
m109_28 -> m109_26  [color=blue, key=0, style=bold];
m109_39 -> m109_37  [color=blue, key=0, style=bold];
m109_38 -> m109_39  [key=0, style=solid];
m109_38 -> m109_40  [key=2, style=dotted];
m109_70 -> m109_24  [key=2, style=dotted];
m109_70 -> m109_71  [key=0, style=solid];
m109_70 -> m109_72  [key=2, style=dotted];
m109_86 -> m109_24  [key=2, style=dotted];
m109_86 -> m109_87  [key=0, style=solid];
m109_86 -> m109_72  [key=2, style=dotted];
m109_89 -> m109_24  [key=2, style=dotted];
m109_89 -> m109_90  [key=0, style=solid];
m109_89 -> m109_72  [key=2, style=dotted];
m109_111 -> m109_24  [key=2, style=dotted];
m109_111 -> m109_112  [key=0, style=solid];
m109_111 -> m109_72  [key=2, style=dotted];
m109_130 -> m109_24  [key=2, style=dotted];
m109_130 -> m109_131  [key=0, style=solid];
m109_130 -> m109_132  [key=2, style=dotted];
m109_137 -> m109_24  [key=2, style=dotted];
m109_137 -> m109_138  [key=0, style=solid];
m109_137 -> m109_139  [key=2, style=dotted];
m109_153 -> m109_24  [key=2, style=dotted];
m109_153 -> m109_154  [key=0, style=solid];
m109_153 -> m109_132  [key=2, style=dotted];
m109_156 -> m109_24  [key=2, style=dotted];
m109_156 -> m109_157  [key=0, style=solid];
m109_156 -> m109_132  [key=2, style=dotted];
m109_159 -> m109_24  [key=2, style=dotted];
m109_159 -> m109_160  [key=0, style=solid];
m109_159 -> m109_139  [key=2, style=dotted];
m109_162 -> m109_24  [key=2, style=dotted];
m109_162 -> m109_163  [key=0, style=solid];
m109_162 -> m109_139  [key=2, style=dotted];
m109_174 -> m109_24  [key=2, style=dotted];
m109_174 -> m109_175  [key=0, style=solid];
m109_174 -> m109_132  [key=2, style=dotted];
m109_183 -> m109_24  [key=2, style=dotted];
m109_183 -> m109_184  [key=0, style=solid];
m109_183 -> m109_139  [key=2, style=dotted];
m109_196 -> m109_24  [key=2, style=dotted];
m109_196 -> m109_197  [key=0, style=solid];
m109_196 -> m109_132  [key=2, style=dotted];
m109_202 -> m109_24  [key=2, style=dotted];
m109_202 -> m109_203  [key=0, style=solid];
m109_202 -> m109_139  [key=2, style=dotted];
m109_202 -> m109_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_217 -> m109_24  [key=2, style=dotted];
m109_217 -> m109_218  [key=0, style=solid];
m109_217 -> m109_132  [key=2, style=dotted];
m109_226 -> m109_24  [key=2, style=dotted];
m109_226 -> m109_227  [key=0, style=solid];
m109_226 -> m109_139  [key=2, style=dotted];
m109_246 -> m109_24  [key=2, style=dotted];
m109_246 -> m109_247  [key=0, style=solid];
m109_246 -> m109_139  [key=2, style=dotted];
m109_246 -> m109_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_269 -> m109_24  [key=2, style=dotted];
m109_269 -> m109_270  [key=0, style=solid];
m109_269 -> m109_139  [key=2, style=dotted];
m109_269 -> m109_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_287 -> m109_24  [key=2, style=dotted];
m109_287 -> m109_288  [key=0, style=solid];
m109_287 -> m109_139  [key=2, style=dotted];
m109_287 -> m109_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_313 -> m109_24  [key=2, style=dotted];
m109_313 -> m109_314  [key=0, style=solid];
m109_313 -> m109_139  [key=2, style=dotted];
m109_322 -> m109_24  [key=2, style=dotted];
m109_322 -> m109_323  [key=0, style=solid];
m109_322 -> m109_139  [key=2, style=dotted];
m109_322 -> m109_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_49 -> m109_47  [color=blue, key=0, style=bold];
m109_48 -> m109_49  [key=0, style=solid];
m109_48 -> m109_40  [key=2, style=dotted];
m109_65 -> m109_63  [color=blue, key=0, style=bold];
m109_64 -> m109_65  [key=0, style=solid];
m109_64 -> m109_40  [key=2, style=dotted];
m109_69 -> m109_70  [key=0, style=solid];
m109_88 -> m109_89  [key=0, style=solid];
m109_93 -> m109_91  [color=blue, key=0, style=bold];
m109_92 -> m109_93  [key=0, style=solid];
m109_92 -> m109_40  [key=2, style=dotted];
m109_109 -> m109_107  [color=blue, key=0, style=bold];
m109_108 -> m109_109  [key=0, style=solid];
m109_108 -> m109_40  [key=2, style=dotted];
m109_110 -> m109_111  [key=0, style=solid];
m109_113 -> m109_114  [key=0, style=solid];
m109_129 -> m109_130  [key=0, style=solid];
m109_136 -> m109_137  [key=0, style=solid];
m109_135 -> m109_133  [color=blue, key=0, style=bold];
m109_134 -> m109_135  [key=0, style=solid];
m109_134 -> m109_40  [key=2, style=dotted];
m109_152 -> m109_153  [key=0, style=solid];
m109_161 -> m109_162  [key=0, style=solid];
m109_173 -> m109_174  [key=0, style=solid];
m109_176 -> m109_177  [key=0, style=solid];
m109_182 -> m109_183  [key=0, style=solid];
m109_181 -> m109_179  [color=blue, key=0, style=bold];
m109_180 -> m109_181  [key=0, style=solid];
m109_180 -> m109_40  [key=2, style=dotted];
m109_195 -> m109_196  [key=0, style=solid];
m109_198 -> m109_199  [key=0, style=solid];
m109_201 -> m109_202  [key=0, style=solid];
m109_216 -> m109_217  [key=0, style=solid];
m109_225 -> m109_226  [key=0, style=solid];
m109_224 -> m109_222  [color=blue, key=0, style=bold];
m109_223 -> m109_224  [key=0, style=solid];
m109_223 -> m109_40  [key=2, style=dotted];
m109_249 -> m109_250  [key=0, style=solid];
m109_241 -> m109_239  [color=blue, key=0, style=bold];
m109_240 -> m109_241  [key=0, style=solid];
m109_240 -> m109_40  [key=2, style=dotted];
m109_245 -> m109_246  [key=0, style=solid];
m109_272 -> m109_273  [key=0, style=solid];
m109_264 -> m109_262  [color=blue, key=0, style=bold];
m109_263 -> m109_264  [key=0, style=solid];
m109_263 -> m109_40  [key=2, style=dotted];
m109_268 -> m109_269  [key=0, style=solid];
m109_290 -> m109_291  [key=0, style=solid];
m109_286 -> m109_287  [key=0, style=solid];
m109_292 -> m109_293  [key=0, style=solid];
m109_285 -> m109_283  [color=blue, key=0, style=bold];
m109_284 -> m109_285  [key=0, style=solid];
m109_284 -> m109_40  [key=2, style=dotted];
m109_312 -> m109_313  [key=0, style=solid];
m109_315 -> m109_316  [key=0, style=solid];
m109_311 -> m109_309  [color=blue, key=0, style=bold];
m109_310 -> m109_311  [key=0, style=solid];
m109_310 -> m109_40  [key=2, style=dotted];
m109_321 -> m109_322  [key=0, style=solid];
m109_85 -> m109_86  [key=0, style=solid];
m109_155 -> m109_156  [key=0, style=solid];
m109_158 -> m109_159  [key=0, style=solid];
m109_71 -> m109_69  [color=blue, key=0, style=bold];
m109_87 -> m109_85  [color=blue, key=0, style=bold];
m109_90 -> m109_88  [color=blue, key=0, style=bold];
m109_112 -> m109_110  [color=blue, key=0, style=bold];
m109_131 -> m109_129  [color=blue, key=0, style=bold];
m109_138 -> m109_136  [color=blue, key=0, style=bold];
m109_154 -> m109_152  [color=blue, key=0, style=bold];
m109_157 -> m109_155  [color=blue, key=0, style=bold];
m109_160 -> m109_158  [color=blue, key=0, style=bold];
m109_163 -> m109_161  [color=blue, key=0, style=bold];
m109_175 -> m109_173  [color=blue, key=0, style=bold];
m109_184 -> m109_182  [color=blue, key=0, style=bold];
m109_197 -> m109_195  [color=blue, key=0, style=bold];
m109_203 -> m109_201  [color=blue, key=0, style=bold];
m109_204 -> m109_205  [key=0, style=solid];
m109_218 -> m109_216  [color=blue, key=0, style=bold];
m109_227 -> m109_225  [color=blue, key=0, style=bold];
m109_247 -> m109_245  [color=blue, key=0, style=bold];
m109_248 -> m109_249  [key=0, style=solid];
m109_270 -> m109_268  [color=blue, key=0, style=bold];
m109_271 -> m109_272  [key=0, style=solid];
m109_288 -> m109_286  [color=blue, key=0, style=bold];
m109_289 -> m109_290  [key=0, style=solid];
m109_314 -> m109_312  [color=blue, key=0, style=bold];
m109_323 -> m109_321  [color=blue, key=0, style=bold];
m109_115 -> m109_113  [color=blue, key=0, style=bold];
m109_114 -> m109_115  [key=0, style=solid];
m109_178 -> m109_176  [color=blue, key=0, style=bold];
m109_177 -> m109_178  [key=0, style=solid];
m109_200 -> m109_198  [color=blue, key=0, style=bold];
m109_199 -> m109_200  [key=0, style=solid];
m109_250 -> m109_248  [color=blue, key=0, style=bold];
m109_273 -> m109_271  [color=blue, key=0, style=bold];
m109_291 -> m109_289  [color=blue, key=0, style=bold];
m109_294 -> m109_292  [color=blue, key=0, style=bold];
m109_293 -> m109_294  [key=0, style=solid];
m109_317 -> m109_315  [color=blue, key=0, style=bold];
m109_316 -> m109_317  [key=0, style=solid];
m109_206 -> m109_204  [color=blue, key=0, style=bold];
m109_205 -> m109_206  [key=0, style=solid];
m109_325 -> m109_326  [key=0, style=solid];
m109_326 -> m109_324  [color=blue, key=0, style=bold];
m109_207 -> m109_208  [key=0, style=solid];
m109_209 -> m109_210  [key=0, style=solid];
m109_209 -> m109_62  [key=2, style=dotted];
m109_211 -> m109_212  [key=0, style=solid];
m109_211 -> m109_23  [key=2, style=dotted];
m109_211 -> m109_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_212 -> m109_213  [key=0, style=solid];
m109_212 -> m109_24  [key=2, style=dotted];
m109_212 -> m109_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_213 -> m109_214  [key=0, style=solid];
m109_213 -> m109_36  [key=2, style=dotted];
m109_213 -> m109_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_208 -> m109_209  [key=0, style=solid];
m109_208 -> m109_128  [key=2, style=dotted];
m109_208 -> m109_210  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_208 -> m109_214  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_210 -> m109_211  [key=0, style=solid];
m109_210 -> m109_46  [key=2, style=dotted];
m109_210 -> m109_24  [key=2, style=dotted];
m109_210 -> m109_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_214 -> m109_36  [key=2, style=dotted];
m109_214 -> m109_215  [key=0, style=solid];
m109_214 -> m109_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_215 -> m109_207  [color=blue, key=0, style=bold];
m109_298 -> m109_299  [key=0, style=solid];
m109_301 -> m109_302  [key=0, style=solid];
m109_301 -> m109_62  [key=2, style=dotted];
m109_302 -> m109_303  [key=0, style=solid];
m109_302 -> m109_62  [key=2, style=dotted];
m109_303 -> m109_304  [key=0, style=solid];
m109_303 -> m109_46  [key=2, style=dotted];
m109_303 -> m109_24  [key=2, style=dotted];
m109_303 -> m109_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_305 -> m109_306  [key=0, style=solid];
m109_305 -> m109_23  [key=2, style=dotted];
m109_305 -> m109_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_306 -> m109_307  [key=0, style=solid];
m109_306 -> m109_106  [key=2, style=dotted];
m109_306 -> m109_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_299 -> m109_301  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m109_299 -> m109_300  [key=0, style=solid];
m109_299 -> m109_128  [key=2, style=dotted];
m109_299 -> m109_307  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m109_300 -> m109_301  [key=0, style=solid];
m109_300 -> m109_302  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m109_300 -> m109_128  [key=2, style=dotted];
m109_300 -> m109_304  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m109_304 -> m109_305  [key=0, style=solid];
m109_304 -> m109_46  [key=2, style=dotted];
m109_304 -> m109_105  [key=2, style=dotted];
m109_304 -> m109_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_304 -> m109_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_307 -> m109_36  [key=2, style=dotted];
m109_307 -> m109_308  [key=0, style=solid];
m109_307 -> m109_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_308 -> m109_298  [color=blue, key=0, style=bold];
m109_274 -> m109_275  [key=0, style=solid];
m109_276 -> m109_277  [key=0, style=solid];
m109_276 -> m109_62  [key=2, style=dotted];
m109_278 -> m109_279  [key=0, style=solid];
m109_278 -> m109_46  [key=2, style=dotted];
m109_278 -> m109_238  [key=2, style=dotted];
m109_278 -> m109_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_280 -> m109_281  [key=0, style=solid];
m109_280 -> m109_23  [key=2, style=dotted];
m109_280 -> m109_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_281 -> m109_282  [key=0, style=solid];
m109_281 -> m109_106  [key=2, style=dotted];
m109_281 -> m109_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_275 -> m109_276  [key=0, style=solid];
m109_275 -> m109_128  [key=2, style=dotted];
m109_275 -> m109_279  [color=darkseagreen4, key=1, label=filter, style=dashed];
m109_277 -> m109_278  [key=0, style=solid];
m109_277 -> m109_237  [key=2, style=dotted];
m109_277 -> m109_279  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_277 -> m109_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_277 -> m109_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_279 -> m109_280  [key=0, style=solid];
m109_279 -> m109_46  [key=2, style=dotted];
m109_279 -> m109_105  [key=2, style=dotted];
m109_279 -> m109_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_279 -> m109_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_282 -> m109_274  [color=blue, key=0, style=bold];
m109_327 -> m109_17  [color=blue, key=0, style=bold];
m109_140 -> m109_141  [key=0, style=solid];
m109_143 -> m109_144  [key=0, style=solid];
m109_143 -> m109_62  [key=2, style=dotted];
m109_144 -> m109_145  [key=0, style=solid];
m109_144 -> m109_62  [key=2, style=dotted];
m109_149 -> m109_150  [key=0, style=solid];
m109_149 -> m109_23  [key=2, style=dotted];
m109_150 -> m109_151  [key=0, style=solid];
m109_150 -> m109_35  [key=2, style=dotted];
m109_141 -> m109_143  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m109_141 -> m109_142  [key=0, style=solid];
m109_141 -> m109_128  [key=2, style=dotted];
m109_141 -> m109_145  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m109_141 -> m109_148  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m109_142 -> m109_143  [key=0, style=solid];
m109_142 -> m109_144  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m109_142 -> m109_128  [key=2, style=dotted];
m109_142 -> m109_146  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m109_142 -> m109_147  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m109_145 -> m109_46  [key=2, style=dotted];
m109_145 -> m109_84  [key=2, style=dotted];
m109_145 -> m109_146  [key=0, style=solid];
m109_145 -> m109_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_148 -> m109_149  [key=0, style=solid];
m109_148 -> m109_46  [key=2, style=dotted];
m109_148 -> m109_84  [key=2, style=dotted];
m109_148 -> m109_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_146 -> m109_46  [key=2, style=dotted];
m109_146 -> m109_84  [key=2, style=dotted];
m109_146 -> m109_147  [key=0, style=solid];
m109_146 -> m109_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_147 -> m109_46  [key=2, style=dotted];
m109_147 -> m109_84  [key=2, style=dotted];
m109_147 -> m109_148  [key=0, style=solid];
m109_147 -> m109_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m109_151 -> m109_140  [color=blue, key=0, style=bold];
m109_331 -> m109_6  [color=green, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_5  [color=green, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_15  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_19  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_33  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_55  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_56  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_80  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_81  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_82  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_98  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_123  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_125  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_126  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_143  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_144  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_170  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_189  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_191  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_209  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_211  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_212  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_220  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_213  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_230  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_232  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_233  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_234  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_243  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_254  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_255  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_257  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_258  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_259  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_266  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_276  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_278  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_280  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_281  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_296  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_301  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_302  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_303  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_305  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_306  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_319  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_331 -> m109_328  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m109_333 -> m109_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_334 -> m109_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_335 -> m109_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_336 -> m109_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_337 -> m109_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_338 -> m109_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_340 -> m109_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_343 -> m109_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_344 -> m109_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_332 -> m109_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m109_339 -> m109_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_339 -> m109_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_341 -> m109_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_341 -> m109_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_342 -> m109_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m109_342 -> m109_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m111_4 -> m111_5  [key=0, style=solid];
m111_5 -> m111_6  [key=0, style=solid];
m111_5 -> m111_7  [key=2, style=dotted];
m111_5 -> m111_4  [color=blue, key=0, style=bold];
m111_6 -> m111_4  [color=blue, key=0, style=bold];
m111_6 -> m111_7  [key=0, style=solid];
m111_2 -> m111_3  [color=green, key=0, style=solid];
m111_3 -> m111_2  [color=blue, key=0, style=bold];
m111_3 -> m111_0  [color=blue, key=0, style=bold];
m111_0 -> m111_1  [key=0, style=solid];
m111_0 -> m111_2  [color=green, key=1, label=string, style=dashed];
m111_1 -> m111_0  [color=blue, key=0, style=bold];
m111_1 -> m111_2  [color=green, key=0, style=solid];
m111_7 -> m111_6  [color=blue, key=0, style=bold];
m111_8 -> m111_2  [color=green, key=1, label="HangFire.Web.SingleResourceHandler", style=dashed];
m111_8 -> m111_1  [color=darkseagreen4, key=1, label="HangFire.Web.SingleResourceHandler", style=dashed];
m111_8 -> m111_5  [color=darkseagreen4, key=1, label="HangFire.Web.SingleResourceHandler", style=dashed];
m114_5 -> m114_6  [key=0, style=solid];
m114_117 -> m114_123  [color=green, key=1, label=string, style=dashed];
m114_117 -> m114_118  [key=0, style=solid];
m114_117 -> m114_120  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m114_117 -> m114_122  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m114_123 -> m114_124  [color=green, key=0, style=solid];
m114_123 -> m114_60  [color=green, key=2, style=dotted];
m114_123 -> m114_65  [color=green, key=2, style=dotted];
m114_122 -> m114_123  [color=green, key=0, style=solid];
m114_122 -> m114_125  [key=2, style=dotted];
m114_119 -> m114_8  [key=2, style=dotted];
m114_119 -> m114_124  [key=0, style=solid];
m114_121 -> m114_8  [key=2, style=dotted];
m114_121 -> m114_124  [key=0, style=solid];
m114_118 -> m114_119  [key=0, style=solid];
m114_118 -> m114_120  [key=0, style=solid];
m114_120 -> m114_122  [key=0, style=solid];
m114_120 -> m114_121  [key=0, style=solid];
m114_124 -> m114_117  [color=blue, key=0, style=bold];
m114_102 -> m114_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m114_102 -> m114_103  [key=0, style=solid];
m114_102 -> m114_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m114_107 -> m114_62  [key=2, style=dotted];
m114_107 -> m114_82  [key=2, style=dotted];
m114_107 -> m114_108  [key=0, style=solid];
m114_104 -> m114_8  [key=2, style=dotted];
m114_104 -> m114_108  [key=0, style=solid];
m114_106 -> m114_8  [key=2, style=dotted];
m114_106 -> m114_108  [key=0, style=solid];
m114_105 -> m114_107  [key=0, style=solid];
m114_105 -> m114_106  [key=0, style=solid];
m114_103 -> m114_104  [key=0, style=solid];
m114_103 -> m114_105  [key=0, style=solid];
m114_108 -> m114_102  [color=blue, key=0, style=bold];
m114_85 -> m114_71  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.StateData GetStateData", style=bold];
m114_85 -> m114_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m114_85 -> m114_86  [key=0, style=solid];
m114_89 -> m114_62  [key=2, style=dotted];
m114_89 -> m114_82  [key=2, style=dotted];
m114_89 -> m114_90  [key=0, style=solid];
m114_89 -> m114_92  [color=darkseagreen4, key=1, label=sqlState, style=dashed];
m114_92 -> m114_62  [key=2, style=dotted];
m114_92 -> m114_93  [key=0, style=solid];
m114_92 -> m114_94  [key=2, style=dotted];
m114_87 -> m114_8  [key=2, style=dotted];
m114_87 -> m114_93  [key=0, style=solid];
m114_88 -> m114_89  [key=0, style=solid];
m114_88 -> m114_88  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m114_90 -> m114_92  [key=0, style=solid];
m114_90 -> m114_91  [key=0, style=solid];
m114_86 -> m114_87  [key=0, style=solid];
m114_86 -> m114_88  [key=0, style=solid];
m114_91 -> m114_93  [key=0, style=solid];
m114_93 -> m114_85  [color=blue, key=0, style=bold];
m114_17 -> m114_18  [key=0, style=solid];
m114_18 -> m114_19  [key=0, style=solid];
m114_18 -> m114_20  [key=2, style=dotted];
m114_18 -> m114_21  [key=2, style=dotted];
m114_19 -> m114_17  [color=blue, key=0, style=bold];
m114_66 -> m114_67  [key=0, style=solid];
m114_66 -> m114_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m114_66 -> m114_71  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.JobData GetJobData", style=bold];
m114_69 -> m114_69  [color=green, key=3, label="Local variable string sql", style=bold];
m114_69 -> m114_70  [color=green, key=0, style=solid];
m114_67 -> m114_69  [color=green, key=0, style=solid];
m114_67 -> m114_68  [key=0, style=solid];
m114_70 -> m114_71  [key=0, style=solid];
m114_70 -> m114_62  [key=2, style=dotted];
m114_70 -> m114_82  [key=2, style=dotted];
m114_70 -> m114_73  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m114_70 -> m114_74  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m114_70 -> m114_80  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m114_68 -> m114_8  [key=2, style=dotted];
m114_68 -> m114_81  [key=0, style=solid];
m114_71 -> m114_72  [key=0, style=solid];
m114_71 -> m114_73  [key=0, style=solid];
m114_73 -> m114_62  [key=2, style=dotted];
m114_73 -> m114_74  [key=0, style=solid];
m114_73 -> m114_77  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m114_74 -> m114_75  [key=0, style=solid];
m114_80 -> m114_81  [key=0, style=solid];
m114_80 -> m114_84  [key=2, style=dotted];
m114_75 -> m114_71  [color=darkorchid, key=3, label="Local variable HangFire.Common.Job job", style=bold];
m114_75 -> m114_76  [key=0, style=solid];
m114_76 -> m114_71  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m114_76 -> m114_77  [key=0, style=solid];
m114_76 -> m114_78  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m114_72 -> m114_81  [key=0, style=solid];
m114_77 -> m114_80  [key=0, style=solid];
m114_77 -> m114_78  [key=0, style=solid];
m114_77 -> m114_83  [key=2, style=dotted];
m114_79 -> m114_80  [key=0, style=solid];
m114_78 -> m114_79  [key=0, style=solid];
m114_81 -> m114_66  [color=blue, key=0, style=bold];
m114_13 -> m114_14  [key=0, style=solid];
m114_14 -> m114_15  [key=0, style=solid];
m114_14 -> m114_16  [key=2, style=dotted];
m114_15 -> m114_13  [color=blue, key=0, style=bold];
m114_22 -> m114_25  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m114_22 -> m114_23  [key=0, style=solid];
m114_22 -> m114_27  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m114_22 -> m114_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m114_25 -> m114_26  [key=0, style=solid];
m114_25 -> m114_31  [key=2, style=dotted];
m114_25 -> m114_32  [key=2, style=dotted];
m114_25 -> m114_33  [key=2, style=dotted];
m114_25 -> m114_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m114_25 -> m114_28  [color=darkseagreen4, key=1, label=providers, style=dashed];
m114_28 -> m114_29  [key=0, style=solid];
m114_28 -> m114_36  [key=2, style=dotted];
m114_24 -> m114_8  [key=2, style=dotted];
m114_24 -> m114_30  [key=0, style=solid];
m114_23 -> m114_25  [key=0, style=solid];
m114_23 -> m114_24  [key=0, style=solid];
m114_26 -> m114_28  [key=0, style=solid];
m114_26 -> m114_27  [key=0, style=solid];
m114_29 -> m114_30  [key=0, style=solid];
m114_29 -> m114_37  [key=2, style=dotted];
m114_27 -> m114_21  [key=2, style=dotted];
m114_27 -> m114_30  [key=0, style=solid];
m114_27 -> m114_34  [key=2, style=dotted];
m114_27 -> m114_35  [key=2, style=dotted];
m114_30 -> m114_22  [color=blue, key=0, style=bold];
m114_136 -> m114_137  [color=green, key=0, style=solid];
m114_137 -> m114_137  [color=green, key=1, label="System.TimeSpan", style=dashed];
m114_137 -> m114_138  [color=green, key=0, style=solid];
m114_137 -> m114_139  [color=green, key=0, style=solid];
m114_137 -> m114_141  [color=green, key=2, style=dotted];
m114_138 -> m114_140  [color=green, key=0, style=solid];
m114_138 -> m114_142  [color=green, key=2, style=dotted];
m114_139 -> m114_65  [key=2, style=dotted];
m114_139 -> m114_139  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m114_139 -> m114_140  [key=0, style=solid];
m114_139 -> m114_143  [key=2, style=dotted];
m114_139 -> m114_61  [key=2, style=dotted];
m114_140 -> m114_136  [color=blue, key=0, style=bold];
m114_0 -> m114_1  [key=0, style=solid];
m114_0 -> m114_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m114_0 -> m114_5  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m114_0 -> m114_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m114_1 -> m114_2  [key=0, style=solid];
m114_1 -> m114_3  [key=0, style=solid];
m114_3 -> m114_4  [key=0, style=solid];
m114_3 -> m114_5  [key=0, style=solid];
m114_2 -> m114_4  [key=0, style=solid];
m114_2 -> m114_5  [key=2, style=dotted];
m114_2 -> m114_8  [key=2, style=dotted];
m114_2 -> m114_7  [key=0, style=solid];
m114_4 -> m114_0  [color=blue, key=0, style=bold];
m114_4 -> m114_8  [key=2, style=dotted];
m114_4 -> m114_7  [key=0, style=solid];
m114_42 -> m114_49  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m114_42 -> m114_43  [key=0, style=solid];
m114_42 -> m114_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m114_42 -> m114_48  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m114_42 -> m114_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m114_42 -> m114_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m114_42 -> m114_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m114_49 -> m114_62  [key=2, style=dotted];
m114_49 -> m114_60  [key=2, style=dotted];
m114_49 -> m114_50  [key=0, style=solid];
m114_49 -> m114_61  [key=2, style=dotted];
m114_49 -> m114_63  [key=2, style=dotted];
m114_49 -> m114_64  [key=2, style=dotted];
m114_49 -> m114_54  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m114_49 -> m114_57  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m114_56 -> m114_65  [key=2, style=dotted];
m114_56 -> m114_57  [key=0, style=solid];
m114_44 -> m114_8  [key=2, style=dotted];
m114_44 -> m114_58  [key=0, style=solid];
m114_46 -> m114_8  [key=2, style=dotted];
m114_46 -> m114_58  [key=0, style=solid];
m114_48 -> m114_49  [key=0, style=solid];
m114_48 -> m114_59  [key=2, style=dotted];
m114_47 -> m114_49  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m114_47 -> m114_48  [key=0, style=solid];
m114_47 -> m114_47  [color=darkorchid, key=3, label="Local variable string createJobSql", style=bold];
m114_50 -> m114_51  [key=0, style=solid];
m114_50 -> m114_57  [key=0, style=solid];
m114_54 -> m114_54  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m114_54 -> m114_53  [key=0, style=solid];
m114_57 -> m114_58  [key=0, style=solid];
m114_51 -> m114_56  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m114_51 -> m114_54  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m114_51 -> m114_52  [key=0, style=solid];
m114_55 -> m114_56  [key=0, style=solid];
m114_55 -> m114_55  [color=darkorchid, key=3, label="Local variable string insertParameterSql", style=bold];
m114_43 -> m114_44  [key=0, style=solid];
m114_43 -> m114_45  [key=0, style=solid];
m114_45 -> m114_46  [key=0, style=solid];
m114_45 -> m114_47  [key=0, style=solid];
m114_53 -> m114_54  [key=0, style=solid];
m114_53 -> m114_55  [key=0, style=solid];
m114_52 -> m114_54  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m114_52 -> m114_53  [key=0, style=solid];
m114_52 -> m114_52  [color=darkorchid, key=3, label="Local variable int parameterIndex", style=bold];
m114_58 -> m114_42  [color=blue, key=0, style=bold];
m114_9 -> m114_10  [key=0, style=solid];
m114_10 -> m114_11  [key=0, style=solid];
m114_10 -> m114_12  [key=2, style=dotted];
m114_11 -> m114_9  [color=blue, key=0, style=bold];
m114_38 -> m114_39  [key=0, style=solid];
m114_39 -> m114_40  [key=0, style=solid];
m114_39 -> m114_41  [key=2, style=dotted];
m114_40 -> m114_38  [color=blue, key=0, style=bold];
m114_95 -> m114_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m114_95 -> m114_96  [key=0, style=solid];
m114_95 -> m114_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m114_100 -> m114_65  [key=2, style=dotted];
m114_100 -> m114_101  [key=0, style=solid];
m114_97 -> m114_8  [key=2, style=dotted];
m114_97 -> m114_101  [key=0, style=solid];
m114_99 -> m114_8  [key=2, style=dotted];
m114_99 -> m114_101  [key=0, style=solid];
m114_98 -> m114_100  [key=0, style=solid];
m114_98 -> m114_99  [key=0, style=solid];
m114_96 -> m114_97  [key=0, style=solid];
m114_96 -> m114_98  [key=0, style=solid];
m114_101 -> m114_95  [color=blue, key=0, style=bold];
m114_109 -> m114_110  [color=green, key=0, style=solid];
m114_109 -> m114_112  [color=green, key=1, label=double, style=dashed];
m114_109 -> m114_114  [color=green, key=1, label=string, style=dashed];
m114_110 -> m114_111  [color=green, key=0, style=solid];
m114_110 -> m114_112  [color=green, key=0, style=solid];
m114_111 -> m114_115  [color=green, key=0, style=solid];
m114_111 -> m114_8  [color=green, key=2, style=dotted];
m114_112 -> m114_113  [color=green, key=0, style=solid];
m114_112 -> m114_114  [color=green, key=0, style=solid];
m114_113 -> m114_115  [color=green, key=0, style=solid];
m114_113 -> m114_116  [color=green, key=2, style=dotted];
m114_114 -> m114_115  [color=green, key=0, style=solid];
m114_114 -> m114_62  [color=green, key=2, style=dotted];
m114_114 -> m114_82  [color=green, key=2, style=dotted];
m114_115 -> m114_109  [color=blue, key=0, style=bold];
m114_126 -> m114_127  [color=green, key=0, style=solid];
m114_126 -> m114_129  [color=green, key=1, label=string, style=dashed];
m114_127 -> m114_128  [color=green, key=0, style=solid];
m114_127 -> m114_129  [color=green, key=0, style=solid];
m114_128 -> m114_130  [color=green, key=0, style=solid];
m114_128 -> m114_8  [color=green, key=2, style=dotted];
m114_129 -> m114_130  [color=green, key=0, style=solid];
m114_129 -> m114_65  [color=green, key=2, style=dotted];
m114_130 -> m114_126  [color=blue, key=0, style=bold];
m114_131 -> m114_132  [color=green, key=0, style=solid];
m114_131 -> m114_134  [color=green, key=1, label=string, style=dashed];
m114_132 -> m114_133  [color=green, key=0, style=solid];
m114_132 -> m114_134  [color=green, key=0, style=solid];
m114_133 -> m114_135  [color=green, key=0, style=solid];
m114_133 -> m114_8  [color=green, key=2, style=dotted];
m114_134 -> m114_135  [color=green, key=0, style=solid];
m114_134 -> m114_65  [color=green, key=2, style=dotted];
m114_135 -> m114_131  [color=blue, key=0, style=bold];
m114_6 -> m114_7  [key=0, style=solid];
m114_6 -> m114_3  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m114_7 -> m114_0  [color=blue, key=0, style=bold];
m114_144 -> m114_114  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_123  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_129  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_134  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_70  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_39  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_49  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_89  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_100  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_107  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m114_144 -> m114_139  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m115_16 -> m115_17  [key=0, style=solid];
m115_17 -> m115_18  [key=0, style=solid];
m115_17 -> m115_19  [key=2, style=dotted];
m115_18 -> m115_16  [color=blue, key=0, style=bold];
m115_4 -> m115_5  [key=0, style=solid];
m115_4 -> m115_9  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m115_5 -> m115_6  [key=0, style=solid];
m115_5 -> m115_11  [key=2, style=dotted];
m115_9 -> m115_10  [key=0, style=solid];
m115_9 -> m115_15  [key=2, style=dotted];
m115_6 -> m115_7  [key=0, style=solid];
m115_6 -> m115_12  [key=2, style=dotted];
m115_6 -> m115_8  [color=darkseagreen4, key=1, label=serversRemoved, style=dashed];
m115_7 -> m115_8  [key=0, style=solid];
m115_7 -> m115_9  [key=0, style=solid];
m115_8 -> m115_9  [key=0, style=solid];
m115_8 -> m115_13  [key=2, style=dotted];
m115_8 -> m115_14  [key=2, style=dotted];
m115_10 -> m115_4  [color=blue, key=0, style=bold];
m115_0 -> m115_1  [key=0, style=solid];
m115_0 -> m115_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m115_1 -> m115_2  [key=0, style=solid];
m115_2 -> m115_3  [key=0, style=solid];
m115_3 -> m115_0  [color=blue, key=0, style=bold];
m115_20 -> m115_1  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m115_20 -> m115_2  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m115_20 -> m115_6  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m115_20 -> m115_9  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m115_20 -> m115_17  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m116_0 -> m116_1  [key=0, style=solid];
m116_0 -> m116_2  [color=darkseagreen4, key=1, label=long, style=dashed];
m116_1 -> m116_3  [key=2, style=dotted];
m116_1 -> m116_2  [key=0, style=solid];
m116_2 -> m116_0  [color=blue, key=0, style=bold];
m116_2 -> m116_3  [color=red, key=0, style=solid];
m116_18 -> m116_0  [color=darkorchid, key=3, label="Property variable long PerformanceDuration", style=bold];
m116_8 -> m116_7  [key=2, style=dotted];
m116_8 -> m116_9  [key=0, style=solid];
m116_7 -> m116_10  [key=0, style=solid];
m116_7 -> m116_5  [color=blue, key=0, style=bold];
m116_10 -> m116_12  [key=2, style=dotted];
m116_10 -> m116_11  [key=0, style=solid];
m116_11 -> m116_7  [color=blue, key=0, style=bold];
m116_11 -> m116_12  [key=0, style=solid];
m116_19 -> m116_1  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m116_19 -> m116_2  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m116_19 -> m116_3  [color=red, key=1, label="HangFire.States.SucceededState", style=dashed];
m116_19 -> m116_6  [color=red, key=1, label="HangFire.States.SucceededState", style=dashed];
m116_12 -> m116_16  [color=green, key=1, label=IAppBuilder, style=dashed];
m116_12 -> m116_22  [color=green, key=1, label=string, style=dashed];
m116_12 -> m116_13  [key=0, style=solid];
m116_12 -> m116_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m116_12 -> m116_14  [key=2, style=dotted];
m116_16 -> m116_17  [color=red, key=0, style=solid];
m116_16 -> m116_20  [color=green, key=2, style=dotted];
m116_16 -> m116_21  [color=green, key=1, label="lambda expression", style=dashed];
m116_16 -> m116_18  [color=red, key=2, style=dotted];
m116_15 -> m116_16  [color=red, key=0, style=solid];
m116_15 -> m116_19  [key=2, style=dotted];
m116_13 -> m116_15  [key=0, style=solid];
m116_13 -> m116_14  [key=0, style=solid];
m116_13 -> m116_11  [color=blue, key=0, style=bold];
m116_14 -> m116_17  [key=0, style=solid];
m116_14 -> m116_18  [key=2, style=dotted];
m116_17 -> m116_12  [color=blue, key=0, style=bold];
m116_17 -> m116_15  [color=blue, key=0, style=bold];
m116_4 -> m116_5  [key=0, style=solid];
m116_4 -> m116_0  [color=blue, key=0, style=bold];
m116_5 -> m116_7  [key=2, style=dotted];
m116_5 -> m116_6  [color=red, key=0, style=solid];
m116_6 -> m116_4  [color=blue, key=0, style=bold];
m116_6 -> m116_7  [color=red, key=0, style=solid];
m116_6 -> m116_8  [color=red, key=2, style=dotted];
m116_6 -> m116_9  [color=red, key=2, style=dotted];
m116_6 -> m116_10  [color=red, key=2, style=dotted];
m116_21 -> m116_22  [color=green, key=0, style=solid];
m116_22 -> m116_23  [color=green, key=0, style=solid];
m116_22 -> m116_24  [color=green, key=2, style=dotted];
m116_23 -> m116_21  [color=blue, key=0, style=bold];
m116_3 -> m116_8  [key=0, style=solid];
m116_3 -> m116_4  [color=red, key=0, style=solid];
m116_9 -> m116_3  [color=blue, key=0, style=bold];
m116_25 -> m116_22  [color=green, key=1, label=string, style=dashed];
m116_26 -> m116_22  [color=green, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m116_27 -> m116_22  [color=green, key=1, label="Hangfire.JobStorage", style=dashed];
m117_0 -> m117_1  [key=0, style=solid];
m117_0 -> m117_4  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m117_0 -> m117_8  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m117_1 -> m117_2  [key=0, style=solid];
m117_1 -> m117_3  [key=0, style=solid];
m117_4 -> m117_5  [key=0, style=solid];
m117_4 -> m117_6  [key=0, style=solid];
m117_4 -> m117_13  [key=2, style=dotted];
m117_8 -> m117_9  [key=0, style=solid];
m117_8 -> m117_17  [key=2, style=dotted];
m117_2 -> m117_10  [key=0, style=solid];
m117_2 -> m117_11  [key=2, style=dotted];
m117_3 -> m117_4  [key=0, style=solid];
m117_3 -> m117_12  [key=2, style=dotted];
m117_5 -> m117_10  [key=0, style=solid];
m117_5 -> m117_14  [key=2, style=dotted];
m117_6 -> m117_7  [color=red, key=0, style=solid];
m117_6 -> m117_15  [key=2, style=dotted];
m117_7 -> m117_8  [color=red, key=0, style=solid];
m117_7 -> m117_16  [color=red, key=2, style=dotted];
m117_7 -> m117_7  [color=red, key=1, label=script, style=dashed];
m117_9 -> m117_10  [key=0, style=solid];
m117_9 -> m117_12  [key=2, style=dotted];
m117_10 -> m117_0  [color=blue, key=0, style=bold];
m117_15 -> m117_23  [key=0, style=solid];
m117_15 -> m117_25  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m117_15 -> m117_6  [color=darkorchid, key=3, label="Parameter variable string resourceName", style=bold];
m117_23 -> m117_24  [key=0, style=solid];
m117_23 -> m117_29  [key=2, style=dotted];
m117_23 -> m117_26  [color=darkseagreen4, key=1, label=stream, style=dashed];
m117_25 -> m117_28  [key=0, style=solid];
m117_25 -> m117_30  [key=2, style=dotted];
m117_25 -> m117_31  [key=2, style=dotted];
m117_24 -> m117_25  [key=0, style=solid];
m117_24 -> m117_26  [key=0, style=solid];
m117_26 -> m117_27  [key=0, style=solid];
m117_26 -> m117_32  [key=2, style=dotted];
m117_27 -> m117_28  [key=0, style=solid];
m117_27 -> m117_33  [key=2, style=dotted];
m117_28 -> m117_15  [color=blue, key=0, style=bold];
m117_13 -> m117_18  [key=0, style=solid];
m117_13 -> m117_0  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m117_18 -> m117_19  [key=0, style=solid];
m117_18 -> m117_21  [key=2, style=dotted];
m117_18 -> m117_22  [key=2, style=dotted];
m117_19 -> m117_20  [key=0, style=solid];
m117_20 -> m117_13  [color=blue, key=0, style=bold];
m118_24 -> m118_25  [color=green, key=0, style=solid];
m118_25 -> m118_26  [color=green, key=0, style=solid];
m118_25 -> m118_16  [color=green, key=2, style=dotted];
m118_26 -> m118_27  [color=green, key=0, style=solid];
m118_26 -> m118_28  [color=green, key=2, style=dotted];
m118_27 -> m118_24  [color=blue, key=0, style=bold];
m118_40 -> m118_41  [key=0, style=solid];
m118_42 -> m118_43  [key=0, style=solid];
m118_42 -> m118_56  [key=2, style=dotted];
m118_42 -> m118_57  [key=2, style=dotted];
m118_42 -> m118_58  [key=2, style=dotted];
m118_42 -> m118_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m118_42 -> m118_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m118_42 -> m118_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m118_42 -> m118_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m118_42 -> m118_45  [color=darkseagreen4, key=1, label=parts, style=dashed];
m118_42 -> m118_46  [color=darkseagreen4, key=1, label=parts, style=dashed];
m118_42 -> m118_50  [color=darkseagreen4, key=1, label=parts, style=dashed];
m118_42 -> m118_51  [color=darkseagreen4, key=1, label=parts, style=dashed];
m118_41 -> m118_42  [key=0, style=solid];
m118_41 -> m118_41  [color=darkorchid, key=3, label="Local variable string canNotParseMessage", style=bold];
m118_41 -> m118_52  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m118_41 -> m118_54  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m118_43 -> m118_44  [key=0, style=solid];
m118_43 -> m118_59  [key=2, style=dotted];
m118_43 -> m118_46  [color=darkseagreen4, key=1, label=builder, style=dashed];
m118_43 -> m118_47  [color=darkseagreen4, key=1, label=builder, style=dashed];
m118_43 -> m118_48  [color=darkseagreen4, key=1, label=builder, style=dashed];
m118_43 -> m118_51  [color=darkseagreen4, key=1, label=builder, style=dashed];
m118_43 -> m118_52  [color=darkseagreen4, key=1, label=builder, style=dashed];
m118_45 -> m118_46  [key=0, style=solid];
m118_45 -> m118_44  [key=0, style=solid];
m118_45 -> m118_60  [key=2, style=dotted];
m118_46 -> m118_47  [key=0, style=solid];
m118_46 -> m118_61  [key=2, style=dotted];
m118_50 -> m118_51  [key=0, style=solid];
m118_50 -> m118_49  [key=0, style=solid];
m118_50 -> m118_60  [key=2, style=dotted];
m118_51 -> m118_52  [key=0, style=solid];
m118_51 -> m118_61  [key=2, style=dotted];
m118_52 -> m118_55  [key=0, style=solid];
m118_52 -> m118_63  [key=2, style=dotted];
m118_54 -> m118_55  [key=0, style=solid];
m118_44 -> m118_45  [key=0, style=solid];
m118_44 -> m118_46  [color=darkseagreen4, key=1, label=alias, style=dashed];
m118_44 -> m118_47  [key=0, style=solid];
m118_47 -> m118_48  [key=0, style=solid];
m118_47 -> m118_49  [key=0, style=solid];
m118_48 -> m118_49  [key=0, style=solid];
m118_48 -> m118_62  [key=2, style=dotted];
m118_49 -> m118_50  [key=0, style=solid];
m118_49 -> m118_51  [color=darkseagreen4, key=1, label=alias, style=dashed];
m118_49 -> m118_52  [key=0, style=solid];
m118_53 -> m118_54  [key=0, style=solid];
m118_55 -> m118_40  [color=blue, key=0, style=bold];
m118_33 -> m118_35  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m118_33 -> m118_36  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m118_33 -> m118_34  [key=0, style=solid];
m118_35 -> m118_36  [key=0, style=solid];
m118_35 -> m118_39  [key=2, style=dotted];
m118_36 -> m118_37  [key=0, style=solid];
m118_36 -> m118_39  [key=2, style=dotted];
m118_34 -> m118_35  [key=0, style=solid];
m118_34 -> m118_38  [key=2, style=dotted];
m118_37 -> m118_33  [color=blue, key=0, style=bold];
m118_20 -> m118_21  [color=green, key=0, style=solid];
m118_21 -> m118_22  [color=green, key=0, style=solid];
m118_21 -> m118_23  [color=green, key=2, style=dotted];
m118_21 -> m118_16  [color=green, key=2, style=dotted];
m118_22 -> m118_20  [color=blue, key=0, style=bold];
m118_2 -> m118_3  [color=green, key=0, style=solid];
m118_2 -> m118_5  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m118_2 -> m118_7  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m118_2 -> m118_8  [color=green, key=1, label=string, style=dashed];
m118_2 -> m118_9  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m118_2 -> m118_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m118_3 -> m118_4  [color=green, key=0, style=solid];
m118_3 -> m118_5  [color=green, key=0, style=solid];
m118_4 -> m118_14  [color=green, key=0, style=solid];
m118_4 -> m118_15  [color=green, key=2, style=dotted];
m118_5 -> m118_6  [color=green, key=0, style=solid];
m118_5 -> m118_7  [color=green, key=0, style=solid];
m118_6 -> m118_14  [color=green, key=0, style=solid];
m118_6 -> m118_15  [color=green, key=2, style=dotted];
m118_7 -> m118_8  [color=green, key=0, style=solid];
m118_8 -> m118_9  [color=green, key=0, style=solid];
m118_9 -> m118_10  [color=green, key=0, style=solid];
m118_9 -> m118_12  [color=green, key=0, style=solid];
m118_10 -> m118_11  [color=green, key=0, style=solid];
m118_10 -> m118_16  [color=green, key=2, style=dotted];
m118_12 -> m118_13  [key=0, style=solid];
m118_12 -> m118_18  [key=2, style=dotted];
m118_11 -> m118_12  [color=green, key=0, style=solid];
m118_11 -> m118_17  [color=green, key=2, style=dotted];
m118_13 -> m118_14  [key=0, style=solid];
m118_13 -> m118_19  [key=2, style=dotted];
m118_14 -> m118_2  [color=blue, key=0, style=bold];
m118_74 -> m118_75  [key=0, style=solid];
m118_64 -> m118_65  [key=0, style=solid];
m118_67 -> m118_68  [key=0, style=solid];
m118_71 -> m118_72  [key=0, style=solid];
m118_65 -> m118_56  [key=2, style=dotted];
m118_65 -> m118_66  [key=0, style=solid];
m118_66 -> m118_64  [color=blue, key=0, style=bold];
m118_69 -> m118_67  [color=blue, key=0, style=bold];
m118_68 -> m118_69  [key=0, style=solid];
m118_68 -> m118_70  [key=2, style=dotted];
m118_73 -> m118_71  [color=blue, key=0, style=bold];
m118_72 -> m118_73  [key=0, style=solid];
m118_75 -> m118_76  [key=0, style=solid];
m118_76 -> m118_74  [color=blue, key=0, style=bold];
m118_29 -> m118_30  [key=0, style=solid];
m118_30 -> m118_31  [key=0, style=solid];
m118_30 -> m118_32  [key=2, style=dotted];
m118_31 -> m118_29  [color=blue, key=0, style=bold];
m118_16 -> m118_77  [key=0, style=solid];
m118_77 -> m118_78  [key=0, style=solid];
m118_77 -> m118_81  [key=2, style=dotted];
m118_77 -> m118_79  [color=darkseagreen4, key=1, label=connection, style=dashed];
m118_78 -> m118_79  [key=0, style=solid];
m118_78 -> m118_82  [key=2, style=dotted];
m118_79 -> m118_80  [key=0, style=solid];
m118_80 -> m118_16  [color=blue, key=0, style=bold];
m118_83 -> m118_7  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_8  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_10  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_21  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_25  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_26  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m118_83 -> m118_77  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m119_89 -> m119_90  [key=0, style=solid];
m119_90 -> m119_91  [key=0, style=solid];
m119_90 -> m119_92  [key=2, style=dotted];
m119_91 -> m119_89  [color=blue, key=0, style=bold];
m119_105 -> m119_106  [key=0, style=solid];
m119_105 -> m119_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_106 -> m119_26  [key=2, style=dotted];
m119_106 -> m119_107  [key=0, style=solid];
m119_106 -> m119_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_107 -> m119_105  [color=blue, key=0, style=bold];
m119_92 -> m119_90  [color=darkorchid, key=3, label="Parameter variable double score", style=bold];
m119_92 -> m119_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_92 -> m119_89  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m119_92 -> m119_93  [key=0, style=solid];
m119_92 -> m119_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_94 -> m119_26  [key=2, style=dotted];
m119_94 -> m119_95  [key=0, style=solid];
m119_94 -> m119_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_93 -> m119_94  [key=0, style=solid];
m119_93 -> m119_93  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
m119_93 -> m119_97  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m119_95 -> m119_92  [color=blue, key=0, style=bold];
m119_71 -> m119_72  [key=0, style=solid];
m119_71 -> m119_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_72 -> m119_26  [key=2, style=dotted];
m119_72 -> m119_73  [key=0, style=solid];
m119_72 -> m119_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_73 -> m119_71  [color=blue, key=0, style=bold];
m119_47 -> m119_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_47 -> m119_48  [key=0, style=solid];
m119_47 -> m119_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_49 -> m119_26  [key=2, style=dotted];
m119_49 -> m119_50  [key=0, style=solid];
m119_49 -> m119_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_48 -> m119_49  [key=0, style=solid];
m119_48 -> m119_48  [color=darkorchid, key=3, label="Local variable string addStateSql", style=bold];
m119_48 -> m119_52  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m119_50 -> m119_47  [color=blue, key=0, style=bold];
m119_0 -> m119_5  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m119_0 -> m119_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m119_0 -> m119_1  [key=0, style=solid];
m119_0 -> m119_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m119_5 -> m119_6  [key=0, style=solid];
m119_6 -> m119_7  [key=0, style=solid];
m119_3 -> m119_5  [key=0, style=solid];
m119_3 -> m119_4  [key=0, style=solid];
m119_1 -> m119_3  [key=0, style=solid];
m119_1 -> m119_2  [key=0, style=solid];
m119_4 -> m119_7  [key=0, style=solid];
m119_4 -> m119_8  [key=2, style=dotted];
m119_2 -> m119_7  [key=0, style=solid];
m119_2 -> m119_8  [key=2, style=dotted];
m119_7 -> m119_0  [color=blue, key=0, style=bold];
m119_117 -> m119_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_117 -> m119_118  [key=0, style=solid];
m119_117 -> m119_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_119 -> m119_26  [key=2, style=dotted];
m119_119 -> m119_120  [key=0, style=solid];
m119_119 -> m119_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_118 -> m119_119  [key=0, style=solid];
m119_118 -> m119_118  [color=darkorchid, key=3, label="Local variable string trimSql", style=bold];
m119_118 -> m119_122  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m119_120 -> m119_117  [color=blue, key=0, style=bold];
m119_26 -> m119_124  [color=green, key=0, style=solid];
m119_26 -> m119_24  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_33  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_40  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_49  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_57  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_66  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_72  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_78  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_84  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_94  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_100  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_106  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_112  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_26 -> m119_119  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m119_124 -> m119_125  [color=green, key=0, style=solid];
m119_124 -> m119_126  [color=green, key=2, style=dotted];
m119_125 -> m119_26  [color=blue, key=0, style=bold];
m119_83 -> m119_84  [key=0, style=solid];
m119_83 -> m119_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_84 -> m119_26  [key=2, style=dotted];
m119_84 -> m119_85  [key=0, style=solid];
m119_84 -> m119_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_85 -> m119_83  [color=blue, key=0, style=bold];
m119_38 -> m119_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_38 -> m119_39  [key=0, style=solid];
m119_38 -> m119_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_40 -> m119_26  [key=2, style=dotted];
m119_40 -> m119_41  [key=0, style=solid];
m119_40 -> m119_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_39 -> m119_40  [key=0, style=solid];
m119_39 -> m119_39  [color=darkorchid, key=3, label="Local variable string addAndSetStateSql", style=bold];
m119_39 -> m119_43  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m119_41 -> m119_38  [color=blue, key=0, style=bold];
m119_77 -> m119_78  [key=0, style=solid];
m119_77 -> m119_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_78 -> m119_26  [key=2, style=dotted];
m119_78 -> m119_79  [key=0, style=solid];
m119_78 -> m119_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_79 -> m119_77  [color=blue, key=0, style=bold];
m119_99 -> m119_100  [key=0, style=solid];
m119_99 -> m119_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_100 -> m119_26  [key=2, style=dotted];
m119_100 -> m119_101  [key=0, style=solid];
m119_100 -> m119_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_101 -> m119_99  [color=blue, key=0, style=bold];
m119_23 -> m119_24  [key=0, style=solid];
m119_23 -> m119_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_24 -> m119_26  [key=2, style=dotted];
m119_24 -> m119_25  [key=0, style=solid];
m119_24 -> m119_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_25 -> m119_23  [color=blue, key=0, style=bold];
m119_111 -> m119_112  [key=0, style=solid];
m119_111 -> m119_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_112 -> m119_26  [key=2, style=dotted];
m119_112 -> m119_113  [key=0, style=solid];
m119_112 -> m119_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_113 -> m119_111  [color=blue, key=0, style=bold];
m119_11 -> m119_12  [key=0, style=solid];
m119_13 -> m119_14  [key=0, style=solid];
m119_13 -> m119_20  [key=2, style=dotted];
m119_14 -> m119_15  [key=0, style=solid];
m119_14 -> m119_16  [key=0, style=solid];
m119_15 -> m119_14  [key=0, style=solid];
m119_15 -> m119_21  [key=2, style=dotted];
m119_12 -> m119_13  [key=0, style=solid];
m119_12 -> m119_18  [key=2, style=dotted];
m119_12 -> m119_19  [key=2, style=dotted];
m119_12 -> m119_16  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m119_16 -> m119_17  [key=0, style=solid];
m119_16 -> m119_22  [key=2, style=dotted];
m119_17 -> m119_11  [color=blue, key=0, style=bold];
m119_121 -> m119_122  [key=0, style=solid];
m119_27 -> m119_28  [key=0, style=solid];
m119_35 -> m119_36  [key=0, style=solid];
m119_42 -> m119_43  [key=0, style=solid];
m119_51 -> m119_52  [key=0, style=solid];
m119_62 -> m119_63  [key=0, style=solid];
m119_62 -> m119_64  [key=2, style=dotted];
m119_61 -> m119_62  [key=0, style=solid];
m119_68 -> m119_69  [key=0, style=solid];
m119_74 -> m119_75  [key=0, style=solid];
m119_80 -> m119_81  [key=0, style=solid];
m119_86 -> m119_87  [key=0, style=solid];
m119_96 -> m119_97  [key=0, style=solid];
m119_102 -> m119_103  [key=0, style=solid];
m119_108 -> m119_109  [key=0, style=solid];
m119_114 -> m119_115  [key=0, style=solid];
m119_28 -> m119_29  [key=0, style=solid];
m119_28 -> m119_30  [key=2, style=dotted];
m119_28 -> m119_31  [key=2, style=dotted];
m119_29 -> m119_27  [color=blue, key=0, style=bold];
m119_36 -> m119_37  [key=0, style=solid];
m119_36 -> m119_31  [key=2, style=dotted];
m119_37 -> m119_35  [color=blue, key=0, style=bold];
m119_43 -> m119_44  [key=0, style=solid];
m119_43 -> m119_45  [key=2, style=dotted];
m119_43 -> m119_46  [key=2, style=dotted];
m119_43 -> m119_31  [key=2, style=dotted];
m119_44 -> m119_42  [color=blue, key=0, style=bold];
m119_52 -> m119_53  [key=0, style=solid];
m119_52 -> m119_45  [key=2, style=dotted];
m119_52 -> m119_46  [key=2, style=dotted];
m119_52 -> m119_31  [key=2, style=dotted];
m119_53 -> m119_51  [color=blue, key=0, style=bold];
m119_63 -> m119_61  [color=blue, key=0, style=bold];
m119_69 -> m119_70  [key=0, style=solid];
m119_69 -> m119_31  [key=2, style=dotted];
m119_70 -> m119_68  [color=blue, key=0, style=bold];
m119_75 -> m119_76  [key=0, style=solid];
m119_75 -> m119_30  [key=2, style=dotted];
m119_75 -> m119_31  [key=2, style=dotted];
m119_76 -> m119_74  [color=blue, key=0, style=bold];
m119_81 -> m119_82  [key=0, style=solid];
m119_81 -> m119_31  [key=2, style=dotted];
m119_82 -> m119_80  [color=blue, key=0, style=bold];
m119_87 -> m119_88  [key=0, style=solid];
m119_87 -> m119_30  [key=2, style=dotted];
m119_87 -> m119_31  [key=2, style=dotted];
m119_88 -> m119_86  [color=blue, key=0, style=bold];
m119_97 -> m119_98  [key=0, style=solid];
m119_97 -> m119_31  [key=2, style=dotted];
m119_98 -> m119_96  [color=blue, key=0, style=bold];
m119_103 -> m119_104  [key=0, style=solid];
m119_103 -> m119_31  [key=2, style=dotted];
m119_104 -> m119_102  [color=blue, key=0, style=bold];
m119_109 -> m119_110  [key=0, style=solid];
m119_109 -> m119_31  [key=2, style=dotted];
m119_110 -> m119_108  [color=blue, key=0, style=bold];
m119_115 -> m119_116  [key=0, style=solid];
m119_115 -> m119_31  [key=2, style=dotted];
m119_116 -> m119_114  [color=blue, key=0, style=bold];
m119_122 -> m119_123  [key=0, style=solid];
m119_122 -> m119_31  [key=2, style=dotted];
m119_123 -> m119_121  [color=blue, key=0, style=bold];
m119_54 -> m119_55  [key=0, style=solid];
m119_54 -> m119_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_54 -> m119_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_55 -> m119_56  [key=0, style=solid];
m119_55 -> m119_59  [key=2, style=dotted];
m119_56 -> m119_57  [key=0, style=solid];
m119_56 -> m119_60  [key=2, style=dotted];
m119_56 -> m119_62  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m119_57 -> m119_26  [key=2, style=dotted];
m119_57 -> m119_58  [key=0, style=solid];
m119_57 -> m119_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_58 -> m119_54  [color=blue, key=0, style=bold];
m119_65 -> m119_66  [key=0, style=solid];
m119_65 -> m119_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_66 -> m119_26  [key=2, style=dotted];
m119_66 -> m119_67  [key=0, style=solid];
m119_66 -> m119_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_67 -> m119_65  [color=blue, key=0, style=bold];
m119_32 -> m119_33  [key=0, style=solid];
m119_32 -> m119_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_33 -> m119_26  [key=2, style=dotted];
m119_33 -> m119_34  [key=0, style=solid];
m119_33 -> m119_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m119_34 -> m119_32  [color=blue, key=0, style=bold];
m119_127 -> m119_124  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_24  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_33  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_49  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_55  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_57  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_66  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_72  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_78  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_84  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_90  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_94  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_100  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_106  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_112  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_127 -> m119_119  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m119_137 -> m119_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_138 -> m119_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_139 -> m119_62  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m119_128 -> m119_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_129 -> m119_28  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m119_130 -> m119_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_131 -> m119_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_132 -> m119_43  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m119_133 -> m119_43  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m119_134 -> m119_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_135 -> m119_52  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m119_136 -> m119_52  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m119_140 -> m119_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_141 -> m119_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_142 -> m119_75  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m119_143 -> m119_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_144 -> m119_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_145 -> m119_87  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m119_146 -> m119_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_147 -> m119_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_148 -> m119_97  [color=darkseagreen4, key=1, label=double, style=dashed];
m119_149 -> m119_97  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m119_150 -> m119_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_151 -> m119_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_152 -> m119_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_153 -> m119_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_154 -> m119_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_155 -> m119_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_156 -> m119_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m119_157 -> m119_122  [color=darkseagreen4, key=1, label=int, style=dashed];
m119_158 -> m119_122  [color=darkseagreen4, key=1, label=int, style=dashed];
m119_159 -> m119_122  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m124_0 -> m124_1  [color=red, key=0, style=solid];
m124_1 -> m124_2  [color=red, key=0, style=solid];
m124_2 -> m124_3  [color=red, key=0, style=solid];
m124_3 -> m124_0  [color=blue, key=0, style=bold];
m124_4 -> m124_1  [color=red, key=1, label="HangFire.Web.StyleSheetHandler", style=dashed];
m124_4 -> m124_2  [color=red, key=1, label="HangFire.Web.StyleSheetHandler", style=dashed];
m125_0 -> m125_1  [key=0, style=solid];
m125_4 -> m125_5  [color=green, key=0, style=solid];
m125_4 -> m125_65  [color=green, key=2, style=dotted];
m125_4 -> m125_9  [color=green, key=1, label=from, style=dashed];
m125_3 -> m125_4  [color=green, key=0, style=solid];
m125_5 -> m125_6  [color=green, key=0, style=solid];
m125_5 -> m125_65  [color=green, key=2, style=dotted];
m125_5 -> m125_9  [color=green, key=1, label=perPage, style=dashed];
m125_9 -> m125_10  [color=green, key=0, style=solid];
m125_9 -> m125_67  [color=green, key=2, style=dotted];
m125_9 -> m125_68  [color=green, key=2, style=dotted];
m125_9 -> m125_69  [color=green, key=2, style=dotted];
m125_9 -> m125_12  [color=green, key=1, label=pager, style=dashed];
m125_9 -> m125_17  [color=green, key=1, label=pager, style=dashed];
m125_9 -> m125_61  [color=green, key=1, label=pager, style=dashed];
m125_6 -> m125_7  [color=green, key=0, style=solid];
m125_8 -> m125_9  [color=green, key=0, style=solid];
m125_8 -> m125_66  [color=green, key=2, style=dotted];
m125_8 -> m125_10  [color=green, key=1, label=monitor, style=dashed];
m125_10 -> m125_11  [key=0, style=solid];
m125_10 -> m125_70  [key=2, style=dotted];
m125_10 -> m125_19  [color=darkseagreen4, key=1, label=succeededJobs, style=dashed];
m125_12 -> m125_13  [color=green, key=0, style=solid];
m125_12 -> m125_14  [color=green, key=0, style=solid];
m125_17 -> m125_18  [color=green, key=0, style=solid];
m125_17 -> m125_72  [key=2, style=dotted];
m125_17 -> m125_73  [key=2, style=dotted];
m125_17 -> m125_74  [key=2, style=dotted];
m125_61 -> m125_62  [key=0, style=solid];
m125_61 -> m125_80  [key=2, style=dotted];
m125_61 -> m125_73  [key=2, style=dotted];
m125_61 -> m125_74  [key=2, style=dotted];
m125_7 -> m125_8  [color=green, key=0, style=solid];
m125_13 -> m125_62  [color=green, key=0, style=solid];
m125_13 -> m125_63  [color=green, key=2, style=dotted];
m125_14 -> m125_15  [color=green, key=0, style=solid];
m125_14 -> m125_63  [color=green, key=2, style=dotted];
m125_15 -> m125_16  [color=green, key=0, style=solid];
m125_15 -> m125_69  [key=2, style=dotted];
m125_15 -> m125_71  [key=2, style=dotted];
m125_16 -> m125_17  [color=green, key=0, style=solid];
m125_16 -> m125_63  [color=green, key=2, style=dotted];
m125_18 -> m125_19  [color=green, key=0, style=solid];
m125_18 -> m125_63  [color=green, key=2, style=dotted];
m125_19 -> m125_20  [key=0, style=solid];
m125_19 -> m125_60  [key=0, style=solid];
m125_19 -> m125_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_26 -> m125_27  [color=green, key=0, style=solid];
m125_26 -> m125_63  [color=green, key=2, style=dotted];
m125_25 -> m125_26  [color=green, key=0, style=solid];
m125_25 -> m125_29  [color=green, key=0, style=solid];
m125_25 -> m125_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_25 -> m125_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_25 -> m125_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_27 -> m125_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_27 -> m125_28  [key=0, style=solid];
m125_27 -> m125_71  [key=2, style=dotted];
m125_27 -> m125_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_29 -> m125_30  [color=green, key=0, style=solid];
m125_29 -> m125_63  [color=green, key=2, style=dotted];
m125_28 -> m125_29  [color=green, key=0, style=solid];
m125_28 -> m125_63  [key=2, style=dotted];
m125_30 -> m125_69  [key=2, style=dotted];
m125_30 -> m125_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_30 -> m125_31  [key=0, style=solid];
m125_30 -> m125_71  [key=2, style=dotted];
m125_30 -> m125_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_35 -> m125_36  [color=green, key=0, style=solid];
m125_35 -> m125_63  [color=green, key=2, style=dotted];
m125_34 -> m125_35  [color=green, key=0, style=solid];
m125_34 -> m125_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_34 -> m125_36  [key=0, style=solid];
m125_34 -> m125_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_36 -> m125_63  [key=2, style=dotted];
m125_36 -> m125_37  [key=0, style=solid];
m125_38 -> m125_59  [color=green, key=0, style=solid];
m125_38 -> m125_63  [color=green, key=2, style=dotted];
m125_37 -> m125_38  [color=green, key=0, style=solid];
m125_37 -> m125_39  [color=green, key=0, style=solid];
m125_37 -> m125_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_37 -> m125_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_59 -> m125_63  [key=2, style=dotted];
m125_59 -> m125_19  [key=0, style=solid];
m125_39 -> m125_40  [color=green, key=0, style=solid];
m125_39 -> m125_63  [color=green, key=2, style=dotted];
m125_40 -> m125_69  [key=2, style=dotted];
m125_40 -> m125_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_40 -> m125_41  [key=0, style=solid];
m125_40 -> m125_71  [key=2, style=dotted];
m125_40 -> m125_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_53 -> m125_54  [color=green, key=0, style=solid];
m125_53 -> m125_63  [color=green, key=2, style=dotted];
m125_52 -> m125_53  [color=green, key=0, style=solid];
m125_52 -> m125_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_52 -> m125_58  [key=0, style=solid];
m125_52 -> m125_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_54 -> m125_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_54 -> m125_55  [key=0, style=solid];
m125_54 -> m125_79  [key=2, style=dotted];
m125_54 -> m125_71  [key=2, style=dotted];
m125_54 -> m125_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_1 -> m125_63  [key=2, style=dotted];
m125_1 -> m125_2  [key=0, style=solid];
m125_2 -> m125_3  [key=0, style=solid];
m125_2 -> m125_64  [key=2, style=dotted];
m125_11 -> m125_12  [key=0, style=solid];
m125_11 -> m125_63  [key=2, style=dotted];
m125_20 -> m125_63  [key=2, style=dotted];
m125_20 -> m125_21  [key=0, style=solid];
m125_21 -> m125_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_21 -> m125_22  [key=0, style=solid];
m125_21 -> m125_71  [key=2, style=dotted];
m125_21 -> m125_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_22 -> m125_63  [key=2, style=dotted];
m125_22 -> m125_23  [key=0, style=solid];
m125_23 -> m125_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_23 -> m125_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_23 -> m125_24  [key=0, style=solid];
m125_23 -> m125_71  [key=2, style=dotted];
m125_24 -> m125_63  [key=2, style=dotted];
m125_24 -> m125_25  [key=0, style=solid];
m125_31 -> m125_63  [key=2, style=dotted];
m125_31 -> m125_32  [key=0, style=solid];
m125_32 -> m125_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_32 -> m125_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_32 -> m125_33  [key=0, style=solid];
m125_32 -> m125_75  [key=2, style=dotted];
m125_32 -> m125_74  [key=2, style=dotted];
m125_33 -> m125_63  [key=2, style=dotted];
m125_33 -> m125_34  [key=0, style=solid];
m125_41 -> m125_63  [key=2, style=dotted];
m125_41 -> m125_42  [key=0, style=solid];
m125_42 -> m125_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_42 -> m125_43  [key=0, style=solid];
m125_42 -> m125_76  [key=2, style=dotted];
m125_42 -> m125_74  [key=2, style=dotted];
m125_42 -> m125_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_43 -> m125_63  [key=2, style=dotted];
m125_43 -> m125_44  [key=0, style=solid];
m125_44 -> m125_63  [key=2, style=dotted];
m125_44 -> m125_45  [key=0, style=solid];
m125_46 -> m125_63  [key=2, style=dotted];
m125_46 -> m125_47  [key=0, style=solid];
m125_47 -> m125_63  [key=2, style=dotted];
m125_47 -> m125_48  [key=0, style=solid];
m125_48 -> m125_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_48 -> m125_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_48 -> m125_49  [key=0, style=solid];
m125_48 -> m125_77  [key=2, style=dotted];
m125_48 -> m125_78  [key=2, style=dotted];
m125_48 -> m125_71  [key=2, style=dotted];
m125_49 -> m125_63  [key=2, style=dotted];
m125_49 -> m125_50  [key=0, style=solid];
m125_50 -> m125_63  [key=2, style=dotted];
m125_50 -> m125_51  [key=0, style=solid];
m125_51 -> m125_63  [key=2, style=dotted];
m125_51 -> m125_52  [key=0, style=solid];
m125_55 -> m125_63  [key=2, style=dotted];
m125_55 -> m125_56  [key=0, style=solid];
m125_56 -> m125_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_56 -> m125_57  [key=0, style=solid];
m125_56 -> m125_71  [key=2, style=dotted];
m125_57 -> m125_63  [key=2, style=dotted];
m125_57 -> m125_58  [key=0, style=solid];
m125_58 -> m125_63  [key=2, style=dotted];
m125_58 -> m125_59  [key=0, style=solid];
m125_60 -> m125_61  [key=0, style=solid];
m125_60 -> m125_63  [key=2, style=dotted];
m125_45 -> m125_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_45 -> m125_46  [key=0, style=solid];
m125_45 -> m125_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_45 -> m125_50  [key=0, style=solid];
m125_45 -> m125_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m125_62 -> m125_0  [color=blue, key=0, style=bold];
m125_81 -> m125_4  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_5  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_9  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_13  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_14  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_16  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_18  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_26  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_29  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_35  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_38  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_39  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_53  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m125_81 -> m125_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m126_8 -> m126_9  [key=0, style=solid];
m126_9 -> m126_10  [key=0, style=solid];
m126_9 -> m126_11  [key=2, style=dotted];
m126_9 -> m126_9  [color=darkorchid, key=3, label="Field variable string StateName", style=bold];
m126_10 -> m126_8  [color=blue, key=0, style=bold];
m126_17 -> m126_18  [key=0, style=solid];
m126_18 -> m126_19  [key=0, style=solid];
m126_18 -> m126_20  [key=2, style=dotted];
m126_18 -> m126_21  [key=2, style=dotted];
m126_19 -> m126_17  [color=blue, key=0, style=bold];
m126_99 -> m126_100  [key=0, style=solid];
m126_99 -> m126_111  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m126_100 -> m126_101  [key=0, style=solid];
m126_100 -> m126_116  [key=2, style=dotted];
m126_100 -> m126_104  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m126_111 -> m126_112  [key=0, style=solid];
m126_111 -> m126_109  [key=0, style=solid];
m126_111 -> m126_121  [key=2, style=dotted];
m126_101 -> m126_102  [key=0, style=solid];
m126_101 -> m126_72  [key=2, style=dotted];
m126_101 -> m126_106  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m126_101 -> m126_128  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m126_101 -> m126_109  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m126_104 -> m126_105  [key=0, style=solid];
m126_104 -> m126_107  [key=0, style=solid];
m126_102 -> m126_103  [key=0, style=solid];
m126_102 -> m126_111  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m126_106 -> m126_104  [key=0, style=solid];
m126_106 -> m126_46  [key=2, style=dotted];
m126_106 -> m126_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_106 -> m126_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_109 -> m126_110  [key=0, style=solid];
m126_109 -> m126_114  [key=0, style=solid];
m126_103 -> m126_104  [key=0, style=solid];
m126_103 -> m126_117  [key=2, style=dotted];
m126_103 -> m126_106  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m126_103 -> m126_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m126_107 -> m126_108  [key=0, style=solid];
m126_107 -> m126_118  [key=2, style=dotted];
m126_105 -> m126_106  [key=0, style=solid];
m126_105 -> m126_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m126_105 -> m126_128  [color=darkseagreen4, key=1, label=name, style=dashed];
m126_108 -> m126_109  [key=0, style=solid];
m126_108 -> m126_113  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m126_108 -> m126_114  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m126_113 -> m126_109  [key=0, style=solid];
m126_113 -> m126_113  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m126_113 -> m126_114  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m126_114 -> m126_115  [key=0, style=solid];
m126_110 -> m126_111  [key=0, style=solid];
m126_110 -> m126_119  [key=2, style=dotted];
m126_110 -> m126_120  [key=2, style=dotted];
m126_110 -> m126_110  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m126_110 -> m126_112  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m126_112 -> m126_113  [key=0, style=solid];
m126_112 -> m126_81  [key=2, style=dotted];
m126_112 -> m126_112  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m126_115 -> m126_99  [color=blue, key=0, style=bold];
m126_96 -> m126_97  [key=0, style=solid];
m126_96 -> m126_25  [key=2, style=dotted];
m126_96 -> m126_45  [key=2, style=dotted];
m126_96 -> m126_98  [key=2, style=dotted];
m126_95 -> m126_96  [key=0, style=solid];
m126_97 -> m126_95  [color=blue, key=0, style=bold];
m126_84 -> m126_85  [key=0, style=solid];
m126_84 -> m126_46  [key=2, style=dotted];
m126_84 -> m126_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_81 -> m126_82  [key=0, style=solid];
m126_81 -> m126_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_81 -> m126_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_81 -> m126_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_81 -> m126_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_82 -> m126_83  [key=0, style=solid];
m126_82 -> m126_16  [key=2, style=dotted];
m126_82 -> m126_84  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_82 -> m126_85  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_83 -> m126_84  [key=0, style=solid];
m126_83 -> m126_46  [key=2, style=dotted];
m126_83 -> m126_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_85 -> m126_86  [key=0, style=solid];
m126_85 -> m126_47  [key=2, style=dotted];
m126_86 -> m126_81  [color=blue, key=0, style=bold];
m126_12 -> m126_13  [key=0, style=solid];
m126_13 -> m126_14  [key=0, style=solid];
m126_13 -> m126_15  [key=2, style=dotted];
m126_13 -> m126_16  [key=2, style=dotted];
m126_14 -> m126_12  [color=blue, key=0, style=bold];
m126_138 -> m126_139  [key=0, style=solid];
m126_138 -> m126_46  [key=2, style=dotted];
m126_138 -> m126_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_134 -> m126_135  [key=0, style=solid];
m126_134 -> m126_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_134 -> m126_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_134 -> m126_137  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_134 -> m126_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_134 -> m126_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_134 -> m126_150  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_135 -> m126_136  [key=0, style=solid];
m126_135 -> m126_16  [key=2, style=dotted];
m126_135 -> m126_137  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_135 -> m126_138  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_135 -> m126_139  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_136 -> m126_137  [key=0, style=solid];
m126_136 -> m126_46  [key=2, style=dotted];
m126_136 -> m126_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_137 -> m126_138  [key=0, style=solid];
m126_137 -> m126_46  [key=2, style=dotted];
m126_137 -> m126_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_139 -> m126_140  [key=0, style=solid];
m126_139 -> m126_47  [key=2, style=dotted];
m126_140 -> m126_134  [color=blue, key=0, style=bold];
m126_56 -> m126_57  [key=0, style=solid];
m126_56 -> m126_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_56 -> m126_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_56 -> m126_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_56 -> m126_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_56 -> m126_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m126_56 -> m126_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_56 -> m126_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_57 -> m126_58  [key=0, style=solid];
m126_57 -> m126_16  [key=2, style=dotted];
m126_57 -> m126_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_57 -> m126_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_57 -> m126_63  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_58 -> m126_59  [key=0, style=solid];
m126_58 -> m126_46  [key=2, style=dotted];
m126_58 -> m126_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_59 -> m126_60  [key=0, style=solid];
m126_59 -> m126_46  [key=2, style=dotted];
m126_59 -> m126_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_60 -> m126_61  [key=0, style=solid];
m126_60 -> m126_63  [key=0, style=solid];
m126_62 -> m126_60  [key=0, style=solid];
m126_62 -> m126_46  [key=2, style=dotted];
m126_62 -> m126_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_63 -> m126_64  [key=0, style=solid];
m126_63 -> m126_47  [key=2, style=dotted];
m126_61 -> m126_62  [key=0, style=solid];
m126_61 -> m126_75  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m126_64 -> m126_56  [color=blue, key=0, style=bold];
m126_78 -> m126_79  [key=0, style=solid];
m126_79 -> m126_80  [key=0, style=solid];
m126_79 -> m126_81  [key=2, style=dotted];
m126_80 -> m126_78  [color=blue, key=0, style=bold];
m126_37 -> m126_38  [key=0, style=solid];
m126_37 -> m126_46  [key=2, style=dotted];
m126_37 -> m126_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_28 -> m126_29  [key=0, style=solid];
m126_28 -> m126_30  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m126_28 -> m126_31  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m126_28 -> m126_32  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m126_28 -> m126_33  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m126_28 -> m126_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m126_28 -> m126_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m126_28 -> m126_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m126_28 -> m126_37  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m126_28 -> m126_53  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m126_29 -> m126_30  [key=0, style=solid];
m126_29 -> m126_41  [key=2, style=dotted];
m126_29 -> m126_42  [key=2, style=dotted];
m126_29 -> m126_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m126_29 -> m126_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m126_29 -> m126_37  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m126_29 -> m126_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m126_29 -> m126_39  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m126_30 -> m126_31  [key=0, style=solid];
m126_30 -> m126_43  [key=2, style=dotted];
m126_31 -> m126_32  [key=0, style=solid];
m126_31 -> m126_43  [key=2, style=dotted];
m126_32 -> m126_33  [key=0, style=solid];
m126_32 -> m126_43  [key=2, style=dotted];
m126_33 -> m126_34  [key=0, style=solid];
m126_33 -> m126_44  [key=2, style=dotted];
m126_33 -> m126_43  [key=2, style=dotted];
m126_34 -> m126_35  [key=0, style=solid];
m126_34 -> m126_45  [key=2, style=dotted];
m126_34 -> m126_43  [key=2, style=dotted];
m126_36 -> m126_37  [key=0, style=solid];
m126_36 -> m126_46  [key=2, style=dotted];
m126_36 -> m126_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m126_36 -> m126_9  [color=darkorchid, key=3, label="Property variable string StateName", style=bold];
m126_39 -> m126_40  [key=0, style=solid];
m126_35 -> m126_36  [key=0, style=solid];
m126_35 -> m126_16  [key=2, style=dotted];
m126_35 -> m126_37  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_35 -> m126_38  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m126_38 -> m126_39  [key=0, style=solid];
m126_38 -> m126_47  [key=2, style=dotted];
m126_40 -> m126_28  [color=blue, key=0, style=bold];
m126_149 -> m126_150  [key=0, style=solid];
m126_49 -> m126_50  [key=0, style=solid];
m126_49 -> m126_25  [key=2, style=dotted];
m126_49 -> m126_51  [key=2, style=dotted];
m126_53 -> m126_54  [key=0, style=solid];
m126_53 -> m126_25  [key=2, style=dotted];
m126_53 -> m126_55  [key=2, style=dotted];
m126_48 -> m126_49  [key=0, style=solid];
m126_52 -> m126_53  [key=0, style=solid];
m126_50 -> m126_48  [color=blue, key=0, style=bold];
m126_54 -> m126_52  [color=blue, key=0, style=bold];
m126_66 -> m126_67  [key=0, style=solid];
m126_66 -> m126_68  [key=2, style=dotted];
m126_70 -> m126_71  [key=0, style=solid];
m126_70 -> m126_25  [key=2, style=dotted];
m126_70 -> m126_72  [key=2, style=dotted];
m126_70 -> m126_73  [key=2, style=dotted];
m126_70 -> m126_45  [key=2, style=dotted];
m126_70 -> m126_51  [key=2, style=dotted];
m126_75 -> m126_76  [key=0, style=solid];
m126_75 -> m126_25  [key=2, style=dotted];
m126_75 -> m126_77  [key=2, style=dotted];
m126_65 -> m126_66  [key=0, style=solid];
m126_69 -> m126_70  [key=0, style=solid];
m126_74 -> m126_75  [key=0, style=solid];
m126_67 -> m126_65  [color=blue, key=0, style=bold];
m126_71 -> m126_69  [color=blue, key=0, style=bold];
m126_76 -> m126_74  [color=blue, key=0, style=bold];
m126_88 -> m126_89  [key=0, style=solid];
m126_88 -> m126_90  [key=2, style=dotted];
m126_92 -> m126_93  [key=0, style=solid];
m126_92 -> m126_25  [key=2, style=dotted];
m126_92 -> m126_94  [key=2, style=dotted];
m126_87 -> m126_88  [key=0, style=solid];
m126_91 -> m126_92  [key=0, style=solid];
m126_89 -> m126_87  [color=blue, key=0, style=bold];
m126_93 -> m126_91  [color=blue, key=0, style=bold];
m126_128 -> m126_129  [key=0, style=solid];
m126_128 -> m126_130  [key=2, style=dotted];
m126_128 -> m126_131  [key=2, style=dotted];
m126_128 -> m126_132  [key=2, style=dotted];
m126_128 -> m126_133  [key=2, style=dotted];
m126_123 -> m126_124  [key=0, style=solid];
m126_123 -> m126_125  [key=2, style=dotted];
m126_123 -> m126_126  [key=2, style=dotted];
m126_122 -> m126_123  [key=0, style=solid];
m126_127 -> m126_128  [key=0, style=solid];
m126_124 -> m126_122  [color=blue, key=0, style=bold];
m126_129 -> m126_127  [color=blue, key=0, style=bold];
m126_142 -> m126_143  [key=0, style=solid];
m126_142 -> m126_25  [key=2, style=dotted];
m126_142 -> m126_144  [key=2, style=dotted];
m126_146 -> m126_147  [key=0, style=solid];
m126_146 -> m126_25  [key=2, style=dotted];
m126_146 -> m126_148  [key=2, style=dotted];
m126_150 -> m126_151  [key=0, style=solid];
m126_150 -> m126_25  [key=2, style=dotted];
m126_150 -> m126_148  [key=2, style=dotted];
m126_141 -> m126_142  [key=0, style=solid];
m126_145 -> m126_146  [key=0, style=solid];
m126_143 -> m126_141  [color=blue, key=0, style=bold];
m126_147 -> m126_145  [color=blue, key=0, style=bold];
m126_151 -> m126_149  [color=blue, key=0, style=bold];
m126_22 -> m126_23  [key=0, style=solid];
m126_22 -> m126_9  [color=darkorchid, key=3, label="Property variable string Name", style=bold];
m126_23 -> m126_24  [key=0, style=solid];
m126_23 -> m126_25  [key=2, style=dotted];
m126_23 -> m126_26  [key=2, style=dotted];
m126_23 -> m126_27  [key=2, style=dotted];
m126_23 -> m126_23  [color=darkorchid, key=3, label="Property variable bool IgnoreJobLoadException", style=bold];
m126_24 -> m126_22  [color=blue, key=0, style=bold];
m126_0 -> m126_1  [key=0, style=solid];
m126_0 -> m126_2  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m126_0 -> m126_3  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m126_0 -> m126_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m126_1 -> m126_2  [key=0, style=solid];
m126_2 -> m126_3  [key=0, style=solid];
m126_2 -> m126_6  [key=2, style=dotted];
m126_3 -> m126_4  [key=0, style=solid];
m126_3 -> m126_7  [key=2, style=dotted];
m126_4 -> m126_5  [key=0, style=solid];
m126_5 -> m126_0  [color=blue, key=0, style=bold];
m126_152 -> m126_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_2  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_13  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_18  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_35  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_57  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_79  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_96  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_100  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_152 -> m126_112  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m126_153 -> m126_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m126_154 -> m126_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m126_154 -> m126_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m126_155 -> m126_53  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m126_156 -> m126_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_156 -> m126_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_156 -> m126_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_157 -> m126_70  [color=darkseagreen4, key=1, label=int, style=dashed];
m126_158 -> m126_75  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m126_159 -> m126_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_159 -> m126_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_160 -> m126_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m126_160 -> m126_128  [color=darkseagreen4, key=1, label=name, style=dashed];
m126_161 -> m126_128  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m126_162 -> m126_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_163 -> m126_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_163 -> m126_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m126_163 -> m126_150  [color=darkseagreen4, key=1, label=string, style=dashed];
m127_0 -> m127_1  [key=0, style=solid];
m127_1 -> m127_2  [key=0, style=solid];
m127_1 -> m127_3  [key=2, style=dotted];
m127_2 -> m127_0  [color=blue, key=0, style=bold];
m127_4 -> m127_5  [key=0, style=solid];
m127_4 -> m127_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m127_4 -> m127_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m127_4 -> m127_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m127_4 -> m127_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m127_4 -> m127_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m127_4 -> m127_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m127_4 -> m127_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m127_5 -> m127_6  [key=0, style=solid];
m127_5 -> m127_7  [color=darkseagreen4, key=1, label=now, style=dashed];
m127_5 -> m127_9  [color=darkseagreen4, key=1, label=now, style=dashed];
m127_5 -> m127_11  [color=red, key=1, label=now, style=dashed];
m127_5 -> m127_13  [color=darkseagreen4, key=1, label=now, style=dashed];
m127_5 -> m127_15  [color=darkseagreen4, key=1, label=now, style=dashed];
m127_5 -> m127_17  [color=darkseagreen4, key=1, label=now, style=dashed];
m127_6 -> m127_7  [key=0, style=solid];
m127_6 -> m127_8  [key=0, style=solid];
m127_6 -> m127_20  [key=2, style=dotted];
m127_8 -> m127_9  [key=0, style=solid];
m127_8 -> m127_10  [key=0, style=solid];
m127_8 -> m127_20  [key=2, style=dotted];
m127_10 -> m127_11  [color=red, key=0, style=solid];
m127_10 -> m127_12  [key=0, style=solid];
m127_10 -> m127_20  [key=2, style=dotted];
m127_12 -> m127_13  [key=0, style=solid];
m127_12 -> m127_14  [key=0, style=solid];
m127_12 -> m127_20  [key=2, style=dotted];
m127_14 -> m127_15  [key=0, style=solid];
m127_14 -> m127_16  [key=0, style=solid];
m127_14 -> m127_20  [key=2, style=dotted];
m127_16 -> m127_17  [key=0, style=solid];
m127_16 -> m127_18  [key=0, style=solid];
m127_16 -> m127_20  [key=2, style=dotted];
m127_18 -> m127_19  [key=0, style=solid];
m127_18 -> m127_26  [key=2, style=dotted];
m127_18 -> m127_27  [key=2, style=dotted];
m127_7 -> m127_19  [key=0, style=solid];
m127_7 -> m127_21  [key=2, style=dotted];
m127_9 -> m127_19  [key=0, style=solid];
m127_9 -> m127_22  [key=2, style=dotted];
m127_11 -> m127_19  [color=red, key=0, style=solid];
m127_11 -> m127_23  [color=red, key=2, style=dotted];
m127_13 -> m127_19  [key=0, style=solid];
m127_13 -> m127_24  [key=2, style=dotted];
m127_15 -> m127_19  [key=0, style=solid];
m127_15 -> m127_3  [key=2, style=dotted];
m127_17 -> m127_19  [key=0, style=solid];
m127_17 -> m127_25  [key=2, style=dotted];
m127_19 -> m127_4  [color=blue, key=0, style=bold];
m129_30 -> m129_31  [key=0, style=solid];
m129_53 -> m129_44  [color=blue, key=0, style=bold];
m129_25 -> m129_20  [color=red, key=0, style=solid];
m129_25 -> m129_32  [color=red, key=2, style=dotted];
m129_25 -> m129_35  [color=red, key=2, style=dotted];
m129_55 -> m129_56  [key=0, style=solid];
m129_58 -> m129_40  [key=2, style=dotted];
m129_58 -> m129_59  [key=0, style=solid];
m129_57 -> m129_22  [key=2, style=dotted];
m129_57 -> m129_58  [key=0, style=solid];
m129_62 -> m129_63  [key=0, style=solid];
m129_62 -> m129_26  [key=2, style=dotted];
m129_56 -> m129_57  [key=0, style=solid];
m129_56 -> m129_39  [key=2, style=dotted];
m129_59 -> m129_41  [key=2, style=dotted];
m129_59 -> m129_60  [key=0, style=solid];
m129_61 -> m129_62  [key=0, style=solid];
m129_61 -> m129_43  [key=2, style=dotted];
m129_60 -> m129_42  [key=2, style=dotted];
m129_60 -> m129_61  [key=0, style=solid];
m129_63 -> m129_55  [color=blue, key=0, style=bold];
m129_37 -> m129_38  [key=0, style=solid];
m129_37 -> m129_26  [key=2, style=dotted];
m129_38 -> m129_39  [key=0, style=solid];
m129_38 -> m129_30  [color=blue, key=0, style=bold];
m129_39 -> m129_37  [color=blue, key=0, style=bold];
m129_76 -> m129_77  [key=0, style=solid];
m129_79 -> m129_40  [key=2, style=dotted];
m129_79 -> m129_80  [key=0, style=solid];
m129_78 -> m129_22  [key=2, style=dotted];
m129_78 -> m129_79  [key=0, style=solid];
m129_83 -> m129_84  [key=0, style=solid];
m129_83 -> m129_26  [key=2, style=dotted];
m129_77 -> m129_78  [key=0, style=solid];
m129_77 -> m129_39  [key=2, style=dotted];
m129_80 -> m129_41  [key=2, style=dotted];
m129_80 -> m129_81  [key=0, style=solid];
m129_82 -> m129_83  [key=0, style=solid];
m129_82 -> m129_43  [key=2, style=dotted];
m129_81 -> m129_42  [key=2, style=dotted];
m129_81 -> m129_82  [key=0, style=solid];
m129_84 -> m129_76  [color=blue, key=0, style=bold];
m129_64 -> m129_65  [key=0, style=solid];
m129_32 -> m129_33  [color=green, key=0, style=solid];
m129_32 -> m129_22  [key=2, style=dotted];
m129_41 -> m129_42  [key=0, style=solid];
m129_41 -> m129_53  [key=2, style=dotted];
m129_41 -> m129_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m129_34 -> m129_40  [key=0, style=solid];
m129_34 -> m129_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m129_34 -> m129_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m129_34 -> m129_49  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m129_34 -> m129_50  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m129_34 -> m129_17  [color=darkorchid, key=3, label="Parameter variable Hangfire.Storage.IStorageConnection connection", style=bold];
m129_34 -> m129_20  [color=darkorchid, key=3, label="Parameter variable string recurringJobId", style=bold];
m129_34 -> m129_21  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<string, string> recurringJob", style=bold];
m129_34 -> m129_35  [key=0, style=solid];
m129_34 -> m129_41  [key=2, style=dotted];
m129_40 -> m129_41  [key=0, style=solid];
m129_40 -> m129_52  [key=2, style=dotted];
m129_42 -> m129_43  [key=0, style=solid];
m129_45 -> m129_46  [key=0, style=solid];
m129_45 -> m129_56  [key=2, style=dotted];
m129_45 -> m129_57  [key=2, style=dotted];
m129_45 -> m129_39  [key=2, style=dotted];
m129_49 -> m129_50  [key=0, style=solid];
m129_49 -> m129_32  [key=2, style=dotted];
m129_49 -> m129_62  [key=2, style=dotted];
m129_49 -> m129_63  [key=2, style=dotted];
m129_49 -> m129_64  [key=2, style=dotted];
m129_49 -> m129_42  [key=2, style=dotted];
m129_50 -> m129_51  [key=0, style=solid];
m129_50 -> m129_32  [key=2, style=dotted];
m129_50 -> m129_62  [key=2, style=dotted];
m129_50 -> m129_63  [key=2, style=dotted];
m129_50 -> m129_64  [key=2, style=dotted];
m129_50 -> m129_43  [key=2, style=dotted];
m129_48 -> m129_49  [key=0, style=solid];
m129_48 -> m129_61  [key=2, style=dotted];
m129_48 -> m129_41  [key=2, style=dotted];
m129_43 -> m129_44  [key=0, style=solid];
m129_43 -> m129_54  [key=2, style=dotted];
m129_44 -> m129_45  [key=0, style=solid];
m129_44 -> m129_55  [key=2, style=dotted];
m129_44 -> m129_46  [color=darkseagreen4, key=1, label=instant, style=dashed];
m129_44 -> m129_49  [color=darkseagreen4, key=1, label=instant, style=dashed];
m129_44 -> m129_50  [color=darkseagreen4, key=1, label=instant, style=dashed];
m129_46 -> m129_47  [key=0, style=solid];
m129_46 -> m129_50  [key=0, style=solid];
m129_46 -> m129_58  [key=2, style=dotted];
m129_46 -> m129_59  [key=2, style=dotted];
m129_46 -> m129_22  [key=2, style=dotted];
m129_47 -> m129_48  [key=0, style=solid];
m129_47 -> m129_60  [key=2, style=dotted];
m129_47 -> m129_40  [key=2, style=dotted];
m129_51 -> m129_34  [color=blue, key=0, style=bold];
m129_51 -> m129_52  [key=0, style=solid];
m129_51 -> m129_54  [key=2, style=dotted];
m129_15 -> m129_16  [key=0, style=solid];
m129_15 -> m129_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m129_16 -> m129_17  [key=0, style=solid];
m129_16 -> m129_28  [key=2, style=dotted];
m129_26 -> m129_27  [key=0, style=solid];
m129_26 -> m129_36  [key=2, style=dotted];
m129_17 -> m129_18  [key=0, style=solid];
m129_17 -> m129_29  [key=2, style=dotted];
m129_17 -> m129_19  [color=darkseagreen4, key=1, label=connection, style=dashed];
m129_17 -> m129_21  [color=darkseagreen4, key=1, label=connection, style=dashed];
m129_17 -> m129_23  [color=darkseagreen4, key=1, label=connection, style=dashed];
m129_18 -> m129_19  [key=0, style=solid];
m129_18 -> m129_30  [key=2, style=dotted];
m129_19 -> m129_20  [key=0, style=solid];
m129_19 -> m129_31  [key=2, style=dotted];
m129_21 -> m129_22  [key=0, style=solid];
m129_21 -> m129_32  [key=2, style=dotted];
m129_21 -> m129_33  [key=2, style=dotted];
m129_21 -> m129_23  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m129_23 -> m129_24  [key=0, style=solid];
m129_23 -> m129_20  [key=0, style=solid];
m129_23 -> m129_34  [key=2, style=dotted];
m129_23 -> m129_25  [key=2, style=dotted];
m129_20 -> m129_21  [key=0, style=solid];
m129_20 -> m129_26  [key=0, style=solid];
m129_20 -> m129_23  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m129_20 -> m129_25  [color=red, key=1, label=recurringJobId, style=dashed];
m129_22 -> m129_23  [key=0, style=solid];
m129_22 -> m129_20  [key=0, style=solid];
m129_22 -> m129_31  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m129_22 -> m129_45  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m129_22 -> m129_56  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m129_22 -> m129_65  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m129_22 -> m129_77  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m129_22 -> m129_86  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m129_24 -> m129_25  [color=red, key=0, style=solid];
m129_24 -> m129_22  [color=blue, key=0, style=bold];
m129_27 -> m129_15  [color=blue, key=0, style=bold];
m129_27 -> m129_28  [key=0, style=solid];
m129_27 -> m129_29  [key=2, style=dotted];
m129_35 -> m129_36  [key=0, style=solid];
m129_35 -> m129_42  [key=2, style=dotted];
m129_9 -> m129_10  [color=green, key=0, style=solid];
m129_10 -> m129_11  [color=green, key=0, style=solid];
m129_10 -> m129_13  [color=green, key=2, style=dotted];
m129_11 -> m129_12  [key=0, style=solid];
m129_12 -> m129_9  [color=blue, key=0, style=bold];
m129_12 -> m129_13  [key=0, style=solid];
m129_85 -> m129_86  [key=0, style=solid];
m129_88 -> m129_40  [key=2, style=dotted];
m129_88 -> m129_89  [key=0, style=solid];
m129_87 -> m129_22  [key=2, style=dotted];
m129_87 -> m129_88  [key=0, style=solid];
m129_92 -> m129_93  [key=0, style=solid];
m129_92 -> m129_26  [key=2, style=dotted];
m129_86 -> m129_87  [key=0, style=solid];
m129_86 -> m129_39  [key=2, style=dotted];
m129_89 -> m129_41  [key=2, style=dotted];
m129_89 -> m129_90  [key=0, style=solid];
m129_91 -> m129_92  [key=0, style=solid];
m129_91 -> m129_43  [key=2, style=dotted];
m129_90 -> m129_42  [key=2, style=dotted];
m129_90 -> m129_91  [key=0, style=solid];
m129_93 -> m129_85  [color=blue, key=0, style=bold];
m129_28 -> m129_26  [color=blue, key=0, style=bold];
m129_13 -> m129_0  [color=blue, key=0, style=bold];
m129_67 -> m129_40  [key=2, style=dotted];
m129_67 -> m129_68  [key=0, style=solid];
m129_66 -> m129_22  [key=2, style=dotted];
m129_66 -> m129_67  [key=0, style=solid];
m129_74 -> m129_75  [key=0, style=solid];
m129_74 -> m129_26  [key=2, style=dotted];
m129_65 -> m129_66  [key=0, style=solid];
m129_65 -> m129_39  [key=2, style=dotted];
m129_65 -> m129_9  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_65 -> m129_10  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_65 -> m129_11  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_65 -> m129_12  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_65 -> m129_16  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_65 -> m129_17  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_65 -> m129_23  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_65 -> m129_26  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_65 -> m129_44  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_65 -> m129_48  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m129_68 -> m129_41  [key=2, style=dotted];
m129_68 -> m129_69  [key=0, style=solid];
m129_69 -> m129_41  [key=2, style=dotted];
m129_69 -> m129_70  [key=0, style=solid];
m129_73 -> m129_74  [key=0, style=solid];
m129_73 -> m129_43  [key=2, style=dotted];
m129_70 -> m129_42  [key=2, style=dotted];
m129_70 -> m129_71  [key=0, style=solid];
m129_72 -> m129_42  [key=2, style=dotted];
m129_72 -> m129_73  [key=0, style=solid];
m129_71 -> m129_43  [key=2, style=dotted];
m129_71 -> m129_72  [key=0, style=solid];
m129_75 -> m129_64  [color=blue, key=0, style=bold];
m129_0 -> m129_1  [key=0, style=solid];
m129_0 -> m129_3  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m129_0 -> m129_5  [color=darkseagreen4, key=1, label="Hangfire.Server.IScheduleInstantFactory", style=dashed];
m129_0 -> m129_7  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m129_0 -> m129_9  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m129_0 -> m129_10  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m129_0 -> m129_11  [color=darkseagreen4, key=1, label="Hangfire.Server.IScheduleInstantFactory", style=dashed];
m129_0 -> m129_12  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m129_1 -> m129_2  [key=0, style=solid];
m129_1 -> m129_3  [key=0, style=solid];
m129_3 -> m129_4  [key=0, style=solid];
m129_3 -> m129_5  [key=0, style=solid];
m129_5 -> m129_6  [key=0, style=solid];
m129_5 -> m129_7  [key=0, style=solid];
m129_7 -> m129_8  [key=0, style=solid];
m129_7 -> m129_9  [key=0, style=solid];
m129_2 -> m129_13  [key=0, style=solid];
m129_2 -> m129_14  [key=2, style=dotted];
m129_4 -> m129_13  [key=0, style=solid];
m129_4 -> m129_14  [key=2, style=dotted];
m129_6 -> m129_13  [key=0, style=solid];
m129_6 -> m129_14  [key=2, style=dotted];
m129_8 -> m129_13  [key=0, style=solid];
m129_8 -> m129_14  [key=2, style=dotted];
m129_52 -> m129_53  [key=0, style=solid];
m129_52 -> m129_26  [key=2, style=dotted];
m129_36 -> m129_37  [key=0, style=solid];
m129_36 -> m129_43  [key=2, style=dotted];
m129_31 -> m129_32  [key=0, style=solid];
m129_31 -> m129_39  [key=2, style=dotted];
m129_33 -> m129_34  [color=green, key=0, style=solid];
m129_33 -> m129_40  [color=green, key=2, style=dotted];
m129_94 -> m129_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_37  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_46  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_52  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_57  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_62  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_66  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_74  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_78  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_83  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_87  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m129_94 -> m129_92  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m132_0 -> m132_1  [key=0, style=solid];
m132_1 -> m132_2  [key=0, style=solid];
m132_2 -> m132_0  [color=blue, key=0, style=bold];
m132_3 -> m132_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_0 -> m133_1  [key=0, style=solid];
m133_1 -> m133_2  [key=0, style=solid];
m133_1 -> m133_13  [key=2, style=dotted];
m133_2 -> m133_3  [key=0, style=solid];
m133_2 -> m133_13  [key=2, style=dotted];
m133_3 -> m133_4  [key=0, style=solid];
m133_3 -> m133_11  [key=0, style=solid];
m133_3 -> m133_5  [color=darkseagreen4, key=1, label=count, style=dashed];
m133_3 -> m133_7  [color=darkseagreen4, key=1, label=count, style=dashed];
m133_3 -> m133_9  [color=darkseagreen4, key=1, label=count, style=dashed];
m133_4 -> m133_5  [key=0, style=solid];
m133_4 -> m133_13  [key=2, style=dotted];
m133_11 -> m133_12  [key=0, style=solid];
m133_11 -> m133_13  [key=2, style=dotted];
m133_5 -> m133_6  [key=0, style=solid];
m133_5 -> m133_14  [key=2, style=dotted];
m133_7 -> m133_8  [key=0, style=solid];
m133_7 -> m133_15  [key=2, style=dotted];
m133_7 -> m133_14  [key=2, style=dotted];
m133_9 -> m133_10  [key=0, style=solid];
m133_9 -> m133_14  [key=2, style=dotted];
m133_6 -> m133_7  [key=0, style=solid];
m133_6 -> m133_13  [key=2, style=dotted];
m133_8 -> m133_9  [key=0, style=solid];
m133_8 -> m133_13  [key=2, style=dotted];
m133_10 -> m133_3  [key=0, style=solid];
m133_10 -> m133_13  [key=2, style=dotted];
m133_12 -> m133_0  [color=blue, key=0, style=bold];
m133_16 -> m133_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_16 -> m133_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_16 -> m133_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_16 -> m133_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_16 -> m133_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_16 -> m133_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_16 -> m133_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_16 -> m133_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_16 -> m133_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m133_16 -> m133_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
}
