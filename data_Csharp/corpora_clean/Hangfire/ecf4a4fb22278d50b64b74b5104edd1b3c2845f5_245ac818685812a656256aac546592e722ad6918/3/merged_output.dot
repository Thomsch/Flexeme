digraph  {
d2 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", color=green, community=0, label="1: Layout = new LayoutPage { Title = ''Recurring jobs'' }", span="94-94"];
d61 [label="HangFire.Web.Pages.RecurringJobsPage", span=""];
d1 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\r\n'')", span="78-78"];
d3 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\r\n'')", span="100-100"];
d52 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
d4 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="RecurringJobs.Count == 0", span="105-105"];
d5 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No recurring jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="111-112"];
d6 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="124-126"];
d7 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(Request.LinkTo(''/recurring/trigger''))", span="131-131"];
d8 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Triggering...''''>\r\n                <span class=''''glyphicon glyphicon-play-circle''''></span>\r\n                Trigger now\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="136-143"];
d9 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(Request.LinkTo(''/recurring/remove''))", span="148-148"];
d10 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Removing...''''\r\n                    data-confirm=''''Do you really want to REMOVE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Remove\r\n            </button>\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>Cron</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right min-width''''>Next execution</th>\r\n                    <th class=''''align-right min-width''''>Last execution</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="153-175"];
d11 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label=RecurringJobs, span="180-180"];
d12 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover\''>\r\n                        '' +\r\n''<td>\r\n                            <input type=\''checkbox\'' class=\''js-jobs-list-che'' +\r\n''ckbox\'' name=\''jobs[]\'' value=\'''')", span="186-188"];
d13 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(job.Id)", span="193-193"];
d14 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\'' />\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>'')", span="198-199"];
d15 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(job.Id)", span="204-204"];
d16 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''</td>\r\n                        <td class=\''min-width\''>'')", span="209-209"];
d17 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(CronExpressionDescriptor.ExpressionDescriptor.GetDescription(job.Cron))", span="214-214"];
d18 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''</td>\r\n                        <td>\r\n'')", span="219-219"];
d20 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                                '')", span="230-230"];
d21 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral('' '')", span="232-232"];
d22 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(HtmlHelper.DisplayMethod(job.Job))", span="237-237"];
d23 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\r\n'')", span="242-242"];
d24 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                                <em>'')", span="254-254"];
d25 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(job.LoadException.InnerException.Message)", span="259-259"];
d26 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''</em>\r\n'')", span="264-264"];
d27 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                        </td>\r\n                        <td class=\''align-right min'' +\r\n''-width\''>\r\n'')", span="274-275"];
d29 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                                <span data-moment=\'''')", span="286-286"];
d30 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(JobHelper.ToStringTimestamp(job.NextExecution.Value))", span="291-291"];
d31 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\''>\r\n                                    '')", span="296-296"];
d32 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(job.NextExecution.Value)", span="301-301"];
d33 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\r\n                                </span>\r\n'')", span="306-306"];
d34 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                                <em>N/A</em>\r\n'')", span="318-318"];
d35 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                        </td>\r\n                        <td class=\''align-right min'' +\r\n''-width\''>\r\n'')", span="328-329"];
d37 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                                <a href=\'''')", span="340-340"];
d38 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(Request.LinkTo(''/job/'' + job.LastJobId))", span="345-345"];
d39 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\''>\r\n                                    <span class=\''label label-default label-ho'' +\r\n''ver\'' data-moment=\'''')", span="350-351"];
d40 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(JobHelper.ToStringTimestamp(job.LastExecution.Value))", span="356-356"];
d41 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\'' style=\'''')", span="361-361"];
d42 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.LastJobState) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.LastJobState]) : null)", span="366-366"];
d43 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\''>\r\n                                        '')", span="371-371"];
d44 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Write(job.LastExecution.Value)", span="376-376"];
d45 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''\r\n                                    </span>\r\n                                </'' +\r\n''a>\r\n'')", span="381-382"];
d46 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                                <em>N/A</em>\r\n'')", span="394-394"];
d47 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="404-404"];
d48 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="414-414"];
d49 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="WriteLiteral(''    '')", span="424-424"];
d0 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Entry HangFire.Web.Pages.RecurringJobsPage.Execute()", span="74-74"];
d51 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
d53 [cluster="HttpRequestBase.LinkTo(string)", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
d54 [cluster="HangFire.Web.RazorPage.Write(object)", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
d19 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="job.Job != null", span="224-224"];
d28 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="job.NextExecution != null", span="280-280"];
d36 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="job.LastExecution != null", span="334-334"];
d55 [cluster="Unk.GetDescription", label="Entry Unk.GetDescription", span=""];
d56 [cluster="Unk.Write", label="Entry Unk.Write", span=""];
d57 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
d58 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
d59 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
d60 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d50 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", label="Exit HangFire.Web.Pages.RecurringJobsPage.Execute()", span="74-74"];
m0_5 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m0_6 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="FailedStateHandler.cs", label="0: context.Transaction.RemoveFromSet(''failed'', context.JobId)", span="20-20"];
m0_7 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m0_0 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="FailedStateHandler.cs", label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="23-23"];
m0_1 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", color=green, community=1, file="FailedStateHandler.cs", label="2: Exit HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="23-23"];
m0_2 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="FailedStateHandler.cs", label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="24-24"];
m0_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25"];
m0_3 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="FailedStateHandler.cs", label="Exit HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="24-24"];
m0_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24"];
m1_2 [cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="IPersistentJob.cs", label="Entry HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7"];
m1_3 [cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="IPersistentJob.cs", label="Exit HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7"];
m1_6 [cluster="HangFire.Storage.IPersistentJob.Complete(HangFire.Server.JobPayload)", file="IPersistentJob.cs", label="Entry HangFire.Storage.IPersistentJob.Complete(HangFire.Server.JobPayload)", span="10-10"];
m1_7 [cluster="HangFire.Storage.IPersistentJob.Complete(HangFire.Server.JobPayload)", file="IPersistentJob.cs", label="Exit HangFire.Storage.IPersistentJob.Complete(HangFire.Server.JobPayload)", span="10-10"];
m1_0 [cluster="HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", file="IPersistentJob.cs", label="Entry HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", span="6-6"];
m1_1 [cluster="HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", file="IPersistentJob.cs", label="Exit HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", span="6-6"];
m1_4 [cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="IPersistentJob.cs", label="Entry HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8"];
m1_5 [cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="IPersistentJob.cs", label="Exit HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8"];
m2_0 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="IPersistentSet.cs", label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m2_1 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="IPersistentSet.cs", label="Exit HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m3_62 [cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33"];
m3_57 [cluster="Unk.TryParse", file="IStorageConnection.cs", label="Entry Unk.TryParse", span=""];
m3_63 [cluster="HangFire.Web.RazorPage.Write(object)", file="IStorageConnection.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m3_58 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="IStorageConnection.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m3_68 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="IStorageConnection.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m3_56 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="IStorageConnection.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m3_0 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m3_1 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\n'')", span="51-51"];
m3_2 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62"];
m3_3 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="int from, perPage", span="64-64"];
m3_4 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66"];
m3_5 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67"];
m3_7 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Pager pager = new Pager(from, perPage, monitor.ScheduledCount())\n    {\n        BasePageUrl = Request.LinkTo(''/scheduled'')\n    }", span="70-73"];
m3_6 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="69-69"];
m3_8 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="JobList<ScheduledJobDto> scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="75-75"];
m3_10 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="pager.TotalPageCount == 0", span="86-86"];
m3_17 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="146-146"];
m3_53 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(RenderPartial(new Paginator(pager)))", span="378-378"];
m3_9 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\n'')", span="81-81"];
m3_19 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label=scheduledJobs, span="171-171"];
m3_11 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        There are no scheduled jobs.\n    </div'' +\r\n''>\n'')", span="92-93"];
m3_12 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="105-107"];
m3_13 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(Request.LinkTo(''/scheduled/enqueue''))", span="112-112"];
m3_14 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-play''''></span>\n                Enqueue now\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="117-124"];
m3_15 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(Request.LinkTo(''/scheduled/delete''))", span="129-129"];
m3_16 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="134-141"];
m3_18 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Enqueue</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Scheduled</th>\n                </tr>\n            </thead>\n'')", span="151-166"];
m3_20 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", span="177-177"];
m3_52 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''        </table>\n    </div>\n'')", span="366-366"];
m3_21 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="182-182"];
m3_22 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral('' '')", span="187-187"];
m3_23 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(job.Value.InScheduledState ? ''hover'' : null)", span="192-192"];
m3_24 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\''>\n                    <td>\n'')", span="197-197"];
m3_25 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="job.Value.InScheduledState", span="202-202"];
m3_26 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", span="208-209"];
m3_29 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''                    </td>\n                    <td class=\''min-width\''>\n            '' +\r\n''            <a href=\'''')", span="229-230"];
m3_27 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(job.Key)", span="214-214"];
m3_28 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\'' />\n'')", span="219-219"];
m3_30 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="235-235"];
m3_31 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\''>\n                            '')", span="240-240"];
m3_32 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(HtmlHelper.JobId(job.Key))", span="245-245"];
m3_33 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\n                        </a>\n'')", span="250-250"];
m3_34 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="!job.Value.InScheduledState", span="255-255"];
m3_35 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="261-262"];
m3_36 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''                    </td>\n                    <td class=\''min-width\''>\n            '' +\r\n''            <span data-moment=\'''')", span="272-273"];
m3_37 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(JobHelper.ToTimestamp(job.Value.EnqueueAt))", span="278-278"];
m3_38 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\''>\n                            '')", span="283-283"];
m3_39 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(job.Value.EnqueueAt)", span="288-288"];
m3_40 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\n                        </span>\n                    </td>\n                    <t'' +\r\n''d>\n                        <a class=\''job-method\'' href=\'''')", span="293-294"];
m3_41 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="299-299"];
m3_42 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\''>\n                            '')", span="304-304"];
m3_43 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="309-309"];
m3_44 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\n                        </a>\n                    </td>\n                    <td c'' +\r\n''lass=\''align-right\''>\n'')", span="314-315"];
m3_45 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="job.Value.ScheduledAt != null", span="320-320"];
m3_46 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="326-326"];
m3_47 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(JobHelper.ToTimestamp(job.Value.ScheduledAt.Value))", span="331-331"];
m3_48 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\''>\n                                '')", span="336-336"];
m3_49 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Write(job.Value.ScheduledAt)", span="341-341"];
m3_50 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''\n                            </span>\n'')", span="346-346"];
m3_51 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="356-356"];
m3_54 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="IStorageConnection.cs", label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m3_64 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="IStorageConnection.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m3_66 [cluster="Unk.Write", file="IStorageConnection.cs", label="Entry Unk.Write", span=""];
m3_61 [cluster="HttpRequestBase.LinkTo(string)", file="IStorageConnection.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m3_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="IStorageConnection.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m3_70 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="IStorageConnection.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m3_60 [cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="IStorageConnection.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38"];
m3_65 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="IStorageConnection.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m3_59 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="IStorageConnection.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m3_67 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="IStorageConnection.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m3_71 [file="IStorageConnection.cs", label="HangFire.Web.Pages.ScheduledJobsPage", span=""];
m4_50 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="56-56"];
m4_51 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="IWriteOnlyPersistentCounter.cs", label="var server = CreateHeartbeat()", span="58-58"];
m4_52 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="IWriteOnlyPersistentCounter.cs", label="server.Execute(_cts.Token)", span="60-60"];
m4_53 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="IWriteOnlyPersistentCounter.cs", label="_connection.Verify(x => x.Heartbeat(ServerId))", span="62-62"];
m4_54 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="56-56"];
m4_22 [cluster="Unk.Equal", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Equal", span=""];
m4_8 [cluster="Mock<IStorageConnection>.cstr", file="IWriteOnlyPersistentCounter.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m4_34 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", span="45-45"];
m4_35 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="IWriteOnlyPersistentCounter.cs", label="var server = CreateHeartbeat()", span="47-47"];
m4_36 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="IWriteOnlyPersistentCounter.cs", label="server.Execute(_cts.Token)", span="49-49"];
m4_37 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="IWriteOnlyPersistentCounter.cs", label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="51-51"];
m4_38 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="IWriteOnlyPersistentCounter.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="52-52"];
m4_39 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", span="45-45"];
m4_10 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="IWriteOnlyPersistentCounter.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m4_21 [cluster="Unk.>", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.>", span=""];
m4_16 [cluster="Unk.GetConnection", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.GetConnection", span=""];
m4_40 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="65-65"];
m4_59 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="IWriteOnlyPersistentCounter.cs", label="return new ServerHeartbeat(_storage.Object, ServerId);", span="67-67"];
m4_60 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="65-65"];
m4_58 [cluster="Unk.Heartbeat", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Heartbeat", span=""];
m4_11 [cluster="Unk.Setup", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Setup", span=""];
m4_49 [cluster="Unk.Dispose", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Dispose", span=""];
m4_9 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="IWriteOnlyPersistentCounter.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m4_55 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="62-62"];
m4_13 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="23-23"];
m4_14 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.GetConnection()", span="23-23"];
m4_15 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="23-23"];
m4_23 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="30-30"];
m4_24 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="new ServerHeartbeat(null, ServerId)", span="30-30"];
m4_25 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="30-30"];
m4_31 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="39-39"];
m4_32 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="new ServerHeartbeat(_storage.Object, null)", span="39-39"];
m4_33 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="39-39"];
m4_43 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="51-51"];
m4_46 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="52-52"];
m4_44 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.GetConnection()", span="51-51"];
m4_45 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="51-51"];
m4_47 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.Dispose()", span="52-52"];
m4_48 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="52-52"];
m4_56 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.Heartbeat(ServerId)", span="62-62"];
m4_57 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="62-62"];
m4_17 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m4_18 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(null, ServerId))", span="29-30"];
m4_19 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="32-32"];
m4_20 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m4_41 [cluster="Unk.Execute", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Execute", span=""];
m4_12 [cluster="Unk.Returns", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Returns", span=""];
m4_26 [cluster="ServerHeartbeat.cstr", file="IWriteOnlyPersistentCounter.cs", label="Entry ServerHeartbeat.cstr", span=""];
m4_42 [cluster="Unk.Verify", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Verify", span=""];
m4_7 [cluster="Mock<JobStorage>.cstr", file="IWriteOnlyPersistentCounter.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m4_0 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16"];
m4_1 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="IWriteOnlyPersistentCounter.cs", label="_storage = new Mock<JobStorage>()", span="18-18"];
m4_2 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="IWriteOnlyPersistentCounter.cs", label="_connection = new Mock<IStorageConnection>()", span="19-19"];
m4_3 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="IWriteOnlyPersistentCounter.cs", label="_cts = new CancellationTokenSource()", span="20-20"];
m4_4 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="IWriteOnlyPersistentCounter.cs", label="_cts.Cancel()", span="21-21"];
m4_5 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="IWriteOnlyPersistentCounter.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="23-23"];
m4_6 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16"];
m4_27 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36"];
m4_28 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="IWriteOnlyPersistentCounter.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(_storage.Object, null))", span="38-39"];
m4_29 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="41-41"];
m4_30 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36"];
m4_61 [file="IWriteOnlyPersistentCounter.cs", label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", span=""];
m5_0 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m5_1 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m5_2 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m5_3 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m5_6 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m5_7 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m5_4 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m5_5 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m6_0 [cluster="HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", file="IWriteOnlyPersistentList.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", span="4-4"];
m6_1 [cluster="HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", file="IWriteOnlyPersistentList.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", span="4-4"];
m6_2 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="IWriteOnlyPersistentList.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5"];
m6_3 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="IWriteOnlyPersistentList.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5"];
m6_4 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="IWriteOnlyPersistentList.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7"];
m6_5 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="IWriteOnlyPersistentList.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7"];
m7_0 [cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="IWriteOnlyPersistentQueue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4"];
m7_1 [cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="IWriteOnlyPersistentQueue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4"];
m8_2 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="IWriteOnlyPersistentSet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m8_3 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="IWriteOnlyPersistentSet.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m8_0 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="IWriteOnlyPersistentSet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4"];
m8_1 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="IWriteOnlyPersistentSet.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4"];
m8_4 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="IWriteOnlyPersistentSet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m8_5 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="IWriteOnlyPersistentSet.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m9_4 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="IWriteOnlyPersistentValue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="9-9"];
m9_5 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="IWriteOnlyPersistentValue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="9-9"];
m9_2 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="IWriteOnlyPersistentValue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="7-7"];
m9_3 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="IWriteOnlyPersistentValue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="7-7"];
m9_0 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="IWriteOnlyPersistentValue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="6-6"];
m9_1 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="IWriteOnlyPersistentValue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="6-6"];
m10_0 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m10_1 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m12_30 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m12_33 [cluster="HangFire.Storage.IMonitoringApi.Servers()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25"];
m12_0 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m12_1 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n'')", span="61-61"];
m12_2 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Layout = new LayoutPage { Title = ''Servers'' }", span="74-74"];
m12_3 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76"];
m12_4 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="IList<ServerDto> servers = monitor.Servers()", span="77-77"];
m12_5 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n'')", span="83-83"];
m12_6 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="servers.Count == 0", span="88-88"];
m12_9 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label=servers, span="123-123"];
m12_7 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        There are no active servers. Backgr'' +\r\n''ound tasks will not be processed.\n    </div>\n'')", span="94-95"];
m12_8 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(@''    <table class=''''table''''>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Workers</th>\n                <th>Queues</th>\n                <th>Started</th>\n                <th>Heartbeat</th>\n            </tr>\n        </thead>\n        <tbody>\n'')", span="107-118"];
m12_10 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                <tr>\n                    <td>'')", span="129-129"];
m12_28 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''        </tbody>\n    </table>\n'')", span="230-230"];
m12_11 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(server.Name.ToUpperInvariant())", span="134-134"];
m12_13 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(server.WorkersCount)", span="144-144"];
m12_15 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="154-154"];
m12_17 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobHelper.ToTimestamp(server.StartedAt))", span="164-164"];
m12_19 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(server.StartedAt)", span="174-174"];
m12_21 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="server.Heartbeat.HasValue", span="184-184"];
m12_23 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobHelper.ToTimestamp(server.Heartbeat.Value))", span="195-195"];
m12_25 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(server.Heartbeat)", span="205-205"];
m12_12 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</td>\n                    <td>'')", span="139-139"];
m12_14 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</td>\n                    <td>'')", span="149-149"];
m12_16 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</td>\n                    <td data-moment=\'''')", span="159-159"];
m12_18 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>'')", span="169-169"];
m12_20 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</td>\n                    <td>\n'')", span="179-179"];
m12_22 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="190-190"];
m12_27 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="220-220"];
m12_24 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="200-200"];
m12_26 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\n                            </span>\n'')", span="210-210"];
m12_29 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m12_38 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40"];
m12_32 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m12_40 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m12_34 [cluster="string.ToUpperInvariant()", file="JobDetailsPage1.generated.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m12_31 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m12_37 [cluster="Unk.Join", file="JobDetailsPage1.generated.cs", label="Entry Unk.Join", span=""];
m12_39 [cluster="Unk.Write", file="JobDetailsPage1.generated.cs", label="Entry Unk.Write", span=""];
m12_36 [cluster="Unk.Select", file="JobDetailsPage1.generated.cs", label="Entry Unk.Select", span=""];
m12_41 [file="JobDetailsPage1.generated.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m14_56 [cluster="HangFire.Common.Filters.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="JobMethod.cs", label="Entry HangFire.Common.Filters.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m14_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobMethod.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m14_36 [cluster="System.Type.GetMethod(string, System.Type[])", file="JobMethod.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m14_35 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobMethod.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m14_16 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m14_17 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="invocationData == null", span="91-91"];
m14_20 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="invocationData.Method == null", span="96-96"];
m14_21 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="invocationData = new InvocationData\r\n                {\r\n                    Type = invocationData.Type,\r\n                    Method = ''Perform'',\r\n                    ParameterTypes = JobHelper.ToJson(new Type[0])\r\n                }", span="99-104"];
m14_23 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="var type = Type.GetType(invocationData.Type, throwOnError: true, ignoreCase: true)", span="111-111"];
m14_24 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="var parameterTypes = JobHelper.FromJson<Type[]>(invocationData.ParameterTypes)", span="112-112"];
m14_25 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="var method = type.GetMethod(invocationData.Method, parameterTypes)", span="113-113"];
m14_27 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''The type `{0}` does not contain a method with signature `{1}({2})`'',\r\n                        type.FullName,\r\n                        invocationData.Method,\r\n                        String.Join('', '', parameterTypes.Select(x => x.Name))));", span="117-121"];
m14_18 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="throw new ArgumentNullException(''invocationData'');", span="91-91"];
m14_19 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="var oldFormat = false", span="93-93"];
m14_28 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="return new JobMethod(type, method) { OldFormat = oldFormat };", span="124-124"];
m14_22 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="oldFormat = true", span="106-106"];
m14_26 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="method == null", span="115-115"];
m14_29 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label=Exception, span="126-126"];
m14_30 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="throw new JobLoadException(''Could not load the job. See inner exception for the details.'', ex);", span="128-128"];
m14_31 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethod.cs", label="Exit HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m14_39 [cluster="Unk.Join", file="JobMethod.cs", label="Entry Unk.Join", span=""];
m14_14 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JobMethod.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m14_60 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JobMethod.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m14_48 [cluster="HangFire.Common.Filters.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="JobMethod.cs", label="Entry HangFire.Common.Filters.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33"];
m14_59 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="JobMethod.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m14_34 [cluster="System.Type.GetType(string, bool, bool)", file="JobMethod.cs", label="Entry System.Type.GetType(string, bool, bool)", span="0-0"];
m14_0 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="Entry HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48"];
m14_1 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="type == null", span="50-50"];
m14_3 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="method == null", span="51-51"];
m14_5 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="method.DeclaringType == null", span="53-53"];
m14_7 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="!method.DeclaringType.IsAssignableFrom(type)", span="58-58"];
m14_9 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="Type = type", span="64-64"];
m14_10 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="Method = method", span="65-65"];
m14_2 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="throw new ArgumentNullException(''type'');", span="50-50"];
m14_4 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="throw new ArgumentNullException(''method'');", span="51-51"];
m14_6 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="55-55"];
m14_8 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", color=green, community=1, file="JobMethod.cs", label="2: throw new ArgumentException(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'', ''type'');", span="60-61"];
m14_11 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobMethod.cs", label="Exit HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48"];
m14_41 [cluster="HangFire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobMethod.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="49-49"];
m14_49 [cluster="HangFire.Common.JobMethod.GetFilterAttributes(System.Reflection.MemberInfo)", file="JobMethod.cs", label="Entry HangFire.Common.JobMethod.GetFilterAttributes(System.Reflection.MemberInfo)", span="151-151"];
m14_57 [cluster="HangFire.Common.JobMethod.GetFilterAttributes(System.Reflection.MemberInfo)", file="JobMethod.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="153-155"];
m14_58 [cluster="HangFire.Common.JobMethod.GetFilterAttributes(System.Reflection.MemberInfo)", file="JobMethod.cs", label="Exit HangFire.Common.JobMethod.GetFilterAttributes(System.Reflection.MemberInfo)", span="151-151"];
m14_45 [cluster="HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", file="JobMethod.cs", label="Entry HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", span="132-132"];
m14_46 [cluster="HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", file="JobMethod.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="134-136"];
m14_47 [cluster="HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", file="JobMethod.cs", label="Exit HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", span="132-132"];
m14_50 [cluster="HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", file="JobMethod.cs", label="Entry HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", span="139-139"];
m14_51 [cluster="HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", file="JobMethod.cs", label="Method == null", span="141-141"];
m14_53 [cluster="HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", file="JobMethod.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="146-148"];
m14_52 [cluster="HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", file="JobMethod.cs", label="return Enumerable.Empty<JobFilterAttribute>();", span="143-143"];
m14_54 [cluster="HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", file="JobMethod.cs", label="Exit HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", span="139-139"];
m14_37 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobMethod.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m14_40 [cluster="string.Format(string, object, object, object)", file="JobMethod.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m14_13 [cluster="System.NotSupportedException.NotSupportedException(string)", file="JobMethod.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m14_42 [cluster="lambda expression", file="JobMethod.cs", label="Entry lambda expression", span="121-121"];
m14_43 [cluster="lambda expression", file="JobMethod.cs", label="x.Name", span="121-121"];
m14_44 [cluster="lambda expression", file="JobMethod.cs", label="Exit lambda expression", span="121-121"];
m14_38 [cluster="Unk.Select", file="JobMethod.cs", label="Entry Unk.Select", span=""];
m14_33 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobMethod.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m14_15 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JobMethod.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m14_32 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="JobMethod.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m14_55 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobMethod.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m14_61 [file="JobMethod.cs", label="HangFire.Common.JobMethod", span=""];
m15_0 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.Execute()", span="62-62"];
m15_1 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\n'')", span="66-66"];
m15_2 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Layout = new LayoutPage\n        {\n            Title = Queue.ToUpperInvariant(),\n            Subtitle = ''Enqueued jobs'',\n            Breadcrumbs = new Dictionary<string, string>\n                {\n                    { ''Queues'', Request.LinkTo(''/queues'') }\n                }\n        }", span="80-88"];
m15_3 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="int from, perPage", span="90-90"];
m15_4 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="92-92"];
m15_5 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="93-93"];
m15_7 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Pager pager = new Pager(from, perPage, monitor.EnqueuedCount(Queue))\n    {\n        BasePageUrl = Request.LinkTo(''/queues/'' + Queue)\n    }", span="96-99"];
m15_6 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="95-95"];
m15_8 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="JobList<EnqueuedJobDto> enqueuedJobs = monitor\n        .EnqueuedJobs(Queue, pager.FromRecord, pager.RecordsPerPage)", span="101-102"];
m15_10 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="pager.TotalPageCount == 0", span="113-113"];
m15_15 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="155-155"];
m15_47 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(RenderPartial(new Paginator(pager)))", span="368-368"];
m15_9 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\n'')", span="108-108"];
m15_17 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label=enqueuedJobs, span="181-181"];
m15_11 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        The queue is empty.\n    </div>\n'')", span="119-119"];
m15_12 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-default\''\n        '' +\r\n''            data-url=\'''')", span="131-133"];
m15_13 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(Request.LinkTo(''/enqueued/delete''))", span="138-138"];
m15_14 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="143-150"];
m15_16 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th class=''''min-width''''>State</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Enqueued</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="160-176"];
m15_18 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover '')", span="187-187"];
m15_46 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="357-357"];
m15_19 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="192-192"];
m15_20 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\n                        <td>\n                            <input type=\''checkbox'' +\r\n''\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="197-198"];
m15_21 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(job.Key)", span="203-203"];
m15_22 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\'' />\n                        </td>\n                        <td class=\''min-width\''>'' +\r\n''\n                            <a href=\'''')", span="208-209"];
m15_23 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="214-214"];
m15_24 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\n                                '')", span="219-219"];
m15_25 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(HtmlHelper.JobId(job.Key))", span="224-224"];
m15_26 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\n                            </a>\n'')", span="229-229"];
m15_27 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="!job.Value.InEnqueuedState", span="234-234"];
m15_28 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="240-241"];
m15_29 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        <span class=\''label label-default\'' style=\'''')", span="251-252"];
m15_30 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="257-257"];
m15_31 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\n                                '')", span="262-262"];
m15_32 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(job.Value.State)", span="267-267"];
m15_33 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\n                            </span>\n                        </td>\n              '' +\r\n''          <td>\n                            <a class=\''job-method\'' href=\'''')", span="272-273"];
m15_34 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="278-278"];
m15_35 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\n                                '')", span="283-283"];
m15_36 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="288-288"];
m15_37 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\n                            </a>\n                        </td>\n                 '' +\r\n''       <td class=\''align-right\''>\n'')", span="293-294"];
m15_38 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="job.Value.EnqueuedAt.HasValue", span="299-299"];
m15_39 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="305-305"];
m15_44 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                <em>n/a</em>\n'')", span="337-337"];
m15_40 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="310-310"];
m15_41 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\n                                    '')", span="315-315"];
m15_42 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Write(job.Value.EnqueuedAt)", span="320-320"];
m15_43 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\n                                </span>\n'')", span="325-325"];
m15_45 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="347-347"];
m15_48 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="JobMethodTests.cs", label="Exit HangFire.Web.Pages.EnqueuedJobsPage.Execute()", span="62-62"];
m15_65 [cluster="string.Format(string, object)", file="JobMethodTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_58 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", file="JobMethodTests.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", span="29-29"];
m15_56 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="JobMethodTests.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m15_54 [cluster="Unk.TryParse", file="JobMethodTests.cs", label="Entry Unk.TryParse", span=""];
m15_49 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobMethodTests.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m15_51 [cluster="string.ToUpperInvariant()", file="JobMethodTests.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m15_61 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="JobMethodTests.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m15_52 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobMethodTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m15_60 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="JobMethodTests.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m15_64 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobMethodTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m15_57 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="JobMethodTests.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39"];
m15_67 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobMethodTests.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m15_62 [cluster="Unk.Write", file="JobMethodTests.cs", label="Entry Unk.Write", span=""];
m15_63 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobMethodTests.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m15_55 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobMethodTests.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m15_50 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobMethodTests.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m15_53 [cluster="HttpRequestBase.LinkTo(string)", file="JobMethodTests.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m15_66 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="JobMethodTests.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m15_68 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="JobMethodTests.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m15_69 [file="JobMethodTests.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m16_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m16_86 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PerformContext.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90"];
m16_87 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PerformContext.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<OperationCanceledException>()", span="92-92"];
m16_88 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PerformContext.cs", label="var wrapper = CreateWrapper()", span="93-93"];
m16_89 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PerformContext.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="95-95"];
m16_90 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PerformContext.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="97-97"];
m16_91 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PerformContext.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90"];
m16_25 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="PerformContext.cs", label="wrapper.Execute(_cts.Token)", span="45-45"];
m16_15 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="27-27"];
m16_17 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="PerformContext.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m16_18 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", color=green, community=0, file="PerformContext.cs", label="2: var wrapper = CreateWrapper()", span="35-35"];
m16_19 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="PerformContext.cs", label="Assert.Same(_component.Object, wrapper.InnerProcess)", span="37-37"];
m16_22 [cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs", label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69"];
m16_7 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="throw new ArgumentNullException(''jobId'');", span="43-43"];
m16_8 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="jobMethod == null", span="44-44"];
m16_9 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="throw new ArgumentNullException(''jobMethod'');", span="44-44"];
m16_10 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="Connection = connection", span="46-46"];
m16_26 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="PerformContext.cs", label="_component.Verify(x => x.Execute(It.Is<CancellationToken>(y => y == _cts.Token)))", span="47-47"];
m16_12 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="JobMethod = jobMethod", span="48-48"];
m16_0 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="PerformContext.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15"];
m16_1 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="PerformContext.cs", label="_component = new Mock<IServerComponent>()", span="17-17"];
m16_2 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="PerformContext.cs", label="_maxRetryAttempts = 3", span="18-18"];
m16_21 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="PerformContext.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100"];
m16_23 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", color=green, community=0, file="PerformContext.cs", label="2: Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", span="41-41"];
m16_24 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="PerformContext.cs", label="var wrapper = CreateWrapper()", span="43-43"];
m16_76 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="PerformContext.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m16_11 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="JobId = jobId", span="47-47"];
m16_3 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="PerformContext.cs", label="_cts = new CancellationTokenSource()", span="19-19"];
m16_13 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="27-27"];
m16_4 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="PerformContext.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15"];
m16_6 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="PerformContext.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m16_5 [cluster="Mock<IServerComponent>.cstr", file="PerformContext.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m16_14 [cluster="lambda expression", file="PerformContext.cs", label="new AutomaticRetryProcess(null)", span="27-27"];
m16_112 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="PerformContext.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m16_27 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="PerformContext.cs", label="HangFire.Server.Performing.PerformContext", span=""];
m16_103 [cluster="AutomaticRetryProcess.cstr", file="PerformContext.cs", label="Entry AutomaticRetryProcess.cstr", span=""];
m16_53 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PerformContext.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64"];
m16_54 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", color=red, community=0, file="PerformContext.cs", label="1: _component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="66-66"];
m16_55 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PerformContext.cs", label="_maxRetryAttempts = 0", span="67-67"];
m16_56 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PerformContext.cs", label="var wrapper = CreateWrapper()", span="68-68"];
m16_57 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PerformContext.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="70-70"];
m16_58 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PerformContext.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="72-74"];
m16_59 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PerformContext.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64"];
m16_42 [cluster="Unk.Setup", file="PerformContext.cs", label="Entry Unk.Setup", span=""];
m16_43 [cluster="Unk.Exactly", file="PerformContext.cs", label="Entry Unk.Exactly", span=""];
m16_104 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="105-105"];
m16_30 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="47-47"];
m16_31 [cluster="lambda expression", file="PerformContext.cs", label="x.Execute(It.Is<CancellationToken>(y => y == _cts.Token))", span="47-47"];
m16_32 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="47-47"];
m16_33 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="47-47"];
m16_34 [cluster="lambda expression", file="PerformContext.cs", label="y == _cts.Token", span="47-47"];
m16_35 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="47-47"];
m16_44 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="53-53"];
m16_48 [cluster="lambda expression", file="PerformContext.cs", label="wrapper.Execute(_cts.Token)", span="56-56"];
m16_47 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="56-56"];
m16_50 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="58-59"];
m16_45 [cluster="lambda expression", file="PerformContext.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="53-53"];
m16_46 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="53-53"];
m16_49 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="56-56"];
m16_51 [cluster="lambda expression", file="PerformContext.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="58-59"];
m16_52 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="58-59"];
m16_60 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="66-66"];
m16_64 [cluster="lambda expression", file="PerformContext.cs", label="wrapper.Execute(_cts.Token)", span="70-70"];
m16_63 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="70-70"];
m16_66 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="72-73"];
m16_61 [cluster="lambda expression", color=red, community=0, file="PerformContext.cs", label="2: x.Execute(It.IsAny<CancellationToken>())", span="66-66"];
m16_62 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="66-66"];
m16_65 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="70-70"];
m16_67 [cluster="lambda expression", file="PerformContext.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="72-73"];
m16_68 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="72-73"];
m16_81 [cluster="lambda expression", file="PerformContext.cs", label="wrapper.Execute(_cts.Token)", span="84-84"];
m16_77 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="81-81"];
m16_80 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="84-84"];
m16_83 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="86-86"];
m16_78 [cluster="lambda expression", file="PerformContext.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="81-81"];
m16_79 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="81-81"];
m16_82 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="84-84"];
m16_84 [cluster="lambda expression", file="PerformContext.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="86-86"];
m16_85 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="86-86"];
m16_92 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="92-92"];
m16_96 [cluster="lambda expression", file="PerformContext.cs", label="wrapper.Execute(_cts.Token)", span="95-95"];
m16_95 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="95-95"];
m16_98 [cluster="lambda expression", file="PerformContext.cs", label="Entry lambda expression", span="97-97"];
m16_93 [cluster="lambda expression", file="PerformContext.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="92-92"];
m16_94 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="92-92"];
m16_97 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="95-95"];
m16_99 [cluster="lambda expression", file="PerformContext.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="97-97"];
m16_100 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="97-97"];
m16_105 [cluster="lambda expression", file="PerformContext.cs", label="TimeSpan.Zero", span="105-105"];
m16_106 [cluster="lambda expression", file="PerformContext.cs", label="Exit lambda expression", span="105-105"];
m16_36 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PerformContext.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51"];
m16_37 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PerformContext.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="53-53"];
m16_38 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PerformContext.cs", label="var wrapper = CreateWrapper()", span="54-54"];
m16_39 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PerformContext.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="56-56"];
m16_40 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PerformContext.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Exactly(_maxRetryAttempts))", span="58-60"];
m16_41 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PerformContext.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51"];
m16_69 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PerformContext.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78"];
m16_70 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PerformContext.cs", label="var wrapper = CreateWrapper()", span="80-80"];
m16_71 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PerformContext.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="81-81"];
m16_73 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PerformContext.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="84-84"];
m16_72 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PerformContext.cs", label="_cts.Cancel()", span="82-82"];
m16_74 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PerformContext.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="86-86"];
m16_75 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PerformContext.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78"];
m16_20 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="PerformContext.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m16_28 [cluster="Unk.Execute", file="PerformContext.cs", label="Entry Unk.Execute", span=""];
m16_111 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="PerformContext.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m16_29 [cluster="Unk.Verify", file="PerformContext.cs", label="Entry Unk.Verify", span=""];
m16_101 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="PerformContext.cs", label="return new AutomaticRetryProcess(_component.Object)\r\n            {\r\n                MaxRetryAttempts = _maxRetryAttempts,\r\n                DelayCallback = x => TimeSpan.Zero\r\n            };", span="102-106"];
m16_102 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="PerformContext.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100"];
m16_107 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PerformContext.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="112-112"];
m16_108 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PerformContext.cs", label="token.WaitHandle.WaitOne(Timeout.Infinite)", span="114-114"];
m16_109 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PerformContext.cs", label="token.ThrowIfCancellationRequested()", span="115-115"];
m16_110 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PerformContext.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="112-112"];
m16_113 [file="PerformContext.cs", label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", span=""];
m16_114 [file="PerformContext.cs", label=wrapper, span=""];
m16_115 [file="PerformContext.cs", label=wrapper, span=""];
m16_116 [file="PerformContext.cs", label=wrapper, span=""];
m16_117 [file="PerformContext.cs", label=wrapper, span=""];
m17_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m17_1 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=1, file="ProcessingStateHandler.cs", label="2: context.Transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="12-15"];
m17_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m17_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24"];
m17_5 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m17_6 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="ProcessingStateHandler.cs", label="2: context.Transaction.RemoveFromSet(''processing'', context.JobId)", span="20-20"];
m17_7 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m17_8 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m17_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m18_7 [cluster="Unk.>", file="RedisConnection.cs", label="Entry Unk.>", span=""];
m18_3 [cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11"];
m18_11 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="RedisConnection.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m18_0 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11"];
m18_1 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", file="RedisConnection.cs", label="_sharedContext = new SharedWorkerContextMock()", span="13-13"];
m18_2 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", file="RedisConnection.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11"];
m18_24 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="RedisConnection.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="22-22"];
m18_4 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", span="17-17"];
m18_5 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", color=red, community=0, file="RedisConnection.cs", label="0: Assert.Throws<NullReferenceException>(\r\n                () => new WorkerContext(null, WorkerNumber))", span="19-20"];
m18_6 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", file="RedisConnection.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", span="17-17"];
m18_17 [cluster="Unk.Equal", file="RedisConnection.cs", label="Entry Unk.Equal", span=""];
m18_16 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="47-47"];
m18_30 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", color=red, community=0, file="RedisConnection.cs", label="1: return new WorkerContext(_sharedContext.Object, WorkerNumber);", span="49-49"];
m18_31 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="RedisConnection.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="47-47"];
m18_12 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="24-24"];
m18_13 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="RedisConnection.cs", label="var context = CreateContext()", span="26-26"];
m18_14 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="RedisConnection.cs", label="Assert.Equal(WorkerNumber, context.WorkerNumber)", span="28-28"];
m18_15 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="RedisConnection.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="24-24"];
m18_18 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="32-32"];
m18_19 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="RedisConnection.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new WorkerContext(null))", span="34-35"];
m18_20 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="RedisConnection.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="32-32"];
m18_25 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="RedisConnection.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="39-39"];
m18_26 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="RedisConnection.cs", label="var context = CreateContext()", span="41-41"];
m18_27 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="RedisConnection.cs", label="var contextCopy = new WorkerContext(context)", span="42-42"];
m18_28 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="RedisConnection.cs", label="Assert.Equal(context.WorkerNumber, contextCopy.WorkerNumber)", span="44-44"];
m18_29 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="RedisConnection.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="39-39"];
m18_21 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="35-35"];
m18_8 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="20-20"];
m18_9 [cluster="lambda expression", color=red, community=0, file="RedisConnection.cs", label="0: new WorkerContext(null, WorkerNumber)", span="20-20"];
m18_10 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="20-20"];
m18_22 [cluster="lambda expression", file="RedisConnection.cs", label="new WorkerContext(null)", span="35-35"];
m18_23 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="35-35"];
m18_32 [file="RedisConnection.cs", label="HangFire.Core.Tests.Server.WorkerContextFacts", span=""];
m20_16 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51"];
m20_17 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="RedisMonitoringApi.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="53-53"];
m20_18 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51"];
m20_58 [cluster="System.Collections.Generic.List<T>.List()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m20_190 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m20_191 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                from,\r\n                from + perPage - 1)", span="290-293"];
m20_192 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''EnqueuedAt'', ''State'' },\r\n                (method, job, state) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="295-305"];
m20_193 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m20_413 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="RedisMonitoringApi.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m20_208 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="372-372"];
m20_243 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var endDate = DateTime.UtcNow", span="375-375"];
m20_250 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="383-383"];
m20_251 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="384-384"];
m20_244 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var dates = new List<DateTime>()", span="376-376"];
m20_247 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="dates.Add(endDate)", span="379-379"];
m20_248 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="endDate = endDate.AddHours(-1)", span="380-380"];
m20_245 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var i = 0", span="377-377"];
m20_254 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i < dates.Count", span="387-387"];
m20_258 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="result.Add(dates[i], value)", span="395-395"];
m20_246 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i < 24", span="377-377"];
m20_249 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i++", span="377-377"];
m20_252 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="386-386"];
m20_256 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="390-390"];
m20_253 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var i = 0", span="387-387"];
m20_260 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="return result;", span="398-398"];
m20_259 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i++", span="387-387"];
m20_255 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="long value", span="389-389"];
m20_257 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="value = 0", span="392-392"];
m20_261 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="372-372"];
m20_204 [cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m20_92 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="401-401"];
m20_272 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var endDate = DateTime.UtcNow.Date", span="404-404"];
m20_279 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="415-415"];
m20_280 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="417-417"];
m20_273 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var startDate = endDate.AddDays(-7)", span="405-405"];
m20_275 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="startDate <= endDate", span="408-408"];
m20_276 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="dates.Add(endDate)", span="410-410"];
m20_277 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="endDate = endDate.AddDays(-1)", span="411-411"];
m20_274 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var dates = new List<DateTime>()", span="406-406"];
m20_278 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="414-414"];
m20_287 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="result.Add(dates[i], value)", span="427-427"];
m20_283 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i < stringDates.Count", span="420-420"];
m20_281 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="419-419"];
m20_285 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="423-423"];
m20_282 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var i = 0", span="420-420"];
m20_289 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="return result;", span="430-430"];
m20_288 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i++", span="420-420"];
m20_284 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="long value", span="422-422"];
m20_286 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="value = 0", span="425-425"];
m20_290 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="401-401"];
m20_129 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m20_265 [cluster="Unk.TryParse", file="RedisMonitoringApi.cs", label="Entry Unk.TryParse", span=""];
m20_37 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7"];
m20_85 [cluster="KeyValuePair<string, ScheduleDto>.cstr", file="RedisMonitoringApi.cs", label="Entry KeyValuePair<string, ScheduleDto>.cstr", span=""];
m20_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m20_38 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56"];
m20_128 [cluster="int.Parse(string)", file="RedisMonitoringApi.cs", label="Entry int.Parse(string)", span="0-0"];
m20_209 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334"];
m20_210 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label="return GetHourlyTimelineStats(_redis, ''failed'');", span="336-336"];
m20_211 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334"];
m20_346 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="494-494"];
m20_347 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="var stats = new StatisticsDto()", span="496-496"];
m20_348 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="498-498"];
m20_350 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:servers''),\r\n                    x => stats.Servers = x)", span="502-504"];
m20_351 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:queues''),\r\n                    x => stats.Queues = x)", span="506-508"];
m20_352 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                    x => stats.Scheduled = x)", span="510-512"];
m20_353 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:processing''),\r\n                    x => stats.Processing = x)", span="514-516"];
m20_354 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetValue(''hangfire:stats:succeeded''),\r\n                    x => stats.Succeeded = long.Parse(x ?? ''0''))", span="518-520"];
m20_355 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:failed''),\r\n                    x => stats.Failed = x)", span="522-524"];
m20_358 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                        x => stats.Enqueued += x)", span="529-531"];
m20_360 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="return stats;", span="537-537"];
m20_349 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="var pipeline = _redis.CreatePipeline()", span="500-500"];
m20_356 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label=queues, span="526-526"];
m20_359 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="534-534"];
m20_357 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="var queueName = queue", span="528-528"];
m20_361 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="494-494"];
m20_31 [cluster="Unk.GetJobsWithProperties", file="RedisMonitoringApi.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m20_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m20_337 [cluster="KeyValuePair<string, T>.cstr", file="RedisMonitoringApi.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m20_60 [cluster="Unk.CreatePipeline", file="RedisMonitoringApi.cs", label="Entry Unk.CreatePipeline", span=""];
m20_78 [cluster="Unk.GetValueFromHash", file="RedisMonitoringApi.cs", label="Entry Unk.GetValueFromHash", span=""];
m20_318 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m20_212 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339"];
m20_213 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="var job = _redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="341-341"];
m20_217 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="var historyList = _redis.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId))", span="347-348"];
m20_214 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="job.Count == 0", span="342-342"];
m20_219 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="!job.ContainsKey(''Method'')", span="355-355"];
m20_220 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="job.Add(''Method'', null)", span="355-355"];
m20_221 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="!job.ContainsKey(''ParameterTypes'')", span="356-356"];
m20_222 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="job.Add(''ParameterTypes'', null)", span="356-356"];
m20_223 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", color=red, community=0, file="RedisMonitoringApi.cs", label="1: return new JobDetailsDto\r\n            {\r\n                Method = TryToGetMethod(job[''Type''], job[''Method''], job[''ParameterTypes'']),\r\n                Arguments = job.ContainsKey(''Arguments'') ? JobHelper.FromJson<string[]>(job[''Arguments'']) : null,\r\n                OldFormatArguments =\r\n                    job.ContainsKey(''Args'') ? JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']) : null,\r\n                State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                CreatedAt =\r\n                    job.ContainsKey(''CreatedAt'') ? JobHelper.FromStringTimestamp(job[''CreatedAt'']) : (DateTime?) null,\r\n                Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                History = history\r\n            };", span="358-369"];
m20_215 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="return null;", span="342-342"];
m20_216 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="var hiddenProperties = new[]\r\n            { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''Args'', ''State'', ''CreatedAt'' }", span="344-345"];
m20_218 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="var history = historyList\r\n                .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                .ToList()", span="350-352"];
m20_224 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339"];
m20_226 [cluster="Unk.ContainsKey", file="RedisMonitoringApi.cs", label="Entry Unk.ContainsKey", span=""];
m20_339 [cluster="Unk.selector", file="RedisMonitoringApi.cs", label="Entry Unk.selector", span=""];
m20_343 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="489-489"];
m20_344 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RedisMonitoringApi.cs", label="return _redis.GetListCount(''hangfire:succeeded'');", span="491-491"];
m20_345 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="489-489"];
m20_323 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_362 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2"];
m20_57 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m20_127 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5"];
m20_231 [cluster="Unk.Where", file="RedisMonitoringApi.cs", label="Entry Unk.Where", span=""];
m20_291 [cluster="System.DateTime.AddDays(double)", file="RedisMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m20_338 [cluster="Unk.TrueForAll", file="RedisMonitoringApi.cs", label="Entry Unk.TrueForAll", span=""];
m20_88 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="540-540"];
m20_408 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="RedisMonitoringApi.cs", label="return JobMethod.Deserialize(new InvocationData\r\n                {\r\n                    Type = type,\r\n                    Method = method,\r\n                    ParameterTypes = parameterTypes\r\n                });", span="545-550"];
m20_409 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="RedisMonitoringApi.cs", label=Exception, span="552-552"];
m20_410 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="RedisMonitoringApi.cs", label="return null;", span="554-554"];
m20_411 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="540-540"];
m20_6 [cluster="Unk.Dispose", file="RedisMonitoringApi.cs", label="Entry Unk.Dispose", span=""];
m20_227 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6"];
m20_405 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="531-531"];
m20_34 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="78-85"];
m20_40 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="85-85"];
m20_35 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }", span="78-85"];
m20_36 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="78-85"];
m20_41 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Value.StartedAt", span="85-85"];
m20_42 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="85-85"];
m20_72 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="jobs.Add(job.Key, x)", span="113-113"];
m20_83 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="126-134"];
m20_80 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="states.Add(job.Key, x)", span="119-119"];
m20_67 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' })", span="110-112"];
m20_76 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State'')", span="116-118"];
m20_66 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="110-112"];
m20_71 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="113-113"];
m20_75 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="116-118"];
m20_79 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="119-119"];
m20_82 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="126-134"];
m20_68 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="110-112"];
m20_73 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="113-113"];
m20_77 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="116-118"];
m20_81 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="119-119"];
m20_84 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="126-134"];
m20_115 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="servers.Add(name, x)", span="170-170"];
m20_125 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }", span="181-188"];
m20_122 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="queues.Add(name, x)", span="175-175"];
m20_112 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="167-169"];
m20_118 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name))", span="173-174"];
m20_111 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="167-169"];
m20_114 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="170-170"];
m20_117 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="173-174"];
m20_121 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="175-175"];
m20_124 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="181-188"];
m20_113 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="167-169"];
m20_116 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="170-170"];
m20_119 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="173-174"];
m20_123 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="175-175"];
m20_126 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="181-188"];
m20_135 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="203-211"];
m20_136 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                }", span="203-211"];
m20_137 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="203-211"];
m20_144 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="226-231"];
m20_145 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="226-231"];
m20_146 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="226-231"];
m20_169 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="248-249"];
m20_175 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="253-253"];
m20_181 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="257-257"];
m20_168 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="248-249"];
m20_171 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="250-250"];
m20_174 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="253-253"];
m20_177 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="254-254"];
m20_180 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="257-257"];
m20_183 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="258-258"];
m20_186 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="268-273"];
m20_170 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="248-249"];
m20_172 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="firstJobIds = x", span="250-250"];
m20_173 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="250-250"];
m20_176 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="253-253"];
m20_178 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="length = x", span="254-254"];
m20_179 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="254-254"];
m20_182 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="257-257"];
m20_184 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="dequeued = x", span="258-258"];
m20_185 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="258-258"];
m20_187 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="268-273"];
m20_188 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="268-273"];
m20_194 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="300-305"];
m20_195 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="300-305"];
m20_196 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="300-305"];
m20_201 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="320-326"];
m20_202 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                }", span="320-326"];
m20_203 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="320-326"];
m20_234 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!hiddenProperties.Contains(x.Key)", span="367-367"];
m20_233 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="367-367"];
m20_237 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="367-367"];
m20_240 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="367-367"];
m20_235 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="367-367"];
m20_238 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Key", span="367-367"];
m20_239 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="367-367"];
m20_241 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Value", span="367-367"];
m20_242 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="367-367"];
m20_268 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="383-383"];
m20_267 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="383-383"];
m20_269 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="383-383"];
m20_296 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="415-415"];
m20_292 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="414-414"];
m20_295 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="415-415"];
m20_293 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.ToString(''yyyy-MM-dd'')", span="414-414"];
m20_294 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="414-414"];
m20_297 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="415-415"];
m20_325 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="462-462"];
m20_335 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State))", span="481-485"];
m20_320 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!jobs.ContainsKey(id)", span="457-457"];
m20_321 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="jobs.Add(id, x)", span="457-457"];
m20_332 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="471-480"];
m20_328 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!states.ContainsKey(id)", span="463-463"];
m20_329 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="states.Add(id, x)", span="463-463"];
m20_315 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray())", span="454-456"];
m20_314 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="454-456"];
m20_319 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="457-457"];
m20_324 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="462-462"];
m20_327 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="463-463"];
m20_331 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="471-480"];
m20_334 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="481-485"];
m20_316 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="454-456"];
m20_322 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="457-457"];
m20_326 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="462-462"];
m20_330 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="463-463"];
m20_333 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="471-480"];
m20_336 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="481-485"];
m20_340 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="483-483"];
m20_341 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="y == null", span="483-483"];
m20_342 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="483-483"];
m20_368 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Servers = x", span="504-504"];
m20_374 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Queues = x", span="508-508"];
m20_380 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Scheduled = x", span="512-512"];
m20_386 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Processing = x", span="516-516"];
m20_393 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="520-520"];
m20_400 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Failed = x", span="524-524"];
m20_406 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="stats.Enqueued += x", span="531-531"];
m20_363 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="503-503"];
m20_367 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="504-504"];
m20_370 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="507-507"];
m20_373 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="508-508"];
m20_376 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="511-511"];
m20_379 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="512-512"];
m20_382 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="515-515"];
m20_385 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="516-516"];
m20_388 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="519-519"];
m20_392 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="520-520"];
m20_396 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="523-523"];
m20_399 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="524-524"];
m20_403 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="530-530"];
m20_402 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="530-530"];
m20_364 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSetCount(''hangfire:servers'')", span="503-503"];
m20_365 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="503-503"];
m20_369 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="504-504"];
m20_371 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSetCount(''hangfire:queues'')", span="507-507"];
m20_372 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="507-507"];
m20_375 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="508-508"];
m20_377 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="511-511"];
m20_378 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="511-511"];
m20_381 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="512-512"];
m20_383 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="515-515"];
m20_384 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="515-515"];
m20_387 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="516-516"];
m20_389 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="519-519"];
m20_390 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="519-519"];
m20_394 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="520-520"];
m20_397 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="523-523"];
m20_398 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="523-523"];
m20_401 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="524-524"];
m20_404 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="530-530"];
m20_407 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="531-531"];
m20_29 [cluster="Unk.GetRangeFromSortedSet", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m20_166 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m20_167 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m20_65 [cluster="Unk.ToList", file="RedisMonitoringApi.cs", label="Entry Unk.ToList", span=""];
m20_69 [cluster="Unk.Format", file="RedisMonitoringApi.cs", label="Entry Unk.Format", span=""];
m20_61 [cluster="Unk.QueueCommand", file="RedisMonitoringApi.cs", label="Entry Unk.QueueCommand", span=""];
m20_0 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31"];
m20_1 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="RedisMonitoringApi.cs", label="_redis = redis", span="33-33"];
m20_2 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31"];
m20_130 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191"];
m20_131 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RedisMonitoringApi.cs", label="var failedJobIds = _redis.GetRangeFromSortedSetDesc(\r\n                ''hangfire:failed'',\r\n                from,\r\n                from + count - 1)", span="193-196"];
m20_132 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RedisMonitoringApi.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                failedJobIds,\r\n                null,\r\n                new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                (method, job, state) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                });", span="198-211"];
m20_133 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191"];
m20_270 [cluster="System.DateTime.ToString(string)", file="RedisMonitoringApi.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m20_86 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m20_164 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RedisMonitoringApi.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m20_264 [cluster="Unk.ElementAt", file="RedisMonitoringApi.cs", label="Entry Unk.ElementAt", span=""];
m20_96 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148"];
m20_97 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="150-150"];
m20_98 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="serverNames.Count == 0", span="152-152"];
m20_103 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label=serverNames, span="162-162"];
m20_108 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="return serverNames.Select(x => new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }).ToList();", span="181-188"];
m20_99 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="return new List<ServerDto>();", span="154-154"];
m20_100 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="var servers = new Dictionary<string, List<string>>()", span="157-157"];
m20_101 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="var queues = new Dictionary<string, List<string>>()", span="158-158"];
m20_105 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                        x => servers.Add(name, x))", span="166-170"];
m20_102 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="var pipeline = _redis.CreatePipeline()", span="160-160"];
m20_106 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name)),\r\n                        x => queues.Add(name, x))", span="172-175"];
m20_107 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="178-178"];
m20_104 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="var name = serverName", span="164-164"];
m20_109 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148"];
m20_143 [cluster="Unk.GetRangeFromList", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeFromList", span=""];
m20_139 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214"];
m20_140 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RedisMonitoringApi.cs", label="var succeededJobIds = _redis.GetRangeFromList(\r\n                ''hangfire:succeeded'',\r\n                from,\r\n                from + count - 1)", span="216-219"];
m20_141 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RedisMonitoringApi.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                succeededJobIds,\r\n                null,\r\n                new[] { ''SucceededAt'', ''State'' },\r\n                (method, job, state) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="221-231"];
m20_142 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214"];
m20_89 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138"];
m20_90 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="return GetTimelineStats(_redis, ''succeeded'');", span="140-140"];
m20_91 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138"];
m20_62 [cluster="Unk.Flush", file="RedisMonitoringApi.cs", label="Entry Unk.Flush", span=""];
m20_395 [cluster="Unk.Parse", file="RedisMonitoringApi.cs", label="Entry Unk.Parse", span=""];
m20_74 [cluster="Unk.Add", file="RedisMonitoringApi.cs", label="Entry Unk.Add", span=""];
m20_39 [cluster="string.Equals(string, System.StringComparison)", file="RedisMonitoringApi.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m20_19 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56"];
m20_20 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RedisMonitoringApi.cs", label="return _redis.GetSortedSetCount(''hangfire:failed'');", span="58-58"];
m20_21 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56"];
m20_262 [cluster="System.DateTime.AddHours(double)", file="RedisMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m20_25 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66"];
m20_26 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RedisMonitoringApi.cs", label="var jobIds = _redis.GetRangeFromSortedSet(\r\n                ''hangfire:processing'',\r\n                from,\r\n                from + count - 1)", span="69-72"];
m20_27 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RedisMonitoringApi.cs", label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(_redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                (method, job, state) => new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }).OrderBy(x => x.Value.StartedAt).ToList());", span="74-85"];
m20_28 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66"];
m20_10 [cluster="Unk.GetSortedSetCount", file="RedisMonitoringApi.cs", label="Entry Unk.GetSortedSetCount", span=""];
m20_147 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7"];
m20_22 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61"];
m20_23 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RedisMonitoringApi.cs", label="return _redis.GetSortedSetCount(''hangfire:processing'');", span="63-63"];
m20_24 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61"];
m20_317 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m20_228 [cluster="Unk.TryToGetMethod", file="RedisMonitoringApi.cs", label="Entry Unk.TryToGetMethod", span=""];
m20_313 [cluster="JobList<T>.cstr", file="RedisMonitoringApi.cs", label="Entry JobList<T>.cstr", span=""];
m20_266 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m20_205 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329"];
m20_206 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RedisMonitoringApi.cs", label="return GetHourlyTimelineStats(_redis, ''succeeded'');", span="331-331"];
m20_207 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329"];
m20_165 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="433-433"];
m20_298 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="jobIds.Count == 0", span="440-440"];
m20_300 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="442-442"];
m20_301 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="443-443"];
m20_302 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="properties = properties ?? new string[0]", span="445-445"];
m20_303 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var pipeline = redis.CreatePipeline()", span="447-447"];
m20_304 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label=jobIds, span="449-449"];
m20_307 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="stateProperties != null", span="459-459"];
m20_308 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="461-463"];
m20_310 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="470-486"];
m20_299 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="440-440"];
m20_306 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="453-457"];
m20_309 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="467-467"];
m20_305 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var id = jobId", span="451-451"];
m20_311 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="433-433"];
m20_271 [cluster="string.Format(string, object, object)", file="RedisMonitoringApi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m20_225 [cluster="Unk.GetAllEntriesFromHash", file="RedisMonitoringApi.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m20_232 [cluster="Unk.ToDictionary", file="RedisMonitoringApi.cs", label="Entry Unk.ToDictionary", span=""];
m20_230 [cluster="Unk.FromStringTimestamp", file="RedisMonitoringApi.cs", label="Entry Unk.FromStringTimestamp", span=""];
m20_312 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m20_366 [cluster="Unk.GetSetCount", file="RedisMonitoringApi.cs", label="Entry Unk.GetSetCount", span=""];
m20_87 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="RedisMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m20_93 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143"];
m20_94 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RedisMonitoringApi.cs", label="return GetTimelineStats(_redis, ''failed'');", span="145-145"];
m20_95 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143"];
m20_189 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m20_138 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m20_229 [cluster="Unk.>", file="RedisMonitoringApi.cs", label="Entry Unk.>", span=""];
m20_148 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234"];
m20_149 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="236-236"];
m20_150 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="237-237"];
m20_151 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label=queues, span="239-239"];
m20_161 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue,\r\n                    FirstJobs = jobs,\r\n                    Length = length,\r\n                    Dequeued = dequeued\r\n                })", span="275-281"];
m20_162 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="return result;", span="284-284"];
m20_152 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="IList<string> firstJobIds = null", span="241-241"];
m20_156 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                        x => firstJobIds = x)", span="247-250"];
m20_157 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                        x => length = x)", span="252-254"];
m20_158 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                        x => dequeued = x)", span="256-258"];
m20_153 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="long length = 0", span="242-242"];
m20_154 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="long dequeued = 0", span="243-243"];
m20_155 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="var pipeline = _redis.CreatePipeline()", span="245-245"];
m20_159 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="260-260"];
m20_160 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="var jobs = GetJobsWithProperties(\r\n                    _redis,\r\n                    firstJobIds,\r\n                    null,\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (method, job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="263-273"];
m20_163 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234"];
m20_15 [cluster="Unk.GetListCount", file="RedisMonitoringApi.cs", label="Entry Unk.GetListCount", span=""];
m20_63 [cluster="JobList<ScheduleDto>.cstr", file="RedisMonitoringApi.cs", label="Entry JobList<ScheduleDto>.cstr", span=""];
m20_43 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88"];
m20_44 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="var scheduledJobs = _redis.GetRangeWithScoresFromSortedSet(\r\n                ''hangfire:schedule'',\r\n                from,\r\n                from + count - 1)", span="90-93"];
m20_45 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="scheduledJobs.Count == 0", span="95-95"];
m20_50 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label=scheduledJobs, span="105-105"];
m20_55 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="return new JobList<ScheduleDto>(scheduledJobs\r\n                .Select(job => new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }))\r\n                .ToList());", span="125-135"];
m20_46 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="return new JobList<ScheduleDto>(new List<KeyValuePair<string, ScheduleDto>>());", span="97-97"];
m20_47 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="var jobs = new Dictionary<string, List<string>>()", span="100-100"];
m20_48 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="var states = new Dictionary<string, string>()", span="101-101"];
m20_52 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' }),\r\n                        x => jobs.Add(job.Key, x))", span="109-113"];
m20_49 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="var pipeline = _redis.CreatePipeline()", span="103-103"];
m20_53 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State''),\r\n                        x => states.Add(job.Key, x))", span="115-119"];
m20_54 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="122-122"];
m20_51 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="var job = scheduledJob", span="107-107"];
m20_56 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88"];
m20_197 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308"];
m20_198 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                from, from + perPage - 1)", span="311-313"];
m20_199 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                new[] { ''State'', ''CreatedAt'', ''Fetched'' },\r\n                null,\r\n                (method, job, state) => new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                });", span="315-326"];
m20_200 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308"];
m20_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m20_30 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6"];
m20_11 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46"];
m20_12 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RedisMonitoringApi.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="48-48"];
m20_13 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46"];
m20_263 [cluster="Unk.GetValuesMap", file="RedisMonitoringApi.cs", label="Entry Unk.GetValuesMap", span=""];
m20_7 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41"];
m20_8 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RedisMonitoringApi.cs", label="return _redis.GetSortedSetCount(''hangfire:schedule'');", span="43-43"];
m20_9 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41"];
m20_120 [cluster="Unk.GetAllItemsFromList", file="RedisMonitoringApi.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m20_236 [cluster="Unk.Contains", file="RedisMonitoringApi.cs", label="Entry Unk.Contains", span=""];
m20_64 [cluster="Unk.Select", file="RedisMonitoringApi.cs", label="Entry Unk.Select", span=""];
m20_3 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36"];
m20_4 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="RedisMonitoringApi.cs", label="_redis.Dispose()", span="38-38"];
m20_5 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36"];
m20_110 [cluster="Unk.GetAllItemsFromSet", file="RedisMonitoringApi.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m20_134 [cluster="Unk.GetRangeFromSortedSetDesc", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m20_391 [cluster="Unk.GetValue", file="RedisMonitoringApi.cs", label="Entry Unk.GetValue", span=""];
m20_70 [cluster="Unk.GetValuesFromHash", file="RedisMonitoringApi.cs", label="Entry Unk.GetValuesFromHash", span=""];
m20_412 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m20_414 [file="RedisMonitoringApi.cs", label="HangFire.Redis.RedisMonitoringApi", span=""];
m20_415 [file="RedisMonitoringApi.cs", label=job, span=""];
m20_416 [file="RedisMonitoringApi.cs", label=jobs, span=""];
m20_417 [file="RedisMonitoringApi.cs", label=states, span=""];
m20_418 [file="RedisMonitoringApi.cs", label=name, span=""];
m20_419 [file="RedisMonitoringApi.cs", label=servers, span=""];
m20_420 [file="RedisMonitoringApi.cs", label=queues, span=""];
m20_421 [file="RedisMonitoringApi.cs", label=queue, span=""];
m20_422 [file="RedisMonitoringApi.cs", label=hiddenProperties, span=""];
m20_423 [file="RedisMonitoringApi.cs", label=string, span=""];
m20_424 [file="RedisMonitoringApi.cs", label=string, span=""];
m20_425 [file="RedisMonitoringApi.cs", label="string[]", span=""];
m20_426 [file="RedisMonitoringApi.cs", label=id, span=""];
m20_427 [file="RedisMonitoringApi.cs", label=jobs, span=""];
m20_428 [file="RedisMonitoringApi.cs", label="string[]", span=""];
m20_429 [file="RedisMonitoringApi.cs", label=states, span=""];
m20_430 [file="RedisMonitoringApi.cs", label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m20_431 [file="RedisMonitoringApi.cs", label=stats, span=""];
m20_432 [file="RedisMonitoringApi.cs", label=queueName, span=""];
m21_30 [cluster="HangFire.Storage.IMonitoringApi.FailedByDatesCount()", file="RedisSet.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedByDatesCount()", span="48-48"];
m21_25 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="RedisSet.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m21_31 [cluster="HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", file="RedisSet.cs", label="Entry HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", span="49-49"];
m21_27 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="RedisSet.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m21_26 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="RedisSet.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m21_35 [cluster="Unk.Write", file="RedisSet.cs", label="Entry Unk.Write", span=""];
m21_34 [cluster="Unk.SerializeObject", file="RedisSet.cs", label="Entry Unk.SerializeObject", span=""];
m21_29 [cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="RedisSet.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47"];
m21_32 [cluster="HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", file="RedisSet.cs", label="Entry HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", span="50-50"];
m21_28 [cluster="Unk.Equals", file="RedisSet.cs", label="Entry Unk.Equals", span=""];
m21_0 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="Entry HangFire.Web.Pages.DashboardPage.Execute()", span="51-51"];
m21_1 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="WriteLiteral(''\r\n'')", span="55-55"];
m21_2 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="Layout = new LayoutPage { Title = ''Dashboard'' }", span="67-67"];
m21_3 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="IDictionary<DateTime, long> succeeded = null", span="68-68"];
m21_4 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="IDictionary<DateTime, long> failed = null", span="69-69"];
m21_18 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="succeeded != null && failed != null", span="119-119"];
m21_20 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="Write(JsonConvert.SerializeObject(succeeded))", span="130-130"];
m21_5 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="var period = Request.QueryString[''period'']?? ''day''", span="71-71"];
m21_22 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="Write(JsonConvert.SerializeObject(failed))", span="140-140"];
m21_6 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="73-73"];
m21_7 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="''week''.Equals(period, StringComparison.OrdinalIgnoreCase)", span="75-75"];
m21_10 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="''day''.Equals(period, StringComparison.OrdinalIgnoreCase)", span="80-80"];
m21_14 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="Write(''day''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="98-98"];
m21_16 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="Write(''week''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="109-109"];
m21_8 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="succeeded = monitor.SucceededByDatesCount()", span="77-77"];
m21_9 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="failed = monitor.FailedByDatesCount()", span="78-78"];
m21_11 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="succeeded = monitor.HourlySucceededJobs()", span="82-82"];
m21_12 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="failed = monitor.HourlyFailedJobs()", span="83-83"];
m21_13 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="WriteLiteral(''\r\n<h3>Realtime graph</h3>\r\n<div id=\''realtimeGraph\''></div>\r\n\r\n<h3>\r\n    <div class'' +\r\n''=\''btn-group pull-right\'' style=\''margin-top: 2px;\''>\r\n        <a href=\''?period=day\'''' +\r\n'' class=\''btn btn-sm btn-default '')", span="91-93"];
m21_15 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="WriteLiteral(''\''>\r\n            Day\r\n        </a>\r\n        <a href=\''?period=week\'' class=\''btn btn-'' +\r\n''sm btn-default '')", span="103-104"];
m21_17 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="WriteLiteral(''\''>Week</a>\r\n    </div>\r\n    History graph\r\n</h3>\r\n\r\n'')", span="114-114"];
m21_19 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="WriteLiteral(''    <div id=\''historyGraph\'' \r\n          data-succeeded=\'''')", span="125-125"];
m21_21 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="WriteLiteral(''\'' \r\n          data-failed=\'''')", span="135-135"];
m21_23 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="WriteLiteral(''\''>\r\n    </div>\r\n'')", span="145-145"];
m21_24 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="RedisSet.cs", label="Exit HangFire.Web.Pages.DashboardPage.Execute()", span="51-51"];
m21_36 [file="RedisSet.cs", label="HangFire.Web.Pages.DashboardPage", span=""];
m22_0 [cluster="HangFire.Server.IJobPerformer.Perform()", file="RedisWriteOnlyCounter.cs", label="Entry HangFire.Server.IJobPerformer.Perform()", span="20-20"];
m22_1 [cluster="HangFire.Server.IJobPerformer.Perform()", file="RedisWriteOnlyCounter.cs", label="Exit HangFire.Server.IJobPerformer.Perform()", span="20-20"];
m24_0 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="RedisWriteOnlyList.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m24_1 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", color=red, community=0, file="RedisWriteOnlyList.cs", label="1: Queue = queue", span="6-6"];
m24_2 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="RedisWriteOnlyList.cs", label="Exit HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m24_3 [file="RedisWriteOnlyList.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m25_3 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.Dispose()", span="39-39"];
m25_4 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisWriteOnlyQueue.cs", label="Redis.Dispose()", span="41-41"];
m25_5 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.Dispose()", span="39-39"];
m25_113 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyQueue.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m25_168 [cluster="int.ToString(System.IFormatProvider)", file="RedisWriteOnlyQueue.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m25_25 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.SerializeDateTime(DateTime.UtcNow))", span="95-98"];
m25_12 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49"];
m25_13 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="string jobId", span="51-51"];
m25_16 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="57-57"];
m25_17 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="queueIndex = (queueIndex + 1) % queues.Length", span="59-59"];
m25_18 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="queueName = queues[queueIndex]", span="60-60"];
m25_14 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="string queueName", span="52-52"];
m25_15 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="var queueIndex = 0", span="53-53"];
m25_21 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="queueIndex == 0", span="65-65"];
m25_19 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="62-62"];
m25_20 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="63-63"];
m25_26 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="return new RedisFetchedJob(Redis, jobId, queueName);", span="104-104"];
m25_22 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="67-70"];
m25_23 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="74-75"];
m25_24 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="jobId == null", span="78-78"];
m25_27 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49"];
m25_35 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107"];
m25_36 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="return Redis.AcquireLock(RedisStorage.Prefix + resource, timeout);", span="109-109"];
m25_37 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107"];
m25_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m25_98 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m25_131 [cluster="Unk.GetAllItemsFromSortedSet", file="RedisWriteOnlyQueue.cs", label="Entry Unk.GetAllItemsFromSortedSet", span=""];
m25_50 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="136-138"];
m25_39 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112"];
m25_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var jobId = Guid.NewGuid().ToString()", span="118-118"];
m25_41 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var invocationData = InvocationData.Serialize(job)", span="120-120"];
m25_42 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var storedParameters = new Dictionary<string, string>(parameters)", span="123-123"];
m25_47 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="storedParameters.Add(''CreatedAt'', JobHelper.SerializeDateTime(createdAt))", span="128-128"];
m25_49 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="132-134"];
m25_52 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="return jobId;", span="144-144"];
m25_43 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="storedParameters.Add(''Type'', invocationData.Type)", span="124-124"];
m25_44 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="storedParameters.Add(''Method'', invocationData.Method)", span="125-125"];
m25_45 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="126-126"];
m25_46 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="127-127"];
m25_48 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var transaction = Redis.CreateTransaction()", span="130-130"];
m25_51 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="transaction.Commit()", span="141-141"];
m25_53 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112"];
m25_64 [cluster="Unk.SetRangeInHash", file="RedisWriteOnlyQueue.cs", label="Entry Unk.SetRangeInHash", span=""];
m25_133 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248"];
m25_134 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisWriteOnlyQueue.cs", label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="250-252"];
m25_135 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248"];
m25_96 [cluster="Unk.GetAllEntriesFromHash", file="RedisWriteOnlyQueue.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m25_102 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204"];
m25_103 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="jobId == null", span="206-206"];
m25_105 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="var entries = Redis.GetAllEntriesFromHash(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state'', jobId))", span="208-209"];
m25_104 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''jobId'');", span="206-206"];
m25_106 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="entries.Count == 0", span="211-211"];
m25_108 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="var stateData = new Dictionary<string, string>(entries)", span="213-213"];
m25_111 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="return new StateData\r\n            {\r\n                Name = entries[''State''],\r\n                Reason = entries.ContainsKey(''Reason'') ? entries[''Reason''] : null,\r\n                Data = stateData\r\n            };", span="217-222"];
m25_107 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="return null;", span="211-211"];
m25_109 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="stateData.Remove(''State'')", span="214-214"];
m25_110 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="stateData.Remove(''Reason'')", span="215-215"];
m25_112 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204"];
m25_114 [cluster="Dictionary<string, string>.cstr", file="RedisWriteOnlyQueue.cs", label="Entry Dictionary<string, string>.cstr", span=""];
m25_11 [cluster="Unk.CreateTransaction", file="RedisWriteOnlyQueue.cs", label="Entry Unk.CreateTransaction", span=""];
m25_33 [cluster="Unk.SetEntryInHash", file="RedisWriteOnlyQueue.cs", label="Entry Unk.SetEntryInHash", span=""];
m25_130 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107"];
m25_163 [cluster="Unk.AddItemToSet", file="RedisWriteOnlyQueue.cs", label="Entry Unk.AddItemToSet", span=""];
m25_193 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328"];
m25_194 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="330-330"];
m25_205 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="utcNow > maxTime.Add(timeOut)", span="361-361"];
m25_195 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="331-331"];
m25_198 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label=serverNames, span="337-337"];
m25_196 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var utcNow = DateTime.UtcNow", span="333-333"];
m25_200 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.DeserializeDateTime(x[0]),\r\n                                JobHelper.DeserializeNullableDateTime(x[1]))))", span="341-349"];
m25_203 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label=heartbeats, span="356-356"];
m25_197 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var pipeline = Redis.CreatePipeline()", span="335-335"];
m25_201 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="pipeline.Flush()", span="352-352"];
m25_199 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var name = serverName", span="339-339"];
m25_202 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var removedServerCount = 0", span="355-355"];
m25_207 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="removedServerCount++", span="364-364"];
m25_208 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="return removedServerCount;", span="368-368"];
m25_204 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="358-359"];
m25_206 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="RemoveServer(Redis, heartbeat.Key)", span="363-363"];
m25_209 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328"];
m25_30 [cluster="Unk.BlockingPopAndPushItemBetweenLists", file="RedisWriteOnlyQueue.cs", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
m25_191 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisWriteOnlyQueue.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.SerializeDateTime(DateTime.UtcNow))", span="322-325"];
m25_190 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320"];
m25_192 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320"];
m25_32 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m25_179 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisWriteOnlyQueue.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="312-314"];
m25_176 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304"];
m25_177 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisWriteOnlyQueue.cs", label="var transaction = redis.CreateTransaction()", span="306-306"];
m25_178 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisWriteOnlyQueue.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="308-310"];
m25_180 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisWriteOnlyQueue.cs", label="transaction.Commit()", span="316-316"];
m25_181 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304"];
m25_189 [cluster="Unk.RemoveEntry", file="RedisWriteOnlyQueue.cs", label="Entry Unk.RemoveEntry", span=""];
m25_7 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44"];
m25_8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisWriteOnlyQueue.cs", label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="46-46"];
m25_9 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44"];
m25_120 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233"];
m25_121 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisWriteOnlyQueue.cs", label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="235-237"];
m25_122 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233"];
m25_68 [cluster="Unk.ExpireEntryIn", file="RedisWriteOnlyQueue.cs", label="Entry Unk.ExpireEntryIn", span=""];
m25_55 [cluster="System.Guid.ToString()", file="RedisWriteOnlyQueue.cs", label="Entry System.Guid.ToString()", span="0-0"];
m25_138 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255"];
m25_139 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisWriteOnlyQueue.cs", label="key == null", span="257-257"];
m25_141 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisWriteOnlyQueue.cs", label="keyValuePairs == null", span="258-258"];
m25_143 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisWriteOnlyQueue.cs", label="Redis.SetRangeInHash(RedisStorage.GetRedisKey(key), keyValuePairs)", span="260-260"];
m25_140 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''key'');", span="257-257"];
m25_142 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="258-258"];
m25_144 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255"];
m25_212 [cluster="Unk.Flush", file="RedisWriteOnlyQueue.cs", label="Entry Unk.Flush", span=""];
m25_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RedisWriteOnlyQueue.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m25_10 [cluster="RedisWriteOnlyTransaction.cstr", file="RedisWriteOnlyQueue.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m25_225 [cluster="Unk.DeserializeDateTime", file="RedisWriteOnlyQueue.cs", label="Entry Unk.DeserializeDateTime", span=""];
m25_215 [cluster="System.DateTime.Add(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m25_227 [cluster="Unk.Add", file="RedisWriteOnlyQueue.cs", label="Entry Unk.Add", span=""];
m25_116 [cluster="HangFire.Storage.StateData.StateData()", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Storage.StateData.StateData()", span="21-21"];
m25_151 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272"];
m25_152 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisWriteOnlyQueue.cs", label="var transaction = Redis.CreateTransaction()", span="274-274"];
m25_153 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisWriteOnlyQueue.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="276-277"];
m25_154 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisWriteOnlyQueue.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.SerializeDateTime(DateTime.UtcNow) },\r\n                        }))", span="279-285"];
m25_155 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisWriteOnlyQueue.cs", label="context.Queues", span="287-287"];
m25_157 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisWriteOnlyQueue.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="290-292"];
m25_158 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisWriteOnlyQueue.cs", label="transaction.Commit()", span="295-295"];
m25_156 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisWriteOnlyQueue.cs", label="var queue1 = queue", span="289-289"];
m25_159 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272"];
m25_167 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlyQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m25_224 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisWriteOnlyQueue.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m25_34 [cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", span="30-30"];
m25_57 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisWriteOnlyQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m25_101 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="60-60"];
m25_6 [cluster="Unk.Dispose", file="RedisWriteOnlyQueue.cs", label="Entry Unk.Dispose", span=""];
m25_172 [cluster="Unk.AddItemToList", file="RedisWriteOnlyQueue.cs", label="Entry Unk.AddItemToList", span=""];
m25_185 [cluster="Unk.RemoveItemFromSet", file="RedisWriteOnlyQueue.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m25_213 [cluster="System.DateTime.DateTime(long)", file="RedisWriteOnlyQueue.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m25_173 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299"];
m25_174 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisWriteOnlyQueue.cs", label="RemoveServer(Redis, serverId)", span="301-301"];
m25_175 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299"];
m25_214 [cluster="System.Math.Max(long, long)", file="RedisWriteOnlyQueue.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m25_226 [cluster="Unk.DeserializeNullableDateTime", file="RedisWriteOnlyQueue.cs", label="Entry Unk.DeserializeNullableDateTime", span=""];
m25_69 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147"];
m25_70 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="149-150"];
m25_71 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="storedData.Count == 0", span="152-152"];
m25_78 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="storedData.ContainsKey(''Type'')", span="160-160"];
m25_79 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="type = storedData[''Type'']", span="162-162"];
m25_80 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="storedData.ContainsKey(''Method'')", span="164-164"];
m25_81 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="method = storedData[''Method'']", span="166-166"];
m25_82 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="storedData.ContainsKey(''ParameterTypes'')", span="168-168"];
m25_83 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="parameterTypes = storedData[''ParameterTypes'']", span="170-170"];
m25_84 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="storedData.ContainsKey(''Arguments'')", span="172-172"];
m25_85 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="arguments = storedData[''Arguments'']", span="174-174"];
m25_86 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="storedData.ContainsKey(''CreatedAt'')", span="176-176"];
m25_87 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="createdAt = storedData[''CreatedAt'']", span="178-178"];
m25_94 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                CreatedAt = JobHelper.DeserializeNullableDateTime(createdAt) ?? DateTime.MinValue,\r\n                LoadException = loadException\r\n            };", span="195-201"];
m25_72 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="return null;", span="152-152"];
m25_73 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="string type = null", span="154-154"];
m25_74 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="string method = null", span="155-155"];
m25_90 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="184-184"];
m25_75 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="string parameterTypes = null", span="156-156"];
m25_76 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="string arguments = null", span="157-157"];
m25_77 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="string createdAt = null", span="158-158"];
m25_88 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="Job job = null", span="181-181"];
m25_89 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="JobLoadException loadException = null", span="182-182"];
m25_91 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="job = invocationData.Deserialize()", span="188-188"];
m25_92 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label=JobLoadException, span="190-190"];
m25_93 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="loadException = ex", span="192-192"];
m25_95 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147"];
m25_221 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="345-349"];
m25_66 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="136-138"];
m25_62 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="132-134"];
m25_61 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="132-134"];
m25_65 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="136-138"];
m25_63 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="132-134"];
m25_67 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="136-138"];
m25_161 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="276-277"];
m25_165 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.SerializeDateTime(DateTime.UtcNow) },\r\n                        })", span="279-285"];
m25_170 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="290-292"];
m25_160 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="276-277"];
m25_164 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="279-285"];
m25_169 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="290-292"];
m25_162 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="276-277"];
m25_166 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="279-285"];
m25_171 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="290-292"];
m25_183 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="308-310"];
m25_187 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="312-314"];
m25_182 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="308-310"];
m25_186 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="312-314"];
m25_184 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="308-310"];
m25_188 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="312-314"];
m25_222 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.DeserializeDateTime(x[0]),\r\n                                JobHelper.DeserializeNullableDateTime(x[1])))", span="345-349"];
m25_217 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="342-344"];
m25_216 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="342-344"];
m25_218 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="342-344"];
m25_223 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="345-349"];
m25_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32"];
m25_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisWriteOnlyQueue.cs", label="Redis = redis", span="34-34"];
m25_2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32"];
m25_137 [cluster="Unk.FirstOrDefault", file="RedisWriteOnlyQueue.cs", label="Entry Unk.FirstOrDefault", span=""];
m25_145 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263"];
m25_146 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisWriteOnlyQueue.cs", label="key == null", span="265-265"];
m25_148 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisWriteOnlyQueue.cs", label="var result = Redis.GetAllEntriesFromHash(RedisStorage.GetRedisKey(key))", span="267-267"];
m25_147 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''key'');", span="265-265"];
m25_149 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisWriteOnlyQueue.cs", label="return result.Count != 0 ? result : null;", span="269-269"];
m25_150 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263"];
m25_211 [cluster="Unk.CreatePipeline", file="RedisWriteOnlyQueue.cs", label="Entry Unk.CreatePipeline", span=""];
m25_118 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisWriteOnlyQueue.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="227-230"];
m25_117 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225"];
m25_119 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225"];
m25_54 [cluster="System.Guid.NewGuid()", file="RedisWriteOnlyQueue.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m25_123 [cluster="Unk.GetValueFromHash", file="RedisWriteOnlyQueue.cs", label="Entry Unk.GetValueFromHash", span=""];
m25_60 [cluster="Unk.Commit", file="RedisWriteOnlyQueue.cs", label="Entry Unk.Commit", span=""];
m25_210 [cluster="Unk.GetAllItemsFromSet", file="RedisWriteOnlyQueue.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m25_124 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240"];
m25_125 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisWriteOnlyQueue.cs", label="key == null", span="242-242"];
m25_127 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisWriteOnlyQueue.cs", label="var result = Redis.GetAllItemsFromSortedSet(RedisStorage.GetRedisKey(key))", span="244-244"];
m25_126 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''key'');", span="242-242"];
m25_128 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisWriteOnlyQueue.cs", label="return new HashSet<string>(result);", span="245-245"];
m25_129 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240"];
m25_100 [cluster="HangFire.Storage.JobData.JobData()", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Storage.JobData.JobData()", span="21-21"];
m25_99 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m25_219 [cluster="Unk.Format", file="RedisWriteOnlyQueue.cs", label="Entry Unk.Format", span=""];
m25_220 [cluster="Unk.GetValuesFromHash", file="RedisWriteOnlyQueue.cs", label="Entry Unk.GetValuesFromHash", span=""];
m25_132 [cluster="HashSet<string>.cstr", file="RedisWriteOnlyQueue.cs", label="Entry HashSet<string>.cstr", span=""];
m25_59 [cluster="Unk.QueueCommand", file="RedisWriteOnlyQueue.cs", label="Entry Unk.QueueCommand", span=""];
m25_136 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisWriteOnlyQueue.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m25_31 [cluster="Unk.PopAndPushItemBetweenLists", file="RedisWriteOnlyQueue.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m25_115 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RedisWriteOnlyQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m25_38 [cluster="Unk.AcquireLock", file="RedisWriteOnlyQueue.cs", label="Entry Unk.AcquireLock", span=""];
m25_56 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m25_97 [cluster="Unk.ContainsKey", file="RedisWriteOnlyQueue.cs", label="Entry Unk.ContainsKey", span=""];
m25_228 [file="RedisWriteOnlyQueue.cs", label="HangFire.Redis.RedisConnection", span=""];
m25_229 [file="RedisWriteOnlyQueue.cs", label=jobId, span=""];
m25_230 [file="RedisWriteOnlyQueue.cs", label=storedParameters, span=""];
m25_231 [file="RedisWriteOnlyQueue.cs", label="System.TimeSpan", span=""];
m25_232 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m25_233 [file="RedisWriteOnlyQueue.cs", label="HangFire.Server.ServerContext", span=""];
m25_234 [file="RedisWriteOnlyQueue.cs", label=queue1, span=""];
m25_235 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m25_236 [file="RedisWriteOnlyQueue.cs", label=name, span=""];
m25_237 [file="RedisWriteOnlyQueue.cs", label=heartbeats, span=""];
m26_13 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m26_74 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="105-105"];
m26_75 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="RedisWriteOnlySet.cs", label="_stateData.Name = ''NotProcessing''", span="107-107"];
m26_76 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="RedisWriteOnlySet.cs", label="var token = CreateToken()", span="108-108"];
m26_77 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="RedisWriteOnlySet.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="110-111"];
m26_78 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="105-105"];
m26_18 [cluster="Unk.GetStateData", file="RedisWriteOnlySet.cs", label="Entry Unk.GetStateData", span=""];
m26_24 [cluster="Unk.Equal", file="RedisWriteOnlySet.cs", label="Entry Unk.Equal", span=""];
m26_37 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="61-61"];
m26_38 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="RedisWriteOnlySet.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken()))", span="63-65"];
m26_39 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="RedisWriteOnlySet.cs", label="Assert.Equal(''workerContext'', exception.ParamName)", span="67-67"];
m26_40 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="61-61"];
m26_29 [cluster="System.Threading.CancellationToken.CancellationToken()", file="RedisWriteOnlySet.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m26_8 [cluster="Hangfire.Storage.StateData.StateData()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="21-21"];
m26_53 [cluster="Unk.DoesNotThrow", file="RedisWriteOnlySet.cs", label="Entry Unk.DoesNotThrow", span=""];
m26_23 [cluster="Unk.>", file="RedisWriteOnlySet.cs", label="Entry Unk.>", span=""];
m26_82 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115"];
m26_83 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="RedisWriteOnlySet.cs", label="_stateData.Data[''ServerId''] = ''AnotherServer''", span="117-117"];
m26_84 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="RedisWriteOnlySet.cs", label="var token = CreateToken()", span="118-118"];
m26_85 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="RedisWriteOnlySet.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="120-121"];
m26_86 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115"];
m26_54 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86"];
m26_55 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="RedisWriteOnlySet.cs", label="_shutdownToken = new CancellationToken(true)", span="88-88"];
m26_56 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="RedisWriteOnlySet.cs", label="var token = CreateToken()", span="89-89"];
m26_57 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="RedisWriteOnlySet.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => token.ThrowIfCancellationRequested())", span="91-92"];
m26_58 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86"];
m26_30 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51"];
m26_31 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisWriteOnlySet.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken()))", span="53-55"];
m26_32 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisWriteOnlySet.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="57-57"];
m26_33 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51"];
m26_19 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41"];
m26_20 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="RedisWriteOnlySet.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken()))", span="43-45"];
m26_21 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="RedisWriteOnlySet.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="47-47"];
m26_22 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41"];
m26_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlySet.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m26_11 [cluster="Unk.Setup", file="RedisWriteOnlySet.cs", label="Entry Unk.Setup", span=""];
m26_63 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96"];
m26_64 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="RedisWriteOnlySet.cs", label="_connection.Setup(x => x.GetStateData(It.IsAny<string>())).Returns((StateData)null)", span="98-98"];
m26_65 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="RedisWriteOnlySet.cs", label="var token = CreateToken()", span="99-99"];
m26_66 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="RedisWriteOnlySet.cs", label="Assert.Throws<JobAbortedException>(() => token.ThrowIfCancellationRequested())", span="101-101"];
m26_67 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96"];
m26_0 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m26_1 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=red, community=0, file="RedisWriteOnlySet.cs", label="0: _stateData = new StateData\r\n            {\r\n                Name = ProcessingState.StateName,\r\n                Data = new Dictionary<string, string>\r\n                {\r\n                    { ''WorkerNumber'', ''1'' },\r\n                    { ''ServerId'', ''Server'' },\r\n                }\r\n            }", span="21-29"];
m26_2 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=red, community=0, file="RedisWriteOnlySet.cs", label="0: _connection = new Mock<IStorageConnection>()", span="31-31"];
m26_3 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=red, community=0, file="RedisWriteOnlySet.cs", label="0: _connection.Setup(x => x.GetStateData(JobId)).Returns(_stateData)", span="32-32"];
m26_4 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=red, community=0, file="RedisWriteOnlySet.cs", label="0: _workerContextMock = new WorkerContextMock { WorkerNumber = 1 }", span="34-34"];
m26_5 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=red, community=0, file="RedisWriteOnlySet.cs", label="0: _workerContextMock.ServerId = ''Server''", span="35-35"];
m26_6 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="RedisWriteOnlySet.cs", label="_shutdownToken = new CancellationToken(false)", span="37-37"];
m26_7 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m26_95 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="131-131"];
m26_15 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="32-32"];
m26_16 [cluster="lambda expression", color=red, community=0, file="RedisWriteOnlySet.cs", label="0: x.GetStateData(JobId)", span="32-32"];
m26_17 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="32-32"];
m26_25 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="44-45"];
m26_26 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken())", span="44-45"];
m26_27 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="44-45"];
m26_34 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="54-55"];
m26_35 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken())", span="54-55"];
m26_36 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="54-55"];
m26_41 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="64-65"];
m26_42 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken())", span="64-65"];
m26_43 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="64-65"];
m26_60 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="token.ThrowIfCancellationRequested()", span="92-92"];
m26_59 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="92-92"];
m26_61 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="92-92"];
m26_68 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="98-98"];
m26_72 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="token.ThrowIfCancellationRequested()", span="101-101"];
m26_71 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="101-101"];
m26_69 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="x.GetStateData(It.IsAny<string>())", span="98-98"];
m26_70 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="98-98"];
m26_73 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="101-101"];
m26_80 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="token.ThrowIfCancellationRequested()", span="111-111"];
m26_79 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="111-111"];
m26_81 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="111-111"];
m26_88 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="token.ThrowIfCancellationRequested()", span="121-121"];
m26_87 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="121-121"];
m26_89 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="121-121"];
m26_96 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="token.ThrowIfCancellationRequested()", span="131-131"];
m26_97 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="131-131"];
m26_90 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125"];
m26_91 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="RedisWriteOnlySet.cs", label="_stateData.Data[''WorkerNumber''] = ''999''", span="127-127"];
m26_92 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="RedisWriteOnlySet.cs", label="var token = CreateToken()", span="128-128"];
m26_93 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="RedisWriteOnlySet.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="130-131"];
m26_94 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125"];
m26_28 [cluster="ServerJobCancellationToken.cstr", file="RedisWriteOnlySet.cs", label="Entry ServerJobCancellationToken.cstr", span=""];
m26_44 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71"];
m26_45 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="RedisWriteOnlySet.cs", label="var token = CreateToken()", span="73-73"];
m26_46 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="RedisWriteOnlySet.cs", label="Assert.Equal(_shutdownToken, token.ShutdownToken)", span="74-74"];
m26_47 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71"];
m26_14 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="RedisWriteOnlySet.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m26_62 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m26_48 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134"];
m26_98 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="RedisWriteOnlySet.cs", label="return new ServerJobCancellationToken(\r\n                JobId, _connection.Object, _workerContextMock.Object, _shutdownToken);", span="136-137"];
m26_99 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134"];
m26_49 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78"];
m26_50 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="RedisWriteOnlySet.cs", label="var token = CreateToken()", span="80-80"];
m26_51 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="RedisWriteOnlySet.cs", label="Assert.DoesNotThrow(token.ThrowIfCancellationRequested)", span="82-82"];
m26_52 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78"];
m26_12 [cluster="Unk.Returns", file="RedisWriteOnlySet.cs", label="Entry Unk.Returns", span=""];
m26_10 [cluster="Mock<IStorageConnection>.cstr", file="RedisWriteOnlySet.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m26_100 [file="RedisWriteOnlySet.cs", label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", span=""];
m26_101 [file="RedisWriteOnlySet.cs", label=token, span=""];
m26_102 [file="RedisWriteOnlySet.cs", label=token, span=""];
m26_103 [file="RedisWriteOnlySet.cs", label=token, span=""];
m26_104 [file="RedisWriteOnlySet.cs", label=token, span=""];
m26_105 [file="RedisWriteOnlySet.cs", label=token, span=""];
m27_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m27_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="49-49"];
m27_9 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="51-51"];
m27_10 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="49-49"];
m27_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m27_3 [cluster="HangFire.States.SucceededState.SerializeData()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="39-39"];
m27_4 [cluster="HangFire.States.SucceededState.SerializeData()", file="RedisWriteOnlyTransaction.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="41-44"];
m27_5 [cluster="HangFire.States.SucceededState.SerializeData()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.SucceededState.SerializeData()", span="39-39"];
m27_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m27_0 [cluster="HangFire.States.SucceededState.SucceededState()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m27_1 [cluster="HangFire.States.SucceededState.SucceededState()", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="2: SucceededAt = DateTime.UtcNow", span="29-29"];
m27_2 [cluster="HangFire.States.SucceededState.SucceededState()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.SucceededState.SucceededState()", span="27-27"];
m27_12 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54"];
m27_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="56-56"];
m27_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54"];
m27_16 [file="RedisWriteOnlyTransaction.cs", label="HangFire.States.SucceededState", span=""];
m28_6 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="RedisWriteOnlyValue.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="17-17"];
m28_7 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", color=red, community=1, file="RedisWriteOnlyValue.cs", label="1: _transaction.QueueCommand(x => x.IncrementValue(\r\n                RedisStorage.Prefix+ key))", span="19-20"];
m28_8 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="RedisWriteOnlyValue.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="17-17"];
m28_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyValue.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m28_13 [cluster="Unk.IncrementValue", file="RedisWriteOnlyValue.cs", label="Entry Unk.IncrementValue", span=""];
m28_9 [cluster="Unk.QueueCommand", file="RedisWriteOnlyValue.cs", label="Entry Unk.QueueCommand", span=""];
m28_14 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="RedisWriteOnlyValue.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="23-23"];
m28_15 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", color=red, community=0, file="RedisWriteOnlyValue.cs", label="2: _transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="25-25"];
m28_16 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="RedisWriteOnlyValue.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="23-23"];
m28_22 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", color=red, community=1, file="RedisWriteOnlyValue.cs", label="2: _transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn))", span="30-31"];
m28_21 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="RedisWriteOnlyValue.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="28-28"];
m28_23 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="RedisWriteOnlyValue.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyValue.HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="28-28"];
m28_27 [cluster="Unk.ExpireEntryIn", file="RedisWriteOnlyValue.cs", label="Entry Unk.ExpireEntryIn", span=""];
m28_20 [cluster="Unk.DecrementValue", file="RedisWriteOnlyValue.cs", label="Entry Unk.DecrementValue", span=""];
m28_24 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Entry lambda expression", span="30-31"];
m28_11 [cluster="lambda expression", color=red, community=1, file="RedisWriteOnlyValue.cs", label="1: x.IncrementValue(\r\n                RedisStorage.Prefix+ key)", span="19-20"];
m28_10 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Entry lambda expression", span="19-20"];
m28_12 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Exit lambda expression", span="19-20"];
m28_18 [cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyValue.cs", label="1: x.DecrementValue(RedisStorage.Prefix + key)", span="25-25"];
m28_17 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Entry lambda expression", span="25-25"];
m28_19 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Exit lambda expression", span="25-25"];
m28_25 [cluster="lambda expression", color=red, community=1, file="RedisWriteOnlyValue.cs", label="1: x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn)", span="30-31"];
m28_26 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Exit lambda expression", span="30-31"];
m28_0 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", file="RedisWriteOnlyValue.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", span="10-10"];
m28_1 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", color=red, community=0, file="RedisWriteOnlyValue.cs", label="2: transaction == null", span="12-12"];
m28_3 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", color=red, community=0, file="RedisWriteOnlyValue.cs", label="1: _transaction = transaction", span="14-14"];
m28_2 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", color=red, community=0, file="RedisWriteOnlyValue.cs", label="0: throw new ArgumentNullException(''transaction'');", span="12-12"];
m28_4 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", file="RedisWriteOnlyValue.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", span="10-10"];
m28_28 [file="RedisWriteOnlyValue.cs", label="HangFire.Redis.DataTypes.RedisWriteOnlyValue", span=""];
m28_29 [file="RedisWriteOnlyValue.cs", label=string, span=""];
m28_30 [file="RedisWriteOnlyValue.cs", label=string, span=""];
m28_31 [file="RedisWriteOnlyValue.cs", label=string, span=""];
m28_32 [file="RedisWriteOnlyValue.cs", label="System.TimeSpan", span=""];
m29_14 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="52-52"];
m29_15 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="ScheduledState.cs", label="2: context.Transaction.RemoveFromSet(''schedule'', context.JobId)", span="54-54"];
m29_16 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="52-52"];
m29_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25"];
m29_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ScheduledState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m29_0 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27"];
m29_1 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="EnqueueAt = enqueueAt", span="29-29"];
m29_2 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27"];
m29_12 [cluster="long.Parse(string)", file="ScheduledState.cs", label="Entry long.Parse(string)", span="0-0"];
m29_3 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m29_4 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="ScheduledState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", span="37-41"];
m29_5 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m29_13 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m29_8 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m29_9 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="var timestamp = long.Parse(stateData[''EnqueueAt''])", span="48-48"];
m29_10 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="ScheduledState.cs", label="2: context.Transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="49-49"];
m29_11 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m29_18 [file="ScheduledState.cs", label="HangFire.States.ScheduledState", span=""];
m30_128 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="133-133"];
m30_129 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="SchedulePoller.cs", label="var filter = new Mock<IServerFilter>()", span="136-136"];
m30_130 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="SchedulePoller.cs", label="_filters.Add(filter.Object)", span="137-137"];
m30_131 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="SchedulePoller.cs", label="filter.Setup(x => x.OnPerforming(It.IsNotNull<PerformingContext>())).InSequence()", span="139-139"];
m30_133 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="SchedulePoller.cs", label="filter.Setup(x => x.OnPerformed(It.IsNotNull<PerformedContext>())).InSequence()", span="141-141"];
m30_132 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).InSequence()", span="140-140"];
m30_134 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="143-143"];
m30_135 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="146-146"];
m30_136 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="133-133"];
m30_0 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", span="18-18"];
m30_1 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="SchedulePoller.cs", label="var workerContext = new WorkerContextMock()", span="20-20"];
m30_2 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="SchedulePoller.cs", label="var connection = new Mock<IStorageConnection>()", span="22-22"];
m30_5 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="SchedulePoller.cs", label="_context = new PerformContext(workerContext.Object, connection.Object, jobId, job)", span="26-26"];
m30_3 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="SchedulePoller.cs", label="string jobId = ''someId''", span="23-23"];
m30_4 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="SchedulePoller.cs", label="var job = Job.FromExpression(() => Method())", span="24-24"];
m30_6 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="SchedulePoller.cs", label="_performer = new Mock<IJobPerformer>()", span="27-27"];
m30_7 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="SchedulePoller.cs", label="_filters = new List<object>()", span="29-29"];
m30_8 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", span="18-18"];
m30_14 [cluster="System.Collections.Generic.List<T>.List()", file="SchedulePoller.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m30_70 [cluster="Mock<IServerExceptionFilter>.cstr", file="SchedulePoller.cs", label="Entry Mock<IServerExceptionFilter>.cstr", span=""];
m30_26 [cluster="Unk.Equal", file="SchedulePoller.cs", label="Entry Unk.Equal", span=""];
m30_82 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="91-91"];
m30_83 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="var filter1 = new Mock<IServerExceptionFilter>()", span="94-94"];
m30_84 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="var filter2 = new Mock<IServerExceptionFilter>()", span="95-95"];
m30_86 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="filter1.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="98-98"];
m30_87 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="_filters.Add(filter1.Object)", span="100-100"];
m30_85 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="filter2.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="97-97"];
m30_88 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="_filters.Add(filter2.Object)", span="101-101"];
m30_89 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).Throws<InvalidOperationException>()", span="103-103"];
m30_90 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="105-105"];
m30_91 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="108-109"];
m30_92 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="91-91"];
m30_19 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="33-33"];
m30_20 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="35-35"];
m30_21 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null, _performer.Object))", span="37-38"];
m30_22 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs", label="Assert.Equal(''context'', exception.ParamName)", span="40-40"];
m30_23 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="33-33"];
m30_372 [cluster="HangFire.Server.JobPerformanceProcess.JobPerformanceProcess(System.Collections.Generic.IEnumerable<object>)", file="SchedulePoller.cs", label="Entry HangFire.Server.JobPerformanceProcess.JobPerformanceProcess(System.Collections.Generic.IEnumerable<object>)", span="32-32"];
m30_24 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", span="369-369"];
m30_370 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="SchedulePoller.cs", label="return new JobPerformanceProcess(_filters);", span="371-371"];
m30_371 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", span="369-369"];
m30_9 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m30_31 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44"];
m30_32 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="46-46"];
m30_33 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", color=red, community=0, file="SchedulePoller.cs", label="2: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(_context, null))", span="48-49"];
m30_34 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="SchedulePoller.cs", label="Assert.Equal(''performer'', exception.ParamName)", span="51-51"];
m30_35 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44"];
m30_137 [cluster="Mock<IServerFilter>.cstr", file="SchedulePoller.cs", label="Entry Mock<IServerFilter>.cstr", span=""];
m30_115 [cluster="Unk.DoesNotThrow", file="SchedulePoller.cs", label="Entry Unk.DoesNotThrow", span=""];
m30_284 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="283-283"];
m30_285 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SchedulePoller.cs", label="var filter = new Mock<IServerFilter>()", span="286-286"];
m30_286 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SchedulePoller.cs", label="_filters.Add(filter.Object)", span="287-287"];
m30_289 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SchedulePoller.cs", label="filter.Setup(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="292-293"];
m30_287 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SchedulePoller.cs", label="var exception = new InvalidOperationException()", span="289-289"];
m30_288 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).Throws(exception)", span="290-290"];
m30_290 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="295-295"];
m30_291 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SchedulePoller.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="298-298"];
m30_292 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="283-283"];
m30_30 [cluster="Unk.Run", file="SchedulePoller.cs", label="Entry Unk.Run", span=""];
m30_148 [cluster="Unk.OnPerformed", file="SchedulePoller.cs", label="Entry Unk.OnPerformed", span=""];
m30_247 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SchedulePoller.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m30_40 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55"];
m30_41 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="57-57"];
m30_42 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="59-59"];
m30_43 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="SchedulePoller.cs", label="_performer.Verify(x => x.Perform(), Times.Once)", span="61-61"];
m30_44 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55"];
m30_25 [cluster="Unk.>", file="SchedulePoller.cs", label="Entry Unk.>", span=""];
m30_62 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="75-75"];
m30_63 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="SchedulePoller.cs", label="var filter = new Mock<IServerExceptionFilter>()", span="77-77"];
m30_64 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="SchedulePoller.cs", label="_filters.Add(filter.Object)", span="78-78"];
m30_68 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="SchedulePoller.cs", label="filter.Verify(x => x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>()))", span="86-87"];
m30_65 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).Throws<InvalidOperationException>()", span="80-80"];
m30_66 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="81-81"];
m30_67 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="SchedulePoller.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="83-84"];
m30_69 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="75-75"];
m30_81 [cluster="Unk.OnServerException", file="SchedulePoller.cs", label="Entry Unk.OnServerException", span=""];
m30_173 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="175-175"];
m30_174 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="SchedulePoller.cs", label="var filter = new Mock<IServerFilter>()", span="178-178"];
m30_175 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="SchedulePoller.cs", label="_filters.Add(filter.Object)", span="179-179"];
m30_176 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="SchedulePoller.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext x) => x.Canceled = true)", span="181-182"];
m30_180 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="SchedulePoller.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="191-191"];
m30_177 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="184-184"];
m30_178 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="187-187"];
m30_179 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="SchedulePoller.cs", label="_performer.Verify(x => x.Perform(), Times.Never)", span="190-190"];
m30_181 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="175-175"];
m30_261 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="261-261"];
m30_262 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="var outerFilter = new Mock<IServerFilter>()", span="264-264"];
m30_263 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="var innerFilter = new Mock<IServerFilter>()", span="265-265"];
m30_264 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="_filters.Add(outerFilter.Object)", span="267-267"];
m30_270 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))", span="279-279"];
m30_265 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="_filters.Add(innerFilter.Object)", span="268-268"];
m30_266 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="var exception = new InvalidOperationException()", span="270-270"];
m30_267 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).Throws(exception)", span="271-271"];
m30_268 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="273-273"];
m30_269 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="276-277"];
m30_271 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="261-261"];
m30_141 [cluster="Unk.OnPerforming", file="SchedulePoller.cs", label="Entry Unk.OnPerforming", span=""];
m30_216 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="217-217"];
m30_217 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="var filter = new Mock<IServerFilter>()", span="220-220"];
m30_218 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="_filters.Add(filter.Object)", span="221-221"];
m30_219 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<InvalidOperationException>()", span="223-224"];
m30_224 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="236-236"];
m30_220 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="226-226"];
m30_221 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context, _performer.Object))", span="229-230"];
m30_222 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="233-233"];
m30_223 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="_performer.Verify(x => x.Perform(), Times.Never)", span="235-235"];
m30_225 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="217-217"];
m30_71 [cluster="Unk.Add", file="SchedulePoller.cs", label="Entry Unk.Add", span=""];
m30_93 [cluster="Unk.InSequence", file="SchedulePoller.cs", label="Entry Unk.InSequence", span=""];
m30_50 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="65-65"];
m30_51 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).Throws<InvalidOperationException>()", span="67-67"];
m30_52 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="68-68"];
m30_53 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="SchedulePoller.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="70-71"];
m30_54 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="65-65"];
m30_194 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="195-195"];
m30_195 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="var outerFilter = new Mock<IServerFilter>()", span="198-198"];
m30_196 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="var innerFilter = new Mock<IServerFilter>()", span="199-199"];
m30_197 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="_filters.Add(outerFilter.Object)", span="201-201"];
m30_202 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled)))", span="213-213"];
m30_198 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="_filters.Add(innerFilter.Object)", span="202-202"];
m30_199 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext context) => context.Canceled = true)", span="204-205"];
m30_200 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="207-207"];
m30_201 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="210-210"];
m30_203 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="195-195"];
m30_13 [cluster="Mock<IJobPerformer>.cstr", file="SchedulePoller.cs", label="Entry Mock<IJobPerformer>.cstr", span=""];
m30_308 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="302-302"];
m30_309 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="var outerFilter = new Mock<IServerFilter>()", span="305-305"];
m30_310 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="var innerFilter = new Mock<IServerFilter>()", span="306-306"];
m30_311 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="_filters.Add(outerFilter.Object)", span="308-308"];
m30_317 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null)))", span="322-322"];
m30_312 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="_filters.Add(innerFilter.Object)", span="309-309"];
m30_314 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="313-314"];
m30_313 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).Throws<InvalidOperationException>()", span="311-311"];
m30_315 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="316-316"];
m30_316 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="319-319"];
m30_318 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="302-302"];
m30_351 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="345-345"];
m30_352 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="var filter = new Mock<IServerFilter>()", span="348-348"];
m30_353 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="349-350"];
m30_354 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="_filters.Add(filter.Object)", span="352-352"];
m30_355 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).Throws<ArgumentNullException>()", span="354-354"];
m30_356 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="356-356"];
m30_357 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="var exception = Assert.Throws<JobPerformanceException>(() =>\r\n                process.Run(_context, _performer.Object))", span="359-360"];
m30_358 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="362-362"];
m30_359 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="345-345"];
m30_55 [cluster="Unk.Setup", file="SchedulePoller.cs", label="Entry Unk.Setup", span=""];
m30_248 [cluster="Unk.Throws", file="SchedulePoller.cs", label="Entry Unk.Throws", span=""];
m30_106 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="115-115"];
m30_107 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).Throws<InvalidOperationException>()", span="118-118"];
m30_108 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SchedulePoller.cs", label="var filter = new Mock<IServerExceptionFilter>()", span="120-120"];
m30_109 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SchedulePoller.cs", label="filter.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>()))\r\n                .Callback((ServerExceptionContext x) => x.ExceptionHandled = true)", span="121-122"];
m30_110 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SchedulePoller.cs", label="_filters.Add(filter.Object)", span="124-124"];
m30_111 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="126-126"];
m30_112 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SchedulePoller.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="129-129"];
m30_113 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="115-115"];
m30_49 [cluster="Unk.Perform", file="SchedulePoller.cs", label="Entry Unk.Perform", span=""];
m30_366 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="359-360"];
m30_15 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="24-24"];
m30_16 [cluster="lambda expression", file="SchedulePoller.cs", label="Method()", span="24-24"];
m30_17 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="24-24"];
m30_28 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(null, _performer.Object)", span="38-38"];
m30_27 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="38-38"];
m30_29 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="38-38"];
m30_37 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, null)", span="49-49"];
m30_36 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="49-49"];
m30_38 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="49-49"];
m30_46 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="61-61"];
m30_47 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="61-61"];
m30_48 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="61-61"];
m30_56 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="67-67"];
m30_60 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="71-71"];
m30_59 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="71-71"];
m30_57 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="67-67"];
m30_58 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="67-67"];
m30_61 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="71-71"];
m30_72 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="80-80"];
m30_76 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="84-84"];
m30_75 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="84-84"];
m30_78 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="86-87"];
m30_73 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="80-80"];
m30_74 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="80-80"];
m30_77 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="84-84"];
m30_79 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>())", span="86-87"];
m30_80 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="86-87"];
m30_94 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="97-97"];
m30_97 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="98-98"];
m30_100 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="103-103"];
m30_104 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="109-109"];
m30_103 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="109-109"];
m30_95 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="97-97"];
m30_96 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="97-97"];
m30_98 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="98-98"];
m30_99 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="98-98"];
m30_101 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="103-103"];
m30_102 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="103-103"];
m30_105 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="109-109"];
m30_116 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="118-118"];
m30_119 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="121-121"];
m30_122 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="122-122"];
m30_126 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="129-129"];
m30_125 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="129-129"];
m30_117 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="118-118"];
m30_118 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="118-118"];
m30_120 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="121-121"];
m30_121 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="121-121"];
m30_123 [cluster="lambda expression", file="SchedulePoller.cs", label="x.ExceptionHandled = true", span="122-122"];
m30_124 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="122-122"];
m30_127 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="129-129"];
m30_138 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="139-139"];
m30_142 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="140-140"];
m30_145 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="141-141"];
m30_139 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerforming(It.IsNotNull<PerformingContext>())", span="139-139"];
m30_140 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="139-139"];
m30_143 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="140-140"];
m30_144 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="140-140"];
m30_146 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.IsNotNull<PerformedContext>())", span="141-141"];
m30_147 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="141-141"];
m30_161 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="161-161"];
m30_164 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="162-162"];
m30_167 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="163-163"];
m30_170 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="164-164"];
m30_162 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="161-161"];
m30_163 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="161-161"];
m30_165 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="162-162"];
m30_166 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="162-162"];
m30_168 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="163-163"];
m30_169 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="163-163"];
m30_171 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="164-164"];
m30_172 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="164-164"];
m30_182 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="181-181"];
m30_185 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="182-182"];
m30_188 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="190-190"];
m30_191 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="191-191"];
m30_183 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="181-181"];
m30_184 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="181-181"];
m30_186 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Canceled = true", span="182-182"];
m30_187 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="182-182"];
m30_189 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="190-190"];
m30_190 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="190-190"];
m30_192 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="191-191"];
m30_193 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="191-191"];
m30_204 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="204-204"];
m30_207 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="205-205"];
m30_210 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="213-213"];
m30_205 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="204-204"];
m30_206 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="204-204"];
m30_208 [cluster="lambda expression", file="SchedulePoller.cs", label="context.Canceled = true", span="205-205"];
m30_209 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="205-205"];
m30_211 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled))", span="213-213"];
m30_212 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="213-213"];
m30_213 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="213-213"];
m30_214 [cluster="lambda expression", file="SchedulePoller.cs", label="context.Canceled", span="213-213"];
m30_215 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="213-213"];
m30_226 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="223-223"];
m30_230 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="230-230"];
m30_229 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="230-230"];
m30_232 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="235-235"];
m30_235 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="236-236"];
m30_227 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="223-223"];
m30_228 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="223-223"];
m30_231 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="230-230"];
m30_233 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="235-235"];
m30_234 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="235-235"];
m30_236 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="236-236"];
m30_237 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="236-236"];
m30_256 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception))", span="256-257"];
m30_259 [cluster="lambda expression", file="SchedulePoller.cs", label="context.Exception == exception", span="257-257"];
m30_249 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="247-247"];
m30_253 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="253-253"];
m30_252 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="253-253"];
m30_255 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="256-257"];
m30_250 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="247-247"];
m30_251 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="247-247"];
m30_254 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="253-253"];
m30_257 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="256-257"];
m30_258 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="257-257"];
m30_260 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="257-257"];
m30_279 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="279-279"];
m30_282 [cluster="lambda expression", file="SchedulePoller.cs", label="context.Exception == exception", span="279-279"];
m30_272 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="271-271"];
m30_276 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="277-277"];
m30_275 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="277-277"];
m30_278 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="279-279"];
m30_273 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="271-271"];
m30_274 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="271-271"];
m30_277 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="277-277"];
m30_280 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="279-279"];
m30_281 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="279-279"];
m30_283 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="279-279"];
m30_297 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="292-292"];
m30_300 [cluster="lambda expression", file="SchedulePoller.cs", label="context.Exception == exception", span="292-292"];
m30_293 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="290-290"];
m30_296 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="292-292"];
m30_302 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="293-293"];
m30_306 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="298-298"];
m30_305 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="298-298"];
m30_294 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="290-290"];
m30_295 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="290-290"];
m30_298 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="292-292"];
m30_299 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="292-292"];
m30_301 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="292-292"];
m30_303 [cluster="lambda expression", file="SchedulePoller.cs", label="x.ExceptionHandled = true", span="293-293"];
m30_304 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="293-293"];
m30_307 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="298-298"];
m30_319 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="311-311"];
m30_322 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="313-313"];
m30_325 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="314-314"];
m30_329 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="319-319"];
m30_328 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="319-319"];
m30_331 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="322-322"];
m30_320 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="311-311"];
m30_321 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="311-311"];
m30_323 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="313-313"];
m30_324 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="313-313"];
m30_326 [cluster="lambda expression", file="SchedulePoller.cs", label="x.ExceptionHandled = true", span="314-314"];
m30_327 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="314-314"];
m30_330 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="319-319"];
m30_332 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null))", span="322-322"];
m30_333 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="322-322"];
m30_334 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="322-322"];
m30_335 [cluster="lambda expression", file="SchedulePoller.cs", label="context.Exception != null", span="322-322"];
m30_336 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="322-322"];
m30_345 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="330-330"];
m30_349 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="339-339"];
m30_348 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="338-339"];
m30_346 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="330-330"];
m30_347 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="330-330"];
m30_350 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="338-339"];
m30_360 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="349-349"];
m30_363 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="354-354"];
m30_367 [cluster="lambda expression", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="360-360"];
m30_361 [cluster="lambda expression", file="SchedulePoller.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="349-349"];
m30_362 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="349-349"];
m30_364 [cluster="lambda expression", file="SchedulePoller.cs", label="x.Perform()", span="354-354"];
m30_365 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="354-354"];
m30_368 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="359-360"];
m30_337 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="326-326"];
m30_338 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="var filter = new Mock<IServerFilter>()", span="329-329"];
m30_339 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="330-331"];
m30_340 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="_filters.Add(filter.Object)", span="333-333"];
m30_341 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="335-335"];
m30_342 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="var exception = Assert.Throws<JobPerformanceException>(() => \r\n                process.Run(_context, _performer.Object))", span="338-339"];
m30_343 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="341-341"];
m30_344 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="326-326"];
m30_45 [cluster="Unk.Verify", file="SchedulePoller.cs", label="Entry Unk.Verify", span=""];
m30_18 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", span="365-365"];
m30_369 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", span="365-365"];
m30_114 [cluster="Unk.Callback", file="SchedulePoller.cs", label="Entry Unk.Callback", span=""];
m30_11 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SchedulePoller.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m30_238 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="240-240"];
m30_239 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="SchedulePoller.cs", label="var filter = new Mock<IServerFilter>()", span="243-243"];
m30_240 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="SchedulePoller.cs", label="_filters.Add(filter.Object)", span="244-244"];
m30_245 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="SchedulePoller.cs", label="filter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception)))", span="256-257"];
m30_241 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="SchedulePoller.cs", label="var exception = new InvalidOperationException()", span="246-246"];
m30_242 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="SchedulePoller.cs", label="_performer.Setup(x => x.Perform()).Throws(exception)", span="247-247"];
m30_243 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="249-249"];
m30_244 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="SchedulePoller.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="252-253"];
m30_246 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="240-240"];
m30_39 [cluster="HangFire.Server.JobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="SchedulePoller.cs", label="Entry HangFire.Server.JobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="41-41"];
m30_10 [cluster="Mock<IStorageConnection>.cstr", file="SchedulePoller.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m30_12 [cluster="PerformContext.cstr", file="SchedulePoller.cs", label="Entry PerformContext.cstr", span=""];
m30_149 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="152-152"];
m30_150 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="var outerFilter = new Mock<IServerFilter>()", span="155-155"];
m30_151 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="var innerFilter = new Mock<IServerFilter>()", span="156-156"];
m30_152 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="_filters.Add(outerFilter.Object)", span="158-158"];
m30_154 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="outerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="161-161"];
m30_157 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="outerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="164-164"];
m30_153 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="_filters.Add(innerFilter.Object)", span="159-159"];
m30_155 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="162-162"];
m30_156 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="163-163"];
m30_158 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="var process = CreateProcess()", span="166-166"];
m30_159 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="process.Run(_context, _performer.Object)", span="169-169"];
m30_160 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SchedulePoller.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="152-152"];
m30_373 [file="SchedulePoller.cs", label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", span=""];
m30_374 [file="SchedulePoller.cs", label=process, span=""];
m30_375 [file="SchedulePoller.cs", label=process, span=""];
m30_376 [file="SchedulePoller.cs", label=process, span=""];
m30_377 [file="SchedulePoller.cs", label=process, span=""];
m30_378 [file="SchedulePoller.cs", label=process, span=""];
m30_379 [file="SchedulePoller.cs", label=process, span=""];
m30_380 [file="SchedulePoller.cs", label=process, span=""];
m30_381 [file="SchedulePoller.cs", label=process, span=""];
m30_382 [file="SchedulePoller.cs", label=exception, span=""];
m30_383 [file="SchedulePoller.cs", label=process, span=""];
m30_384 [file="SchedulePoller.cs", label=exception, span=""];
m30_385 [file="SchedulePoller.cs", label=exception, span=""];
m30_386 [file="SchedulePoller.cs", label=process, span=""];
m30_387 [file="SchedulePoller.cs", label=process, span=""];
m30_388 [file="SchedulePoller.cs", label=process, span=""];
m30_389 [file="SchedulePoller.cs", label=process, span=""];
m31_32 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="79-84"];
m31_11 [cluster="Unk.Dispose", file="SqlServerConnection.cs", label="Entry Unk.Dispose", span=""];
m31_50 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", color=green, community=0, file="SqlServerConnection.cs", label="2: _connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="117-119"];
m31_19 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerConnection.cs", label=recurringJobIds, span="64-64"];
m31_47 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerConnection.cs", label="var nextExecution = _dateTimeProvider.GetNextOccurrence(cronSchedule)", span="117-117"];
m31_0 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerConnection.cs", label="Entry HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37"];
m31_4 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", color=green, community=0, file="SqlServerConnection.cs", label="2: throw new ArgumentNullException(''client'');", span="43-43"];
m31_3 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerConnection.cs", label="client == null", span="43-43"];
m31_1 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerConnection.cs", label="storage == null", span="42-42"];
m31_2 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''storage'');", span="42-42"];
m31_5 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerConnection.cs", label="dateTimeProvider == null", span="44-44"];
m31_59 [cluster="Unk.GetNextOccurrence", file="SqlServerConnection.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m31_58 [cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m31_53 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", color=green, community=0, file="SqlServerConnection.cs", label="2: _connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="124-126"];
m31_39 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerConnection.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="92-92"];
m31_60 [cluster="HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m31_55 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129"];
m31_12 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Entry HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51"];
m31_13 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="_dateTimeProvider.CurrentDateTime.Second != 0", span="53-53"];
m31_14 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(1))", span="55-55"];
m31_43 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerConnection.cs", label="nextExecution <= currentTime", span="100-100"];
m31_44 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=0, file="SqlServerConnection.cs", label="2: var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="102-102"];
m31_45 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=0, file="SqlServerConnection.cs", label="2: var jobId = _client.Create(job, state)", span="103-103"];
m31_46 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerConnection.cs", label="connection.SetRangeInHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId),\r\n                        new Dictionary<string, string>\r\n                        {\r\n                            { ''LastExecution'', JobHelper.SerializeDateTime(currentTime) },\r\n                            { ''LastJobId'', jobId },\r\n                            { ''NextExecution'', JobHelper.SerializeDateTime(_dateTimeProvider.GetNextOccurrence(cronSchedule)) }\r\n                        })", span="105-112"];
m31_56 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="SqlServerConnection.cs", label="2: return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="131-133"];
m31_26 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (State, InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@state, @invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="57-60"];
m31_16 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var connection = _storage.GetConnection()", span="59-59"];
m31_17 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="60-60"];
m31_18 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="62-62"];
m31_6 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''dateTimeProvider'');", span="44-44"];
m31_52 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="122-122"];
m31_41 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerConnection.cs", label="recurringJob.ContainsKey(''NextExecution'')", span="96-96"];
m31_28 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters.Count > 0", span="73-73"];
m31_29 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="var parameterArray = new object[parameters.Count]", span="75-75"];
m31_38 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerConnection.cs", label="var cron = recurringJob[''Cron'']", span="91-91"];
m31_57 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129"];
m31_31 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label=parameters, span="77-77"];
m31_33 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="87-89"];
m31_8 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", color=red, community=0, file="SqlServerConnection.cs", label="2: _client = client", span="47-47"];
m31_9 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", color=red, community=0, file="SqlServerConnection.cs", label="2: _dateTimeProvider = dateTimeProvider", span="48-48"];
m31_10 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerConnection.cs", label="Exit HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37"];
m31_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="17-17"];
m31_20 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="40-40"];
m31_22 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="40-40"];
m31_24 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Logger.WarnFormat(''Recurring job '{0}' can not be scheduled due to job load exception.'', ex, recurringJobId)", span="80-80"];
m31_21 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="42-44"];
m31_23 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="28-28"];
m31_25 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51"];
m31_34 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="91-91"];
m31_36 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51"];
m31_42 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m31_48 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m31_37 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m31_40 [cluster="Unk.Single", file="SqlServerConnection.cs", label="Entry Unk.Single", span=""];
m31_49 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="115-115"];
m31_61 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="SqlServerConnection.cs", label="Entry HangFire.Server.RecurringJobScheduler.ToString()", span="128-128"];
m31_62 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="SqlServerConnection.cs", label="return ''Recurring Job Scheduler'';", span="130-130"];
m31_63 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="SqlServerConnection.cs", label="Exit HangFire.Server.RecurringJobScheduler.ToString()", span="128-128"];
m31_35 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="SqlServerConnection.cs", label="1: return jobId;", span="94-94"];
m31_27 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    state = ''Created'',\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="62-71"];
m31_51 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m31_54 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="122-122"];
m31_30 [cluster="HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m31_7 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerConnection.cs", label="_storage = storage", span="46-46"];
m31_64 [file="SqlServerConnection.cs", label="HangFire.Server.RecurringJobScheduler", span=""];
m32_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerJob.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m32_0 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="SqlServerJob.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m32_1 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="SqlServerJob.cs", label="1: exception == null", span="28-28"];
m32_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="SqlServerJob.cs", label="1: Exception = exception", span="31-31"];
m32_2 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="SqlServerJob.cs", label="1: throw new ArgumentNullException(''exception'');", span="28-28"];
m32_3 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="SqlServerJob.cs", label="1: FailedAt = DateTime.UtcNow", span="30-30"];
m32_5 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="SqlServerJob.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m32_13 [cluster="System.Exception.ToString()", file="SqlServerJob.cs", label="Entry System.Exception.ToString()", span="0-0"];
m32_7 [cluster="HangFire.States.FailedState.SerializeData()", file="SqlServerJob.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m32_8 [cluster="HangFire.States.FailedState.SerializeData()", color=red, community=0, file="SqlServerJob.cs", label="1: return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="44-50"];
m32_9 [cluster="HangFire.States.FailedState.SerializeData()", file="SqlServerJob.cs", label="Exit HangFire.States.FailedState.SerializeData()", span="42-42"];
m32_12 [cluster="System.Exception.GetType()", file="SqlServerJob.cs", label="Entry System.Exception.GetType()", span="0-0"];
m32_11 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="SqlServerJob.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m32_14 [file="SqlServerJob.cs", label="HangFire.States.FailedState", span=""];
m33_104 [cluster="Hangfire.Storage.IMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35"];
m33_110 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m33_100 [cluster="int.TryParse(string, out int)", file="SqlServerMonitoringApi.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m33_102 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m33_0 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", span="46-46"];
m33_1 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n'')", span="50-50"];
m33_2 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Layout = new LayoutPage(Strings.FailedJobsPage_Title)", span="61-61"];
m33_3 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="int from, perPage", span="63-63"];
m33_4 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="int.TryParse(Query(''from''), out from)", span="65-65"];
m33_5 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="int.TryParse(Query(''count''), out perPage)", span="66-66"];
m33_7 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="var pager = new Pager(from, perPage, monitor.FailedCount())", span="69-69"];
m33_6 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="var monitor = Storage.GetMonitoringApi()", span="68-68"];
m33_8 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="var failedJobs = monitor.FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="70-70"];
m33_14 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="pager.TotalPageCount == 0", span="101-101"];
m33_36 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Html.PerPageSelector(pager))", span="229-229"];
m33_93 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Html.Paginator(pager))", span="584-584"];
m33_9 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-3\''>\r\n        '')", span="76-76"];
m33_45 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label=failedJobs, span="288-288"];
m33_10 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Html.JobsSidebar())", span="81-81"];
m33_11 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n    </div>\r\n    <div class=\''col-md-9\''>\r\n        <h1 class=\''page-header\''>'')", span="86-86"];
m33_12 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.FailedJobsPage_Title)", span="91-91"];
m33_13 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''</h1>\r\n\r\n'')", span="96-96"];
m33_15 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''            <div class=\''alert alert-success\''>\r\n               '')", span="107-107"];
m33_18 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''            <div class=\''alert alert-warning\''>\r\n                '')", span="129-129"];
m33_16 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.FailedJobsPage_NoJobs)", span="112-112"];
m33_17 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="117-117"];
m33_19 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Html.Raw(Strings.FailedJobsPage_FailedJobsNotExpire_Warning_Html))", span="134-134"];
m33_20 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="139-139"];
m33_21 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="149-151"];
m33_22 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Url.To(''/jobs/failed/requeue''))", span="156-156"];
m33_23 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="161-161"];
m33_24 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.Common_Enqueueing)", span="166-166"];
m33_25 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-repeat\''></span>\r\n                        '')", span="171-172"];
m33_26 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.Common_RequeueJobs)", span="177-177"];
m33_27 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n                    </button>\r\n\r\n                    <button class=\''js-jobs-lis'' +\r\n''t-command btn btn-sm btn-default\''\r\n                            data-url=\'''')", span="182-183"];
m33_28 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Url.To(''/jobs/failed/delete''))", span="188-188"];
m33_29 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="193-193"];
m33_30 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.Common_Deleting)", span="198-198"];
m33_31 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\''\r\n                            data-confirm=\'''')", span="203-203"];
m33_32 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.Common_DeleteConfirm)", span="208-208"];
m33_33 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\''>\r\n                        <span class=\''glyphicon glyphicon-remove\''></span>\r\n   '' +\r\n''                     '')", span="213-214"];
m33_34 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.Common_DeleteSelected)", span="219-219"];
m33_35 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n                    </button>\r\n\r\n                    '')", span="224-224"];
m33_37 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(@''\r\n                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="234-244"];
m33_38 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.Common_Id)", span="249-249"];
m33_39 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''</th>\r\n                                <th>'')", span="254-254"];
m33_40 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.FailedJobsPage_Table_Failed)", span="259-259"];
m33_41 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''</th>\r\n                                <th>'')", span="264-264"];
m33_42 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.Common_Job)", span="269-269"];
m33_43 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="274-275"];
m33_44 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="var index = 0", span="280-280"];
m33_76 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(index == 0 ? Strings.Common_LessDetails : Strings.Common_MoreDetails)", span="474-474"];
m33_81 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(index++ == 0 ? ''display: block;'' : null)", span="508-508"];
m33_46 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                <tr class=\''js-jobs-list-row '')", span="294-294"];
m33_92 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n                '')", span="578-579"];
m33_47 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(!job.Value.InFailedState ? ''obsolete-data'' : null)", span="299-299"];
m33_48 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral('' '')", span="304-304"];
m33_49 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(job.Value.InFailedState ? ''hover'' : null)", span="309-309"];
m33_50 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\''>\r\n                                    <td rowspan=\'''')", span="314-314"];
m33_51 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="319-319"];
m33_52 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\''>\r\n'')", span="324-324"];
m33_53 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="job.Value.InFailedState", span="329-329"];
m33_54 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                            <input type=\''checkbox\'' class=\''js-jobs'' +\r\n''-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="335-336"];
m33_57 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\'' rowspan=\'''')", span="356-357"];
m33_55 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(job.Key)", span="341-341"];
m33_58 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="362-362"];
m33_56 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\'' />\r\n'')", span="346-346"];
m33_59 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\''>\r\n                                        '')", span="367-367"];
m33_60 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Html.JobIdLink(job.Key))", span="372-372"];
m33_61 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n'')", span="377-377"];
m33_62 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="!job.Value.InFailedState", span="382-382"];
m33_63 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                            <span title=\'''')", span="388-388"];
m33_66 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\''>\r\n'')", span="408-409"];
m33_67 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="job.Value.FailedAt.HasValue", span="414-414"];
m33_64 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Strings.Common_JobStateChanged_Text)", span="393-393"];
m33_65 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="398-398"];
m33_68 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Html.RelativeTime(job.Value.FailedAt.Value))", span="422-422"];
m33_69 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d>\r\n                                        <div>\r\n                             '' +\r\n''               '')", span="435-437"];
m33_70 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Html.JobNameLink(job.Key, job.Value.Job))", span="442-442"];
m33_71 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n                                        </div>\r\n'')", span="447-447"];
m33_72 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="!String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="452-452"];
m33_73 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                            <div style=\''color: #888;\''>\r\n         '' +\r\n''                                       '')", span="458-459"];
m33_78 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                    </td>\r\n                                </tr>\r'' +\r\n''\n'')", span="489-490"];
m33_74 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(job.Value.Reason)", span="464-464"];
m33_79 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="job.Value.InFailedState", span="495-495"];
m33_75 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral('' <a class=\''expander\'' href=\''#\''>'')", span="469-469"];
m33_77 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''</a>\r\n                                            </div>\r\n'')", span="479-479"];
m33_80 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                    <tr>\r\n                                       '' +\r\n'' <td colspan=\''2\'' class=\''failed-job-details\''>\r\n                                  '' +\r\n''          <div class=\''expandable\'' style=\'''')", span="501-503"];
m33_83 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(job.Value.ExceptionType)", span="518-518"];
m33_82 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\''>\r\n                                                <h4>'')", span="513-513"];
m33_84 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''</h4>\r\n                                                <p class=\''text-muted\''>\r\n  '' +\r\n''                                                  '')", span="523-524"];
m33_85 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(job.Value.ExceptionMessage)", span="529-529"];
m33_86 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n                                                </p>\r\n\r\n'')", span="534-534"];
m33_87 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="539-539"];
m33_88 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                                    <pre class=\''stack-trace\''><cod'' +\r\n''e>'')", span="545-546"];
m33_91 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''                                            </div>\r\n                             '' +\r\n''           </td>\r\n                                    </tr>\r\n'')", span="566-567"];
m33_89 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Write(Html.StackTrace(job.Value.ExceptionDetails))", span="551-551"];
m33_90 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''</code></pre>\r\n'')", span="556-556"];
m33_94 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="589-589"];
m33_95 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="WriteLiteral(''    </div>\r\n</div>'')", span="599-599"];
m33_96 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", span="46-46"];
m33_103 [cluster="Hangfire.Storage.IMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.IMonitoringApi.FailedCount()", span="41-41"];
m33_105 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m33_109 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m33_112 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m33_114 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250"];
m33_113 [cluster="string.IsNullOrEmpty(string)", file="SqlServerMonitoringApi.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m33_97 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m33_107 [cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87"];
m33_115 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m33_111 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m33_99 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m33_101 [cluster="Hangfire.JobStorage.GetMonitoringApi()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54"];
m33_106 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m33_108 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m33_98 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m33_116 [file="SqlServerMonitoringApi.cs", label="Hangfire.Dashboard.Pages.FailedJobsPage", span=""];
m34_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", file="SqlServerSet.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", span="16-16"];
m34_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", color=red, community=2, file="SqlServerSet.cs", label="1: return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="18-21"];
m34_5 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", file="SqlServerSet.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", span="16-16"];
m34_7 [cluster="Unk.SingleOrDefault", file="SqlServerSet.cs", label="Entry Unk.SingleOrDefault", span=""];
m34_6 [cluster="Unk.>", file="SqlServerSet.cs", label="Entry Unk.>", span=""];
m34_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="SqlServerSet.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11"];
m34_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", color=red, community=0, file="SqlServerSet.cs", label="0: _connection = connection", span="13-13"];
m34_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="SqlServerSet.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11"];
m34_8 [file="SqlServerSet.cs", label="HangFire.SqlServer.DataTypes.SqlServerSet", span=""];
m35_20 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyCounter.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m35_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyCounter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m35_14 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string, System.TimeSpan)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string, System.TimeSpan)", span="24-24"];
m35_15 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string, System.TimeSpan)", color=red, community=1, file="SqlServerWriteOnlyCounter.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="26-28"];
m35_16 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string, System.TimeSpan)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string, System.TimeSpan)", span="24-24"];
m35_21 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string)", span="31-31"];
m35_22 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string)", color=red, community=1, file="SqlServerWriteOnlyCounter.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="33-35"];
m35_23 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string)", span="31-31"];
m35_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string)", span="17-17"];
m35_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string)", color=red, community=1, file="SqlServerWriteOnlyCounter.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="19-21"];
m35_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Increment(string)", span="17-17"];
m35_13 [cluster="Unk.Execute", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Execute", span=""];
m35_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m35_30 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="40-42"];
m35_11 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyCounter.cs", label="1: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="19-21"];
m35_10 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="19-21"];
m35_12 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="19-21"];
m35_18 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyCounter.cs", label="1: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="26-28"];
m35_17 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="26-28"];
m35_19 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="26-28"];
m35_25 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyCounter.cs", label="1: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="33-35"];
m35_24 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="33-35"];
m35_26 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="33-35"];
m35_31 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyCounter.cs", label="1: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="40-42"];
m35_32 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="40-42"];
m35_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m35_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: transaction == null", span="12-12"];
m35_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: _transaction = transaction", span="14-14"];
m35_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: throw new ArgumentNullException(''transaction'');", span="12-12"];
m35_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m35_27 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string, System.TimeSpan)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string, System.TimeSpan)", span="38-38"];
m35_28 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string, System.TimeSpan)", color=red, community=1, file="SqlServerWriteOnlyCounter.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="40-42"];
m35_29 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string, System.TimeSpan)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.Decrement(string, System.TimeSpan)", span="38-38"];
m35_33 [file="SqlServerWriteOnlyCounter.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter", span=""];
m35_34 [file="SqlServerWriteOnlyCounter.cs", label=string, span=""];
m35_35 [file="SqlServerWriteOnlyCounter.cs", label=string, span=""];
m35_36 [file="SqlServerWriteOnlyCounter.cs", label="System.TimeSpan", span=""];
m35_37 [file="SqlServerWriteOnlyCounter.cs", label=string, span=""];
m35_38 [file="SqlServerWriteOnlyCounter.cs", label=string, span=""];
m35_39 [file="SqlServerWriteOnlyCounter.cs", label="System.TimeSpan", span=""];
m36_13 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyJob.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m36_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m36_27 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m36_28 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="40-40"];
m36_29 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=1, file="SqlServerWriteOnlyJob.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="42-45"];
m36_30 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="40-40"];
m36_15 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", span="26-26"];
m36_16 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", color=red, community=1, file="SqlServerWriteOnlyJob.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="28-30"];
m36_17 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", span="26-26"];
m36_14 [cluster="Unk.Execute", file="SqlServerWriteOnlyJob.cs", label="Entry Unk.Execute", span=""];
m36_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19"];
m36_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", color=red, community=1, file="SqlServerWriteOnlyJob.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="21-23"];
m36_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19"];
m36_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m36_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="12-12"];
m36_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyJob.cs", label="1: transaction == null", span="14-14"];
m36_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyJob.cs", label="1: _transaction = transaction", span="16-16"];
m36_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyJob.cs", label="1: throw new ArgumentNullException(''transaction'');", span="14-14"];
m36_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="12-12"];
m36_31 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Entry lambda expression", span="42-45"];
m36_11 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyJob.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="21-23"];
m36_10 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Entry lambda expression", span="21-23"];
m36_12 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Exit lambda expression", span="21-23"];
m36_19 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyJob.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="28-30"];
m36_18 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Entry lambda expression", span="28-30"];
m36_20 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Exit lambda expression", span="28-30"];
m36_25 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyJob.cs", label="1: x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="35-37"];
m36_24 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Entry lambda expression", span="35-37"];
m36_26 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Exit lambda expression", span="35-37"];
m36_32 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyJob.cs", label="0: x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="42-45"];
m36_33 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Exit lambda expression", span="42-45"];
m36_21 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="33-33"];
m36_22 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=1, file="SqlServerWriteOnlyJob.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="35-37"];
m36_23 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="33-33"];
m36_34 [file="SqlServerWriteOnlyJob.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", span=""];
m36_35 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m36_36 [file="SqlServerWriteOnlyJob.cs", label="System.TimeSpan", span=""];
m36_37 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m36_38 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m36_39 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m36_40 [file="SqlServerWriteOnlyJob.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m36_41 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m36_42 [file="SqlServerWriteOnlyJob.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m37_14 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24"];
m37_15 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="26-28"];
m37_16 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24"];
m37_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyList.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m37_13 [cluster="Unk.Execute", file="SqlServerWriteOnlyList.cs", label="Entry Unk.Execute", span=""];
m37_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m37_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyList.cs", label="1: transaction == null", span="12-12"];
m37_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyList.cs", label="1: _transaction = transaction", span="14-14"];
m37_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyList.cs", label="1: throw new ArgumentNullException(''transaction'');", span="12-12"];
m37_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m37_20 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31"];
m37_21 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="33-36"];
m37_22 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="38-40"];
m37_23 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31"];
m37_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m37_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m37_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="19-21"];
m37_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m37_24 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="38-40"];
m37_11 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="19-21"];
m37_10 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="19-21"];
m37_12 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="19-21"];
m37_18 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="26-28"];
m37_17 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="26-28"];
m37_19 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="26-28"];
m37_25 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="38-40"];
m37_26 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="38-40"];
m37_27 [file="SqlServerWriteOnlyList.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", span=""];
m37_28 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m37_29 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m37_30 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m37_31 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m37_32 [file="SqlServerWriteOnlyList.cs", label=int, span=""];
m37_33 [file="SqlServerWriteOnlyList.cs", label=int, span=""];
m37_34 [file="SqlServerWriteOnlyList.cs", label=trimSql, span=""];
m38_17 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SqlServerWriteOnlyQueue.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m38_19 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m38_20 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="Assert.IsNotNull(filterContext)", span="48-48"];
m38_21 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreated'') \r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="50-51"];
m38_23 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="filterContext.ExceptionHandled = true", span="55-55"];
m38_22 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label=_handlesException, span="53-53"];
m38_24 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m38_16 [cluster="string.Format(string, object, object)", file="SqlServerWriteOnlyQueue.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m38_7 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m38_8 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="Assert.IsNotNull(filterContext)", span="31-31"];
m38_11 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="filterContext.Canceled = true", span="37-37"];
m38_9 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="33-33"];
m38_10 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label=_cancelsTheCreation, span="35-35"];
m38_12 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label=_throwException, span="40-40"];
m38_13 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="throw new Exception();", span="42-42"];
m38_14 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m38_18 [cluster="System.Exception.Exception()", file="SqlServerWriteOnlyQueue.cs", label="Entry System.Exception.Exception()", span="0-0"];
m38_0 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m38_1 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: _name = name", span="22-22"];
m38_2 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: _results = results", span="23-23"];
m38_3 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: _throwException = throwException", span="24-24"];
m38_4 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: _cancelsTheCreation = cancelsTheCreation", span="25-25"];
m38_5 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: _handlesException = handlesException", span="26-26"];
m38_6 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m38_15 [cluster="Unk.IsNotNull", file="SqlServerWriteOnlyQueue.cs", label="Entry Unk.IsNotNull", span=""];
m38_25 [file="SqlServerWriteOnlyQueue.cs", label="HangFire.Tests.TestClientFilter", span=""];
m40_10 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m40_80 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="115-115"];
m40_81 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: AddToSet(key, value, 0.0)", span="117-117"];
m40_82 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="115-115"];
m40_96 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="141-141"];
m40_97 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="143-145"];
m40_98 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="141-141"];
m40_83 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="120-120"];
m40_84 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="122-127"];
m40_85 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="129-131"];
m40_86 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="120-120"];
m40_62 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="94-94"];
m40_63 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="96-98"];
m40_64 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="94-94"];
m40_20 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m40_14 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m40_36 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="61-61"];
m40_37 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="63-65"];
m40_38 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="61-61"];
m40_108 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="155-155"];
m40_109 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="157-160"];
m40_110 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="162-164"];
m40_111 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="155-155"];
m40_17 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m40_18 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _commandQueue.Enqueue(action)", span="41-41"];
m40_141 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _commandQueue.Enqueue(action)", span="220-220"];
m40_19 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m40_13 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m40_32 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="54-54"];
m40_29 [cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Execute", span=""];
m40_11 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="12-12"];
m40_31 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="56-58"];
m40_68 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="101-101"];
m40_69 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="103-105"];
m40_70 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="101-101"];
m40_74 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="108-108"];
m40_75 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="110-112"];
m40_76 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="108-108"];
m40_33 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="56-58"];
m40_28 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m40_90 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="134-134"];
m40_91 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="136-138"];
m40_92 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="134-134"];
m40_21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m40_22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="46-48"];
m40_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="50-50"];
m40_9 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m40_102 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="148-148"];
m40_103 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="150-152"];
m40_104 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="148-148"];
m40_43 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="68-68"];
m40_44 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="70-73"];
m40_45 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="68-68"];
m40_26 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="49-51"];
m40_24 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label=_commandQueue, span="52-52"];
m40_25 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="49-51"];
m40_27 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="49-51"];
m40_30 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="54-54"];
m40_135 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="211-211"];
m40_136 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="213-215"];
m40_137 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="211-211"];
m40_138 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="213-215"];
m40_34 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m40_35 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="56-58"];
m40_39 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="63-65"];
m40_40 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="63-65"];
m40_41 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="63-65"];
m40_46 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="70-73"];
m40_47 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="70-73"];
m40_48 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="70-73"];
m40_54 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="82-84"];
m40_53 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="82-84"];
m40_55 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="82-84"];
m40_59 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="89-91"];
m40_60 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="89-91"];
m40_61 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="89-91"];
m40_65 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="96-98"];
m40_66 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="96-98"];
m40_67 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="96-98"];
m40_71 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="103-105"];
m40_72 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="103-105"];
m40_73 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="103-105"];
m40_77 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="110-112"];
m40_78 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="110-112"];
m40_79 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="110-112"];
m40_88 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="129-131"];
m40_87 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="129-131"];
m40_89 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="129-131"];
m40_93 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="136-138"];
m40_94 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="136-138"];
m40_95 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="136-138"];
m40_99 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="143-145"];
m40_100 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="143-145"];
m40_101 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="143-145"];
m40_105 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="150-152"];
m40_106 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="150-152"];
m40_107 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="150-152"];
m40_113 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="162-164"];
m40_112 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="162-164"];
m40_114 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="162-164"];
m40_123 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="184-184"];
m40_120 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="178-186"];
m40_121 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: var affectedRows = x.Execute(updateSql, new { key })", span="180-180"];
m40_122 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: affectedRows == 0", span="182-182"];
m40_124 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="178-186"];
m40_133 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="206-206"];
m40_130 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="200-208"];
m40_131 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: var affectedRows = x.Execute(updateSql, new { key })", span="202-202"];
m40_132 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: affectedRows == 0", span="204-204"];
m40_134 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="200-208"];
m40_139 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="213-215"];
m40_140 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="213-215"];
m40_125 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="189-189"];
m40_126 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="191-196"];
m40_127 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="197-198"];
m40_128 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="200-208"];
m40_129 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="189-189"];
m40_0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="16-16"];
m40_1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _connection = connection", span="18-18"];
m40_2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: Lists = new SqlServerWriteOnlyList(this)", span="20-20"];
m40_3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="2: Queues = new SqlServerWriteOnlyQueue(this)", span="21-21"];
m40_4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Jobs = new SqlServerWriteOnlyJob(this)", span="22-22"];
m40_5 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Sets = new SqlServerWriteOnlySet(this)", span="23-23"];
m40_6 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Values = new SqlServerWriteOnlyValue(this)", span="24-24"];
m40_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Counters = new SqlServerWriteOnlyCounter(this)", span="25-25"];
m40_8 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="16-16"];
m40_115 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="167-167"];
m40_116 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="169-174"];
m40_117 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="175-176"];
m40_118 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="178-186"];
m40_119 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="167-167"];
m40_42 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m40_49 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="76-76"];
m40_50 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="78-80"];
m40_51 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="82-84"];
m40_52 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="76-76"];
m40_12 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m40_56 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="87-87"];
m40_57 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="89-91"];
m40_58 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="87-87"];
m40_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="28-28"];
m40_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="28-28"];
m40_145 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_146 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m40_147 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_148 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_149 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_150 [file="SqlServerWriteOnlyTransaction.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m40_151 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_152 [file="SqlServerWriteOnlyTransaction.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m40_153 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_154 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_155 [file="SqlServerWriteOnlyTransaction.cs", label=enqueueJobSql, span=""];
m40_156 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_157 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_158 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m40_159 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_160 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_161 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m40_162 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_163 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_164 [file="SqlServerWriteOnlyTransaction.cs", label=double, span=""];
m40_165 [file="SqlServerWriteOnlyTransaction.cs", label=addSql, span=""];
m40_166 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_167 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_168 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_169 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_170 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_171 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_172 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m40_173 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m40_174 [file="SqlServerWriteOnlyTransaction.cs", label=trimSql, span=""];
m40_175 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_176 [file="SqlServerWriteOnlyTransaction.cs", label=updateSql, span=""];
m40_177 [file="SqlServerWriteOnlyTransaction.cs", label=insertSql, span=""];
m40_178 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_179 [file="SqlServerWriteOnlyTransaction.cs", label=updateSql, span=""];
m40_180 [file="SqlServerWriteOnlyTransaction.cs", label=insertSql, span=""];
m40_181 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m40_182 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m41_34 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m41_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyValue.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m41_17 [cluster="Unk.Execute", file="SqlServerWriteOnlyValue.cs", label="Entry Unk.Execute", span=""];
m41_28 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", span="61-61"];
m41_29 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", color=red, community=1, file="SqlServerWriteOnlyValue.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="63-65"];
m41_30 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", span="61-61"];
m41_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", span="17-17"];
m41_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", color=red, community=1, file="SqlServerWriteOnlyValue.cs", label="1: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="19-24"];
m41_9 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", color=red, community=1, file="SqlServerWriteOnlyValue.cs", label="0: _transaction.QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="28-36"];
m41_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", color=red, community=1, file="SqlServerWriteOnlyValue.cs", label="0: string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="25-26"];
m41_10 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", file="SqlServerWriteOnlyValue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", span="17-17"];
m41_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m41_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m41_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyValue.cs", label="1: transaction == null", span="12-12"];
m41_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyValue.cs", label="1: _transaction = transaction", span="14-14"];
m41_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyValue.cs", label="1: throw new ArgumentNullException(''transaction'');", span="12-12"];
m41_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyValue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m41_31 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Entry lambda expression", span="63-65"];
m41_13 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyValue.cs", label="0: var affectedRows = x.Execute(updateSql, new { key })", span="30-30"];
m41_15 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyValue.cs", label="1: x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="34-34"];
m41_12 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Entry lambda expression", span="28-36"];
m41_14 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyValue.cs", label="1: affectedRows == 0", span="32-32"];
m41_16 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Exit lambda expression", span="28-36"];
m41_24 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyValue.cs", label="0: var affectedRows = x.Execute(updateSql, new { key })", span="52-52"];
m41_26 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyValue.cs", label="0: x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="56-56"];
m41_23 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Entry lambda expression", span="50-58"];
m41_25 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyValue.cs", label="0: affectedRows == 0", span="54-54"];
m41_27 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Exit lambda expression", span="50-58"];
m41_32 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyValue.cs", label="2: x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="63-65"];
m41_33 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Exit lambda expression", span="63-65"];
m41_18 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", span="39-39"];
m41_19 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", color=red, community=1, file="SqlServerWriteOnlyValue.cs", label="0: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="41-46"];
m41_21 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", color=red, community=1, file="SqlServerWriteOnlyValue.cs", label="0: _transaction.QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="50-58"];
m41_20 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", color=red, community=1, file="SqlServerWriteOnlyValue.cs", label="0: string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="47-48"];
m41_22 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", file="SqlServerWriteOnlyValue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", span="39-39"];
m41_35 [file="SqlServerWriteOnlyValue.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", span=""];
m41_36 [file="SqlServerWriteOnlyValue.cs", label=string, span=""];
m41_37 [file="SqlServerWriteOnlyValue.cs", label=updateSql, span=""];
m41_38 [file="SqlServerWriteOnlyValue.cs", label=insertSql, span=""];
m41_39 [file="SqlServerWriteOnlyValue.cs", label=string, span=""];
m41_40 [file="SqlServerWriteOnlyValue.cs", label=updateSql, span=""];
m41_41 [file="SqlServerWriteOnlyValue.cs", label=insertSql, span=""];
m41_42 [file="SqlServerWriteOnlyValue.cs", label=string, span=""];
m41_43 [file="SqlServerWriteOnlyValue.cs", label="System.TimeSpan", span=""];
m42_15 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs", label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m42_16 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", color=red, community=2, file="StateChangingContext.cs", label="1: return JobHelper.FromJson<T>(Connection.Jobs.GetParameter(\r\n                JobId, name));", span="64-65"];
m42_17 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs", label="Exit HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m42_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateChangingContext.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m42_10 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs", label="Entry HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m42_11 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", color=red, community=0, file="StateChangingContext.cs", label="1: Connection.Jobs.SetParameter(JobId, name, JobHelper.ToJson(value))", span="59-59"];
m42_12 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs", label="Exit HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m42_13 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateChangingContext.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m42_18 [cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="StateChangingContext.cs", label="Entry HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8"];
m42_19 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StateChangingContext.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m42_14 [cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="StateChangingContext.cs", label="Entry HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7"];
m42_0 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m42_1 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="candidateState == null", span="32-32"];
m42_3 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="connection == null", span="33-33"];
m42_5 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="CandidateState = candidateState", span="35-35"];
m42_6 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="CurrentState = currentState", span="36-36"];
m42_7 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="Connection = connection", span="37-37"];
m42_2 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="throw new ArgumentNullException(''candidateState'');", span="32-32"];
m42_4 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="throw new ArgumentNullException(''connection'');", span="33-33"];
m42_8 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="Exit HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m42_20 [file="StateChangingContext.cs", label="HangFire.Common.States.StateChangingContext", span=""];
m44_92 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194"];
m44_104 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="var transaction = _connection.CreateWriteTransaction()", span="198-198"];
m44_105 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="200-202"];
m44_106 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="204-204"];
m44_107 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="return transaction.Commit();", span="206-206"];
m44_108 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194"];
m44_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m44_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="StateMachine.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m44_145 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m44_161 [cluster="System.Collections.Generic.List<T>.List()", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m44_93 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StateMachine.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m44_50 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m44_94 [cluster="string.Format(string, object, object)", file="StateMachine.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m44_87 [cluster="string.IsNullOrWhiteSpace(string)", file="StateMachine.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m44_128 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="StateMachine.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m44_59 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m44_49 [cluster="System.TimeSpan.FromHours(double)", file="StateMachine.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m44_91 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="StateMachine.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m44_127 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="26-26"];
m44_17 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="287-287"];
m44_153 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="handler == null", span="289-289"];
m44_155 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="String.IsNullOrEmpty(handler.StateName)", span="290-290"];
m44_157 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="!_handlers.ContainsKey(handler.StateName)", span="292-292"];
m44_158 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="294-294"];
m44_159 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="_handlers[handler.StateName].Add(handler)", span="297-297"];
m44_154 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="throw new ArgumentNullException(''handler'');", span="289-289"];
m44_156 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateName'');", span="290-290"];
m44_160 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="287-287"];
m44_0 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m44_1 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m44_53 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateMachine.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m44_152 [cluster="System.Func<T, TResult>.Invoke(T)", file="StateMachine.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m44_125 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m44_55 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m44_25 [cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="StateMachine.cs", label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38"];
m44_26 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m44_27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="method == null", span="69-69"];
m44_29 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="parameters == null", span="70-70"];
m44_31 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="state == null", span="71-71"];
m44_33 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78"];
m44_34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84"];
m44_35 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var filterInfo = GetFilters(method)", span="86-86"];
m44_36 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var context = new StateContext(jobId, method)", span="87-87"];
m44_37 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88"];
m44_28 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="throw new ArgumentNullException(''method'');", span="69-69"];
m44_30 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="throw new ArgumentNullException(''parameters'');", span="70-70"];
m44_32 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="throw new ArgumentNullException(''state'');", span="71-71"];
m44_42 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=green, community=0, file="StateMachine.cs", label="2: transaction.PersistJob(jobId)", span="104-104"];
m44_44 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="return jobId;", span="110-110"];
m44_38 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90"];
m44_41 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="ApplyState(\r\n                    changedContext, \r\n                    null,\r\n                    changingContext.CandidateState,\r\n                    filterInfo.StateChangedFilters)", span="98-102"];
m44_40 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="94-96"];
m44_39 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var transaction = _connection.CreateWriteTransaction()", span="92-92"];
m44_43 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="transaction.Commit()", span="107-107"];
m44_45 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m44_15 [cluster="HangFire.JobStorage.GetStateHandlers()", file="StateMachine.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52"];
m44_95 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateMachine.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m44_151 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="StateMachine.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m44_146 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m44_144 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="StateMachine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m44_123 [cluster="string.IsNullOrEmpty(string)", file="StateMachine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m44_56 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateMachine.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m44_88 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m44_129 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259"];
m44_135 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=2, file="StateMachine.cs", label="0: var properties = new Dictionary<string, string>(\r\n                state.GetProperties(context.JobMethod))", span="265-266"];
m44_137 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: properties.Add(''State'', state.StateName)", span="269-269"];
m44_138 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: appendToJob", span="271-271"];
m44_139 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: transaction.Jobs.SetState(context.JobId, state.StateName, properties)", span="273-273"];
m44_140 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: properties.Add(''Reason'', state.Reason)", span="276-276"];
m44_142 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: transaction.Jobs.AppendHistory(context.JobId, properties)", span="279-279"];
m44_136 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: var now = DateTime.UtcNow", span="267-267"];
m44_141 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="277-277"];
m44_143 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259"];
m44_48 [cluster="Unk.ToJson", file="StateMachine.cs", label="Entry Unk.ToJson", span=""];
m44_60 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="77-77"];
m44_19 [cluster="lambda expression", file="StateMachine.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m44_18 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="59-59"];
m44_20 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="59-59"];
m44_22 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="59-59"];
m44_23 [cluster="lambda expression", file="StateMachine.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59"];
m44_24 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="59-59"];
m44_61 [cluster="lambda expression", file="StateMachine.cs", label="x.ParameterType", span="77-77"];
m44_62 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="77-77"];
m44_147 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateMachine.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m44_21 [cluster="Unk.Select", file="StateMachine.cs", label="Entry Unk.Select", span=""];
m44_54 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m44_96 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label=filters, span="182-182"];
m44_97 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="var oldState = context.CandidateState", span="184-184"];
m44_98 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="filter.OnStateChanging(context)", span="185-185"];
m44_99 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="oldState != context.CandidateState", span="187-187"];
m44_100 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", color=green, community=0, file="StateMachine.cs", label="0: AppendHistory(context, oldState, false)", span="189-189"];
m44_101 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m44_57 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m44_109 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="!String.IsNullOrEmpty(oldState)", span="216-216"];
m44_110 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="_handlers.ContainsKey(oldState)", span="218-218"];
m44_111 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="_handlers[oldState]", span="220-220"];
m44_112 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="handler.Unapply(context)", span="222-222"];
m44_113 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label=stateChangedFilters, span="226-226"];
m44_114 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="filter.OnStateUnapplied(context)", span="228-228"];
m44_115 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="_handlers.ContainsKey(chosenState.StateName)", span="232-232"];
m44_116 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="var stateData = chosenState.GetProperties(context.JobMethod)", span="234-234"];
m44_117 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="_handlers[chosenState.StateName]", span="235-235"];
m44_118 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="handler.Apply(context, stateData)", span="237-237"];
m44_119 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: AppendHistory(context.Transaction, context, chosenState, true)", span="241-241"];
m44_120 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label=stateChangedFilters, span="243-243"];
m44_121 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=green, community=0, file="StateMachine.cs", label="1: filter.OnStateApplied(context)", span="245-245"];
m44_122 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m44_63 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m44_64 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="String.IsNullOrWhiteSpace(jobId)", span="116-116"];
m44_66 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="state == null", span="117-117"];
m44_68 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="_connection.AcquireJobLock(jobId)", span="119-119"];
m44_69 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=green, community=0, file="StateMachine.cs", label="1: var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123"];
m44_73 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="132-132"];
m44_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var context = new StateContext(jobId, jobMethod)", span="142-142"];
m44_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143"];
m44_82 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(ex)\r\n                            {\r\n                                Reason = String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId)\r\n                            },\r\n                            currentState,\r\n                            _connection)", span="156-165"];
m44_65 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''jobId'');", span="116-116"];
m44_67 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''state'');", span="117-117"];
m44_70 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="jobData == null", span="125-125"];
m44_72 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var currentState = jobData.State", span="131-131"];
m44_75 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="139-139"];
m44_71 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="return false;", span="128-128"];
m44_74 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="return false;", span="134-134"];
m44_76 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var filterInfo = GetFilters(jobMethod)", span="140-140"];
m44_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145"];
m44_80 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147"];
m44_81 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label=JobLoadException, span="149-149"];
m44_83 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="167-169"];
m44_84 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label=Exception, span="172-172"];
m44_85 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="throw;", span="174-174"];
m44_86 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m44_102 [cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m44_130 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m44_163 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m44_58 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="9-9"];
m44_51 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m44_149 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="StateMachine.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="284-284"];
m44_150 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m44_148 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m44_126 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m44_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="StateMachine.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m44_47 [cluster="System.Reflection.MethodBase.GetParameters()", file="StateMachine.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m44_103 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249"];
m44_131 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: var transaction = _connection.CreateWriteTransaction()", span="252-252"];
m44_132 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: AppendHistory(transaction, context, state, appendToJob)", span="254-254"];
m44_133 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="0: transaction.Commit()", span="255-255"];
m44_134 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249"];
m44_162 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m44_52 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m44_46 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="StateMachine.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m44_89 [cluster="HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", span="6-6"];
m44_2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m44_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="connection == null", span="46-46"];
m44_5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="stateHandlers == null", span="47-47"];
m44_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="_connection = connection", span="49-49"];
m44_8 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51"];
m44_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="filters != null", span="57-57"];
m44_12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m44_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="throw new ArgumentNullException(''connection'');", span="46-46"];
m44_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateHandlers'');", span="47-47"];
m44_9 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label=handlers, span="52-52"];
m44_10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="RegisterHandler(handler)", span="54-54"];
m44_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m44_164 [file="StateMachine.cs", label="HangFire.States.StateMachine", span=""];
m44_165 [file="StateMachine.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m45_17 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="StateSteps.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m45_19 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="StateSteps.cs", label="Entry HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m45_20 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="StateSteps.cs", label="Assert.IsNotNull(filterContext)", span="48-48"];
m45_21 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="StateSteps.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreated'') \r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="50-51"];
m45_23 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="StateSteps.cs", label="filterContext.ExceptionHandled = true", span="55-55"];
m45_22 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="StateSteps.cs", label=_handlesException, span="53-53"];
m45_24 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="StateSteps.cs", label="Exit HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m45_16 [cluster="string.Format(string, object, object)", file="StateSteps.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m45_7 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="StateSteps.cs", label="Entry HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m45_8 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="StateSteps.cs", label="Assert.IsNotNull(filterContext)", span="31-31"];
m45_11 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="StateSteps.cs", label="filterContext.Canceled = true", span="37-37"];
m45_9 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="StateSteps.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="33-33"];
m45_10 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="StateSteps.cs", label=_cancelsTheCreation, span="35-35"];
m45_12 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="StateSteps.cs", label=_throwException, span="40-40"];
m45_13 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="StateSteps.cs", label="throw new Exception();", span="42-42"];
m45_14 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="StateSteps.cs", label="Exit HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m45_18 [cluster="System.Exception.Exception()", file="StateSteps.cs", label="Entry System.Exception.Exception()", span="0-0"];
m45_0 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="StateSteps.cs", label="Entry HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m45_1 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="StateSteps.cs", label="_name = name", span="22-22"];
m45_2 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="StateSteps.cs", label="_results = results", span="23-23"];
m45_3 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="StateSteps.cs", label="_throwException = throwException", span="24-24"];
m45_4 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="StateSteps.cs", label="_cancelsTheCreation = cancelsTheCreation", span="25-25"];
m45_5 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="StateSteps.cs", label="_handlesException = handlesException", span="26-26"];
m45_6 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="StateSteps.cs", label="Exit HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m45_15 [cluster="Unk.IsNotNull", file="StateSteps.cs", label="Entry Unk.IsNotNull", span=""];
m45_25 [file="StateSteps.cs", label="HangFire.Tests.TestClientFilter", span=""];
m46_3 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m46_4 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="var transaction = context.Connection.CreateWriteTransaction()", span="32-32"];
m46_5 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="context.CandidateState.StateName == SucceededState.Name", span="34-34"];
m46_8 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="context.CandidateState.StateName == FailedState.Name", span="48-48"];
m46_6 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="0: transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="36-40"];
m46_7 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="2: transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="42-46"];
m46_9 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="1: transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'', \r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="50-54"];
m46_10 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="2: transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="56-60"];
m46_11 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="transaction.Commit()", span="63-63"];
m46_12 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m46_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="18-18"];
m46_14 [cluster="System.DateTime.ToString(string)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m46_13 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m46_0 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m46_1 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="StatisticsHistoryFilterAttribute.cs", label="Order = 30", span="27-27"];
m46_2 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m46_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m46_18 [cluster="System.TimeSpan.FromDays(double)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m46_16 [cluster="System.DateTime.AddMonths(int)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m46_20 [file="StatisticsHistoryFilterAttribute.cs", label="HangFire.Filters.StatisticsHistoryFilterAttribute", span=""];
m47_0 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="30-30"];
m47_1 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", span="32-35"];
m47_2 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="SucceededState.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m47_3 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="SucceededState.cs", label="EnqueueAt = enqueueAt", span="34-34"];
m47_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="SucceededState.cs", label="ScheduledAt = DateTime.UtcNow", span="35-35"];
m47_5 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m47_6 [cluster="HangFire.States.ScheduledState.SerializeData()", color=red, community=0, file="SucceededState.cs", label="1: Entry HangFire.States.ScheduledState.SerializeData()", span="43-43"];
m47_7 [cluster="HangFire.States.ScheduledState.SerializeData()", color=green, community=0, file="SucceededState.cs", label="1: return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) },\r\n                { ''ScheduledAt'', JobHelper.ToStringTimestamp(ScheduledAt) }\r\n            };", span="45-49"];
m47_8 [cluster="HangFire.States.ScheduledState.SerializeData()", file="SucceededState.cs", label="Exit HangFire.States.ScheduledState.SerializeData()", span="43-43"];
m47_16 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m47_10 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", span="6-6"];
m47_15 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9"];
m47_9 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m47_11 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47"];
m47_12 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="SucceededState.cs", label="1: context.Transaction.Counters.Decrement(''stats:succeeded'')", span="49-49"];
m47_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="SucceededState.cs", label="1: context.Transaction.Jobs.Persist(context.JobId)", span="50-50"];
m47_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47"];
m47_26 [file="SucceededState.cs", label="HangFire.States.ScheduledState", span=""];
m48_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="29-29"];
m48_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28"];
m48_5 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7"];
m48_6 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m48_7 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededStateHandler.cs", label="1: context.Transaction.RemoveFromList(''succeeded'', context.JobId)", span="16-16"];
m48_8 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m48_0 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m48_1 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SucceededStateHandler.cs", label="1: context.Transaction.InsertToList(''succeeded'', context.JobId)", span="10-10"];
m48_2 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SucceededStateHandler.cs", label="1: context.Transaction.TrimList(''succeeded'', 0, 99)", span="11-11"];
m48_3 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m49_5 [cluster="Unk.MapRoute", file="SucceededStateHandlerFacts.cs", label="Entry Unk.MapRoute", span=""];
m49_4 [cluster="Unk.IgnoreRoute", file="SucceededStateHandlerFacts.cs", label="Entry Unk.IgnoreRoute", span=""];
m49_0 [cluster="Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", span="7-7"];
m49_1 [cluster="Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: routes.IgnoreRoute(''{resource}.axd/{*pathInfo}'')", span="9-9"];
m49_2 [cluster="Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: routes.MapRoute(\r\n                name: ''Default'',\r\n                url: ''{action}/{id}'',\r\n                defaults: new { controller = ''Home'', action = ''Index'', id = UrlParameter.Optional }\r\n            )", span="11-15"];
m49_3 [cluster="Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", span="7-7"];
m50_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Worker.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m50_25 [cluster="System.Collections.Generic.List<T>.List()", file="Worker.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m50_27 [cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m50_0 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m50_1 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="RecurringJobs = new List<RecurringJobDto>()", span="11-11"];
m50_2 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="var connection = JobStorage.Current.GetConnection()", span="13-13"];
m50_3 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="15-15"];
m50_5 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="19-19"];
m50_18 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="var stateData = connection.GetStateData(dto.LastJobId)", span="49-49"];
m50_4 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label=ids, span="17-17"];
m50_7 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="RecurringJobs.Add(new RecurringJobDto { Id = id, Removed = true })", span="23-23"];
m50_8 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="var dto = new RecurringJobDto { Id = id }", span="27-27"];
m50_6 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="hash == null", span="21-21"];
m50_9 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="dto.Cron = hash[''Cron'']", span="28-28"];
m50_10 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="32-32"];
m50_14 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="hash.ContainsKey(''NextExecution'')", span="40-40"];
m50_15 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="dto.NextExecution = JobHelper.DeserializeDateTime(hash[''NextExecution''])", span="42-42"];
m50_16 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="hash.ContainsKey(''LastJobId'')", span="45-45"];
m50_17 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="dto.LastJobId = hash[''LastJobId'']", span="47-47"];
m50_21 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="hash.ContainsKey(''LastExecution'')", span="56-56"];
m50_22 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="dto.LastExecution = JobHelper.DeserializeDateTime(hash[''LastExecution''])", span="58-58"];
m50_11 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="dto.Job = invocationData.Deserialize()", span="33-33"];
m50_13 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="dto.LoadException = ex", span="37-37"];
m50_20 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="dto.LastJobState = stateData.Name", span="52-52"];
m50_23 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="RecurringJobs.Add(dto)", span="61-61"];
m50_12 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label=JobLoadException, span="35-35"];
m50_19 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="stateData != null", span="50-50"];
m50_24 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="Worker.cs", label="Exit HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m50_31 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Worker.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m50_32 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="Worker.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m50_33 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="Worker.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m50_35 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="Worker.cs", label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55"];
m50_29 [cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m50_36 [cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m50_30 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", file="Worker.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", span="68-68"];
m50_26 [cluster="HangFire.JobStorage.GetConnection()", file="Worker.cs", label="Entry HangFire.JobStorage.GetConnection()", span="56-56"];
m50_37 [file="Worker.cs", label="HangFire.Web.Pages.RecurringJobsPage", span=""];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d52  [color=green, key=2, style=dotted];
d61 -> d2  [color=green, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d61 -> d49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d51  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d51  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d4 -> d6  [key=0, style=solid];
d5 -> d49  [key=0, style=solid];
d5 -> d51  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d51  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d7 -> d53  [key=2, style=dotted];
d7 -> d54  [key=2, style=dotted];
d8 -> d9  [key=0, style=solid];
d8 -> d51  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d9 -> d53  [key=2, style=dotted];
d9 -> d54  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d10 -> d51  [key=2, style=dotted];
d11 -> d12  [key=0, style=solid];
d11 -> d48  [key=0, style=solid];
d11 -> d13  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d15  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d17  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d19  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d22  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d25  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d28  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d30  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d32  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d36  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d38  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d40  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d42  [color=darkseagreen4, key=1, label=job, style=dashed];
d11 -> d44  [color=darkseagreen4, key=1, label=job, style=dashed];
d12 -> d13  [key=0, style=solid];
d12 -> d51  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d54  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d14 -> d51  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid];
d15 -> d54  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d16 -> d51  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d55  [key=2, style=dotted];
d17 -> d56  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d18 -> d51  [key=2, style=dotted];
d20 -> d21  [key=0, style=solid];
d20 -> d51  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d51  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d22 -> d57  [key=2, style=dotted];
d22 -> d56  [key=2, style=dotted];
d23 -> d27  [key=0, style=solid];
d23 -> d51  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d24 -> d51  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d25 -> d54  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d26 -> d51  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d27 -> d51  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d29 -> d51  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d30 -> d58  [key=2, style=dotted];
d30 -> d54  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d31 -> d51  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d54  [key=2, style=dotted];
d33 -> d35  [key=0, style=solid];
d33 -> d51  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d51  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d51  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d51  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d53  [key=2, style=dotted];
d38 -> d54  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d39 -> d51  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d58  [key=2, style=dotted];
d40 -> d54  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d51  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d42 -> d59  [key=2, style=dotted];
d42 -> d60  [key=2, style=dotted];
d42 -> d54  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d43 -> d51  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d44 -> d54  [key=2, style=dotted];
d45 -> d47  [key=0, style=solid];
d45 -> d51  [key=2, style=dotted];
d46 -> d47  [key=0, style=solid];
d46 -> d51  [key=2, style=dotted];
d47 -> d11  [key=0, style=solid];
d47 -> d51  [key=2, style=dotted];
d48 -> d49  [key=0, style=solid];
d48 -> d51  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d49 -> d51  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d19 -> d24  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d28 -> d34  [key=0, style=solid];
d36 -> d37  [key=0, style=solid];
d36 -> d46  [key=0, style=solid];
d50 -> d0  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_8  [color=green, key=2, style=dotted];
m0_7 -> m0_5  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=2, style=dotted];
m0_1 -> m0_4  [color=green, key=2, style=dotted];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> d51  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_56  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_57  [key=2, style=dotted];
m3_4 -> m3_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_57  [key=2, style=dotted];
m3_5 -> m3_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_59  [key=2, style=dotted];
m3_7 -> m3_60  [key=2, style=dotted];
m3_7 -> m3_61  [key=2, style=dotted];
m3_7 -> m3_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m3_7 -> m3_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m3_7 -> m3_53  [color=darkseagreen4, key=1, label=pager, style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_58  [key=2, style=dotted];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_62  [key=2, style=dotted];
m3_8 -> m3_19  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_64  [key=2, style=dotted];
m3_17 -> m3_65  [key=2, style=dotted];
m3_17 -> m3_66  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> d51  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_52  [key=0, style=solid];
m3_19 -> m3_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> d51  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_61  [key=2, style=dotted];
m3_13 -> m3_63  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> d51  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_61  [key=2, style=dotted];
m3_15 -> m3_63  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> d51  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> d51  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> d51  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_63  [key=2, style=dotted];
m3_21 -> m3_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_21 -> m3_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> d51  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_63  [key=2, style=dotted];
m3_23 -> m3_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_23 -> m3_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> d51  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_29  [key=0, style=solid];
m3_25 -> m3_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_40  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_41  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_42  [key=2, style=dotted];
m4_53 -> m4_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_54 -> m4_50  [color=blue, key=0, style=bold];
m4_34 -> m4_35  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_40  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_41  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_42  [key=2, style=dotted];
m4_37 -> m4_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_42  [key=2, style=dotted];
m4_38 -> m4_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_39 -> m4_34  [color=blue, key=0, style=bold];
m4_40 -> m4_59  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_26  [key=2, style=dotted];
m4_60 -> m4_40  [color=blue, key=0, style=bold];
m4_55 -> m4_56  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=2, style=dotted];
m4_15 -> m4_13  [color=blue, key=0, style=bold];
m4_23 -> m4_24  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [key=2, style=dotted];
m4_25 -> m4_23  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_26  [key=2, style=dotted];
m4_33 -> m4_31  [color=blue, key=0, style=bold];
m4_43 -> m4_44  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_16  [key=2, style=dotted];
m4_45 -> m4_43  [color=blue, key=0, style=bold];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_49  [key=2, style=dotted];
m4_48 -> m4_46  [color=blue, key=0, style=bold];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_58  [key=2, style=dotted];
m4_57 -> m4_55  [color=blue, key=0, style=bold];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_21  [key=2, style=dotted];
m4_18 -> m4_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_22  [key=2, style=dotted];
m4_20 -> m4_17  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_8  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_9  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_10  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_11  [key=2, style=dotted];
m4_5 -> m4_12  [key=2, style=dotted];
m4_5 -> m4_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_6 -> m4_0  [color=blue, key=0, style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_21  [key=2, style=dotted];
m4_28 -> m4_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_22  [key=2, style=dotted];
m4_30 -> m4_27  [color=blue, key=0, style=bold];
m4_61 -> m4_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m4_61 -> m4_59  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [color=blue, key=0, style=bold];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_6  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_4  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_4  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_2  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_4  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_4  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_30  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_31  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_32  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_33  [key=2, style=dotted];
m12_4 -> m12_6  [color=darkseagreen4, key=1, label=servers, style=dashed];
m12_4 -> m12_9  [color=darkseagreen4, key=1, label=servers, style=dashed];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_30  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_8  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_28  [key=0, style=solid];
m12_9 -> m12_11  [color=darkseagreen4, key=1, label=server, style=dashed];
m12_9 -> m12_13  [color=darkseagreen4, key=1, label=server, style=dashed];
m12_9 -> m12_15  [color=darkseagreen4, key=1, label=server, style=dashed];
m12_9 -> m12_17  [color=darkseagreen4, key=1, label=server, style=dashed];
m12_9 -> m12_19  [color=darkseagreen4, key=1, label=server, style=dashed];
m12_9 -> m12_21  [color=darkseagreen4, key=1, label=server, style=dashed];
m12_9 -> m12_23  [color=darkseagreen4, key=1, label=server, style=dashed];
m12_9 -> m12_25  [color=darkseagreen4, key=1, label=server, style=dashed];
m12_7 -> m12_29  [key=0, style=solid];
m12_7 -> m12_30  [key=2, style=dotted];
m12_7 -> m12_7  [color=darkorchid, key=3, label="Local variable string title", style=bold];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_30  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_30  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_30  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_34  [key=2, style=dotted];
m12_11 -> d54  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> d54  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_36  [key=2, style=dotted];
m12_15 -> m12_37  [key=2, style=dotted];
m12_15 -> m12_38  [key=2, style=dotted];
m12_15 -> m12_39  [key=2, style=dotted];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_40  [key=2, style=dotted];
m12_17 -> d54  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> d54  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_27  [key=0, style=solid];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_40  [key=2, style=dotted];
m12_23 -> d54  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> d54  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_30  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_30  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_30  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_30  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_30  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_30  [key=2, style=dotted];
m12_27 -> m12_9  [key=0, style=solid];
m12_27 -> m12_30  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_30  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_30  [key=2, style=dotted];
m12_29 -> m12_0  [color=blue, key=0, style=bold];
m12_41 -> m12_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m12_41 -> m12_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_20  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_16 -> m14_21  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_16 -> m14_23  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_16 -> m14_24  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_16 -> m14_25  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_16 -> m14_27  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_19  [key=0, style=solid];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_23  [key=0, style=solid];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_32  [key=2, style=dotted];
m14_21 -> m14_33  [key=2, style=dotted];
m14_21 -> m14_21  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_21 -> m14_23  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_21 -> m14_24  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_21 -> m14_25  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_21 -> m14_27  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_34  [key=2, style=dotted];
m14_23 -> m14_25  [color=darkseagreen4, key=1, label=type, style=dashed];
m14_23 -> m14_27  [color=darkseagreen4, key=1, label=type, style=dashed];
m14_23 -> m14_28  [color=darkseagreen4, key=1, label=type, style=dashed];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_35  [key=2, style=dotted];
m14_24 -> m14_27  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_36  [key=2, style=dotted];
m14_25 -> m14_28  [color=darkseagreen4, key=1, label=method, style=dashed];
m14_27 -> m14_31  [key=0, style=solid];
m14_27 -> m14_37  [key=2, style=dotted];
m14_27 -> m14_38  [key=2, style=dotted];
m14_27 -> m14_39  [key=2, style=dotted];
m14_27 -> m14_40  [key=2, style=dotted];
m14_27 -> m14_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_18 -> m14_31  [key=0, style=solid];
m14_18 -> m14_12  [key=2, style=dotted];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_28  [color=darkseagreen4, key=1, label=oldFormat, style=dashed];
m14_19 -> m14_19  [color=darkorchid, key=3, label="Local variable bool oldFormat", style=bold];
m14_28 -> m14_31  [key=0, style=solid];
m14_28 -> m14_0  [key=2, style=dotted];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_28  [color=darkseagreen4, key=1, label=oldFormat, style=dashed];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_28  [key=0, style=solid];
m14_29 -> m14_30  [key=0, style=solid];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_41  [key=2, style=dotted];
m14_31 -> m14_16  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m14_0 -> m14_5  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m14_0 -> m14_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_0 -> m14_9  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_0 -> m14_10  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_5  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_7  [key=0, style=solid];
m14_7 -> m14_8  [color=green, key=0, style=solid];
m14_7 -> m14_9  [key=0, style=solid];
m14_7 -> m14_14  [key=2, style=dotted];
m14_9 -> m14_10  [key=0, style=solid];
m14_10 -> m14_11  [key=0, style=solid];
m14_2 -> m14_11  [key=0, style=solid];
m14_2 -> m14_12  [key=2, style=dotted];
m14_4 -> m14_11  [key=0, style=solid];
m14_4 -> m14_12  [key=2, style=dotted];
m14_6 -> m14_11  [key=0, style=solid];
m14_6 -> m14_13  [key=2, style=dotted];
m14_8 -> m14_11  [color=green, key=0, style=solid];
m14_8 -> m14_15  [color=green, key=2, style=dotted];
m14_11 -> m14_0  [color=blue, key=0, style=bold];
m14_49 -> m14_57  [key=0, style=solid];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_59  [key=2, style=dotted];
m14_57 -> m14_60  [key=2, style=dotted];
m14_58 -> m14_49  [color=blue, key=0, style=bold];
m14_45 -> m14_46  [key=0, style=solid];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_48  [key=2, style=dotted];
m14_46 -> m14_49  [key=2, style=dotted];
m14_47 -> m14_45  [color=blue, key=0, style=bold];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_53  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_53  [key=0, style=solid];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_56  [key=2, style=dotted];
m14_53 -> m14_49  [key=2, style=dotted];
m14_52 -> m14_54  [key=0, style=solid];
m14_52 -> m14_55  [key=2, style=dotted];
m14_54 -> m14_50  [color=blue, key=0, style=bold];
m14_42 -> m14_43  [key=0, style=solid];
m14_43 -> m14_44  [key=0, style=solid];
m14_44 -> m14_42  [color=blue, key=0, style=bold];
m14_61 -> m14_9  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m14_61 -> m14_10  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m14_61 -> m14_46  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m14_61 -> m14_51  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m14_61 -> m14_53  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_49  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_50  [key=2, style=dotted];
m15_2 -> m15_51  [key=2, style=dotted];
m15_2 -> m15_52  [key=2, style=dotted];
m15_2 -> m15_53  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_54  [key=2, style=dotted];
m15_4 -> m15_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_54  [key=2, style=dotted];
m15_5 -> m15_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_56  [key=2, style=dotted];
m15_7 -> m15_57  [key=2, style=dotted];
m15_7 -> m15_53  [key=2, style=dotted];
m15_7 -> m15_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m15_7 -> m15_15  [color=darkseagreen4, key=1, label=pager, style=dashed];
m15_7 -> m15_47  [color=darkseagreen4, key=1, label=pager, style=dashed];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_55  [key=2, style=dotted];
m15_6 -> m15_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_58  [key=2, style=dotted];
m15_8 -> m15_17  [color=darkseagreen4, key=1, label=enqueuedJobs, style=dashed];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_12  [key=0, style=solid];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_60  [key=2, style=dotted];
m15_15 -> m15_61  [key=2, style=dotted];
m15_15 -> m15_62  [key=2, style=dotted];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_68  [key=2, style=dotted];
m15_47 -> m15_61  [key=2, style=dotted];
m15_47 -> m15_62  [key=2, style=dotted];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_49  [key=2, style=dotted];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_46  [key=0, style=solid];
m15_17 -> m15_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_11 -> m15_48  [key=0, style=solid];
m15_11 -> m15_49  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_49  [key=2, style=dotted];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_53  [key=2, style=dotted];
m15_13 -> d54  [key=2, style=dotted];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_49  [key=2, style=dotted];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_49  [key=2, style=dotted];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_49  [key=2, style=dotted];
m15_46 -> m15_47  [key=0, style=solid];
m15_46 -> m15_49  [key=2, style=dotted];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> d54  [key=2, style=dotted];
m15_19 -> m15_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_19 -> m15_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_49  [key=2, style=dotted];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> d54  [key=2, style=dotted];
m15_21 -> m15_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_21 -> m15_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_49  [key=2, style=dotted];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_53  [key=2, style=dotted];
m15_23 -> d54  [key=2, style=dotted];
m15_23 -> m15_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_23 -> m15_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_49  [key=2, style=dotted];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_63  [key=2, style=dotted];
m15_25 -> m15_62  [key=2, style=dotted];
m15_25 -> m15_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_25 -> m15_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_49  [key=2, style=dotted];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=0, style=solid];
m15_27 -> m15_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_27 -> m15_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_49  [key=2, style=dotted];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_49  [key=2, style=dotted];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_64  [key=2, style=dotted];
m15_30 -> m15_65  [key=2, style=dotted];
m15_30 -> d54  [key=2, style=dotted];
m15_30 -> m15_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_30 -> m15_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_49  [key=2, style=dotted];
m15_32 -> m15_33  [key=0, style=solid];
m15_32 -> d54  [key=2, style=dotted];
m15_32 -> m15_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_32 -> m15_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_49  [key=2, style=dotted];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_53  [key=2, style=dotted];
m15_34 -> d54  [key=2, style=dotted];
m15_34 -> m15_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_34 -> m15_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_49  [key=2, style=dotted];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_66  [key=2, style=dotted];
m15_36 -> m15_62  [key=2, style=dotted];
m15_36 -> m15_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_36 -> m15_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_37 -> m15_38  [key=0, style=solid];
m15_37 -> m15_49  [key=2, style=dotted];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_44  [key=0, style=solid];
m15_38 -> m15_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_38 -> m15_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_39 -> m15_40  [key=0, style=solid];
m15_39 -> m15_49  [key=2, style=dotted];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> m15_49  [key=2, style=dotted];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_67  [key=2, style=dotted];
m15_40 -> d54  [key=2, style=dotted];
m15_40 -> m15_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_40 -> m15_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_49  [key=2, style=dotted];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> d54  [key=2, style=dotted];
m15_42 -> m15_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_43 -> m15_45  [key=0, style=solid];
m15_43 -> m15_49  [key=2, style=dotted];
m15_45 -> m15_17  [key=0, style=solid];
m15_45 -> m15_49  [key=2, style=dotted];
m15_48 -> m15_0  [color=blue, key=0, style=bold];
m15_69 -> m15_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m15_69 -> m15_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m16_86 -> m16_87  [key=0, style=solid];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_42  [key=2, style=dotted];
m16_87 -> m16_11  [key=2, style=dotted];
m16_87 -> m16_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_21  [key=2, style=dotted];
m16_88 -> m16_96  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> m16_11  [key=2, style=dotted];
m16_89 -> m16_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_29  [key=2, style=dotted];
m16_90 -> m16_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_91 -> m16_86  [color=blue, key=0, style=bold];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_28  [key=2, style=dotted];
m16_15 -> m16_13  [color=blue, key=0, style=bold];
m16_17 -> m16_18  [color=green, key=0, style=solid];
m16_18 -> m16_19  [color=green, key=0, style=solid];
m16_18 -> m16_20  [color=green, key=2, style=dotted];
m16_18 -> m16_21  [color=green, key=2, style=dotted];
m16_19 -> m16_17  [color=blue, key=0, style=bold];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_22  [key=2, style=dotted];
m16_22 -> m16_23  [color=green, key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_14  [key=0, style=solid];
m16_7 -> m16_15  [key=2, style=dotted];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_11  [key=2, style=dotted];
m16_8 -> m16_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_8 -> m16_10  [key=0, style=solid];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_12  [key=2, style=dotted];
m16_9 -> m16_14  [key=0, style=solid];
m16_9 -> m16_15  [key=2, style=dotted];
m16_10 -> m16_7  [color=blue, key=0, style=bold];
m16_10 -> m16_11  [key=0, style=solid];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_29  [key=2, style=dotted];
m16_26 -> m16_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_12 -> m16_13  [key=0, style=solid];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_5  [key=2, style=dotted];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_2 -> m16_3  [key=0, style=solid];
m16_21 -> m16_101  [key=0, style=solid];
m16_23 -> m16_24  [color=green, key=0, style=solid];
m16_23 -> m16_25  [color=green, key=2, style=dotted];
m16_23 -> m16_26  [color=green, key=2, style=dotted];
m16_24 -> m16_22  [color=blue, key=0, style=bold];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_21  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_3 -> m16_10  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m16_3 -> m16_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_3 -> m16_12  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_3 -> m16_8  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_16  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_6  [key=0, style=solid];
m16_4 -> m16_0  [color=blue, key=0, style=bold];
m16_6 -> m16_8  [key=0, style=solid];
m16_6 -> m16_7  [key=0, style=solid];
m16_5 -> m16_14  [key=0, style=solid];
m16_5 -> m16_15  [key=2, style=dotted];
m16_14 -> m16_3  [color=blue, key=0, style=bold];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_16  [key=2, style=dotted];
m16_27 -> m16_23  [color=blue, key=0, style=bold];
m16_27 -> m16_18  [color=green, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m16_27 -> m16_1  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m16_27 -> m16_10  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m16_27 -> m16_11  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m16_27 -> m16_12  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m16_27 -> m16_13  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m16_53 -> m16_54  [color=red, key=0, style=solid];
m16_54 -> m16_55  [color=red, key=0, style=solid];
m16_54 -> m16_42  [color=red, key=2, style=dotted];
m16_54 -> m16_11  [color=red, key=2, style=dotted];
m16_54 -> m16_60  [color=red, key=1, label="lambda expression", style=dashed];
m16_55 -> m16_56  [key=0, style=solid];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_21  [key=2, style=dotted];
m16_56 -> m16_64  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_11  [key=2, style=dotted];
m16_57 -> m16_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_29  [key=2, style=dotted];
m16_58 -> m16_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_59 -> m16_53  [color=blue, key=0, style=bold];
m16_104 -> m16_105  [key=0, style=solid];
m16_30 -> m16_31  [key=0, style=solid];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_11  [key=2, style=dotted];
m16_31 -> m16_28  [key=2, style=dotted];
m16_31 -> m16_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_32 -> m16_30  [color=blue, key=0, style=bold];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_35  [key=0, style=solid];
m16_35 -> m16_33  [color=blue, key=0, style=bold];
m16_44 -> m16_45  [key=0, style=solid];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_28  [key=2, style=dotted];
m16_47 -> m16_48  [key=0, style=solid];
m16_50 -> m16_51  [key=0, style=solid];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_11  [key=2, style=dotted];
m16_45 -> m16_28  [key=2, style=dotted];
m16_46 -> m16_44  [color=blue, key=0, style=bold];
m16_49 -> m16_47  [color=blue, key=0, style=bold];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_11  [key=2, style=dotted];
m16_51 -> m16_28  [key=2, style=dotted];
m16_52 -> m16_50  [color=blue, key=0, style=bold];
m16_60 -> m16_61  [color=red, key=0, style=solid];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_28  [key=2, style=dotted];
m16_63 -> m16_64  [key=0, style=solid];
m16_66 -> m16_67  [key=0, style=solid];
m16_61 -> m16_62  [color=red, key=0, style=solid];
m16_61 -> m16_11  [color=red, key=2, style=dotted];
m16_61 -> m16_28  [color=red, key=2, style=dotted];
m16_62 -> m16_60  [color=blue, key=0, style=bold];
m16_65 -> m16_63  [color=blue, key=0, style=bold];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_11  [key=2, style=dotted];
m16_67 -> m16_28  [key=2, style=dotted];
m16_68 -> m16_66  [color=blue, key=0, style=bold];
m16_81 -> m16_82  [key=0, style=solid];
m16_81 -> m16_28  [key=2, style=dotted];
m16_77 -> m16_78  [key=0, style=solid];
m16_80 -> m16_81  [key=0, style=solid];
m16_83 -> m16_84  [key=0, style=solid];
m16_78 -> m16_79  [key=0, style=solid];
m16_78 -> m16_11  [key=2, style=dotted];
m16_78 -> m16_28  [key=2, style=dotted];
m16_79 -> m16_77  [color=blue, key=0, style=bold];
m16_82 -> m16_80  [color=blue, key=0, style=bold];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_11  [key=2, style=dotted];
m16_84 -> m16_28  [key=2, style=dotted];
m16_85 -> m16_83  [color=blue, key=0, style=bold];
m16_92 -> m16_93  [key=0, style=solid];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_28  [key=2, style=dotted];
m16_95 -> m16_96  [key=0, style=solid];
m16_98 -> m16_99  [key=0, style=solid];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_11  [key=2, style=dotted];
m16_93 -> m16_28  [key=2, style=dotted];
m16_94 -> m16_92  [color=blue, key=0, style=bold];
m16_97 -> m16_95  [color=blue, key=0, style=bold];
m16_99 -> m16_100  [key=0, style=solid];
m16_99 -> m16_11  [key=2, style=dotted];
m16_99 -> m16_28  [key=2, style=dotted];
m16_100 -> m16_98  [color=blue, key=0, style=bold];
m16_105 -> m16_106  [key=0, style=solid];
m16_106 -> m16_104  [color=blue, key=0, style=bold];
m16_36 -> m16_37  [key=0, style=solid];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_42  [key=2, style=dotted];
m16_37 -> m16_11  [key=2, style=dotted];
m16_37 -> m16_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_21  [key=2, style=dotted];
m16_38 -> m16_48  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_11  [key=2, style=dotted];
m16_39 -> m16_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_43  [key=2, style=dotted];
m16_40 -> m16_29  [key=2, style=dotted];
m16_40 -> m16_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_41 -> m16_36  [color=blue, key=0, style=bold];
m16_69 -> m16_70  [key=0, style=solid];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_21  [key=2, style=dotted];
m16_70 -> m16_73  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m16_70 -> m16_81  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_42  [key=2, style=dotted];
m16_71 -> m16_11  [key=2, style=dotted];
m16_71 -> m16_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_73 -> m16_74  [key=0, style=solid];
m16_73 -> m16_11  [key=2, style=dotted];
m16_73 -> m16_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_76  [key=2, style=dotted];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_29  [key=2, style=dotted];
m16_74 -> m16_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_75 -> m16_69  [color=blue, key=0, style=bold];
m16_20 -> m16_17  [color=blue, key=0, style=bold];
m16_101 -> m16_102  [key=0, style=solid];
m16_101 -> m16_103  [key=2, style=dotted];
m16_102 -> m16_21  [color=blue, key=0, style=bold];
m16_107 -> m16_108  [key=0, style=solid];
m16_108 -> m16_109  [key=0, style=solid];
m16_108 -> m16_111  [key=2, style=dotted];
m16_108 -> m16_108  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m16_109 -> m16_110  [key=0, style=solid];
m16_109 -> m16_112  [key=2, style=dotted];
m16_109 -> m16_109  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m16_110 -> m16_107  [color=blue, key=0, style=bold];
m16_113 -> m16_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_18  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_48  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_54  [color=red, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_113 -> m16_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m16_114 -> m16_48  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m16_115 -> m16_64  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m16_116 -> m16_81  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m16_117 -> m16_96  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m17_0 -> m17_1  [color=green, key=0, style=solid];
m17_1 -> m17_2  [color=green, key=0, style=solid];
m17_1 -> m17_3  [color=green, key=2, style=dotted];
m17_1 -> m17_4  [color=green, key=2, style=dotted];
m17_2 -> m17_0  [color=blue, key=0, style=bold];
m17_5 -> m17_6  [color=green, key=0, style=solid];
m17_6 -> m17_7  [color=green, key=0, style=solid];
m17_6 -> m17_8  [color=green, key=2, style=dotted];
m17_7 -> m17_5  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_4 -> m18_5  [color=red, key=0, style=solid];
m18_5 -> m18_6  [color=red, key=0, style=solid];
m18_5 -> m18_7  [color=red, key=2, style=dotted];
m18_5 -> m18_8  [color=red, key=1, label="lambda expression", style=dashed];
m18_6 -> m18_4  [color=blue, key=0, style=bold];
m18_16 -> m18_30  [color=red, key=0, style=solid];
m18_30 -> m18_31  [color=red, key=0, style=solid];
m18_30 -> m18_11  [color=red, key=2, style=dotted];
m18_31 -> m18_16  [color=blue, key=0, style=bold];
m18_12 -> m18_13  [key=0, style=solid];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_16  [key=2, style=dotted];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_17  [key=2, style=dotted];
m18_15 -> m18_12  [color=blue, key=0, style=bold];
m18_18 -> m18_19  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_7  [key=2, style=dotted];
m18_19 -> m18_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_20 -> m18_18  [color=blue, key=0, style=bold];
m18_25 -> m18_26  [key=0, style=solid];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_16  [key=2, style=dotted];
m18_26 -> m18_28  [color=darkseagreen4, key=1, label=context, style=dashed];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_24  [key=2, style=dotted];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_17  [key=2, style=dotted];
m18_29 -> m18_25  [color=blue, key=0, style=bold];
m18_21 -> m18_22  [key=0, style=solid];
m18_8 -> m18_9  [color=red, key=0, style=solid];
m18_9 -> m18_10  [color=red, key=0, style=solid];
m18_9 -> m18_11  [color=red, key=2, style=dotted];
m18_10 -> m18_8  [color=blue, key=0, style=bold];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_24  [key=2, style=dotted];
m18_23 -> m18_21  [color=blue, key=0, style=bold];
m18_32 -> m18_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerContextFacts", style=dashed];
m18_32 -> m18_13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerContextFacts", style=dashed];
m18_32 -> m18_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerContextFacts", style=dashed];
m18_32 -> m18_30  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerContextFacts", style=dashed];
m20_16 -> m20_17  [key=0, style=solid];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> d60  [key=2, style=dotted];
m20_17 -> m20_15  [key=2, style=dotted];
m20_18 -> m20_16  [color=blue, key=0, style=bold];
m20_190 -> m20_191  [key=0, style=solid];
m20_191 -> m20_192  [key=0, style=solid];
m20_191 -> d60  [key=2, style=dotted];
m20_191 -> m20_143  [key=2, style=dotted];
m20_192 -> m20_193  [key=0, style=solid];
m20_192 -> m20_31  [key=2, style=dotted];
m20_192 -> m20_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_193 -> m20_190  [color=blue, key=0, style=bold];
m20_208 -> m20_243  [key=0, style=solid];
m20_208 -> m20_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_208 -> m20_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_208 -> m20_251  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m20_208 -> m20_252  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats", style=bold];
m20_243 -> m20_244  [key=0, style=solid];
m20_243 -> m20_247  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m20_243 -> m20_248  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m20_250 -> m20_251  [key=0, style=solid];
m20_250 -> m20_64  [key=2, style=dotted];
m20_250 -> m20_65  [key=2, style=dotted];
m20_250 -> m20_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_251 -> m20_252  [key=0, style=solid];
m20_251 -> m20_263  [key=2, style=dotted];
m20_251 -> m20_256  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m20_244 -> m20_245  [key=0, style=solid];
m20_244 -> m20_58  [key=2, style=dotted];
m20_244 -> m20_247  [color=darkseagreen4, key=1, label=dates, style=dashed];
m20_244 -> m20_250  [color=darkseagreen4, key=1, label=dates, style=dashed];
m20_244 -> m20_254  [color=darkseagreen4, key=1, label=dates, style=dashed];
m20_244 -> m20_258  [color=darkseagreen4, key=1, label=dates, style=dashed];
m20_247 -> m20_248  [key=0, style=solid];
m20_247 -> m20_167  [key=2, style=dotted];
m20_248 -> m20_249  [key=0, style=solid];
m20_248 -> m20_262  [key=2, style=dotted];
m20_248 -> m20_248  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m20_245 -> m20_246  [key=0, style=solid];
m20_245 -> m20_249  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_245 -> m20_153  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m20_254 -> m20_255  [key=0, style=solid];
m20_254 -> m20_260  [key=0, style=solid];
m20_254 -> m20_153  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m20_258 -> m20_259  [key=0, style=solid];
m20_258 -> m20_266  [key=2, style=dotted];
m20_246 -> m20_247  [key=0, style=solid];
m20_246 -> m20_250  [key=0, style=solid];
m20_249 -> m20_246  [key=0, style=solid];
m20_249 -> m20_249  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_252 -> m20_253  [key=0, style=solid];
m20_252 -> m20_59  [key=2, style=dotted];
m20_252 -> m20_258  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_252 -> m20_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_256 -> m20_257  [key=0, style=solid];
m20_256 -> m20_258  [key=0, style=solid];
m20_256 -> m20_264  [key=2, style=dotted];
m20_256 -> m20_265  [key=2, style=dotted];
m20_253 -> m20_254  [key=0, style=solid];
m20_253 -> m20_256  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_253 -> m20_258  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_253 -> m20_259  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_260 -> m20_261  [key=0, style=solid];
m20_259 -> m20_254  [key=0, style=solid];
m20_259 -> m20_259  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_255 -> m20_256  [key=0, style=solid];
m20_257 -> m20_258  [key=0, style=solid];
m20_261 -> m20_208  [color=blue, key=0, style=bold];
m20_92 -> m20_272  [key=0, style=solid];
m20_92 -> m20_279  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_92 -> m20_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_92 -> m20_280  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m20_92 -> m20_281  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats", style=bold];
m20_272 -> m20_273  [key=0, style=solid];
m20_272 -> m20_275  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m20_272 -> m20_276  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m20_272 -> m20_277  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m20_279 -> m20_280  [key=0, style=solid];
m20_279 -> m20_64  [key=2, style=dotted];
m20_279 -> m20_65  [key=2, style=dotted];
m20_279 -> m20_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_280 -> m20_281  [key=0, style=solid];
m20_280 -> m20_263  [key=2, style=dotted];
m20_280 -> m20_285  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m20_273 -> m20_274  [key=0, style=solid];
m20_273 -> m20_291  [key=2, style=dotted];
m20_273 -> m20_275  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m20_275 -> m20_276  [key=0, style=solid];
m20_275 -> m20_278  [key=0, style=solid];
m20_276 -> m20_277  [key=0, style=solid];
m20_276 -> m20_167  [key=2, style=dotted];
m20_277 -> m20_275  [key=0, style=solid];
m20_277 -> m20_291  [key=2, style=dotted];
m20_277 -> m20_277  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m20_274 -> m20_275  [key=0, style=solid];
m20_274 -> m20_58  [key=2, style=dotted];
m20_274 -> m20_276  [color=darkseagreen4, key=1, label=dates, style=dashed];
m20_274 -> m20_278  [color=darkseagreen4, key=1, label=dates, style=dashed];
m20_274 -> m20_287  [color=darkseagreen4, key=1, label=dates, style=dashed];
m20_278 -> m20_279  [key=0, style=solid];
m20_278 -> m20_64  [key=2, style=dotted];
m20_278 -> m20_65  [key=2, style=dotted];
m20_278 -> m20_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_278 -> m20_283  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m20_287 -> m20_288  [key=0, style=solid];
m20_287 -> m20_266  [key=2, style=dotted];
m20_283 -> m20_284  [key=0, style=solid];
m20_283 -> m20_289  [key=0, style=solid];
m20_283 -> m20_153  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m20_281 -> m20_282  [key=0, style=solid];
m20_281 -> m20_59  [key=2, style=dotted];
m20_281 -> m20_287  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_281 -> m20_289  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_285 -> m20_286  [key=0, style=solid];
m20_285 -> m20_287  [key=0, style=solid];
m20_285 -> m20_264  [key=2, style=dotted];
m20_285 -> m20_265  [key=2, style=dotted];
m20_282 -> m20_283  [key=0, style=solid];
m20_282 -> m20_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_282 -> m20_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_282 -> m20_288  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_289 -> m20_290  [key=0, style=solid];
m20_288 -> m20_283  [key=0, style=solid];
m20_288 -> m20_288  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_284 -> m20_285  [key=0, style=solid];
m20_286 -> m20_287  [key=0, style=solid];
m20_290 -> m20_92  [color=blue, key=0, style=bold];
m20_209 -> m20_210  [key=0, style=solid];
m20_209 -> m20_208  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs", style=bold];
m20_210 -> m20_211  [key=0, style=solid];
m20_210 -> m20_208  [key=2, style=dotted];
m20_211 -> m20_209  [color=blue, key=0, style=bold];
m20_346 -> m20_347  [key=0, style=solid];
m20_347 -> m20_348  [key=0, style=solid];
m20_347 -> m20_362  [key=2, style=dotted];
m20_347 -> m20_350  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_368  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_351  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_374  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_352  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_380  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_353  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_386  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_354  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_393  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_355  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_400  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_358  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_406  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_347 -> m20_360  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_348 -> m20_349  [key=0, style=solid];
m20_348 -> m20_110  [key=2, style=dotted];
m20_348 -> m20_356  [color=darkseagreen4, key=1, label=queues, style=dashed];
m20_350 -> m20_351  [key=0, style=solid];
m20_350 -> m20_61  [key=2, style=dotted];
m20_350 -> m20_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_350 -> m20_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_351 -> m20_352  [key=0, style=solid];
m20_351 -> m20_61  [key=2, style=dotted];
m20_351 -> m20_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_351 -> m20_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_352 -> m20_353  [key=0, style=solid];
m20_352 -> m20_61  [key=2, style=dotted];
m20_352 -> m20_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_352 -> m20_379  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_353 -> m20_354  [key=0, style=solid];
m20_353 -> m20_61  [key=2, style=dotted];
m20_353 -> m20_382  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_353 -> m20_385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_354 -> m20_355  [key=0, style=solid];
m20_354 -> m20_61  [key=2, style=dotted];
m20_354 -> m20_388  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_354 -> m20_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_355 -> m20_356  [key=0, style=solid];
m20_355 -> m20_61  [key=2, style=dotted];
m20_355 -> m20_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_355 -> m20_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_358 -> m20_356  [key=0, style=solid];
m20_358 -> m20_61  [key=2, style=dotted];
m20_358 -> m20_402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_358 -> m20_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_360 -> m20_361  [key=0, style=solid];
m20_349 -> m20_350  [key=0, style=solid];
m20_349 -> m20_60  [key=2, style=dotted];
m20_349 -> m20_351  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_349 -> m20_352  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_349 -> m20_353  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_349 -> m20_354  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_349 -> m20_355  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_349 -> m20_358  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_349 -> m20_359  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_356 -> m20_357  [key=0, style=solid];
m20_356 -> m20_359  [key=0, style=solid];
m20_359 -> m20_360  [key=0, style=solid];
m20_359 -> m20_62  [key=2, style=dotted];
m20_357 -> m20_358  [key=0, style=solid];
m20_357 -> m20_403  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m20_357 -> m20_356  [color=darkorchid, key=3, label="Local variable var queueName", style=bold];
m20_361 -> m20_346  [color=blue, key=0, style=bold];
m20_212 -> m20_213  [key=0, style=solid];
m20_212 -> m20_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_212 -> m20_152  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.Monitoring.JobDetailsDto JobDetails", style=bold];
m20_213 -> m20_214  [key=0, style=solid];
m20_213 -> d60  [key=2, style=dotted];
m20_213 -> m20_225  [key=2, style=dotted];
m20_213 -> m20_219  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_213 -> m20_220  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_213 -> m20_221  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_213 -> m20_222  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_213 -> m20_223  [color=red, key=1, label=job, style=dashed];
m20_217 -> m20_218  [key=0, style=solid];
m20_217 -> d60  [key=2, style=dotted];
m20_217 -> m20_120  [key=2, style=dotted];
m20_214 -> m20_215  [key=0, style=solid];
m20_214 -> m20_216  [key=0, style=solid];
m20_219 -> m20_220  [key=0, style=solid];
m20_219 -> m20_221  [key=0, style=solid];
m20_219 -> m20_226  [key=2, style=dotted];
m20_220 -> m20_221  [key=0, style=solid];
m20_220 -> m20_74  [key=2, style=dotted];
m20_221 -> m20_222  [key=0, style=solid];
m20_221 -> m20_223  [color=red, key=0, style=solid];
m20_221 -> m20_226  [key=2, style=dotted];
m20_222 -> m20_223  [color=red, key=0, style=solid];
m20_222 -> m20_74  [key=2, style=dotted];
m20_223 -> m20_224  [color=red, key=0, style=solid];
m20_223 -> m20_227  [color=red, key=2, style=dotted];
m20_223 -> m20_228  [color=red, key=2, style=dotted];
m20_223 -> m20_226  [color=red, key=2, style=dotted];
m20_223 -> m20_229  [color=red, key=2, style=dotted];
m20_223 -> m20_230  [color=red, key=2, style=dotted];
m20_223 -> m20_231  [color=red, key=2, style=dotted];
m20_223 -> m20_232  [color=red, key=2, style=dotted];
m20_223 -> m20_233  [color=red, key=1, label="lambda expression", style=dashed];
m20_223 -> m20_237  [color=red, key=1, label="lambda expression", style=dashed];
m20_223 -> m20_240  [color=red, key=1, label="lambda expression", style=dashed];
m20_215 -> m20_224  [key=0, style=solid];
m20_216 -> m20_217  [key=0, style=solid];
m20_216 -> m20_223  [color=red, key=1, label=hiddenProperties, style=dashed];
m20_216 -> m20_234  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m20_218 -> m20_219  [key=0, style=solid];
m20_218 -> m20_64  [key=2, style=dotted];
m20_218 -> m20_65  [key=2, style=dotted];
m20_218 -> m20_223  [color=red, key=1, label=history, style=dashed];
m20_224 -> m20_212  [color=blue, key=0, style=bold];
m20_343 -> m20_344  [key=0, style=solid];
m20_344 -> m20_345  [key=0, style=solid];
m20_344 -> m20_15  [key=2, style=dotted];
m20_345 -> m20_343  [color=blue, key=0, style=bold];
m20_88 -> m20_408  [key=0, style=solid];
m20_88 -> m20_152  [color=darkorchid, key=3, label="method methodReturn HangFire.Common.JobMethod TryToGetMethod", style=bold];
m20_408 -> m20_411  [key=0, style=solid];
m20_408 -> m20_412  [key=2, style=dotted];
m20_408 -> m20_413  [key=2, style=dotted];
m20_409 -> m20_410  [key=0, style=solid];
m20_410 -> m20_411  [key=0, style=solid];
m20_411 -> m20_88  [color=blue, key=0, style=bold];
m20_405 -> m20_406  [key=0, style=solid];
m20_34 -> m20_35  [key=0, style=solid];
m20_40 -> m20_41  [key=0, style=solid];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_37  [key=2, style=dotted];
m20_35 -> m20_38  [key=2, style=dotted];
m20_35 -> m20_39  [key=2, style=dotted];
m20_36 -> m20_34  [color=blue, key=0, style=bold];
m20_41 -> m20_42  [key=0, style=solid];
m20_41 -> m20_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>", style=dashed];
m20_42 -> m20_40  [color=blue, key=0, style=bold];
m20_72 -> m20_73  [key=0, style=solid];
m20_72 -> m20_74  [key=2, style=dotted];
m20_83 -> m20_84  [key=0, style=solid];
m20_83 -> m20_85  [key=2, style=dotted];
m20_83 -> m20_86  [key=2, style=dotted];
m20_83 -> m20_87  [key=2, style=dotted];
m20_83 -> m20_88  [key=2, style=dotted];
m20_83 -> m20_39  [key=2, style=dotted];
m20_80 -> m20_81  [key=0, style=solid];
m20_80 -> m20_74  [key=2, style=dotted];
m20_67 -> m20_68  [key=0, style=solid];
m20_67 -> m20_69  [key=2, style=dotted];
m20_67 -> m20_70  [key=2, style=dotted];
m20_76 -> m20_77  [key=0, style=solid];
m20_76 -> m20_69  [key=2, style=dotted];
m20_76 -> m20_78  [key=2, style=dotted];
m20_66 -> m20_67  [key=0, style=solid];
m20_71 -> m20_72  [key=0, style=solid];
m20_75 -> m20_76  [key=0, style=solid];
m20_79 -> m20_80  [key=0, style=solid];
m20_82 -> m20_83  [key=0, style=solid];
m20_68 -> m20_66  [color=blue, key=0, style=bold];
m20_73 -> m20_71  [color=blue, key=0, style=bold];
m20_77 -> m20_75  [color=blue, key=0, style=bold];
m20_81 -> m20_79  [color=blue, key=0, style=bold];
m20_84 -> m20_82  [color=blue, key=0, style=bold];
m20_115 -> m20_116  [key=0, style=solid];
m20_115 -> m20_74  [key=2, style=dotted];
m20_125 -> m20_126  [key=0, style=solid];
m20_125 -> m20_127  [key=2, style=dotted];
m20_125 -> m20_128  [key=2, style=dotted];
m20_125 -> m20_129  [key=2, style=dotted];
m20_125 -> m20_38  [key=2, style=dotted];
m20_122 -> m20_123  [key=0, style=solid];
m20_122 -> m20_74  [key=2, style=dotted];
m20_112 -> m20_113  [key=0, style=solid];
m20_112 -> m20_69  [key=2, style=dotted];
m20_112 -> m20_70  [key=2, style=dotted];
m20_118 -> m20_119  [key=0, style=solid];
m20_118 -> m20_69  [key=2, style=dotted];
m20_118 -> m20_120  [key=2, style=dotted];
m20_111 -> m20_112  [key=0, style=solid];
m20_114 -> m20_115  [key=0, style=solid];
m20_117 -> m20_118  [key=0, style=solid];
m20_121 -> m20_122  [key=0, style=solid];
m20_124 -> m20_125  [key=0, style=solid];
m20_113 -> m20_111  [color=blue, key=0, style=bold];
m20_116 -> m20_114  [color=blue, key=0, style=bold];
m20_119 -> m20_117  [color=blue, key=0, style=bold];
m20_123 -> m20_121  [color=blue, key=0, style=bold];
m20_126 -> m20_124  [color=blue, key=0, style=bold];
m20_135 -> m20_136  [key=0, style=solid];
m20_136 -> m20_137  [key=0, style=solid];
m20_136 -> m20_138  [key=2, style=dotted];
m20_136 -> m20_38  [key=2, style=dotted];
m20_136 -> m20_39  [key=2, style=dotted];
m20_137 -> m20_135  [color=blue, key=0, style=bold];
m20_144 -> m20_145  [key=0, style=solid];
m20_145 -> m20_146  [key=0, style=solid];
m20_145 -> m20_147  [key=2, style=dotted];
m20_145 -> m20_38  [key=2, style=dotted];
m20_145 -> m20_39  [key=2, style=dotted];
m20_146 -> m20_144  [color=blue, key=0, style=bold];
m20_169 -> m20_170  [key=0, style=solid];
m20_169 -> m20_69  [key=2, style=dotted];
m20_169 -> m20_143  [key=2, style=dotted];
m20_175 -> m20_176  [key=0, style=solid];
m20_175 -> m20_69  [key=2, style=dotted];
m20_175 -> m20_15  [key=2, style=dotted];
m20_181 -> m20_182  [key=0, style=solid];
m20_181 -> m20_69  [key=2, style=dotted];
m20_181 -> m20_15  [key=2, style=dotted];
m20_168 -> m20_169  [key=0, style=solid];
m20_171 -> m20_172  [key=0, style=solid];
m20_174 -> m20_175  [key=0, style=solid];
m20_177 -> m20_178  [key=0, style=solid];
m20_180 -> m20_181  [key=0, style=solid];
m20_183 -> m20_184  [key=0, style=solid];
m20_186 -> m20_187  [key=0, style=solid];
m20_170 -> m20_168  [color=blue, key=0, style=bold];
m20_172 -> m20_173  [key=0, style=solid];
m20_173 -> m20_171  [color=blue, key=0, style=bold];
m20_176 -> m20_174  [color=blue, key=0, style=bold];
m20_178 -> m20_179  [key=0, style=solid];
m20_179 -> m20_177  [color=blue, key=0, style=bold];
m20_182 -> m20_180  [color=blue, key=0, style=bold];
m20_184 -> m20_185  [key=0, style=solid];
m20_185 -> m20_183  [color=blue, key=0, style=bold];
m20_187 -> m20_188  [key=0, style=solid];
m20_187 -> m20_189  [key=2, style=dotted];
m20_187 -> m20_38  [key=2, style=dotted];
m20_187 -> m20_39  [key=2, style=dotted];
m20_188 -> m20_186  [color=blue, key=0, style=bold];
m20_194 -> m20_195  [key=0, style=solid];
m20_195 -> m20_196  [key=0, style=solid];
m20_195 -> m20_189  [key=2, style=dotted];
m20_195 -> m20_38  [key=2, style=dotted];
m20_195 -> m20_39  [key=2, style=dotted];
m20_196 -> m20_194  [color=blue, key=0, style=bold];
m20_201 -> m20_202  [key=0, style=solid];
m20_202 -> m20_203  [key=0, style=solid];
m20_202 -> m20_204  [key=2, style=dotted];
m20_202 -> m20_38  [key=2, style=dotted];
m20_203 -> m20_201  [color=blue, key=0, style=bold];
m20_234 -> m20_235  [key=0, style=solid];
m20_234 -> m20_236  [key=2, style=dotted];
m20_233 -> m20_234  [key=0, style=solid];
m20_237 -> m20_238  [key=0, style=solid];
m20_240 -> m20_241  [key=0, style=solid];
m20_235 -> m20_233  [color=blue, key=0, style=bold];
m20_238 -> m20_239  [key=0, style=solid];
m20_239 -> m20_237  [color=blue, key=0, style=bold];
m20_241 -> m20_242  [key=0, style=solid];
m20_242 -> m20_240  [color=blue, key=0, style=bold];
m20_268 -> m20_269  [key=0, style=solid];
m20_268 -> m20_270  [key=2, style=dotted];
m20_268 -> m20_271  [key=2, style=dotted];
m20_267 -> m20_268  [key=0, style=solid];
m20_269 -> m20_267  [color=blue, key=0, style=bold];
m20_296 -> m20_297  [key=0, style=solid];
m20_296 -> m20_69  [key=2, style=dotted];
m20_292 -> m20_293  [key=0, style=solid];
m20_295 -> m20_296  [key=0, style=solid];
m20_293 -> m20_294  [key=0, style=solid];
m20_293 -> m20_270  [key=2, style=dotted];
m20_294 -> m20_292  [color=blue, key=0, style=bold];
m20_297 -> m20_295  [color=blue, key=0, style=bold];
m20_325 -> m20_326  [key=0, style=solid];
m20_325 -> d60  [key=2, style=dotted];
m20_325 -> m20_70  [key=2, style=dotted];
m20_335 -> m20_336  [key=0, style=solid];
m20_335 -> m20_337  [key=2, style=dotted];
m20_335 -> m20_338  [key=2, style=dotted];
m20_335 -> m20_339  [key=2, style=dotted];
m20_335 -> m20_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_320 -> m20_321  [key=0, style=solid];
m20_320 -> m20_322  [key=0, style=solid];
m20_320 -> m20_323  [key=2, style=dotted];
m20_321 -> m20_322  [key=0, style=solid];
m20_321 -> m20_74  [key=2, style=dotted];
m20_332 -> m20_333  [key=0, style=solid];
m20_332 -> m20_88  [key=2, style=dotted];
m20_332 -> m20_323  [key=2, style=dotted];
m20_328 -> m20_329  [key=0, style=solid];
m20_328 -> m20_330  [key=0, style=solid];
m20_328 -> m20_323  [key=2, style=dotted];
m20_329 -> m20_330  [key=0, style=solid];
m20_329 -> m20_74  [key=2, style=dotted];
m20_315 -> m20_316  [key=0, style=solid];
m20_315 -> d60  [key=2, style=dotted];
m20_315 -> m20_317  [key=2, style=dotted];
m20_315 -> m20_318  [key=2, style=dotted];
m20_315 -> m20_70  [key=2, style=dotted];
m20_314 -> m20_315  [key=0, style=solid];
m20_319 -> m20_320  [key=0, style=solid];
m20_319 -> m20_321  [color=darkseagreen4, key=1, label="?", style=dashed];
m20_324 -> m20_325  [key=0, style=solid];
m20_327 -> m20_328  [key=0, style=solid];
m20_327 -> m20_329  [color=darkseagreen4, key=1, label="?", style=dashed];
m20_331 -> m20_332  [key=0, style=solid];
m20_334 -> m20_335  [key=0, style=solid];
m20_316 -> m20_314  [color=blue, key=0, style=bold];
m20_322 -> m20_319  [color=blue, key=0, style=bold];
m20_326 -> m20_324  [color=blue, key=0, style=bold];
m20_330 -> m20_327  [color=blue, key=0, style=bold];
m20_333 -> m20_331  [color=blue, key=0, style=bold];
m20_336 -> m20_334  [color=blue, key=0, style=bold];
m20_340 -> m20_341  [key=0, style=solid];
m20_341 -> m20_342  [key=0, style=solid];
m20_342 -> m20_340  [color=blue, key=0, style=bold];
m20_368 -> m20_369  [key=0, style=solid];
m20_374 -> m20_375  [key=0, style=solid];
m20_380 -> m20_381  [key=0, style=solid];
m20_386 -> m20_387  [key=0, style=solid];
m20_393 -> m20_394  [key=0, style=solid];
m20_393 -> m20_395  [key=2, style=dotted];
m20_400 -> m20_401  [key=0, style=solid];
m20_406 -> m20_407  [key=0, style=solid];
m20_363 -> m20_364  [key=0, style=solid];
m20_367 -> m20_368  [key=0, style=solid];
m20_370 -> m20_371  [key=0, style=solid];
m20_373 -> m20_374  [key=0, style=solid];
m20_376 -> m20_377  [key=0, style=solid];
m20_379 -> m20_380  [key=0, style=solid];
m20_382 -> m20_383  [key=0, style=solid];
m20_385 -> m20_386  [key=0, style=solid];
m20_388 -> m20_389  [key=0, style=solid];
m20_392 -> m20_393  [key=0, style=solid];
m20_396 -> m20_397  [key=0, style=solid];
m20_399 -> m20_400  [key=0, style=solid];
m20_403 -> m20_404  [key=0, style=solid];
m20_403 -> m20_69  [key=2, style=dotted];
m20_403 -> m20_15  [key=2, style=dotted];
m20_402 -> m20_403  [key=0, style=solid];
m20_364 -> m20_365  [key=0, style=solid];
m20_364 -> m20_366  [key=2, style=dotted];
m20_365 -> m20_363  [color=blue, key=0, style=bold];
m20_369 -> m20_367  [color=blue, key=0, style=bold];
m20_371 -> m20_372  [key=0, style=solid];
m20_371 -> m20_366  [key=2, style=dotted];
m20_372 -> m20_370  [color=blue, key=0, style=bold];
m20_375 -> m20_373  [color=blue, key=0, style=bold];
m20_377 -> m20_378  [key=0, style=solid];
m20_377 -> m20_10  [key=2, style=dotted];
m20_378 -> m20_376  [color=blue, key=0, style=bold];
m20_381 -> m20_379  [color=blue, key=0, style=bold];
m20_383 -> m20_384  [key=0, style=solid];
m20_383 -> m20_10  [key=2, style=dotted];
m20_384 -> m20_382  [color=blue, key=0, style=bold];
m20_387 -> m20_385  [color=blue, key=0, style=bold];
m20_389 -> m20_390  [key=0, style=solid];
m20_389 -> m20_391  [key=2, style=dotted];
m20_390 -> m20_388  [color=blue, key=0, style=bold];
m20_394 -> m20_392  [color=blue, key=0, style=bold];
m20_397 -> m20_398  [key=0, style=solid];
m20_397 -> m20_10  [key=2, style=dotted];
m20_398 -> m20_396  [color=blue, key=0, style=bold];
m20_401 -> m20_399  [color=blue, key=0, style=bold];
m20_404 -> m20_402  [color=blue, key=0, style=bold];
m20_407 -> m20_405  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_0  [color=blue, key=0, style=bold];
m20_130 -> m20_131  [key=0, style=solid];
m20_131 -> m20_132  [key=0, style=solid];
m20_131 -> m20_134  [key=2, style=dotted];
m20_132 -> m20_133  [key=0, style=solid];
m20_132 -> m20_31  [key=2, style=dotted];
m20_132 -> m20_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_133 -> m20_130  [color=blue, key=0, style=bold];
m20_96 -> m20_97  [key=0, style=solid];
m20_97 -> m20_98  [key=0, style=solid];
m20_97 -> m20_110  [key=2, style=dotted];
m20_97 -> m20_103  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m20_97 -> m20_108  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m20_98 -> m20_99  [key=0, style=solid];
m20_98 -> m20_100  [key=0, style=solid];
m20_103 -> m20_104  [key=0, style=solid];
m20_103 -> m20_107  [key=0, style=solid];
m20_108 -> m20_109  [key=0, style=solid];
m20_108 -> m20_64  [key=2, style=dotted];
m20_108 -> m20_65  [key=2, style=dotted];
m20_108 -> m20_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_99 -> m20_109  [key=0, style=solid];
m20_99 -> m20_58  [key=2, style=dotted];
m20_100 -> m20_101  [key=0, style=solid];
m20_100 -> m20_59  [key=2, style=dotted];
m20_100 -> m20_105  [color=darkseagreen4, key=1, label=servers, style=dashed];
m20_100 -> m20_115  [color=darkseagreen4, key=1, label=servers, style=dashed];
m20_100 -> m20_108  [color=darkseagreen4, key=1, label=servers, style=dashed];
m20_100 -> m20_125  [color=darkseagreen4, key=1, label=servers, style=dashed];
m20_101 -> m20_102  [key=0, style=solid];
m20_101 -> m20_59  [key=2, style=dotted];
m20_101 -> m20_106  [color=darkseagreen4, key=1, label=queues, style=dashed];
m20_101 -> m20_122  [color=darkseagreen4, key=1, label=queues, style=dashed];
m20_101 -> m20_108  [color=darkseagreen4, key=1, label=queues, style=dashed];
m20_101 -> m20_125  [color=darkseagreen4, key=1, label=queues, style=dashed];
m20_105 -> m20_106  [key=0, style=solid];
m20_105 -> m20_61  [key=2, style=dotted];
m20_105 -> m20_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_105 -> m20_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_102 -> m20_103  [key=0, style=solid];
m20_102 -> m20_60  [key=2, style=dotted];
m20_102 -> m20_105  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_102 -> m20_106  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_102 -> m20_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_106 -> m20_103  [key=0, style=solid];
m20_106 -> m20_61  [key=2, style=dotted];
m20_106 -> m20_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_106 -> m20_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_107 -> m20_108  [key=0, style=solid];
m20_107 -> m20_62  [key=2, style=dotted];
m20_104 -> m20_105  [key=0, style=solid];
m20_104 -> m20_112  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_104 -> m20_115  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_104 -> m20_106  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_104 -> m20_118  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_104 -> m20_122  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_104 -> m20_103  [color=darkorchid, key=3, label="Local variable var name", style=bold];
m20_109 -> m20_96  [color=blue, key=0, style=bold];
m20_139 -> m20_140  [key=0, style=solid];
m20_140 -> m20_141  [key=0, style=solid];
m20_140 -> m20_143  [key=2, style=dotted];
m20_141 -> m20_142  [key=0, style=solid];
m20_141 -> m20_31  [key=2, style=dotted];
m20_141 -> m20_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_142 -> m20_139  [color=blue, key=0, style=bold];
m20_89 -> m20_90  [key=0, style=solid];
m20_89 -> m20_92  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount", style=bold];
m20_90 -> m20_91  [key=0, style=solid];
m20_90 -> m20_92  [key=2, style=dotted];
m20_91 -> m20_89  [color=blue, key=0, style=bold];
m20_19 -> m20_20  [key=0, style=solid];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_10  [key=2, style=dotted];
m20_21 -> m20_19  [color=blue, key=0, style=bold];
m20_25 -> m20_26  [key=0, style=solid];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_29  [key=2, style=dotted];
m20_27 -> m20_28  [key=0, style=solid];
m20_27 -> m20_30  [key=2, style=dotted];
m20_27 -> m20_31  [key=2, style=dotted];
m20_27 -> m20_32  [key=2, style=dotted];
m20_27 -> m20_33  [key=2, style=dotted];
m20_27 -> m20_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_27 -> m20_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_28 -> m20_25  [color=blue, key=0, style=bold];
m20_22 -> m20_23  [key=0, style=solid];
m20_23 -> m20_24  [key=0, style=solid];
m20_23 -> m20_10  [key=2, style=dotted];
m20_24 -> m20_22  [color=blue, key=0, style=bold];
m20_205 -> m20_206  [key=0, style=solid];
m20_205 -> m20_208  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs", style=bold];
m20_206 -> m20_207  [key=0, style=solid];
m20_206 -> m20_208  [key=2, style=dotted];
m20_207 -> m20_205  [color=blue, key=0, style=bold];
m20_165 -> m20_298  [key=0, style=solid];
m20_165 -> m20_300  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m20_165 -> m20_301  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m20_165 -> m20_302  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_165 -> m20_303  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m20_165 -> m20_304  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m20_165 -> m20_307  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_165 -> m20_308  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_165 -> m20_325  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_165 -> m20_310  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m20_165 -> m20_335  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m20_298 -> m20_299  [key=0, style=solid];
m20_298 -> m20_300  [key=0, style=solid];
m20_300 -> m20_301  [key=0, style=solid];
m20_300 -> m20_312  [key=2, style=dotted];
m20_300 -> m20_306  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_300 -> m20_320  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_300 -> m20_321  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_300 -> m20_310  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_300 -> m20_332  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_301 -> m20_302  [key=0, style=solid];
m20_301 -> m20_312  [key=2, style=dotted];
m20_301 -> m20_308  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_301 -> m20_328  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_301 -> m20_329  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_301 -> m20_310  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_301 -> m20_332  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_302 -> m20_303  [key=0, style=solid];
m20_302 -> m20_302  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_302 -> m20_306  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_302 -> m20_315  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_302 -> m20_310  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_302 -> m20_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_303 -> m20_304  [key=0, style=solid];
m20_303 -> m20_60  [key=2, style=dotted];
m20_303 -> m20_306  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_303 -> m20_308  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_303 -> m20_309  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_304 -> m20_305  [key=0, style=solid];
m20_304 -> m20_309  [key=0, style=solid];
m20_307 -> m20_308  [key=0, style=solid];
m20_307 -> m20_304  [key=0, style=solid];
m20_308 -> m20_304  [key=0, style=solid];
m20_308 -> m20_61  [key=2, style=dotted];
m20_308 -> m20_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_308 -> m20_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_310 -> m20_311  [key=0, style=solid];
m20_310 -> m20_313  [key=2, style=dotted];
m20_310 -> m20_64  [key=2, style=dotted];
m20_310 -> m20_65  [key=2, style=dotted];
m20_310 -> m20_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_310 -> m20_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_299 -> m20_311  [key=0, style=solid];
m20_299 -> m20_30  [key=2, style=dotted];
m20_299 -> m20_58  [key=2, style=dotted];
m20_306 -> m20_307  [key=0, style=solid];
m20_306 -> m20_61  [key=2, style=dotted];
m20_306 -> m20_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_306 -> m20_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_309 -> m20_310  [key=0, style=solid];
m20_309 -> m20_62  [key=2, style=dotted];
m20_305 -> m20_306  [key=0, style=solid];
m20_305 -> m20_315  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_305 -> m20_320  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_305 -> m20_321  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_305 -> m20_308  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_305 -> m20_325  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_305 -> m20_328  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_305 -> m20_329  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_305 -> m20_304  [color=darkorchid, key=3, label="Local variable string id", style=bold];
m20_311 -> m20_165  [color=blue, key=0, style=bold];
m20_93 -> m20_94  [key=0, style=solid];
m20_93 -> m20_92  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount", style=bold];
m20_94 -> m20_95  [key=0, style=solid];
m20_94 -> m20_92  [key=2, style=dotted];
m20_95 -> m20_93  [color=blue, key=0, style=bold];
m20_148 -> m20_149  [key=0, style=solid];
m20_148 -> m20_150  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> Queues", style=bold];
m20_149 -> m20_150  [key=0, style=solid];
m20_149 -> m20_110  [key=2, style=dotted];
m20_149 -> m20_151  [color=darkseagreen4, key=1, label=queues, style=dashed];
m20_150 -> m20_151  [key=0, style=solid];
m20_150 -> m20_164  [key=2, style=dotted];
m20_150 -> m20_161  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_150 -> m20_162  [color=darkseagreen4, key=1, label=result, style=dashed];
m20_151 -> m20_152  [key=0, style=solid];
m20_151 -> m20_162  [key=0, style=solid];
m20_151 -> m20_156  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_151 -> m20_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_151 -> m20_157  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_151 -> m20_175  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_151 -> m20_158  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_151 -> m20_181  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_151 -> m20_161  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_161 -> m20_151  [key=0, style=solid];
m20_161 -> m20_166  [key=2, style=dotted];
m20_161 -> m20_167  [key=2, style=dotted];
m20_162 -> m20_163  [key=0, style=solid];
m20_152 -> m20_153  [key=0, style=solid];
m20_152 -> m20_152  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IList<string> firstJobIds", style=bold];
m20_152 -> m20_156  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IList<string> firstJobIds", style=bold];
m20_156 -> m20_157  [key=0, style=solid];
m20_156 -> m20_61  [key=2, style=dotted];
m20_156 -> m20_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_156 -> m20_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_156 -> m20_160  [color=darkseagreen4, key=1, label=firstJobIds, style=dashed];
m20_157 -> m20_158  [key=0, style=solid];
m20_157 -> m20_61  [key=2, style=dotted];
m20_157 -> m20_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_157 -> m20_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_157 -> m20_161  [color=darkseagreen4, key=1, label=length, style=dashed];
m20_158 -> m20_159  [key=0, style=solid];
m20_158 -> m20_61  [key=2, style=dotted];
m20_158 -> m20_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_158 -> m20_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_158 -> m20_161  [color=darkseagreen4, key=1, label=dequeued, style=dashed];
m20_153 -> m20_154  [key=0, style=solid];
m20_153 -> m20_153  [color=darkorchid, key=3, label="Local variable long length", style=bold];
m20_153 -> m20_157  [color=darkorchid, key=3, label="Local variable long length", style=bold];
m20_154 -> m20_155  [key=0, style=solid];
m20_154 -> m20_153  [color=darkorchid, key=3, label="Local variable long dequeued", style=bold];
m20_154 -> m20_158  [color=darkorchid, key=3, label="Local variable long dequeued", style=bold];
m20_155 -> m20_156  [key=0, style=solid];
m20_155 -> m20_60  [key=2, style=dotted];
m20_155 -> m20_157  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_155 -> m20_158  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_155 -> m20_159  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_159 -> m20_160  [key=0, style=solid];
m20_159 -> m20_62  [key=2, style=dotted];
m20_160 -> m20_161  [key=0, style=solid];
m20_160 -> m20_165  [key=2, style=dotted];
m20_160 -> m20_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_163 -> m20_148  [color=blue, key=0, style=bold];
m20_43 -> m20_44  [key=0, style=solid];
m20_44 -> m20_45  [key=0, style=solid];
m20_44 -> m20_57  [key=2, style=dotted];
m20_44 -> m20_50  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m20_44 -> m20_55  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m20_45 -> m20_46  [key=0, style=solid];
m20_45 -> m20_47  [key=0, style=solid];
m20_50 -> m20_51  [key=0, style=solid];
m20_50 -> m20_54  [key=0, style=solid];
m20_55 -> m20_56  [key=0, style=solid];
m20_55 -> m20_63  [key=2, style=dotted];
m20_55 -> m20_64  [key=2, style=dotted];
m20_55 -> m20_65  [key=2, style=dotted];
m20_55 -> m20_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_46 -> m20_56  [key=0, style=solid];
m20_46 -> m20_30  [key=2, style=dotted];
m20_46 -> m20_58  [key=2, style=dotted];
m20_47 -> m20_48  [key=0, style=solid];
m20_47 -> m20_59  [key=2, style=dotted];
m20_47 -> m20_52  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_47 -> m20_72  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_47 -> m20_55  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_47 -> m20_83  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_48 -> m20_49  [key=0, style=solid];
m20_48 -> m20_59  [key=2, style=dotted];
m20_48 -> m20_53  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_48 -> m20_80  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_48 -> m20_55  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_48 -> m20_83  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_52 -> m20_53  [key=0, style=solid];
m20_52 -> m20_61  [key=2, style=dotted];
m20_52 -> m20_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_52 -> m20_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_49 -> m20_50  [key=0, style=solid];
m20_49 -> m20_60  [key=2, style=dotted];
m20_49 -> m20_52  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_49 -> m20_53  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_49 -> m20_54  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m20_53 -> m20_50  [key=0, style=solid];
m20_53 -> m20_61  [key=2, style=dotted];
m20_53 -> m20_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_53 -> m20_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_54 -> m20_55  [key=0, style=solid];
m20_54 -> m20_62  [key=2, style=dotted];
m20_51 -> m20_52  [key=0, style=solid];
m20_51 -> m20_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_51 -> m20_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_51 -> m20_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_51 -> m20_76  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_51 -> m20_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_51 -> m20_50  [color=darkorchid, key=3, label="Local variable var job", style=bold];
m20_56 -> m20_43  [color=blue, key=0, style=bold];
m20_197 -> m20_198  [key=0, style=solid];
m20_198 -> m20_199  [key=0, style=solid];
m20_198 -> d60  [key=2, style=dotted];
m20_198 -> m20_143  [key=2, style=dotted];
m20_199 -> m20_200  [key=0, style=solid];
m20_199 -> m20_31  [key=2, style=dotted];
m20_199 -> m20_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_200 -> m20_197  [color=blue, key=0, style=bold];
m20_11 -> m20_12  [key=0, style=solid];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> d60  [key=2, style=dotted];
m20_12 -> m20_15  [key=2, style=dotted];
m20_13 -> m20_11  [color=blue, key=0, style=bold];
m20_7 -> m20_8  [key=0, style=solid];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_10  [key=2, style=dotted];
m20_9 -> m20_7  [color=blue, key=0, style=bold];
m20_3 -> m20_4  [key=0, style=solid];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_6  [key=2, style=dotted];
m20_5 -> m20_3  [color=blue, key=0, style=bold];
m20_414 -> m20_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_12  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_17  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_27  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_44  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_49  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_90  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_94  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_97  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_102  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_131  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_132  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_140  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_141  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_149  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_155  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_160  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_191  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_192  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_198  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_199  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_206  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_210  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_213  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_217  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_223  [color=red, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_344  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_348  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_414 -> m20_349  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m20_415 -> m20_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_415 -> m20_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_415 -> m20_76  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_415 -> m20_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m20_416 -> m20_72  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_416 -> m20_83  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_417 -> m20_80  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_417 -> m20_83  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_418 -> m20_112  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_418 -> m20_115  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_418 -> m20_118  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_418 -> m20_122  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_419 -> m20_115  [color=darkseagreen4, key=1, label=servers, style=dashed];
m20_419 -> m20_125  [color=darkseagreen4, key=1, label=servers, style=dashed];
m20_420 -> m20_122  [color=darkseagreen4, key=1, label=queues, style=dashed];
m20_420 -> m20_125  [color=darkseagreen4, key=1, label=queues, style=dashed];
m20_421 -> m20_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_421 -> m20_175  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_421 -> m20_181  [color=darkseagreen4, key=1, label=queue, style=dashed];
m20_422 -> m20_234  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m20_423 -> m20_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_424 -> m20_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_425 -> m20_315  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_425 -> m20_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_426 -> m20_315  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_426 -> m20_320  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_426 -> m20_321  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_426 -> m20_325  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_426 -> m20_328  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_426 -> m20_329  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_427 -> m20_320  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_427 -> m20_321  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_427 -> m20_332  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m20_428 -> m20_325  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_429 -> m20_328  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_429 -> m20_329  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_429 -> m20_332  [color=darkseagreen4, key=1, label=states, style=dashed];
m20_430 -> m20_335  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m20_431 -> m20_368  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_431 -> m20_374  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_431 -> m20_380  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_431 -> m20_386  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_431 -> m20_393  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_431 -> m20_400  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_431 -> m20_406  [color=darkseagreen4, key=1, label=stats, style=dashed];
m20_432 -> m20_403  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_25  [key=2, style=dotted];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_26  [key=2, style=dotted];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_18  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m21_3 -> m21_20  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_18  [color=darkseagreen4, key=1, label=failed, style=dashed];
m21_4 -> m21_22  [color=darkseagreen4, key=1, label=failed, style=dashed];
m21_18 -> m21_19  [key=0, style=solid];
m21_18 -> m21_24  [key=0, style=solid];
m21_20 -> m21_21  [key=0, style=solid];
m21_20 -> m21_34  [key=2, style=dotted];
m21_20 -> m21_35  [key=2, style=dotted];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_7  [color=darkseagreen4, key=1, label=period, style=dashed];
m21_5 -> m21_10  [color=darkseagreen4, key=1, label=period, style=dashed];
m21_5 -> m21_14  [color=darkseagreen4, key=1, label=period, style=dashed];
m21_5 -> m21_16  [color=darkseagreen4, key=1, label=period, style=dashed];
m21_22 -> m21_23  [key=0, style=solid];
m21_22 -> m21_34  [key=2, style=dotted];
m21_22 -> m21_35  [key=2, style=dotted];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_27  [key=2, style=dotted];
m21_6 -> m21_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m21_6 -> m21_9  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m21_6 -> m21_11  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m21_6 -> m21_12  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_10  [key=0, style=solid];
m21_7 -> m21_28  [key=2, style=dotted];
m21_10 -> m21_11  [key=0, style=solid];
m21_10 -> m21_13  [key=0, style=solid];
m21_10 -> m21_28  [key=2, style=dotted];
m21_14 -> m21_15  [key=0, style=solid];
m21_14 -> m21_28  [key=2, style=dotted];
m21_14 -> d54  [key=2, style=dotted];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_28  [key=2, style=dotted];
m21_16 -> d54  [key=2, style=dotted];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_29  [key=2, style=dotted];
m21_8 -> m21_18  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m21_8 -> m21_20  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m21_9 -> m21_13  [key=0, style=solid];
m21_9 -> m21_30  [key=2, style=dotted];
m21_9 -> m21_18  [color=darkseagreen4, key=1, label=failed, style=dashed];
m21_9 -> m21_22  [color=darkseagreen4, key=1, label=failed, style=dashed];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_31  [key=2, style=dotted];
m21_11 -> m21_18  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m21_11 -> m21_20  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_32  [key=2, style=dotted];
m21_12 -> m21_18  [color=darkseagreen4, key=1, label=failed, style=dashed];
m21_12 -> m21_22  [color=darkseagreen4, key=1, label=failed, style=dashed];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_25  [key=2, style=dotted];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_25  [key=2, style=dotted];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_25  [key=2, style=dotted];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_25  [key=2, style=dotted];
m21_21 -> m21_22  [key=0, style=solid];
m21_21 -> m21_25  [key=2, style=dotted];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_25  [key=2, style=dotted];
m21_24 -> m21_0  [color=blue, key=0, style=bold];
m21_36 -> m21_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m21_36 -> m21_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [color=red, key=0, style=solid];
m24_1 -> m24_2  [color=red, key=0, style=solid];
m24_2 -> m24_0  [color=blue, key=0, style=bold];
m24_3 -> m24_1  [color=red, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m25_3 -> m25_4  [key=0, style=solid];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_6  [key=2, style=dotted];
m25_5 -> m25_3  [color=blue, key=0, style=bold];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> d60  [key=2, style=dotted];
m25_25 -> m25_32  [key=2, style=dotted];
m25_25 -> m25_33  [key=2, style=dotted];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m25_12 -> m25_17  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_12 -> m25_18  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m25_13 -> m25_14  [key=0, style=solid];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_28  [key=2, style=dotted];
m25_16 -> m25_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m25_17 -> m25_18  [key=0, style=solid];
m25_17 -> m25_17  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m25_17 -> m25_21  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m25_18 -> m25_19  [key=0, style=solid];
m25_18 -> m25_20  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m25_18 -> m25_26  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m25_14 -> m25_15  [key=0, style=solid];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_17  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m25_21 -> m25_22  [key=0, style=solid];
m25_21 -> m25_23  [key=0, style=solid];
m25_19 -> m25_20  [key=0, style=solid];
m25_19 -> d60  [key=2, style=dotted];
m25_19 -> m25_22  [color=darkseagreen4, key=1, label=queueKey, style=dashed];
m25_19 -> m25_23  [color=darkseagreen4, key=1, label=queueKey, style=dashed];
m25_20 -> m25_21  [key=0, style=solid];
m25_20 -> d60  [key=2, style=dotted];
m25_20 -> m25_22  [color=darkseagreen4, key=1, label=fetchedKey, style=dashed];
m25_20 -> m25_23  [color=darkseagreen4, key=1, label=fetchedKey, style=dashed];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_34  [key=2, style=dotted];
m25_22 -> m25_24  [key=0, style=solid];
m25_22 -> m25_30  [key=2, style=dotted];
m25_22 -> m25_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_22 -> m25_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_31  [key=2, style=dotted];
m25_23 -> m25_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_23 -> m25_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_24 -> m25_15  [key=0, style=solid];
m25_24 -> m25_25  [key=0, style=solid];
m25_27 -> m25_12  [color=blue, key=0, style=bold];
m25_35 -> m25_36  [key=0, style=solid];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_38  [key=2, style=dotted];
m25_37 -> m25_35  [color=blue, key=0, style=bold];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_59  [key=2, style=dotted];
m25_50 -> m25_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_41  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m25_39 -> m25_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m25_39 -> m25_47  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m25_39 -> m25_50  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_39 -> m25_66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_54  [key=2, style=dotted];
m25_40 -> m25_55  [key=2, style=dotted];
m25_40 -> m25_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_40 -> m25_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_40 -> m25_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_40 -> m25_66  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_40 -> m25_52  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_56  [key=2, style=dotted];
m25_41 -> m25_43  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m25_41 -> m25_44  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m25_41 -> m25_45  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m25_41 -> m25_46  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_57  [key=2, style=dotted];
m25_42 -> m25_44  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_42 -> m25_45  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_42 -> m25_46  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_42 -> m25_47  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_42 -> m25_49  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_42 -> m25_62  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_47 -> m25_48  [key=0, style=solid];
m25_47 -> m25_32  [key=2, style=dotted];
m25_47 -> m25_58  [key=2, style=dotted];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_59  [key=2, style=dotted];
m25_49 -> m25_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_52 -> m25_53  [key=0, style=solid];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_58  [key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_58  [key=2, style=dotted];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_58  [key=2, style=dotted];
m25_46 -> m25_47  [key=0, style=solid];
m25_46 -> m25_58  [key=2, style=dotted];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_11  [key=2, style=dotted];
m25_48 -> m25_50  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_48 -> m25_51  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_51 -> m25_52  [key=0, style=solid];
m25_51 -> m25_60  [key=2, style=dotted];
m25_53 -> m25_39  [color=blue, key=0, style=bold];
m25_133 -> m25_134  [key=0, style=solid];
m25_134 -> m25_135  [key=0, style=solid];
m25_134 -> m25_136  [key=2, style=dotted];
m25_134 -> m25_137  [key=2, style=dotted];
m25_135 -> m25_133  [color=blue, key=0, style=bold];
m25_102 -> m25_103  [key=0, style=solid];
m25_102 -> m25_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_103 -> m25_104  [key=0, style=solid];
m25_103 -> m25_105  [key=0, style=solid];
m25_105 -> m25_106  [key=0, style=solid];
m25_105 -> d60  [key=2, style=dotted];
m25_105 -> m25_96  [key=2, style=dotted];
m25_105 -> m25_108  [color=darkseagreen4, key=1, label=entries, style=dashed];
m25_105 -> m25_111  [color=darkseagreen4, key=1, label=entries, style=dashed];
m25_104 -> m25_112  [key=0, style=solid];
m25_104 -> m25_113  [key=2, style=dotted];
m25_106 -> m25_107  [key=0, style=solid];
m25_106 -> m25_108  [key=0, style=solid];
m25_108 -> m25_109  [key=0, style=solid];
m25_108 -> m25_114  [key=2, style=dotted];
m25_108 -> m25_110  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m25_108 -> m25_111  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m25_111 -> m25_112  [key=0, style=solid];
m25_111 -> m25_116  [key=2, style=dotted];
m25_111 -> m25_97  [key=2, style=dotted];
m25_107 -> m25_112  [key=0, style=solid];
m25_109 -> m25_110  [key=0, style=solid];
m25_109 -> m25_115  [key=2, style=dotted];
m25_110 -> m25_111  [key=0, style=solid];
m25_110 -> m25_115  [key=2, style=dotted];
m25_112 -> m25_102  [color=blue, key=0, style=bold];
m25_193 -> m25_194  [key=0, style=solid];
m25_193 -> m25_205  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_194 -> m25_195  [key=0, style=solid];
m25_194 -> m25_210  [key=2, style=dotted];
m25_194 -> m25_198  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m25_205 -> m25_206  [key=0, style=solid];
m25_205 -> m25_203  [key=0, style=solid];
m25_205 -> m25_215  [key=2, style=dotted];
m25_195 -> m25_196  [key=0, style=solid];
m25_195 -> m25_167  [key=2, style=dotted];
m25_195 -> m25_200  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m25_195 -> m25_222  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m25_195 -> m25_203  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m25_198 -> m25_199  [key=0, style=solid];
m25_198 -> m25_201  [key=0, style=solid];
m25_196 -> m25_197  [key=0, style=solid];
m25_196 -> m25_205  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m25_200 -> m25_198  [key=0, style=solid];
m25_200 -> m25_59  [key=2, style=dotted];
m25_200 -> m25_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_200 -> m25_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_203 -> m25_204  [key=0, style=solid];
m25_203 -> m25_208  [key=0, style=solid];
m25_197 -> m25_198  [key=0, style=solid];
m25_197 -> m25_211  [key=2, style=dotted];
m25_197 -> m25_200  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_197 -> m25_201  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_201 -> m25_202  [key=0, style=solid];
m25_201 -> m25_212  [key=2, style=dotted];
m25_199 -> m25_200  [key=0, style=solid];
m25_199 -> m25_217  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_199 -> m25_222  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_202 -> m25_203  [key=0, style=solid];
m25_202 -> m25_207  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m25_202 -> m25_208  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m25_207 -> m25_203  [key=0, style=solid];
m25_207 -> m25_207  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m25_207 -> m25_208  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m25_208 -> m25_209  [key=0, style=solid];
m25_204 -> m25_205  [key=0, style=solid];
m25_204 -> m25_213  [key=2, style=dotted];
m25_204 -> m25_214  [key=2, style=dotted];
m25_204 -> m25_204  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m25_204 -> m25_206  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m25_206 -> m25_207  [key=0, style=solid];
m25_206 -> m25_176  [key=2, style=dotted];
m25_206 -> m25_206  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m25_209 -> m25_193  [color=blue, key=0, style=bold];
m25_191 -> m25_192  [key=0, style=solid];
m25_191 -> d60  [key=2, style=dotted];
m25_191 -> m25_32  [key=2, style=dotted];
m25_191 -> m25_33  [key=2, style=dotted];
m25_190 -> m25_191  [key=0, style=solid];
m25_192 -> m25_190  [color=blue, key=0, style=bold];
m25_179 -> m25_180  [key=0, style=solid];
m25_179 -> m25_59  [key=2, style=dotted];
m25_179 -> m25_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_176 -> m25_177  [key=0, style=solid];
m25_176 -> m25_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_176 -> m25_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_176 -> m25_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_176 -> m25_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_177 -> m25_178  [key=0, style=solid];
m25_177 -> m25_11  [key=2, style=dotted];
m25_177 -> m25_179  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_177 -> m25_180  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_178 -> m25_179  [key=0, style=solid];
m25_178 -> m25_59  [key=2, style=dotted];
m25_178 -> m25_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_180 -> m25_181  [key=0, style=solid];
m25_180 -> m25_60  [key=2, style=dotted];
m25_181 -> m25_176  [color=blue, key=0, style=bold];
m25_7 -> m25_8  [key=0, style=solid];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_10  [key=2, style=dotted];
m25_8 -> m25_11  [key=2, style=dotted];
m25_9 -> m25_7  [color=blue, key=0, style=bold];
m25_120 -> m25_121  [key=0, style=solid];
m25_121 -> m25_122  [key=0, style=solid];
m25_121 -> d60  [key=2, style=dotted];
m25_121 -> m25_123  [key=2, style=dotted];
m25_122 -> m25_120  [color=blue, key=0, style=bold];
m25_138 -> m25_139  [key=0, style=solid];
m25_138 -> m25_141  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m25_138 -> m25_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_139 -> m25_140  [key=0, style=solid];
m25_139 -> m25_141  [key=0, style=solid];
m25_141 -> m25_142  [key=0, style=solid];
m25_141 -> m25_143  [key=0, style=solid];
m25_143 -> m25_144  [key=0, style=solid];
m25_143 -> m25_130  [key=2, style=dotted];
m25_143 -> m25_64  [key=2, style=dotted];
m25_140 -> m25_144  [key=0, style=solid];
m25_140 -> m25_113  [key=2, style=dotted];
m25_142 -> m25_144  [key=0, style=solid];
m25_142 -> m25_113  [key=2, style=dotted];
m25_144 -> m25_138  [color=blue, key=0, style=bold];
m25_151 -> m25_152  [key=0, style=solid];
m25_151 -> m25_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_151 -> m25_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_151 -> m25_154  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_151 -> m25_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_151 -> m25_155  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m25_151 -> m25_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_151 -> m25_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_152 -> m25_153  [key=0, style=solid];
m25_152 -> m25_11  [key=2, style=dotted];
m25_152 -> m25_154  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_152 -> m25_157  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_152 -> m25_158  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_153 -> m25_154  [key=0, style=solid];
m25_153 -> m25_59  [key=2, style=dotted];
m25_153 -> m25_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_154 -> m25_155  [key=0, style=solid];
m25_154 -> m25_59  [key=2, style=dotted];
m25_154 -> m25_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_155 -> m25_156  [key=0, style=solid];
m25_155 -> m25_158  [key=0, style=solid];
m25_157 -> m25_155  [key=0, style=solid];
m25_157 -> m25_59  [key=2, style=dotted];
m25_157 -> m25_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_158 -> m25_159  [key=0, style=solid];
m25_158 -> m25_60  [key=2, style=dotted];
m25_156 -> m25_157  [key=0, style=solid];
m25_156 -> m25_170  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m25_159 -> m25_151  [color=blue, key=0, style=bold];
m25_173 -> m25_174  [key=0, style=solid];
m25_174 -> m25_175  [key=0, style=solid];
m25_174 -> m25_176  [key=2, style=dotted];
m25_175 -> m25_173  [color=blue, key=0, style=bold];
m25_69 -> m25_70  [key=0, style=solid];
m25_70 -> m25_71  [key=0, style=solid];
m25_70 -> d60  [key=2, style=dotted];
m25_70 -> m25_96  [key=2, style=dotted];
m25_70 -> m25_78  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_79  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_80  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_83  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_84  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_85  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_86  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_94  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_73  [key=0, style=solid];
m25_78 -> m25_79  [key=0, style=solid];
m25_78 -> m25_80  [key=0, style=solid];
m25_78 -> m25_97  [key=2, style=dotted];
m25_79 -> m25_80  [key=0, style=solid];
m25_79 -> m25_90  [color=darkseagreen4, key=1, label=type, style=dashed];
m25_80 -> m25_81  [key=0, style=solid];
m25_80 -> m25_82  [key=0, style=solid];
m25_80 -> m25_97  [key=2, style=dotted];
m25_81 -> m25_82  [key=0, style=solid];
m25_81 -> m25_90  [color=darkseagreen4, key=1, label=method, style=dashed];
m25_82 -> m25_83  [key=0, style=solid];
m25_82 -> m25_84  [key=0, style=solid];
m25_82 -> m25_97  [key=2, style=dotted];
m25_83 -> m25_84  [key=0, style=solid];
m25_83 -> m25_90  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m25_84 -> m25_85  [key=0, style=solid];
m25_84 -> m25_86  [key=0, style=solid];
m25_84 -> m25_97  [key=2, style=dotted];
m25_85 -> m25_86  [key=0, style=solid];
m25_85 -> m25_90  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m25_86 -> m25_87  [key=0, style=solid];
m25_86 -> m25_88  [key=0, style=solid];
m25_86 -> m25_97  [key=2, style=dotted];
m25_87 -> m25_88  [key=0, style=solid];
m25_87 -> m25_94  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m25_94 -> m25_95  [key=0, style=solid];
m25_94 -> m25_100  [key=2, style=dotted];
m25_94 -> m25_97  [key=2, style=dotted];
m25_94 -> m25_101  [key=2, style=dotted];
m25_72 -> m25_95  [key=0, style=solid];
m25_73 -> m25_74  [key=0, style=solid];
m25_73 -> m25_90  [color=darkseagreen4, key=1, label=type, style=dashed];
m25_74 -> m25_75  [key=0, style=solid];
m25_74 -> m25_90  [color=darkseagreen4, key=1, label=method, style=dashed];
m25_90 -> m25_91  [key=0, style=solid];
m25_90 -> m25_98  [key=2, style=dotted];
m25_75 -> m25_76  [key=0, style=solid];
m25_75 -> m25_90  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m25_76 -> m25_77  [key=0, style=solid];
m25_76 -> m25_90  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m25_77 -> m25_78  [key=0, style=solid];
m25_77 -> m25_94  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m25_88 -> m25_89  [key=0, style=solid];
m25_89 -> m25_90  [key=0, style=solid];
m25_91 -> m25_92  [key=0, style=solid];
m25_91 -> m25_94  [key=0, style=solid];
m25_91 -> m25_99  [key=2, style=dotted];
m25_92 -> m25_93  [key=0, style=solid];
m25_93 -> m25_94  [key=0, style=solid];
m25_95 -> m25_69  [color=blue, key=0, style=bold];
m25_221 -> m25_222  [key=0, style=solid];
m25_66 -> m25_67  [key=0, style=solid];
m25_66 -> d60  [key=2, style=dotted];
m25_66 -> m25_68  [key=2, style=dotted];
m25_62 -> m25_63  [key=0, style=solid];
m25_62 -> d60  [key=2, style=dotted];
m25_62 -> m25_64  [key=2, style=dotted];
m25_61 -> m25_62  [key=0, style=solid];
m25_65 -> m25_66  [key=0, style=solid];
m25_63 -> m25_61  [color=blue, key=0, style=bold];
m25_67 -> m25_65  [color=blue, key=0, style=bold];
m25_161 -> m25_162  [key=0, style=solid];
m25_161 -> m25_163  [key=2, style=dotted];
m25_165 -> m25_166  [key=0, style=solid];
m25_165 -> d60  [key=2, style=dotted];
m25_165 -> m25_167  [key=2, style=dotted];
m25_165 -> m25_168  [key=2, style=dotted];
m25_165 -> m25_32  [key=2, style=dotted];
m25_165 -> m25_64  [key=2, style=dotted];
m25_170 -> m25_171  [key=0, style=solid];
m25_170 -> d60  [key=2, style=dotted];
m25_170 -> m25_172  [key=2, style=dotted];
m25_160 -> m25_161  [key=0, style=solid];
m25_164 -> m25_165  [key=0, style=solid];
m25_169 -> m25_170  [key=0, style=solid];
m25_162 -> m25_160  [color=blue, key=0, style=bold];
m25_166 -> m25_164  [color=blue, key=0, style=bold];
m25_171 -> m25_169  [color=blue, key=0, style=bold];
m25_183 -> m25_184  [key=0, style=solid];
m25_183 -> m25_185  [key=2, style=dotted];
m25_187 -> m25_188  [key=0, style=solid];
m25_187 -> d60  [key=2, style=dotted];
m25_187 -> m25_189  [key=2, style=dotted];
m25_182 -> m25_183  [key=0, style=solid];
m25_186 -> m25_187  [key=0, style=solid];
m25_184 -> m25_182  [color=blue, key=0, style=bold];
m25_188 -> m25_186  [color=blue, key=0, style=bold];
m25_222 -> m25_223  [key=0, style=solid];
m25_222 -> m25_224  [key=2, style=dotted];
m25_222 -> m25_225  [key=2, style=dotted];
m25_222 -> m25_226  [key=2, style=dotted];
m25_222 -> m25_227  [key=2, style=dotted];
m25_217 -> m25_218  [key=0, style=solid];
m25_217 -> m25_219  [key=2, style=dotted];
m25_217 -> m25_220  [key=2, style=dotted];
m25_216 -> m25_217  [key=0, style=solid];
m25_218 -> m25_216  [color=blue, key=0, style=bold];
m25_223 -> m25_221  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_145 -> m25_146  [key=0, style=solid];
m25_145 -> m25_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_146 -> m25_147  [key=0, style=solid];
m25_146 -> m25_148  [key=0, style=solid];
m25_148 -> m25_149  [key=0, style=solid];
m25_148 -> m25_130  [key=2, style=dotted];
m25_148 -> m25_96  [key=2, style=dotted];
m25_147 -> m25_150  [key=0, style=solid];
m25_147 -> m25_113  [key=2, style=dotted];
m25_149 -> m25_150  [key=0, style=solid];
m25_150 -> m25_145  [color=blue, key=0, style=bold];
m25_118 -> m25_119  [key=0, style=solid];
m25_118 -> d60  [key=2, style=dotted];
m25_118 -> m25_33  [key=2, style=dotted];
m25_117 -> m25_118  [key=0, style=solid];
m25_119 -> m25_117  [color=blue, key=0, style=bold];
m25_124 -> m25_125  [key=0, style=solid];
m25_124 -> m25_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_125 -> m25_126  [key=0, style=solid];
m25_125 -> m25_127  [key=0, style=solid];
m25_127 -> m25_128  [key=0, style=solid];
m25_127 -> m25_130  [key=2, style=dotted];
m25_127 -> m25_131  [key=2, style=dotted];
m25_126 -> m25_129  [key=0, style=solid];
m25_126 -> m25_113  [key=2, style=dotted];
m25_128 -> m25_129  [key=0, style=solid];
m25_128 -> m25_132  [key=2, style=dotted];
m25_129 -> m25_124  [color=blue, key=0, style=bold];
m25_228 -> m25_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_48  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_70  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_105  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_118  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_121  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_127  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_134  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_143  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_148  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_152  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_174  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_191  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_194  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_197  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_206  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_229 -> m25_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_229 -> m25_66  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_230 -> m25_62  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_231 -> m25_66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_232 -> m25_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_232 -> m25_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_232 -> m25_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_233 -> m25_165  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m25_234 -> m25_170  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m25_235 -> m25_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_235 -> m25_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_236 -> m25_217  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_236 -> m25_222  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_237 -> m25_222  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m26_74 -> m26_75  [key=0, style=solid];
m26_75 -> m26_76  [key=0, style=solid];
m26_76 -> m26_77  [key=0, style=solid];
m26_76 -> m26_48  [key=2, style=dotted];
m26_76 -> m26_80  [color=darkseagreen4, key=1, label=token, style=dashed];
m26_77 -> m26_78  [key=0, style=solid];
m26_77 -> m26_23  [key=2, style=dotted];
m26_77 -> m26_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_78 -> m26_74  [color=blue, key=0, style=bold];
m26_37 -> m26_38  [key=0, style=solid];
m26_38 -> m26_39  [key=0, style=solid];
m26_38 -> m26_23  [key=2, style=dotted];
m26_38 -> m26_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_24  [key=2, style=dotted];
m26_40 -> m26_37  [color=blue, key=0, style=bold];
m26_82 -> m26_83  [key=0, style=solid];
m26_83 -> m26_84  [key=0, style=solid];
m26_84 -> m26_85  [key=0, style=solid];
m26_84 -> m26_48  [key=2, style=dotted];
m26_84 -> m26_88  [color=darkseagreen4, key=1, label=token, style=dashed];
m26_85 -> m26_86  [key=0, style=solid];
m26_85 -> m26_23  [key=2, style=dotted];
m26_85 -> m26_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_86 -> m26_82  [color=blue, key=0, style=bold];
m26_54 -> m26_55  [key=0, style=solid];
m26_55 -> m26_56  [key=0, style=solid];
m26_55 -> m26_14  [key=2, style=dotted];
m26_56 -> m26_57  [key=0, style=solid];
m26_56 -> m26_48  [key=2, style=dotted];
m26_56 -> m26_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m26_57 -> m26_58  [key=0, style=solid];
m26_57 -> m26_23  [key=2, style=dotted];
m26_57 -> m26_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_58 -> m26_54  [color=blue, key=0, style=bold];
m26_30 -> m26_31  [key=0, style=solid];
m26_31 -> m26_32  [key=0, style=solid];
m26_31 -> m26_23  [key=2, style=dotted];
m26_31 -> m26_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_32 -> m26_33  [key=0, style=solid];
m26_32 -> m26_24  [key=2, style=dotted];
m26_33 -> m26_30  [color=blue, key=0, style=bold];
m26_19 -> m26_20  [key=0, style=solid];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_23  [key=2, style=dotted];
m26_20 -> m26_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_24  [key=2, style=dotted];
m26_22 -> m26_19  [color=blue, key=0, style=bold];
m26_63 -> m26_64  [key=0, style=solid];
m26_64 -> m26_65  [key=0, style=solid];
m26_64 -> m26_11  [key=2, style=dotted];
m26_64 -> m26_12  [key=2, style=dotted];
m26_64 -> m26_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_65 -> m26_66  [key=0, style=solid];
m26_65 -> m26_48  [key=2, style=dotted];
m26_65 -> m26_72  [color=darkseagreen4, key=1, label=token, style=dashed];
m26_66 -> m26_67  [key=0, style=solid];
m26_66 -> m26_23  [key=2, style=dotted];
m26_66 -> m26_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_67 -> m26_63  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [color=red, key=0, style=solid];
m26_1 -> m26_2  [color=red, key=0, style=solid];
m26_1 -> m26_8  [color=red, key=2, style=dotted];
m26_1 -> m26_9  [color=red, key=2, style=dotted];
m26_2 -> m26_3  [color=red, key=0, style=solid];
m26_2 -> m26_10  [color=red, key=2, style=dotted];
m26_3 -> m26_4  [color=red, key=0, style=solid];
m26_3 -> m26_11  [color=red, key=2, style=dotted];
m26_3 -> m26_12  [color=red, key=2, style=dotted];
m26_3 -> m26_15  [color=red, key=1, label="lambda expression", style=dashed];
m26_4 -> m26_5  [color=red, key=0, style=solid];
m26_4 -> m26_13  [color=red, key=2, style=dotted];
m26_5 -> m26_6  [color=red, key=0, style=solid];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_14  [key=2, style=dotted];
m26_7 -> m26_0  [color=blue, key=0, style=bold];
m26_95 -> m26_96  [key=0, style=solid];
m26_15 -> m26_16  [color=red, key=0, style=solid];
m26_16 -> m26_17  [color=red, key=0, style=solid];
m26_16 -> m26_18  [color=red, key=2, style=dotted];
m26_17 -> m26_15  [color=blue, key=0, style=bold];
m26_25 -> m26_26  [key=0, style=solid];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_28  [key=2, style=dotted];
m26_26 -> m26_29  [key=2, style=dotted];
m26_27 -> m26_25  [color=blue, key=0, style=bold];
m26_34 -> m26_35  [key=0, style=solid];
m26_35 -> m26_36  [key=0, style=solid];
m26_35 -> m26_28  [key=2, style=dotted];
m26_35 -> m26_29  [key=2, style=dotted];
m26_36 -> m26_34  [color=blue, key=0, style=bold];
m26_41 -> m26_42  [key=0, style=solid];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_28  [key=2, style=dotted];
m26_42 -> m26_29  [key=2, style=dotted];
m26_43 -> m26_41  [color=blue, key=0, style=bold];
m26_60 -> m26_61  [key=0, style=solid];
m26_60 -> m26_62  [key=2, style=dotted];
m26_59 -> m26_60  [key=0, style=solid];
m26_61 -> m26_59  [color=blue, key=0, style=bold];
m26_68 -> m26_69  [key=0, style=solid];
m26_72 -> m26_73  [key=0, style=solid];
m26_72 -> m26_62  [key=2, style=dotted];
m26_71 -> m26_72  [key=0, style=solid];
m26_69 -> m26_70  [key=0, style=solid];
m26_69 -> m26_23  [key=2, style=dotted];
m26_69 -> m26_18  [key=2, style=dotted];
m26_70 -> m26_68  [color=blue, key=0, style=bold];
m26_73 -> m26_71  [color=blue, key=0, style=bold];
m26_80 -> m26_81  [key=0, style=solid];
m26_80 -> m26_62  [key=2, style=dotted];
m26_79 -> m26_80  [key=0, style=solid];
m26_81 -> m26_79  [color=blue, key=0, style=bold];
m26_88 -> m26_89  [key=0, style=solid];
m26_88 -> m26_62  [key=2, style=dotted];
m26_87 -> m26_88  [key=0, style=solid];
m26_89 -> m26_87  [color=blue, key=0, style=bold];
m26_96 -> m26_97  [key=0, style=solid];
m26_96 -> m26_62  [key=2, style=dotted];
m26_97 -> m26_95  [color=blue, key=0, style=bold];
m26_90 -> m26_91  [key=0, style=solid];
m26_91 -> m26_92  [key=0, style=solid];
m26_92 -> m26_93  [key=0, style=solid];
m26_92 -> m26_48  [key=2, style=dotted];
m26_92 -> m26_96  [color=darkseagreen4, key=1, label=token, style=dashed];
m26_93 -> m26_94  [key=0, style=solid];
m26_93 -> m26_23  [key=2, style=dotted];
m26_93 -> m26_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_94 -> m26_90  [color=blue, key=0, style=bold];
m26_44 -> m26_45  [key=0, style=solid];
m26_45 -> m26_46  [key=0, style=solid];
m26_45 -> m26_48  [key=2, style=dotted];
m26_46 -> m26_47  [key=0, style=solid];
m26_46 -> m26_24  [key=2, style=dotted];
m26_47 -> m26_44  [color=blue, key=0, style=bold];
m26_48 -> m26_98  [key=0, style=solid];
m26_98 -> m26_99  [key=0, style=solid];
m26_98 -> m26_28  [key=2, style=dotted];
m26_99 -> m26_48  [color=blue, key=0, style=bold];
m26_49 -> m26_50  [key=0, style=solid];
m26_50 -> m26_51  [key=0, style=solid];
m26_50 -> m26_48  [key=2, style=dotted];
m26_51 -> m26_52  [key=0, style=solid];
m26_51 -> m26_53  [key=2, style=dotted];
m26_52 -> m26_49  [color=blue, key=0, style=bold];
m26_100 -> m26_1  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_2  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_3  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_4  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_5  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_20  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_42  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_76  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_83  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_100 -> m26_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m26_101 -> m26_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m26_102 -> m26_72  [color=darkseagreen4, key=1, label=token, style=dashed];
m26_103 -> m26_80  [color=darkseagreen4, key=1, label=token, style=dashed];
m26_104 -> m26_88  [color=darkseagreen4, key=1, label=token, style=dashed];
m26_105 -> m26_96  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_8 -> m27_9  [key=0, style=solid];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_11  [key=2, style=dotted];
m27_10 -> m27_8  [color=blue, key=0, style=bold];
m27_3 -> m27_4  [key=0, style=solid];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_6  [key=2, style=dotted];
m27_4 -> d58  [key=2, style=dotted];
m27_5 -> m27_3  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [color=red, key=0, style=solid];
m27_1 -> m27_2  [color=red, key=0, style=solid];
m27_2 -> m27_0  [color=blue, key=0, style=bold];
m27_12 -> m27_13  [key=0, style=solid];
m27_13 -> m27_14  [key=0, style=solid];
m27_13 -> m27_15  [key=2, style=dotted];
m27_14 -> m27_12  [color=blue, key=0, style=bold];
m27_16 -> m27_1  [color=red, key=1, label="HangFire.States.SucceededState", style=dashed];
m27_16 -> m27_4  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m28_6 -> m28_7  [color=red, key=0, style=solid];
m28_6 -> m28_11  [color=red, key=1, label=string, style=dashed];
m28_7 -> m28_8  [color=red, key=0, style=solid];
m28_7 -> m28_9  [color=red, key=2, style=dotted];
m28_7 -> m28_10  [color=red, key=1, label="lambda expression", style=dashed];
m28_8 -> m28_6  [color=blue, key=0, style=bold];
m28_14 -> m28_15  [color=red, key=0, style=solid];
m28_14 -> m28_18  [color=red, key=1, label=string, style=dashed];
m28_15 -> m28_16  [color=red, key=0, style=solid];
m28_15 -> m28_9  [color=red, key=2, style=dotted];
m28_15 -> m28_17  [color=red, key=1, label="lambda expression", style=dashed];
m28_16 -> m28_14  [color=blue, key=0, style=bold];
m28_22 -> m28_23  [color=red, key=0, style=solid];
m28_22 -> m28_9  [color=red, key=2, style=dotted];
m28_22 -> m28_24  [color=red, key=1, label="lambda expression", style=dashed];
m28_21 -> m28_22  [color=red, key=0, style=solid];
m28_21 -> m28_25  [color=red, key=1, label=string, style=dashed];
m28_23 -> m28_21  [color=blue, key=0, style=bold];
m28_24 -> m28_25  [color=red, key=0, style=solid];
m28_11 -> m28_12  [color=red, key=0, style=solid];
m28_11 -> m28_13  [color=red, key=2, style=dotted];
m28_10 -> m28_11  [color=red, key=0, style=solid];
m28_12 -> m28_10  [color=blue, key=0, style=bold];
m28_18 -> m28_19  [color=red, key=0, style=solid];
m28_18 -> m28_20  [color=red, key=2, style=dotted];
m28_17 -> m28_18  [color=red, key=0, style=solid];
m28_19 -> m28_17  [color=blue, key=0, style=bold];
m28_25 -> m28_26  [color=red, key=0, style=solid];
m28_25 -> m28_27  [color=red, key=2, style=dotted];
m28_26 -> m28_24  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [color=red, key=0, style=solid];
m28_0 -> m28_3  [color=red, key=1, label=IRedisTransaction, style=dashed];
m28_1 -> m28_2  [color=red, key=0, style=solid];
m28_1 -> m28_3  [color=red, key=0, style=solid];
m28_3 -> m28_4  [color=red, key=0, style=solid];
m28_2 -> m28_4  [color=red, key=0, style=solid];
m28_2 -> m28_5  [color=red, key=2, style=dotted];
m28_4 -> m28_0  [color=blue, key=0, style=bold];
m28_28 -> m28_3  [color=red, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyValue", style=dashed];
m28_28 -> m28_7  [color=red, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyValue", style=dashed];
m28_28 -> m28_15  [color=red, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyValue", style=dashed];
m28_28 -> m28_22  [color=red, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyValue", style=dashed];
m28_29 -> m28_11  [color=red, key=1, label=string, style=dashed];
m28_30 -> m28_18  [color=red, key=1, label=string, style=dashed];
m28_31 -> m28_25  [color=red, key=1, label=string, style=dashed];
m28_32 -> m28_25  [color=red, key=1, label="System.TimeSpan", style=dashed];
m29_14 -> m29_15  [color=green, key=0, style=solid];
m29_15 -> m29_16  [color=green, key=0, style=solid];
m29_15 -> m29_17  [color=green, key=2, style=dotted];
m29_16 -> m29_14  [color=blue, key=0, style=bold];
m29_17 -> m29_17  [color=darkorchid, key=3, label="Field variable string Name", style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_2 -> m29_0  [color=blue, key=0, style=bold];
m29_3 -> m29_4  [key=0, style=solid];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_6  [key=2, style=dotted];
m29_4 -> d58  [key=2, style=dotted];
m29_5 -> m29_3  [color=blue, key=0, style=bold];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_10  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m29_9 -> m29_10  [color=green, key=0, style=solid];
m29_9 -> m29_12  [key=2, style=dotted];
m29_10 -> m29_11  [color=green, key=0, style=solid];
m29_10 -> m29_13  [color=green, key=2, style=dotted];
m29_11 -> m29_8  [color=blue, key=0, style=bold];
m29_18 -> m29_1  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m29_18 -> m29_4  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m30_128 -> m30_129  [key=0, style=solid];
m30_129 -> m30_130  [key=0, style=solid];
m30_129 -> m30_137  [key=2, style=dotted];
m30_129 -> m30_131  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_129 -> m30_133  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_130 -> m30_131  [key=0, style=solid];
m30_130 -> m30_71  [key=2, style=dotted];
m30_131 -> m30_132  [key=0, style=solid];
m30_131 -> m30_55  [key=2, style=dotted];
m30_131 -> m30_93  [key=2, style=dotted];
m30_131 -> m30_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_133 -> m30_134  [key=0, style=solid];
m30_133 -> m30_55  [key=2, style=dotted];
m30_133 -> m30_93  [key=2, style=dotted];
m30_133 -> m30_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_132 -> m30_133  [key=0, style=solid];
m30_132 -> m30_55  [key=2, style=dotted];
m30_132 -> m30_93  [key=2, style=dotted];
m30_132 -> m30_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_134 -> m30_135  [key=0, style=solid];
m30_134 -> m30_24  [key=2, style=dotted];
m30_135 -> m30_136  [key=0, style=solid];
m30_135 -> m30_30  [key=2, style=dotted];
m30_136 -> m30_128  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_9  [key=2, style=dotted];
m30_1 -> m30_5  [color=darkseagreen4, key=1, label=workerContext, style=dashed];
m30_2 -> m30_3  [key=0, style=solid];
m30_2 -> m30_10  [key=2, style=dotted];
m30_2 -> m30_5  [color=darkseagreen4, key=1, label=connection, style=dashed];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_12  [key=2, style=dotted];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_5  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_11  [key=2, style=dotted];
m30_4 -> m30_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_13  [key=2, style=dotted];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_14  [key=2, style=dotted];
m30_8 -> m30_0  [color=blue, key=0, style=bold];
m30_82 -> m30_83  [key=0, style=solid];
m30_83 -> m30_84  [key=0, style=solid];
m30_83 -> m30_70  [key=2, style=dotted];
m30_83 -> m30_86  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m30_83 -> m30_87  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m30_84 -> m30_85  [key=0, style=solid];
m30_84 -> m30_70  [key=2, style=dotted];
m30_84 -> m30_88  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m30_86 -> m30_87  [key=0, style=solid];
m30_86 -> m30_55  [key=2, style=dotted];
m30_86 -> m30_93  [key=2, style=dotted];
m30_86 -> m30_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_87 -> m30_88  [key=0, style=solid];
m30_87 -> m30_71  [key=2, style=dotted];
m30_85 -> m30_86  [key=0, style=solid];
m30_85 -> m30_55  [key=2, style=dotted];
m30_85 -> m30_93  [key=2, style=dotted];
m30_85 -> m30_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_88 -> m30_89  [key=0, style=solid];
m30_88 -> m30_71  [key=2, style=dotted];
m30_89 -> m30_90  [key=0, style=solid];
m30_89 -> m30_55  [key=2, style=dotted];
m30_89 -> m30_25  [key=2, style=dotted];
m30_89 -> m30_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_90 -> m30_91  [key=0, style=solid];
m30_90 -> m30_24  [key=2, style=dotted];
m30_90 -> m30_104  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_91 -> m30_92  [key=0, style=solid];
m30_91 -> m30_25  [key=2, style=dotted];
m30_91 -> m30_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_92 -> m30_82  [color=blue, key=0, style=bold];
m30_19 -> m30_20  [key=0, style=solid];
m30_20 -> m30_21  [key=0, style=solid];
m30_20 -> m30_24  [key=2, style=dotted];
m30_20 -> m30_28  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_25  [key=2, style=dotted];
m30_21 -> m30_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_22 -> m30_23  [key=0, style=solid];
m30_22 -> m30_26  [key=2, style=dotted];
m30_23 -> m30_19  [color=blue, key=0, style=bold];
m30_24 -> m30_370  [key=0, style=solid];
m30_370 -> m30_371  [key=0, style=solid];
m30_370 -> m30_372  [key=2, style=dotted];
m30_371 -> m30_24  [color=blue, key=0, style=bold];
m30_31 -> m30_32  [key=0, style=solid];
m30_32 -> m30_33  [color=red, key=0, style=solid];
m30_32 -> m30_24  [key=2, style=dotted];
m30_32 -> m30_37  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_33 -> m30_34  [color=red, key=0, style=solid];
m30_33 -> m30_25  [color=red, key=2, style=dotted];
m30_33 -> m30_36  [color=red, key=1, label="lambda expression", style=dashed];
m30_34 -> m30_35  [key=0, style=solid];
m30_34 -> m30_26  [key=2, style=dotted];
m30_35 -> m30_31  [color=blue, key=0, style=bold];
m30_284 -> m30_285  [key=0, style=solid];
m30_285 -> m30_286  [key=0, style=solid];
m30_285 -> m30_137  [key=2, style=dotted];
m30_285 -> m30_289  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_286 -> m30_287  [key=0, style=solid];
m30_286 -> m30_71  [key=2, style=dotted];
m30_289 -> m30_290  [key=0, style=solid];
m30_289 -> m30_55  [key=2, style=dotted];
m30_289 -> m30_114  [key=2, style=dotted];
m30_289 -> m30_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_289 -> m30_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_287 -> m30_288  [key=0, style=solid];
m30_287 -> m30_247  [key=2, style=dotted];
m30_287 -> m30_289  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_287 -> m30_297  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_287 -> m30_300  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_288 -> m30_289  [key=0, style=solid];
m30_288 -> m30_55  [key=2, style=dotted];
m30_288 -> m30_248  [key=2, style=dotted];
m30_288 -> m30_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_290 -> m30_291  [key=0, style=solid];
m30_290 -> m30_24  [key=2, style=dotted];
m30_290 -> m30_306  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_291 -> m30_292  [key=0, style=solid];
m30_291 -> m30_115  [key=2, style=dotted];
m30_291 -> m30_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_292 -> m30_284  [color=blue, key=0, style=bold];
m30_40 -> m30_41  [key=0, style=solid];
m30_41 -> m30_42  [key=0, style=solid];
m30_41 -> m30_24  [key=2, style=dotted];
m30_42 -> m30_43  [key=0, style=solid];
m30_42 -> m30_30  [key=2, style=dotted];
m30_43 -> m30_44  [key=0, style=solid];
m30_43 -> m30_45  [key=2, style=dotted];
m30_43 -> m30_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_44 -> m30_40  [color=blue, key=0, style=bold];
m30_62 -> m30_63  [key=0, style=solid];
m30_63 -> m30_64  [key=0, style=solid];
m30_63 -> m30_70  [key=2, style=dotted];
m30_63 -> m30_68  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_64 -> m30_65  [key=0, style=solid];
m30_64 -> m30_71  [key=2, style=dotted];
m30_64 -> m30_22  [color=darkorchid, key=3, label="Local variable bool wasEnqueued", style=bold];
m30_68 -> m30_69  [key=0, style=solid];
m30_68 -> m30_45  [key=2, style=dotted];
m30_68 -> m30_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_65 -> m30_66  [key=0, style=solid];
m30_65 -> m30_55  [key=2, style=dotted];
m30_65 -> m30_25  [key=2, style=dotted];
m30_65 -> m30_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_66 -> m30_67  [key=0, style=solid];
m30_66 -> m30_24  [key=2, style=dotted];
m30_66 -> m30_76  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_67 -> m30_68  [key=0, style=solid];
m30_67 -> m30_25  [key=2, style=dotted];
m30_67 -> m30_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_69 -> m30_62  [color=blue, key=0, style=bold];
m30_173 -> m30_174  [key=0, style=solid];
m30_174 -> m30_175  [key=0, style=solid];
m30_174 -> m30_137  [key=2, style=dotted];
m30_174 -> m30_176  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_174 -> m30_180  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_175 -> m30_176  [key=0, style=solid];
m30_175 -> m30_71  [key=2, style=dotted];
m30_176 -> m30_177  [key=0, style=solid];
m30_176 -> m30_55  [key=2, style=dotted];
m30_176 -> m30_114  [key=2, style=dotted];
m30_176 -> m30_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_176 -> m30_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_180 -> m30_181  [key=0, style=solid];
m30_180 -> m30_45  [key=2, style=dotted];
m30_180 -> m30_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_177 -> m30_178  [key=0, style=solid];
m30_177 -> m30_24  [key=2, style=dotted];
m30_178 -> m30_179  [key=0, style=solid];
m30_178 -> m30_30  [key=2, style=dotted];
m30_179 -> m30_180  [key=0, style=solid];
m30_179 -> m30_45  [key=2, style=dotted];
m30_179 -> m30_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_181 -> m30_173  [color=blue, key=0, style=bold];
m30_261 -> m30_262  [key=0, style=solid];
m30_262 -> m30_263  [key=0, style=solid];
m30_262 -> m30_137  [key=2, style=dotted];
m30_262 -> m30_264  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m30_262 -> m30_270  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m30_263 -> m30_264  [key=0, style=solid];
m30_263 -> m30_137  [key=2, style=dotted];
m30_263 -> m30_265  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m30_264 -> m30_265  [key=0, style=solid];
m30_264 -> m30_71  [key=2, style=dotted];
m30_270 -> m30_271  [key=0, style=solid];
m30_270 -> m30_45  [key=2, style=dotted];
m30_270 -> m30_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_265 -> m30_266  [key=0, style=solid];
m30_265 -> m30_71  [key=2, style=dotted];
m30_266 -> m30_267  [key=0, style=solid];
m30_266 -> m30_247  [key=2, style=dotted];
m30_266 -> m30_270  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_266 -> m30_279  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_266 -> m30_282  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_267 -> m30_268  [key=0, style=solid];
m30_267 -> m30_55  [key=2, style=dotted];
m30_267 -> m30_248  [key=2, style=dotted];
m30_267 -> m30_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_268 -> m30_269  [key=0, style=solid];
m30_268 -> m30_24  [key=2, style=dotted];
m30_268 -> m30_276  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_269 -> m30_270  [key=0, style=solid];
m30_269 -> m30_25  [key=2, style=dotted];
m30_269 -> m30_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_271 -> m30_261  [color=blue, key=0, style=bold];
m30_216 -> m30_217  [key=0, style=solid];
m30_217 -> m30_218  [key=0, style=solid];
m30_217 -> m30_137  [key=2, style=dotted];
m30_217 -> m30_219  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_217 -> m30_224  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_218 -> m30_219  [key=0, style=solid];
m30_218 -> m30_71  [key=2, style=dotted];
m30_219 -> m30_220  [key=0, style=solid];
m30_219 -> m30_55  [key=2, style=dotted];
m30_219 -> m30_25  [key=2, style=dotted];
m30_219 -> m30_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_224 -> m30_225  [key=0, style=solid];
m30_224 -> m30_45  [key=2, style=dotted];
m30_224 -> m30_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_220 -> m30_221  [key=0, style=solid];
m30_220 -> m30_24  [key=2, style=dotted];
m30_220 -> m30_230  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_221 -> m30_222  [key=0, style=solid];
m30_221 -> m30_25  [key=2, style=dotted];
m30_221 -> m30_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_222 -> m30_223  [key=0, style=solid];
m30_222 -> m30_25  [key=2, style=dotted];
m30_223 -> m30_224  [key=0, style=solid];
m30_223 -> m30_45  [key=2, style=dotted];
m30_223 -> m30_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_225 -> m30_216  [color=blue, key=0, style=bold];
m30_50 -> m30_51  [key=0, style=solid];
m30_51 -> m30_52  [key=0, style=solid];
m30_51 -> m30_55  [key=2, style=dotted];
m30_51 -> m30_25  [key=2, style=dotted];
m30_51 -> m30_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_52 -> m30_53  [key=0, style=solid];
m30_52 -> m30_24  [key=2, style=dotted];
m30_52 -> m30_60  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_53 -> m30_54  [key=0, style=solid];
m30_53 -> m30_25  [key=2, style=dotted];
m30_53 -> m30_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_54 -> m30_50  [color=blue, key=0, style=bold];
m30_194 -> m30_195  [key=0, style=solid];
m30_195 -> m30_196  [key=0, style=solid];
m30_195 -> m30_137  [key=2, style=dotted];
m30_195 -> m30_197  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m30_195 -> m30_202  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m30_196 -> m30_197  [key=0, style=solid];
m30_196 -> m30_137  [key=2, style=dotted];
m30_196 -> m30_198  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m30_196 -> m30_199  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m30_197 -> m30_198  [key=0, style=solid];
m30_197 -> m30_71  [key=2, style=dotted];
m30_202 -> m30_203  [key=0, style=solid];
m30_202 -> m30_45  [key=2, style=dotted];
m30_202 -> m30_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_198 -> m30_199  [key=0, style=solid];
m30_198 -> m30_71  [key=2, style=dotted];
m30_199 -> m30_200  [key=0, style=solid];
m30_199 -> m30_55  [key=2, style=dotted];
m30_199 -> m30_114  [key=2, style=dotted];
m30_199 -> m30_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_199 -> m30_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_200 -> m30_201  [key=0, style=solid];
m30_200 -> m30_24  [key=2, style=dotted];
m30_201 -> m30_202  [key=0, style=solid];
m30_201 -> m30_30  [key=2, style=dotted];
m30_203 -> m30_194  [color=blue, key=0, style=bold];
m30_308 -> m30_309  [key=0, style=solid];
m30_309 -> m30_310  [key=0, style=solid];
m30_309 -> m30_137  [key=2, style=dotted];
m30_309 -> m30_311  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m30_309 -> m30_317  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m30_310 -> m30_311  [key=0, style=solid];
m30_310 -> m30_137  [key=2, style=dotted];
m30_310 -> m30_312  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m30_310 -> m30_314  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m30_311 -> m30_312  [key=0, style=solid];
m30_311 -> m30_71  [key=2, style=dotted];
m30_317 -> m30_318  [key=0, style=solid];
m30_317 -> m30_45  [key=2, style=dotted];
m30_317 -> m30_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_312 -> m30_313  [key=0, style=solid];
m30_312 -> m30_71  [key=2, style=dotted];
m30_314 -> m30_315  [key=0, style=solid];
m30_314 -> m30_55  [key=2, style=dotted];
m30_314 -> m30_114  [key=2, style=dotted];
m30_314 -> m30_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_314 -> m30_325  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_313 -> m30_314  [key=0, style=solid];
m30_313 -> m30_55  [key=2, style=dotted];
m30_313 -> m30_25  [key=2, style=dotted];
m30_313 -> m30_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_315 -> m30_316  [key=0, style=solid];
m30_315 -> m30_24  [key=2, style=dotted];
m30_315 -> m30_329  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_316 -> m30_317  [key=0, style=solid];
m30_316 -> m30_115  [key=2, style=dotted];
m30_316 -> m30_328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_318 -> m30_308  [color=blue, key=0, style=bold];
m30_351 -> m30_352  [key=0, style=solid];
m30_352 -> m30_353  [key=0, style=solid];
m30_352 -> m30_137  [key=2, style=dotted];
m30_352 -> m30_354  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_353 -> m30_354  [key=0, style=solid];
m30_353 -> m30_55  [key=2, style=dotted];
m30_353 -> m30_25  [key=2, style=dotted];
m30_353 -> m30_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_354 -> m30_355  [key=0, style=solid];
m30_354 -> m30_71  [key=2, style=dotted];
m30_355 -> m30_356  [key=0, style=solid];
m30_355 -> m30_55  [key=2, style=dotted];
m30_355 -> m30_25  [key=2, style=dotted];
m30_355 -> m30_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_356 -> m30_357  [key=0, style=solid];
m30_356 -> m30_24  [key=2, style=dotted];
m30_356 -> m30_367  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_357 -> m30_358  [key=0, style=solid];
m30_357 -> m30_25  [key=2, style=dotted];
m30_357 -> m30_366  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_358 -> m30_359  [key=0, style=solid];
m30_358 -> m30_25  [key=2, style=dotted];
m30_359 -> m30_351  [color=blue, key=0, style=bold];
m30_106 -> m30_107  [key=0, style=solid];
m30_107 -> m30_108  [key=0, style=solid];
m30_107 -> m30_55  [key=2, style=dotted];
m30_107 -> m30_25  [key=2, style=dotted];
m30_107 -> m30_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_108 -> m30_109  [key=0, style=solid];
m30_108 -> m30_70  [key=2, style=dotted];
m30_108 -> m30_110  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_109 -> m30_110  [key=0, style=solid];
m30_109 -> m30_55  [key=2, style=dotted];
m30_109 -> m30_114  [key=2, style=dotted];
m30_109 -> m30_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_109 -> m30_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_110 -> m30_111  [key=0, style=solid];
m30_110 -> m30_71  [key=2, style=dotted];
m30_111 -> m30_112  [key=0, style=solid];
m30_111 -> m30_24  [key=2, style=dotted];
m30_111 -> m30_126  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_112 -> m30_113  [key=0, style=solid];
m30_112 -> m30_115  [key=2, style=dotted];
m30_112 -> m30_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_113 -> m30_106  [color=blue, key=0, style=bold];
m30_366 -> m30_367  [key=0, style=solid];
m30_15 -> m30_16  [key=0, style=solid];
m30_16 -> m30_17  [key=0, style=solid];
m30_16 -> m30_18  [key=2, style=dotted];
m30_17 -> m30_15  [color=blue, key=0, style=bold];
m30_28 -> m30_29  [key=0, style=solid];
m30_28 -> m30_30  [key=2, style=dotted];
m30_27 -> m30_28  [key=0, style=solid];
m30_29 -> m30_27  [color=blue, key=0, style=bold];
m30_37 -> m30_38  [key=0, style=solid];
m30_37 -> m30_39  [key=2, style=dotted];
m30_36 -> m30_37  [key=0, style=solid];
m30_38 -> m30_36  [color=blue, key=0, style=bold];
m30_46 -> m30_47  [key=0, style=solid];
m30_47 -> m30_48  [key=0, style=solid];
m30_47 -> m30_49  [key=2, style=dotted];
m30_48 -> m30_46  [color=blue, key=0, style=bold];
m30_56 -> m30_57  [key=0, style=solid];
m30_60 -> m30_61  [key=0, style=solid];
m30_60 -> m30_30  [key=2, style=dotted];
m30_59 -> m30_60  [key=0, style=solid];
m30_57 -> m30_58  [key=0, style=solid];
m30_57 -> m30_49  [key=2, style=dotted];
m30_58 -> m30_56  [color=blue, key=0, style=bold];
m30_61 -> m30_59  [color=blue, key=0, style=bold];
m30_72 -> m30_73  [key=0, style=solid];
m30_76 -> m30_77  [key=0, style=solid];
m30_76 -> m30_30  [key=2, style=dotted];
m30_75 -> m30_76  [key=0, style=solid];
m30_78 -> m30_79  [key=0, style=solid];
m30_73 -> m30_74  [key=0, style=solid];
m30_73 -> m30_49  [key=2, style=dotted];
m30_74 -> m30_72  [color=blue, key=0, style=bold];
m30_77 -> m30_75  [color=blue, key=0, style=bold];
m30_79 -> m30_80  [key=0, style=solid];
m30_79 -> m30_25  [key=2, style=dotted];
m30_79 -> m30_81  [key=2, style=dotted];
m30_80 -> m30_78  [color=blue, key=0, style=bold];
m30_94 -> m30_95  [key=0, style=solid];
m30_97 -> m30_98  [key=0, style=solid];
m30_100 -> m30_101  [key=0, style=solid];
m30_104 -> m30_105  [key=0, style=solid];
m30_104 -> m30_30  [key=2, style=dotted];
m30_103 -> m30_104  [key=0, style=solid];
m30_95 -> m30_96  [key=0, style=solid];
m30_95 -> m30_25  [key=2, style=dotted];
m30_95 -> m30_81  [key=2, style=dotted];
m30_96 -> m30_94  [color=blue, key=0, style=bold];
m30_98 -> m30_99  [key=0, style=solid];
m30_98 -> m30_25  [key=2, style=dotted];
m30_98 -> m30_81  [key=2, style=dotted];
m30_99 -> m30_97  [color=blue, key=0, style=bold];
m30_101 -> m30_102  [key=0, style=solid];
m30_101 -> m30_49  [key=2, style=dotted];
m30_102 -> m30_100  [color=blue, key=0, style=bold];
m30_105 -> m30_103  [color=blue, key=0, style=bold];
m30_116 -> m30_117  [key=0, style=solid];
m30_119 -> m30_120  [key=0, style=solid];
m30_122 -> m30_123  [key=0, style=solid];
m30_126 -> m30_127  [key=0, style=solid];
m30_126 -> m30_30  [key=2, style=dotted];
m30_125 -> m30_126  [key=0, style=solid];
m30_117 -> m30_118  [key=0, style=solid];
m30_117 -> m30_49  [key=2, style=dotted];
m30_118 -> m30_116  [color=blue, key=0, style=bold];
m30_120 -> m30_121  [key=0, style=solid];
m30_120 -> m30_25  [key=2, style=dotted];
m30_120 -> m30_81  [key=2, style=dotted];
m30_121 -> m30_119  [color=blue, key=0, style=bold];
m30_123 -> m30_124  [key=0, style=solid];
m30_124 -> m30_122  [color=blue, key=0, style=bold];
m30_127 -> m30_125  [color=blue, key=0, style=bold];
m30_138 -> m30_139  [key=0, style=solid];
m30_142 -> m30_143  [key=0, style=solid];
m30_145 -> m30_146  [key=0, style=solid];
m30_139 -> m30_140  [key=0, style=solid];
m30_139 -> m30_25  [key=2, style=dotted];
m30_139 -> m30_141  [key=2, style=dotted];
m30_140 -> m30_138  [color=blue, key=0, style=bold];
m30_143 -> m30_144  [key=0, style=solid];
m30_143 -> m30_49  [key=2, style=dotted];
m30_144 -> m30_142  [color=blue, key=0, style=bold];
m30_146 -> m30_147  [key=0, style=solid];
m30_146 -> m30_25  [key=2, style=dotted];
m30_146 -> m30_148  [key=2, style=dotted];
m30_147 -> m30_145  [color=blue, key=0, style=bold];
m30_161 -> m30_162  [key=0, style=solid];
m30_164 -> m30_165  [key=0, style=solid];
m30_167 -> m30_168  [key=0, style=solid];
m30_170 -> m30_171  [key=0, style=solid];
m30_162 -> m30_163  [key=0, style=solid];
m30_162 -> m30_25  [key=2, style=dotted];
m30_162 -> m30_141  [key=2, style=dotted];
m30_163 -> m30_161  [color=blue, key=0, style=bold];
m30_165 -> m30_166  [key=0, style=solid];
m30_165 -> m30_25  [key=2, style=dotted];
m30_165 -> m30_141  [key=2, style=dotted];
m30_166 -> m30_164  [color=blue, key=0, style=bold];
m30_168 -> m30_169  [key=0, style=solid];
m30_168 -> m30_25  [key=2, style=dotted];
m30_168 -> m30_148  [key=2, style=dotted];
m30_169 -> m30_167  [color=blue, key=0, style=bold];
m30_171 -> m30_172  [key=0, style=solid];
m30_171 -> m30_25  [key=2, style=dotted];
m30_171 -> m30_148  [key=2, style=dotted];
m30_172 -> m30_170  [color=blue, key=0, style=bold];
m30_182 -> m30_183  [key=0, style=solid];
m30_185 -> m30_186  [key=0, style=solid];
m30_188 -> m30_189  [key=0, style=solid];
m30_191 -> m30_192  [key=0, style=solid];
m30_183 -> m30_184  [key=0, style=solid];
m30_183 -> m30_25  [key=2, style=dotted];
m30_183 -> m30_141  [key=2, style=dotted];
m30_184 -> m30_182  [color=blue, key=0, style=bold];
m30_186 -> m30_187  [key=0, style=solid];
m30_187 -> m30_185  [color=blue, key=0, style=bold];
m30_189 -> m30_190  [key=0, style=solid];
m30_189 -> m30_49  [key=2, style=dotted];
m30_190 -> m30_188  [color=blue, key=0, style=bold];
m30_192 -> m30_193  [key=0, style=solid];
m30_192 -> m30_25  [key=2, style=dotted];
m30_192 -> m30_148  [key=2, style=dotted];
m30_193 -> m30_191  [color=blue, key=0, style=bold];
m30_204 -> m30_205  [key=0, style=solid];
m30_207 -> m30_208  [key=0, style=solid];
m30_210 -> m30_211  [key=0, style=solid];
m30_205 -> m30_206  [key=0, style=solid];
m30_205 -> m30_25  [key=2, style=dotted];
m30_205 -> m30_141  [key=2, style=dotted];
m30_206 -> m30_204  [color=blue, key=0, style=bold];
m30_208 -> m30_209  [key=0, style=solid];
m30_209 -> m30_207  [color=blue, key=0, style=bold];
m30_211 -> m30_212  [key=0, style=solid];
m30_211 -> m30_25  [key=2, style=dotted];
m30_211 -> m30_148  [key=2, style=dotted];
m30_211 -> m30_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_212 -> m30_210  [color=blue, key=0, style=bold];
m30_213 -> m30_214  [key=0, style=solid];
m30_214 -> m30_215  [key=0, style=solid];
m30_215 -> m30_213  [color=blue, key=0, style=bold];
m30_226 -> m30_227  [key=0, style=solid];
m30_230 -> m30_231  [key=0, style=solid];
m30_230 -> m30_30  [key=2, style=dotted];
m30_229 -> m30_230  [key=0, style=solid];
m30_232 -> m30_233  [key=0, style=solid];
m30_235 -> m30_236  [key=0, style=solid];
m30_227 -> m30_228  [key=0, style=solid];
m30_227 -> m30_25  [key=2, style=dotted];
m30_227 -> m30_141  [key=2, style=dotted];
m30_228 -> m30_226  [color=blue, key=0, style=bold];
m30_231 -> m30_229  [color=blue, key=0, style=bold];
m30_233 -> m30_234  [key=0, style=solid];
m30_233 -> m30_49  [key=2, style=dotted];
m30_234 -> m30_232  [color=blue, key=0, style=bold];
m30_236 -> m30_237  [key=0, style=solid];
m30_236 -> m30_25  [key=2, style=dotted];
m30_236 -> m30_148  [key=2, style=dotted];
m30_237 -> m30_235  [color=blue, key=0, style=bold];
m30_256 -> m30_257  [key=0, style=solid];
m30_256 -> m30_25  [key=2, style=dotted];
m30_256 -> m30_148  [key=2, style=dotted];
m30_256 -> m30_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_259 -> m30_260  [key=0, style=solid];
m30_249 -> m30_250  [key=0, style=solid];
m30_253 -> m30_254  [key=0, style=solid];
m30_253 -> m30_30  [key=2, style=dotted];
m30_252 -> m30_253  [key=0, style=solid];
m30_255 -> m30_256  [key=0, style=solid];
m30_250 -> m30_251  [key=0, style=solid];
m30_250 -> m30_49  [key=2, style=dotted];
m30_251 -> m30_249  [color=blue, key=0, style=bold];
m30_254 -> m30_252  [color=blue, key=0, style=bold];
m30_257 -> m30_255  [color=blue, key=0, style=bold];
m30_258 -> m30_259  [key=0, style=solid];
m30_260 -> m30_258  [color=blue, key=0, style=bold];
m30_279 -> m30_280  [key=0, style=solid];
m30_279 -> m30_25  [key=2, style=dotted];
m30_279 -> m30_148  [key=2, style=dotted];
m30_279 -> m30_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_282 -> m30_283  [key=0, style=solid];
m30_272 -> m30_273  [key=0, style=solid];
m30_276 -> m30_277  [key=0, style=solid];
m30_276 -> m30_30  [key=2, style=dotted];
m30_275 -> m30_276  [key=0, style=solid];
m30_278 -> m30_279  [key=0, style=solid];
m30_273 -> m30_274  [key=0, style=solid];
m30_273 -> m30_49  [key=2, style=dotted];
m30_274 -> m30_272  [color=blue, key=0, style=bold];
m30_277 -> m30_275  [color=blue, key=0, style=bold];
m30_280 -> m30_278  [color=blue, key=0, style=bold];
m30_281 -> m30_282  [key=0, style=solid];
m30_283 -> m30_281  [color=blue, key=0, style=bold];
m30_297 -> m30_298  [key=0, style=solid];
m30_297 -> m30_25  [key=2, style=dotted];
m30_297 -> m30_148  [key=2, style=dotted];
m30_297 -> m30_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_300 -> m30_301  [key=0, style=solid];
m30_293 -> m30_294  [key=0, style=solid];
m30_296 -> m30_297  [key=0, style=solid];
m30_302 -> m30_303  [key=0, style=solid];
m30_306 -> m30_307  [key=0, style=solid];
m30_306 -> m30_30  [key=2, style=dotted];
m30_305 -> m30_306  [key=0, style=solid];
m30_294 -> m30_295  [key=0, style=solid];
m30_294 -> m30_49  [key=2, style=dotted];
m30_295 -> m30_293  [color=blue, key=0, style=bold];
m30_298 -> m30_296  [color=blue, key=0, style=bold];
m30_299 -> m30_300  [key=0, style=solid];
m30_301 -> m30_299  [color=blue, key=0, style=bold];
m30_303 -> m30_304  [key=0, style=solid];
m30_304 -> m30_302  [color=blue, key=0, style=bold];
m30_307 -> m30_305  [color=blue, key=0, style=bold];
m30_319 -> m30_320  [key=0, style=solid];
m30_322 -> m30_323  [key=0, style=solid];
m30_325 -> m30_326  [key=0, style=solid];
m30_329 -> m30_330  [key=0, style=solid];
m30_329 -> m30_30  [key=2, style=dotted];
m30_328 -> m30_329  [key=0, style=solid];
m30_331 -> m30_332  [key=0, style=solid];
m30_320 -> m30_321  [key=0, style=solid];
m30_320 -> m30_49  [key=2, style=dotted];
m30_321 -> m30_319  [color=blue, key=0, style=bold];
m30_323 -> m30_324  [key=0, style=solid];
m30_323 -> m30_25  [key=2, style=dotted];
m30_323 -> m30_148  [key=2, style=dotted];
m30_324 -> m30_322  [color=blue, key=0, style=bold];
m30_326 -> m30_327  [key=0, style=solid];
m30_327 -> m30_325  [color=blue, key=0, style=bold];
m30_330 -> m30_328  [color=blue, key=0, style=bold];
m30_332 -> m30_333  [key=0, style=solid];
m30_332 -> m30_25  [key=2, style=dotted];
m30_332 -> m30_148  [key=2, style=dotted];
m30_332 -> m30_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_333 -> m30_331  [color=blue, key=0, style=bold];
m30_334 -> m30_335  [key=0, style=solid];
m30_335 -> m30_336  [key=0, style=solid];
m30_336 -> m30_334  [color=blue, key=0, style=bold];
m30_345 -> m30_346  [key=0, style=solid];
m30_349 -> m30_350  [key=0, style=solid];
m30_349 -> m30_30  [key=2, style=dotted];
m30_348 -> m30_349  [key=0, style=solid];
m30_346 -> m30_347  [key=0, style=solid];
m30_346 -> m30_25  [key=2, style=dotted];
m30_346 -> m30_148  [key=2, style=dotted];
m30_347 -> m30_345  [color=blue, key=0, style=bold];
m30_350 -> m30_348  [color=blue, key=0, style=bold];
m30_360 -> m30_361  [key=0, style=solid];
m30_363 -> m30_364  [key=0, style=solid];
m30_367 -> m30_368  [key=0, style=solid];
m30_367 -> m30_30  [key=2, style=dotted];
m30_361 -> m30_362  [key=0, style=solid];
m30_361 -> m30_25  [key=2, style=dotted];
m30_361 -> m30_148  [key=2, style=dotted];
m30_362 -> m30_360  [color=blue, key=0, style=bold];
m30_364 -> m30_365  [key=0, style=solid];
m30_364 -> m30_49  [key=2, style=dotted];
m30_365 -> m30_363  [color=blue, key=0, style=bold];
m30_368 -> m30_366  [color=blue, key=0, style=bold];
m30_337 -> m30_338  [key=0, style=solid];
m30_338 -> m30_339  [key=0, style=solid];
m30_338 -> m30_137  [key=2, style=dotted];
m30_338 -> m30_340  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_339 -> m30_340  [key=0, style=solid];
m30_339 -> m30_55  [key=2, style=dotted];
m30_339 -> m30_25  [key=2, style=dotted];
m30_339 -> m30_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_340 -> m30_341  [key=0, style=solid];
m30_340 -> m30_71  [key=2, style=dotted];
m30_341 -> m30_342  [key=0, style=solid];
m30_341 -> m30_24  [key=2, style=dotted];
m30_341 -> m30_349  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_342 -> m30_343  [key=0, style=solid];
m30_342 -> m30_25  [key=2, style=dotted];
m30_342 -> m30_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_343 -> m30_344  [key=0, style=solid];
m30_343 -> m30_25  [key=2, style=dotted];
m30_344 -> m30_337  [color=blue, key=0, style=bold];
m30_18 -> m30_369  [key=0, style=solid];
m30_369 -> m30_18  [color=blue, key=0, style=bold];
m30_238 -> m30_239  [key=0, style=solid];
m30_239 -> m30_240  [key=0, style=solid];
m30_239 -> m30_137  [key=2, style=dotted];
m30_239 -> m30_245  [color=darkseagreen4, key=1, label=filter, style=dashed];
m30_240 -> m30_241  [key=0, style=solid];
m30_240 -> m30_71  [key=2, style=dotted];
m30_245 -> m30_246  [key=0, style=solid];
m30_245 -> m30_45  [key=2, style=dotted];
m30_245 -> m30_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_241 -> m30_242  [key=0, style=solid];
m30_241 -> m30_247  [key=2, style=dotted];
m30_241 -> m30_245  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_241 -> m30_256  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_241 -> m30_259  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_242 -> m30_243  [key=0, style=solid];
m30_242 -> m30_55  [key=2, style=dotted];
m30_242 -> m30_248  [key=2, style=dotted];
m30_242 -> m30_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_243 -> m30_244  [key=0, style=solid];
m30_243 -> m30_24  [key=2, style=dotted];
m30_243 -> m30_253  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_244 -> m30_245  [key=0, style=solid];
m30_244 -> m30_25  [key=2, style=dotted];
m30_244 -> m30_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_246 -> m30_238  [color=blue, key=0, style=bold];
m30_149 -> m30_150  [key=0, style=solid];
m30_150 -> m30_151  [key=0, style=solid];
m30_150 -> m30_137  [key=2, style=dotted];
m30_150 -> m30_152  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m30_150 -> m30_154  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m30_150 -> m30_157  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m30_151 -> m30_152  [key=0, style=solid];
m30_151 -> m30_137  [key=2, style=dotted];
m30_151 -> m30_153  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m30_151 -> m30_155  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m30_151 -> m30_156  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m30_152 -> m30_153  [key=0, style=solid];
m30_152 -> m30_71  [key=2, style=dotted];
m30_154 -> m30_155  [key=0, style=solid];
m30_154 -> m30_55  [key=2, style=dotted];
m30_154 -> m30_93  [key=2, style=dotted];
m30_154 -> m30_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_157 -> m30_158  [key=0, style=solid];
m30_157 -> m30_55  [key=2, style=dotted];
m30_157 -> m30_93  [key=2, style=dotted];
m30_157 -> m30_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_153 -> m30_154  [key=0, style=solid];
m30_153 -> m30_71  [key=2, style=dotted];
m30_155 -> m30_156  [key=0, style=solid];
m30_155 -> m30_55  [key=2, style=dotted];
m30_155 -> m30_93  [key=2, style=dotted];
m30_155 -> m30_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_156 -> m30_157  [key=0, style=solid];
m30_156 -> m30_55  [key=2, style=dotted];
m30_156 -> m30_93  [key=2, style=dotted];
m30_156 -> m30_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_158 -> m30_159  [key=0, style=solid];
m30_158 -> m30_24  [key=2, style=dotted];
m30_159 -> m30_160  [key=0, style=solid];
m30_159 -> m30_30  [key=2, style=dotted];
m30_160 -> m30_149  [color=blue, key=0, style=bold];
m30_373 -> m30_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_20  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_28  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_33  [color=red, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_41  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_60  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_88  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_89  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_90  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_91  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_104  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_107  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_110  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_111  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_126  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_130  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_134  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_152  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_159  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_177  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_178  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_179  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_197  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_198  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_200  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_201  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_218  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_220  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_221  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_230  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_223  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_240  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_242  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_243  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_244  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_253  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_264  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_265  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_267  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_268  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_269  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_276  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_286  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_288  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_290  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_291  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_306  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_311  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_312  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_313  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_315  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_316  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_329  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_340  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_341  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_342  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_349  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_354  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_355  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_356  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_357  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_367  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_373 -> m30_370  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m30_374 -> m30_28  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_375 -> m30_37  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_376 -> m30_60  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_377 -> m30_76  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_378 -> m30_104  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_379 -> m30_126  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_380 -> m30_230  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_381 -> m30_253  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_382 -> m30_256  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_382 -> m30_259  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_383 -> m30_276  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_384 -> m30_279  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_384 -> m30_282  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_385 -> m30_297  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_385 -> m30_300  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_386 -> m30_306  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_387 -> m30_329  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_388 -> m30_349  [color=darkseagreen4, key=1, label=process, style=dashed];
m30_389 -> m30_367  [color=darkseagreen4, key=1, label=process, style=dashed];
m31_32 -> m31_32  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m31_32 -> m31_31  [key=0, style=solid];
m31_50 -> m31_51  [color=green, key=0, style=solid];
m31_50 -> m31_42  [color=green, key=2, style=dotted];
m31_19 -> m31_20  [key=0, style=solid];
m31_19 -> m31_25  [key=0, style=solid];
m31_19 -> m31_22  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m31_19 -> m31_24  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m31_47 -> m31_48  [key=0, style=solid];
m31_47 -> m31_59  [key=2, style=dotted];
m31_0 -> m31_4  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_3  [color=darkseagreen4, key=1, label="HangFire.IBackgroundJobClient", style=dashed];
m31_0 -> m31_5  [color=darkseagreen4, key=1, label="HangFire.Server.IDateTimeProvider", style=dashed];
m31_0 -> m31_7  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m31_0 -> m31_8  [color=red, key=1, label="HangFire.IBackgroundJobClient", style=dashed];
m31_0 -> m31_9  [color=red, key=1, label="HangFire.Server.IDateTimeProvider", style=dashed];
m31_4 -> m31_5  [color=green, key=0, style=solid];
m31_4 -> m31_10  [key=0, style=solid];
m31_4 -> m31_11  [key=2, style=dotted];
m31_3 -> m31_4  [color=green, key=0, style=solid];
m31_3 -> m31_7  [key=2, style=dotted];
m31_3 -> m31_5  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_3  [key=0, style=solid];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_6  [key=2, style=dotted];
m31_2 -> m31_10  [key=0, style=solid];
m31_2 -> m31_11  [key=2, style=dotted];
m31_5 -> m31_0  [color=blue, key=0, style=bold];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_7  [key=0, style=solid];
m31_59 -> m31_4  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_45  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_50  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_53  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_56  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_27  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_59 -> m31_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m31_53 -> m31_54  [color=green, key=0, style=solid];
m31_53 -> m31_42  [color=green, key=2, style=dotted];
m31_39 -> m31_40  [key=0, style=solid];
m31_39 -> m31_52  [key=2, style=dotted];
m31_39 -> m31_46  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m31_39 -> m31_47  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m31_55 -> m31_56  [color=green, key=0, style=solid];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_15  [key=2, style=dotted];
m31_13 -> m31_16  [key=0, style=solid];
m31_14 -> m31_12  [color=blue, key=0, style=bold];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_26  [key=2, style=dotted];
m31_14 -> m31_27  [key=2, style=dotted];
m31_14 -> m31_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m31_43 -> m31_44  [color=green, key=0, style=solid];
m31_43 -> m31_45  [color=green, key=1, label=string, style=dashed];
m31_43 -> m31_49  [key=0, style=solid];
m31_44 -> m31_45  [color=green, key=0, style=solid];
m31_44 -> m31_47  [color=green, key=2, style=dotted];
m31_44 -> m31_48  [color=green, key=2, style=dotted];
m31_44 -> m31_55  [key=2, style=dotted];
m31_45 -> m31_46  [color=green, key=0, style=solid];
m31_45 -> m31_37  [color=green, key=2, style=dotted];
m31_45 -> m31_42  [color=green, key=2, style=dotted];
m31_45 -> m31_56  [key=2, style=dotted];
m31_46 -> m31_43  [color=blue, key=0, style=bold];
m31_46 -> m31_49  [key=0, style=solid];
m31_46 -> m31_32  [key=2, style=dotted];
m31_46 -> m31_57  [key=2, style=dotted];
m31_46 -> m31_58  [key=2, style=dotted];
m31_46 -> m31_59  [key=2, style=dotted];
m31_46 -> m31_60  [key=2, style=dotted];
m31_56 -> m31_56  [color=green, key=1, label="System.TimeSpan", style=dashed];
m31_56 -> m31_57  [color=green, key=0, style=solid];
m31_56 -> m31_58  [color=green, key=2, style=dotted];
m31_56 -> m31_38  [color=green, key=2, style=dotted];
m31_56 -> m31_42  [color=green, key=2, style=dotted];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_26  [color=darkorchid, key=3, label="Local variable string createJobSql", style=bold];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_29  [key=2, style=dotted];
m31_16 -> m31_18  [color=darkseagreen4, key=1, label=connection, style=dashed];
m31_16 -> m31_20  [color=darkseagreen4, key=1, label=connection, style=dashed];
m31_16 -> m31_22  [color=darkseagreen4, key=1, label=connection, style=dashed];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_19  [key=2, style=dotted];
m31_17 -> m31_30  [key=2, style=dotted];
m31_18 -> m31_16  [color=blue, key=0, style=bold];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_31  [key=2, style=dotted];
m31_6 -> m31_10  [key=0, style=solid];
m31_6 -> m31_11  [key=2, style=dotted];
m31_52 -> m31_53  [color=green, key=0, style=solid];
m31_41 -> m31_42  [key=0, style=solid];
m31_41 -> m31_47  [key=0, style=solid];
m31_41 -> m31_53  [key=2, style=dotted];
m31_28 -> m31_35  [color=green, key=0, style=solid];
m31_28 -> m31_29  [key=0, style=solid];
m31_29 -> m31_34  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m31_29 -> m31_32  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m31_29 -> m31_30  [key=0, style=solid];
m31_38 -> m31_39  [key=0, style=solid];
m31_57 -> m31_55  [color=blue, key=0, style=bold];
m31_31 -> m31_32  [key=0, style=solid];
m31_31 -> m31_33  [key=0, style=solid];
m31_33 -> m31_34  [key=0, style=solid];
m31_33 -> m31_33  [color=darkorchid, key=3, label="Local variable string insertParameterSql", style=bold];
m31_8 -> m31_9  [color=red, key=0, style=solid];
m31_9 -> m31_10  [color=red, key=0, style=solid];
m31_9 -> m31_11  [key=2, style=dotted];
m31_10 -> m31_8  [color=blue, key=0, style=bold];
m31_10 -> m31_0  [color=blue, key=0, style=bold];
m31_15 -> m31_13  [key=0, style=solid];
m31_15 -> m31_28  [key=2, style=dotted];
m31_15 -> m31_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_32  [key=2, style=dotted];
m31_20 -> m31_33  [key=2, style=dotted];
m31_20 -> m31_22  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m31_22 -> m31_23  [key=0, style=solid];
m31_22 -> m31_19  [key=0, style=solid];
m31_22 -> m31_34  [key=2, style=dotted];
m31_22 -> m31_20  [color=blue, key=0, style=bold];
m31_24 -> m31_19  [key=0, style=solid];
m31_24 -> m31_35  [key=2, style=dotted];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_19  [key=0, style=solid];
m31_21 -> m31_23  [key=2, style=dotted];
m31_21 -> d60  [key=2, style=dotted];
m31_23 -> m31_24  [key=0, style=solid];
m31_25 -> m31_12  [color=blue, key=0, style=bold];
m31_25 -> m31_27  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m31_25 -> m31_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m31_25 -> m31_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m31_34 -> m31_36  [key=0, style=solid];
m31_34 -> m31_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m31_34 -> m31_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m31_34 -> m31_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m31_34 -> m31_46  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m31_34 -> m31_48  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m31_34 -> m31_35  [color=green, key=0, style=solid];
m31_36 -> m31_37  [key=0, style=solid];
m31_36 -> m31_50  [key=2, style=dotted];
m31_36 -> m31_25  [color=blue, key=0, style=bold];
m31_42 -> m31_43  [key=0, style=solid];
m31_42 -> m31_54  [key=2, style=dotted];
m31_48 -> m31_49  [key=0, style=solid];
m31_48 -> m31_32  [key=2, style=dotted];
m31_48 -> m31_57  [key=2, style=dotted];
m31_48 -> m31_58  [key=2, style=dotted];
m31_48 -> m31_60  [key=2, style=dotted];
m31_37 -> m31_38  [key=0, style=solid];
m31_37 -> m31_51  [key=2, style=dotted];
m31_37 -> m31_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m31_40 -> m31_41  [key=0, style=solid];
m31_40 -> m31_43  [color=darkseagreen4, key=1, label=currentTime, style=dashed];
m31_40 -> m31_46  [color=darkseagreen4, key=1, label=currentTime, style=dashed];
m31_49 -> m31_34  [color=blue, key=0, style=bold];
m31_49 -> m31_50  [color=green, key=0, style=solid];
m31_61 -> m31_62  [key=0, style=solid];
m31_62 -> m31_63  [key=0, style=solid];
m31_63 -> m31_61  [color=blue, key=0, style=bold];
m31_35 -> m31_36  [color=green, key=0, style=solid];
m31_27 -> m31_35  [color=green, key=1, label=jobId, style=dashed];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_37  [key=2, style=dotted];
m31_27 -> m31_38  [key=2, style=dotted];
m31_27 -> m31_39  [key=2, style=dotted];
m31_27 -> m31_40  [key=2, style=dotted];
m31_27 -> m31_41  [key=2, style=dotted];
m31_27 -> m31_32  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m31_51 -> m31_49  [color=blue, key=0, style=bold];
m31_54 -> m31_52  [color=blue, key=0, style=bold];
m31_30 -> m31_32  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m31_30 -> m31_31  [key=0, style=solid];
m31_30 -> m31_30  [color=darkorchid, key=3, label="Local variable int parameterIndex", style=bold];
m31_7 -> m31_8  [color=red, key=0, style=solid];
m31_64 -> m31_7  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m31_64 -> m31_8  [color=red, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m31_64 -> m31_9  [color=red, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m31_64 -> m31_13  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m31_64 -> m31_16  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m31_64 -> m31_22  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m31_64 -> m31_40  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m31_64 -> m31_45  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m31_64 -> m31_46  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m31_64 -> m31_47  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m32_0 -> m32_1  [color=red, key=0, style=solid];
m32_0 -> m32_4  [color=red, key=1, label="System.Exception", style=dashed];
m32_1 -> m32_2  [color=red, key=0, style=solid];
m32_1 -> m32_3  [color=red, key=0, style=solid];
m32_4 -> m32_5  [color=red, key=0, style=solid];
m32_2 -> m32_5  [color=red, key=0, style=solid];
m32_2 -> m32_6  [color=red, key=2, style=dotted];
m32_3 -> m32_4  [color=red, key=0, style=solid];
m32_5 -> m32_0  [color=blue, key=0, style=bold];
m32_7 -> m32_8  [color=red, key=0, style=solid];
m32_8 -> m32_9  [color=red, key=0, style=solid];
m32_8 -> m32_10  [color=red, key=2, style=dotted];
m32_8 -> m32_11  [color=red, key=2, style=dotted];
m32_8 -> m32_12  [color=red, key=2, style=dotted];
m32_8 -> m32_13  [color=red, key=2, style=dotted];
m32_9 -> m32_7  [color=blue, key=0, style=bold];
m32_14 -> m32_3  [color=red, key=1, label="HangFire.States.FailedState", style=dashed];
m32_14 -> m32_4  [color=red, key=1, label="HangFire.States.FailedState", style=dashed];
m32_14 -> m32_8  [color=red, key=1, label="HangFire.States.FailedState", style=dashed];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_97  [key=2, style=dotted];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_98  [key=2, style=dotted];
m33_3 -> m33_4  [key=0, style=solid];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_99  [key=2, style=dotted];
m33_4 -> m33_100  [key=2, style=dotted];
m33_4 -> m33_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_99  [key=2, style=dotted];
m33_5 -> m33_100  [key=2, style=dotted];
m33_5 -> m33_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_102  [key=2, style=dotted];
m33_7 -> m33_103  [key=2, style=dotted];
m33_7 -> m33_14  [color=darkseagreen4, key=1, label=pager, style=dashed];
m33_7 -> m33_36  [color=darkseagreen4, key=1, label=pager, style=dashed];
m33_7 -> m33_93  [color=darkseagreen4, key=1, label=pager, style=dashed];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_101  [key=2, style=dotted];
m33_6 -> m33_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_104  [key=2, style=dotted];
m33_8 -> m33_45  [color=darkseagreen4, key=1, label=failedJobs, style=dashed];
m33_14 -> m33_15  [key=0, style=solid];
m33_14 -> m33_18  [key=0, style=solid];
m33_36 -> m33_37  [key=0, style=solid];
m33_36 -> m33_109  [key=2, style=dotted];
m33_36 -> m33_106  [key=2, style=dotted];
m33_93 -> m33_94  [key=0, style=solid];
m33_93 -> m33_115  [key=2, style=dotted];
m33_93 -> m33_106  [key=2, style=dotted];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_97  [key=2, style=dotted];
m33_45 -> m33_46  [key=0, style=solid];
m33_45 -> m33_92  [key=0, style=solid];
m33_45 -> m33_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_10 -> m33_11  [key=0, style=solid];
m33_10 -> m33_105  [key=2, style=dotted];
m33_10 -> m33_106  [key=2, style=dotted];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_97  [key=2, style=dotted];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_106  [key=2, style=dotted];
m33_13 -> m33_14  [key=0, style=solid];
m33_13 -> m33_97  [key=2, style=dotted];
m33_15 -> m33_16  [key=0, style=solid];
m33_15 -> m33_97  [key=2, style=dotted];
m33_18 -> m33_19  [key=0, style=solid];
m33_18 -> m33_97  [key=2, style=dotted];
m33_16 -> m33_17  [key=0, style=solid];
m33_16 -> m33_106  [key=2, style=dotted];
m33_17 -> m33_95  [key=0, style=solid];
m33_17 -> m33_97  [key=2, style=dotted];
m33_19 -> m33_20  [key=0, style=solid];
m33_19 -> m33_107  [key=2, style=dotted];
m33_19 -> m33_106  [key=2, style=dotted];
m33_20 -> m33_21  [key=0, style=solid];
m33_20 -> m33_97  [key=2, style=dotted];
m33_21 -> m33_22  [key=0, style=solid];
m33_21 -> m33_97  [key=2, style=dotted];
m33_22 -> m33_23  [key=0, style=solid];
m33_22 -> m33_108  [key=2, style=dotted];
m33_22 -> m33_106  [key=2, style=dotted];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_97  [key=2, style=dotted];
m33_24 -> m33_25  [key=0, style=solid];
m33_24 -> m33_106  [key=2, style=dotted];
m33_25 -> m33_26  [key=0, style=solid];
m33_25 -> m33_97  [key=2, style=dotted];
m33_26 -> m33_27  [key=0, style=solid];
m33_26 -> m33_106  [key=2, style=dotted];
m33_27 -> m33_28  [key=0, style=solid];
m33_27 -> m33_97  [key=2, style=dotted];
m33_28 -> m33_29  [key=0, style=solid];
m33_28 -> m33_108  [key=2, style=dotted];
m33_28 -> m33_106  [key=2, style=dotted];
m33_29 -> m33_30  [key=0, style=solid];
m33_29 -> m33_97  [key=2, style=dotted];
m33_30 -> m33_31  [key=0, style=solid];
m33_30 -> m33_106  [key=2, style=dotted];
m33_31 -> m33_32  [key=0, style=solid];
m33_31 -> m33_97  [key=2, style=dotted];
m33_32 -> m33_33  [key=0, style=solid];
m33_32 -> m33_106  [key=2, style=dotted];
m33_33 -> m33_34  [key=0, style=solid];
m33_33 -> m33_97  [key=2, style=dotted];
m33_34 -> m33_35  [key=0, style=solid];
m33_34 -> m33_106  [key=2, style=dotted];
m33_35 -> m33_36  [key=0, style=solid];
m33_35 -> m33_97  [key=2, style=dotted];
m33_37 -> m33_38  [key=0, style=solid];
m33_37 -> m33_97  [key=2, style=dotted];
m33_38 -> m33_39  [key=0, style=solid];
m33_38 -> m33_106  [key=2, style=dotted];
m33_39 -> m33_40  [key=0, style=solid];
m33_39 -> m33_97  [key=2, style=dotted];
m33_40 -> m33_41  [key=0, style=solid];
m33_40 -> m33_106  [key=2, style=dotted];
m33_41 -> m33_42  [key=0, style=solid];
m33_41 -> m33_97  [key=2, style=dotted];
m33_42 -> m33_43  [key=0, style=solid];
m33_42 -> m33_106  [key=2, style=dotted];
m33_43 -> m33_44  [key=0, style=solid];
m33_43 -> m33_97  [key=2, style=dotted];
m33_44 -> m33_45  [key=0, style=solid];
m33_44 -> m33_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_44 -> m33_81  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_76 -> m33_77  [key=0, style=solid];
m33_76 -> m33_106  [key=2, style=dotted];
m33_81 -> m33_82  [key=0, style=solid];
m33_81 -> m33_106  [key=2, style=dotted];
m33_81 -> m33_81  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_46 -> m33_47  [key=0, style=solid];
m33_46 -> m33_97  [key=2, style=dotted];
m33_92 -> m33_93  [key=0, style=solid];
m33_92 -> m33_97  [key=2, style=dotted];
m33_47 -> m33_48  [key=0, style=solid];
m33_47 -> m33_106  [key=2, style=dotted];
m33_47 -> m33_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_47 -> m33_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_48 -> m33_49  [key=0, style=solid];
m33_48 -> m33_97  [key=2, style=dotted];
m33_49 -> m33_50  [key=0, style=solid];
m33_49 -> m33_106  [key=2, style=dotted];
m33_49 -> m33_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_49 -> m33_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_50 -> m33_51  [key=0, style=solid];
m33_50 -> m33_97  [key=2, style=dotted];
m33_51 -> m33_52  [key=0, style=solid];
m33_51 -> m33_106  [key=2, style=dotted];
m33_51 -> m33_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_51 -> m33_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_52 -> m33_53  [key=0, style=solid];
m33_52 -> m33_97  [key=2, style=dotted];
m33_53 -> m33_54  [key=0, style=solid];
m33_53 -> m33_57  [key=0, style=solid];
m33_53 -> m33_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_53 -> m33_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_53 -> m33_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_54 -> m33_55  [key=0, style=solid];
m33_54 -> m33_97  [key=2, style=dotted];
m33_57 -> m33_58  [key=0, style=solid];
m33_57 -> m33_97  [key=2, style=dotted];
m33_55 -> m33_56  [key=0, style=solid];
m33_55 -> m33_106  [key=2, style=dotted];
m33_55 -> m33_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_55 -> m33_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_58 -> m33_59  [key=0, style=solid];
m33_58 -> m33_106  [key=2, style=dotted];
m33_58 -> m33_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_58 -> m33_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_56 -> m33_57  [key=0, style=solid];
m33_56 -> m33_97  [key=2, style=dotted];
m33_59 -> m33_60  [key=0, style=solid];
m33_59 -> m33_97  [key=2, style=dotted];
m33_60 -> m33_61  [key=0, style=solid];
m33_60 -> m33_110  [key=2, style=dotted];
m33_60 -> m33_106  [key=2, style=dotted];
m33_60 -> m33_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_60 -> m33_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_61 -> m33_62  [key=0, style=solid];
m33_61 -> m33_97  [key=2, style=dotted];
m33_62 -> m33_63  [key=0, style=solid];
m33_62 -> m33_66  [key=0, style=solid];
m33_62 -> m33_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_62 -> m33_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_63 -> m33_64  [key=0, style=solid];
m33_63 -> m33_97  [key=2, style=dotted];
m33_66 -> m33_67  [key=0, style=solid];
m33_66 -> m33_97  [key=2, style=dotted];
m33_67 -> m33_68  [key=0, style=solid];
m33_67 -> m33_69  [key=0, style=solid];
m33_67 -> m33_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_67 -> m33_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_64 -> m33_65  [key=0, style=solid];
m33_64 -> m33_106  [key=2, style=dotted];
m33_65 -> m33_66  [key=0, style=solid];
m33_65 -> m33_97  [key=2, style=dotted];
m33_68 -> m33_69  [key=0, style=solid];
m33_68 -> m33_111  [key=2, style=dotted];
m33_68 -> m33_106  [key=2, style=dotted];
m33_68 -> m33_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_68 -> m33_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_69 -> m33_70  [key=0, style=solid];
m33_69 -> m33_97  [key=2, style=dotted];
m33_70 -> m33_71  [key=0, style=solid];
m33_70 -> m33_112  [key=2, style=dotted];
m33_70 -> m33_106  [key=2, style=dotted];
m33_70 -> m33_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_70 -> m33_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_71 -> m33_72  [key=0, style=solid];
m33_71 -> m33_97  [key=2, style=dotted];
m33_72 -> m33_73  [key=0, style=solid];
m33_72 -> m33_78  [key=0, style=solid];
m33_72 -> m33_113  [key=2, style=dotted];
m33_72 -> m33_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_72 -> m33_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_72 -> m33_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_73 -> m33_74  [key=0, style=solid];
m33_73 -> m33_97  [key=2, style=dotted];
m33_78 -> m33_79  [key=0, style=solid];
m33_78 -> m33_97  [key=2, style=dotted];
m33_74 -> m33_75  [key=0, style=solid];
m33_74 -> m33_106  [key=2, style=dotted];
m33_74 -> m33_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_74 -> m33_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_79 -> m33_80  [key=0, style=solid];
m33_79 -> m33_45  [key=0, style=solid];
m33_79 -> m33_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_79 -> m33_83  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_75 -> m33_76  [key=0, style=solid];
m33_75 -> m33_97  [key=2, style=dotted];
m33_77 -> m33_78  [key=0, style=solid];
m33_77 -> m33_97  [key=2, style=dotted];
m33_80 -> m33_81  [key=0, style=solid];
m33_80 -> m33_97  [key=2, style=dotted];
m33_83 -> m33_84  [key=0, style=solid];
m33_83 -> m33_106  [key=2, style=dotted];
m33_83 -> m33_83  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_83 -> m33_85  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_82 -> m33_83  [key=0, style=solid];
m33_82 -> m33_97  [key=2, style=dotted];
m33_84 -> m33_85  [key=0, style=solid];
m33_84 -> m33_97  [key=2, style=dotted];
m33_85 -> m33_86  [key=0, style=solid];
m33_85 -> m33_106  [key=2, style=dotted];
m33_85 -> m33_85  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_85 -> m33_87  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_86 -> m33_87  [key=0, style=solid];
m33_86 -> m33_97  [key=2, style=dotted];
m33_87 -> m33_88  [key=0, style=solid];
m33_87 -> m33_91  [key=0, style=solid];
m33_87 -> m33_113  [key=2, style=dotted];
m33_87 -> m33_87  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_87 -> m33_89  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_88 -> m33_89  [key=0, style=solid];
m33_88 -> m33_97  [key=2, style=dotted];
m33_91 -> m33_45  [key=0, style=solid];
m33_91 -> m33_97  [key=2, style=dotted];
m33_89 -> m33_90  [key=0, style=solid];
m33_89 -> m33_114  [key=2, style=dotted];
m33_89 -> m33_106  [key=2, style=dotted];
m33_89 -> m33_89  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_90 -> m33_91  [key=0, style=solid];
m33_90 -> m33_97  [key=2, style=dotted];
m33_94 -> m33_95  [key=0, style=solid];
m33_94 -> m33_97  [key=2, style=dotted];
m33_95 -> m33_96  [key=0, style=solid];
m33_95 -> m33_97  [key=2, style=dotted];
m33_96 -> m33_0  [color=blue, key=0, style=bold];
m33_116 -> m33_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_12  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_13  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_36  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_39  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_41  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_46  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_51  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_56  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_58  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_59  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_61  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_63  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_74  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_75  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_76  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_77  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_78  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_81  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_82  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_83  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_84  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_85  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_86  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_88  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_89  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_90  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_91  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_92  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_93  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_94  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m33_116 -> m33_95  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m34_3 -> m34_4  [color=red, key=0, style=solid];
m34_4 -> m34_5  [color=red, key=0, style=solid];
m34_4 -> m34_6  [color=red, key=2, style=dotted];
m34_4 -> m34_7  [color=red, key=2, style=dotted];
m34_5 -> m34_3  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [color=red, key=0, style=solid];
m34_1 -> m34_2  [color=red, key=0, style=solid];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
m34_8 -> m34_1  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerSet", style=dashed];
m34_8 -> m34_4  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerSet", style=dashed];
m35_14 -> m35_15  [color=red, key=0, style=solid];
m35_14 -> m35_18  [color=red, key=1, label=string, style=dashed];
m35_15 -> m35_16  [color=red, key=0, style=solid];
m35_15 -> m35_9  [color=red, key=2, style=dotted];
m35_15 -> m35_17  [color=red, key=1, label="lambda expression", style=dashed];
m35_16 -> m35_14  [color=blue, key=0, style=bold];
m35_21 -> m35_22  [color=red, key=0, style=solid];
m35_21 -> m35_25  [color=red, key=1, label=string, style=dashed];
m35_22 -> m35_23  [color=red, key=0, style=solid];
m35_22 -> m35_9  [color=red, key=2, style=dotted];
m35_22 -> m35_24  [color=red, key=1, label="lambda expression", style=dashed];
m35_23 -> m35_21  [color=blue, key=0, style=bold];
m35_6 -> m35_7  [color=red, key=0, style=solid];
m35_6 -> m35_11  [color=red, key=1, label=string, style=dashed];
m35_7 -> m35_8  [color=red, key=0, style=solid];
m35_7 -> m35_9  [color=red, key=2, style=dotted];
m35_7 -> m35_10  [color=red, key=1, label="lambda expression", style=dashed];
m35_8 -> m35_6  [color=blue, key=0, style=bold];
m35_30 -> m35_31  [color=red, key=0, style=solid];
m35_11 -> m35_12  [color=red, key=0, style=solid];
m35_11 -> m35_13  [color=red, key=2, style=dotted];
m35_10 -> m35_11  [color=red, key=0, style=solid];
m35_12 -> m35_10  [color=blue, key=0, style=bold];
m35_18 -> m35_19  [color=red, key=0, style=solid];
m35_18 -> m35_20  [color=red, key=2, style=dotted];
m35_18 -> m35_13  [color=red, key=2, style=dotted];
m35_17 -> m35_18  [color=red, key=0, style=solid];
m35_19 -> m35_17  [color=blue, key=0, style=bold];
m35_25 -> m35_26  [color=red, key=0, style=solid];
m35_25 -> m35_13  [color=red, key=2, style=dotted];
m35_24 -> m35_25  [color=red, key=0, style=solid];
m35_26 -> m35_24  [color=blue, key=0, style=bold];
m35_31 -> m35_32  [color=red, key=0, style=solid];
m35_31 -> m35_20  [color=red, key=2, style=dotted];
m35_31 -> m35_13  [color=red, key=2, style=dotted];
m35_32 -> m35_30  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [color=red, key=0, style=solid];
m35_0 -> m35_3  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m35_1 -> m35_2  [color=red, key=0, style=solid];
m35_1 -> m35_3  [color=red, key=0, style=solid];
m35_3 -> m35_4  [color=red, key=0, style=solid];
m35_2 -> m35_4  [color=red, key=0, style=solid];
m35_2 -> m35_5  [color=red, key=2, style=dotted];
m35_4 -> m35_0  [color=blue, key=0, style=bold];
m35_27 -> m35_28  [color=red, key=0, style=solid];
m35_27 -> m35_31  [color=red, key=1, label=string, style=dashed];
m35_28 -> m35_29  [color=red, key=0, style=solid];
m35_28 -> m35_9  [color=red, key=2, style=dotted];
m35_28 -> m35_30  [color=red, key=1, label="lambda expression", style=dashed];
m35_29 -> m35_27  [color=blue, key=0, style=bold];
m35_33 -> m35_3  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter", style=dashed];
m35_33 -> m35_7  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter", style=dashed];
m35_33 -> m35_15  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter", style=dashed];
m35_33 -> m35_22  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter", style=dashed];
m35_33 -> m35_28  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter", style=dashed];
m35_34 -> m35_11  [color=red, key=1, label=string, style=dashed];
m35_35 -> m35_18  [color=red, key=1, label=string, style=dashed];
m35_36 -> m35_18  [color=red, key=1, label="System.TimeSpan", style=dashed];
m35_37 -> m35_25  [color=red, key=1, label=string, style=dashed];
m35_38 -> m35_31  [color=red, key=1, label=string, style=dashed];
m35_39 -> m35_31  [color=red, key=1, label="System.TimeSpan", style=dashed];
m36_28 -> m36_29  [color=red, key=0, style=solid];
m36_28 -> m36_32  [color=red, key=1, label=string, style=dashed];
m36_29 -> m36_30  [color=red, key=0, style=solid];
m36_29 -> m36_9  [color=red, key=2, style=dotted];
m36_29 -> m36_31  [color=red, key=1, label="lambda expression", style=dashed];
m36_30 -> m36_28  [color=blue, key=0, style=bold];
m36_15 -> m36_16  [color=red, key=0, style=solid];
m36_15 -> m36_19  [color=red, key=1, label=string, style=dashed];
m36_16 -> m36_17  [color=red, key=0, style=solid];
m36_16 -> m36_9  [color=red, key=2, style=dotted];
m36_16 -> m36_18  [color=red, key=1, label="lambda expression", style=dashed];
m36_17 -> m36_15  [color=blue, key=0, style=bold];
m36_6 -> m36_7  [color=red, key=0, style=solid];
m36_6 -> m36_11  [color=red, key=1, label=string, style=dashed];
m36_7 -> m36_8  [color=red, key=0, style=solid];
m36_7 -> m36_9  [color=red, key=2, style=dotted];
m36_7 -> m36_10  [color=red, key=1, label="lambda expression", style=dashed];
m36_8 -> m36_6  [color=blue, key=0, style=bold];
m36_0 -> m36_1  [color=red, key=0, style=solid];
m36_0 -> m36_3  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m36_1 -> m36_2  [color=red, key=0, style=solid];
m36_1 -> m36_3  [color=red, key=0, style=solid];
m36_3 -> m36_4  [color=red, key=0, style=solid];
m36_2 -> m36_4  [color=red, key=0, style=solid];
m36_2 -> m36_5  [color=red, key=2, style=dotted];
m36_4 -> m36_0  [color=blue, key=0, style=bold];
m36_31 -> m36_32  [color=red, key=0, style=solid];
m36_11 -> m36_12  [color=red, key=0, style=solid];
m36_11 -> m36_13  [color=red, key=2, style=dotted];
m36_11 -> m36_14  [color=red, key=2, style=dotted];
m36_10 -> m36_11  [color=red, key=0, style=solid];
m36_12 -> m36_10  [color=blue, key=0, style=bold];
m36_19 -> m36_20  [color=red, key=0, style=solid];
m36_19 -> m36_14  [color=red, key=2, style=dotted];
m36_18 -> m36_19  [color=red, key=0, style=solid];
m36_20 -> m36_18  [color=blue, key=0, style=bold];
m36_25 -> m36_26  [color=red, key=0, style=solid];
m36_25 -> m36_27  [color=red, key=2, style=dotted];
m36_25 -> m36_14  [color=red, key=2, style=dotted];
m36_24 -> m36_25  [color=red, key=0, style=solid];
m36_26 -> m36_24  [color=blue, key=0, style=bold];
m36_32 -> m36_33  [color=red, key=0, style=solid];
m36_32 -> m36_27  [color=red, key=2, style=dotted];
m36_32 -> m36_14  [color=red, key=2, style=dotted];
m36_33 -> m36_31  [color=blue, key=0, style=bold];
m36_21 -> m36_22  [color=red, key=0, style=solid];
m36_21 -> m36_25  [color=red, key=1, label=string, style=dashed];
m36_22 -> m36_23  [color=red, key=0, style=solid];
m36_22 -> m36_9  [color=red, key=2, style=dotted];
m36_22 -> m36_24  [color=red, key=1, label="lambda expression", style=dashed];
m36_23 -> m36_21  [color=blue, key=0, style=bold];
m36_34 -> m36_3  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m36_34 -> m36_7  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m36_34 -> m36_16  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m36_34 -> m36_22  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m36_34 -> m36_29  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m36_35 -> m36_11  [color=red, key=1, label=string, style=dashed];
m36_36 -> m36_11  [color=red, key=1, label="System.TimeSpan", style=dashed];
m36_37 -> m36_19  [color=red, key=1, label=string, style=dashed];
m36_38 -> m36_25  [color=red, key=1, label=string, style=dashed];
m36_39 -> m36_25  [color=red, key=1, label=string, style=dashed];
m36_40 -> m36_25  [color=red, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m36_41 -> m36_32  [color=red, key=1, label=string, style=dashed];
m36_42 -> m36_32  [color=red, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m37_14 -> m37_15  [color=red, key=0, style=solid];
m37_14 -> m37_18  [color=red, key=1, label=string, style=dashed];
m37_15 -> m37_16  [color=red, key=0, style=solid];
m37_15 -> m37_9  [color=red, key=2, style=dotted];
m37_15 -> m37_17  [color=red, key=1, label="lambda expression", style=dashed];
m37_16 -> m37_14  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [color=red, key=0, style=solid];
m37_0 -> m37_3  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m37_1 -> m37_2  [color=red, key=0, style=solid];
m37_1 -> m37_3  [color=red, key=0, style=solid];
m37_3 -> m37_4  [color=red, key=0, style=solid];
m37_2 -> m37_4  [color=red, key=0, style=solid];
m37_2 -> m37_5  [color=red, key=2, style=dotted];
m37_4 -> m37_0  [color=blue, key=0, style=bold];
m37_20 -> m37_21  [color=red, key=0, style=solid];
m37_20 -> m37_22  [color=red, key=1, label=int, style=dashed];
m37_20 -> m37_25  [color=red, key=1, label=int, style=dashed];
m37_21 -> m37_22  [color=red, key=0, style=solid];
m37_21 -> m37_25  [color=red, key=1, label=trimSql, style=dashed];
m37_21 -> m37_21  [color=red, key=3, label="Local variable string trimSql", style=bold];
m37_22 -> m37_23  [color=red, key=0, style=solid];
m37_22 -> m37_9  [color=red, key=2, style=dotted];
m37_22 -> m37_24  [color=red, key=1, label="lambda expression", style=dashed];
m37_23 -> m37_20  [color=blue, key=0, style=bold];
m37_6 -> m37_7  [color=red, key=0, style=solid];
m37_6 -> m37_11  [color=red, key=1, label=string, style=dashed];
m37_7 -> m37_8  [color=red, key=0, style=solid];
m37_7 -> m37_9  [color=red, key=2, style=dotted];
m37_7 -> m37_10  [color=red, key=1, label="lambda expression", style=dashed];
m37_8 -> m37_6  [color=blue, key=0, style=bold];
m37_24 -> m37_25  [color=red, key=0, style=solid];
m37_11 -> m37_12  [color=red, key=0, style=solid];
m37_11 -> m37_13  [color=red, key=2, style=dotted];
m37_10 -> m37_11  [color=red, key=0, style=solid];
m37_12 -> m37_10  [color=blue, key=0, style=bold];
m37_18 -> m37_19  [color=red, key=0, style=solid];
m37_18 -> m37_13  [color=red, key=2, style=dotted];
m37_17 -> m37_18  [color=red, key=0, style=solid];
m37_19 -> m37_17  [color=blue, key=0, style=bold];
m37_25 -> m37_26  [color=red, key=0, style=solid];
m37_25 -> m37_13  [color=red, key=2, style=dotted];
m37_26 -> m37_24  [color=blue, key=0, style=bold];
m37_27 -> m37_3  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", style=dashed];
m37_27 -> m37_7  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", style=dashed];
m37_27 -> m37_15  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", style=dashed];
m37_27 -> m37_22  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", style=dashed];
m37_28 -> m37_11  [color=red, key=1, label=string, style=dashed];
m37_29 -> m37_11  [color=red, key=1, label=string, style=dashed];
m37_30 -> m37_18  [color=red, key=1, label=string, style=dashed];
m37_31 -> m37_18  [color=red, key=1, label=string, style=dashed];
m37_32 -> m37_25  [color=red, key=1, label=int, style=dashed];
m37_33 -> m37_25  [color=red, key=1, label=int, style=dashed];
m37_34 -> m37_25  [color=red, key=1, label=trimSql, style=dashed];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_21  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m38_19 -> m38_23  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_15  [key=2, style=dotted];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_16  [key=2, style=dotted];
m38_21 -> m38_17  [key=2, style=dotted];
m38_23 -> m38_24  [key=0, style=solid];
m38_22 -> m38_23  [key=0, style=solid];
m38_22 -> m38_24  [key=0, style=solid];
m38_24 -> m38_19  [color=blue, key=0, style=bold];
m38_7 -> m38_8  [key=0, style=solid];
m38_7 -> m38_11  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_15  [key=2, style=dotted];
m38_11 -> m38_12  [key=0, style=solid];
m38_9 -> m38_10  [key=0, style=solid];
m38_9 -> m38_16  [key=2, style=dotted];
m38_9 -> m38_17  [key=2, style=dotted];
m38_10 -> m38_11  [key=0, style=solid];
m38_10 -> m38_12  [key=0, style=solid];
m38_12 -> m38_13  [key=0, style=solid];
m38_12 -> m38_14  [key=0, style=solid];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_18  [key=2, style=dotted];
m38_14 -> m38_7  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [color=red, key=0, style=solid];
m38_0 -> m38_2  [color=red, key=1, label="System.Collections.Generic.ICollection<string>", style=dashed];
m38_0 -> m38_3  [color=red, key=1, label=bool, style=dashed];
m38_0 -> m38_4  [color=red, key=1, label=bool, style=dashed];
m38_0 -> m38_5  [color=red, key=1, label=bool, style=dashed];
m38_1 -> m38_2  [color=red, key=0, style=solid];
m38_2 -> m38_3  [color=red, key=0, style=solid];
m38_3 -> m38_4  [color=red, key=0, style=solid];
m38_4 -> m38_5  [color=red, key=0, style=solid];
m38_5 -> m38_6  [color=red, key=0, style=solid];
m38_6 -> m38_0  [color=blue, key=0, style=bold];
m38_25 -> m38_1  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_25 -> m38_2  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_25 -> m38_3  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_25 -> m38_4  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_25 -> m38_5  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_25 -> m38_9  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_25 -> m38_10  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_25 -> m38_12  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_25 -> m38_21  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_25 -> m38_22  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m40_80 -> m40_81  [color=green, key=0, style=solid];
m40_81 -> m40_82  [color=green, key=0, style=solid];
m40_81 -> m40_83  [color=green, key=2, style=dotted];
m40_82 -> m40_80  [color=blue, key=0, style=bold];
m40_96 -> m40_97  [color=green, key=0, style=solid];
m40_96 -> m40_100  [color=green, key=1, label=string, style=dashed];
m40_97 -> m40_98  [color=green, key=0, style=solid];
m40_97 -> m40_17  [color=green, key=2, style=dotted];
m40_97 -> m40_99  [color=green, key=1, label="lambda expression", style=dashed];
m40_98 -> m40_96  [color=blue, key=0, style=bold];
m40_83 -> m40_81  [color=green, key=3, label="Parameter variable double score", style=bold];
m40_83 -> m40_84  [color=green, key=0, style=solid];
m40_83 -> m40_85  [color=green, key=1, label=string, style=dashed];
m40_83 -> m40_88  [color=green, key=1, label=string, style=dashed];
m40_83 -> m40_80  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m40_84 -> m40_84  [color=green, key=3, label="Local variable string addSql", style=bold];
m40_84 -> m40_85  [color=green, key=0, style=solid];
m40_84 -> m40_88  [color=green, key=1, label=addSql, style=dashed];
m40_85 -> m40_86  [color=green, key=0, style=solid];
m40_85 -> m40_17  [color=green, key=2, style=dotted];
m40_85 -> m40_87  [color=green, key=1, label="lambda expression", style=dashed];
m40_86 -> m40_83  [color=blue, key=0, style=bold];
m40_62 -> m40_63  [color=green, key=0, style=solid];
m40_62 -> m40_66  [color=green, key=1, label=string, style=dashed];
m40_63 -> m40_64  [color=green, key=0, style=solid];
m40_63 -> m40_17  [color=green, key=2, style=dotted];
m40_63 -> m40_65  [color=green, key=1, label="lambda expression", style=dashed];
m40_64 -> m40_62  [color=blue, key=0, style=bold];
m40_36 -> m40_37  [color=green, key=0, style=solid];
m40_36 -> m40_40  [color=green, key=1, label=string, style=dashed];
m40_37 -> m40_38  [color=green, key=0, style=solid];
m40_37 -> m40_17  [color=green, key=2, style=dotted];
m40_37 -> m40_39  [color=green, key=1, label="lambda expression", style=dashed];
m40_38 -> m40_36  [color=blue, key=0, style=bold];
m40_108 -> m40_109  [color=green, key=0, style=solid];
m40_108 -> m40_110  [color=green, key=1, label=int, style=dashed];
m40_108 -> m40_113  [color=green, key=1, label=int, style=dashed];
m40_109 -> m40_109  [color=green, key=3, label="Local variable string trimSql", style=bold];
m40_109 -> m40_110  [color=green, key=0, style=solid];
m40_109 -> m40_113  [color=green, key=1, label=trimSql, style=dashed];
m40_110 -> m40_111  [color=green, key=0, style=solid];
m40_110 -> m40_17  [color=green, key=2, style=dotted];
m40_110 -> m40_112  [color=green, key=1, label="lambda expression", style=dashed];
m40_111 -> m40_108  [color=blue, key=0, style=bold];
m40_17 -> m40_18  [color=red, key=0, style=solid];
m40_17 -> m40_22  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_31  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_37  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_44  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_51  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_57  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_63  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_69  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_75  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_85  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_91  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_97  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_103  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_110  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_118  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_128  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_136  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m40_17 -> m40_141  [color=green, key=0, style=solid];
m40_18 -> m40_19  [color=red, key=0, style=solid];
m40_18 -> m40_20  [color=red, key=2, style=dotted];
m40_141 -> m40_19  [color=green, key=0, style=solid];
m40_141 -> m40_20  [color=green, key=2, style=dotted];
m40_19 -> m40_17  [color=blue, key=0, style=bold];
m40_32 -> m40_30  [color=blue, key=0, style=bold];
m40_31 -> m40_32  [color=green, key=0, style=solid];
m40_31 -> m40_17  [color=green, key=2, style=dotted];
m40_31 -> m40_33  [color=green, key=1, label="lambda expression", style=dashed];
m40_68 -> m40_69  [color=green, key=0, style=solid];
m40_68 -> m40_72  [color=green, key=1, label=string, style=dashed];
m40_69 -> m40_70  [color=green, key=0, style=solid];
m40_69 -> m40_17  [color=green, key=2, style=dotted];
m40_69 -> m40_71  [color=green, key=1, label="lambda expression", style=dashed];
m40_70 -> m40_68  [color=blue, key=0, style=bold];
m40_74 -> m40_75  [color=green, key=0, style=solid];
m40_74 -> m40_78  [color=green, key=1, label=string, style=dashed];
m40_75 -> m40_76  [color=green, key=0, style=solid];
m40_75 -> m40_17  [color=green, key=2, style=dotted];
m40_75 -> m40_77  [color=green, key=1, label="lambda expression", style=dashed];
m40_76 -> m40_74  [color=blue, key=0, style=bold];
m40_33 -> m40_34  [color=green, key=0, style=solid];
m40_28 -> m40_21  [color=blue, key=0, style=bold];
m40_90 -> m40_91  [color=green, key=0, style=solid];
m40_90 -> m40_94  [color=green, key=1, label=string, style=dashed];
m40_91 -> m40_92  [color=green, key=0, style=solid];
m40_91 -> m40_17  [color=green, key=2, style=dotted];
m40_91 -> m40_93  [color=green, key=1, label="lambda expression", style=dashed];
m40_92 -> m40_90  [color=blue, key=0, style=bold];
m40_21 -> m40_22  [color=green, key=0, style=solid];
m40_21 -> m40_26  [color=green, key=1, label=string, style=dashed];
m40_21 -> m40_27  [color=darkorchid, key=3, label="method methodReturn bool Commit", style=bold];
m40_22 -> m40_23  [color=green, key=0, style=solid];
m40_22 -> m40_17  [color=green, key=2, style=dotted];
m40_22 -> m40_25  [color=green, key=1, label="lambda expression", style=dashed];
m40_22 -> m40_29  [key=2, style=dotted];
m40_22 -> m40_30  [key=2, style=dotted];
m40_22 -> m40_26  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m40_23 -> m40_21  [color=blue, key=0, style=bold];
m40_23 -> m40_24  [key=0, style=solid];
m40_23 -> m40_31  [key=2, style=dotted];
m40_102 -> m40_103  [color=green, key=0, style=solid];
m40_102 -> m40_106  [color=green, key=1, label=string, style=dashed];
m40_103 -> m40_104  [color=green, key=0, style=solid];
m40_103 -> m40_17  [color=green, key=2, style=dotted];
m40_103 -> m40_105  [color=green, key=1, label="lambda expression", style=dashed];
m40_104 -> m40_102  [color=blue, key=0, style=bold];
m40_43 -> m40_44  [color=green, key=0, style=solid];
m40_43 -> m40_47  [color=green, key=1, label=string, style=dashed];
m40_44 -> m40_45  [color=green, key=0, style=solid];
m40_44 -> m40_17  [color=green, key=2, style=dotted];
m40_44 -> m40_46  [color=green, key=1, label="lambda expression", style=dashed];
m40_45 -> m40_43  [color=blue, key=0, style=bold];
m40_26 -> m40_27  [color=green, key=0, style=solid];
m40_26 -> m40_33  [key=2, style=dotted];
m40_26 -> m40_28  [color=green, key=2, style=dotted];
m40_26 -> m40_29  [color=green, key=2, style=dotted];
m40_24 -> m40_25  [key=0, style=solid];
m40_24 -> m40_26  [key=0, style=solid];
m40_25 -> m40_24  [key=0, style=solid];
m40_25 -> m40_32  [key=2, style=dotted];
m40_25 -> m40_26  [color=green, key=0, style=solid];
m40_27 -> m40_28  [key=0, style=solid];
m40_27 -> m40_25  [color=blue, key=0, style=bold];
m40_30 -> m40_31  [color=green, key=0, style=solid];
m40_30 -> m40_34  [color=green, key=1, label=string, style=dashed];
m40_135 -> m40_136  [color=green, key=0, style=solid];
m40_135 -> m40_139  [color=green, key=1, label=string, style=dashed];
m40_136 -> m40_137  [color=green, key=0, style=solid];
m40_136 -> m40_17  [color=green, key=2, style=dotted];
m40_136 -> m40_138  [color=green, key=1, label="lambda expression", style=dashed];
m40_137 -> m40_135  [color=blue, key=0, style=bold];
m40_138 -> m40_139  [color=green, key=0, style=solid];
m40_34 -> m40_35  [color=green, key=0, style=solid];
m40_34 -> m40_29  [color=green, key=2, style=dotted];
m40_34 -> m40_1  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_2  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_3  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_4  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_5  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_6  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_7  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_18  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_23  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_24  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_22  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_31  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_37  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_44  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_51  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_57  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_63  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_69  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_75  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_81  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_85  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_91  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_97  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_103  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_110  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_118  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_128  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_136  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_34 -> m40_141  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m40_35 -> m40_33  [color=blue, key=0, style=bold];
m40_39 -> m40_40  [color=green, key=0, style=solid];
m40_40 -> m40_41  [color=green, key=0, style=solid];
m40_40 -> m40_42  [color=green, key=2, style=dotted];
m40_40 -> m40_29  [color=green, key=2, style=dotted];
m40_41 -> m40_39  [color=blue, key=0, style=bold];
m40_46 -> m40_47  [color=green, key=0, style=solid];
m40_47 -> m40_48  [color=green, key=0, style=solid];
m40_47 -> m40_42  [color=green, key=2, style=dotted];
m40_47 -> m40_29  [color=green, key=2, style=dotted];
m40_48 -> m40_46  [color=blue, key=0, style=bold];
m40_54 -> m40_55  [color=green, key=0, style=solid];
m40_54 -> m40_29  [color=green, key=2, style=dotted];
m40_53 -> m40_54  [color=green, key=0, style=solid];
m40_55 -> m40_53  [color=blue, key=0, style=bold];
m40_59 -> m40_60  [color=green, key=0, style=solid];
m40_60 -> m40_61  [color=green, key=0, style=solid];
m40_60 -> m40_29  [color=green, key=2, style=dotted];
m40_61 -> m40_59  [color=blue, key=0, style=bold];
m40_65 -> m40_66  [color=green, key=0, style=solid];
m40_66 -> m40_67  [color=green, key=0, style=solid];
m40_66 -> m40_28  [color=green, key=2, style=dotted];
m40_66 -> m40_29  [color=green, key=2, style=dotted];
m40_67 -> m40_65  [color=blue, key=0, style=bold];
m40_71 -> m40_72  [color=green, key=0, style=solid];
m40_72 -> m40_73  [color=green, key=0, style=solid];
m40_72 -> m40_29  [color=green, key=2, style=dotted];
m40_73 -> m40_71  [color=blue, key=0, style=bold];
m40_77 -> m40_78  [color=green, key=0, style=solid];
m40_78 -> m40_79  [color=green, key=0, style=solid];
m40_78 -> m40_28  [color=green, key=2, style=dotted];
m40_78 -> m40_29  [color=green, key=2, style=dotted];
m40_79 -> m40_77  [color=blue, key=0, style=bold];
m40_88 -> m40_89  [color=green, key=0, style=solid];
m40_88 -> m40_29  [color=green, key=2, style=dotted];
m40_87 -> m40_88  [color=green, key=0, style=solid];
m40_89 -> m40_87  [color=blue, key=0, style=bold];
m40_93 -> m40_94  [color=green, key=0, style=solid];
m40_94 -> m40_95  [color=green, key=0, style=solid];
m40_94 -> m40_29  [color=green, key=2, style=dotted];
m40_95 -> m40_93  [color=blue, key=0, style=bold];
m40_99 -> m40_100  [color=green, key=0, style=solid];
m40_100 -> m40_101  [color=green, key=0, style=solid];
m40_100 -> m40_29  [color=green, key=2, style=dotted];
m40_101 -> m40_99  [color=blue, key=0, style=bold];
m40_105 -> m40_106  [color=green, key=0, style=solid];
m40_106 -> m40_107  [color=green, key=0, style=solid];
m40_106 -> m40_29  [color=green, key=2, style=dotted];
m40_107 -> m40_105  [color=blue, key=0, style=bold];
m40_113 -> m40_114  [color=green, key=0, style=solid];
m40_113 -> m40_29  [color=green, key=2, style=dotted];
m40_112 -> m40_113  [color=green, key=0, style=solid];
m40_114 -> m40_112  [color=blue, key=0, style=bold];
m40_123 -> m40_124  [color=green, key=0, style=solid];
m40_123 -> m40_29  [color=green, key=2, style=dotted];
m40_120 -> m40_121  [color=green, key=0, style=solid];
m40_120 -> m40_123  [color=green, key=1, label=SqlConnection, style=dashed];
m40_121 -> m40_122  [color=green, key=0, style=solid];
m40_121 -> m40_29  [color=green, key=2, style=dotted];
m40_122 -> m40_123  [color=green, key=0, style=solid];
m40_122 -> m40_124  [color=green, key=0, style=solid];
m40_124 -> m40_120  [color=blue, key=0, style=bold];
m40_133 -> m40_134  [color=green, key=0, style=solid];
m40_133 -> m40_29  [color=green, key=2, style=dotted];
m40_130 -> m40_131  [color=green, key=0, style=solid];
m40_130 -> m40_133  [color=green, key=1, label=SqlConnection, style=dashed];
m40_131 -> m40_132  [color=green, key=0, style=solid];
m40_131 -> m40_29  [color=green, key=2, style=dotted];
m40_132 -> m40_133  [color=green, key=0, style=solid];
m40_132 -> m40_134  [color=green, key=0, style=solid];
m40_134 -> m40_130  [color=blue, key=0, style=bold];
m40_139 -> m40_140  [color=green, key=0, style=solid];
m40_139 -> m40_28  [color=green, key=2, style=dotted];
m40_139 -> m40_29  [color=green, key=2, style=dotted];
m40_140 -> m40_138  [color=blue, key=0, style=bold];
m40_125 -> m40_126  [color=green, key=0, style=solid];
m40_125 -> m40_128  [color=green, key=1, label=string, style=dashed];
m40_125 -> m40_131  [color=green, key=1, label=string, style=dashed];
m40_125 -> m40_133  [color=green, key=1, label=string, style=dashed];
m40_126 -> m40_116  [color=green, key=3, label="Local variable string insertSql", style=bold];
m40_126 -> m40_127  [color=green, key=0, style=solid];
m40_126 -> m40_128  [color=green, key=1, label=insertSql, style=dashed];
m40_126 -> m40_133  [color=green, key=1, label=insertSql, style=dashed];
m40_127 -> m40_128  [color=green, key=0, style=solid];
m40_127 -> m40_131  [color=green, key=1, label=updateSql, style=dashed];
m40_127 -> m40_133  [color=green, key=1, label=updateSql, style=dashed];
m40_127 -> m40_127  [color=green, key=3, label="Local variable string updateSql", style=bold];
m40_128 -> m40_129  [color=green, key=0, style=solid];
m40_128 -> m40_17  [color=green, key=2, style=dotted];
m40_128 -> m40_130  [color=green, key=1, label="lambda expression", style=dashed];
m40_129 -> m40_125  [color=blue, key=0, style=bold];
m40_0 -> m40_1  [color=red, key=0, style=solid];
m40_1 -> m40_2  [color=red, key=0, style=solid];
m40_2 -> m40_3  [color=red, key=0, style=solid];
m40_2 -> m40_9  [color=red, key=2, style=dotted];
m40_3 -> m40_4  [color=red, key=0, style=solid];
m40_3 -> m40_10  [color=red, key=2, style=dotted];
m40_4 -> m40_5  [color=red, key=0, style=solid];
m40_4 -> m40_11  [color=red, key=2, style=dotted];
m40_5 -> m40_6  [color=red, key=0, style=solid];
m40_5 -> m40_12  [color=red, key=2, style=dotted];
m40_6 -> m40_7  [color=red, key=0, style=solid];
m40_6 -> m40_13  [color=red, key=2, style=dotted];
m40_7 -> m40_8  [color=red, key=0, style=solid];
m40_7 -> m40_14  [color=red, key=2, style=dotted];
m40_8 -> m40_0  [color=blue, key=0, style=bold];
m40_115 -> m40_116  [color=green, key=0, style=solid];
m40_115 -> m40_118  [color=green, key=1, label=string, style=dashed];
m40_115 -> m40_121  [color=green, key=1, label=string, style=dashed];
m40_115 -> m40_123  [color=green, key=1, label=string, style=dashed];
m40_116 -> m40_116  [color=green, key=3, label="Local variable string insertSql", style=bold];
m40_116 -> m40_117  [color=green, key=0, style=solid];
m40_116 -> m40_118  [color=green, key=1, label=insertSql, style=dashed];
m40_116 -> m40_123  [color=green, key=1, label=insertSql, style=dashed];
m40_117 -> m40_118  [color=green, key=0, style=solid];
m40_117 -> m40_121  [color=green, key=1, label=updateSql, style=dashed];
m40_117 -> m40_123  [color=green, key=1, label=updateSql, style=dashed];
m40_117 -> m40_117  [color=green, key=3, label="Local variable string updateSql", style=bold];
m40_118 -> m40_119  [color=green, key=0, style=solid];
m40_118 -> m40_17  [color=green, key=2, style=dotted];
m40_118 -> m40_120  [color=green, key=1, label="lambda expression", style=dashed];
m40_119 -> m40_115  [color=blue, key=0, style=bold];
m40_49 -> m40_50  [color=green, key=0, style=solid];
m40_49 -> m40_51  [color=green, key=1, label=string, style=dashed];
m40_49 -> m40_54  [color=green, key=1, label=string, style=dashed];
m40_50 -> m40_50  [color=green, key=3, label="Local variable string enqueueJobSql", style=bold];
m40_50 -> m40_51  [color=green, key=0, style=solid];
m40_50 -> m40_54  [color=green, key=1, label=enqueueJobSql, style=dashed];
m40_51 -> m40_52  [color=green, key=0, style=solid];
m40_51 -> m40_17  [color=green, key=2, style=dotted];
m40_51 -> m40_53  [color=green, key=1, label="lambda expression", style=dashed];
m40_52 -> m40_49  [color=blue, key=0, style=bold];
m40_56 -> m40_57  [color=green, key=0, style=solid];
m40_56 -> m40_60  [color=green, key=1, label=string, style=dashed];
m40_57 -> m40_58  [color=green, key=0, style=solid];
m40_57 -> m40_17  [color=green, key=2, style=dotted];
m40_57 -> m40_59  [color=green, key=1, label="lambda expression", style=dashed];
m40_58 -> m40_56  [color=blue, key=0, style=bold];
m40_15 -> m40_16  [key=0, style=solid];
m40_16 -> m40_15  [color=blue, key=0, style=bold];
m40_145 -> m40_26  [color=green, key=1, label=string, style=dashed];
m40_146 -> m40_26  [color=green, key=1, label="System.TimeSpan", style=dashed];
m40_147 -> m40_34  [color=green, key=1, label=string, style=dashed];
m40_148 -> m40_40  [color=green, key=1, label=string, style=dashed];
m40_149 -> m40_40  [color=green, key=1, label=string, style=dashed];
m40_150 -> m40_40  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m40_151 -> m40_47  [color=green, key=1, label=string, style=dashed];
m40_152 -> m40_47  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m40_153 -> m40_54  [color=green, key=1, label=string, style=dashed];
m40_154 -> m40_54  [color=green, key=1, label=string, style=dashed];
m40_155 -> m40_54  [color=green, key=1, label=enqueueJobSql, style=dashed];
m40_156 -> m40_60  [color=green, key=1, label=string, style=dashed];
m40_157 -> m40_66  [color=green, key=1, label=string, style=dashed];
m40_158 -> m40_66  [color=green, key=1, label="System.TimeSpan", style=dashed];
m40_159 -> m40_72  [color=green, key=1, label=string, style=dashed];
m40_160 -> m40_78  [color=green, key=1, label=string, style=dashed];
m40_161 -> m40_78  [color=green, key=1, label="System.TimeSpan", style=dashed];
m40_162 -> m40_88  [color=green, key=1, label=string, style=dashed];
m40_163 -> m40_88  [color=green, key=1, label=string, style=dashed];
m40_164 -> m40_88  [color=green, key=1, label=double, style=dashed];
m40_165 -> m40_88  [color=green, key=1, label=addSql, style=dashed];
m40_166 -> m40_94  [color=green, key=1, label=string, style=dashed];
m40_167 -> m40_94  [color=green, key=1, label=string, style=dashed];
m40_168 -> m40_100  [color=green, key=1, label=string, style=dashed];
m40_169 -> m40_100  [color=green, key=1, label=string, style=dashed];
m40_170 -> m40_106  [color=green, key=1, label=string, style=dashed];
m40_171 -> m40_106  [color=green, key=1, label=string, style=dashed];
m40_172 -> m40_113  [color=green, key=1, label=int, style=dashed];
m40_173 -> m40_113  [color=green, key=1, label=int, style=dashed];
m40_174 -> m40_113  [color=green, key=1, label=trimSql, style=dashed];
m40_175 -> m40_121  [color=green, key=1, label=string, style=dashed];
m40_175 -> m40_123  [color=green, key=1, label=string, style=dashed];
m40_176 -> m40_121  [color=green, key=1, label=updateSql, style=dashed];
m40_176 -> m40_123  [color=green, key=1, label=updateSql, style=dashed];
m40_177 -> m40_123  [color=green, key=1, label=insertSql, style=dashed];
m40_178 -> m40_131  [color=green, key=1, label=string, style=dashed];
m40_178 -> m40_133  [color=green, key=1, label=string, style=dashed];
m40_179 -> m40_131  [color=green, key=1, label=updateSql, style=dashed];
m40_179 -> m40_133  [color=green, key=1, label=updateSql, style=dashed];
m40_180 -> m40_133  [color=green, key=1, label=insertSql, style=dashed];
m40_181 -> m40_139  [color=green, key=1, label=string, style=dashed];
m40_182 -> m40_139  [color=green, key=1, label="System.TimeSpan", style=dashed];
m41_28 -> m41_29  [color=red, key=0, style=solid];
m41_28 -> m41_32  [color=red, key=1, label=string, style=dashed];
m41_29 -> m41_30  [color=red, key=0, style=solid];
m41_29 -> m41_11  [color=red, key=2, style=dotted];
m41_29 -> m41_31  [color=red, key=1, label="lambda expression", style=dashed];
m41_30 -> m41_28  [color=blue, key=0, style=bold];
m41_6 -> m41_7  [color=red, key=0, style=solid];
m41_6 -> m41_9  [color=red, key=1, label=string, style=dashed];
m41_6 -> m41_13  [color=red, key=1, label=string, style=dashed];
m41_6 -> m41_15  [color=red, key=1, label=string, style=dashed];
m41_7 -> m41_8  [color=red, key=0, style=solid];
m41_7 -> m41_9  [color=red, key=1, label=insertSql, style=dashed];
m41_7 -> m41_15  [color=red, key=1, label=insertSql, style=dashed];
m41_7 -> m41_7  [color=red, key=3, label="Local variable string insertSql", style=bold];
m41_9 -> m41_10  [color=red, key=0, style=solid];
m41_9 -> m41_11  [color=red, key=2, style=dotted];
m41_9 -> m41_12  [color=red, key=1, label="lambda expression", style=dashed];
m41_8 -> m41_9  [color=red, key=0, style=solid];
m41_8 -> m41_13  [color=red, key=1, label=updateSql, style=dashed];
m41_8 -> m41_15  [color=red, key=1, label=updateSql, style=dashed];
m41_8 -> m41_8  [color=red, key=3, label="Local variable string updateSql", style=bold];
m41_10 -> m41_6  [color=blue, key=0, style=bold];
m41_0 -> m41_1  [color=red, key=0, style=solid];
m41_0 -> m41_3  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m41_1 -> m41_2  [color=red, key=0, style=solid];
m41_1 -> m41_3  [color=red, key=0, style=solid];
m41_3 -> m41_4  [color=red, key=0, style=solid];
m41_2 -> m41_4  [color=red, key=0, style=solid];
m41_2 -> m41_5  [color=red, key=2, style=dotted];
m41_4 -> m41_0  [color=blue, key=0, style=bold];
m41_31 -> m41_32  [color=red, key=0, style=solid];
m41_13 -> m41_14  [color=red, key=0, style=solid];
m41_13 -> m41_17  [color=red, key=2, style=dotted];
m41_15 -> m41_16  [color=red, key=0, style=solid];
m41_15 -> m41_17  [color=red, key=2, style=dotted];
m41_12 -> m41_13  [color=red, key=0, style=solid];
m41_12 -> m41_15  [color=red, key=1, label=SqlConnection, style=dashed];
m41_14 -> m41_15  [color=red, key=0, style=solid];
m41_14 -> m41_16  [color=red, key=0, style=solid];
m41_16 -> m41_12  [color=blue, key=0, style=bold];
m41_24 -> m41_25  [color=red, key=0, style=solid];
m41_24 -> m41_17  [color=red, key=2, style=dotted];
m41_26 -> m41_27  [color=red, key=0, style=solid];
m41_26 -> m41_17  [color=red, key=2, style=dotted];
m41_23 -> m41_24  [color=red, key=0, style=solid];
m41_23 -> m41_26  [color=red, key=1, label=SqlConnection, style=dashed];
m41_25 -> m41_26  [color=red, key=0, style=solid];
m41_25 -> m41_27  [color=red, key=0, style=solid];
m41_27 -> m41_23  [color=blue, key=0, style=bold];
m41_32 -> m41_33  [color=red, key=0, style=solid];
m41_32 -> m41_34  [color=red, key=2, style=dotted];
m41_32 -> m41_17  [color=red, key=2, style=dotted];
m41_33 -> m41_31  [color=blue, key=0, style=bold];
m41_18 -> m41_19  [color=red, key=0, style=solid];
m41_18 -> m41_21  [color=red, key=1, label=string, style=dashed];
m41_18 -> m41_24  [color=red, key=1, label=string, style=dashed];
m41_18 -> m41_26  [color=red, key=1, label=string, style=dashed];
m41_19 -> m41_20  [color=red, key=0, style=solid];
m41_19 -> m41_21  [color=red, key=1, label=insertSql, style=dashed];
m41_19 -> m41_26  [color=red, key=1, label=insertSql, style=dashed];
m41_19 -> m41_7  [color=red, key=3, label="Local variable string insertSql", style=bold];
m41_21 -> m41_22  [color=red, key=0, style=solid];
m41_21 -> m41_11  [color=red, key=2, style=dotted];
m41_21 -> m41_23  [color=red, key=1, label="lambda expression", style=dashed];
m41_20 -> m41_21  [color=red, key=0, style=solid];
m41_20 -> m41_24  [color=red, key=1, label=updateSql, style=dashed];
m41_20 -> m41_26  [color=red, key=1, label=updateSql, style=dashed];
m41_20 -> m41_20  [color=red, key=3, label="Local variable string updateSql", style=bold];
m41_22 -> m41_18  [color=blue, key=0, style=bold];
m41_35 -> m41_3  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", style=dashed];
m41_35 -> m41_9  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", style=dashed];
m41_35 -> m41_21  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", style=dashed];
m41_35 -> m41_29  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", style=dashed];
m41_36 -> m41_13  [color=red, key=1, label=string, style=dashed];
m41_36 -> m41_15  [color=red, key=1, label=string, style=dashed];
m41_37 -> m41_13  [color=red, key=1, label=updateSql, style=dashed];
m41_37 -> m41_15  [color=red, key=1, label=updateSql, style=dashed];
m41_38 -> m41_15  [color=red, key=1, label=insertSql, style=dashed];
m41_39 -> m41_24  [color=red, key=1, label=string, style=dashed];
m41_39 -> m41_26  [color=red, key=1, label=string, style=dashed];
m41_40 -> m41_24  [color=red, key=1, label=updateSql, style=dashed];
m41_40 -> m41_26  [color=red, key=1, label=updateSql, style=dashed];
m41_41 -> m41_26  [color=red, key=1, label=insertSql, style=dashed];
m41_42 -> m41_32  [color=red, key=1, label=string, style=dashed];
m41_43 -> m41_32  [color=red, key=1, label="System.TimeSpan", style=dashed];
m42_15 -> m42_16  [color=red, key=0, style=solid];
m42_16 -> m42_17  [color=red, key=0, style=solid];
m42_16 -> m42_18  [color=red, key=2, style=dotted];
m42_16 -> m42_19  [color=red, key=2, style=dotted];
m42_17 -> m42_15  [color=blue, key=0, style=bold];
m42_10 -> m42_11  [color=red, key=0, style=solid];
m42_11 -> m42_12  [color=red, key=0, style=solid];
m42_11 -> m42_13  [color=red, key=2, style=dotted];
m42_11 -> m42_14  [color=red, key=2, style=dotted];
m42_12 -> m42_10  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_0 -> m42_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m42_0 -> m42_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m42_0 -> m42_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_0 -> m42_7  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_3  [key=0, style=solid];
m42_3 -> m42_4  [key=0, style=solid];
m42_3 -> m42_5  [key=0, style=solid];
m42_5 -> m42_6  [key=0, style=solid];
m42_6 -> m42_7  [key=0, style=solid];
m42_7 -> m42_8  [key=0, style=solid];
m42_2 -> m42_8  [key=0, style=solid];
m42_2 -> m42_9  [key=2, style=dotted];
m42_4 -> m42_8  [key=0, style=solid];
m42_4 -> m42_9  [key=2, style=dotted];
m42_8 -> m42_0  [color=blue, key=0, style=bold];
m42_20 -> m42_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m42_20 -> m42_6  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m42_20 -> m42_7  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m42_20 -> m42_11  [color=red, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m42_20 -> m42_16  [color=red, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m44_92 -> m44_104  [key=0, style=solid];
m44_92 -> m44_105  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m44_92 -> m44_106  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m44_104 -> m44_105  [key=0, style=solid];
m44_104 -> m44_55  [key=2, style=dotted];
m44_104 -> m44_107  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m44_105 -> m44_106  [key=0, style=solid];
m44_105 -> m44_56  [key=2, style=dotted];
m44_106 -> m44_107  [key=0, style=solid];
m44_106 -> m44_57  [key=2, style=dotted];
m44_107 -> m44_108  [key=0, style=solid];
m44_107 -> m44_59  [key=2, style=dotted];
m44_108 -> m44_92  [color=blue, key=0, style=bold];
m44_17 -> m44_153  [key=0, style=solid];
m44_17 -> m44_155  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m44_17 -> m44_157  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m44_17 -> m44_158  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m44_17 -> m44_159  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m44_17 -> m44_9  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.States.JobStateHandler handler", style=bold];
m44_153 -> m44_154  [key=0, style=solid];
m44_153 -> m44_155  [key=0, style=solid];
m44_155 -> m44_156  [key=0, style=solid];
m44_155 -> m44_157  [key=0, style=solid];
m44_155 -> m44_123  [key=2, style=dotted];
m44_157 -> m44_158  [key=0, style=solid];
m44_157 -> m44_159  [key=0, style=solid];
m44_157 -> d59  [key=2, style=dotted];
m44_158 -> m44_159  [key=0, style=solid];
m44_158 -> m44_161  [key=2, style=dotted];
m44_158 -> m44_162  [key=2, style=dotted];
m44_159 -> m44_160  [key=0, style=solid];
m44_159 -> m44_163  [key=2, style=dotted];
m44_154 -> m44_160  [key=0, style=solid];
m44_154 -> m44_14  [key=2, style=dotted];
m44_156 -> m44_160  [key=0, style=solid];
m44_156 -> m44_14  [key=2, style=dotted];
m44_160 -> m44_17  [color=blue, key=0, style=bold];
m44_0 -> m44_1  [key=0, style=solid];
m44_1 -> m44_0  [color=blue, key=0, style=bold];
m44_26 -> m44_27  [key=0, style=solid];
m44_26 -> m44_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m44_26 -> m44_31  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m44_26 -> m44_33  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m44_26 -> m44_34  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m44_26 -> m44_35  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m44_26 -> m44_36  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m44_26 -> m44_37  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m44_27 -> m44_28  [key=0, style=solid];
m44_27 -> m44_29  [key=0, style=solid];
m44_29 -> m44_30  [key=0, style=solid];
m44_29 -> m44_31  [key=0, style=solid];
m44_31 -> m44_32  [key=0, style=solid];
m44_31 -> m44_33  [key=0, style=solid];
m44_33 -> m44_34  [key=0, style=solid];
m44_33 -> m44_46  [key=2, style=dotted];
m44_33 -> m44_47  [key=2, style=dotted];
m44_33 -> m44_21  [key=2, style=dotted];
m44_33 -> m44_48  [key=2, style=dotted];
m44_33 -> m44_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_34 -> m44_35  [key=0, style=solid];
m44_34 -> m44_49  [key=2, style=dotted];
m44_34 -> m44_50  [key=2, style=dotted];
m44_34 -> m44_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m44_34 -> m44_42  [color=green, key=1, label=jobId, style=dashed];
m44_34 -> m44_44  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m44_35 -> m44_36  [key=0, style=solid];
m44_35 -> m44_51  [key=2, style=dotted];
m44_35 -> m44_38  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m44_35 -> m44_41  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m44_36 -> m44_37  [key=0, style=solid];
m44_36 -> m44_52  [key=2, style=dotted];
m44_36 -> m44_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m44_37 -> m44_38  [key=0, style=solid];
m44_37 -> m44_53  [key=2, style=dotted];
m44_37 -> m44_41  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m44_28 -> m44_45  [key=0, style=solid];
m44_28 -> m44_14  [key=2, style=dotted];
m44_30 -> m44_45  [key=0, style=solid];
m44_30 -> m44_14  [key=2, style=dotted];
m44_32 -> m44_45  [key=0, style=solid];
m44_32 -> m44_14  [key=2, style=dotted];
m44_42 -> m44_43  [color=green, key=0, style=solid];
m44_42 -> m44_58  [color=green, key=2, style=dotted];
m44_44 -> m44_45  [key=0, style=solid];
m44_38 -> m44_39  [key=0, style=solid];
m44_38 -> m44_54  [key=2, style=dotted];
m44_41 -> m44_42  [color=green, key=0, style=solid];
m44_41 -> m44_57  [key=2, style=dotted];
m44_40 -> m44_41  [key=0, style=solid];
m44_40 -> m44_56  [key=2, style=dotted];
m44_39 -> m44_40  [key=0, style=solid];
m44_39 -> m44_55  [key=2, style=dotted];
m44_39 -> m44_42  [color=green, key=1, label=transaction, style=dashed];
m44_39 -> m44_43  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m44_43 -> m44_44  [key=0, style=solid];
m44_43 -> m44_59  [key=2, style=dotted];
m44_45 -> m44_26  [color=blue, key=0, style=bold];
m44_129 -> m44_135  [color=red, key=0, style=solid];
m44_129 -> m44_137  [color=red, key=1, label="HangFire.Common.States.JobState", style=dashed];
m44_129 -> m44_138  [color=red, key=1, label=bool, style=dashed];
m44_129 -> m44_139  [color=red, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m44_129 -> m44_140  [color=red, key=1, label="HangFire.Common.States.JobState", style=dashed];
m44_129 -> m44_142  [color=red, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m44_135 -> m44_136  [color=red, key=0, style=solid];
m44_135 -> m44_144  [color=red, key=2, style=dotted];
m44_135 -> m44_127  [color=red, key=2, style=dotted];
m44_135 -> m44_137  [color=red, key=1, label=properties, style=dashed];
m44_135 -> m44_139  [color=red, key=1, label=properties, style=dashed];
m44_135 -> m44_140  [color=red, key=1, label=properties, style=dashed];
m44_135 -> m44_141  [color=red, key=1, label=properties, style=dashed];
m44_135 -> m44_142  [color=red, key=1, label=properties, style=dashed];
m44_137 -> m44_138  [color=red, key=0, style=solid];
m44_137 -> m44_145  [color=red, key=2, style=dotted];
m44_138 -> m44_139  [color=red, key=0, style=solid];
m44_138 -> m44_140  [color=red, key=0, style=solid];
m44_139 -> m44_140  [color=red, key=0, style=solid];
m44_139 -> m44_146  [color=red, key=2, style=dotted];
m44_140 -> m44_141  [color=red, key=0, style=solid];
m44_140 -> m44_145  [color=red, key=2, style=dotted];
m44_142 -> m44_143  [color=red, key=0, style=solid];
m44_142 -> m44_148  [color=red, key=2, style=dotted];
m44_136 -> m44_137  [color=red, key=0, style=solid];
m44_136 -> m44_141  [color=red, key=1, label=now, style=dashed];
m44_141 -> m44_142  [color=red, key=0, style=solid];
m44_141 -> m44_147  [color=red, key=2, style=dotted];
m44_141 -> m44_145  [color=red, key=2, style=dotted];
m44_143 -> m44_129  [color=blue, key=0, style=bold];
m44_60 -> m44_61  [key=0, style=solid];
m44_19 -> m44_20  [key=0, style=solid];
m44_19 -> m44_21  [key=2, style=dotted];
m44_19 -> m44_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_18 -> m44_19  [key=0, style=solid];
m44_20 -> m44_18  [color=blue, key=0, style=bold];
m44_22 -> m44_23  [key=0, style=solid];
m44_23 -> m44_24  [key=0, style=solid];
m44_23 -> m44_25  [key=2, style=dotted];
m44_24 -> m44_22  [color=blue, key=0, style=bold];
m44_61 -> m44_62  [key=0, style=solid];
m44_62 -> m44_60  [color=blue, key=0, style=bold];
m44_54 -> m44_96  [key=0, style=solid];
m44_54 -> m44_97  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m44_54 -> m44_98  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m44_54 -> m44_99  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m44_54 -> m44_100  [color=green, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m44_96 -> m44_97  [key=0, style=solid];
m44_96 -> m44_101  [key=0, style=solid];
m44_96 -> m44_98  [color=darkseagreen4, key=1, label=filter, style=dashed];
m44_97 -> m44_98  [key=0, style=solid];
m44_97 -> m44_99  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m44_97 -> m44_100  [color=green, key=1, label=oldState, style=dashed];
m44_98 -> m44_99  [key=0, style=solid];
m44_98 -> m44_102  [key=2, style=dotted];
m44_99 -> m44_100  [color=green, key=0, style=solid];
m44_99 -> m44_96  [key=0, style=solid];
m44_100 -> m44_96  [color=green, key=0, style=solid];
m44_100 -> m44_103  [color=green, key=2, style=dotted];
m44_101 -> m44_54  [color=blue, key=0, style=bold];
m44_57 -> m44_121  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m44_57 -> m44_109  [key=0, style=solid];
m44_57 -> m44_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_57 -> m44_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_57 -> m44_112  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m44_57 -> m44_113  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m44_57 -> m44_114  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m44_57 -> m44_115  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m44_57 -> m44_116  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m44_57 -> m44_117  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m44_57 -> m44_118  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m44_57 -> m44_119  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m44_57 -> m44_120  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m44_109 -> m44_110  [key=0, style=solid];
m44_109 -> m44_115  [key=0, style=solid];
m44_109 -> m44_123  [key=2, style=dotted];
m44_110 -> m44_111  [key=0, style=solid];
m44_110 -> m44_113  [key=0, style=solid];
m44_110 -> d59  [key=2, style=dotted];
m44_111 -> m44_112  [key=0, style=solid];
m44_111 -> m44_113  [key=0, style=solid];
m44_112 -> m44_111  [key=0, style=solid];
m44_112 -> m44_125  [key=2, style=dotted];
m44_113 -> m44_114  [key=0, style=solid];
m44_113 -> m44_115  [key=0, style=solid];
m44_114 -> m44_113  [key=0, style=solid];
m44_114 -> m44_126  [key=2, style=dotted];
m44_115 -> m44_116  [key=0, style=solid];
m44_115 -> m44_119  [color=red, key=0, style=solid];
m44_115 -> d59  [key=2, style=dotted];
m44_116 -> m44_117  [key=0, style=solid];
m44_116 -> m44_127  [key=2, style=dotted];
m44_116 -> m44_118  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m44_117 -> m44_118  [key=0, style=solid];
m44_117 -> m44_119  [color=red, key=0, style=solid];
m44_118 -> m44_117  [key=0, style=solid];
m44_118 -> m44_128  [key=2, style=dotted];
m44_119 -> m44_120  [color=red, key=0, style=solid];
m44_119 -> m44_129  [color=red, key=2, style=dotted];
m44_120 -> m44_121  [color=green, key=0, style=solid];
m44_120 -> m44_122  [key=0, style=solid];
m44_121 -> m44_120  [color=green, key=0, style=solid];
m44_121 -> m44_130  [color=green, key=2, style=dotted];
m44_122 -> m44_57  [color=blue, key=0, style=bold];
m44_63 -> m44_64  [key=0, style=solid];
m44_63 -> m44_66  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m44_63 -> m44_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_63 -> m44_69  [color=green, key=1, label=string, style=dashed];
m44_63 -> m44_73  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m44_63 -> m44_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_63 -> m44_78  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m44_63 -> m44_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_63 -> m44_71  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m44_63 -> m44_92  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m44_64 -> m44_65  [key=0, style=solid];
m44_64 -> m44_66  [key=0, style=solid];
m44_64 -> m44_87  [key=2, style=dotted];
m44_66 -> m44_67  [key=0, style=solid];
m44_66 -> m44_68  [key=0, style=solid];
m44_68 -> m44_69  [color=green, key=0, style=solid];
m44_68 -> m44_88  [key=2, style=dotted];
m44_69 -> m44_70  [color=green, key=0, style=solid];
m44_69 -> m44_89  [color=green, key=2, style=dotted];
m44_69 -> m44_72  [color=green, key=1, label=jobData, style=dashed];
m44_69 -> m44_75  [color=green, key=1, label=jobData, style=dashed];
m44_73 -> m44_74  [key=0, style=solid];
m44_73 -> m44_75  [key=0, style=solid];
m44_73 -> m44_90  [key=2, style=dotted];
m44_77 -> m44_78  [key=0, style=solid];
m44_77 -> m44_52  [key=2, style=dotted];
m44_78 -> m44_79  [key=0, style=solid];
m44_78 -> m44_53  [key=2, style=dotted];
m44_78 -> m44_80  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m44_82 -> m44_83  [key=0, style=solid];
m44_82 -> m44_53  [key=2, style=dotted];
m44_82 -> m44_52  [key=2, style=dotted];
m44_82 -> m44_93  [key=2, style=dotted];
m44_82 -> m44_94  [key=2, style=dotted];
m44_65 -> m44_86  [key=0, style=solid];
m44_65 -> m44_14  [key=2, style=dotted];
m44_67 -> m44_86  [key=0, style=solid];
m44_67 -> m44_14  [key=2, style=dotted];
m44_70 -> m44_71  [key=0, style=solid];
m44_70 -> m44_72  [key=0, style=solid];
m44_72 -> m44_73  [key=0, style=solid];
m44_72 -> m44_78  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m44_72 -> m44_82  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m44_75 -> m44_76  [key=0, style=solid];
m44_75 -> m44_91  [key=2, style=dotted];
m44_75 -> m44_77  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m44_71 -> m44_86  [key=0, style=solid];
m44_74 -> m44_86  [key=0, style=solid];
m44_76 -> m44_77  [key=0, style=solid];
m44_76 -> m44_51  [key=2, style=dotted];
m44_76 -> m44_79  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m44_76 -> m44_80  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m44_79 -> m44_80  [key=0, style=solid];
m44_79 -> m44_54  [key=2, style=dotted];
m44_80 -> m44_86  [key=0, style=solid];
m44_80 -> m44_92  [key=2, style=dotted];
m44_81 -> m44_82  [key=0, style=solid];
m44_83 -> m44_86  [key=0, style=solid];
m44_83 -> m44_95  [key=2, style=dotted];
m44_83 -> m44_92  [key=2, style=dotted];
m44_84 -> m44_85  [key=0, style=solid];
m44_85 -> m44_86  [key=0, style=solid];
m44_86 -> m44_63  [color=blue, key=0, style=bold];
m44_51 -> m44_149  [key=0, style=solid];
m44_51 -> m44_75  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.JobMethod method", style=bold];
m44_149 -> m44_150  [key=0, style=solid];
m44_149 -> m44_151  [key=2, style=dotted];
m44_149 -> m44_152  [key=2, style=dotted];
m44_150 -> m44_51  [color=blue, key=0, style=bold];
m44_126 -> m44_12  [color=darkorchid, key=3, label="Field variable System.Func<HangFire.Common.JobMethod, System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>> _getFiltersThunk", style=bold];
m44_103 -> m44_131  [color=red, key=0, style=solid];
m44_103 -> m44_132  [color=red, key=1, label="HangFire.Common.States.StateContext", style=dashed];
m44_131 -> m44_132  [color=red, key=0, style=solid];
m44_131 -> m44_55  [color=red, key=2, style=dotted];
m44_131 -> m44_133  [color=red, key=1, label=transaction, style=dashed];
m44_132 -> m44_133  [color=red, key=0, style=solid];
m44_132 -> m44_129  [color=red, key=2, style=dotted];
m44_133 -> m44_134  [color=red, key=0, style=solid];
m44_133 -> m44_59  [color=red, key=2, style=dotted];
m44_134 -> m44_103  [color=blue, key=0, style=bold];
m44_2 -> m44_3  [key=0, style=solid];
m44_2 -> m44_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>", style=dashed];
m44_2 -> m44_7  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m44_2 -> m44_8  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m44_2 -> m44_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m44_2 -> m44_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m44_2 -> m44_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m44_3 -> m44_4  [key=0, style=solid];
m44_3 -> m44_5  [key=0, style=solid];
m44_5 -> m44_6  [key=0, style=solid];
m44_5 -> m44_7  [key=0, style=solid];
m44_7 -> m44_8  [key=0, style=solid];
m44_8 -> m44_9  [key=0, style=solid];
m44_8 -> m44_15  [key=2, style=dotted];
m44_8 -> m44_16  [key=2, style=dotted];
m44_11 -> m44_12  [key=0, style=solid];
m44_11 -> m44_13  [key=0, style=solid];
m44_12 -> m44_13  [key=0, style=solid];
m44_4 -> m44_13  [key=0, style=solid];
m44_4 -> m44_14  [key=2, style=dotted];
m44_6 -> m44_13  [key=0, style=solid];
m44_6 -> m44_14  [key=2, style=dotted];
m44_9 -> m44_10  [key=0, style=solid];
m44_9 -> m44_11  [key=0, style=solid];
m44_10 -> m44_9  [key=0, style=solid];
m44_10 -> m44_17  [key=2, style=dotted];
m44_13 -> m44_2  [color=blue, key=0, style=bold];
m44_164 -> m44_7  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_10  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_12  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_34  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_35  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_37  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_38  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_39  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_41  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_68  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_69  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_76  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_78  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_79  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_80  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_82  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_100  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_104  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_106  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_110  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_111  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_115  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_117  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_119  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_131  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_132  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_149  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_157  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_158  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_164 -> m44_159  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_165 -> m44_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m45_19 -> m45_20  [key=0, style=solid];
m45_19 -> m45_21  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m45_19 -> m45_23  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m45_20 -> m45_21  [key=0, style=solid];
m45_20 -> m45_15  [key=2, style=dotted];
m45_21 -> m45_22  [key=0, style=solid];
m45_21 -> m45_16  [key=2, style=dotted];
m45_21 -> m45_17  [key=2, style=dotted];
m45_23 -> m45_24  [key=0, style=solid];
m45_22 -> m45_23  [key=0, style=solid];
m45_22 -> m45_24  [key=0, style=solid];
m45_24 -> m45_19  [color=blue, key=0, style=bold];
m45_7 -> m45_8  [key=0, style=solid];
m45_7 -> m45_11  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m45_8 -> m45_9  [key=0, style=solid];
m45_8 -> m45_15  [key=2, style=dotted];
m45_11 -> m45_12  [key=0, style=solid];
m45_9 -> m45_10  [key=0, style=solid];
m45_9 -> m45_16  [key=2, style=dotted];
m45_9 -> m45_17  [key=2, style=dotted];
m45_10 -> m45_11  [key=0, style=solid];
m45_10 -> m45_12  [key=0, style=solid];
m45_12 -> m45_13  [key=0, style=solid];
m45_12 -> m45_14  [key=0, style=solid];
m45_13 -> m45_14  [key=0, style=solid];
m45_13 -> m45_18  [key=2, style=dotted];
m45_14 -> m45_7  [color=blue, key=0, style=bold];
m45_0 -> m45_1  [key=0, style=solid];
m45_0 -> m45_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<string>", style=dashed];
m45_0 -> m45_3  [color=darkseagreen4, key=1, label=bool, style=dashed];
m45_0 -> m45_4  [color=darkseagreen4, key=1, label=bool, style=dashed];
m45_0 -> m45_5  [color=darkseagreen4, key=1, label=bool, style=dashed];
m45_1 -> m45_2  [key=0, style=solid];
m45_2 -> m45_3  [key=0, style=solid];
m45_3 -> m45_4  [key=0, style=solid];
m45_4 -> m45_5  [key=0, style=solid];
m45_5 -> m45_6  [key=0, style=solid];
m45_6 -> m45_0  [color=blue, key=0, style=bold];
m45_25 -> m45_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m45_25 -> m45_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m45_25 -> m45_3  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m45_25 -> m45_4  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m45_25 -> m45_5  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m45_25 -> m45_9  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m45_25 -> m45_10  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m45_25 -> m45_12  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m45_25 -> m45_21  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m45_25 -> m45_22  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m46_3 -> m46_4  [key=0, style=solid];
m46_3 -> m46_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m46_3 -> m46_8  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m46_4 -> m46_5  [key=0, style=solid];
m46_4 -> m46_13  [key=2, style=dotted];
m46_4 -> m46_6  [color=green, key=1, label=transaction, style=dashed];
m46_4 -> m46_7  [color=green, key=1, label=transaction, style=dashed];
m46_4 -> m46_9  [color=green, key=1, label=transaction, style=dashed];
m46_4 -> m46_10  [color=green, key=1, label=transaction, style=dashed];
m46_4 -> m46_11  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m46_5 -> m46_6  [color=green, key=0, style=solid];
m46_5 -> m46_8  [key=0, style=solid];
m46_8 -> m46_9  [color=green, key=0, style=solid];
m46_8 -> m46_11  [key=0, style=solid];
m46_6 -> m46_7  [color=green, key=0, style=solid];
m46_6 -> m46_14  [color=green, key=2, style=dotted];
m46_6 -> d60  [color=green, key=2, style=dotted];
m46_6 -> m46_16  [color=green, key=2, style=dotted];
m46_6 -> m46_17  [color=green, key=2, style=dotted];
m46_7 -> m46_11  [color=green, key=0, style=solid];
m46_7 -> m46_14  [color=green, key=2, style=dotted];
m46_7 -> d60  [color=green, key=2, style=dotted];
m46_7 -> m46_18  [color=green, key=2, style=dotted];
m46_7 -> m46_17  [color=green, key=2, style=dotted];
m46_9 -> m46_10  [color=green, key=0, style=solid];
m46_9 -> m46_14  [color=green, key=2, style=dotted];
m46_9 -> d60  [color=green, key=2, style=dotted];
m46_9 -> m46_16  [color=green, key=2, style=dotted];
m46_9 -> m46_17  [color=green, key=2, style=dotted];
m46_10 -> m46_11  [color=green, key=0, style=solid];
m46_10 -> m46_14  [color=green, key=2, style=dotted];
m46_10 -> d60  [color=green, key=2, style=dotted];
m46_10 -> m46_18  [color=green, key=2, style=dotted];
m46_10 -> m46_17  [color=green, key=2, style=dotted];
m46_11 -> m46_12  [key=0, style=solid];
m46_11 -> m46_19  [key=2, style=dotted];
m46_12 -> m46_3  [color=blue, key=0, style=bold];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_2  [key=0, style=solid];
m46_2 -> m46_0  [color=blue, key=0, style=bold];
m46_20 -> m46_1  [color=darkseagreen4, key=1, label="HangFire.Filters.StatisticsHistoryFilterAttribute", style=dashed];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> m47_3  [key=2, style=dotted];
m47_1 -> d58  [key=2, style=dotted];
m47_2 -> m47_0  [color=blue, key=0, style=bold];
m47_2 -> m47_3  [key=0, style=solid];
m47_3 -> m47_4  [key=0, style=solid];
m47_4 -> m47_5  [key=0, style=solid];
m47_5 -> m47_2  [color=blue, key=0, style=bold];
m47_5 -> m47_6  [color=red, key=0, style=solid];
m47_5 -> m47_7  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m47_6 -> m47_7  [color=green, key=0, style=solid];
m47_6 -> m47_9  [color=red, key=2, style=dotted];
m47_7 -> m47_8  [color=green, key=0, style=solid];
m47_7 -> m47_10  [color=red, key=2, style=dotted];
m47_7 -> m47_3  [color=green, key=2, style=dotted];
m47_7 -> d58  [color=green, key=2, style=dotted];
m47_8 -> m47_5  [color=blue, key=0, style=bold];
m47_8 -> m47_6  [color=blue, key=0, style=bold];
m47_11 -> m47_12  [color=red, key=0, style=solid];
m47_11 -> m47_13  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m47_12 -> m47_13  [color=red, key=0, style=solid];
m47_12 -> m47_15  [color=red, key=2, style=dotted];
m47_13 -> m47_14  [color=red, key=0, style=solid];
m47_13 -> m47_16  [color=red, key=2, style=dotted];
m47_14 -> m47_11  [color=blue, key=0, style=bold];
m47_26 -> m47_7  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m47_26 -> m47_3  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m47_26 -> m47_4  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m48_6 -> m48_7  [color=green, key=0, style=solid];
m48_7 -> m48_8  [color=green, key=0, style=solid];
m48_7 -> m48_9  [color=green, key=2, style=dotted];
m48_8 -> m48_6  [color=blue, key=0, style=bold];
m48_0 -> m48_1  [color=green, key=0, style=solid];
m48_0 -> m48_2  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m48_1 -> m48_2  [color=green, key=0, style=solid];
m48_1 -> m48_4  [color=green, key=2, style=dotted];
m48_2 -> m48_3  [color=green, key=0, style=solid];
m48_2 -> m48_5  [color=green, key=2, style=dotted];
m48_3 -> m48_0  [color=blue, key=0, style=bold];
m49_0 -> m49_1  [color=green, key=0, style=solid];
m49_0 -> m49_2  [color=green, key=1, label=RouteCollection, style=dashed];
m49_1 -> m49_2  [color=green, key=0, style=solid];
m49_1 -> m49_4  [color=green, key=2, style=dotted];
m49_2 -> m49_3  [color=green, key=0, style=solid];
m49_2 -> m49_5  [color=green, key=2, style=dotted];
m49_3 -> m49_0  [color=blue, key=0, style=bold];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> m50_25  [key=2, style=dotted];
m50_2 -> m50_3  [key=0, style=solid];
m50_2 -> m50_26  [key=2, style=dotted];
m50_2 -> m50_5  [color=darkseagreen4, key=1, label=connection, style=dashed];
m50_2 -> m50_18  [color=darkseagreen4, key=1, label=connection, style=dashed];
m50_3 -> m50_4  [key=0, style=solid];
m50_3 -> m50_27  [key=2, style=dotted];
m50_5 -> m50_6  [key=0, style=solid];
m50_5 -> d60  [key=2, style=dotted];
m50_5 -> m50_29  [key=2, style=dotted];
m50_5 -> m50_9  [color=darkseagreen4, key=1, label=hash, style=dashed];
m50_5 -> m50_10  [color=darkseagreen4, key=1, label=hash, style=dashed];
m50_5 -> m50_14  [color=darkseagreen4, key=1, label=hash, style=dashed];
m50_5 -> m50_15  [color=darkseagreen4, key=1, label=hash, style=dashed];
m50_5 -> m50_16  [color=darkseagreen4, key=1, label=hash, style=dashed];
m50_5 -> m50_17  [color=darkseagreen4, key=1, label=hash, style=dashed];
m50_5 -> m50_21  [color=darkseagreen4, key=1, label=hash, style=dashed];
m50_5 -> m50_22  [color=darkseagreen4, key=1, label=hash, style=dashed];
m50_18 -> m50_19  [key=0, style=solid];
m50_18 -> m50_36  [key=2, style=dotted];
m50_18 -> m50_20  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m50_4 -> m50_5  [key=0, style=solid];
m50_4 -> m50_24  [key=0, style=solid];
m50_4 -> m50_7  [color=darkseagreen4, key=1, label=id, style=dashed];
m50_4 -> m50_8  [color=darkseagreen4, key=1, label=id, style=dashed];
m50_7 -> m50_4  [key=0, style=solid];
m50_7 -> m50_30  [key=2, style=dotted];
m50_7 -> m50_31  [key=2, style=dotted];
m50_8 -> m50_9  [key=0, style=solid];
m50_8 -> m50_30  [key=2, style=dotted];
m50_8 -> m50_11  [color=darkseagreen4, key=1, label=dto, style=dashed];
m50_8 -> m50_13  [color=darkseagreen4, key=1, label=dto, style=dashed];
m50_8 -> m50_15  [color=darkseagreen4, key=1, label=dto, style=dashed];
m50_8 -> m50_17  [color=darkseagreen4, key=1, label=dto, style=dashed];
m50_8 -> m50_18  [color=darkseagreen4, key=1, label=dto, style=dashed];
m50_8 -> m50_20  [color=darkseagreen4, key=1, label=dto, style=dashed];
m50_8 -> m50_22  [color=darkseagreen4, key=1, label=dto, style=dashed];
m50_8 -> m50_23  [color=darkseagreen4, key=1, label=dto, style=dashed];
m50_6 -> m50_7  [key=0, style=solid];
m50_6 -> m50_8  [key=0, style=solid];
m50_9 -> m50_10  [key=0, style=solid];
m50_10 -> m50_11  [key=0, style=solid];
m50_10 -> m50_32  [key=2, style=dotted];
m50_14 -> m50_15  [key=0, style=solid];
m50_14 -> m50_16  [key=0, style=solid];
m50_14 -> m50_34  [key=2, style=dotted];
m50_15 -> m50_16  [key=0, style=solid];
m50_15 -> m50_35  [key=2, style=dotted];
m50_16 -> m50_17  [key=0, style=solid];
m50_16 -> m50_21  [key=0, style=solid];
m50_16 -> m50_34  [key=2, style=dotted];
m50_17 -> m50_18  [key=0, style=solid];
m50_21 -> m50_22  [key=0, style=solid];
m50_21 -> m50_23  [key=0, style=solid];
m50_21 -> m50_34  [key=2, style=dotted];
m50_22 -> m50_23  [key=0, style=solid];
m50_22 -> m50_35  [key=2, style=dotted];
m50_11 -> m50_12  [key=0, style=solid];
m50_11 -> m50_14  [key=0, style=solid];
m50_11 -> m50_33  [key=2, style=dotted];
m50_13 -> m50_14  [key=0, style=solid];
m50_20 -> m50_21  [key=0, style=solid];
m50_23 -> m50_4  [key=0, style=solid];
m50_23 -> m50_31  [key=2, style=dotted];
m50_12 -> m50_13  [key=0, style=solid];
m50_19 -> m50_20  [key=0, style=solid];
m50_19 -> m50_21  [key=0, style=solid];
m50_24 -> m50_0  [color=blue, key=0, style=bold];
m50_37 -> m50_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m50_37 -> m50_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m50_37 -> m50_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
}
