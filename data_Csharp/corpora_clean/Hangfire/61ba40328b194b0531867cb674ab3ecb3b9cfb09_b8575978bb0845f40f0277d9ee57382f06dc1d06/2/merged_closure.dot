digraph  {
n0 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
n1 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="client == null", span="38-38"];
n3 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="return client.Create(methodCall, new EnqueuedState());", span="40-40"];
n2 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="throw new ArgumentNullException(''client'');", span="38-38"];
n4 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
n6 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
n7 [cluster="Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Entry Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138"];
n5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n8 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54"];
n9 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="client == null", span="56-56"];
n11 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="return client.Create(methodCall, new EnqueuedState());", span="58-58"];
n10 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="throw new ArgumentNullException(''client'');", span="56-56"];
n12 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54"];
n13 [cluster="Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="Entry Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158"];
n14 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69"];
n15 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="client == null", span="71-71"];
n17 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="return client.Create(methodCall, new ScheduledState(delay));", span="73-73"];
n16 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="throw new ArgumentNullException(''client'');", span="71-71"];
n18 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69"];
n19 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="28-28"];
n20 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84"];
n21 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="client == null", span="89-89"];
n23 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="91-91"];
n22 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="throw new ArgumentNullException(''client'');", span="89-89"];
n24 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84"];
n25 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="34-34"];
n26 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104"];
n27 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="client == null", span="106-106"];
n29 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="return client.Create(methodCall, new ScheduledState(delay));", span="108-108"];
n28 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="throw new ArgumentNullException(''client'');", span="106-106"];
n30 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104"];
n31 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120"];
n32 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="client == null", span="125-125"];
n34 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="127-127"];
n33 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="throw new ArgumentNullException(''client'');", span="125-125"];
n35 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120"];
n36 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138"];
n37 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="client == null", span="143-143"];
n39 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="return client.Create(Job.FromExpression(methodCall), state);", span="145-145"];
n38 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="throw new ArgumentNullException(''client'');", span="143-143"];
n40 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138"];
n41 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
n42 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41"];
n43 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158"];
n44 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="client == null", span="163-163"];
n46 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="return client.Create(Job.FromExpression(methodCall), state);", span="165-165"];
n45 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="throw new ArgumentNullException(''client'');", span="163-163"];
n47 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158"];
n48 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="191-191"];
n49 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="177-177"];
n50 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="client == null", span="179-179"];
n52 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="return client.ChangeState(jobId, state, null);", span="180-180"];
n51 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="throw new ArgumentNullException(''client'');", span="179-179"];
n53 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="177-177"];
n54 [cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="54-54"];
n55 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="204-204"];
n56 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", label="return Delete(client, jobId, null);", span="206-206"];
n57 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="204-204"];
n58 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="233-233"];
n59 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="client == null", span="235-235"];
n62 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="return client.ChangeState(jobId, state, fromState);", span="238-238"];
n60 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="throw new ArgumentNullException(''client'');", span="235-235"];
n61 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="var state = new DeletedState()", span="237-237"];
n64 [cluster="Hangfire.States.DeletedState.DeletedState()", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
n63 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="233-233"];
n65 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="249-249"];
n66 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", label="return Requeue(client, jobId, null);", span="251-251"];
n67 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="249-249"];
n68 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="265-265"];
n69 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="client == null", span="267-267"];
n72 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="return client.ChangeState(jobId, state, fromState);", span="270-270"];
n70 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="throw new ArgumentNullException(''client'');", span="267-267"];
n71 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="var state = new EnqueuedState()", span="269-269"];
n73 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="265-265"];
n74 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="273-273"];
n75 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState());", span="276-276"];
n76 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="273-273"];
n77 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="279-279"];
n78 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="return ContinueWith(client, parentId, methodCall, nextState, JobContinuationOptions.OnlyOnSucceededState);", span="285-285"];
n79 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="279-279"];
n80 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="297-297"];
n81 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288"];
n82 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="294-294"];
n83 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288"];
n84 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="client == null", span="304-304"];
n86 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="var state = new AwaitingState(parentId, nextState, options)", span="306-306"];
n87 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="return client.Create(Job.FromExpression(methodCall), state);", span="307-307"];
n85 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="throw new ArgumentNullException(''client'');", span="304-304"];
n89 [cluster="Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="Entry Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="40-40"];
n88 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="297-297"];
m0_34 [cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120"];
m0_20 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105"];
m0_21 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="107-107"];
m0_22 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="return client.Schedule(methodCall, enqueueAt);", span="108-108"];
m0_23 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105"];
m0_64 [cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288"];
m0_45 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Requeue(string)", span="178-178"];
m0_46 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="180-180"];
m0_47 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="CachedExpressionCompiler.cs", label="return client.Requeue(jobId);", span="181-181"];
m0_48 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Requeue(string)", span="178-178"];
m0_59 [cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="273-273"];
m0_24 [cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84"];
m0_3 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48"];
m0_35 [cluster="Hangfire.BackgroundJob.Delete(string)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149"];
m0_36 [cluster="Hangfire.BackgroundJob.Delete(string)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="151-151"];
m0_37 [cluster="Hangfire.BackgroundJob.Delete(string)", file="CachedExpressionCompiler.cs", label="return client.Delete(jobId);", span="152-152"];
m0_38 [cluster="Hangfire.BackgroundJob.Delete(string)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Delete(string)", span="149-149"];
m0_9 [cluster="Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
m0_60 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206"];
m0_61 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="208-208"];
m0_62 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs", label="return client.ContinueWith(parentId, methodCall, options);", span="209-209"];
m0_63 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206"];
m0_49 [cluster="Hangfire.IBackgroundJobClient.Requeue(string)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Requeue(string)", span="249-249"];
m0_8 [cluster="System.Func<TResult>.Invoke()", file="CachedExpressionCompiler.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_54 [cluster="Hangfire.IBackgroundJobClient.Requeue(string, string)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Requeue(string, string)", span="265-265"];
m0_39 [cluster="Hangfire.IBackgroundJobClient.Delete(string)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Delete(string)", span="204-204"];
m0_55 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200"];
m0_56 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="202-202"];
m0_57 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="return client.ContinueWith(parentId, methodCall);", span="203-203"];
m0_58 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200"];
m0_30 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135"];
m0_31 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="137-137"];
m0_32 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="return client.Schedule(methodCall, enqueueAt);", span="138-138"];
m0_33 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135"];
m0_0 [cluster="lambda expression", file="CachedExpressionCompiler.cs", label="Entry lambda expression", span="29-29"];
m0_1 [cluster="lambda expression", file="CachedExpressionCompiler.cs", label="new BackgroundJobClient(JobStorage.Current)", span="29-29"];
m0_2 [cluster="lambda expression", file="CachedExpressionCompiler.cs", label="Exit lambda expression", span="29-29"];
m0_29 [cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104"];
m0_50 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="194-194"];
m0_51 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="196-196"];
m0_52 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="CachedExpressionCompiler.cs", label="return client.Requeue(jobId, fromState);", span="197-197"];
m0_53 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Requeue(string, string)", span="194-194"];
m0_40 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="165-165"];
m0_41 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="167-167"];
m0_42 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="CachedExpressionCompiler.cs", label="return client.Delete(jobId, fromState);", span="168-168"];
m0_43 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Delete(string, string)", span="165-165"];
m0_15 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91"];
m0_16 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="93-93"];
m0_17 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="return client.Schedule(methodCall, delay);", span="94-94"];
m0_18 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91"];
m0_4 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61"];
m0_5 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="63-63"];
m0_6 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="return client.Enqueue(methodCall);", span="64-64"];
m0_7 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61"];
m0_19 [cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69"];
m0_10 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m0_11 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="79-79"];
m0_12 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs", label="return client.Enqueue(methodCall);", span="80-80"];
m0_13 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m0_25 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120"];
m0_26 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="var client = ClientFactory()", span="122-122"];
m0_27 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="return client.Schedule(methodCall, delay);", span="123-123"];
m0_28 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CachedExpressionCompiler.cs", label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120"];
m0_14 [cluster="Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54"];
m0_44 [cluster="Hangfire.IBackgroundJobClient.Delete(string, string)", file="CachedExpressionCompiler.cs", label="Entry Hangfire.IBackgroundJobClient.Delete(string, string)", span="233-233"];
m1_92 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="193-193"];
m1_104 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="var transaction = _connection.CreateWriteTransaction()", span="197-197"];
m1_105 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="199-201"];
m1_106 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="203-203"];
m1_107 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="return transaction.Commit();", span="205-205"];
m1_108 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="193-193"];
m1_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ConditionalExpressionFingerprint.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m1_145 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ConditionalExpressionFingerprint.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_161 [cluster="System.Collections.Generic.List<T>.List()", file="ConditionalExpressionFingerprint.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_93 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="27-27"];
m1_50 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m1_94 [cluster="string.Format(string, object, object)", file="ConditionalExpressionFingerprint.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_87 [cluster="string.IsNullOrWhiteSpace(string)", file="ConditionalExpressionFingerprint.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m1_89 [cluster="HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", span="6-6"];
m1_91 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m1_49 [cluster="System.TimeSpan.FromHours(double)", file="ConditionalExpressionFingerprint.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m1_127 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="31-31"];
m1_128 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m1_146 [cluster="HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m1_17 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="286-286"];
m1_153 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs", label="handler == null", span="288-288"];
m1_155 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs", label="String.IsNullOrEmpty(handler.StateName)", span="289-289"];
m1_157 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs", label="!_handlers.ContainsKey(handler.StateName)", span="291-291"];
m1_158 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs", label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="293-293"];
m1_159 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs", label="_handlers[handler.StateName].Add(handler)", span="296-296"];
m1_154 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs", label="throw new ArgumentNullException(''handler'');", span="288-288"];
m1_156 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs", label="throw new ArgumentNullException(''stateName'');", span="289-289"];
m1_160 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="286-286"];
m1_0 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m1_1 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m1_53 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m1_152 [cluster="System.Func<T, TResult>.Invoke(T)", file="ConditionalExpressionFingerprint.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_125 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m1_55 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m1_25 [cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38"];
m1_26 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m1_27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="method == null", span="69-69"];
m1_29 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="parameters == null", span="70-70"];
m1_31 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="state == null", span="71-71"];
m1_33 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78"];
m1_34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84"];
m1_35 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="var filterInfo = GetFilters(method)", span="86-86"];
m1_36 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="var context = new StateContext(jobId, method)", span="87-87"];
m1_37 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88"];
m1_28 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="throw new ArgumentNullException(''method'');", span="69-69"];
m1_30 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="throw new ArgumentNullException(''parameters'');", span="70-70"];
m1_32 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="throw new ArgumentNullException(''state'');", span="71-71"];
m1_42 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="transaction.Jobs.Persist(jobId)", span="104-104"];
m1_44 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="return jobId;", span="110-110"];
m1_38 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90"];
m1_41 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="ApplyState(\r\n                    changedContext, \r\n                    null,\r\n                    changingContext.CandidateState,\r\n                    filterInfo.StateChangedFilters)", span="98-102"];
m1_40 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="94-96"];
m1_39 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="var transaction = _connection.CreateWriteTransaction()", span="92-92"];
m1_43 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="transaction.Commit()", span="107-107"];
m1_45 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m1_56 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", span="23-23"];
m1_15 [cluster="HangFire.JobStorage.GetStateHandlers()", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52"];
m1_58 [cluster="HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="8-8"];
m1_148 [cluster="HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m1_151 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m1_59 [cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13"];
m1_144 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ConditionalExpressionFingerprint.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m1_123 [cluster="string.IsNullOrEmpty(string)", file="ConditionalExpressionFingerprint.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_88 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m1_124 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ConditionalExpressionFingerprint.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_48 [cluster="Unk.ToJson", file="ConditionalExpressionFingerprint.cs", label="Entry Unk.ToJson", span=""];
m1_60 [cluster="lambda expression", file="ConditionalExpressionFingerprint.cs", label="Entry lambda expression", span="77-77"];
m1_19 [cluster="lambda expression", file="ConditionalExpressionFingerprint.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m1_18 [cluster="lambda expression", file="ConditionalExpressionFingerprint.cs", label="Entry lambda expression", span="59-59"];
m1_20 [cluster="lambda expression", file="ConditionalExpressionFingerprint.cs", label="Exit lambda expression", span="59-59"];
m1_22 [cluster="lambda expression", file="ConditionalExpressionFingerprint.cs", label="Entry lambda expression", span="59-59"];
m1_23 [cluster="lambda expression", file="ConditionalExpressionFingerprint.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59"];
m1_24 [cluster="lambda expression", file="ConditionalExpressionFingerprint.cs", label="Exit lambda expression", span="59-59"];
m1_61 [cluster="lambda expression", file="ConditionalExpressionFingerprint.cs", label="x.ParameterType", span="77-77"];
m1_62 [cluster="lambda expression", file="ConditionalExpressionFingerprint.cs", label="Exit lambda expression", span="77-77"];
m1_147 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m1_21 [cluster="Unk.Select", file="ConditionalExpressionFingerprint.cs", label="Entry Unk.Select", span=""];
m1_54 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="178-178"];
m1_96 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs", label=filters, span="181-181"];
m1_97 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs", label="var oldState = context.CandidateState", span="183-183"];
m1_98 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs", label="filter.OnStateChanging(context)", span="184-184"];
m1_99 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs", label="oldState != context.CandidateState", span="186-186"];
m1_100 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs", label="AppendHistory(context, oldState, false)", span="188-188"];
m1_101 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="178-178"];
m1_57 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="209-209"];
m1_109 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="!String.IsNullOrEmpty(oldState)", span="215-215"];
m1_110 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="_handlers.ContainsKey(oldState)", span="217-217"];
m1_111 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="_handlers[oldState]", span="219-219"];
m1_112 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="handler.Unapply(context)", span="221-221"];
m1_113 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label=stateChangedFilters, span="225-225"];
m1_114 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="filter.OnStateUnapplied(context)", span="227-227"];
m1_115 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="_handlers.ContainsKey(chosenState.StateName)", span="231-231"];
m1_116 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="var stateData = chosenState.GetProperties(context.JobMethod)", span="233-233"];
m1_117 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="_handlers[chosenState.StateName]", span="234-234"];
m1_118 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="handler.Apply(context, stateData)", span="236-236"];
m1_119 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="AppendHistory(context.Transaction, context, chosenState, true)", span="240-240"];
m1_120 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label=stateChangedFilters, span="242-242"];
m1_121 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="filter.OnStateApplied(context)", span="244-244"];
m1_122 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="209-209"];
m1_63 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m1_64 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="String.IsNullOrWhiteSpace(jobId)", span="116-116"];
m1_66 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="state == null", span="117-117"];
m1_68 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="_connection.AcquireJobLock(jobId)", span="119-119"];
m1_69 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123"];
m1_73 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="132-132"];
m1_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="var context = new StateContext(jobId, jobMethod)", span="142-142"];
m1_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143"];
m1_82 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(\r\n                                String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId),\r\n                                ex),\r\n                            currentState,\r\n                            _connection)", span="156-164"];
m1_65 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="throw new ArgumentNullException(''jobId'');", span="116-116"];
m1_67 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="throw new ArgumentNullException(''state'');", span="117-117"];
m1_70 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="jobData == null", span="125-125"];
m1_72 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="var currentState = jobData.State", span="131-131"];
m1_75 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="139-139"];
m1_71 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="return false;", span="128-128"];
m1_74 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="return false;", span="134-134"];
m1_76 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="var filterInfo = GetFilters(jobMethod)", span="140-140"];
m1_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145"];
m1_80 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147"];
m1_81 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label=JobLoadException, span="149-149"];
m1_83 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="166-168"];
m1_84 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label=Exception, span="171-171"];
m1_85 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="throw;", span="173-173"];
m1_86 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m1_102 [cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m1_129 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="258-258"];
m1_135 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="var properties = new Dictionary<string, string>(\r\n                state.GetProperties(context.JobMethod))", span="264-265"];
m1_137 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="properties.Add(''State'', state.StateName)", span="268-268"];
m1_138 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label=appendToJob, span="270-270"];
m1_139 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="transaction.Jobs.SetState(context.JobId, state.StateName, properties)", span="272-272"];
m1_140 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="properties.Add(''Reason'', state.Reason)", span="275-275"];
m1_142 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="transaction.Jobs.AppendHistory(context.JobId, properties)", span="278-278"];
m1_136 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="var now = DateTime.UtcNow", span="266-266"];
m1_141 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="276-276"];
m1_143 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="258-258"];
m1_130 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m1_163 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ConditionalExpressionFingerprint.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_51 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="281-281"];
m1_149 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="283-283"];
m1_150 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="281-281"];
m1_126 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m1_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ConditionalExpressionFingerprint.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_47 [cluster="System.Reflection.MethodBase.GetParameters()", file="ConditionalExpressionFingerprint.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m1_103 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="248-248"];
m1_131 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="var transaction = _connection.CreateWriteTransaction()", span="251-251"];
m1_132 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="AppendHistory(transaction, context, state, appendToJob)", span="253-253"];
m1_133 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="transaction.Commit()", span="254-254"];
m1_134 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="248-248"];
m1_162 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ConditionalExpressionFingerprint.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_52 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m1_46 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m1_95 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ConditionalExpressionFingerprint.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m1_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="connection == null", span="46-46"];
m1_5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="stateHandlers == null", span="47-47"];
m1_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="_connection = connection", span="49-49"];
m1_8 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51"];
m1_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="filters != null", span="57-57"];
m1_12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m1_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="throw new ArgumentNullException(''connection'');", span="46-46"];
m1_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="throw new ArgumentNullException(''stateHandlers'');", span="47-47"];
m1_9 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label=handlers, span="52-52"];
m1_10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="RegisterHandler(handler)", span="54-54"];
m1_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ConditionalExpressionFingerprint.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m1_164 [file="ConditionalExpressionFingerprint.cs", label="HangFire.States.StateMachine", span=""];
m1_165 [file="ConditionalExpressionFingerprint.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m2_98 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="396-396"];
m2_198 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ConstantExpressionFingerprint.cs", label="AcquireLock(''Set'')", span="398-398"];
m2_199 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="396-396"];
m2_99 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="214-214"];
m2_100 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs", label="string query = $@''delete from [{_storage.SchemaName}].[Set] where [Key] = @key and Value = @value''", span="216-216"];
m2_102 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', value))", span="219-221"];
m2_101 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs", label="AcquireSetLock()", span="218-218"];
m2_103 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="214-214"];
m2_39 [cluster="long.Parse(string)", file="ConstantExpressionFingerprint.cs", label="Entry long.Parse(string)", span="0-0"];
m2_54 [cluster="Hangfire.States.IState.SerializeData()", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.States.IState.SerializeData()", span="202-202"];
m2_8 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="53-53"];
m2_9 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs", label="_storage.UseTransaction(_dedicatedConnectionFunc(), (connection, transaction) =>\r\n            {\r\n                var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue);\r\n\r\n                foreach (var lockedResource in _lockedResources)\r\n                {\r\n                    commandBatch.Append(\r\n                        ''set nocount on;exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        new SqlParameter(''@resource'', lockedResource));\r\n                }\r\n\r\n                foreach (var command in _commandQueue)\r\n                {\r\n                    commandBatch.Append(command.Item1, command.Item2);\r\n                }\r\n\r\n                commandBatch.Connection = connection;\r\n                commandBatch.Transaction = transaction;\r\n                commandBatch.CommandTimeout = _storage.CommandTimeout;\r\n                commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout;\r\n\r\n                commandBatch.ExecuteNonQuery();\r\n\r\n                foreach (var queueCommand in _queueCommandQueue)\r\n                {\r\n                    queueCommand(connection, transaction);\r\n                }\r\n            })", span="55-82"];
m2_10 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs", label=_afterCommitCommandQueue, span="84-84"];
m2_11 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs", label="command()", span="86-86"];
m2_12 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="53-53"];
m2_68 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20"];
m2_78 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="159-159"];
m2_79 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].Counter ([Key], [Value]) values (@key, @value)'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', +1))", span="161-164"];
m2_80 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="159-159"];
m2_67 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m2_181 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="369-369"];
m2_182 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs", label="key == null", span="371-371"];
m2_183 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="371-371"];
m2_186 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query, new SqlParameter(''@key'', key))", span="377-377"];
m2_184 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs", label="string query = $@''\r\nupdate [{_storage.SchemaName}].[Set] set ExpireAt = null where [Key] = @key''", span="373-374"];
m2_185 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs", label="AcquireSetLock()", span="376-376"];
m2_187 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="369-369"];
m2_84 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="176-176"];
m2_85 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].Counter ([Key], [Value]) values (@key, @value)'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', -1))", span="178-181"];
m2_86 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="176-176"];
m2_188 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="380-380"];
m2_189 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs", label="key == null", span="382-382"];
m2_190 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="382-382"];
m2_193 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query, new SqlParameter(''@key'', key))", span="388-388"];
m2_191 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs", label="string query = $@''\r\nupdate [{_storage.SchemaName}].[List] set ExpireAt = null where [Key] = @key''", span="384-385"];
m2_192 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs", label="AcquireListLock()", span="387-387"];
m2_194 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="380-380"];
m2_197 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="406-406"];
m2_202 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ConstantExpressionFingerprint.cs", label="_lockedResources.Add($''{_storage.SchemaName}:{resource}:Lock'')", span="408-408"];
m2_203 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="406-406"];
m2_160 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="332-332"];
m2_161 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="key == null", span="334-334"];
m2_162 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="334-334"];
m2_165 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="340-342"];
m2_163 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="string query = $@''\r\nupdate [{_storage.SchemaName}].[Set] set ExpireAt = @expireAt where [Key] = @key''", span="336-337"];
m2_164 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="AcquireSetLock()", span="339-339"];
m2_166 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="332-332"];
m2_69 [cluster="object.GetType()", file="ConstantExpressionFingerprint.cs", label="Entry object.GetType()", span="0-0"];
m2_128 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="401-401"];
m2_200 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ConstantExpressionFingerprint.cs", label="AcquireLock(''Hash'')", span="403-403"];
m2_201 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="401-401"];
m2_44 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="ConstantExpressionFingerprint.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m2_48 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="110-110"];
m2_49 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs", label="string addAndSetStateSql = \r\n$@''insert into [{_storage.SchemaName}].State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate [{_storage.SchemaName}].Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="112-115"];
m2_50 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(addAndSetStateSql,\r\n                new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                new SqlParameter(''@name'', state.Name),\r\n                new SqlParameter(''@reason'', (object)state.Reason?.Substring(0, Math.Min(99, state.Reason.Length)) ?? DBNull.Value),\r\n                new SqlParameter(''@createdAt'', DateTime.UtcNow),\r\n                new SqlParameter(''@data'', (object)JobHelper.ToJson(state.SerializeData()) ?? DBNull.Value),\r\n                new SqlParameter(''@id'', long.Parse(jobId)))", span="117-123"];
m2_51 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="110-110"];
m2_167 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="345-345"];
m2_168 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="key == null", span="347-347"];
m2_169 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="347-347"];
m2_172 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="353-355"];
m2_170 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="string query = $@''\r\nupdate [{_storage.SchemaName}].[List] set ExpireAt = @expireAt where [Key] = @key''", span="349-350"];
m2_171 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="AcquireListLock()", span="352-352"];
m2_173 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="345-345"];
m2_56 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="126-126"];
m2_57 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs", label="string addStateSql =\r\n$@''insert into [{_storage.SchemaName}].State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="128-130"];
m2_58 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(addStateSql,\r\n                new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                new SqlParameter(''@name'', state.Name),\r\n                new SqlParameter(''@reason'', (object)state.Reason?.Substring(0, Math.Min(99, state.Reason.Length)) ?? DBNull.Value),\r\n                new SqlParameter(''@createdAt'', DateTime.UtcNow),\r\n                new SqlParameter(''@data'', (object)JobHelper.ToJson(state.SerializeData()) ?? DBNull.Value))", span="132-137"];
m2_59 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="126-126"];
m2_87 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="184-184"];
m2_88 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', -1),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="186-190"];
m2_89 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="184-184"];
m2_146 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="309-309"];
m2_147 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs", label="key == null", span="311-311"];
m2_148 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="311-311"];
m2_151 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query, new SqlParameter(''@key'', key))", span="316-316"];
m2_149 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs", label="string query = $@''delete from [{_storage.SchemaName}].[Set] where [Key] = @key''", span="313-313"];
m2_150 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs", label="AcquireSetLock()", span="315-315"];
m2_152 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="309-309"];
m2_90 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="193-193"];
m2_91 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ConstantExpressionFingerprint.cs", label="AddToSet(key, value, 0.0)", span="195-195"];
m2_92 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="193-193"];
m2_31 [cluster="SqlParameter.cstr", file="ConstantExpressionFingerprint.cs", label="Entry SqlParameter.cstr", span=""];
m2_104 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="224-224"];
m2_105 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConstantExpressionFingerprint.cs", label="AcquireListLock()", span="226-226"];
m2_106 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].List ([Key], Value) values (@key, @value);'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', value))", span="227-230"];
m2_107 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="224-224"];
m2_34 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ConstantExpressionFingerprint.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m2_52 [cluster="System.Math.Min(int, int)", file="ConstantExpressionFingerprint.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m2_77 [cluster="System.Threading.EventWaitHandle.Set()", file="ConstantExpressionFingerprint.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m2_60 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="140-140"];
m2_61 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs", label="var provider = _storage.QueueProviders.GetProvider(queue)", span="142-142"];
m2_63 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs", label="_queueCommandQueue.Enqueue((connection, transaction) => persistentQueue.Enqueue(\r\n                connection,\r\n#if !NETFULL\r\n                transaction,\r\n#endif\r\n                queue,\r\n                jobId))", span="145-151"];
m2_62 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs", label="var persistentQueue = provider.GetJobQueue()", span="143-143"];
m2_64 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs", label="persistentQueue.GetType() == typeof(SqlServerJobQueue)", span="153-153"];
m2_65 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs", label="_afterCommitCommandQueue.Enqueue(() => SqlServerJobQueue.NewItemInQueueEvent.Set())", span="155-155"];
m2_66 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="140-140"];
m2_7 [cluster="Unk.nameof", file="ConstantExpressionFingerprint.cs", label="Entry Unk.nameof", span=""];
m2_14 [cluster="Unk.UseTransaction", file="ConstantExpressionFingerprint.cs", label="Entry Unk.UseTransaction", span=""];
m2_30 [cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", span="29-29"];
m2_32 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", span="51-51"];
m2_73 [cluster="Unk.Enqueue", file="ConstantExpressionFingerprint.cs", label="Entry Unk.Enqueue", span=""];
m2_53 [cluster="string.Substring(int, int)", file="ConstantExpressionFingerprint.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_81 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="167-167"];
m2_82 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(\r\n                $@''insert into [{_storage.SchemaName}].Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', +1),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="169-173"];
m2_83 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="167-167"];
m2_93 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="198-198"];
m2_94 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs", label="string addSql =\r\n$@'';merge [{_storage.SchemaName}].[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="200-205"];
m2_96 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(addSql,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', value),\r\n                new SqlParameter(''@score'', score))", span="208-211"];
m2_95 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs", label="AcquireSetLock()", span="207-207"];
m2_97 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="198-198"];
m2_118 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="258-258"];
m2_119 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label="key == null", span="260-260"];
m2_120 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="260-260"];
m2_121 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label="keyValuePairs == null", span="261-261"];
m2_122 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(keyValuePairs));", span="261-261"];
m2_125 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label=keyValuePairs, span="272-272"];
m2_126 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(sql,\r\n                    new SqlParameter(''@key'', key),\r\n                    new SqlParameter(''@field'', pair.Key),\r\n                    new SqlParameter(''@value'', (object)pair.Value ?? DBNull.Value))", span="274-277"];
m2_123 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label="string sql =\r\n$@'';merge [{_storage.SchemaName}].Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="263-268"];
m2_124 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label="AcquireHashLock()", span="270-270"];
m2_127 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="258-258"];
m2_129 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="281-281"];
m2_130 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs", label="key == null", span="283-283"];
m2_131 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="283-283"];
m2_134 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query, new SqlParameter(''@key'', key))", span="288-288"];
m2_132 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs", label="string query = $@''delete from [{_storage.SchemaName}].Hash where [Key] = @key''", span="285-285"];
m2_133 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs", label="AcquireHashLock()", span="287-287"];
m2_135 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="281-281"];
m2_33 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", span="75-75"];
m2_38 [cluster="System.DateTime.Add(System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m2_45 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="103-103"];
m2_46 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(\r\n                $@''update [{_storage.SchemaName}].Job set ExpireAt = NULL where Id = @id'',\r\n                new SqlParameter(''@id'', long.Parse(jobId)))", span="105-107"];
m2_47 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="103-103"];
m2_43 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="ConstantExpressionFingerprint.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m2_153 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="319-319"];
m2_154 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="key == null", span="321-321"];
m2_155 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="321-321"];
m2_158 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)))", span="327-329"];
m2_156 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="string query = $@''\r\nupdate [{_storage.SchemaName}].[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="323-324"];
m2_157 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="AcquireHashLock()", span="326-326"];
m2_159 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="319-319"];
m2_40 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", span="98-98"];
m2_41 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", file="ConstantExpressionFingerprint.cs", label="_commandQueue.Enqueue(new Tuple<string, SqlParameter[]>(commandText, parameters))", span="100-100"];
m2_42 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(string, params SqlParameter[])", span="98-98"];
m2_55 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m2_35 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="90-90"];
m2_36 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(\r\n                $@''update [{_storage.SchemaName}].Job set ExpireAt = @expireAt where Id = @id'',\r\n                new SqlParameter(''@expireAt'', DateTime.UtcNow.Add(expireIn)),\r\n                new SqlParameter(''@id'', long.Parse(jobId)))", span="92-95"];
m2_37 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="90-90"];
m2_74 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="Entry lambda expression", span="155-155"];
m2_16 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="Entry lambda expression", span="55-82"];
m2_17 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue)", span="57-57"];
m2_22 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="commandBatch.Connection = connection", span="71-71"];
m2_23 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="commandBatch.Transaction = transaction", span="72-72"];
m2_28 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="queueCommand(connection, transaction)", span="80-80"];
m2_18 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label=_lockedResources, span="59-59"];
m2_19 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="commandBatch.Append(\r\n                        ''set nocount on;exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        new SqlParameter(''@resource'', lockedResource))", span="61-63"];
m2_21 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="commandBatch.Append(command.Item1, command.Item2)", span="68-68"];
m2_24 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="commandBatch.CommandTimeout = _storage.CommandTimeout", span="73-73"];
m2_25 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout", span="74-74"];
m2_26 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="commandBatch.ExecuteNonQuery()", span="76-76"];
m2_20 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label=_commandQueue, span="66-66"];
m2_27 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label=_queueCommandQueue, span="78-78"];
m2_29 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="Exit lambda expression", span="55-82"];
m2_71 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="persistentQueue.Enqueue(\r\n                connection,\r\n#if !NETFULL\r\n                transaction,\r\n#endif\r\n                queue,\r\n                jobId)", span="145-151"];
m2_70 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="Entry lambda expression", span="145-151"];
m2_72 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="Exit lambda expression", span="145-151"];
m2_75 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="SqlServerJobQueue.NewItemInQueueEvent.Set()", span="155-155"];
m2_76 [cluster="lambda expression", file="ConstantExpressionFingerprint.cs", label="Exit lambda expression", span="155-155"];
m2_136 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="291-291"];
m2_137 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label="key == null", span="293-293"];
m2_138 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="293-293"];
m2_139 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label="items == null", span="294-294"];
m2_140 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(items));", span="294-294"];
m2_143 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label=items, span="303-303"];
m2_144 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query, new SqlParameter(''@key'', key), new SqlParameter(''@value'', item))", span="305-305"];
m2_141 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label="string query =\r\n$@''insert into [{_storage.SchemaName}].[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="297-299"];
m2_142 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label="AcquireSetLock()", span="301-301"];
m2_145 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="291-291"];
m2_204 [cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="ConstantExpressionFingerprint.cs", label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0"];
m2_15 [cluster="System.Action.Invoke()", file="ConstantExpressionFingerprint.cs", label="Entry System.Action.Invoke()", span="0-0"];
m2_0 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", span="45-45"];
m2_1 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs", label="storage == null", span="47-47"];
m2_2 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(storage));", span="47-47"];
m2_3 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs", label="_storage = storage", span="49-49"];
m2_4 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs", label="_dedicatedConnectionFunc = dedicatedConnectionFunc", span="50-50"];
m2_5 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", span="45-45"];
m2_109 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="233-233"];
m2_110 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConstantExpressionFingerprint.cs", label="AcquireListLock()", span="235-235"];
m2_111 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(\r\n                $@''delete from [{_storage.SchemaName}].List where [Key] = @key and Value = @value'',\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@value'', value))", span="236-239"];
m2_112 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="233-233"];
m2_108 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="391-391"];
m2_195 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ConstantExpressionFingerprint.cs", label="AcquireLock(''List'')", span="393-393"];
m2_196 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="391-391"];
m2_174 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="358-358"];
m2_175 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs", label="key == null", span="360-360"];
m2_176 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs", label="throw new ArgumentNullException(nameof(key));", span="360-360"];
m2_179 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(query, new SqlParameter(''@key'', key))", span="366-366"];
m2_177 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs", label="string query = $@''\r\nupdate [{_storage.SchemaName}].Hash set ExpireAt = null where [Key] = @key''", span="362-363"];
m2_178 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs", label="AcquireHashLock()", span="365-365"];
m2_180 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="358-358"];
m2_13 [cluster="System.Func<TResult>.Invoke()", file="ConstantExpressionFingerprint.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_113 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="242-242"];
m2_114 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs", label="string trimSql =\r\n$@'';with cte as (\r\n    select row_number() over (order by Id desc) as row_num\r\n    from [{_storage.SchemaName}].List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="244-249"];
m2_116 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs", label="QueueCommand(trimSql,\r\n                new SqlParameter(''@key'', key),\r\n                new SqlParameter(''@start'', keepStartingFrom + 1),\r\n                new SqlParameter(''@end'', keepEndingAt + 1))", span="252-255"];
m2_115 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs", label="AcquireListLock()", span="251-251"];
m2_117 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConstantExpressionFingerprint.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="242-242"];
m2_205 [file="ConstantExpressionFingerprint.cs", label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m2_206 [file="ConstantExpressionFingerprint.cs", label=string, span=""];
m2_207 [file="ConstantExpressionFingerprint.cs", label=string, span=""];
m2_208 [file="ConstantExpressionFingerprint.cs", label=persistentQueue, span=""];
m3_6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="DefaultExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m3_2 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="DefaultExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", span="23-23"];
m3_3 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="DefaultExpressionFingerprint.cs", label="DefaultExpressionFingerprint other = obj as DefaultExpressionFingerprint", span="25-25"];
m3_4 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="DefaultExpressionFingerprint.cs", label="return (other != null)\r\n                   && this.Equals(other);", span="26-27"];
m3_5 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="DefaultExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", span="23-23"];
m3_0 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="DefaultExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m3_1 [cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="DefaultExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m3_7 [file="DefaultExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint", span=""];
m5_229 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", span="278-278"];
m5_230 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", file="ElectStateContextFacts.cs", label="_disposed = true", span="280-280"];
m5_231 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", span="278-278"];
m5_157 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping'''", span="335-337"];
m5_34 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="52-52"];
m5_35 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs", label="process.Run(_context.Object)", span="54-54"];
m5_36 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs", label="Assert.True(_methodInvoked)", span="56-56"];
m5_37 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m5_96 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs", label="Assert.True(_methodInvoked)", span="139-139"];
m5_97 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m5_98 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="132-132"];
m5_15 [cluster="Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", file="ElectStateContextFacts.cs", label="Entry Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", span="35-35"];
m5_16 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", span="36-36"];
m5_17 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", span="86-86"];
m5_18 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs", label="existingConnection == null", span="88-88"];
m5_19 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs", label="throw new ArgumentNullException(nameof(existingConnection));", span="88-88"];
m5_20 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs", label="options == null", span="89-89"];
m5_21 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs", label="throw new ArgumentNullException(nameof(options));", span="89-89"];
m5_22 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs", label="_existingConnection = existingConnection", span="91-91"];
m5_79 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="x.Value", prediction=0, span="137-137"];
m5_24 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="ElectStateContextFacts.cs", label="Initialize()", prediction=1, span="94-94"];
m5_251 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", file="ElectStateContextFacts.cs", label="return new CoreJobPerformanceProcess(_activator.Object);", span="321-321"];
m5_252 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", span="319-319"];
m5_105 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="149-149"];
m5_106 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ElectStateContextFacts.cs", label="process.Run(_context.Object)", span="151-151"];
m5_104 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147"];
m5_40 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.InstanceMethod()", span="51-51"];
m5_42 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", color=green, community=0, file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", prediction=1, span="247-247"];
m5_41 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="51-51"];
m5_43 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60"];
m5_123 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="162-162"];
m5_74 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs", label="Assert.True(_methodInvoked)", span="104-104"];
m5_81 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs", label="_methodInvoked = false", span="111-111"];
m5_82 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="ElectStateContextFacts.cs", label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", prediction=3, span="112-112"];
m5_83 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs", label="var type = typeof(CoreJobPerformanceProcessFacts)", span="114-114"];
m5_122 [cluster="Unk.Throws", file="ElectStateContextFacts.cs", label="Entry Unk.Throws", span=""];
m5_113 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="226-235"];
m5_114 [cluster="Unk.BeginTransaction", file="ElectStateContextFacts.cs", label="Entry Unk.BeginTransaction", span=""];
m5_115 [cluster="Unk.func", file="ElectStateContextFacts.cs", label="Entry Unk.func", span=""];
m5_116 [cluster="Unk.Commit", file="ElectStateContextFacts.cs", label="Entry Unk.Commit", span=""];
m5_117 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs", label="var connection = _existingConnection ?? new SqlConnection(_connectionString)", span="241-241"];
m5_118 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs", label="connection.State == ConnectionState.Closed", span="243-243"];
m5_119 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs", label="connection.Open()", span="245-245"];
m5_164 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201"];
m5_186 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", span="314-314"];
m5_248 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="ElectStateContextFacts.cs", label="throw new InvalidOperationException(''exception'');", span="316-316"];
m5_249 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", span="314-314"];
m5_216 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="584-584"];
m5_238 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="ElectStateContextFacts.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m5_45 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63"];
m5_47 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="ElectStateContextFacts.cs", label="process.Run(_context.Object)", prediction=1, span="66-66"];
m5_46 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="64-64"];
m5_48 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="ElectStateContextFacts.cs", label="Assert.True(_disposed)", prediction=1, span="68-68"];
m5_50 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="Entry lambda expression", prediction=1, span="63-63"];
m5_51 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="x.Method()", prediction=1, span="63-63"];
m5_55 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs", label="_methodInvoked = false", prediction=8, span="75-75"];
m5_56 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", prediction=9, span="76-76"];
m5_57 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs", label="var process = CreateProcess()", prediction=10, span="77-77"];
m5_54 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", prediction=11, span="72-72"];
m5_59 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs", label="Assert.True(_methodInvoked)", prediction=12, span="83-83"];
m5_58 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="ElectStateContextFacts.cs", label="process.Run(_context.Object)", prediction=1, span="80-80"];
m5_49 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", prediction=1, span="60-60"];
m5_52 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="Exit lambda expression", prediction=1, span="63-63"];
m5_53 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", color=green, community=0, file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", prediction=1, span="254-254"];
m5_60 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", span="72-72"];
m5_101 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="action(connection, transaction)", span="202-202"];
m5_239 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ElectStateContextFacts.cs", label="_methodInvoked = true", span="296-296"];
m5_240 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ElectStateContextFacts.cs", label="Assert.Equal(SomeDateTime, argument)", span="298-298"];
m5_241 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294"];
m5_5 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="ElectStateContextFacts.cs", label="options == null", prediction=17, span="63-63"];
m5_65 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87"];
m5_11 [cluster="Unk.Equal", file="ElectStateContextFacts.cs", label="Entry Unk.Equal", span=""];
m5_199 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289"];
m5_236 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="ElectStateContextFacts.cs", label="token.ThrowIfCancellationRequested()", span="291-291"];
m5_237 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289"];
m5_207 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237"];
m5_208 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239"];
m5_209 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="240-240"];
m5_210 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs", label="var result = process.Run(_context.Object)", span="242-242"];
m5_211 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs", label="Assert.Equal(''Return value'', result)", span="244-244"];
m5_212 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237"];
m5_146 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="180-180"];
m5_30 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="109-109"];
m5_242 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", file="ElectStateContextFacts.cs", label="_methodInvoked = true", span="303-303"];
m5_243 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", span="301-301"];
m5_172 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background'''", span="357-359"];
m5_224 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="ElectStateContextFacts.cs", label="_methodInvoked = true", span="269-269"];
m5_225 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", span="267-267"];
m5_23 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContextFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187"];
m5_25 [cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="ElectStateContextFacts.cs", label="Entry Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="41-41"];
m5_78 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="137-137"];
m5_66 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs", label="_methodInvoked = false", span="90-90"];
m5_176 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs", label="Hangfire.SqlServer.SqlServerStorage", span=""];
m5_177 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs", label="System.Action<DbConnection>", span=""];
m5_178 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs", label="System.Action<DbConnection, DbTransaction>", span=""];
m5_179 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs", label="IsolationLevel?", span=""];
m5_180 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs", label="System.Func<DbConnection, DbTransaction, T>", span=""];
m5_181 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs", label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220"];
m5_182 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211"];
m5_190 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224"];
m5_191 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227"];
m5_192 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs", label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228"];
m5_193 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="229-229"];
m5_194 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context.Object))", span="232-233"];
m5_195 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224"];
m5_95 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs", label="process.Run(_context.Object)", span="136-136"];
m5_31 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m5_32 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs", label="_methodInvoked = false", span="50-50"];
m5_221 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", span="259-259"];
m5_222 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", file="ElectStateContextFacts.cs", label="_disposed = true", span="261-261"];
m5_223 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", span="259-259"];
m5_67 [cluster="System.Text.StringBuilder.Append(string)", file="ElectStateContextFacts.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m5_68 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs", label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="92-92"];
m5_69 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", prediction=18, span="135-135"];
m5_71 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="136-136"];
m5_70 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ElectStateContextFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="95-95"];
m5_72 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="new { Key = x[0].Trim(), Value = x[1].Trim() }", prediction=19, span="136-136"];
m5_73 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="136-136"];
m5_75 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="137-137"];
m5_219 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="ElectStateContextFacts.cs", label="_methodInvoked = true", span="256-256"];
m5_220 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", span="254-254"];
m5_145 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="176-176"];
m5_132 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="169-169"];
m5_29 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="39-39"];
m5_61 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="76-76"];
m5_102 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="return true;", span="203-203"];
m5_103 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="200-204"];
m5_107 [cluster="Unk.UseConnection", file="ElectStateContextFacts.cs", label="Entry Unk.UseConnection", span=""];
m5_108 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="226-235"];
m5_165 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="202-202"];
m5_12 [cluster="Unk.nameof", file="ElectStateContextFacts.cs", label="Entry Unk.nameof", span=""];
m5_13 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", span="283-283"];
m5_14 [cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.Initialize()", span="264-264"];
m5_27 [cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ElectStateContextFacts.cs", label="return new SqlServerMonitoringApi(this, _options.DashboardJobListLimit);", span="106-106"];
m5_28 [cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ElectStateContextFacts.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="104-104"];
m5_39 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="39-39"];
m5_62 [cluster="Unk.Select", file="ElectStateContextFacts.cs", label="Entry Unk.Select", span=""];
m5_63 [cluster="Unk.ToDictionary", file="ElectStateContextFacts.cs", label="Entry Unk.ToDictionary", span=""];
m5_100 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="200-204"];
m5_109 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="var transaction = connection.BeginTransaction(isolationLevel ?? IsolationLevel.ReadCommitted)", span="228-228"];
m5_110 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="var result = func(connection, transaction)", span="230-230"];
m5_111 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="transaction.Commit()", span="231-231"];
m5_127 [cluster="Unk.ReferenceEquals", file="ElectStateContextFacts.cs", label="Entry Unk.ReferenceEquals", span=""];
m5_131 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ElectStateContextFacts.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="256-256"];
m5_130 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ElectStateContextFacts.cs", label="connection.Dispose()", span="260-260"];
m5_124 [cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="251-251"];
m5_125 [cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="ElectStateContextFacts.cs", label="return connection != null && ReferenceEquals(connection, _existingConnection);", span="253-253"];
m5_128 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="256-256"];
m5_129 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ElectStateContextFacts.cs", label="connection != null && !IsExistingConnection(connection)", span="258-258"];
m5_140 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="268-271"];
m5_143 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ElectStateContextFacts.cs", label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="280-280"];
m5_147 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="ElectStateContextFacts.cs", label="return nameOrConnectionString;", span="299-299"];
m5_141 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(DbConnection, string)", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(DbConnection, string)", span="38-38"];
m5_142 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ElectStateContextFacts.cs", label="var defaultQueueProvider = new SqlServerJobQueueProvider(this, _options)", span="279-279"];
m5_144 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ElectStateContextFacts.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="277-277"];
m5_148 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="ElectStateContextFacts.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", span="283-283"];
m5_160 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="333-344"];
m5_159 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="return new Metric(value.ToString(''N0''));", span="343-343"];
m5_161 [cluster="Unk.>", file="ElectStateContextFacts.cs", label="Entry Unk.>", span=""];
m5_169 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="return sqlStorage.UseConnection(null, connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="355-366"];
m5_174 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="return new Metric(value.ToString(''N0''));", span="365-365"];
m5_173 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="361-363"];
m5_170 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="350-367"];
m5_171 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="355-366"];
m5_175 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="355-366"];
m5_183 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="213-213"];
m5_188 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="process.Run(_context.Object)", span="217-217"];
m5_187 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="217-217"];
m5_184 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="ExceptionMethod()", span="213-213"];
m5_185 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="213-213"];
m5_189 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="217-217"];
m5_196 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="227-227"];
m5_200 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="228-228"];
m5_205 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="process.Run(_context.Object)", span="233-233"];
m5_204 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="233-233"];
m5_197 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="CancelableJob(JobCancellationToken.Null)", span="227-227"];
m5_198 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="227-227"];
m5_201 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.ThrowIfCancellationRequested()", span="228-228"];
m5_202 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="228-228"];
m5_206 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="233-233"];
m5_213 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="239-239"];
m5_214 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.FunctionReturningValue()", span="239-239"];
m5_215 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="239-239"];
m5_76 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", color=green, community=0, file="ElectStateContextFacts.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", prediction=20, span="0-0"];
m5_77 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="ElectStateContextFacts.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m5_80 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108"];
m5_85 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117"];
m5_139 [cluster="Unk.Returns", file="ElectStateContextFacts.cs", label="Entry Unk.Returns", span=""];
m5_86 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="118-118"];
m5_153 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="189-189"];
m5_88 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs", label="Assert.True(_methodInvoked)", span="124-124"];
m5_138 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173"];
m5_87 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ElectStateContextFacts.cs", label="process.Run(_context.Object)", span="121-121"];
m5_150 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs", label="var type = typeof(JobFacts)", span="186-186"];
m5_151 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187"];
m5_154 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", span="191-192"];
m5_156 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184"];
m5_166 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="204-205"];
m5_167 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs", label="Assert.True(_methodInvoked)", span="207-207"];
m5_149 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184"];
m5_152 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188"];
m5_158 [cluster="Unk.NotNull", file="ElectStateContextFacts.cs", label="Entry Unk.NotNull", span=""];
m5_168 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198"];
m5_112 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", span="283-283"];
m5_4 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ElectStateContextFacts.cs", label="throw new ArgumentNullException(nameof(nameOrConnectionString));", span="62-62"];
m5_2 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ElectStateContextFacts.cs", label="_context = new PerformContextMock()", span="22-22"];
m5_3 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", span="19-19"];
m5_6 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", prediction=17, span="26-26"];
m5_7 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new CoreJobPerformanceProcess(null))", prediction=22, span="28-30"];
m5_9 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26"];
m5_10 [cluster="Unk.>", file="ElectStateContextFacts.cs", label="Entry Unk.>", span=""];
m5_33 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression<CoreJobPerformanceProcessFacts>(x => x.InstanceMethod())", span="51-51"];
m5_84 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", span="180-180"];
m5_89 [cluster="System.Action<T>.Invoke(T)", file="ElectStateContextFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m5_90 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", file="ElectStateContextFacts.cs", label="DbConnection connection = null", span="182-182"];
m5_162 [cluster="Unk.Single", file="ElectStateContextFacts.cs", label="Entry Unk.Single", span=""];
m5_163 [cluster="Metric.cstr", file="ElectStateContextFacts.cs", label="Entry Metric.cstr", span=""];
m5_120 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs", label="return connection;", span="248-248"];
m5_64 [cluster="System.Text.StringBuilder.StringBuilder()", file="ElectStateContextFacts.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m5_244 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ElectStateContextFacts.cs", label="_methodInvoked = true", span="308-308"];
m5_245 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ElectStateContextFacts.cs", label="Assert.Equal(''hello'', stringArg)", span="310-310"];
m5_246 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ElectStateContextFacts.cs", label="Assert.Equal(5, intArg)", span="311-311"];
m5_247 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", span="306-306"];
m5_250 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ElectStateContextFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m5_91 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m5_92 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs", label="_methodInvoked = false", span="131-131"];
m5_226 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", span="272-272"];
m5_227 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="ElectStateContextFacts.cs", label="throw new InvalidOperationException();", span="274-274"];
m5_228 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", span="272-272"];
m5_217 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="ElectStateContextFacts.cs", label="_methodInvoked = true", span="249-249"];
m5_218 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", span="247-247"];
m5_44 [cluster="Hangfire.Logging.ILog.Info(string)", file="ElectStateContextFacts.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204"];
m5_121 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ElectStateContextFacts.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="239-239"];
m5_235 [cluster="Unk.Null", file="ElectStateContextFacts.cs", label="Entry Unk.Null", span=""];
m5_38 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ElectStateContextFacts.cs", label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="54-54"];
m5_0 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", span="19-19"];
m5_137 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="179-180"];
m5_253 [cluster="CoreJobPerformanceProcess.cstr", file="ElectStateContextFacts.cs", label="Entry CoreJobPerformanceProcess.cstr", span=""];
m5_94 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="133-133"];
m5_133 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173"];
m5_134 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs", label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175"];
m5_135 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176"];
m5_136 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ElectStateContextFacts.cs", label="var process = CreateProcess()", span="177-177"];
m5_126 [cluster="Unk.ActivateJob", file="ElectStateContextFacts.cs", label="Entry Unk.ActivateJob", span=""];
m5_155 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ElectStateContextFacts.cs", label="Assert.NotNull(exception.InnerException)", span="194-194"];
m5_203 [cluster="Unk.ThrowIfCancellationRequested", file="ElectStateContextFacts.cs", label="Entry Unk.ThrowIfCancellationRequested", span=""];
m5_232 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ElectStateContextFacts.cs", label="_methodInvoked = true", span="285-285"];
m5_233 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ElectStateContextFacts.cs", label="Assert.Null(argument)", span="286-286"];
m5_234 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", span="283-283"];
m5_26 [cluster="Unk.True", file="ElectStateContextFacts.cs", label="Entry Unk.True", span=""];
m5_254 [file="ElectStateContextFacts.cs", label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", span=""];
m5_255 [file="ElectStateContextFacts.cs", label=process, span=""];
m5_256 [file="ElectStateContextFacts.cs", label=process, span=""];
m5_257 [file="ElectStateContextFacts.cs", label=process, span=""];
m5_258 [file="ElectStateContextFacts.cs", label=process, span=""];
m5_259 [file="ElectStateContextFacts.cs", label=process, span=""];
m5_260 [file="ElectStateContextFacts.cs", label=process, span=""];
m6_0 [cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="ExpressionFingerprint.cs", label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="11-11"];
m6_1 [cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="ExpressionFingerprint.cs", label="Exit HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="11-11"];
m7_0 [cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs", label="Entry HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7"];
m7_1 [cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs", label="transaction == null", span="9-9"];
m7_3 [cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(''hangfire:failed'', jobId))", span="11-11"];
m7_2 [cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs", label="throw new ArgumentNullException(''transaction'');", span="9-9"];
m7_4 [cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="ExpressionFingerprintChain.cs", label="Exit HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7"];
m7_6 [cluster="Unk.QueueCommand", file="ExpressionFingerprintChain.cs", label="Entry Unk.QueueCommand", span=""];
m7_7 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Entry lambda expression", span="11-11"];
m7_8 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="x.RemoveItemFromSortedSet(''hangfire:failed'', jobId)", span="11-11"];
m7_9 [cluster="lambda expression", file="ExpressionFingerprintChain.cs", label="Exit lambda expression", span="11-11"];
m7_10 [cluster="Unk.RemoveItemFromSortedSet", file="ExpressionFingerprintChain.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m7_11 [file="ExpressionFingerprintChain.cs", label=string, span=""];
m8_6 [cluster="HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", span="37-37"];
m8_7 [cluster="HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", file="FingerprintingExpressionVisitor.cs", label="ProcessRequest()", span="39-39"];
m8_8 [cluster="HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", file="FingerprintingExpressionVisitor.cs", label="Exit HangFire.Web.GenericHandler.ProcessRequest(HttpContext)", span="37-37"];
m8_3 [cluster="HttpContextWrapper.cstr", file="FingerprintingExpressionVisitor.cs", label="Entry HttpContextWrapper.cstr", span=""];
m8_0 [cluster="HangFire.Web.GenericHandler.GenericHandler()", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.Web.GenericHandler.GenericHandler()", span="22-22"];
m8_1 [cluster="HangFire.Web.GenericHandler.GenericHandler()", file="FingerprintingExpressionVisitor.cs", label="Context = new HttpContextWrapper(HttpContext.Current)", span="24-24"];
m8_2 [cluster="HangFire.Web.GenericHandler.GenericHandler()", file="FingerprintingExpressionVisitor.cs", label="Exit HangFire.Web.GenericHandler.GenericHandler()", span="22-22"];
m8_4 [cluster="HangFire.Web.GenericHandler.ProcessRequest()", file="FingerprintingExpressionVisitor.cs", label="Entry HangFire.Web.GenericHandler.ProcessRequest()", span="35-35"];
m8_5 [cluster="HangFire.Web.GenericHandler.ProcessRequest()", file="FingerprintingExpressionVisitor.cs", label="Exit HangFire.Web.GenericHandler.ProcessRequest()", span="35-35"];
m8_9 [file="FingerprintingExpressionVisitor.cs", label="HangFire.Web.GenericHandler", span=""];
m11_14 [cluster="System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", file="HoistingExpressionVisitor.cs", label="Entry System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", span="0-0"];
m11_9 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="HoistingExpressionVisitor.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m11_0 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="HoistingExpressionVisitor.cs", label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17"];
m11_1 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="HoistingExpressionVisitor.cs", label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17"];
m11_13 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="HoistingExpressionVisitor.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m11_2 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs", label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21"];
m11_3 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs", label="var visitor = new HoistingExpressionVisitor<TIn, TOut>()", span="25-25"];
m11_4 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs", label="var rewrittenBodyExpr = visitor.Visit(expr.Body)", span="26-26"];
m11_5 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs", label="var rewrittenLambdaExpr = Expression.Lambda<Hoisted<TIn, TOut>>(rewrittenBodyExpr, expr.Parameters[0], _hoistedConstantsParamExpr)", span="27-27"];
m11_6 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs", label="return rewrittenLambdaExpr;", span="28-28"];
m11_7 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs", label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21"];
m11_10 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="HoistingExpressionVisitor.cs", label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31"];
m11_11 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="HoistingExpressionVisitor.cs", label="return Expression.Convert(Expression.Property(_hoistedConstantsParamExpr, ''Item'', Expression.Constant(_numConstantsProcessed++)), node.Type);", span="34-34"];
m11_12 [cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="HoistingExpressionVisitor.cs", label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31"];
m11_15 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="HoistingExpressionVisitor.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m11_8 [cluster="System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", file="HoistingExpressionVisitor.cs", label="Entry System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", span="0-0"];
m11_16 [file="HoistingExpressionVisitor.cs", label="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>", span=""];
m12_0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IndexExpressionFingerprint.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="24-24"];
m12_1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IndexExpressionFingerprint.cs", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="24-24"];
m13_0 [cluster="HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", file="JobFilterAttribute.cs", label="Entry HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", span="49-49"];
m13_1 [cluster="HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", file="JobFilterAttribute.cs", label="return MultiuseAttributeCache.GetOrAdd(\r\n                attributeType,\r\n                type => type.GetCustomAttributes(typeof(AttributeUsageAttribute), true)\r\n                            .Cast<AttributeUsageAttribute>()\r\n                            .First()\r\n                            .AllowMultiple);", span="51-56"];
m13_2 [cluster="HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", file="JobFilterAttribute.cs", label="Exit HangFire.Common.JobFilterAttribute.AllowsMultiple(System.Type)", span="49-49"];
m13_3 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", file="JobFilterAttribute.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", span="0-0"];
m13_8 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JobFilterAttribute.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m13_9 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JobFilterAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m13_4 [cluster="lambda expression", file="JobFilterAttribute.cs", label="Entry lambda expression", span="53-56"];
m13_5 [cluster="lambda expression", file="JobFilterAttribute.cs", label="type.GetCustomAttributes(typeof(AttributeUsageAttribute), true)\r\n                            .Cast<AttributeUsageAttribute>()\r\n                            .First()\r\n                            .AllowMultiple", span="53-56"];
m13_6 [cluster="lambda expression", file="JobFilterAttribute.cs", label="Exit lambda expression", span="53-56"];
m13_7 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="JobFilterAttribute.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m14_6 [cluster="lambda expression", file="JobFilterAttributeFacts.cs", label="Entry lambda expression", span="14-14"];
m14_7 [cluster="lambda expression", color=green, community=0, file="JobFilterAttributeFacts.cs", label="filterAttribute.Object.Order = -2", prediction=23, span="14-14"];
m14_8 [cluster="lambda expression", file="JobFilterAttributeFacts.cs", label="Exit lambda expression", span="14-14"];
m14_5 [cluster="Unk.>", file="JobFilterAttributeFacts.cs", label="Entry Unk.>", span=""];
m14_4 [cluster="Mock<JobFilterAttribute>.cstr", file="JobFilterAttributeFacts.cs", label="Entry Mock<JobFilterAttribute>.cstr", span=""];
m14_0 [cluster="HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", file="JobFilterAttributeFacts.cs", label="Entry HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", span="10-10"];
m14_1 [cluster="HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", color=green, community=0, file="JobFilterAttributeFacts.cs", label="var filterAttribute = new Mock<JobFilterAttribute>() { CallBase = true }", prediction=24, span="12-12"];
m14_2 [cluster="HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", color=green, community=1, file="JobFilterAttributeFacts.cs", label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => filterAttribute.Object.Order = -2)", prediction=25, span="13-14"];
m14_3 [cluster="HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", file="JobFilterAttributeFacts.cs", label="Exit HangFire.Core.Tests.Common.JobFilterAttributeFacts.SetOrder_ThrowsAnException_WhenValueIsLessThanDefaultOrder()", span="10-10"];
m14_9 [file="JobFilterAttributeFacts.cs", label=filterAttribute, span=""];
m15_6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="LambdaExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m15_2 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23"];
m15_3 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="LambdaExpressionFingerprint other = obj as LambdaExpressionFingerprint", span="25-25"];
m15_4 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="return (other != null)\r\n                   && this.Equals(other);", span="26-27"];
m15_5 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23"];
m15_0 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m15_1 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16"];
m15_7 [file="LambdaExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", span=""];
m16_34 [cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120"];
m16_20 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105"];
m16_21 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="107-107"];
m16_22 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="return client.Schedule(methodCall, enqueueAt);", span="108-108"];
m16_23 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105"];
m16_64 [cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288"];
m16_45 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Requeue(string)", span="178-178"];
m16_46 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="180-180"];
m16_47 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="MemberExpressionFingerprint.cs", label="return client.Requeue(jobId);", span="181-181"];
m16_48 [cluster="Hangfire.BackgroundJob.Requeue(string)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Requeue(string)", span="178-178"];
m16_59 [cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="273-273"];
m16_24 [cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84"];
m16_3 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48"];
m16_35 [cluster="Hangfire.BackgroundJob.Delete(string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149"];
m16_36 [cluster="Hangfire.BackgroundJob.Delete(string)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="151-151"];
m16_37 [cluster="Hangfire.BackgroundJob.Delete(string)", file="MemberExpressionFingerprint.cs", label="return client.Delete(jobId);", span="152-152"];
m16_38 [cluster="Hangfire.BackgroundJob.Delete(string)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Delete(string)", span="149-149"];
m16_9 [cluster="Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
m16_60 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206"];
m16_61 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="208-208"];
m16_62 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs", label="return client.ContinueWith(parentId, methodCall, options);", span="209-209"];
m16_63 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206"];
m16_49 [cluster="Hangfire.IBackgroundJobClient.Requeue(string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Requeue(string)", span="249-249"];
m16_8 [cluster="System.Func<TResult>.Invoke()", file="MemberExpressionFingerprint.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m16_54 [cluster="Hangfire.IBackgroundJobClient.Requeue(string, string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Requeue(string, string)", span="265-265"];
m16_39 [cluster="Hangfire.IBackgroundJobClient.Delete(string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Delete(string)", span="204-204"];
m16_55 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200"];
m16_56 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="202-202"];
m16_57 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="return client.ContinueWith(parentId, methodCall);", span="203-203"];
m16_58 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200"];
m16_30 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135"];
m16_31 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="137-137"];
m16_32 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="return client.Schedule(methodCall, enqueueAt);", span="138-138"];
m16_33 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135"];
m16_0 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Entry lambda expression", span="29-29"];
m16_1 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="new BackgroundJobClient(JobStorage.Current)", span="29-29"];
m16_2 [cluster="lambda expression", file="MemberExpressionFingerprint.cs", label="Exit lambda expression", span="29-29"];
m16_29 [cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104"];
m16_50 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="194-194"];
m16_51 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="196-196"];
m16_52 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="MemberExpressionFingerprint.cs", label="return client.Requeue(jobId, fromState);", span="197-197"];
m16_53 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Requeue(string, string)", span="194-194"];
m16_40 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="165-165"];
m16_41 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="167-167"];
m16_42 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="MemberExpressionFingerprint.cs", label="return client.Delete(jobId, fromState);", span="168-168"];
m16_43 [cluster="Hangfire.BackgroundJob.Delete(string, string)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Delete(string, string)", span="165-165"];
m16_15 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91"];
m16_16 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="93-93"];
m16_17 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="return client.Schedule(methodCall, delay);", span="94-94"];
m16_18 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91"];
m16_4 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61"];
m16_5 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="63-63"];
m16_6 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="return client.Enqueue(methodCall);", span="64-64"];
m16_7 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61"];
m16_19 [cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69"];
m16_10 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m16_11 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="79-79"];
m16_12 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs", label="return client.Enqueue(methodCall);", span="80-80"];
m16_13 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m16_25 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120"];
m16_26 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="var client = ClientFactory()", span="122-122"];
m16_27 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="return client.Schedule(methodCall, delay);", span="123-123"];
m16_28 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="MemberExpressionFingerprint.cs", label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120"];
m16_14 [cluster="Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54"];
m16_44 [cluster="Hangfire.IBackgroundJobClient.Delete(string, string)", file="MemberExpressionFingerprint.cs", label="Entry Hangfire.IBackgroundJobClient.Delete(string, string)", span="233-233"];
m17_9 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37"];
m17_10 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="combiner.AddObject(Method)", span="39-39"];
m17_11 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="base.AddToHashCodeCombiner(combiner)", span="40-40"];
m17_12 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37"];
m17_13 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51"];
m17_8 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m17_3 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", span="29-29"];
m17_4 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs", label="MethodCallExpressionFingerprint other = obj as MethodCallExpressionFingerprint", span="31-31"];
m17_5 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs", label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="32-34"];
m17_6 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="MethodCallExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", span="29-29"];
m17_7 [cluster="object.Equals(object, object)", file="MethodCallExpressionFingerprint.cs", label="Entry object.Equals(object, object)", span="0-0"];
m17_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24"];
m17_0 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="MethodCallExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17"];
m17_1 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="MethodCallExpressionFingerprint.cs", label="Method = method", span="23-23"];
m17_2 [cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="MethodCallExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17"];
m17_15 [file="MethodCallExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint", span=""];
m18_12 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="46-46"];
m18_3 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", span="25-25"];
m18_4 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs", label="ParameterExpressionFingerprint other = obj as ParameterExpressionFingerprint", span="27-27"];
m18_5 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs", label="return (other != null)\r\n                   && (this.ParameterIndex == other.ParameterIndex)\r\n                   && this.Equals(other);", span="28-30"];
m18_6 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", span="25-25"];
m18_7 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m18_8 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="33-33"];
m18_9 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs", label="combiner.AddInt32(ParameterIndex)", span="35-35"];
m18_10 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs", label="base.AddToHashCodeCombiner(combiner)", span="36-36"];
m18_11 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="33-33"];
m18_13 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24"];
m18_0 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="ParameterExpressionFingerprint.cs", label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", span="16-16"];
m18_1 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="ParameterExpressionFingerprint.cs", label="ParameterIndex = parameterIndex", span="19-19"];
m18_2 [cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="ParameterExpressionFingerprint.cs", label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", span="16-16"];
m18_14 [file="ParameterExpressionFingerprint.cs", label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", span=""];
n0 -> n3  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n8 -> n11  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n14 -> n17  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n20 -> n23  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n23 -> n23  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
n26 -> n29  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n31 -> n34  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n34 -> n34  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
n36 -> n39  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n43 -> n46  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n49 -> n52  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n58 -> n62  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n68 -> n72  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n80 -> n87  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m0_20 -> m0_22  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_35 -> m0_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_60 -> m0_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_55 -> m0_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_40 -> m0_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_15 -> m0_17  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m0_4 -> m0_6  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m0_25 -> m0_27  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m1_92 -> m1_106  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m1_104 -> m1_107  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_17 -> m1_155  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m1_17 -> m1_157  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m1_17 -> m1_158  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m1_17 -> m1_159  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m1_26 -> m1_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m1_26 -> m1_31  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m1_33 -> m1_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_34 -> m1_42  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m1_34 -> m1_44  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m1_35 -> m1_38  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m1_35 -> m1_41  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m1_37 -> m1_41  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m1_39 -> m1_42  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_39 -> m1_43  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_19 -> m1_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_54 -> m1_98  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m1_54 -> m1_99  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m1_54 -> m1_100  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m1_96 -> m1_98  [color=darkseagreen4, key=1, label=filter, style=dashed];
m1_97 -> m1_99  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m1_97 -> m1_100  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m1_57 -> m1_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_57 -> m1_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_57 -> m1_112  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m1_57 -> m1_113  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m1_57 -> m1_114  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m1_57 -> m1_115  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m1_57 -> m1_117  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m1_57 -> m1_118  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m1_57 -> m1_119  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m1_57 -> m1_120  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m1_57 -> m1_121  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m1_116 -> m1_118  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m1_63 -> m1_66  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m1_63 -> m1_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_63 -> m1_73  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m1_78 -> m1_80  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m1_76 -> m1_79  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m1_76 -> m1_80  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m1_129 -> m1_137  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m1_129 -> m1_138  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_129 -> m1_139  [color=darkseagreen4, key=1, label="HangFire.Storage.IAtomicWriteTransaction", style=dashed];
m1_129 -> m1_140  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m1_129 -> m1_142  [color=darkseagreen4, key=1, label="HangFire.Storage.IAtomicWriteTransaction", style=dashed];
m1_135 -> m1_137  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_135 -> m1_139  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_135 -> m1_140  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_135 -> m1_141  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_135 -> m1_142  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_136 -> m1_141  [color=darkseagreen4, key=1, label=now, style=dashed];
m1_103 -> m1_132  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateContext", style=dashed];
m1_131 -> m1_133  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_2 -> m1_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>", style=dashed];
m1_2 -> m1_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m1_2 -> m1_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m1_164 -> m1_10  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_38  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_41  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_68  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_79  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_80  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_100  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_106  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_110  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_111  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_115  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_117  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_119  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_132  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_149  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_157  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_158  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_164 -> m1_159  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m1_165 -> m1_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m2_99 -> m2_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_100 -> m2_102  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_9 -> m2_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_181 -> m2_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_181 -> m2_186  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_184 -> m2_186  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_188 -> m2_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_188 -> m2_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_191 -> m2_193  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_160 -> m2_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_160 -> m2_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_163 -> m2_165  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_48 -> m2_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_167 -> m2_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_167 -> m2_172  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_170 -> m2_172  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_56 -> m2_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_146 -> m2_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_146 -> m2_151  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_149 -> m2_151  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_104 -> m2_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_60 -> m2_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_60 -> m2_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_63 -> m2_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_62 -> m2_71  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m2_62 -> m2_64  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m2_65 -> m2_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_93 -> m2_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_94 -> m2_96  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m2_118 -> m2_120  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_118 -> m2_121  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m2_118 -> m2_122  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m2_118 -> m2_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m2_118 -> m2_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_126 -> m2_126  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_123 -> m2_126  [color=darkseagreen4, key=1, label=sql, style=dashed];
m2_129 -> m2_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_129 -> m2_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_132 -> m2_134  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_153 -> m2_155  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_153 -> m2_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_156 -> m2_158  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_16 -> m2_28  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label=commandBatch, style=dashed];
m2_17 -> m2_21  [color=darkseagreen4, key=1, label=commandBatch, style=dashed];
m2_17 -> m2_26  [color=darkseagreen4, key=1, label=commandBatch, style=dashed];
m2_136 -> m2_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_136 -> m2_139  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m2_136 -> m2_140  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m2_136 -> m2_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m2_136 -> m2_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_141 -> m2_144  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m2_174 -> m2_176  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_174 -> m2_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_177 -> m2_179  [color=darkseagreen4, key=1, label=query, style=dashed];
m2_113 -> m2_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_114 -> m2_116  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m2_205 -> m2_18  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_20  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_41  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_50  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_57  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_58  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_63  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_65  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_79  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_82  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_85  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_88  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_91  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_95  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_96  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_101  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_102  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_105  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_106  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_110  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_116  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_124  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_126  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_133  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_134  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_141  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_142  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_144  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_150  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_151  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_157  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_158  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_164  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_165  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_171  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_172  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_178  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_179  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_185  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_186  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_192  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_193  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_195  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_198  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_200  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_205 -> m2_202  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_206 -> m2_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_207 -> m2_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_208 -> m2_71  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m3_7 -> m3_4  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint", style=dashed];
m5_96 -> m5_101  [color=darkseagreen4, key=1, label="System.Action<DbConnection, DbTransaction>", style=dashed];
m5_97 -> m5_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_17 -> m5_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m5_17 -> m5_19  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m5_17 -> m5_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m5_17 -> m5_20  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m5_18 -> m5_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_105 -> m5_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_40 -> m5_42  [color=green, key=1, label="Hangfire.Logging.ILog", style=dashed];
m5_115 -> m5_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_116 -> m5_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_117 -> m5_131  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_117 -> m5_119  [color=darkseagreen4, key=1, label=connection, style=dashed];
m5_117 -> m5_120  [color=darkseagreen4, key=1, label=connection, style=dashed];
m5_118 -> m5_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_45 -> m5_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_47 -> m5_98  [color=green, key=1, label="lambda expression", style=dashed];
m5_47 -> m5_71  [color=green, key=1, label="lambda expression", style=dashed];
m5_47 -> m5_75  [color=green, key=1, label="lambda expression", style=dashed];
m5_47 -> m5_78  [color=green, key=1, label="lambda expression", style=dashed];
m5_47 -> m5_50  [color=green, key=1, label=parts, style=dashed];
m5_47 -> m5_51  [color=green, key=1, label=parts, style=dashed];
m5_46 -> m5_59  [color=green, key=1, label=canNotParseMessage, style=dashed];
m5_48 -> m5_51  [color=green, key=1, label=builder, style=dashed];
m5_48 -> m5_52  [color=green, key=1, label=builder, style=dashed];
m5_48 -> m5_53  [color=green, key=1, label=builder, style=dashed];
m5_56 -> m5_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_49 -> m5_51  [color=green, key=1, label=alias, style=dashed];
m5_101 -> m5_240  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_208 -> m5_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_176 -> m5_24  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_42  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_47  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_91  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_97  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_125  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_129  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_133  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_134  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_176 -> m5_139  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m5_177 -> m5_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_178 -> m5_188  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_178 -> m5_101  [color=darkseagreen4, key=1, label="System.Action<DbConnection, DbTransaction>", style=dashed];
m5_179 -> m5_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_179 -> m5_181  [color=darkseagreen4, key=1, label=thrownException, style=dashed];
m5_191 -> m5_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_192 -> m5_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_193 -> m5_205  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_194 -> m5_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_68 -> m5_71  [color=darkseagreen4, key=1, label=convertedDate, style=dashed];
m5_69 -> m5_71  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_165 -> m5_174  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_109 -> m5_111  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_128 -> m5_130  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m5_169 -> m5_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_153 -> m5_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_153 -> m5_160  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_154 -> m5_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_156 -> m5_158  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m5_112 -> m5_233  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_2 -> m5_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m5_2 -> m5_6  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_7 -> m5_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_33 -> m5_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_84 -> m5_91  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m5_64 -> m5_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_64 -> m5_246  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_137 -> m5_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_134 -> m5_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_134 -> m5_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_136 -> m5_147  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_254 -> m5_18  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_20  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_128  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_118  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_144  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_147  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_166  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_174  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_205  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_254 -> m5_251  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m5_255 -> m5_131  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_256 -> m5_147  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_257 -> m5_160  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_258 -> m5_174  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_259 -> m5_188  [color=darkseagreen4, key=1, label=process, style=dashed];
m5_260 -> m5_205  [color=darkseagreen4, key=1, label=process, style=dashed];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m7_0 -> m7_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_3 -> m7_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_11 -> m7_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_9 -> m8_7  [color=darkseagreen4, key=1, label="HangFire.Web.GenericHandler", style=dashed];
m11_16 -> m11_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>", style=dashed];
m13_1 -> m13_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2 -> m14_6  [color=green, key=1, label="lambda expression", style=dashed];
m15_7 -> m15_4  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", style=dashed];
m16_20 -> m16_22  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m16_45 -> m16_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_35 -> m16_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_60 -> m16_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_55 -> m16_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_30 -> m16_32  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m16_50 -> m16_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_40 -> m16_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_15 -> m16_17  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m16_4 -> m16_6  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m16_10 -> m16_12  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m16_25 -> m16_27  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m17_9 -> m17_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m17_15 -> m17_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint", style=dashed];
m17_15 -> m17_10  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint", style=dashed];
m17_15 -> m17_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint", style=dashed];
m18_8 -> m18_10  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m18_14 -> m18_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", style=dashed];
m18_14 -> m18_9  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", style=dashed];
m18_14 -> m18_10  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", style=dashed];
}
