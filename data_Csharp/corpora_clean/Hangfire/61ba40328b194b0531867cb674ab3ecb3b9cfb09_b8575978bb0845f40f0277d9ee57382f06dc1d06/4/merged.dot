digraph  {
n9 [label="Hangfire.States.ApplyStateContext", span=""];
n0 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="23-23", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)"];
n1 [label="newState == null", span="26-26", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)"];
n3 [label="OldStateName = oldStateName", span="28-28", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)"];
n4 [label="NewState = newState", span="29-29", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)"];
n2 [label="throw new ArgumentNullException(''newState'');", span="26-26", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)"];
n5 [label="JobExpirationTimeout = TimeSpan.FromDays(1)", span="30-30", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)"];
n6 [label="Exit Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="23-23", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)"];
n8 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
n7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d1 [label="newState == null", span="32-32", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", color=green, community=0];
d0 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="25-25", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d2 [label="throw new ArgumentNullException(''newState'');", span="32-32", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", color=green, community=0];
d3 [label="traversedStates == null", span="33-33", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d6 [label="NewState = newState", span="36-36", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", color=green, community=0];
d12 [label="Hangfire.States.ApplyStateContext", span=""];
d5 [label="OldStateName = oldStateName", span="35-35", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d7 [label="TraversedStates = traversedStates", span="37-37", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d9 [label="Exit Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="25-25", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d4 [label="throw new ArgumentNullException(''traversedStates'');", span="33-33", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d8 [label="JobExpirationTimeout = TimeSpan.FromDays(1)", span="38-38", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
m0_8 [label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ApplyStateContextFacts.cs"];
m0_59 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ApplyStateContextFacts.cs"];
m0_35 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ApplyStateContextFacts.cs"];
m0_90 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", span="116-116", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_91 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''0'')", span="118-118", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_93 [label="filter.OnStateElection(_context.Object)", span="121-121", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_94 [label="Assert.IsType<DeletedState>(_context.Object.CandidateState)", span="123-123", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_92 [label="var filter = new AutomaticRetryAttribute { Attempts = 0, OnAttemptsExceeded = AttemptsExceededAction.Delete }", span="119-119", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_95 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", span="116-116", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_26 [label="var filter = new AutomaticRetryAttribute()", span="44-44", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_27 [label="Assert.Equal(AttemptsExceededAction.Fail, filter.OnAttemptsExceeded)", span="45-45", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_28 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", span="42-42", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="ApplyStateContextFacts.cs"];
m0_17 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ApplyStateContextFacts.cs"];
m0_9 [label="int removedCount = 0", span="46-46", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ApplyStateContextFacts.cs"];
m0_24 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_29 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="ApplyStateContextFacts.cs"];
m0_30 [label="var filter = new AutomaticRetryAttribute { Attempts = 0 }", span="51-51", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_21 [label="Entry lambda expression", span="50-55", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_7 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="16-16", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="ApplyStateContextFacts.cs"];
m0_12 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="28-28", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="ApplyStateContextFacts.cs"];
m0_15 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="28-28", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="ApplyStateContextFacts.cs"];
m0_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_11 [label="Entry Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ApplyStateContextFacts.cs"];
m0_14 [label="Assert.Equal(10, filter.Attempts)", span="31-31", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="ApplyStateContextFacts.cs"];
m0_13 [label="var filter = new AutomaticRetryAttribute()", span="30-30", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="ApplyStateContextFacts.cs"];
m0_16 [label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="ApplyStateContextFacts.cs"];
m0_18 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="35-35", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="ApplyStateContextFacts.cs"];
m0_20 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="35-35", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="ApplyStateContextFacts.cs"];
m0_44 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", span="126-126", cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="ApplyStateContextFacts.cs"];
m0_99 [label="return new AutomaticRetryAttribute { Attempts = 1 };", span="128-128", cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="ApplyStateContextFacts.cs"];
m0_100 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", span="126-126", cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="ApplyStateContextFacts.cs"];
m0_34 [label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ApplyStateContextFacts.cs"];
m0_71 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="ApplyStateContextFacts.cs"];
m0_66 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ApplyStateContextFacts.cs"];
m0_36 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="ApplyStateContextFacts.cs"];
m0_37 [label="var filter = CreateFilter()", span="60-60", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", color=green, community=0, file="ApplyStateContextFacts.cs"];
m0_38 [label="filter.OnStateElection(_context.Object)", span="61-61", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="ApplyStateContextFacts.cs"];
m0_41 [label="Assert.Contains(''1 of 1'', _context.Object.CandidateState.Reason)", span="65-65", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", color=green, community=0, file="ApplyStateContextFacts.cs"];
m0_40 [label="Assert.True(((ScheduledState)_context.Object.CandidateState).EnqueueAt > DateTime.UtcNow)", span="64-64", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="ApplyStateContextFacts.cs"];
m0_42 [label="_connection.Verify(x => x.SetJobParameter(JobId, ''RetryCount'', ''1''))", span="67-67", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="ApplyStateContextFacts.cs"];
m0_39 [label="Assert.IsType<ScheduledState>(_context.Object.CandidateState)", span="63-63", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="ApplyStateContextFacts.cs"];
m0_43 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="ApplyStateContextFacts.cs"];
m0_52 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="ApplyStateContextFacts.cs"];
m0_55 [label="_context.CandidateStateValue = state.Object", span="75-75", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="ApplyStateContextFacts.cs"];
m0_56 [label="filter.OnStateElection(_context.Object)", span="77-77", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="ApplyStateContextFacts.cs"];
m0_57 [label="Assert.Same(state.Object, _context.Object.CandidateState)", span="79-79", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="ApplyStateContextFacts.cs"];
m0_53 [label="var filter = CreateFilter()", span="73-73", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="ApplyStateContextFacts.cs"];
m0_54 [label="var state = new Mock<IState>()", span="74-74", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="ApplyStateContextFacts.cs"];
m0_58 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="ApplyStateContextFacts.cs"];
m0_60 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="ApplyStateContextFacts.cs"];
m0_61 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="85-85", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="ApplyStateContextFacts.cs"];
m0_63 [label="filter.OnStateElection(_context.Object)", span="88-88", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="ApplyStateContextFacts.cs"];
m0_64 [label="Assert.Same(_failedState, _context.Object.CandidateState)", span="90-90", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="ApplyStateContextFacts.cs"];
m0_62 [label="var filter = CreateFilter()", span="86-86", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="ApplyStateContextFacts.cs"];
m0_65 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="ApplyStateContextFacts.cs"];
m0_31 [label="Hangfire.SqlServer.CountersAggregator", span="", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", color=green, community=0, file="ApplyStateContextFacts.cs"];
m0_32 [label="Assert.Same(_failedState, _context.Object.CandidateState)", span="54-54", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="ApplyStateContextFacts.cs"];
m0_33 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="ApplyStateContextFacts.cs"];
m0_22 [label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_23 [label="new AutomaticRetryAttribute { Attempts = -1 }", span="38-38", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_48 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_68 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_78 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_87 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_96 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_50 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_49 [label="x.SetJobParameter(JobId, ''RetryCount'', ''1'')", span="67-67", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_70 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_69 [label="x.GetJobParameter(JobId, ''RetryCount'')", span="85-85", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_80 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_79 [label="x.GetJobParameter(JobId, ''RetryCount'')", span="96-96", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_89 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_88 [label="x.GetJobParameter(JobId, ''RetryCount'')", span="107-107", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_97 [label="x.GetJobParameter(JobId, ''RetryCount'')", span="118-118", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_98 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_46 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ApplyStateContextFacts.cs"];
m0_47 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ApplyStateContextFacts.cs"];
m0_81 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", span="105-105", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="ApplyStateContextFacts.cs"];
m0_82 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="107-107", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="ApplyStateContextFacts.cs"];
m0_84 [label="filter.OnStateElection(_context.Object)", span="110-110", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="ApplyStateContextFacts.cs"];
m0_85 [label="Assert.IsType<FailedState>(_context.Object.CandidateState)", span="112-112", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="ApplyStateContextFacts.cs"];
m0_83 [label="var filter = new AutomaticRetryAttribute { Attempts = 1, OnAttemptsExceeded = AttemptsExceededAction.Fail }", span="108-108", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="ApplyStateContextFacts.cs"];
m0_86 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", span="105-105", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="ApplyStateContextFacts.cs"];
m0_0 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="16-16", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="ApplyStateContextFacts.cs"];
m0_1 [label="_failedState = new FailedState(new InvalidOperationException())", span="18-18", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="ApplyStateContextFacts.cs"];
m0_3 [label="_context = new ElectStateContextMock()", span="21-21", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_4 [label="_context.StateContextValue.JobIdValue = JobId", span="22-22", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_2 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_5 [label="_context.StateContextValue.ConnectionValue = _connection", span="23-23", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="ApplyStateContextFacts.cs"];
m0_72 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", span="94-94", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_73 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="96-96", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_75 [label="filter.OnStateElection(_context.Object)", span="99-99", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_76 [label="Assert.IsType<DeletedState>(_context.Object.CandidateState)", span="101-101", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_74 [label="var filter = new AutomaticRetryAttribute { Attempts = 1, OnAttemptsExceeded = AttemptsExceededAction.Delete }", span="97-97", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_77 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", span="94-94", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="ApplyStateContextFacts.cs"];
m0_19 [label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new AutomaticRetryAttribute { Attempts = -1 })", span="37-38", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="ApplyStateContextFacts.cs"];
m0_45 [label="Entry Unk.True", span="", cluster="Unk.True", file="ApplyStateContextFacts.cs"];
m0_25 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", span="42-42", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="ApplyStateContextFacts.cs"];
m0_6 [label="_context.CandidateStateValue = _failedState", span="24-24", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="ApplyStateContextFacts.cs"];
m0_67 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ApplyStateContextFacts.cs"];
m0_51 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="ApplyStateContextFacts.cs"];
m0_101 [label="Hangfire.Core.Tests.RetryAttributeFacts", span="", file="ApplyStateContextFacts.cs"];
m1_7 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ApplyStateContextMock.cs"];
m1_8 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ApplyStateContextMock.cs"];
m1_6 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ApplyStateContextMock.cs"];
m1_0 [label="Entry Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs"];
m1_1 [label="StateContextValue = new StateContextMock()", span="13-13", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs"];
m1_2 [label="NewStateValue = new Mock<IState>().Object", span="14-14", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs"];
m1_3 [label="OldStateValue = null", span="15-15", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs"];
m1_4 [label="TraversedStatesValue = Enumerable.Empty<IState>()", span="17-17", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", color=green, community=0, file="ApplyStateContextMock.cs"];
m1_5 [label="Exit Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", color=green, community=0, file="ApplyStateContextMock.cs"];
m1_9 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ApplyStateContextMock.cs"];
m1_10 [label="new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue)", span="18-21", cluster="lambda expression", color=red, community=0, file="ApplyStateContextMock.cs"];
m1_12 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="23-23", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=green, community=0, file="ApplyStateContextMock.cs"];
m1_11 [label="Exit lambda expression", span="18-21", cluster="lambda expression", file="ApplyStateContextMock.cs"];
m1_13 [label="Hangfire.Core.Tests.ApplyStateContextMock", span="", file="ApplyStateContextMock.cs"];
m2_4 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="BackgroundJobClient.cs"];
m2_5 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="BackgroundJobClient.cs"];
m2_44 [label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="BackgroundJobClient.cs"];
m2_30 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="BackgroundJobClient.cs"];
m2_34 [label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m2_35 [label="jobId == null", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m2_37 [label="state == null", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m2_41 [label="return stateMachine.TryToChangeState(jobId, state, fromState != null ? new[] { fromState } : null);", span="110-110", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", color=red, community=0, file="BackgroundJobClient.cs"];
m2_36 [label="throw new ArgumentNullException(''jobId'');", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m2_38 [label="throw new ArgumentNullException(''state'');", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m2_39 [label="var connection = _storage.GetConnection()", span="107-107", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m2_40 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="109-109", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m2_42 [label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m2_0 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClient.cs"];
m2_1 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClient.cs"];
m2_6 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_7 [label="storage == null", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_9 [label="stateMachineFactory == null", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_11 [label="process == null", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_13 [label="_storage = storage", span="74-74", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_14 [label="_stateMachineFactory = stateMachineFactory", span="75-75", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_15 [label="_process = process", span="76-76", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_8 [label="throw new ArgumentNullException(''storage'');", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_12 [label="throw new ArgumentNullException(''process'');", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_16 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m2_33 [label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34", cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="BackgroundJobClient.cs"];
m2_32 [label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="BackgroundJobClient.cs"];
m2_31 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_43 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="BackgroundJobClient.cs"];
m2_18 [label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_19 [label="job == null", span="82-82", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_21 [label="state == null", span="83-83", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_24 [label="var context = new CreateContext(connection, _stateMachineFactory, job, state)", span="89-89", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_20 [label="throw new ArgumentNullException(''job'');", span="82-82", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_22 [label="throw new ArgumentNullException(''state'');", span="83-83", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_23 [label="var connection = _storage.GetConnection()", span="87-87", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_25 [label="_process.Run(context)", span="90-90", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_26 [label="return context.JobId;", span="92-92", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_27 [label=Exception, span="95-95", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_28 [label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="97-97", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_29 [label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m2_2 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="BackgroundJobClient.cs"];
m2_3 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="BackgroundJobClient.cs"];
m2_45 [label="Hangfire.BackgroundJobClient", span="", file="BackgroundJobClient.cs"];
m3_31 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="189-189", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs"];
m3_163 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="189-189", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs"];
m3_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="BackgroundJobClientFacts.cs"];
m3_18 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="BackgroundJobClientFacts.cs"];
m3_37 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClientFacts.cs"];
m3_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobClientFacts.cs"];
m3_0 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_1 [label="_connection = new Mock<IStorageConnection>()", span="22-22", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_17 [label="Entry Mock<IJobCreationProcess>.cstr", span="", cluster="Mock<IJobCreationProcess>.cstr", file="BackgroundJobClientFacts.cs"];
m3_60 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="BackgroundJobClientFacts.cs"];
m3_94 [label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClientFacts.cs"];
m3_104 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="BackgroundJobClientFacts.cs"];
m3_32 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m3_33 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m3_34 [label="Assert.Equal(''storage'', exception.ParamName)", span="42-42", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m3_35 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m3_77 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="84-84", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_78 [label="var client = CreateClient()", span="86-86", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_79 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="88-89", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_80 [label="Assert.Equal(''job'', exception.ParamName)", span="91-91", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_81 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="84-84", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_36 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobClientFacts.cs"];
m3_56 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m3_57 [label="JobStorage.Current = new Mock<JobStorage>().Object", span="66-66", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m3_58 [label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m3_59 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m3_95 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="106-106", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_96 [label="var client = CreateClient()", span="108-108", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_97 [label="client.Create(_job, _state.Object)", span="110-110", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_98 [label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="112-112", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_99 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="106-106", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="BackgroundJobClientFacts.cs"];
m3_127 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="BackgroundJobClientFacts.cs"];
m3_112 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="BackgroundJobClientFacts.cs"];
m3_105 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="116-116", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_106 [label="var client = CreateClient()", span="118-118", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_107 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="119-120", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_108 [label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="122-123", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_109 [label="Assert.NotNull(exception.InnerException)", span="125-125", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_110 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="126-126", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_111 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="116-116", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_136 [label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClientFacts.cs"];
m3_137 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="152-152", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m3_140 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="158-161", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", color=green, community=3, file="BackgroundJobClientFacts.cs"];
m3_139 [label="client.ChangeState(''job-id'', _state.Object, null)", span="156-156", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m3_138 [label="var client = CreateClient()", span="154-154", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m3_141 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="152-152", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m3_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundJobClientFacts.cs"];
m3_64 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClientFacts.cs"];
m3_42 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m3_43 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m3_44 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m3_45 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m3_86 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="95-95", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_87 [label="var client = CreateClient()", span="97-97", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_88 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="99-100", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_89 [label="Assert.Equal(''state'', exception.ParamName)", span="102-102", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_90 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="95-95", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_61 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_142 [label="Entry lambda expression", span="158-161", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_143 [label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="158-161", cluster="lambda expression", color=green, community=3, file="BackgroundJobClientFacts.cs"];
m3_144 [label="Exit lambda expression", span="158-161", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_150 [label="Entry lambda expression", span="171-174", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_151 [label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="171-174", cluster="lambda expression", color=green, community=3, file="BackgroundJobClientFacts.cs"];
m3_152 [label="Exit lambda expression", span="171-174", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_160 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_161 [label="x.ChangeState(''job-id'', _state.Object, null)", span="180-180", cluster="lambda expression", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m3_162 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_25 [label="x.Create(_connection.Object)", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_39 [label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_47 [label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_54 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_69 [label="new BackgroundJobClient(_storage.Object)", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_75 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_84 [label="client.Create(null, _state.Object)", span="89-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_92 [label="client.Create(_job, null)", span="100-100", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_117 [label="client.Create(_job, _state.Object)", span="123-123", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_125 [label="client.ChangeState(null, _state.Object, null)", span="135-135", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_20 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_26 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_38 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_40 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_46 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_48 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_53 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_55 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_74 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_76 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_83 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_85 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_91 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_93 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_101 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_113 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_116 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_118 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_124 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_126 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_134 [label="client.ChangeState(''jobId'', null, null)", span="146-146", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_22 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_21 [label="x.GetConnection()", span="24-24", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_29 [label="Method()", span="33-33", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_102 [label="x.Run(It.IsNotNull<CreateContext>())", span="112-112", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_114 [label="x.Run(It.IsAny<CreateContext>())", span="119-119", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_103 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_115 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_133 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_135 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_62 [label="new BackgroundJobClient()", span="67-67", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_63 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_82 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="193-193", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs"];
m3_164 [label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="195-195", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs"];
m3_165 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="193-193", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs"];
m3_65 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs"];
m3_66 [label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs"];
m3_67 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs"];
m3_119 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="130-130", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_120 [label="var client = CreateClient()", span="132-132", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_121 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="134-135", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_122 [label="Assert.Equal(''jobId'', exception.ParamName)", span="137-137", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_123 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="130-130", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_145 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="165-165", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m3_148 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="171-174", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", color=green, community=3, file="BackgroundJobClientFacts.cs"];
m3_147 [label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="169-169", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m3_146 [label="var client = CreateClient()", span="167-167", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m3_149 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="165-165", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m3_2 [label="_storage = new Mock<JobStorage>()", span="23-23", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_3 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_4 [label="_stateMachine = new Mock<IStateMachine>()", span="26-26", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_6 [label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_7 [label="_process = new Mock<IJobCreationProcess>()", span="31-31", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_8 [label="_state = new Mock<IState>()", span="32-32", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_9 [label="_job = Job.FromExpression(() => Method())", span="33-33", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_10 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_49 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m3_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m3_51 [label="Assert.Equal(''process'', exception.ParamName)", span="60-60", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m3_52 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m3_15 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="BackgroundJobClientFacts.cs"];
m3_27 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="BackgroundJobClientFacts.cs"];
m3_153 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="178-178", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_154 [label="_stateMachine.Setup(x => x.ChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="180-181", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", color=green, community=3, file="BackgroundJobClientFacts.cs"];
m3_155 [label="var client = CreateClient()", span="182-182", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_156 [label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="184-184", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_157 [label="Assert.True(result)", span="186-186", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_158 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="178-178", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_159 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobClientFacts.cs"];
m3_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundJobClientFacts.cs"];
m3_128 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="141-141", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_129 [label="var client = CreateClient()", span="143-143", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_130 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="145-146", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_131 [label="Assert.Equal(''state'', exception.ParamName)", span="148-148", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_132 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="141-141", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_41 [label="Entry BackgroundJobClient.cstr", span="", cluster="BackgroundJobClient.cstr", file="BackgroundJobClientFacts.cs"];
m3_71 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_72 [label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_73 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_100 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobClientFacts.cs"];
m3_12 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="BackgroundJobClientFacts.cs"];
m3_19 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m3_166 [label="Hangfire.Core.Tests.BackgroundJobClientFacts", span="", file="BackgroundJobClientFacts.cs"];
m3_167 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m3_168 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m3_169 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m3_170 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m3_171 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m4_60 [label="Entry IOwinRequest.LinkTo(string)", span="22-22", cluster="IOwinRequest.LinkTo(string)", file="ElectStateContext.cs"];
m4_59 [label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45", cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="ElectStateContext.cs"];
m4_68 [label="Entry HangFire.Dashboard.Pages.Paginator.Paginator(HangFire.Dashboard.Pager)", span="6-6", cluster="HangFire.Dashboard.Pages.Paginator.Paginator(HangFire.Dashboard.Pager)", file="ElectStateContext.cs"];
m4_63 [label="Entry HangFire.Dashboard.Pages.PerPageSelector.PerPageSelector(HangFire.Dashboard.Pager)", span="6-6", cluster="HangFire.Dashboard.Pages.PerPageSelector.PerPageSelector(HangFire.Dashboard.Pager)", file="ElectStateContext.cs"];
m4_0 [label="Entry HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", span="53-53", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_1 [label="WriteLiteral(''\r\n'')", span="57-57", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="ElectStateContext.cs"];
m4_2 [label="Layout = new LayoutPage { Title = ''Deleted Jobs'' }", span="69-69", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="ElectStateContext.cs"];
m4_3 [label="int from, perPage", span="71-71", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="ElectStateContext.cs"];
m4_4 [label="int.TryParse(Request.Query[''from''], out from)", span="73-73", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="ElectStateContext.cs"];
m4_5 [label="int.TryParse(Request.Query[''count''], out perPage)", span="74-74", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="ElectStateContext.cs"];
m4_6 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="ElectStateContext.cs"];
m4_7 [label="Pager pager = new Pager(from, perPage, monitor.DeletedListCount())\r\n    {\r\n        BasePageUrl = Request.LinkTo(''/deleted'')\r\n    }", span="77-80", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_8 [label="JobList<DeletedJobDto> jobs = monitor.DeletedJobs(pager.FromRecord, pager.RecordsPerPage)", span="82-82", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="ElectStateContext.cs"];
m4_9 [label="WriteLiteral(''\r\n'')", span="88-88", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_10 [label="pager.TotalPageCount == 0", span="93-93", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_11 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No deleted jobs found.\r\n    </div>\r\n'')", span="99-99", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_13 [label="Write(Request.LinkTo(''/deleted/requeue''))", span="118-118", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_14 [label="WriteLiteral(''\''\r\n                    data-loading-text=\''Enqueueing...\''>\r\n                <span '' +\r\n''class=\''glyphicon glyphicon-repeat\''></span>\r\n                Requeue jobs\r\n      '' +\r\n''      </button>\r\n            '')", span="123-125", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="ElectStateContext.cs"];
m4_15 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="130-130", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_56 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ElectStateContext.cs"];
m4_22 [label="WriteLiteral(''\''>\r\n                        <td>\r\n'')", span="180-180", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_55 [label="Entry HangFire.Dashboard.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Dashboard.Pages.LayoutPage.LayoutPage()", file="ElectStateContext.cs"];
m4_67 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ElectStateContext.cs"];
m4_18 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="160-160", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_19 [label="Write(job.Value != null && !job.Value.InDeletedState ? ''obsolete-data'' : null)", span="165-165", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="ElectStateContext.cs"];
m4_20 [label="WriteLiteral('' '')", span="170-170", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_64 [label="Entry HangFire.Dashboard.RazorPage.RenderPartial(HangFire.Dashboard.RazorPage)", span="77-77", cluster="HangFire.Dashboard.RazorPage.RenderPartial(HangFire.Dashboard.RazorPage)", file="ElectStateContext.cs"];
m4_52 [label="Write(RenderPartial(new Paginator(pager)))", span="376-376", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_17 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="ElectStateContext.cs"];
m4_12 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="111-113", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_16 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContext.cs"];
m4_51 [label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="365-365", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_21 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="ElectStateContext.cs"];
m4_23 [label="Hangfire.States.ElectStateContext", span="", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_24 [label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="191-192", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_27 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <a href=\'''')", span="212-213", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_25 [label="Write(job.Key)", span="197-197", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_28 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="218-218", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_26 [label="WriteLiteral(''\'' />\r\n'')", span="202-202", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_29 [label="WriteLiteral(''\''>\r\n                                '')", span="223-223", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_30 [label="Write(HtmlHelper.JobId(job.Key))", span="228-228", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_31 [label="WriteLiteral(''\r\n                            </a>\r\n'')", span="233-233", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_32 [label="job.Value != null && !job.Value.InDeletedState", span="238-238", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_33 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="244-245", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_34 [label="WriteLiteral(''                        </td>\r\n\r\n'')", span="255-255", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_35 [label="job.Value == null", span="260-260", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_36 [label="WriteLiteral(''                            <td colspan=\''2\''>\r\n                                <em'' +\r\n''>Job was expired.</em>\r\n                            </td>\r\n'')", span="266-267", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_37 [label="WriteLiteral(''                            <td>\r\n                                <a class=\''job-m'' +\r\n''ethod\'' href=\'''')", span="279-280", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_38 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="285-285", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_39 [label="WriteLiteral(''\''>\r\n                                    '')", span="290-290", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_40 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="295-295", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_41 [label="WriteLiteral(''\r\n                                </a>\r\n                            </td>\r\n'')", span="300-300", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_43 [label="job.Value.DeletedAt.HasValue", span="309-309", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_42 [label="WriteLiteral(''                            <td class=\''align-right\''>\r\n'')", span="304-304", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_44 [label="WriteLiteral(''                                    <span data-moment=\'''')", span="315-315", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_49 [label="WriteLiteral(''                            </td>\r\n'')", span="345-345", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_45 [label="Write(JobHelper.ToTimestamp(job.Value.DeletedAt.Value))", span="320-320", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_46 [label="WriteLiteral(''\''>\r\n                                        '')", span="325-325", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_47 [label="Write(job.Value.DeletedAt)", span="330-330", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_48 [label="WriteLiteral(''\r\n                                    </span>\r\n'')", span="335-335", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_50 [label="WriteLiteral(''                    </tr>\r\n'')", span="355-355", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_53 [label="Exit HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", span="53-53", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.Execute()", file="ElectStateContext.cs"];
m4_61 [label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36", cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="ElectStateContext.cs"];
m4_58 [label="Entry HangFire.Dashboard.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Dashboard.Pager.Pager(int, int, long)", file="ElectStateContext.cs"];
m4_54 [label="Entry HangFire.Dashboard.RazorPage.WriteLiteral(string)", span="57-57", cluster="HangFire.Dashboard.RazorPage.WriteLiteral(string)", file="ElectStateContext.cs"];
m4_65 [label="Entry HangFire.Dashboard.HtmlHelper.JobId(string, bool)", span="74-74", cluster="HangFire.Dashboard.HtmlHelper.JobId(string, bool)", file="ElectStateContext.cs"];
m4_57 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ElectStateContext.cs"];
m4_66 [label="Entry HangFire.Dashboard.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="31-31", cluster="HangFire.Dashboard.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ElectStateContext.cs"];
m4_62 [label="Entry HangFire.Dashboard.RazorPage.Write(object)", span="64-64", cluster="HangFire.Dashboard.RazorPage.Write(object)", file="ElectStateContext.cs"];
m4_69 [label="HangFire.Dashboard.Pages.DeletedJobsPage", span="", file="ElectStateContext.cs"];
m5_11 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ElectStateContextFacts.cs"];
m5_47 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ElectStateContextFacts.cs"];
m5_17 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ElectStateContextFacts.cs"];
m5_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ElectStateContextFacts.cs"];
m5_74 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="117-117", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_75 [label="var context = CreateContext()", span="119-119", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_77 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null)))", span="123-124", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_76 [label="context.SetJobParameter(''Name'', (string)null)", span="121-121", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_78 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="117-117", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_67 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="66-66", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContextFacts.cs"];
m5_62 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="106-106", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_63 [label="var context = CreateContext()", span="108-108", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", color=green, community=1, file="ElectStateContextFacts.cs"];
m5_64 [label="context.SetJobParameter(''Name'', ''Value'')", span="110-110", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_65 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value'')))", span="112-113", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_66 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="106-106", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_16 [label="Entry Unk.>", span="", cluster="Unk.>", file="ElectStateContextFacts.cs"];
m5_95 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="140-140", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_96 [label="var context = CreateContext()", span="142-142", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_97 [label="_connection.Setup(x => x.GetJobParameter(''1'', ''Value''))\r\n                .Returns(JobHelper.ToJson(null))", span="143-144", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_99 [label="Assert.Equal(default(int), value)", span="148-148", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_98 [label="var value = context.GetJobParameter<int>(''Name'')", span="146-146", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_100 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="140-140", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_90 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="71-71", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContextFacts.cs"];
m5_49 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="87-87", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_50 [label="var context = CreateContext()", span="89-89", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_51 [label="Assert.Throws<ArgumentNullException>(() => context.CandidateState = null)", span="91-91", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_52 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="87-87", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_0 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="17-17", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_2 [label="_stateMachine = new Mock<IStateMachine>()", span="20-20", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_1 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_3 [label="_stateContext = new StateContextMock()", span="22-22", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_4 [label="_stateContext.JobIdValue = JobId", span="23-23", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_5 [label="_stateContext.ConnectionValue = _connection", span="24-24", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_6 [label="_candidateState = new Mock<IState>()", span="26-26", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_7 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="17-17", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_22 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", span="44-44", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", file="ElectStateContextFacts.cs"];
m5_23 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    _candidateState.Object,\r\n                    null))", span="46-52", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", color=green, community=2, file="ElectStateContextFacts.cs"];
m5_24 [label="Assert.Equal(''stateMachine'', exception.ParamName)", span="54-54", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", color=green, community=2, file="ElectStateContextFacts.cs"];
m5_25 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", span="44-44", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", file="ElectStateContextFacts.cs"];
m5_12 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="30-30", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m5_13 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    null,\r\n                    _stateMachine.Object,\r\n                    _candidateState.Object,\r\n                    null))", span="32-38", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=2, file="ElectStateContextFacts.cs"];
m5_14 [label="Assert.Equal(''connection'', exception.ParamName)", span="40-40", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=2, file="ElectStateContextFacts.cs"];
m5_15 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="30-30", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m5_82 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="128-128", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_83 [label="var context = CreateContext()", span="130-130", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_84 [label="_connection.Setup(x => x.GetJobParameter(''1'', ''Name''))\r\n                .Returns(JobHelper.ToJson(''Value''))", span="131-132", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_86 [label="Assert.Equal(''Value'', value)", span="136-136", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_85 [label="var value = context.GetJobParameter<string>(''Name'')", span="134-134", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_87 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="128-128", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_94 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="ElectStateContextFacts.cs"];
m5_88 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ElectStateContextFacts.cs"];
m5_72 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContextFacts.cs"];
m5_53 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_18 [label="Entry lambda expression", span="33-38", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_19 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    null,\r\n                    _stateMachine.Object,\r\n                    _candidateState.Object,\r\n                    null)", span="33-38", cluster="lambda expression", color=green, community=2, file="ElectStateContextFacts.cs"];
m5_20 [label="Exit lambda expression", span="33-38", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_26 [label="Entry lambda expression", span="47-52", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_27 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    _candidateState.Object,\r\n                    null)", span="47-52", cluster="lambda expression", color=green, community=2, file="ElectStateContextFacts.cs"];
m5_28 [label="Exit lambda expression", span="47-52", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_33 [label="Entry lambda expression", span="61-66", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_34 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    _stateMachine.Object,\r\n                    null,\r\n                    null)", span="61-66", cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_35 [label="Exit lambda expression", span="61-66", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_69 [label="Entry lambda expression", span="112-113", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_70 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="112-113", cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_71 [label="Exit lambda expression", span="112-113", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_80 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null))", span="123-124", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_54 [label="context.CandidateState = null", span="91-91", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_79 [label="Entry lambda expression", span="123-124", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_91 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_101 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_81 [label="Exit lambda expression", span="123-124", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_55 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_93 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_92 [label="x.GetJobParameter(''1'', ''Name'')", span="131-131", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_102 [label="x.GetJobParameter(''1'', ''Value'')", span="143-143", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_103 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_56 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="95-95", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_57 [label="var context = CreateContext()", span="97-97", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_60 [label="Assert.Same(newState.Object, context.CandidateState)", span="102-102", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_58 [label="var newState = new Mock<IState>()", span="98-98", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_59 [label="context.CandidateState = newState.Object", span="100-100", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_61 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="95-95", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_29 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="58-58", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m5_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    _stateMachine.Object,\r\n                    null,\r\n                    null))", span="60-66", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_31 [label="Assert.Equal(''candidateState'', exception.ParamName)", span="68-68", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m5_32 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="58-58", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m5_36 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="72-72", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_40 [label="Assert.Same(_connection.Object, context.Connection)", span="79-79", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=green, community=2, file="ElectStateContextFacts.cs"];
m5_37 [label="var context = CreateContext()", span="74-74", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_39 [label="Assert.Equal(_stateContext.Object.Job, context.Job)", span="77-77", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_41 [label="Assert.Same(_stateMachine.Object, context.StateMachine)", span="80-80", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_43 [label="Assert.Equal(''State'', context.CurrentState)", span="82-82", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_42 [label="Assert.Same(_candidateState.Object, context.CandidateState)", span="81-81", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_44 [label="Assert.Empty(context.TraversedStates)", span="83-83", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_38 [label="Assert.Equal(_stateContext.Object.JobId, context.JobId)", span="76-76", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_45 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="72-72", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_9 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="ElectStateContextFacts.cs"];
m5_10 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ElectStateContextFacts.cs"];
m5_48 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="ElectStateContextFacts.cs"];
m5_89 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ElectStateContextFacts.cs"];
m5_21 [label="Entry ElectStateContext.cstr", span="", cluster="ElectStateContext.cstr", file="ElectStateContextFacts.cs"];
m5_46 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="151-151", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m5_104 [label="return new ElectStateContext(\r\n                _stateContext.Object,\r\n                _connection.Object,\r\n                _stateMachine.Object,\r\n                _candidateState.Object,\r\n                ''State'');", span="153-158", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m5_105 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="151-151", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m5_68 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ElectStateContextFacts.cs"];
m5_73 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="ElectStateContextFacts.cs"];
m5_106 [label="Hangfire.Core.Tests.States.ElectStateContextFacts", span="", file="ElectStateContextFacts.cs"];
m5_107 [label=context, span="", file="ElectStateContextFacts.cs"];
m6_7 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ElectStateContextMock.cs"];
m6_8 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ElectStateContextMock.cs"];
m6_6 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ElectStateContextMock.cs"];
m6_9 [label="Entry lambda expression", span="18-21", cluster="lambda expression", file="ElectStateContextMock.cs"];
m6_10 [label="new ElectStateContext(\r\n                    StateContextValue.Object, \r\n                    CandidateStateValue,\r\n                    CurrentStateValue)", span="18-21", cluster="lambda expression", file="ElectStateContextMock.cs"];
m6_11 [label="Exit lambda expression", span="18-21", cluster="lambda expression", file="ElectStateContextMock.cs"];
m6_0 [label="Entry Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs"];
m6_1 [label="StateContextValue = new StateContextMock()", span="13-13", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs"];
m6_2 [label="CandidateStateValue = new Mock<IState>().Object", span="14-14", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs"];
m6_3 [label="CurrentStateValue = ''OldState''", span="15-15", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs"];
m6_4 [label="_context = new Lazy<ElectStateContext>(\r\n                () => new ElectStateContext(\r\n                    StateContextValue.Object, \r\n                    CandidateStateValue,\r\n                    CurrentStateValue))", span="17-21", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs"];
m6_5 [label="Exit Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs"];
m6_12 [label="Entry Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="25-25", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ElectStateContextMock.cs"];
m6_13 [label="Hangfire.Core.Tests.ElectStateContextMock", span="", file="ElectStateContextMock.cs"];
m7_0 [label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="IStateChangeProcess.cs"];
m7_1 [label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="IStateChangeProcess.cs"];
m8_0 [label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs"];
m8_1 [label="Exit Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs"];
m8_2 [label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs"];
m8_3 [label="Exit Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs"];
m9_0 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="IStateMachineFactory.cs"];
m9_1 [label="Exit Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="IStateMachineFactory.cs"];
m10_51 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="156-156", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RetryAttributeFacts.cs"];
m10_86 [label="var changedContext = new StateApplyingContext(stateChangingContext)", span="158-158", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RetryAttributeFacts.cs"];
m10_87 [label="return changedContext.ApplyState(_handlers, stateChangedFilters);", span="159-159", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RetryAttributeFacts.cs"];
m10_88 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="156-156", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RetryAttributeFacts.cs"];
m10_81 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RetryAttributeFacts.cs"];
m10_117 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RetryAttributeFacts.cs"];
m10_15 [label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52", cluster="HangFire.JobStorage.GetStateHandlers()", file="RetryAttributeFacts.cs"];
m10_83 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="RetryAttributeFacts.cs"];
m10_46 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="13-13", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RetryAttributeFacts.cs"];
m10_84 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RetryAttributeFacts.cs"];
m10_78 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="RetryAttributeFacts.cs"];
m10_82 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="91-91", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="RetryAttributeFacts.cs"];
m10_45 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="RetryAttributeFacts.cs"];
m10_102 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="RetryAttributeFacts.cs"];
m10_5 [label="stateHandlers == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_6 [label="throw new ArgumentNullException(''stateHandlers'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="RetryAttributeFacts.cs"];
m10_7 [label="_connection = connection", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_8 [label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_10 [label="RegisterHandler(handler)", span="54-54", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_9 [label=handlers, span="52-52", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_11 [label="filters != null", span="57-57", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_17 [label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="186-186", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RetryAttributeFacts.cs"];
m10_107 [label="handler == null", span="188-188", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RetryAttributeFacts.cs"];
m10_109 [label="String.IsNullOrEmpty(handler.StateName)", span="189-189", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RetryAttributeFacts.cs"];
m10_111 [label="!_handlers.ContainsKey(handler.StateName)", span="191-191", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RetryAttributeFacts.cs"];
m10_112 [label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="193-193", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RetryAttributeFacts.cs"];
m10_113 [label="_handlers[handler.StateName].Add(handler)", span="196-196", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RetryAttributeFacts.cs"];
m10_108 [label="throw new ArgumentNullException(''handler'');", span="188-188", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RetryAttributeFacts.cs"];
m10_110 [label="throw new ArgumentNullException(''stateName'');", span="189-189", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RetryAttributeFacts.cs"];
m10_114 [label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="186-186", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="RetryAttributeFacts.cs"];
m10_0 [label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.States.JobState)", span="14-14", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.States.JobState)", file="RetryAttributeFacts.cs"];
m10_1 [label="_name = name", span="16-16", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.States.JobState)", file="RetryAttributeFacts.cs"];
m10_49 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="RetryAttributeFacts.cs"];
m10_106 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="RetryAttributeFacts.cs"];
m10_100 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="10-10", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="RetryAttributeFacts.cs"];
m10_25 [label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38", cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="RetryAttributeFacts.cs"];
m10_26 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_27 [label="method == null", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_29 [label="parameters == null", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_31 [label="state == null", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_33 [label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_34 [label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_35 [label="var filterInfo = GetFilters(method)", span="86-86", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_36 [label="var context = new StateContext(jobId, method)", span="87-87", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_37 [label="var changingContext = new StateChangingContext(context, state, ''Created'', _connection)", span="88-88", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_28 [label="throw new ArgumentNullException(''method'');", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_30 [label="throw new ArgumentNullException(''parameters'');", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_32 [label="throw new ArgumentNullException(''state'');", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_40 [label="return jobId;", span="95-95", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_38 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_39 [label="ApplyState(changingContext, filterInfo.StateChangedFilters)", span="93-93", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_41 [label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RetryAttributeFacts.cs"];
m10_14 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="RetryAttributeFacts.cs"];
m10_105 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="RetryAttributeFacts.cs"];
m10_90 [label="Entry HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="42-42", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RetryAttributeFacts.cs"];
m10_89 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", span="28-28", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="RetryAttributeFacts.cs"];
m10_13 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_115 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="RetryAttributeFacts.cs"];
m10_79 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="22-22", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="RetryAttributeFacts.cs"];
m10_101 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="13-13", cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RetryAttributeFacts.cs"];
m10_116 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RetryAttributeFacts.cs"];
m10_44 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="RetryAttributeFacts.cs"];
m10_52 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m10_19 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m10_18 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m10_20 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m10_22 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m10_23 [label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m10_24 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m10_53 [label="x.ParameterType", span="77-77", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m10_54 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m10_12 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RetryAttributeFacts.cs"];
m10_50 [label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="162-162", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RetryAttributeFacts.cs"];
m10_91 [label=filters, span="165-165", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RetryAttributeFacts.cs"];
m10_92 [label="var oldState = context.CandidateState", span="167-167", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RetryAttributeFacts.cs"];
m10_93 [label="filter.OnStateChanging(context)", span="168-168", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RetryAttributeFacts.cs"];
m10_94 [label="oldState != context.CandidateState", span="170-170", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RetryAttributeFacts.cs"];
m10_96 [label="transaction.AppendJobHistory(context.JobId, oldState, context.JobMethod)", span="174-174", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RetryAttributeFacts.cs"];
m10_95 [label="var transaction = _connection.CreateWriteTransaction()", span="172-172", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RetryAttributeFacts.cs"];
m10_97 [label="transaction.Commit()", span="175-175", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RetryAttributeFacts.cs"];
m10_98 [label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="162-162", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RetryAttributeFacts.cs"];
m10_55 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_56 [label="String.IsNullOrWhiteSpace(jobId)", span="101-101", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_58 [label="state == null", span="102-102", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_60 [label="_connection.AcquireJobLock(jobId)", span="104-104", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_61 [label="var jobData = _connection.GetJobStateAndInvocationData(jobId)", span="106-106", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_64 [label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(jobData.State)", span="114-114", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_69 [label="state = new FailedState(ex)\r\n                    {\r\n                        Reason = String.Format(\r\n                            ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                            state.StateName, jobId)\r\n                    }", span="132-137", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_70 [label="var context = new StateContext(jobId, jobMethod)", span="140-140", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_57 [label="throw new ArgumentNullException(''jobId'');", span="101-101", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_59 [label="throw new ArgumentNullException(''state'');", span="102-102", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_62 [label="jobData == null", span="108-108", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_67 [label="jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="123-123", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_71 [label="var stateChangingContext = \r\n                    new StateChangingContext(context, state, jobData.State, _connection)", span="141-142", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_63 [label="return false;", span="111-111", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_65 [label="return false;", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_66 [label="JobMethod jobMethod = null", span="119-119", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_68 [label=JobLoadException, span="125-125", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_72 [label="jobMethod == null", span="144-144", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_74 [label="var filterInfo = GetFilters(jobMethod)", span="149-149", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_73 [label="return ApplyState(stateChangingContext, Enumerable.Empty<IStateChangedFilter>());", span="146-146", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_75 [label="InvokeStateChangingFilters(stateChangingContext, filterInfo.StateChangingFilters)", span="150-150", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_76 [label="return ApplyState(stateChangingContext, filterInfo.StateChangedFilters);", span="152-152", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_77 [label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RetryAttributeFacts.cs"];
m10_99 [label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RetryAttributeFacts.cs"];
m10_80 [label="Entry HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", span="23-23", cluster="HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", file="RetryAttributeFacts.cs"];
m10_119 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RetryAttributeFacts.cs"];
m10_47 [label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="181-181", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RetryAttributeFacts.cs"];
m10_103 [label="return new JobFilterInfo(_getFiltersThunk(method));", span="183-183", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RetryAttributeFacts.cs"];
m10_104 [label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="181-181", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RetryAttributeFacts.cs"];
m10_16 [label="HangFire.Tests.TestStateChangingFilter", span="", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RetryAttributeFacts.cs"];
m10_43 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="RetryAttributeFacts.cs"];
m10_118 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RetryAttributeFacts.cs"];
m10_2 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_3 [label="connection == null", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_4 [label="throw new ArgumentNullException(''connection'');", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RetryAttributeFacts.cs"];
m10_48 [label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="RetryAttributeFacts.cs"];
m10_42 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="RetryAttributeFacts.cs"];
m10_85 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="RetryAttributeFacts.cs"];
m10_120 [label="HangFire.States.StateMachine", span="", file="RetryAttributeFacts.cs"];
m10_121 [label="System.Collections.Generic.IEnumerable<object>", span="", file="RetryAttributeFacts.cs"];
m11_34 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="SchedulePoller.cs"];
m11_281 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="412-412", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SchedulePoller.cs"];
m11_282 [label="var serializedHistory = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="414-415", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SchedulePoller.cs"];
m11_285 [label="i < table.RowCount", span="418-418", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SchedulePoller.cs"];
m11_286 [label="Assert.AreEqual(table.Rows[i][''State''], history[i][''State''])", span="420-420", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SchedulePoller.cs"];
m11_283 [label="var history = serializedHistory.Select(JobHelper.FromJson<Dictionary<string, string>>).ToList()", span="416-416", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SchedulePoller.cs"];
m11_284 [label="var i = 0", span="418-418", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SchedulePoller.cs"];
m11_287 [label="i++", span="418-418", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SchedulePoller.cs"];
m11_288 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="412-412", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="SchedulePoller.cs"];
m11_174 [label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="273-273", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SchedulePoller.cs"];
m11_175 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="275-275", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SchedulePoller.cs"];
m11_176 [label="var timestamp = JobHelper.FromTimestamp((long)score)", span="276-276", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SchedulePoller.cs"];
m11_177 [label="Assert.IsTrue(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="278-278", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SchedulePoller.cs"];
m11_178 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.AddSeconds(1))", span="279-279", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SchedulePoller.cs"];
m11_179 [label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="273-273", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="SchedulePoller.cs"];
m11_38 [label="x.GetProperties()", span="71-71", cluster="lambda expression", file="SchedulePoller.cs"];
m11_158 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="248-248", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="SchedulePoller.cs"];
m11_159 [label="Assert.AreEqual(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="250-250", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="SchedulePoller.cs"];
m11_160 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="251-251", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="SchedulePoller.cs"];
m11_161 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="248-248", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="SchedulePoller.cs"];
m11_112 [label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="167-167", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="SchedulePoller.cs"];
m11_113 [label="var stateMachine = new StateMachine(\r\n                Redis.Client, _descriptors, _stateChangingFilters, _stateAppliedFilters)", span="170-171", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="SchedulePoller.cs"];
m11_114 [label="stateMachine.ChangeState(JobSteps.DefaultJobId, _stateMocks[state].Object, allowedState)", span="172-172", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="SchedulePoller.cs"];
m11_115 [label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="167-167", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="SchedulePoller.cs"];
m11_183 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="283-283", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SchedulePoller.cs"];
m11_184 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="285-285", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SchedulePoller.cs"];
m11_185 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="286-286", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SchedulePoller.cs"];
m11_186 [label="var timestamp = JobHelper.FromTimestamp((long) score)", span="287-287", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SchedulePoller.cs"];
m11_187 [label="Assert.IsTrue(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="289-289", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SchedulePoller.cs"];
m11_188 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="290-290", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SchedulePoller.cs"];
m11_189 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="283-283", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="SchedulePoller.cs"];
m11_119 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="SchedulePoller.cs"];
m11_173 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="SchedulePoller.cs"];
m11_100 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", span="40-40", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="SchedulePoller.cs"];
m11_71 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="102-102", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="SchedulePoller.cs"];
m11_72 [label="Given(String.Format(''a '{0}' state'', state))", span="104-104", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="SchedulePoller.cs"];
m11_73 [label="_stateChangingFilters.Add(\r\n                new TestStateChangingFilter(name, _stateChangingResults, _stateMocks[state].Object))", span="106-107", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="SchedulePoller.cs"];
m11_74 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="102-102", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="SchedulePoller.cs"];
m11_157 [label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="SchedulePoller.cs"];
m11_230 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", span="342-342", cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="SchedulePoller.cs"];
m11_231 [label="_stateMocks[state].Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), It.IsAny<string>()),\r\n                Times.Never)", span="344-346", cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="SchedulePoller.cs"];
m11_232 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", span="342-342", cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="SchedulePoller.cs"];
m11_111 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="SchedulePoller.cs"];
m11_95 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="SchedulePoller.cs"];
m11_124 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="SchedulePoller.cs"];
m11_215 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="SchedulePoller.cs"];
m11_47 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="SchedulePoller.cs"];
m11_0 [label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="36-36", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="SchedulePoller.cs"];
m11_5 [label="_failedException = new InvalidOperationException(''Hello'')", span="44-44", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="SchedulePoller.cs"];
m11_6 [label="_state = new FailedState(''SomeReason'', _failedException)", span="45-45", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="SchedulePoller.cs"];
m11_7 [label="Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="42-42", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="SchedulePoller.cs"];
m11_3 [label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string)", file="SchedulePoller.cs"];
m11_1 [label="_state = new SucceededState(''Some reason'')", span="38-38", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="SchedulePoller.cs"];
m11_4 [label="Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="42-42", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="SchedulePoller.cs"];
m11_2 [label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="36-36", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="SchedulePoller.cs"];
m11_8 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SchedulePoller.cs"];
m11_190 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="294-294", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="SchedulePoller.cs"];
m11_191 [label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="296-296", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="SchedulePoller.cs"];
m11_192 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="294-294", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="SchedulePoller.cs"];
m11_270 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SchedulePoller.cs"];
m11_254 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="365-365", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SchedulePoller.cs"];
m11_255 [label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="367-368", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SchedulePoller.cs"];
m11_256 [label="Assert.IsNotNull(entry)", span="369-369", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SchedulePoller.cs"];
m11_257 [label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="371-371", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SchedulePoller.cs"];
m11_258 [label="Assert.IsNotNull(history, entry)", span="372-372", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SchedulePoller.cs"];
m11_260 [label="Assert.IsTrue(history.ContainsKey(property.Key))", span="376-376", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SchedulePoller.cs"];
m11_261 [label="Assert.AreEqual(property.Value, history[property.Key])", span="377-377", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SchedulePoller.cs"];
m11_259 [label=_stateProperties, span="374-374", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SchedulePoller.cs"];
m11_262 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="365-365", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="SchedulePoller.cs"];
m11_156 [label="Entry HangFire.States.JobState.GetProperties()", span="18-18", cluster="HangFire.States.JobState.GetProperties()", file="SchedulePoller.cs"];
m11_142 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="217-217", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="SchedulePoller.cs"];
m11_143 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="219-224", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="SchedulePoller.cs"];
m11_144 [label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n            })", span="226-232", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="SchedulePoller.cs"];
m11_145 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="217-217", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="SchedulePoller.cs"];
m11_141 [label="Entry Unk.PopItemFromList", span="", cluster="Unk.PopItemFromList", file="SchedulePoller.cs"];
m11_101 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="SchedulePoller.cs"];
m11_75 [label="Entry TestStateChangingFilter.cstr", span="", cluster="TestStateChangingFilter.cstr", file="SchedulePoller.cs"];
m11_29 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="86-86", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m11_17 [label="Exit Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m11_263 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SchedulePoller.cs"];
m11_116 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="176-176", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="SchedulePoller.cs"];
m11_117 [label="Assert.AreEqual(name, _state.StateName)", span="178-178", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="SchedulePoller.cs"];
m11_118 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="176-176", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="SchedulePoller.cs"];
m11_66 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="96-96", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="SchedulePoller.cs"];
m11_67 [label="_stateChangingFilters.Add(new TestStateChangingFilter(name, _stateChangingResults))", span="98-98", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="SchedulePoller.cs"];
m11_68 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="96-96", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="SchedulePoller.cs"];
m11_10 [label="Entry Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m11_11 [label="!EnqueueNextScheduledJob()", span="49-49", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m11_12 [label="_enqueuedCount != 0", span="51-51", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m11_22 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="SchedulePoller.cs"];
m11_18 [label="Entry Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="71-71", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m11_64 [label="Entry Mock<JobStateDescriptor>.cstr", span="", cluster="Mock<JobStateDescriptor>.cstr", file="SchedulePoller.cs"];
m11_40 [label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SchedulePoller.cs"];
m11_236 [label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="350-350", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="SchedulePoller.cs"];
m11_237 [label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId)))", span="352-353", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="SchedulePoller.cs"];
m11_238 [label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="350-350", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="SchedulePoller.cs"];
m11_269 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="382-382", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SchedulePoller.cs"];
m11_264 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="382-382", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SchedulePoller.cs"];
m11_265 [label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="384-385", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SchedulePoller.cs"];
m11_266 [label=_stateProperties, span="387-387", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SchedulePoller.cs"];
m11_267 [label="Assert.IsTrue(stateEntry.ContainsKey(property.Key))", span="389-389", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SchedulePoller.cs"];
m11_268 [label="Assert.AreEqual(property.Value, stateEntry[property.Key])", span="390-390", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="SchedulePoller.cs"];
m11_79 [label="Entry HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", span="13-13", cluster="HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", file="SchedulePoller.cs"];
m11_31 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", color=green, community=0, file="SchedulePoller.cs"];
m11_26 [label="mock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="71-71", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SchedulePoller.cs"];
m11_30 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SchedulePoller.cs"];
m11_32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SchedulePoller.cs"];
m11_24 [label="var mock = new Mock<JobState>(''SomeReason'')", span="69-69", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SchedulePoller.cs"];
m11_25 [label="mock.Setup(x => x.StateName).Returns(state)", span="70-70", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SchedulePoller.cs"];
m11_27 [label="_stateMocks.Add(state, mock)", span="73-73", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SchedulePoller.cs"];
m11_28 [label="Exit HangFire.Tests.States.StateSteps.GivenAState(string)", span="67-67", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SchedulePoller.cs"];
m11_33 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SchedulePoller.cs"];
m11_80 [label="Entry HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="117-117", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SchedulePoller.cs"];
m11_81 [label="var transaction = Redis.Client.CreateTransaction()", span="119-119", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SchedulePoller.cs"];
m11_82 [label="_state.Apply(transaction, JobSteps.DefaultJobId)", span="121-121", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SchedulePoller.cs"];
m11_83 [label="transaction.Commit()", span="122-122", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SchedulePoller.cs"];
m11_84 [label="Exit HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="117-117", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="SchedulePoller.cs"];
m11_19 [label="Entry HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", span="61-61", cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="SchedulePoller.cs"];
m11_271 [label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="395-395", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_272 [label="Assert.AreEqual(table.RowCount, _stateChangingResults.Count)", span="397-397", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_274 [label="i < table.RowCount", span="399-399", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_275 [label="Assert.AreEqual(table.Rows[i][''Filter''], _stateChangingResults[i])", span="401-401", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_273 [label="var i = 0", span="399-399", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_276 [label="i++", span="399-399", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_277 [label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="395-395", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_251 [label="Entry lambda expression", span="360-360", cluster="lambda expression", file="SchedulePoller.cs"];
m11_37 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs"];
m11_35 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SchedulePoller.cs"];
m11_36 [label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57", cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SchedulePoller.cs"];
m11_39 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="SchedulePoller.cs"];
m11_49 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="SchedulePoller.cs"];
m11_52 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="SchedulePoller.cs"];
m11_55 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="SchedulePoller.cs"];
m11_50 [label="x[''Name'']", span="81-81", cluster="lambda expression", file="SchedulePoller.cs"];
m11_51 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="SchedulePoller.cs"];
m11_53 [label="x[''Value'']", span="81-81", cluster="lambda expression", file="SchedulePoller.cs"];
m11_54 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="SchedulePoller.cs"];
m11_56 [label="x.GetProperties()", span="82-82", cluster="lambda expression", file="SchedulePoller.cs"];
m11_57 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="SchedulePoller.cs"];
m11_125 [label="Entry lambda expression", span="191-197", cluster="lambda expression", file="SchedulePoller.cs"];
m11_126 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="193-193", cluster="lambda expression", file="SchedulePoller.cs"];
m11_127 [label="Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl)", span="194-196", cluster="lambda expression", file="SchedulePoller.cs"];
m11_128 [label="Exit lambda expression", span="191-197", cluster="lambda expression", file="SchedulePoller.cs"];
m11_146 [label="Entry lambda expression", span="226-232", cluster="lambda expression", file="SchedulePoller.cs"];
m11_147 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="228-228", cluster="lambda expression", file="SchedulePoller.cs"];
m11_148 [label="Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl)", span="229-231", cluster="lambda expression", file="SchedulePoller.cs"];
m11_149 [label="Exit lambda expression", span="226-232", cluster="lambda expression", file="SchedulePoller.cs"];
m11_221 [label="Entry lambda expression", span="337-337", cluster="lambda expression", file="SchedulePoller.cs"];
m11_222 [label="x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId))", span="337-337", cluster="lambda expression", file="SchedulePoller.cs"];
m11_223 [label="Exit lambda expression", span="337-337", cluster="lambda expression", file="SchedulePoller.cs"];
m11_224 [label="Entry lambda expression", span="337-337", cluster="lambda expression", file="SchedulePoller.cs"];
m11_227 [label="Entry lambda expression", span="337-337", cluster="lambda expression", file="SchedulePoller.cs"];
m11_225 [label="y != null", span="337-337", cluster="lambda expression", file="SchedulePoller.cs"];
m11_226 [label="Exit lambda expression", span="337-337", cluster="lambda expression", file="SchedulePoller.cs"];
m11_228 [label="y == JobSteps.DefaultJobId", span="337-337", cluster="lambda expression", file="SchedulePoller.cs"];
m11_229 [label="Exit lambda expression", span="337-337", cluster="lambda expression", file="SchedulePoller.cs"];
m11_233 [label="Entry lambda expression", span="345-345", cluster="lambda expression", file="SchedulePoller.cs"];
m11_234 [label="x.Apply(It.IsAny<IRedisTransaction>(), It.IsAny<string>())", span="345-345", cluster="lambda expression", file="SchedulePoller.cs"];
m11_235 [label="Exit lambda expression", span="345-345", cluster="lambda expression", file="SchedulePoller.cs"];
m11_239 [label="Entry lambda expression", span="353-353", cluster="lambda expression", file="SchedulePoller.cs"];
m11_240 [label="x.Unapply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId))", span="353-353", cluster="lambda expression", file="SchedulePoller.cs"];
m11_241 [label="Exit lambda expression", span="353-353", cluster="lambda expression", file="SchedulePoller.cs"];
m11_242 [label="Entry lambda expression", span="353-353", cluster="lambda expression", file="SchedulePoller.cs"];
m11_245 [label="Entry lambda expression", span="353-353", cluster="lambda expression", file="SchedulePoller.cs"];
m11_243 [label="y != null", span="353-353", cluster="lambda expression", file="SchedulePoller.cs"];
m11_244 [label="Exit lambda expression", span="353-353", cluster="lambda expression", file="SchedulePoller.cs"];
m11_246 [label="y == JobSteps.DefaultJobId", span="353-353", cluster="lambda expression", file="SchedulePoller.cs"];
m11_247 [label="Exit lambda expression", span="353-353", cluster="lambda expression", file="SchedulePoller.cs"];
m11_252 [label="x.Unapply(It.IsAny<IRedisTransaction>(), It.IsAny<string>())", span="360-360", cluster="lambda expression", file="SchedulePoller.cs"];
m11_253 [label="Exit lambda expression", span="360-360", cluster="lambda expression", file="SchedulePoller.cs"];
m11_196 [label="Entry Unk.SetContainsItem", span="", cluster="Unk.SetContainsItem", file="SchedulePoller.cs"];
m11_58 [label="Entry HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", span="86-86", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SchedulePoller.cs"];
m11_59 [label="Given(''a job'')", span="88-88", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SchedulePoller.cs"];
m11_60 [label="Given(''its state is Old'')", span="89-89", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SchedulePoller.cs"];
m11_61 [label="_oldStateDescriptorMock = new Mock<JobStateDescriptor>()", span="91-91", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SchedulePoller.cs"];
m11_62 [label="_descriptors.Add(''Old'', _oldStateDescriptorMock.Object)", span="92-92", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", color=red, community=0, file="SchedulePoller.cs"];
m11_63 [label="Exit HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", span="86-86", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="SchedulePoller.cs"];
m11_87 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="SchedulePoller.cs"];
m11_291 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SchedulePoller.cs"];
m11_170 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="267-267", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="SchedulePoller.cs"];
m11_171 [label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="269-269", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="SchedulePoller.cs"];
m11_172 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="267-267", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="SchedulePoller.cs"];
m11_85 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="SchedulePoller.cs"];
m11_102 [label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="150-150", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="SchedulePoller.cs"];
m11_103 [label="When(String.Format(\r\n                ''I change the state of the '{0}' job to the '{1}''',\r\n                JobSteps.DefaultJobId,\r\n                state))", span="152-155", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="SchedulePoller.cs"];
m11_104 [label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="150-150", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="SchedulePoller.cs"];
m11_129 [label="Entry Unk.GetTimeToLive", span="", cluster="Unk.GetTimeToLive", file="SchedulePoller.cs"];
m11_70 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SchedulePoller.cs"];
m11_9 [label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="SchedulePoller.cs"];
m11_76 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="111-111", cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="SchedulePoller.cs"];
m11_77 [label="_stateAppliedFilters.Add(new TestStateAppliedFilter(name, _stateAppliedResults))", span="113-113", cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="SchedulePoller.cs"];
m11_78 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="111-111", cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="SchedulePoller.cs"];
m11_181 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57", cluster="HangFire.JobHelper.FromTimestamp(long)", file="SchedulePoller.cs"];
m11_86 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="SchedulePoller.cs"];
m11_41 [label="Hangfire.Server.SchedulePoller", span="", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SchedulePoller.cs"];
m11_42 [label="Given(String.Format(''a '{0}' state'', state))", span="79-79", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SchedulePoller.cs"];
m11_43 [label="_stateProperties = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="81-81", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SchedulePoller.cs"];
m11_44 [label="_stateMocks[state].Setup(x => x.GetProperties()).Returns(_stateProperties)", span="82-82", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SchedulePoller.cs"];
m11_45 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="77-77", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="SchedulePoller.cs"];
m11_248 [label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="357-357", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="SchedulePoller.cs"];
m11_249 [label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.IsAny<IRedisTransaction>(), It.IsAny<string>()),\r\n                Times.Never)", span="359-361", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="SchedulePoller.cs"];
m11_250 [label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="357-357", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="SchedulePoller.cs"];
m11_214 [label="Entry Unk.RemoveStartFromList", span="", cluster="Unk.RemoveStartFromList", file="SchedulePoller.cs"];
m11_197 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="306-306", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="SchedulePoller.cs"];
m11_198 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="308-308", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="SchedulePoller.cs"];
m11_199 [label="Assert.AreEqual(state, job[''State''])", span="309-309", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="SchedulePoller.cs"];
m11_200 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="306-306", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="SchedulePoller.cs"];
m11_131 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="201-201", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="SchedulePoller.cs"];
m11_132 [label="Assert.AreEqual(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="203-205", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="SchedulePoller.cs"];
m11_133 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="201-201", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="SchedulePoller.cs"];
m11_278 [label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="406-406", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="SchedulePoller.cs"];
m11_279 [label="Assert.AreEqual(0, _stateChangingResults.Count)", span="408-408", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="SchedulePoller.cs"];
m11_280 [label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="406-406", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="SchedulePoller.cs"];
m11_23 [label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="67-67", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="SchedulePoller.cs"];
m11_65 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SchedulePoller.cs"];
m11_13 [label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", span="53-53", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m11_14 [label="_enqueuedCount = 0", span="54-54", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m11_15 [label="cancellationToken.WaitHandle.WaitOne(_pollInterval)", span="57-57", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m11_16 [label="_enqueuedCount++", span="62-62", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m11_217 [label="Entry HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="334-334", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="SchedulePoller.cs"];
m11_218 [label="_stateMocks[state].Verify(\r\n                x => x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId)), \r\n                Times.Once)", span="336-338", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="SchedulePoller.cs"];
m11_219 [label="Exit HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="334-334", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="SchedulePoller.cs"];
m11_94 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SchedulePoller.cs"];
m11_193 [label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="300-300", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="SchedulePoller.cs"];
m11_194 [label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="302-302", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="SchedulePoller.cs"];
m11_195 [label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="300-300", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="SchedulePoller.cs"];
m11_167 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="261-261", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="SchedulePoller.cs"];
m11_168 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="263-263", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="SchedulePoller.cs"];
m11_169 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="261-261", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="SchedulePoller.cs"];
m11_162 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="SchedulePoller.cs"];
m11_20 [label="_state = new EnqueuedState(''SomeReason'', ''test'')", span="63-63", cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="SchedulePoller.cs"];
m11_220 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SchedulePoller.cs"];
m11_136 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="209-209", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="SchedulePoller.cs"];
m11_137 [label="Assert.AreEqual(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="211-211", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="SchedulePoller.cs"];
m11_138 [label="Assert.AreEqual(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="212-213", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="SchedulePoller.cs"];
m11_139 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="209-209", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="SchedulePoller.cs"];
m11_164 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="255-255", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="SchedulePoller.cs"];
m11_165 [label="Assert.AreEqual(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="257-257", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="SchedulePoller.cs"];
m11_166 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="255-255", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="SchedulePoller.cs"];
m11_205 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="313-313", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_202 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="313-313", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_203 [label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="315-316", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_204 [label="DictionaryAssert.ContainsFollowingItems(table, stateEntry)", span="317-317", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_163 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="SchedulePoller.cs"];
m11_105 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SchedulePoller.cs"];
m11_182 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="SchedulePoller.cs"];
m11_134 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="SchedulePoller.cs"];
m11_120 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="182-182", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="SchedulePoller.cs"];
m11_121 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="184-189", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="SchedulePoller.cs"];
m11_122 [label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n                })", span="191-197", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="SchedulePoller.cs"];
m11_123 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="182-182", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="SchedulePoller.cs"];
m11_48 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SchedulePoller.cs"];
m11_130 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="SchedulePoller.cs"];
m11_201 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="SchedulePoller.cs"];
m11_213 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="321-321", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_207 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="321-321", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_208 [label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="323-324", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_212 [label="DictionaryAssert.ContainsFollowingItems(table, history)", span="330-330", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_209 [label="Assert.IsNotNull(entry)", span="325-325", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_210 [label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="327-327", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_211 [label="Assert.IsNotNull(history, entry)", span="328-328", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_46 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SchedulePoller.cs"];
m11_216 [label="Entry Unk.>", span="", cluster="Unk.>", file="SchedulePoller.cs"];
m11_180 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="SchedulePoller.cs"];
m11_140 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="SchedulePoller.cs"];
m11_21 [label="Exit HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", span="61-61", cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="SchedulePoller.cs"];
m11_106 [label="Entry Unk.When", span="", cluster="Unk.When", file="SchedulePoller.cs"];
m11_150 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="236-236", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="SchedulePoller.cs"];
m11_151 [label="Assert.AreEqual(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="238-238", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="SchedulePoller.cs"];
m11_152 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="236-236", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="SchedulePoller.cs"];
m11_153 [label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="242-242", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_154 [label="DictionaryAssert.ContainsFollowingItems(table, _state.GetProperties())", span="244-244", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_155 [label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="242-242", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="SchedulePoller.cs"];
m11_289 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="SchedulePoller.cs"];
m11_107 [label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="159-159", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="SchedulePoller.cs"];
m11_108 [label="var stateMachine = new StateMachine(\r\n                Redis.Client, _descriptors, _stateChangingFilters, _stateAppliedFilters)", span="161-162", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="SchedulePoller.cs"];
m11_109 [label="stateMachine.ChangeState(jobId, _stateMocks[state].Object)", span="163-163", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="SchedulePoller.cs"];
m11_110 [label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="159-159", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="SchedulePoller.cs"];
m11_290 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SchedulePoller.cs"];
m11_96 [label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="142-142", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="SchedulePoller.cs"];
m11_97 [label="var stateMachine = new StateMachine(\r\n                Redis.Client, _descriptors, _stateChangingFilters, _stateAppliedFilters)", span="144-145", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="SchedulePoller.cs"];
m11_98 [label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="146-146", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="SchedulePoller.cs"];
m11_99 [label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="142-142", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="SchedulePoller.cs"];
m11_135 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="SchedulePoller.cs"];
m11_88 [label="Entry HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="127-127", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SchedulePoller.cs"];
m11_89 [label="var transaction = Redis.Client.CreateTransaction()", span="129-129", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SchedulePoller.cs"];
m11_90 [label="StateMachine.Descriptors.ContainsKey(_state.StateName)", span="131-131", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SchedulePoller.cs"];
m11_91 [label="StateMachine.Descriptors[_state.StateName]\r\n                        .Unapply(transaction, JobSteps.DefaultJobId)", span="133-134", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SchedulePoller.cs"];
m11_92 [label="transaction.Commit()", span="137-137", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SchedulePoller.cs"];
m11_93 [label="Exit HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="127-127", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="SchedulePoller.cs"];
m11_206 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="SchedulePoller.cs"];
m11_69 [label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.States.JobState)", span="14-14", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.States.JobState)", file="SchedulePoller.cs"];
m11_292 [label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="425-425", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_293 [label="Assert.AreEqual(table.RowCount, _stateAppliedResults.Count)", span="427-427", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_295 [label="i < table.RowCount", span="429-429", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_296 [label="Assert.AreEqual(table.Rows[i][''Method''], _stateAppliedResults[i])", span="431-431", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_294 [label="var i = 0", span="429-429", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_297 [label="i++", span="429-429", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_298 [label="Exit HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="425-425", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="SchedulePoller.cs"];
m11_299 [label="HangFire.Tests.States.StateSteps", span="", file="SchedulePoller.cs"];
m12_25 [label="Entry HangFire.Common.States.StateApplyingContext.GetHandlers(string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>)", span="82-82", cluster="HangFire.Common.States.StateApplyingContext.GetHandlers(string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>)", file="SchedulePollerFacts.cs"];
m12_26 [label="var random = new Random()", span="85-85", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="SchedulePollerFacts.cs"];
m12_23 [label="Exit HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="41-41", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_19 [label="NewState.ExpireJobOnApply", span="69-69", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_27 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="36-36", cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SchedulePollerFacts.cs"];
m12_28 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State, HangFire.Common.JobMethod)", span="12-12", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State, HangFire.Common.JobMethod)", file="SchedulePollerFacts.cs"];
m12_29 [label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SchedulePollerFacts.cs"];
m12_33 [label="Hangfire.AutomaticRetryAttribute", span="", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="SchedulePollerFacts.cs"];
m12_21 [label="transaction.PersistJob(JobId)", span="75-75", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_30 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="SchedulePollerFacts.cs"];
m12_24 [label="Entry Unk.WarnFormat", span="", cluster="Unk.WarnFormat", file="SchedulePollerFacts.cs"];
m12_18 [label="filter.OnStateApplied(this, transaction)", span="66-66", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_20 [label="transaction.ExpireJob(JobId, JobExpirationTimeout)", span="71-71", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_0 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", span="28-28", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m12_1 [label="context == null", span="31-31", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m12_2 [label="throw new ArgumentNullException(''context'');", span="31-31", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m12_3 [label="_connection = context.Connection", span="33-33", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m12_4 [label="OldStateName = context.CurrentState", span="34-34", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m12_16 [label="handler.Apply(this, transaction)", span="61-61", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=green, community=0, file="SchedulePollerFacts.cs"];
m12_5 [label="NewState = context.CandidateState", span="35-35", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m12_15 [label="GetHandlers(NewState.StateName, handlers)", span="59-59", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_8 [label="Entry HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="41-41", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_11 [label="handler.Unapply(this, transaction)", span="49-49", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_12 [label=filters, span="52-52", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_14 [label="transaction.SetJobState(JobId, NewState, JobMethod)", span="57-57", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_6 [label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", span="28-28", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m12_9 [label="var transaction = _connection.CreateWriteTransaction()", span="45-45", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_7 [label="return;", span="41-41", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="SchedulePollerFacts.cs"];
m12_13 [label="filter.OnStateUnapplied(this, transaction)", span="54-54", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_10 [label="GetHandlers(OldStateName, handlers)", span="47-47", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_17 [label=filters, span="64-64", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SchedulePollerFacts.cs"];
m12_22 [label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="SchedulePollerFacts.cs"];
m12_34 [label="return handlers.ContainsKey(stateName) \r\n                ? handlers[stateName] \r\n                : Enumerable.Empty<JobStateHandler>();", span="85-87", cluster="HangFire.Common.States.StateApplyingContext.GetHandlers(string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>)", file="SchedulePollerFacts.cs"];
m12_35 [label="Exit HangFire.Common.States.StateApplyingContext.GetHandlers(string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>)", span="82-82", cluster="HangFire.Common.States.StateApplyingContext.GetHandlers(string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>)", file="SchedulePollerFacts.cs"];
m12_31 [label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="10-10", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SchedulePollerFacts.cs"];
m12_32 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="11-11", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="SchedulePollerFacts.cs"];
m12_36 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SchedulePollerFacts.cs"];
m12_37 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="SchedulePollerFacts.cs"];
m12_38 [label="HangFire.Common.States.StateApplyingContext", span="", file="SchedulePollerFacts.cs"];
m13_55 [label="Entry Unk.GetDescription", span="", cluster="Unk.GetDescription", file="StateChangeProcess.cs"];
m13_53 [label="Entry IOwinRequest.LinkTo(string)", span="22-22", cluster="IOwinRequest.LinkTo(string)", file="StateChangeProcess.cs"];
m13_52 [label="Entry HangFire.Dashboard.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Dashboard.Pages.LayoutPage.LayoutPage()", file="StateChangeProcess.cs"];
m13_58 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="StateChangeProcess.cs"];
m13_57 [label="Entry HangFire.Dashboard.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Dashboard.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="StateChangeProcess.cs"];
m13_51 [label="Entry HangFire.Dashboard.RazorPage.WriteLiteral(string)", span="57-57", cluster="HangFire.Dashboard.RazorPage.WriteLiteral(string)", file="StateChangeProcess.cs"];
m13_59 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateChangeProcess.cs"];
m13_54 [label="Entry HangFire.Dashboard.RazorPage.Write(object)", span="64-64", cluster="HangFire.Dashboard.RazorPage.Write(object)", file="StateChangeProcess.cs"];
m13_60 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateChangeProcess.cs"];
m13_0 [label="Entry HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", span="68-68", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_1 [label="WriteLiteral(''\r\n'')", span="72-72", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_2 [label="Layout = new LayoutPage { Title = ''Recurring jobs'' }", span="87-87", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="StateChangeProcess.cs"];
m13_3 [label="WriteLiteral(''\r\n'')", span="93-93", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_4 [label="RecurringJobs.Count == 0", span="98-98", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="StateChangeProcess.cs"];
m13_5 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No recurring jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="104-105", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="StateChangeProcess.cs"];
m13_6 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="117-119", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="StateChangeProcess.cs"];
m13_7 [label="Write(Request.LinkTo(''/recurring/trigger''))", span="124-124", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="StateChangeProcess.cs"];
m13_8 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Triggering...''''>\r\n                <span class=''''glyphicon glyphicon-play-circle''''></span>\r\n                Trigger now\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="129-136", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="StateChangeProcess.cs"];
m13_9 [label="Write(Request.LinkTo(''/recurring/remove''))", span="141-141", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="StateChangeProcess.cs"];
m13_10 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Removing...''''\r\n                    data-confirm=''''Do you really want to REMOVE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Remove\r\n            </button>\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>Cron</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right min-width''''>Next execution</th>\r\n                    <th class=''''align-right min-width''''>Last execution</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="146-168", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="StateChangeProcess.cs"];
m13_11 [label=RecurringJobs, span="173-173", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_12 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover\''>\r\n                        '' +\r\n''<td>\r\n                            <input type=\''checkbox\'' class=\''js-jobs-list-che'' +\r\n''ckbox\'' name=\''jobs[]\'' value=\'''')", span="179-181", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_48 [label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="407-407", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_13 [label="Write(job.Id)", span="186-186", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_15 [label="Write(job.Id)", span="197-197", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_17 [label="Write(CronExpressionDescriptor.ExpressionDescriptor.GetDescription(job.Cron))", span="207-207", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_19 [label="job.Job != null", span="217-217", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_22 [label="Write(HtmlHelper.DisplayMethod(job.Job))", span="230-230", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_25 [label="Write(job.LoadException.InnerException.Message)", span="252-252", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_28 [label="job.NextExecution != null", span="273-273", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_30 [label="Write(JobHelper.ToTimestamp(job.NextExecution.Value))", span="284-284", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_32 [label="Write(job.NextExecution.Value)", span="294-294", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_36 [label="job.LastExecution != null", span="327-327", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_38 [label="Write(Request.LinkTo(''/job/'' + job.LastJobId))", span="338-338", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_40 [label="Write(JobHelper.ToTimestamp(job.LastExecution.Value))", span="349-349", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_42 [label="Write(job.LastJobState != null && JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.LastJobState) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.LastJobState]) : null)", span="359-359", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_44 [label="Write(job.LastExecution.Value)", span="369-369", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_14 [label="WriteLiteral(''\'' />\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>'')", span="191-192", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_16 [label="WriteLiteral(''</td>\r\n                        <td class=\''min-width\''>'')", span="202-202", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_18 [label="WriteLiteral(''</td>\r\n                        <td>\r\n'')", span="212-212", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_20 [label="WriteLiteral(''                                '')", span="223-223", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_24 [label="WriteLiteral(''                                <em>'')", span="247-247", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_21 [label="WriteLiteral('' '')", span="225-225", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_23 [label="WriteLiteral(''\r\n'')", span="235-235", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_26 [label="WriteLiteral(''</em>\r\n'')", span="257-257", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_27 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''align-right min'' +\r\n''-width\''>\r\n'')", span="267-268", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_29 [label="WriteLiteral(''                                <span data-moment=\'''')", span="279-279", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_34 [label="WriteLiteral(''                                <em>N/A</em>\r\n'')", span="311-311", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_31 [label="WriteLiteral(''\''>\r\n                                    '')", span="289-289", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_33 [label="WriteLiteral(''\r\n                                </span>\r\n'')", span="299-299", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_35 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''align-right min'' +\r\n''-width\''>\r\n'')", span="321-322", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_37 [label="WriteLiteral(''                                <a href=\'''')", span="333-333", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_46 [label="WriteLiteral(''                                <em>N/A</em>\r\n'')", span="387-387", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_39 [label="WriteLiteral(''\''>\r\n                                    <span class=\''label label-default label-ho'' +\r\n''ver\'' data-moment=\'''')", span="343-344", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_41 [label="WriteLiteral(''\'' style=\'''')", span="354-354", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_43 [label="WriteLiteral(''\''>\r\n                                        '')", span="364-364", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_45 [label="WriteLiteral(''\r\n                                    </span>\r\n                                </'' +\r\n''a>\r\n'')", span="374-375", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_47 [label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="397-397", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_49 [label="WriteLiteral(''    '')", span="417-417", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_50 [label="Exit HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", span="68-68", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.Execute()", file="StateChangeProcess.cs"];
m13_56 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="StateChangeProcess.cs"];
m13_61 [label="HangFire.Dashboard.Pages.RecurringJobsPage", span="", file="StateChangeProcess.cs"];
m14_110 [label="Entry HangFire.Dashboard.Pages.FailedJobsPage.FailedJobsPage()", span="48-48", cluster="HangFire.Dashboard.Pages.FailedJobsPage.FailedJobsPage()", file="StateChangeProcessFacts.cs"];
m14_41 [label="Entry HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", span="157-157", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", file="StateChangeProcessFacts.cs"];
m14_134 [label="return String.Format(''{0}.Content.{1}'', typeof(GlobalDashboardRoutes).Namespace, contentFolder);", span="159-159", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", file="StateChangeProcessFacts.cs"];
m14_135 [label="Exit HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", span="157-157", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", file="StateChangeProcessFacts.cs"];
m14_136 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="StateChangeProcessFacts.cs"];
m14_44 [label="Entry HangFire.Dashboard.RouteCollection.AddBatchCommand(string, System.Action<string>)", span="39-39", cluster="HangFire.Dashboard.RouteCollection.AddBatchCommand(string, System.Action<string>)", file="StateChangeProcessFacts.cs"];
m14_77 [label="Entry HangFire.Dashboard.Pages.ProcessingJobsPage.ProcessingJobsPage()", span="43-43", cluster="HangFire.Dashboard.Pages.ProcessingJobsPage.ProcessingJobsPage()", file="StateChangeProcessFacts.cs"];
m14_40 [label="Entry HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", span="28-28", cluster="HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", file="StateChangeProcessFacts.cs"];
m14_0 [label="Entry HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="StateChangeProcessFacts.cs"];
m14_1 [label="Canceled = canceled", span="12-12", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_2 [label="Exception = exception", span="13-13", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_3 [label="Exit HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_4 [label="HangFire.Filters.PerformedContext", span="", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_7 [label="Routes.Add(''/fonts/glyphicons-halflings-regular/svg'', new EmbeddedResourceDispatcher(\r\n                ''image/svg+xml'',\r\n                typeof(GlobalDashboardRoutes).Assembly,\r\n                GetContentResourceName(''fonts'', ''glyphicons-halflings-regular.svg'')))", span="67-70", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_6 [label="Routes.Add(''/fonts/glyphicons-halflings-regular/eot'', new EmbeddedResourceDispatcher(\r\n                ''application/vnd.ms-fontobject'',\r\n                typeof(GlobalDashboardRoutes).Assembly,\r\n                GetContentResourceName(''fonts'', ''glyphicons-halflings-regular.eot'')))", span="62-65", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_8 [label="Routes.Add(''/fonts/glyphicons-halflings-regular/ttf'', new EmbeddedResourceDispatcher(\r\n                ''application/octet-stream'',\r\n                typeof(GlobalDashboardRoutes).Assembly,\r\n                GetContentResourceName(''fonts'', ''glyphicons-halflings-regular.ttf'')))", span="72-75", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_9 [label="Routes.Add(''/fonts/glyphicons-halflings-regular/woff'', new EmbeddedResourceDispatcher(\r\n                ''application/font-woff'',\r\n                typeof(GlobalDashboardRoutes).Assembly,\r\n                GetContentResourceName(''fonts'', ''glyphicons-halflings-regular.woff'')))", span="77-80", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_10 [label="Routes.AddRazorPage(''/job/(?<JobId>.+)'', x => new JobDetailsPage(x.Groups[''JobId''].Value))", span="86-86", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_11 [label="Routes.AddRazorPage(''/queues'', x => new QueuesPage())", span="88-88", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_12 [label="Routes.AddRazorPage(\r\n                ''/queues/fetched/(?<Queue>.+)'',\r\n                x => new FetchedJobsPage(x.Groups[''Queue''].Value))", span="89-91", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_19 [label="Routes.AddRazorPage(''/scheduled'', x => new ScheduledJobsPage())", span="108-108", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_18 [label="Routes.AddBatchCommand(\r\n                ''/processing/requeue'',\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName))", span="104-106", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_20 [label="Routes.AddBatchCommand(\r\n                ''/scheduled/enqueue'', \r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName))", span="110-112", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_21 [label="Routes.AddBatchCommand(\r\n                ''/scheduled/delete'',\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName))", span="114-116", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_22 [label="Routes.AddRazorPage(''/servers'', x => new ServersPage())", span="118-118", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_24 [label="Routes.AddBatchCommand(\r\n                ''/succeeded/requeue'',\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName))", span="120-122", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_23 [label="Routes.AddRazorPage(''/succeeded'', x => new SucceededJobs())", span="119-119", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_25 [label="Routes.AddRazorPage(''/failed'', x => new FailedJobsPage())", span="124-124", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_27 [label="Routes.AddBatchCommand(\r\n                ''/failed/delete'',\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName))", span="130-132", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_26 [label="Routes.AddBatchCommand(\r\n                ''/failed/requeue'',\r\n                jobId => BackgroundJob.Requeue(jobId, FailedState.StateName))", span="126-128", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_28 [label="Routes.AddRazorPage(''/deleted'', x => new DeletedJobsPage())", span="134-134", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_32 [label="Routes.AddRazorPage(''/recurring'', x => new RecurringJobsPage())", span="148-148", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_31 [label="Routes.AddCommand(\r\n                ''/actions/delete/(?<JobId>.+)'',\r\n                x => BackgroundJob.Delete(x.Groups[''JobId''].Value))", span="144-146", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_33 [label="Routes.AddBatchCommand(''/recurring/remove'', RecurringJob.RemoveIfExists)", span="149-149", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_13 [label="Routes.AddRazorPage(\r\n                ''/queues/(?<Queue>.+)'',\r\n                x => new EnqueuedJobsPage(x.Groups[''Queue''].Value))", span="92-94", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_16 [label="Routes.AddRazorPage(''/processing'', x => new ProcessingJobsPage())", span="99-99", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_5 [label="Routes.Add(''/css'', new CombinedResourceDispatcher(\r\n                ''text/css'',\r\n                typeof(GlobalDashboardRoutes).Assembly,\r\n                GetContentFolderNamespace(''css''),\r\n                Stylesheets))", span="56-60", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_17 [label="Routes.AddBatchCommand(\r\n                ''/processing/delete'', \r\n                jobId => BackgroundJob.Delete(jobId, ProcessingState.StateName))", span="100-102", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_14 [label="Routes.AddBatchCommand(''/enqueued/delete'', jobId => BackgroundJob.Delete(jobId))", span="96-96", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_15 [label="Routes.AddBatchCommand(''/enqueued/requeue'', jobId => BackgroundJob.Requeue(jobId))", span="97-97", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_29 [label="Routes.AddBatchCommand(\r\n                ''/deleted/requeue'',\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName))", span="136-138", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_34 [label="Routes.AddBatchCommand(''/recurring/trigger'', RecurringJob.Trigger)", span="150-150", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_30 [label="Routes.AddCommand(\r\n                ''/actions/requeue/(?<JobId>.+)'',\r\n                x => BackgroundJob.Requeue(x.Groups[''JobId''].Value))", span="140-142", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_35 [label="Exit HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", span="42-42", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="StateChangeProcessFacts.cs"];
m14_49 [label="Entry HangFire.Dashboard.Pages.DashboardPage.DashboardPage()", span="47-47", cluster="HangFire.Dashboard.Pages.DashboardPage.DashboardPage()", file="StateChangeProcessFacts.cs"];
m14_39 [label="Entry HangFire.Dashboard.RouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", span="28-28", cluster="HangFire.Dashboard.RouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", file="StateChangeProcessFacts.cs"];
m14_37 [label="Entry HangFire.Dashboard.RouteCollection.AddRazorPage(string, System.Func<System.Text.RegularExpressions.Match, HangFire.Dashboard.RazorPage>)", span="23-23", cluster="HangFire.Dashboard.RouteCollection.AddRazorPage(string, System.Func<System.Text.RegularExpressions.Match, HangFire.Dashboard.RazorPage>)", file="StateChangeProcessFacts.cs"];
m14_57 [label="Entry HangFire.Dashboard.Pages.QueuesPage.QueuesPage()", span="53-53", cluster="HangFire.Dashboard.Pages.QueuesPage.QueuesPage()", file="StateChangeProcessFacts.cs"];
m14_36 [label="Entry HangFire.Dashboard.RouteCollection.RouteCollection()", span="23-23", cluster="HangFire.Dashboard.RouteCollection.RouteCollection()", file="StateChangeProcessFacts.cs"];
m14_61 [label="Entry HangFire.Dashboard.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Dashboard.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="StateChangeProcessFacts.cs"];
m14_65 [label="Entry HangFire.Dashboard.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4", cluster="HangFire.Dashboard.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="StateChangeProcessFacts.cs"];
m14_69 [label="Entry HangFire.BackgroundJob.Delete(string)", span="152-152", cluster="HangFire.BackgroundJob.Delete(string)", file="StateChangeProcessFacts.cs"];
m14_89 [label="Entry HangFire.Dashboard.Pages.ScheduledJobsPage.ScheduledJobsPage()", span="43-43", cluster="HangFire.Dashboard.Pages.ScheduledJobsPage.ScheduledJobsPage()", file="StateChangeProcessFacts.cs"];
m14_45 [label="Entry HangFire.Dashboard.RouteCollection.AddCommand(string, System.Func<System.Text.RegularExpressions.Match, bool>)", span="31-31", cluster="HangFire.Dashboard.RouteCollection.AddCommand(string, System.Func<System.Text.RegularExpressions.Match, bool>)", file="StateChangeProcessFacts.cs"];
m14_38 [label="Entry HangFire.Dashboard.JsonStats.JsonStats()", span="24-24", cluster="HangFire.Dashboard.JsonStats.JsonStats()", file="StateChangeProcessFacts.cs"];
m14_43 [label="Entry HangFire.Dashboard.GlobalDashboardRoutes.GetContentResourceName(string, string)", span="162-162", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GetContentResourceName(string, string)", file="StateChangeProcessFacts.cs"];
m14_137 [label="return String.Format(''{0}.{1}'', GetContentFolderNamespace(contentFolder), resourceName);", span="164-164", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GetContentResourceName(string, string)", file="StateChangeProcessFacts.cs"];
m14_138 [label="Exit HangFire.Dashboard.GlobalDashboardRoutes.GetContentResourceName(string, string)", span="162-162", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GetContentResourceName(string, string)", file="StateChangeProcessFacts.cs"];
m14_120 [label="Entry HangFire.Dashboard.Pages.DeletedJobsPage.DeletedJobsPage()", span="49-49", cluster="HangFire.Dashboard.Pages.DeletedJobsPage.DeletedJobsPage()", file="StateChangeProcessFacts.cs"];
m14_73 [label="Entry HangFire.BackgroundJob.Requeue(string)", span="181-181", cluster="HangFire.BackgroundJob.Requeue(string)", file="StateChangeProcessFacts.cs"];
m14_103 [label="Entry HangFire.Dashboard.Pages.SucceededJobs.SucceededJobs()", span="54-54", cluster="HangFire.Dashboard.Pages.SucceededJobs.SucceededJobs()", file="StateChangeProcessFacts.cs"];
m14_124 [label="Entry lambda expression", span="142-142", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_46 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_54 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_86 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_93 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_104 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_114 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_130 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_47 [label="new DashboardPage()", span="45-45", cluster="lambda expression", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_48 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_55 [label="new QueuesPage()", span="88-88", cluster="lambda expression", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_56 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_87 [label="new ScheduledJobsPage()", span="108-108", cluster="lambda expression", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_88 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_131 [label="new RecurringJobsPage()", span="148-148", cluster="lambda expression", color=green, community=0, file="StateChangeProcessFacts.cs"];
m14_132 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_50 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_58 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_82 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_90 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_96 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_95 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_94 [label="BackgroundJob.Delete(jobId, ScheduledState.StateName)", span="116-116", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_100 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_107 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_106 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_105 [label="BackgroundJob.Requeue(jobId, SucceededState.StateName)", span="122-122", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_111 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_117 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_116 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_115 [label="BackgroundJob.Delete(jobId, FailedState.StateName)", span="132-132", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_127 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_62 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_74 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_52 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_51 [label="new JobDetailsPage(x.Groups[''JobId''].Value)", span="86-86", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_60 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_59 [label="new FetchedJobsPage(x.Groups[''Queue''].Value)", span="91-91", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_78 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_84 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_83 [label="BackgroundJob.Requeue(jobId, ProcessingState.StateName)", span="106-106", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_92 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_91 [label="BackgroundJob.Requeue(jobId, ScheduledState.StateName)", span="112-112", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_98 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_97 [label="new ServersPage()", span="118-118", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_66 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_70 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_121 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_102 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_101 [label="new SucceededJobs()", span="119-119", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_109 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_108 [label="new FailedJobsPage()", span="124-124", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_113 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_112 [label="BackgroundJob.Requeue(jobId, FailedState.StateName)", span="128-128", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_119 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_118 [label="new DeletedJobsPage()", span="134-134", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_129 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_128 [label="BackgroundJob.Delete(x.Groups[''JobId''].Value)", span="146-146", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_64 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_63 [label="new EnqueuedJobsPage(x.Groups[''Queue''].Value)", span="94-94", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_76 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_75 [label="new ProcessingJobsPage()", span="99-99", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_80 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_79 [label="BackgroundJob.Delete(jobId, ProcessingState.StateName)", span="102-102", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_68 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_67 [label="BackgroundJob.Delete(jobId)", span="96-96", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_72 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_71 [label="BackgroundJob.Requeue(jobId)", span="97-97", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_123 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_122 [label="BackgroundJob.Requeue(jobId, DeletedState.StateName)", span="138-138", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_125 [label="BackgroundJob.Requeue(x.Groups[''JobId''].Value)", span="142-142", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_126 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m14_99 [label="Entry HangFire.Dashboard.Pages.ServersPage.ServersPage()", span="53-53", cluster="HangFire.Dashboard.Pages.ServersPage.ServersPage()", file="StateChangeProcessFacts.cs"];
m14_53 [label="Entry HangFire.Dashboard.Pages.JobDetailsPage.JobDetailsPage(string)", span="4-4", cluster="HangFire.Dashboard.Pages.JobDetailsPage.JobDetailsPage(string)", file="StateChangeProcessFacts.cs"];
m14_42 [label="Entry HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="31-31", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateChangeProcessFacts.cs"];
m14_81 [label="Entry HangFire.BackgroundJob.Delete(string, string)", span="168-168", cluster="HangFire.BackgroundJob.Delete(string, string)", file="StateChangeProcessFacts.cs"];
m14_85 [label="Entry HangFire.BackgroundJob.Requeue(string, string)", span="197-197", cluster="HangFire.BackgroundJob.Requeue(string, string)", file="StateChangeProcessFacts.cs"];
m14_133 [label="Entry HangFire.Dashboard.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9", cluster="HangFire.Dashboard.Pages.RecurringJobsPage.RecurringJobsPage()", file="StateChangeProcessFacts.cs"];
m15_0 [label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="StateContext.cs"];
m15_1 [label="ContentType = ''application/javascript''", span="36-36", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", color=red, community=0, file="StateContext.cs"];
m15_2 [label="ContentEncoding = Encoding.UTF8", span="37-37", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", color=red, community=0, file="StateContext.cs"];
m15_3 [label="Exit HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="StateContext.cs"];
m15_4 [label="HangFire.Web.JavaScriptHandler", span="", file="StateContext.cs"];
m17_7 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="StateContextMock.cs"];
m17_0 [label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateContextMock.cs"];
m17_4 [label="_context = new Lazy<StateContext>(\r\n                () => new StateContext(JobIdValue, JobValue, CreatedAtValue))", span="16-17", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", color=green, community=0, file="StateContextMock.cs"];
m17_3 [label="CreatedAtValue = DateTime.UtcNow", span="14-14", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateContextMock.cs"];
m17_1 [label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateContextMock.cs"];
m17_2 [label="JobValue = Job.FromExpression(() => Console.WriteLine())", span="13-13", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateContextMock.cs"];
m17_5 [label="Exit Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateContextMock.cs"];
m17_15 [label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateContextMock.cs"];
m17_11 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="StateContextMock.cs"];
m17_8 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="StateContextMock.cs"];
m17_13 [label="new StateContext(JobIdValue, JobValue, CreatedAtValue)", span="17-17", cluster="lambda expression", color=green, community=0, file="StateContextMock.cs"];
m17_12 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="StateContextMock.cs"];
m17_14 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="StateContextMock.cs"];
m17_9 [label="Console.WriteLine()", span="13-13", cluster="lambda expression", file="StateContextMock.cs"];
m17_10 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="StateContextMock.cs"];
m17_6 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContextMock.cs"];
m17_16 [label="Hangfire.Core.Tests.StateContextMock", span="", file="StateContextMock.cs"];
m18_35 [label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69", cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="StateMachine.cs"];
m18_36 [label="return new SqlServerConnection(this, CreateAndOpenConnection());", span="71-71", cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="StateMachine.cs"];
m18_37 [label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69", cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="StateMachine.cs"];
m18_34 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="19-19", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="StateMachine.cs"];
m18_26 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="StateMachine.cs"];
m18_28 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="StateMachine.cs"];
m18_24 [label="Entry HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="StateMachine.cs"];
m18_53 [label="var connection = CreateAndOpenConnection()", span="91-91", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="StateMachine.cs"];
m18_54 [label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="93-93", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="StateMachine.cs"];
m18_55 [label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="94-94", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="StateMachine.cs"];
m18_56 [label="Exit HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89", cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="StateMachine.cs"];
m18_45 [label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33", cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="StateMachine.cs"];
m18_57 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateMachine.cs"];
m18_52 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="StateMachine.cs"];
m18_51 [label="Entry SqlConnection.cstr", span="", cluster="SqlConnection.cstr", file="StateMachine.cs"];
m18_27 [label="Entry HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="StateMachine.cs"];
m18_59 [label="var stream = assembly.GetManifestResourceStream(resourceName)", span="100-100", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="StateMachine.cs"];
m18_61 [label="return reader.ReadToEnd();", span="103-103", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="StateMachine.cs"];
m18_60 [label="var reader = new StreamReader(stream)", span="101-101", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="StateMachine.cs"];
m18_62 [label="Exit HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98", cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="StateMachine.cs"];
m18_63 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="StateMachine.cs"];
m18_31 [label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64", cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="StateMachine.cs"];
m18_32 [label="return new SqlServerMonitoringApi(CreateAndOpenConnection());", span="66-66", cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="StateMachine.cs"];
m18_33 [label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64", cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="StateMachine.cs"];
m18_44 [label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34", cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="StateMachine.cs"];
m18_2 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_7 [label="_options = options", span="35-35", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_8 [label="_connectionString = connectionString", span="36-36", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_10 [label="PrepareSchemaIfNecessary()", span="40-40", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_5 [label="options == null", span="33-33", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_9 [label="options.PrepareSchemaIfNecessary", span="38-38", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_3 [label="connectionString == null", span="32-32", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_6 [label="throw new ArgumentNullException(''options'');", span="33-33", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_4 [label="throw new ArgumentNullException(''connectionString'');", span="32-32", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_11 [label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachine.cs"];
m18_39 [label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="StateMachine.cs"];
m18_40 [label="yield return new SchedulePoller(this, _options.PollInterval);", span="76-76", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="StateMachine.cs"];
m18_41 [label="yield return new ServerWatchdog(this);", span="77-77", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="StateMachine.cs"];
m18_42 [label="yield return new ExpirationManager(this);", span="78-78", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="StateMachine.cs"];
m18_43 [label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="StateMachine.cs"];
m18_64 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="StateMachine.cs"];
m18_58 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StateMachine.cs"];
m18_38 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", span="16-16", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="StateMachine.cs"];
m18_30 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="StateMachine.cs"];
m18_29 [label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateMachine.cs"];
m18_47 [label="var connection = new SqlConnection(_connectionString)", span="83-83", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateMachine.cs"];
m18_48 [label="connection.Open()", span="84-84", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateMachine.cs"];
m18_49 [label="return connection;", span="86-86", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateMachine.cs"];
m18_50 [label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateMachine.cs"];
m18_65 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="StateMachine.cs"];
m18_23 [label="Entry Unk.Debug", span="", cluster="Unk.Debug", file="StateMachine.cs"];
m18_46 [label="Entry HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="27-27", cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="StateMachine.cs"];
m18_13 [label="Entry HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="StateMachine.cs"];
m18_19 [label="var connection = CreateAndOpenConnection()", span="56-56", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", color=green, community=0, file="StateMachine.cs"];
m18_18 [label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="54-54", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="StateMachine.cs"];
m18_20 [label="connection.Execute(script)", span="58-58", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="StateMachine.cs"];
m18_15 [label="!IsSqlEditionSupported(_connectionString)", span="48-48", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="StateMachine.cs"];
m18_17 [label="var script = GetStringResource(GetType().Assembly, ''HangFire.SqlServer.Install.sql'')", span="53-53", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="StateMachine.cs"];
m18_21 [label="Log.Debug(''HangFire SQL objects installed.'')", span="61-61", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="StateMachine.cs"];
m18_14 [label="Log.Debug(''Start installing HangFire SQL objects...'')", span="46-46", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="StateMachine.cs"];
m18_16 [label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="50-50", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="StateMachine.cs"];
m18_22 [label="Exit HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44", cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="StateMachine.cs"];
m18_25 [label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0", cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="StateMachine.cs"];
m18_66 [label="HangFire.SqlServer.SqlServerStorage", span="", file="StateMachine.cs"];
m19_10 [label="Entry Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", span="27-27", cluster="Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", file="StateMachineFactory.cs"];
m19_18 [label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachineFactory.cs"];
m19_9 [label="Entry Hangfire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22", cluster="Hangfire.States.StateHandlerCollection.StateHandlerCollection()", file="StateMachineFactory.cs"];
m19_11 [label="Entry Hangfire.JobStorage.GetStateHandlers()", span="63-63", cluster="Hangfire.JobStorage.GetStateHandlers()", file="StateMachineFactory.cs"];
m19_0 [label="Entry Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs"];
m19_1 [label="storage == null", span="27-27", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs"];
m19_5 [label="handlers.AddRange(storage.GetStateHandlers())", span="31-31", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", color=red, community=0, file="StateMachineFactory.cs"];
m19_2 [label="throw new ArgumentNullException(''storage'');", span="27-27", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs"];
m19_3 [label="var handlers = new StateHandlerCollection()", span="29-29", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", color=red, community=0, file="StateMachineFactory.cs"];
m19_4 [label="handlers.AddRange(GlobalStateHandlers.Handlers)", span="30-30", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", color=red, community=0, file="StateMachineFactory.cs"];
m19_6 [label="_stateChangeProcess = new StateChangeProcess(handlers)", span="33-33", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", color=red, community=0, file="StateMachineFactory.cs"];
m19_7 [label="Exit Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs"];
m19_13 [label="Entry Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="36-36", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m19_14 [label="connection == null", span="38-38", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m19_16 [label="return new StateMachine(connection, _stateChangeProcess);", span="40-40", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", color=red, community=0, file="StateMachineFactory.cs"];
m19_15 [label="throw new ArgumentNullException(''connection'');", span="38-38", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m19_17 [label="Exit Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="36-36", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m19_12 [label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.States.StateHandlerCollection)", span="30-30", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.States.StateHandlerCollection)", file="StateMachineFactory.cs"];
m19_19 [label="Hangfire.States.StateMachineFactory", span="", file="StateMachineFactory.cs"];
m20_0 [label="Entry HangFire.GlobalJobFilters.GlobalJobFilters()", span="6-6", cluster="HangFire.GlobalJobFilters.GlobalJobFilters()", file="StateMachineFacts.cs"];
m20_1 [label="Filters = new GlobalJobFilterCollection()", span="8-8", cluster="HangFire.GlobalJobFilters.GlobalJobFilters()", file="StateMachineFacts.cs"];
m20_2 [label="Exit HangFire.GlobalJobFilters.GlobalJobFilters()", span="6-6", cluster="HangFire.GlobalJobFilters.GlobalJobFilters()", file="StateMachineFacts.cs"];
m20_3 [label="Entry HangFire.Filters.GlobalJobFilterCollection.GlobalJobFilterCollection()", span="5-5", cluster="HangFire.Filters.GlobalJobFilterCollection.GlobalJobFilterCollection()", file="StateMachineFacts.cs"];
m21_56 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="StatisticsHistoryAttributeFacts.cs"];
m21_33 [label="Entry Hangfire.StatisticsHistoryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="30-30", cluster="Hangfire.StatisticsHistoryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StatisticsHistoryAttributeFacts.cs"];
m21_74 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="StatisticsHistoryAttributeFacts.cs"];
m21_12 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="StatisticsHistoryAttributeFacts.cs"];
m21_27 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", span="39-39", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m21_28 [label="_filter.OnStateElection(_context.Object)", span="41-41", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m21_29 [label="_connection.Verify(x => x.CreateWriteTransaction(), Times.Once)", span="43-43", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m21_30 [label="_transaction.Verify(x => x.Dispose(), Times.Once)", span="44-44", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m21_31 [label="_transaction.Verify(x => x.Commit())", span="45-45", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m21_32 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", span="39-39", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m21_58 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", span="67-67", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_59 [label="_context.CandidateStateValue = new ProcessingState(''server'', 1)", span="69-69", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_60 [label="_filter.OnStateElection(_context.Object)", span="71-71", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_61 [label="_connection.Verify(x => x.CreateWriteTransaction(), Times.Never)", span="73-73", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_62 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", span="67-67", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_57 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="StatisticsHistoryAttributeFacts.cs"];
m21_80 [label="Entry Unk.>", span="", cluster="Unk.>", file="StatisticsHistoryAttributeFacts.cs"];
m21_0 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", span="15-15", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m21_1 [label="_connection = new Mock<IStorageConnection>()", span="17-17", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m21_2 [label="_context = new ElectStateContextMock()", span="19-19", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m21_3 [label="_context.StateContextValue.ConnectionValue = _connection", span="20-20", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", color=green, community=0, file="StatisticsHistoryAttributeFacts.cs"];
m21_4 [label="_context.CandidateStateValue = new SucceededState(null, 11, 123)", span="21-21", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m21_5 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m21_6 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="24-24", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m21_7 [label="_filter = new StatisticsHistoryAttribute()", span="26-26", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m21_8 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", span="15-15", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m21_20 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", span="30-30", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m21_21 [label="var statisticsHistoryFilter = new StatisticsHistoryAttribute()", span="32-32", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m21_22 [label="var retryFilter = new AutomaticRetryAttribute()", span="33-33", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m21_23 [label="Assert.True(statisticsHistoryFilter.Order > retryFilter.Order)", span="35-35", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m21_24 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", span="30-30", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m21_11 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="StatisticsHistoryAttributeFacts.cs"];
m21_25 [label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="StatisticsHistoryAttributeFacts.cs"];
m21_10 [label="Entry Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="StatisticsHistoryAttributeFacts.cs"];
m21_75 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="StatisticsHistoryAttributeFacts.cs"];
m21_15 [label="Entry Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", span="25-25", cluster="Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", file="StatisticsHistoryAttributeFacts.cs"];
m21_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StatisticsHistoryAttributeFacts.cs"];
m21_41 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="StatisticsHistoryAttributeFacts.cs"];
m21_81 [label="Entry Unk.IncrementCounter", span="", cluster="Unk.IncrementCounter", file="StatisticsHistoryAttributeFacts.cs"];
m21_92 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_16 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_17 [label="x.CreateWriteTransaction()", span="24-24", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_18 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_35 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_38 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_42 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_36 [label="x.CreateWriteTransaction()", span="43-43", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_37 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_39 [label="x.Dispose()", span="44-44", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_40 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_43 [label="x.Commit()", span="45-45", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_44 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_64 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_65 [label="x.CreateWriteTransaction()", span="73-73", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_66 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_78 [label="x.IncrementCounter(\r\n                It.Is<string>(key => key == prefix + thisDay || key == prefix + prevDay),\r\n                It.Is<TimeSpan>(expire => expire.TotalDays >= 28))", span="84-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_83 [label="key == prefix + thisDay || key == prefix + prevDay", span="85-85", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_89 [label="x.IncrementCounter(\r\n                It.Is<string>(date => date == prefix + thisHour || date == prefix + prevHour),\r\n                TimeSpan.FromDays(1))", span="88-90", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_93 [label="date == prefix + thisHour || date == prefix + prevHour", span="89-89", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_77 [label="Entry lambda expression", span="84-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_88 [label="Entry lambda expression", span="88-90", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_79 [label="Exit lambda expression", span="84-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_82 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_85 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_84 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_86 [label="expire.TotalDays >= 28", span="86-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_87 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_90 [label="Exit lambda expression", span="88-90", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_94 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m21_34 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StatisticsHistoryAttributeFacts.cs"];
m21_50 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", span="76-76", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m21_67 [label="var thisDay = DateTime.UtcNow.ToString(''yyyy-MM-dd'')", span="78-78", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m21_71 [label="_transaction.Verify(x => x.IncrementCounter(\r\n                It.Is<string>(key => key == prefix + thisDay || key == prefix + prevDay),\r\n                It.Is<TimeSpan>(expire => expire.TotalDays >= 28)))", span="84-86", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m21_72 [label="_transaction.Verify(x => x.IncrementCounter(\r\n                It.Is<string>(date => date == prefix + thisHour || date == prefix + prevHour),\r\n                TimeSpan.FromDays(1)))", span="88-90", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m21_68 [label="var prevDay = DateTime.UtcNow.AddDays(-1).ToString(''yyyy-MM-dd'')", span="79-79", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m21_69 [label="var thisHour = DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')", span="81-81", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m21_70 [label="var prevHour = DateTime.UtcNow.AddHours(1).ToString(''yyyy-MM-dd-HH'')", span="82-82", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m21_73 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", span="76-76", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m21_76 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="StatisticsHistoryAttributeFacts.cs"];
m21_45 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StatisticsHistoryAttributeFacts.cs"];
m21_19 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="StatisticsHistoryAttributeFacts.cs"];
m21_26 [label="Entry Unk.True", span="", cluster="Unk.True", file="StatisticsHistoryAttributeFacts.cs"];
m21_51 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", span="57-57", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_52 [label="_context.CandidateStateValue = new FailedState(new InvalidOperationException())", span="59-59", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_53 [label="_filter.OnStateElection(_context.Object)", span="61-61", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_54 [label="VerifyCountersIncremented(''stats:failed:'')", span="63-63", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_55 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", span="57-57", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StatisticsHistoryAttributeFacts.cs"];
m21_46 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", span="49-49", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_47 [label="_filter.OnStateElection(_context.Object)", span="51-51", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_48 [label="VerifyCountersIncremented(''stats:succeeded:'')", span="53-53", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_49 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", span="49-49", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", file="StatisticsHistoryAttributeFacts.cs"];
m21_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StatisticsHistoryAttributeFacts.cs"];
m21_63 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27", cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="StatisticsHistoryAttributeFacts.cs"];
m21_95 [label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts", span="", file="StatisticsHistoryAttributeFacts.cs"];
m21_96 [label=string, span="", file="StatisticsHistoryAttributeFacts.cs"];
m21_97 [label=thisDay, span="", file="StatisticsHistoryAttributeFacts.cs"];
m21_98 [label=prevDay, span="", file="StatisticsHistoryAttributeFacts.cs"];
m21_99 [label=thisHour, span="", file="StatisticsHistoryAttributeFacts.cs"];
m21_100 [label=prevHour, span="", file="StatisticsHistoryAttributeFacts.cs"];
m22_16 [label="Entry Unk.ErrorFormat", span="", cluster="Unk.ErrorFormat", file="Worker.cs"];
m22_4 [label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="35-35", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_5 [label="var failedState = context.CandidateState as FailedState", span="37-37", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_8 [label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="44-44", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_10 [label="ScheduleAgainLater(context, retryAttempt, failedState)", span="48-48", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_12 [label="Logger.ErrorFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred.'',\r\n                        failedState.Exception,\r\n                        context.JobId)", span="54-57", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_6 [label="failedState == null", span="38-38", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_7 [label="return;", span="41-41", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_9 [label="retryAttempt <= Attempts", span="46-46", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_11 [label=LogEvents, span="52-52", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_13 [label="Exit Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="35-35", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="Worker.cs"];
m22_26 [label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="Worker.cs"];
m22_23 [label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="94-94", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="Worker.cs"];
m22_29 [label="var random = new Random()", span="96-96", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="Worker.cs"];
m22_30 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="97-98", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="Worker.cs"];
m22_31 [label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="94-94", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="Worker.cs"];
m22_27 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Worker.cs"];
m22_14 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="Worker.cs"];
m22_32 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="Worker.cs"];
m22_34 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="Worker.cs"];
m22_15 [label="Entry Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="68-68", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="Worker.cs"];
m22_17 [label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="70-70", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="Worker.cs"];
m22_18 [label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="72-72", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="Worker.cs"];
m22_19 [label="context.CandidateState = new ScheduledState(delay)\r\n		    {\r\n			    Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n		    }", span="76-79", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="Worker.cs"];
m22_21 [label="Logger.WarnFormat(\r\n				    ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n				    failedState.Exception,\r\n				    context.JobId,\r\n				    retryAttempt,\r\n				    Attempts,\r\n				    delay)", span="83-89", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="Worker.cs"];
m22_20 [label=LogEvents, span="81-81", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="Worker.cs"];
m22_22 [label="Exit Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="68-68", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="Worker.cs"];
m22_24 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="Worker.cs"];
m22_33 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="Worker.cs"];
m22_35 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="Worker.cs"];
m22_0 [label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="Worker.cs"];
m22_1 [label="Attempts = DefaultRetryAttempts", span="16-16", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="Worker.cs"];
m22_2 [label="LogEvents = true", span="17-17", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="Worker.cs"];
m22_3 [label="Exit Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="Worker.cs"];
m22_25 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="Worker.cs"];
m22_28 [label="Entry Unk.WarnFormat", span="", cluster="Unk.WarnFormat", file="Worker.cs"];
m22_36 [label="Hangfire.AutomaticRetryAttribute", span="", file="Worker.cs"];
n9 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
n9 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
n9 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n2 -> n6  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n8  [key=2, style=dotted];
n6 -> n0  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d3  [key=0, style=solid, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d0 -> d6  [key=1, style=dashed, color=green, label="Hangfire.States.IState"];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.States.IState>"];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label=string];
d0 -> d7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.States.IState>"];
d2 -> d9  [key=0, style=solid, color=green];
d2 -> d10  [key=2, style=dotted, color=green];
d3 -> d4  [key=0, style=solid];
d3 -> d5  [key=0, style=solid];
d6 -> d7  [key=0, style=solid, color=green];
d12 -> d6  [key=1, style=dashed, color=green, label="Hangfire.States.ApplyStateContext"];
d12 -> d5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
d12 -> d7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
d12 -> d8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
d5 -> d6  [key=0, style=solid, color=green];
d7 -> d8  [key=0, style=solid];
d9 -> d0  [key=0, style=bold, color=blue];
d4 -> d9  [key=0, style=solid];
d4 -> d10  [key=2, style=dotted];
d8 -> d9  [key=0, style=solid];
d8 -> n8  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_17  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_66  [key=2, style=dotted];
m0_91 -> m0_67  [key=2, style=dotted];
m0_91 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_93 -> m0_34  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_21  [key=2, style=dotted];
m0_92 -> m0_16  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_95 -> m0_90  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid, color=green];
m0_26 -> m0_16  [key=2, style=dotted, color=green];
m0_27 -> m0_28  [key=0, style=solid, color=green];
m0_27 -> m0_17  [key=2, style=dotted, color=green];
m0_28 -> m0_26  [key=0, style=bold, color=blue];
m0_28 -> m0_25  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid, color=red];
m0_9 -> m0_9  [key=3, color=darkorchid, style=bold, label="Local variable int removedCount"];
m0_24 -> m0_29  [key=0, style=solid];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid, color=green];
m0_30 -> m0_24  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid, color=green];
m0_30 -> m0_16  [key=2, style=dotted, color=green];
m0_21 -> m0_22  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_7 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_19  [key=2, style=dotted];
m0_12 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=2, style=dotted];
m0_15 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_15 -> m0_12  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid, color=red];
m0_10 -> m0_18  [key=2, style=dotted, color=red];
m0_10 -> m0_21  [key=1, style=dashed, color=red, label="lambda expression"];
m0_10 -> m0_14  [key=1, style=dashed, color=red, label=removedCount];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=0, style=solid];
m0_14 -> m0_9  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_17  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_20  [key=2, style=dotted];
m0_13 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_13 -> m0_16  [key=2, style=dotted];
m0_16 -> m0_7  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_44 -> m0_99  [key=0, style=solid];
m0_99 -> m0_16  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_100 -> m0_44  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_37 -> m0_38  [key=0, style=solid, color=green];
m0_37 -> m0_44  [key=2, style=dotted, color=green];
m0_38 -> m0_34  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid, color=green];
m0_41 -> m0_46  [key=2, style=dotted, color=green];
m0_40 -> m0_41  [key=0, style=solid, color=green];
m0_40 -> m0_45  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_47  [key=2, style=dotted];
m0_42 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_21  [key=2, style=dotted];
m0_43 -> m0_36  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_34  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_35  [key=2, style=dotted];
m0_53 -> m0_44  [key=2, style=dotted];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_54 -> m0_59  [key=2, style=dotted];
m0_58 -> m0_52  [key=0, style=bold, color=blue];
m0_60 -> m0_61  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_66  [key=2, style=dotted];
m0_61 -> m0_67  [key=2, style=dotted];
m0_61 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_63 -> m0_34  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_35  [key=2, style=dotted];
m0_62 -> m0_44  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_65 -> m0_60  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid, color=green];
m0_31 -> m0_34  [key=2, style=dotted, color=green];
m0_31 -> m0_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.CountersAggregator"];
m0_31 -> m0_4  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.CountersAggregator"];
m0_31 -> m0_10  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.CountersAggregator"];
m0_31 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_35  [key=2, style=dotted];
m0_33 -> m0_29  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=2, style=dotted];
m0_22 -> m0_25  [key=2, style=dotted];
m0_23 -> m0_21  [key=0, style=bold, color=blue];
m0_23 -> m0_16  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_50 -> m0_48  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_51  [key=2, style=dotted];
m0_70 -> m0_68  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=2, style=dotted];
m0_80 -> m0_78  [key=0, style=bold, color=blue];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_71  [key=2, style=dotted];
m0_89 -> m0_87  [key=0, style=bold, color=blue];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_71  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_71  [key=2, style=dotted];
m0_98 -> m0_96  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_66  [key=2, style=dotted];
m0_82 -> m0_67  [key=2, style=dotted];
m0_82 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_84 -> m0_34  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_21  [key=2, style=dotted];
m0_83 -> m0_16  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_86 -> m0_81  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorage"];
m0_0 -> m0_4  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=0, style=solid, color=red];
m0_1 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid, color=red];
m0_3 -> m0_11  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid, color=red];
m0_2 -> m0_5  [key=0, style=solid];
m0_2 -> d10  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_10  [key=2, style=dotted, color=green];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_66  [key=2, style=dotted];
m0_73 -> m0_67  [key=2, style=dotted];
m0_73 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_75 -> m0_34  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_21  [key=2, style=dotted];
m0_74 -> m0_16  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_77 -> m0_72  [key=0, style=bold, color=blue];
m0_19 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_19 -> m0_20  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_6 -> m0_7  [key=0, style=solid];
m0_101 -> m0_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_31  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_41  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m0_101 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_8  [key=2, style=dotted, color=red];
m1_4 -> m1_9  [key=2, style=dotted, color=green];
m1_5 -> m1_5  [key=0, style=solid, color=green];
m1_5 -> m1_8  [key=2, style=dotted, color=green];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid, color=red];
m1_9 -> m1_12  [key=0, style=solid, color=green];
m1_10 -> m1_11  [key=0, style=solid, color=red];
m1_10 -> m1_12  [key=2, style=dotted, color=red];
m1_12 -> m1_11  [key=0, style=solid, color=green];
m1_12 -> d0  [key=2, style=dotted, color=green];
m1_11 -> m1_9  [key=0, style=bold, color=blue];
m1_13 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_13 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_13 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_13 -> m1_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_13 -> m1_10  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_13 -> m1_5  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_13 -> m1_12  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_4  [key=0, style=bold, color=blue];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m2_34 -> m2_41  [key=1, style=dashed, color=red, label=string];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid, color=red];
m2_41 -> m2_44  [key=2, style=dotted, color=red];
m2_36 -> m2_42  [key=0, style=solid];
m2_36 -> d10  [key=2, style=dotted];
m2_38 -> m2_42  [key=0, style=solid];
m2_38 -> d10  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_30  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid, color=red];
m2_40 -> m2_43  [key=2, style=dotted];
m2_42 -> m2_34  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m2_6 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
m2_6 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m2_6 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m2_6 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_8 -> m2_16  [key=0, style=solid];
m2_8 -> d10  [key=2, style=dotted];
m2_10 -> m2_16  [key=0, style=solid];
m2_10 -> d10  [key=2, style=dotted];
m2_12 -> m2_16  [key=0, style=solid];
m2_12 -> d10  [key=2, style=dotted];
m2_16 -> m2_6  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m2_18 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_31  [key=2, style=dotted];
m2_24 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_20 -> m2_29  [key=0, style=solid];
m2_20 -> d10  [key=2, style=dotted];
m2_22 -> m2_29  [key=0, style=solid];
m2_22 -> d10  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_30  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_32  [key=2, style=dotted];
m2_26 -> m2_29  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_33  [key=2, style=dotted];
m2_29 -> m2_18  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_2  [key=0, style=bold, color=blue];
m2_45 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m2_45 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m2_45 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m2_45 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m2_45 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m2_45 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m2_45 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m2_45 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m3_31 -> m3_163  [key=0, style=solid];
m3_163 -> m3_31  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_11  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_36  [key=2, style=dotted];
m3_33 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_37  [key=2, style=dotted];
m3_35 -> m3_32  [key=0, style=bold, color=blue];
m3_77 -> m3_78  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_82  [key=2, style=dotted];
m3_78 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_36  [key=2, style=dotted];
m3_79 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_37  [key=2, style=dotted];
m3_81 -> m3_77  [key=0, style=bold, color=blue];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_12  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_60  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_59 -> m3_56  [key=0, style=bold, color=blue];
m3_95 -> m3_96  [key=0, style=solid];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_82  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_27  [key=2, style=dotted];
m3_98 -> m3_100  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_99 -> m3_95  [key=0, style=bold, color=blue];
m3_105 -> m3_106  [key=0, style=solid];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_82  [key=2, style=dotted];
m3_106 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_106 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_107 -> m3_13  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_36  [key=2, style=dotted];
m3_107 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_36  [key=2, style=dotted];
m3_108 -> m3_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_108 -> m3_110  [key=1, style=dashed, color=darkseagreen4, label=exception];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_112  [key=2, style=dotted];
m3_110 -> m3_36  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_111 -> m3_105  [key=0, style=bold, color=blue];
m3_137 -> m3_138  [key=0, style=solid];
m3_140 -> m3_141  [key=0, style=solid, color=green];
m3_140 -> m3_100  [key=2, style=dotted, color=green];
m3_140 -> m3_142  [key=1, style=dashed, color=green, label="lambda expression"];
m3_139 -> m3_140  [key=0, style=solid, color=green];
m3_139 -> m3_127  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_82  [key=2, style=dotted];
m3_141 -> m3_137  [key=0, style=bold, color=blue];
m3_42 -> m3_43  [key=0, style=solid];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_36  [key=2, style=dotted];
m3_43 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_37  [key=2, style=dotted];
m3_45 -> m3_42  [key=0, style=bold, color=blue];
m3_86 -> m3_87  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_82  [key=2, style=dotted];
m3_87 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_36  [key=2, style=dotted];
m3_88 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_37  [key=2, style=dotted];
m3_90 -> m3_86  [key=0, style=bold, color=blue];
m3_61 -> m3_62  [key=0, style=solid];
m3_142 -> m3_143  [key=0, style=solid, color=green];
m3_143 -> m3_144  [key=0, style=solid, color=green];
m3_143 -> m3_127  [key=2, style=dotted, color=green];
m3_144 -> m3_142  [key=0, style=bold, color=blue];
m3_150 -> m3_151  [key=0, style=solid, color=green];
m3_151 -> m3_152  [key=0, style=solid, color=green];
m3_151 -> m3_127  [key=2, style=dotted, color=green];
m3_152 -> m3_150  [key=0, style=bold, color=blue];
m3_160 -> m3_161  [key=0, style=solid, color=green];
m3_161 -> m3_162  [key=0, style=solid, color=green];
m3_161 -> m3_127  [key=2, style=dotted, color=green];
m3_162 -> m3_160  [key=0, style=bold, color=blue];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_41  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_41  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_41  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_41  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_27  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_94  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_27  [key=2, style=dotted];
m3_125 -> m3_127  [key=2, style=dotted];
m3_125 -> m3_126  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_26 -> m3_24  [key=0, style=bold, color=blue];
m3_28 -> m3_29  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_40 -> m3_38  [key=0, style=bold, color=blue];
m3_46 -> m3_47  [key=0, style=solid];
m3_48 -> m3_46  [key=0, style=bold, color=blue];
m3_53 -> m3_54  [key=0, style=solid];
m3_55 -> m3_53  [key=0, style=bold, color=blue];
m3_68 -> m3_69  [key=0, style=solid];
m3_70 -> m3_68  [key=0, style=bold, color=blue];
m3_74 -> m3_75  [key=0, style=solid];
m3_76 -> m3_74  [key=0, style=bold, color=blue];
m3_83 -> m3_84  [key=0, style=solid];
m3_85 -> m3_83  [key=0, style=bold, color=blue];
m3_91 -> m3_92  [key=0, style=solid];
m3_93 -> m3_91  [key=0, style=bold, color=blue];
m3_101 -> m3_102  [key=0, style=solid];
m3_113 -> m3_114  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_118 -> m3_116  [key=0, style=bold, color=blue];
m3_124 -> m3_125  [key=0, style=solid];
m3_126 -> m3_124  [key=0, style=bold, color=blue];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_136  [key=2, style=dotted];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=2, style=dotted];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=2, style=dotted];
m3_102 -> m3_36  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_104  [key=2, style=dotted];
m3_114 -> m3_36  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_104  [key=2, style=dotted];
m3_103 -> m3_101  [key=0, style=bold, color=blue];
m3_115 -> m3_113  [key=0, style=bold, color=blue];
m3_133 -> m3_134  [key=0, style=solid];
m3_135 -> m3_133  [key=0, style=bold, color=blue];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_64  [key=2, style=dotted];
m3_63 -> m3_61  [key=0, style=bold, color=blue];
m3_82 -> m3_164  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_41  [key=2, style=dotted];
m3_165 -> m3_82  [key=0, style=bold, color=blue];
m3_65 -> m3_66  [key=0, style=solid];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_60  [key=2, style=dotted];
m3_66 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_67 -> m3_65  [key=0, style=bold, color=blue];
m3_119 -> m3_120  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_82  [key=2, style=dotted];
m3_120 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_36  [key=2, style=dotted];
m3_121 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_37  [key=2, style=dotted];
m3_123 -> m3_119  [key=0, style=bold, color=blue];
m3_145 -> m3_146  [key=0, style=solid];
m3_148 -> m3_149  [key=0, style=solid, color=green];
m3_148 -> m3_100  [key=2, style=dotted, color=green];
m3_148 -> m3_150  [key=1, style=dashed, color=green, label="lambda expression"];
m3_147 -> m3_148  [key=0, style=solid, color=green];
m3_147 -> m3_127  [key=2, style=dotted];
m3_146 -> m3_147  [key=0, style=solid];
m3_146 -> m3_82  [key=2, style=dotted];
m3_149 -> m3_145  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_12  [key=2, style=dotted];
m3_3 -> m3_13  [key=2, style=dotted];
m3_3 -> m3_14  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_15  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_16  [key=2, style=dotted];
m3_6 -> m3_13  [key=2, style=dotted];
m3_6 -> m3_14  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_17  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_18  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_19  [key=2, style=dotted];
m3_9 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_10 -> m3_0  [key=0, style=bold, color=blue];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_36  [key=2, style=dotted];
m3_50 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_37  [key=2, style=dotted];
m3_52 -> m3_49  [key=0, style=bold, color=blue];
m3_153 -> m3_154  [key=0, style=solid, color=green];
m3_154 -> m3_155  [key=0, style=solid, color=green];
m3_154 -> m3_13  [key=2, style=dotted, color=green];
m3_154 -> m3_14  [key=2, style=dotted, color=green];
m3_154 -> m3_160  [key=1, style=dashed, color=green, label="lambda expression"];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_82  [key=2, style=dotted];
m3_156 -> m3_127  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_159  [key=2, style=dotted];
m3_158 -> m3_153  [key=0, style=bold, color=blue];
m3_128 -> m3_129  [key=0, style=solid];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_82  [key=2, style=dotted];
m3_129 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_130 -> m3_36  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_131 -> m3_37  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_132 -> m3_128  [key=0, style=bold, color=blue];
m3_71 -> m3_72  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_60  [key=2, style=dotted];
m3_72 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_73 -> m3_71  [key=0, style=bold, color=blue];
m3_166 -> m3_140  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_143  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_148  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_151  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_154  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_161  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_120  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_146  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_166 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_167 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_168 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_169 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_170 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_171 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_0 -> m4_3  [key=1, style=dashed, color=green, label="Hangfire.States.IStateMachine"];
m4_0 -> m4_5  [key=1, style=dashed, color=green, label="Hangfire.States.IState"];
m4_0 -> m4_8  [key=1, style=dashed, color=green, label=IStorageConnection];
m4_0 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m4_0 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachine"];
m4_0 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_3  [key=0, style=solid, color=green];
m4_1 -> m4_54  [key=2, style=dotted];
m4_2 -> m4_11  [key=0, style=solid, color=green];
m4_2 -> d10  [key=2, style=dotted, color=green];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_55  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_3 -> m4_5  [key=0, style=solid, color=green];
m4_4 -> m4_11  [key=0, style=solid, color=green];
m4_4 -> d10  [key=2, style=dotted, color=green];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_56  [key=2, style=dotted];
m4_4 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label=from];
m4_5 -> m4_6  [key=0, style=solid, color=green];
m4_5 -> m4_7  [key=0, style=solid, color=green];
m4_5 -> m4_56  [key=2, style=dotted];
m4_6 -> m4_11  [key=0, style=solid, color=green];
m4_6 -> d10  [key=2, style=dotted, color=green];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_57  [key=2, style=dotted];
m4_6 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m4_7 -> m4_8  [key=0, style=solid, color=green];
m4_7 -> m4_58  [key=2, style=dotted];
m4_7 -> m4_59  [key=2, style=dotted];
m4_7 -> m4_60  [key=2, style=dotted];
m4_7 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=pager];
m4_7 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=pager];
m4_7 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label=pager];
m4_8 -> m4_9  [key=0, style=solid, color=green];
m4_8 -> m4_61  [key=2, style=dotted];
m4_8 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_54  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=0, style=solid];
m4_11 -> m4_0  [key=0, style=bold, color=blue];
m4_11 -> m4_53  [key=0, style=solid];
m4_11 -> m4_54  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid, color=green];
m4_13 -> m4_60  [key=2, style=dotted];
m4_13 -> m4_62  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid, color=green];
m4_14 -> m4_16  [key=2, style=dotted, color=green];
m4_14 -> m4_17  [key=2, style=dotted, color=green];
m4_14 -> m4_54  [key=2, style=dotted];
m4_15 -> m4_13  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_63  [key=2, style=dotted];
m4_15 -> m4_64  [key=2, style=dotted];
m4_15 -> m4_62  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_54  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid, color=green];
m4_18 -> m4_54  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid, color=green];
m4_19 -> m4_21  [key=2, style=dotted, color=green];
m4_19 -> m4_22  [key=2, style=dotted, color=green];
m4_19 -> m4_62  [key=2, style=dotted];
m4_19 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_54  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_68  [key=2, style=dotted];
m4_52 -> m4_64  [key=2, style=dotted];
m4_52 -> m4_62  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_51  [key=0, style=solid];
m4_17 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_54  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_54  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_54  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_62  [key=2, style=dotted];
m4_21 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_21 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_27  [key=0, style=solid];
m4_23 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_23 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_23 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_23 -> m4_8  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_14  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_19  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_54  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_54  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_62  [key=2, style=dotted];
m4_25 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_25 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_60  [key=2, style=dotted];
m4_28 -> m4_62  [key=2, style=dotted];
m4_28 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_28 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_54  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_54  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_65  [key=2, style=dotted];
m4_30 -> m4_62  [key=2, style=dotted];
m4_30 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_30 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_54  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=0, style=solid];
m4_32 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_32 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_54  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_54  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=0, style=solid];
m4_35 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_35 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_36 -> m4_50  [key=0, style=solid];
m4_36 -> m4_54  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_54  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_60  [key=2, style=dotted];
m4_38 -> m4_62  [key=2, style=dotted];
m4_38 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_38 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_54  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_66  [key=2, style=dotted];
m4_40 -> m4_62  [key=2, style=dotted];
m4_40 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_40 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_54  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_49  [key=0, style=solid];
m4_43 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_43 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_54  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_54  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_54  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_67  [key=2, style=dotted];
m4_45 -> m4_62  [key=2, style=dotted];
m4_45 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_45 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_54  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_62  [key=2, style=dotted];
m4_47 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_54  [key=2, style=dotted];
m4_50 -> m4_17  [key=0, style=solid];
m4_50 -> m4_54  [key=2, style=dotted];
m4_53 -> m4_0  [key=0, style=bold, color=blue];
m4_69 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m4_69 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.DeletedJobsPage"];
m5_74 -> m5_75  [key=0, style=solid];
m5_75 -> m5_46  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_77 -> m5_68  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_76 -> m5_67  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_78 -> m5_74  [key=0, style=bold, color=blue];
m5_62 -> m5_63  [key=0, style=solid, color=green];
m5_63 -> m5_64  [key=0, style=solid, color=green];
m5_63 -> m5_46  [key=2, style=dotted, color=green];
m5_64 -> m5_65  [key=0, style=solid, color=green];
m5_64 -> m5_67  [key=2, style=dotted, color=green];
m5_65 -> m5_66  [key=0, style=solid, color=green];
m5_65 -> m5_68  [key=2, style=dotted, color=green];
m5_65 -> m5_69  [key=1, style=dashed, color=green, label="lambda expression"];
m5_66 -> m5_62  [key=0, style=bold, color=blue];
m5_95 -> m5_96  [key=0, style=solid];
m5_96 -> m5_46  [key=2, style=dotted];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_97 -> m5_72  [key=2, style=dotted];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_88  [key=2, style=dotted];
m5_97 -> m5_89  [key=2, style=dotted];
m5_97 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_99 -> m5_17  [key=2, style=dotted];
m5_99 -> m5_100  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_90  [key=2, style=dotted];
m5_100 -> m5_95  [key=0, style=bold, color=blue];
m5_49 -> m5_50  [key=0, style=solid];
m5_50 -> m5_46  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_51 -> m5_16  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_52 -> m5_49  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid, color=green];
m5_2 -> m5_9  [key=2, style=dotted, color=green];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_8  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_10  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_11  [key=2, style=dotted];
m5_7 -> m5_0  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid, color=green];
m5_23 -> m5_24  [key=0, style=solid, color=green];
m5_23 -> m5_16  [key=2, style=dotted, color=green];
m5_23 -> m5_26  [key=1, style=dashed, color=green, label="lambda expression"];
m5_24 -> m5_25  [key=0, style=solid, color=green];
m5_24 -> m5_17  [key=2, style=dotted, color=green];
m5_25 -> m5_22  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid, color=green];
m5_13 -> m5_14  [key=0, style=solid, color=green];
m5_13 -> m5_16  [key=2, style=dotted, color=green];
m5_13 -> m5_18  [key=1, style=dashed, color=green, label="lambda expression"];
m5_14 -> m5_15  [key=0, style=solid, color=green];
m5_14 -> m5_17  [key=2, style=dotted, color=green];
m5_15 -> m5_12  [key=0, style=bold, color=blue];
m5_82 -> m5_83  [key=0, style=solid];
m5_83 -> m5_46  [key=2, style=dotted];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_84 -> m5_72  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_88  [key=2, style=dotted];
m5_84 -> m5_89  [key=2, style=dotted];
m5_84 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_86 -> m5_17  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_90  [key=2, style=dotted];
m5_87 -> m5_82  [key=0, style=bold, color=blue];
m5_53 -> m5_54  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid, color=green];
m5_19 -> m5_20  [key=0, style=solid, color=green];
m5_19 -> m5_21  [key=2, style=dotted, color=green];
m5_20 -> m5_18  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid, color=green];
m5_27 -> m5_28  [key=0, style=solid, color=green];
m5_27 -> m5_21  [key=2, style=dotted, color=green];
m5_28 -> m5_26  [key=0, style=bold, color=blue];
m5_33 -> m5_34  [key=0, style=solid, color=green];
m5_34 -> m5_35  [key=0, style=solid, color=green];
m5_34 -> m5_21  [key=2, style=dotted, color=green];
m5_35 -> m5_33  [key=0, style=bold, color=blue];
m5_69 -> m5_70  [key=0, style=solid, color=green];
m5_70 -> m5_71  [key=0, style=solid, color=green];
m5_70 -> m5_72  [key=2, style=dotted, color=green];
m5_70 -> m5_73  [key=2, style=dotted, color=green];
m5_71 -> m5_69  [key=0, style=bold, color=blue];
m5_80 -> m5_72  [key=2, style=dotted];
m5_80 -> m5_73  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_101 -> m5_102  [key=0, style=solid];
m5_81 -> m5_79  [key=0, style=bold, color=blue];
m5_55 -> m5_53  [key=0, style=bold, color=blue];
m5_93 -> m5_91  [key=0, style=bold, color=blue];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_94  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_94  [key=2, style=dotted];
m5_103 -> m5_101  [key=0, style=bold, color=blue];
m5_56 -> m5_57  [key=0, style=solid];
m5_57 -> m5_46  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_57 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_60 -> m5_47  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid];
m5_58 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label=newState];
m5_58 -> m5_11  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_61 -> m5_56  [key=0, style=bold, color=blue];
m5_29 -> m5_30  [key=0, style=solid, color=green];
m5_30 -> m5_31  [key=0, style=solid, color=green];
m5_30 -> m5_16  [key=2, style=dotted, color=green];
m5_30 -> m5_33  [key=1, style=dashed, color=green, label="lambda expression"];
m5_31 -> m5_17  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_29  [key=0, style=bold, color=blue];
m5_36 -> m5_37  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid, color=green];
m5_40 -> m5_47  [key=2, style=dotted, color=green];
m5_37 -> m5_40  [key=1, style=dashed, color=green, label=context];
m5_37 -> m5_43  [key=1, style=dashed, color=green, label=context];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_46  [key=2, style=dotted];
m5_37 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_37 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_37 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_37 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_39 -> m5_40  [key=0, style=solid, color=green];
m5_39 -> m5_17  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_47  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid, color=green];
m5_43 -> m5_17  [key=2, style=dotted, color=green];
m5_42 -> m5_43  [key=0, style=solid, color=green];
m5_42 -> m5_47  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_48  [key=2, style=dotted];
m5_38 -> m5_17  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_45 -> m5_36  [key=0, style=bold, color=blue];
m5_46 -> m5_104  [key=0, style=solid];
m5_104 -> m5_21  [key=2, style=dotted];
m5_104 -> m5_105  [key=0, style=solid];
m5_105 -> m5_46  [key=0, style=bold, color=blue];
m5_106 -> m5_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_13  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_19  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_23  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_27  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_30  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_34  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_40  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_63  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_65  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_106 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_107 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_12  [key=2, style=dotted];
m6_11 -> m6_9  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_6  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_7  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_8  [key=2, style=dotted];
m6_5 -> m6_0  [key=0, style=bold, color=blue];
m6_13 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_13 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_13 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_13 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_13 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ElectStateContextMock"];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_2  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m10_51 -> m10_86  [key=0, style=solid];
m10_51 -> m10_87  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_89  [key=2, style=dotted];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_90  [key=2, style=dotted];
m10_88 -> m10_51  [key=0, style=bold, color=blue];
m10_5 -> m10_6  [key=0, style=solid, color=green];
m10_5 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_5 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m10_5 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m10_6 -> m10_7  [key=0, style=solid, color=green];
m10_6 -> m10_12  [key=2, style=dotted, color=green];
m10_6 -> m10_13  [key=0, style=solid];
m10_6 -> d10  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_13  [key=2, style=dotted];
m10_7 -> m10_14  [key=2, style=dotted];
m10_8 -> m10_12  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_15  [key=2, style=dotted];
m10_8 -> m10_16  [key=2, style=dotted];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_9  [key=0, style=solid];
m10_10 -> m10_17  [key=2, style=dotted];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_15  [key=2, style=dotted];
m10_9 -> m10_11  [key=0, style=solid];
m10_11 -> m10_5  [key=0, style=bold, color=blue];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_13  [key=0, style=solid];
m10_17 -> m10_107  [key=0, style=solid];
m10_17 -> m10_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m10_17 -> m10_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m10_17 -> m10_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m10_17 -> m10_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m10_107 -> m10_108  [key=0, style=solid];
m10_107 -> m10_109  [key=0, style=solid];
m10_109 -> m10_110  [key=0, style=solid];
m10_109 -> m10_111  [key=0, style=solid];
m10_109 -> m10_115  [key=2, style=dotted];
m10_111 -> m10_112  [key=0, style=solid];
m10_111 -> m10_113  [key=0, style=solid];
m10_111 -> m10_116  [key=2, style=dotted];
m10_112 -> m10_113  [key=0, style=solid];
m10_112 -> m10_117  [key=2, style=dotted];
m10_112 -> m10_118  [key=2, style=dotted];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_119  [key=2, style=dotted];
m10_108 -> m10_114  [key=0, style=solid];
m10_108 -> d10  [key=2, style=dotted];
m10_110 -> m10_114  [key=0, style=solid];
m10_110 -> d10  [key=2, style=dotted];
m10_114 -> m10_17  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_1 -> m10_2  [key=0, style=solid];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_26 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m10_26 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m10_26 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_26 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m10_26 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m10_26 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=0, style=solid];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_31  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_33  [key=0, style=solid];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_42  [key=2, style=dotted];
m10_33 -> m10_43  [key=2, style=dotted];
m10_33 -> m10_21  [key=2, style=dotted];
m10_33 -> m10_44  [key=2, style=dotted];
m10_33 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_45  [key=2, style=dotted];
m10_34 -> m10_46  [key=2, style=dotted];
m10_34 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m10_34 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_47  [key=2, style=dotted];
m10_35 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m10_35 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_48  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_49  [key=2, style=dotted];
m10_37 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m10_28 -> m10_41  [key=0, style=solid];
m10_28 -> d10  [key=2, style=dotted];
m10_30 -> m10_41  [key=0, style=solid];
m10_30 -> d10  [key=2, style=dotted];
m10_32 -> m10_41  [key=0, style=solid];
m10_32 -> d10  [key=2, style=dotted];
m10_40 -> m10_41  [key=0, style=solid];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_50  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_51  [key=2, style=dotted];
m10_41 -> m10_26  [key=0, style=bold, color=blue];
m10_13 -> m10_2  [key=0, style=bold, color=blue];
m10_52 -> m10_53  [key=0, style=solid];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_21  [key=2, style=dotted];
m10_19 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_18 -> m10_19  [key=0, style=solid];
m10_20 -> m10_18  [key=0, style=bold, color=blue];
m10_22 -> m10_23  [key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_25  [key=2, style=dotted];
m10_24 -> m10_22  [key=0, style=bold, color=blue];
m10_53 -> m10_54  [key=0, style=solid];
m10_54 -> m10_52  [key=0, style=bold, color=blue];
m10_12 -> m10_13  [key=0, style=solid];
m10_50 -> m10_91  [key=0, style=solid];
m10_50 -> m10_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m10_50 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m10_50 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m10_50 -> m10_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_98  [key=0, style=solid];
m10_91 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m10_92 -> m10_96  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m10_93 -> m10_94  [key=0, style=solid];
m10_93 -> m10_99  [key=2, style=dotted];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_91  [key=0, style=solid];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_101  [key=2, style=dotted];
m10_95 -> m10_96  [key=0, style=solid];
m10_95 -> m10_100  [key=2, style=dotted];
m10_95 -> m10_97  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_97 -> m10_91  [key=0, style=solid];
m10_97 -> m10_102  [key=2, style=dotted];
m10_98 -> m10_50  [key=0, style=bold, color=blue];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m10_55 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_55 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_55 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m10_55 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_55 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_58  [key=0, style=solid];
m10_56 -> m10_78  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_60  [key=0, style=solid];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_79  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_80  [key=2, style=dotted];
m10_61 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m10_61 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m10_61 -> m10_71  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_66  [key=0, style=solid];
m10_64 -> m10_81  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_83  [key=2, style=dotted];
m10_69 -> m10_84  [key=2, style=dotted];
m10_69 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m10_69 -> m10_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_48  [key=2, style=dotted];
m10_57 -> m10_77  [key=0, style=solid];
m10_57 -> d10  [key=2, style=dotted];
m10_59 -> m10_77  [key=0, style=solid];
m10_59 -> d10  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_64  [key=0, style=solid];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_70  [key=0, style=solid];
m10_67 -> m10_82  [key=2, style=dotted];
m10_67 -> m10_72  [key=1, style=dashed, color=darkseagreen4, label=jobMethod];
m10_67 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label=jobMethod];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_49  [key=2, style=dotted];
m10_71 -> m10_73  [key=1, style=dashed, color=darkseagreen4, label=stateChangingContext];
m10_71 -> m10_75  [key=1, style=dashed, color=darkseagreen4, label=stateChangingContext];
m10_71 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label=stateChangingContext];
m10_63 -> m10_77  [key=0, style=solid];
m10_65 -> m10_77  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_68 -> m10_69  [key=0, style=solid];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_74  [key=0, style=solid];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_47  [key=2, style=dotted];
m10_74 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m10_73 -> m10_77  [key=0, style=solid];
m10_73 -> m10_85  [key=2, style=dotted];
m10_73 -> m10_51  [key=2, style=dotted];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_50  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_51  [key=2, style=dotted];
m10_77 -> m10_55  [key=0, style=bold, color=blue];
m10_47 -> m10_103  [key=0, style=solid];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_105  [key=2, style=dotted];
m10_103 -> m10_106  [key=2, style=dotted];
m10_104 -> m10_47  [key=0, style=bold, color=blue];
m10_16 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m10_16 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m10_16 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m10_16 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m10_16 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>"];
m10_2 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m10_2 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m10_2 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m10_2 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m10_2 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_4 -> m10_13  [key=0, style=solid];
m10_4 -> d10  [key=2, style=dotted];
m10_120 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_120 -> m10_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m10_121 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m11_34 -> m11_35  [key=0, style=solid];
m11_281 -> m11_282  [key=0, style=solid];
m11_281 -> m11_285  [key=1, style=dashed, color=darkseagreen4, label=Table];
m11_281 -> m11_286  [key=1, style=dashed, color=darkseagreen4, label=Table];
m11_282 -> m11_283  [key=0, style=solid];
m11_282 -> m11_46  [key=2, style=dotted];
m11_282 -> m11_289  [key=2, style=dotted];
m11_285 -> m11_286  [key=0, style=solid];
m11_285 -> m11_288  [key=0, style=solid];
m11_286 -> m11_287  [key=0, style=solid];
m11_286 -> m11_119  [key=2, style=dotted];
m11_283 -> m11_284  [key=0, style=solid];
m11_283 -> m11_290  [key=2, style=dotted];
m11_283 -> m11_291  [key=2, style=dotted];
m11_283 -> m11_286  [key=1, style=dashed, color=darkseagreen4, label=history];
m11_284 -> m11_285  [key=0, style=solid];
m11_284 -> m11_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_284 -> m11_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_287 -> m11_285  [key=0, style=solid];
m11_287 -> m11_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_288 -> m11_281  [key=0, style=bold, color=blue];
m11_174 -> m11_175  [key=0, style=solid];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_180  [key=2, style=dotted];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_181  [key=2, style=dotted];
m11_176 -> m11_178  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_182  [key=2, style=dotted];
m11_177 -> m11_130  [key=2, style=dotted];
m11_178 -> m11_179  [key=0, style=solid];
m11_178 -> m11_182  [key=2, style=dotted];
m11_178 -> m11_130  [key=2, style=dotted];
m11_179 -> m11_174  [key=0, style=bold, color=blue];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_40  [key=2, style=dotted];
m11_158 -> m11_159  [key=0, style=solid];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_162  [key=2, style=dotted];
m11_159 -> m11_119  [key=2, style=dotted];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_163  [key=2, style=dotted];
m11_160 -> m11_130  [key=2, style=dotted];
m11_161 -> m11_158  [key=0, style=bold, color=blue];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_100  [key=2, style=dotted];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_111  [key=2, style=dotted];
m11_114 -> m11_117  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.JobLoadException loadException"];
m11_115 -> m11_112  [key=0, style=bold, color=blue];
m11_183 -> m11_184  [key=0, style=solid];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_163  [key=2, style=dotted];
m11_184 -> m11_130  [key=2, style=dotted];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_180  [key=2, style=dotted];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_181  [key=2, style=dotted];
m11_186 -> m11_188  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_18  [key=2, style=dotted];
m11_187 -> m11_130  [key=2, style=dotted];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_18  [key=2, style=dotted];
m11_188 -> m11_130  [key=2, style=dotted];
m11_189 -> m11_183  [key=0, style=bold, color=blue];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_46  [key=2, style=dotted];
m11_72 -> m11_47  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_75  [key=2, style=dotted];
m11_73 -> m11_70  [key=2, style=dotted];
m11_73 -> m11_82  [key=3, color=darkorchid, style=bold, label="method methodReturn string CreateExpiredJob"];
m11_74 -> m11_71  [key=0, style=bold, color=blue];
m11_230 -> m11_231  [key=0, style=solid];
m11_231 -> m11_232  [key=0, style=solid];
m11_231 -> m11_220  [key=2, style=dotted];
m11_231 -> m11_233  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_232 -> m11_230  [key=0, style=bold, color=blue];
m11_0 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m11_0 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m11_0 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_8  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_9  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_4  [key=0, style=bold, color=blue];
m11_3 -> m11_5  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_1 -> m11_3  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_4 -> m11_8  [key=0, style=solid];
m11_4 -> d10  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_2 -> m11_8  [key=0, style=solid];
m11_2 -> d10  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_8 -> m11_0  [key=0, style=bold, color=blue];
m11_190 -> m11_191  [key=0, style=solid];
m11_191 -> m11_192  [key=0, style=solid];
m11_191 -> m11_163  [key=2, style=dotted];
m11_191 -> m11_173  [key=2, style=dotted];
m11_192 -> m11_190  [key=0, style=bold, color=blue];
m11_254 -> m11_255  [key=0, style=solid];
m11_255 -> m11_256  [key=0, style=solid];
m11_255 -> m11_46  [key=2, style=dotted];
m11_255 -> m11_214  [key=2, style=dotted];
m11_255 -> m11_257  [key=1, style=dashed, color=darkseagreen4, label=entry];
m11_255 -> m11_258  [key=1, style=dashed, color=darkseagreen4, label=entry];
m11_256 -> m11_257  [key=0, style=solid];
m11_256 -> m11_215  [key=2, style=dotted];
m11_257 -> m11_258  [key=0, style=solid];
m11_257 -> m11_216  [key=2, style=dotted];
m11_257 -> m11_260  [key=1, style=dashed, color=darkseagreen4, label=history];
m11_257 -> m11_261  [key=1, style=dashed, color=darkseagreen4, label=history];
m11_258 -> m11_259  [key=0, style=solid];
m11_258 -> m11_215  [key=2, style=dotted];
m11_260 -> m11_261  [key=0, style=solid];
m11_260 -> m11_263  [key=2, style=dotted];
m11_260 -> m11_130  [key=2, style=dotted];
m11_260 -> m11_260  [key=1, style=dashed, color=darkseagreen4, label=property];
m11_261 -> m11_259  [key=0, style=solid];
m11_261 -> m11_119  [key=2, style=dotted];
m11_261 -> m11_261  [key=1, style=dashed, color=darkseagreen4, label=property];
m11_259 -> m11_260  [key=0, style=solid];
m11_259 -> m11_262  [key=0, style=solid];
m11_262 -> m11_254  [key=0, style=bold, color=blue];
m11_142 -> m11_143  [key=0, style=solid];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_46  [key=2, style=dotted];
m11_144 -> m11_145  [key=0, style=solid];
m11_144 -> m11_124  [key=2, style=dotted];
m11_144 -> m11_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_145 -> m11_142  [key=0, style=bold, color=blue];
m11_29 -> m11_31  [key=1, style=dashed, color=green, label=stateMachine];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_38  [key=2, style=dotted];
m11_17 -> m11_10  [key=0, style=bold, color=blue];
m11_116 -> m11_117  [key=0, style=solid];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_119  [key=2, style=dotted];
m11_118 -> m11_116  [key=0, style=bold, color=blue];
m11_66 -> m11_67  [key=0, style=solid];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_69  [key=2, style=dotted];
m11_67 -> m11_70  [key=2, style=dotted];
m11_68 -> m11_66  [key=0, style=bold, color=blue];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_13  [key=2, style=dotted];
m11_11 -> m11_18  [key=2, style=dotted];
m11_11 -> m11_16  [key=0, style=solid];
m11_12 -> m11_10  [key=0, style=bold, color=blue];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_15  [key=0, style=solid];
m11_18 -> m11_32  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m11_18 -> m11_24  [key=0, style=solid];
m11_18 -> m11_28  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m11_236 -> m11_237  [key=0, style=solid];
m11_237 -> m11_238  [key=0, style=solid];
m11_237 -> m11_220  [key=2, style=dotted];
m11_237 -> m11_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_238 -> m11_236  [key=0, style=bold, color=blue];
m11_269 -> m11_264  [key=0, style=bold, color=blue];
m11_264 -> m11_265  [key=0, style=solid];
m11_265 -> m11_266  [key=0, style=solid];
m11_265 -> m11_46  [key=2, style=dotted];
m11_265 -> m11_201  [key=2, style=dotted];
m11_265 -> m11_267  [key=1, style=dashed, color=darkseagreen4, label=stateEntry];
m11_265 -> m11_268  [key=1, style=dashed, color=darkseagreen4, label=stateEntry];
m11_266 -> m11_267  [key=0, style=solid];
m11_266 -> m11_269  [key=0, style=solid];
m11_267 -> m11_268  [key=0, style=solid];
m11_267 -> m11_270  [key=2, style=dotted];
m11_267 -> m11_130  [key=2, style=dotted];
m11_267 -> m11_267  [key=1, style=dashed, color=darkseagreen4, label=property];
m11_268 -> m11_266  [key=0, style=solid];
m11_268 -> m11_119  [key=2, style=dotted];
m11_268 -> m11_268  [key=1, style=dashed, color=darkseagreen4, label=property];
m11_31 -> m11_32  [key=0, style=solid, color=green];
m11_31 -> m11_40  [key=2, style=dotted, color=green];
m11_26 -> m11_31  [key=1, style=dashed, color=green, label=jobId];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_36  [key=2, style=dotted];
m11_26 -> m11_30  [key=2, style=dotted];
m11_26 -> m11_32  [key=2, style=dotted];
m11_26 -> m11_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_30 -> m11_31  [key=0, style=solid, color=green];
m11_30 -> m11_39  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_24 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label=mock];
m11_24 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=connection];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_34  [key=2, style=dotted];
m11_24 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=mock];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_35  [key=2, style=dotted];
m11_25 -> m11_30  [key=2, style=dotted];
m11_25 -> m11_31  [key=2, style=dotted];
m11_25 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_27 -> m11_29  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_37  [key=2, style=dotted];
m11_27 -> m11_33  [key=2, style=dotted];
m11_28 -> m11_33  [key=0, style=solid];
m11_28 -> m11_23  [key=0, style=bold, color=blue];
m11_33 -> m11_18  [key=0, style=bold, color=blue];
m11_80 -> m11_81  [key=0, style=solid];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_85  [key=2, style=dotted];
m11_81 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_86  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_87  [key=2, style=dotted];
m11_84 -> m11_80  [key=0, style=bold, color=blue];
m11_19 -> m11_20  [key=0, style=solid];
m11_271 -> m11_272  [key=0, style=solid];
m11_271 -> m11_274  [key=1, style=dashed, color=darkseagreen4, label=Table];
m11_271 -> m11_275  [key=1, style=dashed, color=darkseagreen4, label=Table];
m11_272 -> m11_273  [key=0, style=solid];
m11_272 -> m11_119  [key=2, style=dotted];
m11_274 -> m11_275  [key=0, style=solid];
m11_274 -> m11_277  [key=0, style=solid];
m11_275 -> m11_276  [key=0, style=solid];
m11_275 -> m11_119  [key=2, style=dotted];
m11_273 -> m11_274  [key=0, style=solid];
m11_273 -> m11_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_273 -> m11_276  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_276 -> m11_274  [key=0, style=solid];
m11_276 -> m11_276  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_277 -> m11_271  [key=0, style=bold, color=blue];
m11_251 -> m11_252  [key=0, style=solid];
m11_37 -> m11_38  [key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid];
m11_36 -> m11_34  [key=0, style=bold, color=blue];
m11_39 -> m11_37  [key=0, style=bold, color=blue];
m11_49 -> m11_50  [key=0, style=solid];
m11_52 -> m11_53  [key=0, style=solid];
m11_55 -> m11_56  [key=0, style=solid];
m11_50 -> m11_51  [key=0, style=solid];
m11_51 -> m11_49  [key=0, style=bold, color=blue];
m11_53 -> m11_54  [key=0, style=solid];
m11_54 -> m11_52  [key=0, style=bold, color=blue];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_40  [key=2, style=dotted];
m11_57 -> m11_55  [key=0, style=bold, color=blue];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_127  [key=1, style=dashed, color=darkseagreen4, label="?"];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_129  [key=2, style=dotted];
m11_127 -> m11_128  [key=0, style=solid];
m11_127 -> m11_130  [key=2, style=dotted];
m11_128 -> m11_125  [key=0, style=bold, color=blue];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label="?"];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_129  [key=2, style=dotted];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_130  [key=2, style=dotted];
m11_149 -> m11_146  [key=0, style=bold, color=blue];
m11_221 -> m11_222  [key=0, style=solid];
m11_222 -> m11_223  [key=0, style=solid];
m11_222 -> m11_216  [key=2, style=dotted];
m11_222 -> m11_86  [key=2, style=dotted];
m11_222 -> m11_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_222 -> m11_227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_223 -> m11_221  [key=0, style=bold, color=blue];
m11_224 -> m11_225  [key=0, style=solid];
m11_227 -> m11_228  [key=0, style=solid];
m11_225 -> m11_226  [key=0, style=solid];
m11_226 -> m11_224  [key=0, style=bold, color=blue];
m11_228 -> m11_229  [key=0, style=solid];
m11_229 -> m11_227  [key=0, style=bold, color=blue];
m11_233 -> m11_234  [key=0, style=solid];
m11_234 -> m11_235  [key=0, style=solid];
m11_234 -> m11_216  [key=2, style=dotted];
m11_234 -> m11_86  [key=2, style=dotted];
m11_235 -> m11_233  [key=0, style=bold, color=blue];
m11_239 -> m11_240  [key=0, style=solid];
m11_240 -> m11_241  [key=0, style=solid];
m11_240 -> m11_216  [key=2, style=dotted];
m11_240 -> m11_95  [key=2, style=dotted];
m11_240 -> m11_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_240 -> m11_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_241 -> m11_239  [key=0, style=bold, color=blue];
m11_242 -> m11_243  [key=0, style=solid];
m11_245 -> m11_246  [key=0, style=solid];
m11_243 -> m11_244  [key=0, style=solid];
m11_244 -> m11_242  [key=0, style=bold, color=blue];
m11_246 -> m11_247  [key=0, style=solid];
m11_247 -> m11_245  [key=0, style=bold, color=blue];
m11_252 -> m11_253  [key=0, style=solid];
m11_252 -> m11_216  [key=2, style=dotted];
m11_252 -> m11_95  [key=2, style=dotted];
m11_253 -> m11_251  [key=0, style=bold, color=blue];
m11_58 -> m11_59  [key=0, style=solid];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_47  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_47  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid, color=red];
m11_61 -> m11_64  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid, color=red];
m11_62 -> m11_65  [key=2, style=dotted, color=red];
m11_63 -> m11_58  [key=0, style=bold, color=blue];
m11_170 -> m11_171  [key=0, style=solid];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_163  [key=2, style=dotted];
m11_171 -> m11_173  [key=2, style=dotted];
m11_172 -> m11_170  [key=0, style=bold, color=blue];
m11_102 -> m11_103  [key=0, style=solid];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_105  [key=2, style=dotted];
m11_103 -> m11_106  [key=2, style=dotted];
m11_104 -> m11_102  [key=0, style=bold, color=blue];
m11_76 -> m11_77  [key=0, style=solid];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_79  [key=2, style=dotted];
m11_77 -> m11_70  [key=2, style=dotted];
m11_78 -> m11_76  [key=0, style=bold, color=blue];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=Table];
m11_41 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_41 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_41 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_46  [key=2, style=dotted];
m11_42 -> m11_47  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_48  [key=2, style=dotted];
m11_43 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_43 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_30  [key=2, style=dotted];
m11_44 -> m11_31  [key=2, style=dotted];
m11_44 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_45 -> m11_41  [key=0, style=bold, color=blue];
m11_248 -> m11_249  [key=0, style=solid];
m11_249 -> m11_250  [key=0, style=solid];
m11_249 -> m11_220  [key=2, style=dotted];
m11_249 -> m11_251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_250 -> m11_248  [key=0, style=bold, color=blue];
m11_197 -> m11_198  [key=0, style=solid];
m11_197 -> m11_199  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_198 -> m11_199  [key=0, style=solid];
m11_198 -> m11_46  [key=2, style=dotted];
m11_198 -> m11_201  [key=2, style=dotted];
m11_199 -> m11_200  [key=0, style=solid];
m11_199 -> m11_119  [key=2, style=dotted];
m11_200 -> m11_197  [key=0, style=bold, color=blue];
m11_131 -> m11_132  [key=0, style=solid];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_134  [key=2, style=dotted];
m11_132 -> m11_135  [key=2, style=dotted];
m11_132 -> m11_119  [key=2, style=dotted];
m11_133 -> m11_131  [key=0, style=bold, color=blue];
m11_278 -> m11_279  [key=0, style=solid];
m11_279 -> m11_280  [key=0, style=solid];
m11_279 -> m11_119  [key=2, style=dotted];
m11_280 -> m11_278  [key=0, style=bold, color=blue];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_23 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_19  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [key=2, style=dotted];
m11_15 -> m11_18  [key=2, style=dotted];
m11_15 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m11_15 -> m11_20  [key=2, style=dotted];
m11_16 -> m11_14  [key=0, style=bold, color=blue];
m11_16 -> m11_17  [key=0, style=solid];
m11_217 -> m11_218  [key=0, style=solid];
m11_218 -> m11_219  [key=0, style=solid];
m11_218 -> m11_220  [key=2, style=dotted];
m11_218 -> m11_221  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_219 -> m11_217  [key=0, style=bold, color=blue];
m11_193 -> m11_194  [key=0, style=solid];
m11_194 -> m11_195  [key=0, style=solid];
m11_194 -> m11_196  [key=2, style=dotted];
m11_194 -> m11_130  [key=2, style=dotted];
m11_195 -> m11_193  [key=0, style=bold, color=blue];
m11_167 -> m11_168  [key=0, style=solid];
m11_168 -> m11_169  [key=0, style=solid];
m11_168 -> m11_163  [key=2, style=dotted];
m11_168 -> m11_130  [key=2, style=dotted];
m11_169 -> m11_167  [key=0, style=bold, color=blue];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_22  [key=2, style=dotted];
m11_136 -> m11_137  [key=0, style=solid];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_140  [key=2, style=dotted];
m11_137 -> m11_119  [key=2, style=dotted];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_141  [key=2, style=dotted];
m11_138 -> m11_119  [key=2, style=dotted];
m11_139 -> m11_136  [key=0, style=bold, color=blue];
m11_164 -> m11_165  [key=0, style=solid];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_162  [key=2, style=dotted];
m11_165 -> m11_119  [key=2, style=dotted];
m11_166 -> m11_164  [key=0, style=bold, color=blue];
m11_205 -> m11_202  [key=0, style=bold, color=blue];
m11_202 -> m11_203  [key=0, style=solid];
m11_202 -> m11_204  [key=1, style=dashed, color=darkseagreen4, label=Table];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_46  [key=2, style=dotted];
m11_203 -> m11_201  [key=2, style=dotted];
m11_204 -> m11_205  [key=0, style=solid];
m11_204 -> m11_206  [key=2, style=dotted];
m11_120 -> m11_121  [key=0, style=solid];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_46  [key=2, style=dotted];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_124  [key=2, style=dotted];
m11_122 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_123 -> m11_120  [key=0, style=bold, color=blue];
m11_213 -> m11_207  [key=0, style=bold, color=blue];
m11_207 -> m11_208  [key=0, style=solid];
m11_207 -> m11_212  [key=1, style=dashed, color=darkseagreen4, label=Table];
m11_208 -> m11_209  [key=0, style=solid];
m11_208 -> m11_46  [key=2, style=dotted];
m11_208 -> m11_214  [key=2, style=dotted];
m11_208 -> m11_210  [key=1, style=dashed, color=darkseagreen4, label=entry];
m11_208 -> m11_211  [key=1, style=dashed, color=darkseagreen4, label=entry];
m11_212 -> m11_213  [key=0, style=solid];
m11_212 -> m11_157  [key=2, style=dotted];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_215  [key=2, style=dotted];
m11_210 -> m11_211  [key=0, style=solid];
m11_210 -> m11_216  [key=2, style=dotted];
m11_210 -> m11_212  [key=1, style=dashed, color=darkseagreen4, label=history];
m11_211 -> m11_212  [key=0, style=solid];
m11_211 -> m11_215  [key=2, style=dotted];
m11_21 -> m11_19  [key=0, style=bold, color=blue];
m11_150 -> m11_151  [key=0, style=solid];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_140  [key=2, style=dotted];
m11_151 -> m11_119  [key=2, style=dotted];
m11_152 -> m11_150  [key=0, style=bold, color=blue];
m11_153 -> m11_154  [key=0, style=solid];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_156  [key=2, style=dotted];
m11_154 -> m11_157  [key=2, style=dotted];
m11_155 -> m11_153  [key=0, style=bold, color=blue];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_100  [key=2, style=dotted];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_111  [key=2, style=dotted];
m11_110 -> m11_107  [key=0, style=bold, color=blue];
m11_96 -> m11_97  [key=0, style=solid];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_100  [key=2, style=dotted];
m11_97 -> m11_97  [key=3, color=darkorchid, style=bold, label="Local variable string insertParameterSql"];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_101  [key=2, style=dotted];
m11_99 -> m11_96  [key=0, style=bold, color=blue];
m11_88 -> m11_89  [key=0, style=solid];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_85  [key=2, style=dotted];
m11_89 -> m11_91  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_89 -> m11_92  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_92  [key=0, style=solid];
m11_90 -> m11_94  [key=2, style=dotted];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_95  [key=2, style=dotted];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_87  [key=2, style=dotted];
m11_93 -> m11_88  [key=0, style=bold, color=blue];
m11_292 -> m11_293  [key=0, style=solid];
m11_292 -> m11_295  [key=1, style=dashed, color=darkseagreen4, label=Table];
m11_292 -> m11_296  [key=1, style=dashed, color=darkseagreen4, label=Table];
m11_293 -> m11_294  [key=0, style=solid];
m11_293 -> m11_119  [key=2, style=dotted];
m11_295 -> m11_296  [key=0, style=solid];
m11_295 -> m11_298  [key=0, style=solid];
m11_296 -> m11_297  [key=0, style=solid];
m11_296 -> m11_119  [key=2, style=dotted];
m11_294 -> m11_295  [key=0, style=solid];
m11_294 -> m11_296  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_294 -> m11_297  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_297 -> m11_295  [key=0, style=solid];
m11_297 -> m11_297  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_298 -> m11_292  [key=0, style=bold, color=blue];
m11_299 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_62  [key=1, style=dashed, color=red, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_218  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_231  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_237  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_249  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_272  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_275  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_279  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_293  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m11_299 -> m11_296  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m12_25 -> m12_34  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_29  [key=2, style=dotted];
m12_23 -> m12_8  [key=0, style=bold, color=blue];
m12_19 -> m12_26  [key=0, style=solid];
m12_19 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=long];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_21  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_30  [key=2, style=dotted];
m12_27 -> m12_31  [key=2, style=dotted];
m12_27 -> m12_32  [key=2, style=dotted];
m12_28 -> m12_19  [key=0, style=bold, color=blue];
m12_28 -> m12_28  [key=3, color=darkorchid, style=bold, label="Field variable string JobId"];
m12_33 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m12_33 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m12_33 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m12_33 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m12_33 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m12_33 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m12_33 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_32  [key=2, style=dotted];
m12_18 -> m12_17  [key=0, style=solid];
m12_18 -> m12_30  [key=2, style=dotted];
m12_20 -> m12_22  [key=0, style=solid];
m12_20 -> m12_31  [key=2, style=dotted];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m12_0 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m12_0 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_6  [key=0, style=solid];
m12_2 -> d10  [key=2, style=dotted];
m12_3 -> m12_0  [key=0, style=bold, color=blue];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_16  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_4 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_4 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_4 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_16 -> m12_17  [key=0, style=solid, color=green];
m12_16 -> m12_25  [key=2, style=dotted, color=green];
m12_16 -> m12_15  [key=0, style=solid];
m12_16 -> m12_29  [key=2, style=dotted];
m12_5 -> m12_16  [key=1, style=dashed, color=green, label=failedState];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=failedState];
m12_15 -> m12_16  [key=0, style=solid, color=green];
m12_15 -> m12_17  [key=0, style=solid];
m12_15 -> m12_25  [key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_18  [key=2, style=dotted];
m12_8 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>"];
m12_8 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m12_8 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m12_8 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m12_8 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>"];
m12_8 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_21  [key=2, style=dotted];
m12_11 -> m12_10  [key=0, style=solid];
m12_11 -> m12_26  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_22  [key=2, style=dotted];
m12_12 -> m12_23  [key=2, style=dotted];
m12_12 -> m12_14  [key=0, style=solid];
m12_14 -> m12_17  [key=0, style=solid];
m12_14 -> m12_24  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_28  [key=2, style=dotted];
m12_6 -> m12_8  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_0  [key=0, style=bold, color=blue];
m12_9 -> m12_15  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_24  [key=2, style=dotted];
m12_9 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m12_9 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m12_9 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m12_9 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m12_9 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m12_9 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m12_9 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m12_9 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m12_7 -> m12_17  [key=0, style=solid];
m12_13 -> m12_17  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_12  [key=0, style=solid];
m12_13 -> m12_27  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=delay];
m12_10 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=delay];
m12_10 -> m12_19  [key=2, style=dotted];
m12_10 -> m12_20  [key=2, style=dotted];
m12_10 -> m12_25  [key=2, style=dotted];
m12_17 -> m12_4  [key=0, style=bold, color=blue];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_19  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_33  [key=2, style=dotted];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_36  [key=2, style=dotted];
m12_34 -> m12_37  [key=2, style=dotted];
m12_35 -> m12_25  [key=0, style=bold, color=blue];
m12_38 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m12_38 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid, color=red];
m13_1 -> m13_51  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid, color=red];
m13_2 -> m13_52  [key=2, style=dotted, color=red];
m13_3 -> m13_4  [key=0, style=solid, color=red];
m13_3 -> m13_51  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid, color=red];
m13_4 -> m13_6  [key=0, style=solid, color=red];
m13_5 -> m13_49  [key=0, style=solid, color=red];
m13_5 -> m13_51  [key=2, style=dotted, color=red];
m13_6 -> m13_7  [key=0, style=solid, color=red];
m13_6 -> m13_51  [key=2, style=dotted, color=red];
m13_7 -> m13_8  [key=0, style=solid, color=red];
m13_7 -> m13_53  [key=2, style=dotted, color=red];
m13_7 -> m13_54  [key=2, style=dotted, color=red];
m13_8 -> m13_9  [key=0, style=solid, color=red];
m13_8 -> m13_51  [key=2, style=dotted, color=red];
m13_9 -> m13_10  [key=0, style=solid, color=red];
m13_9 -> m13_53  [key=2, style=dotted, color=red];
m13_9 -> m13_54  [key=2, style=dotted, color=red];
m13_10 -> m13_11  [key=0, style=solid, color=red];
m13_10 -> m13_51  [key=2, style=dotted, color=red];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_48  [key=0, style=solid];
m13_11 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_11 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_51  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_51  [key=2, style=dotted];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_54  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_54  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_55  [key=2, style=dotted];
m13_17 -> m13_56  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_24  [key=0, style=solid];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_57  [key=2, style=dotted];
m13_22 -> m13_54  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_54  [key=2, style=dotted];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_34  [key=0, style=solid];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_58  [key=2, style=dotted];
m13_30 -> m13_54  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_54  [key=2, style=dotted];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_46  [key=0, style=solid];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_53  [key=2, style=dotted];
m13_38 -> m13_54  [key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_58  [key=2, style=dotted];
m13_40 -> m13_54  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_59  [key=2, style=dotted];
m13_42 -> m13_60  [key=2, style=dotted];
m13_42 -> m13_54  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_54  [key=2, style=dotted];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_51  [key=2, style=dotted];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_51  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_51  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_51  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_51  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_51  [key=2, style=dotted];
m13_23 -> m13_27  [key=0, style=solid];
m13_23 -> m13_51  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_51  [key=2, style=dotted];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_51  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_51  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_51  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_51  [key=2, style=dotted];
m13_33 -> m13_35  [key=0, style=solid];
m13_33 -> m13_51  [key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_51  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_51  [key=2, style=dotted];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_51  [key=2, style=dotted];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_51  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_51  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_51  [key=2, style=dotted];
m13_45 -> m13_47  [key=0, style=solid];
m13_45 -> m13_51  [key=2, style=dotted];
m13_47 -> m13_11  [key=0, style=solid];
m13_47 -> m13_51  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_51  [key=2, style=dotted];
m13_50 -> m13_0  [key=0, style=bold, color=blue];
m13_61 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_2  [key=1, style=dashed, color=red, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_4  [key=1, style=dashed, color=red, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_5  [key=1, style=dashed, color=red, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_6  [key=1, style=dashed, color=red, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_7  [key=1, style=dashed, color=red, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_8  [key=1, style=dashed, color=red, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_9  [key=1, style=dashed, color=red, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_10  [key=1, style=dashed, color=red, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m13_61 -> m13_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.RecurringJobsPage"];
m14_41 -> m14_134  [key=0, style=solid];
m14_134 -> m14_135  [key=0, style=solid];
m14_134 -> m14_136  [key=2, style=dotted];
m14_135 -> m14_41  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid, color=green];
m14_0 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m14_1 -> m14_2  [key=0, style=solid, color=green];
m14_1 -> m14_36  [key=2, style=dotted, color=green];
m14_1 -> m14_1  [key=3, color=darkorchid, style=bold, label="Field variable string OldStateName"];
m14_2 -> m14_3  [key=0, style=solid, color=green];
m14_2 -> m14_37  [key=2, style=dotted, color=green];
m14_2 -> m14_46  [key=1, style=dashed, color=green, label="lambda expression"];
m14_2 -> m14_2  [key=3, color=darkorchid, style=bold, label="Field variable string StateName"];
m14_3 -> m14_4  [key=0, style=solid, color=green];
m14_3 -> m14_38  [key=2, style=dotted, color=green];
m14_3 -> m14_39  [key=2, style=dotted, color=green];
m14_3 -> m14_0  [key=0, style=bold, color=blue];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_40  [key=2, style=dotted];
m14_4 -> m14_41  [key=2, style=dotted];
m14_4 -> m14_39  [key=2, style=dotted];
m14_4 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m14_4 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m14_7 -> m14_8  [key=0, style=solid, color=green];
m14_7 -> m14_42  [key=2, style=dotted, color=green];
m14_7 -> m14_43  [key=2, style=dotted, color=green];
m14_7 -> m14_39  [key=2, style=dotted, color=green];
m14_6 -> m14_7  [key=0, style=solid, color=green];
m14_6 -> m14_39  [key=2, style=dotted];
m14_6 -> m14_42  [key=2, style=dotted];
m14_6 -> m14_43  [key=2, style=dotted];
m14_8 -> m14_9  [key=0, style=solid, color=green];
m14_8 -> m14_42  [key=2, style=dotted, color=green];
m14_8 -> m14_43  [key=2, style=dotted, color=green];
m14_8 -> m14_39  [key=2, style=dotted, color=green];
m14_9 -> m14_10  [key=0, style=solid, color=green];
m14_9 -> m14_42  [key=2, style=dotted, color=green];
m14_9 -> m14_43  [key=2, style=dotted, color=green];
m14_9 -> m14_39  [key=2, style=dotted, color=green];
m14_10 -> m14_11  [key=0, style=solid, color=green];
m14_10 -> m14_37  [key=2, style=dotted];
m14_10 -> m14_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_11 -> m14_12  [key=0, style=solid, color=green];
m14_11 -> m14_37  [key=2, style=dotted, color=green];
m14_11 -> m14_54  [key=1, style=dashed, color=green, label="lambda expression"];
m14_12 -> m14_37  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_19 -> m14_20  [key=0, style=solid, color=green];
m14_19 -> m14_37  [key=2, style=dotted, color=green];
m14_19 -> m14_86  [key=1, style=dashed, color=green, label="lambda expression"];
m14_18 -> m14_19  [key=0, style=solid, color=green];
m14_18 -> m14_44  [key=2, style=dotted];
m14_18 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_20 -> m14_21  [key=0, style=solid, color=green];
m14_20 -> m14_44  [key=2, style=dotted];
m14_20 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_21 -> m14_22  [key=0, style=solid, color=green];
m14_21 -> m14_44  [key=2, style=dotted, color=green];
m14_21 -> m14_93  [key=1, style=dashed, color=green, label="lambda expression"];
m14_22 -> m14_37  [key=2, style=dotted];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_24 -> m14_25  [key=0, style=solid, color=green];
m14_24 -> m14_44  [key=2, style=dotted, color=green];
m14_24 -> m14_104  [key=1, style=dashed, color=green, label="lambda expression"];
m14_23 -> m14_24  [key=0, style=solid, color=green];
m14_23 -> m14_37  [key=2, style=dotted];
m14_23 -> m14_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_25 -> m14_37  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_27 -> m14_28  [key=0, style=solid, color=green];
m14_27 -> m14_44  [key=2, style=dotted, color=green];
m14_27 -> m14_114  [key=1, style=dashed, color=green, label="lambda expression"];
m14_26 -> m14_27  [key=0, style=solid, color=green];
m14_26 -> m14_44  [key=2, style=dotted];
m14_26 -> m14_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_28 -> m14_37  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_32 -> m14_33  [key=0, style=solid, color=green];
m14_32 -> m14_37  [key=2, style=dotted, color=green];
m14_32 -> m14_130  [key=1, style=dashed, color=green, label="lambda expression"];
m14_31 -> m14_32  [key=0, style=solid, color=green];
m14_31 -> m14_45  [key=2, style=dotted];
m14_31 -> m14_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_33 -> m14_44  [key=2, style=dotted];
m14_33 -> m14_34  [key=0, style=solid];
m14_13 -> m14_37  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_16 -> m14_37  [key=2, style=dotted];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_5 -> m14_39  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_40  [key=2, style=dotted];
m14_5 -> m14_41  [key=2, style=dotted];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_44  [key=2, style=dotted];
m14_17 -> m14_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_14 -> m14_44  [key=2, style=dotted];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_15 -> m14_44  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_29 -> m14_44  [key=2, style=dotted];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_34 -> m14_44  [key=2, style=dotted];
m14_34 -> m14_35  [key=0, style=solid];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_45  [key=2, style=dotted];
m14_30 -> m14_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_35 -> m14_0  [key=0, style=bold, color=blue];
m14_43 -> m14_137  [key=0, style=solid];
m14_137 -> m14_41  [key=2, style=dotted];
m14_137 -> m14_138  [key=0, style=solid];
m14_137 -> m14_136  [key=2, style=dotted];
m14_138 -> m14_43  [key=0, style=bold, color=blue];
m14_124 -> m14_125  [key=0, style=solid];
m14_46 -> m14_47  [key=0, style=solid, color=green];
m14_54 -> m14_55  [key=0, style=solid, color=green];
m14_86 -> m14_87  [key=0, style=solid, color=green];
m14_93 -> m14_94  [key=0, style=solid];
m14_104 -> m14_105  [key=0, style=solid];
m14_114 -> m14_115  [key=0, style=solid];
m14_130 -> m14_131  [key=0, style=solid, color=green];
m14_47 -> m14_48  [key=0, style=solid, color=green];
m14_47 -> m14_49  [key=2, style=dotted, color=green];
m14_48 -> m14_46  [key=0, style=bold, color=blue];
m14_55 -> m14_56  [key=0, style=solid, color=green];
m14_55 -> m14_57  [key=2, style=dotted, color=green];
m14_56 -> m14_54  [key=0, style=bold, color=blue];
m14_87 -> m14_88  [key=0, style=solid, color=green];
m14_87 -> m14_89  [key=2, style=dotted, color=green];
m14_88 -> m14_86  [key=0, style=bold, color=blue];
m14_131 -> m14_132  [key=0, style=solid, color=green];
m14_131 -> m14_133  [key=2, style=dotted, color=green];
m14_132 -> m14_130  [key=0, style=bold, color=blue];
m14_50 -> m14_51  [key=0, style=solid];
m14_58 -> m14_59  [key=0, style=solid];
m14_82 -> m14_83  [key=0, style=solid];
m14_90 -> m14_91  [key=0, style=solid];
m14_96 -> m14_97  [key=0, style=solid];
m14_95 -> m14_93  [key=0, style=bold, color=blue];
m14_94 -> m14_95  [key=0, style=solid];
m14_94 -> m14_81  [key=2, style=dotted];
m14_100 -> m14_101  [key=0, style=solid];
m14_107 -> m14_108  [key=0, style=solid];
m14_106 -> m14_104  [key=0, style=bold, color=blue];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_85  [key=2, style=dotted];
m14_111 -> m14_112  [key=0, style=solid];
m14_117 -> m14_118  [key=0, style=solid];
m14_116 -> m14_114  [key=0, style=bold, color=blue];
m14_115 -> m14_116  [key=0, style=solid];
m14_115 -> m14_81  [key=2, style=dotted];
m14_127 -> m14_128  [key=0, style=solid];
m14_62 -> m14_63  [key=0, style=solid];
m14_74 -> m14_75  [key=0, style=solid];
m14_52 -> m14_50  [key=0, style=bold, color=blue];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_53  [key=2, style=dotted];
m14_60 -> m14_58  [key=0, style=bold, color=blue];
m14_59 -> m14_60  [key=0, style=solid];
m14_59 -> m14_61  [key=2, style=dotted];
m14_78 -> m14_79  [key=0, style=solid];
m14_84 -> m14_82  [key=0, style=bold, color=blue];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_85  [key=2, style=dotted];
m14_92 -> m14_90  [key=0, style=bold, color=blue];
m14_91 -> m14_92  [key=0, style=solid];
m14_91 -> m14_85  [key=2, style=dotted];
m14_98 -> m14_96  [key=0, style=bold, color=blue];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_99  [key=2, style=dotted];
m14_66 -> m14_67  [key=0, style=solid];
m14_70 -> m14_71  [key=0, style=solid];
m14_121 -> m14_122  [key=0, style=solid];
m14_102 -> m14_100  [key=0, style=bold, color=blue];
m14_101 -> m14_102  [key=0, style=solid];
m14_101 -> m14_103  [key=2, style=dotted];
m14_109 -> m14_107  [key=0, style=bold, color=blue];
m14_108 -> m14_109  [key=0, style=solid];
m14_108 -> m14_110  [key=2, style=dotted];
m14_113 -> m14_111  [key=0, style=bold, color=blue];
m14_112 -> m14_85  [key=2, style=dotted];
m14_112 -> m14_113  [key=0, style=solid];
m14_119 -> m14_117  [key=0, style=bold, color=blue];
m14_118 -> m14_119  [key=0, style=solid];
m14_118 -> m14_120  [key=2, style=dotted];
m14_129 -> m14_127  [key=0, style=bold, color=blue];
m14_128 -> m14_129  [key=0, style=solid];
m14_128 -> m14_69  [key=2, style=dotted];
m14_64 -> m14_62  [key=0, style=bold, color=blue];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_65  [key=2, style=dotted];
m14_76 -> m14_74  [key=0, style=bold, color=blue];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_77  [key=2, style=dotted];
m14_80 -> m14_78  [key=0, style=bold, color=blue];
m14_79 -> m14_81  [key=2, style=dotted];
m14_79 -> m14_80  [key=0, style=solid];
m14_68 -> m14_66  [key=0, style=bold, color=blue];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_69  [key=2, style=dotted];
m14_72 -> m14_70  [key=0, style=bold, color=blue];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_73  [key=2, style=dotted];
m14_123 -> m14_121  [key=0, style=bold, color=blue];
m14_122 -> m14_85  [key=2, style=dotted];
m14_122 -> m14_123  [key=0, style=solid];
m14_125 -> m14_126  [key=0, style=solid];
m14_125 -> m14_73  [key=2, style=dotted];
m14_126 -> m14_124  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid, color=red];
m15_1 -> m15_2  [key=0, style=solid, color=red];
m15_2 -> m15_3  [key=0, style=solid, color=red];
m15_3 -> m15_0  [key=0, style=bold, color=blue];
m15_4 -> m15_1  [key=1, style=dashed, color=red, label="HangFire.Web.JavaScriptHandler"];
m15_4 -> m15_2  [key=1, style=dashed, color=red, label="HangFire.Web.JavaScriptHandler"];
m17_0 -> m17_1  [key=0, style=solid];
m17_4 -> m17_5  [key=0, style=solid, color=green];
m17_4 -> m17_7  [key=2, style=dotted, color=green];
m17_3 -> m17_4  [key=0, style=solid, color=green];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_0  [key=0, style=bold, color=blue];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_6  [key=2, style=dotted];
m17_2 -> m17_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_5 -> m17_0  [key=0, style=bold, color=blue];
m17_8 -> m17_9  [key=0, style=solid];
m17_13 -> m17_14  [key=0, style=solid, color=green];
m17_13 -> m17_15  [key=2, style=dotted, color=green];
m17_12 -> m17_13  [key=0, style=solid, color=green];
m17_14 -> m17_12  [key=0, style=bold, color=blue];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_11  [key=2, style=dotted];
m17_10 -> m17_8  [key=0, style=bold, color=blue];
m17_16 -> m17_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.StateContextMock"];
m17_16 -> m17_13  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.StateContextMock"];
m17_16 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StateContextMock"];
m17_16 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StateContextMock"];
m17_16 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StateContextMock"];
m18_35 -> m18_36  [key=0, style=solid];
m18_36 -> m18_29  [key=2, style=dotted];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_38  [key=2, style=dotted];
m18_37 -> m18_35  [key=0, style=bold, color=blue];
m18_24 -> m18_53  [key=0, style=solid];
m18_53 -> m18_29  [key=2, style=dotted];
m18_53 -> m18_54  [key=0, style=solid];
m18_54 -> m18_55  [key=0, style=solid];
m18_54 -> m18_57  [key=2, style=dotted];
m18_54 -> m18_58  [key=2, style=dotted];
m18_55 -> m18_56  [key=0, style=solid];
m18_56 -> m18_24  [key=0, style=bold, color=blue];
m18_27 -> m18_59  [key=0, style=solid];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_63  [key=2, style=dotted];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_65  [key=2, style=dotted];
m18_60 -> m18_61  [key=0, style=solid];
m18_60 -> m18_64  [key=2, style=dotted];
m18_62 -> m18_27  [key=0, style=bold, color=blue];
m18_31 -> m18_32  [key=0, style=solid];
m18_32 -> m18_29  [key=2, style=dotted];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_34  [key=2, style=dotted];
m18_33 -> m18_31  [key=0, style=bold, color=blue];
m18_2 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m18_2 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m18_2 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m18_7 -> m18_8  [key=0, style=solid];
m18_8 -> m18_9  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_13  [key=2, style=dotted];
m18_5 -> m18_7  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_11  [key=0, style=solid];
m18_3 -> m18_5  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_6 -> m18_11  [key=0, style=solid];
m18_6 -> d10  [key=2, style=dotted];
m18_4 -> m18_11  [key=0, style=solid];
m18_4 -> d10  [key=2, style=dotted];
m18_11 -> m18_2  [key=0, style=bold, color=blue];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_41  [key=0, style=bold, color=crimson];
m18_39 -> m18_42  [key=0, style=bold, color=crimson];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_44  [key=2, style=dotted];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_45  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_46  [key=2, style=dotted];
m18_43 -> m18_39  [key=0, style=bold, color=blue];
m18_29 -> m18_47  [key=0, style=solid];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_51  [key=2, style=dotted];
m18_47 -> m18_49  [key=1, style=dashed, color=darkseagreen4, label=connection];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_52  [key=2, style=dotted];
m18_49 -> m18_50  [key=0, style=solid];
m18_50 -> m18_29  [key=0, style=bold, color=blue];
m18_13 -> m18_14  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid, color=green];
m18_19 -> m18_29  [key=2, style=dotted, color=green];
m18_18 -> m18_19  [key=0, style=solid, color=green];
m18_18 -> m18_18  [key=1, style=dashed, color=darkseagreen4, label=script];
m18_18 -> m18_28  [key=2, style=dotted];
m18_18 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=script];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_30  [key=2, style=dotted];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_17  [key=0, style=solid];
m18_15 -> m18_24  [key=2, style=dotted];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_26  [key=2, style=dotted];
m18_17 -> m18_27  [key=2, style=dotted];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_23  [key=2, style=dotted];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_23  [key=2, style=dotted];
m18_16 -> m18_22  [key=0, style=solid];
m18_16 -> m18_25  [key=2, style=dotted];
m18_22 -> m18_13  [key=0, style=bold, color=blue];
m18_66 -> m18_19  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m18_66 -> m18_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_5  [key=1, style=dashed, color=red, label="Hangfire.JobStorage"];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=0, style=solid, color=red];
m19_5 -> m19_6  [key=0, style=solid, color=red];
m19_5 -> m19_11  [key=2, style=dotted, color=red];
m19_5 -> m19_10  [key=2, style=dotted, color=red];
m19_2 -> m19_7  [key=0, style=solid];
m19_2 -> d10  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid, color=red];
m19_3 -> m19_9  [key=2, style=dotted, color=red];
m19_3 -> m19_5  [key=1, style=dashed, color=red, label=handlers];
m19_3 -> m19_6  [key=1, style=dashed, color=red, label=handlers];
m19_4 -> m19_5  [key=0, style=solid, color=red];
m19_4 -> m19_10  [key=2, style=dotted, color=red];
m19_6 -> m19_7  [key=0, style=solid, color=red];
m19_6 -> m19_12  [key=2, style=dotted, color=red];
m19_7 -> m19_0  [key=0, style=bold, color=blue];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_16  [key=1, style=dashed, color=red, label="Hangfire.Storage.IStorageConnection"];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_16  [key=0, style=solid, color=red];
m19_16 -> m19_17  [key=0, style=solid, color=red];
m19_16 -> m19_18  [key=2, style=dotted, color=red];
m19_15 -> m19_17  [key=0, style=solid];
m19_15 -> d10  [key=2, style=dotted];
m19_17 -> m19_13  [key=0, style=bold, color=blue];
m19_19 -> m19_6  [key=1, style=dashed, color=red, label="Hangfire.States.StateMachineFactory"];
m19_19 -> m19_16  [key=1, style=dashed, color=red, label="Hangfire.States.StateMachineFactory"];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=2, style=dotted];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m21_27 -> m21_28  [key=0, style=solid];
m21_28 -> m21_29  [key=0, style=solid];
m21_28 -> m21_33  [key=2, style=dotted];
m21_29 -> m21_30  [key=0, style=solid];
m21_29 -> m21_34  [key=2, style=dotted];
m21_29 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_30 -> m21_31  [key=0, style=solid];
m21_30 -> m21_34  [key=2, style=dotted];
m21_30 -> m21_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_34  [key=2, style=dotted];
m21_31 -> m21_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_32 -> m21_27  [key=0, style=bold, color=blue];
m21_58 -> m21_59  [key=0, style=solid];
m21_59 -> m21_60  [key=0, style=solid];
m21_59 -> m21_63  [key=2, style=dotted];
m21_60 -> m21_61  [key=0, style=solid];
m21_60 -> m21_33  [key=2, style=dotted];
m21_61 -> m21_62  [key=0, style=solid];
m21_61 -> m21_34  [key=2, style=dotted];
m21_61 -> m21_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_62 -> m21_58  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_9  [key=2, style=dotted];
m21_2 -> m21_3  [key=0, style=solid, color=green];
m21_2 -> m21_10  [key=2, style=dotted];
m21_3 -> m21_4  [key=0, style=solid, color=green];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_11  [key=2, style=dotted];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_12  [key=2, style=dotted];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_13  [key=2, style=dotted];
m21_6 -> m21_14  [key=2, style=dotted];
m21_6 -> m21_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_15  [key=2, style=dotted];
m21_8 -> m21_0  [key=0, style=bold, color=blue];
m21_20 -> m21_21  [key=0, style=solid];
m21_21 -> m21_22  [key=0, style=solid];
m21_21 -> m21_15  [key=2, style=dotted];
m21_21 -> m21_23  [key=1, style=dashed, color=darkseagreen4, label=statisticsHistoryFilter];
m21_22 -> m21_23  [key=0, style=solid];
m21_22 -> m21_25  [key=2, style=dotted];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_26  [key=2, style=dotted];
m21_24 -> m21_20  [key=0, style=bold, color=blue];
m21_92 -> m21_93  [key=0, style=solid];
m21_16 -> m21_17  [key=0, style=solid];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_19  [key=2, style=dotted];
m21_18 -> m21_16  [key=0, style=bold, color=blue];
m21_35 -> m21_36  [key=0, style=solid];
m21_38 -> m21_39  [key=0, style=solid];
m21_42 -> m21_43  [key=0, style=solid];
m21_36 -> m21_37  [key=0, style=solid];
m21_36 -> m21_19  [key=2, style=dotted];
m21_37 -> m21_35  [key=0, style=bold, color=blue];
m21_39 -> m21_40  [key=0, style=solid];
m21_39 -> m21_41  [key=2, style=dotted];
m21_40 -> m21_38  [key=0, style=bold, color=blue];
m21_43 -> m21_44  [key=0, style=solid];
m21_43 -> m21_45  [key=2, style=dotted];
m21_44 -> m21_42  [key=0, style=bold, color=blue];
m21_64 -> m21_65  [key=0, style=solid];
m21_65 -> m21_66  [key=0, style=solid];
m21_65 -> m21_19  [key=2, style=dotted];
m21_66 -> m21_64  [key=0, style=bold, color=blue];
m21_78 -> m21_79  [key=0, style=solid];
m21_78 -> m21_80  [key=2, style=dotted];
m21_78 -> m21_81  [key=2, style=dotted];
m21_78 -> m21_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_78 -> m21_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_83 -> m21_84  [key=0, style=solid];
m21_89 -> m21_90  [key=0, style=solid];
m21_89 -> m21_80  [key=2, style=dotted];
m21_89 -> n8  [key=2, style=dotted];
m21_89 -> m21_81  [key=2, style=dotted];
m21_89 -> m21_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_93 -> m21_94  [key=0, style=solid];
m21_77 -> m21_78  [key=0, style=solid];
m21_88 -> m21_89  [key=0, style=solid];
m21_79 -> m21_77  [key=0, style=bold, color=blue];
m21_82 -> m21_83  [key=0, style=solid];
m21_85 -> m21_86  [key=0, style=solid];
m21_84 -> m21_82  [key=0, style=bold, color=blue];
m21_86 -> m21_87  [key=0, style=solid];
m21_87 -> m21_85  [key=0, style=bold, color=blue];
m21_90 -> m21_88  [key=0, style=bold, color=blue];
m21_94 -> m21_92  [key=0, style=bold, color=blue];
m21_50 -> m21_67  [key=0, style=solid];
m21_50 -> m21_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_50 -> m21_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_50 -> m21_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_50 -> m21_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_50 -> m21_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_50 -> m21_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_50 -> m21_48  [key=3, color=darkorchid, style=bold, label="Parameter variable string prefix"];
m21_50 -> m21_54  [key=3, color=darkorchid, style=bold, label="Parameter variable string prefix"];
m21_67 -> m21_68  [key=0, style=solid];
m21_67 -> m21_74  [key=2, style=dotted];
m21_67 -> m21_71  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m21_67 -> m21_78  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m21_67 -> m21_83  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m21_71 -> m21_72  [key=0, style=solid];
m21_71 -> m21_34  [key=2, style=dotted];
m21_71 -> m21_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_72 -> m21_73  [key=0, style=solid];
m21_72 -> m21_34  [key=2, style=dotted];
m21_72 -> m21_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_68 -> m21_69  [key=0, style=solid];
m21_68 -> m21_75  [key=2, style=dotted];
m21_68 -> m21_74  [key=2, style=dotted];
m21_68 -> m21_71  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m21_68 -> m21_78  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m21_68 -> m21_83  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m21_69 -> m21_70  [key=0, style=solid];
m21_69 -> m21_74  [key=2, style=dotted];
m21_69 -> m21_72  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m21_69 -> m21_89  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m21_69 -> m21_93  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m21_70 -> m21_71  [key=0, style=solid];
m21_70 -> m21_76  [key=2, style=dotted];
m21_70 -> m21_74  [key=2, style=dotted];
m21_70 -> m21_72  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m21_70 -> m21_89  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m21_70 -> m21_93  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m21_73 -> m21_50  [key=0, style=bold, color=blue];
m21_51 -> m21_52  [key=0, style=solid];
m21_52 -> m21_53  [key=0, style=solid];
m21_52 -> m21_56  [key=2, style=dotted];
m21_52 -> m21_57  [key=2, style=dotted];
m21_53 -> m21_54  [key=0, style=solid];
m21_53 -> m21_33  [key=2, style=dotted];
m21_54 -> m21_55  [key=0, style=solid];
m21_54 -> m21_50  [key=2, style=dotted];
m21_55 -> m21_51  [key=0, style=bold, color=blue];
m21_46 -> m21_47  [key=0, style=solid];
m21_47 -> m21_48  [key=0, style=solid];
m21_47 -> m21_33  [key=2, style=dotted];
m21_48 -> m21_49  [key=0, style=solid];
m21_48 -> m21_50  [key=2, style=dotted];
m21_49 -> m21_46  [key=0, style=bold, color=blue];
m21_95 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_3  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_95 -> m21_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m21_96 -> m21_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_96 -> m21_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_96 -> m21_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_96 -> m21_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_97 -> m21_78  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m21_97 -> m21_83  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m21_98 -> m21_78  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m21_98 -> m21_83  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m21_99 -> m21_89  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m21_99 -> m21_93  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m21_100 -> m21_89  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m21_100 -> m21_93  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_4 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_4 -> m22_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label=failedState];
m22_5 -> m22_12  [key=1, style=dashed, color=darkseagreen4, label=failedState];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_14  [key=2, style=dotted];
m22_8 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m22_10 -> m22_13  [key=0, style=solid];
m22_10 -> m22_15  [key=2, style=dotted];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_16  [key=2, style=dotted];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_8  [key=0, style=solid];
m22_7 -> m22_13  [key=0, style=solid];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_11  [key=0, style=solid];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_13  [key=0, style=solid];
m22_13 -> m22_4  [key=0, style=bold, color=blue];
m22_23 -> m22_29  [key=0, style=solid];
m22_23 -> m22_30  [key=1, style=dashed, color=darkseagreen4, label=long];
m22_23 -> m22_15  [key=3, color=darkorchid, style=bold, label="Parameter variable long retryCount"];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_32  [key=2, style=dotted];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_33  [key=2, style=dotted];
m22_30 -> m22_34  [key=2, style=dotted];
m22_30 -> m22_35  [key=2, style=dotted];
m22_31 -> m22_23  [key=0, style=bold, color=blue];
m22_15 -> m22_17  [key=0, style=solid];
m22_15 -> m22_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_15 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_15 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_15 -> m22_4  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ElectStateContext context"];
m22_15 -> m22_8  [key=3, color=darkorchid, style=bold, label="Parameter variable int retryAttempt"];
m22_15 -> m22_5  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.FailedState failedState"];
m22_17 -> m22_18  [key=0, style=solid];
m22_17 -> m22_23  [key=2, style=dotted];
m22_17 -> m22_24  [key=2, style=dotted];
m22_17 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label=delay];
m22_17 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label=delay];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_25  [key=2, style=dotted];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_26  [key=2, style=dotted];
m22_19 -> m22_27  [key=2, style=dotted];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_28  [key=2, style=dotted];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_22  [key=0, style=solid];
m22_22 -> m22_15  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_2 -> m22_3  [key=0, style=solid];
m22_3 -> m22_0  [key=0, style=bold, color=blue];
m22_36 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
}
