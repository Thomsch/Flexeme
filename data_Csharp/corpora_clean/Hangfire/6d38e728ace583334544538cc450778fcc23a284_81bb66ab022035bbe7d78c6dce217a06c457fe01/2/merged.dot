digraph  {
m0_0 [label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="CommandHandler.cs"];
m0_1 [label="_command = command", span="28-28", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", color=red, community=0, file="CommandHandler.cs"];
m0_2 [label="Exit HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="CommandHandler.cs"];
m0_3 [label="Entry HangFire.Web.CommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="CommandHandler.cs"];
m0_4 [label="Request.HttpMethod != WebRequestMethods.Http.Post", span="33-33", cluster="HangFire.Web.CommandHandler.ProcessRequest()", color=red, community=0, file="CommandHandler.cs"];
m0_5 [label="throw new HttpException((int)HttpStatusCode.MethodNotAllowed, ''Wrong HTTP method.'');", span="35-35", cluster="HangFire.Web.CommandHandler.ProcessRequest()", color=red, community=0, file="CommandHandler.cs"];
m0_6 [label="_command()", span="38-38", cluster="HangFire.Web.CommandHandler.ProcessRequest()", color=red, community=0, file="CommandHandler.cs"];
m0_7 [label="Response.StatusCode = (int)HttpStatusCode.NoContent", span="40-40", cluster="HangFire.Web.CommandHandler.ProcessRequest()", color=red, community=0, file="CommandHandler.cs"];
m0_8 [label="Response.StatusCode = 422", span="44-44", cluster="HangFire.Web.CommandHandler.ProcessRequest()", color=red, community=0, file="CommandHandler.cs"];
m0_9 [label="Exit HangFire.Web.CommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="CommandHandler.cs"];
m0_11 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="CommandHandler.cs"];
m0_10 [label="Entry HttpException.cstr", span="", cluster="HttpException.cstr", file="CommandHandler.cs"];
m0_12 [label="HangFire.Web.CommandHandler", span="", file="CommandHandler.cs"];
m1_0 [label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs"];
m1_1 [label="Queue = queue", span="6-6", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs"];
m1_2 [label="Exit HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs"];
m1_3 [label="HangFire.Web.Pages.FetchedJobsPage", span="", file="FetchedJobsPage.cs"];
m2_0 [label="Entry HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="11-11", cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="FetchedJobsPage.generated.cs"];
m2_1 [label="Exit HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="11-11", cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="FetchedJobsPage.generated.cs"];
m3_51 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="57-57", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="GlobalDashboardRoutes.cs"];
m3_52 [label="var scheduler = CreateScheduler()", span="59-59", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_53 [label="scheduler.Execute(_cts.Token)", span="61-61", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_54 [label="_storage.Verify(x => x.GetConnection())", span="63-63", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_55 [label="_connection.Verify(x => x.Dispose())", span="64-64", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_56 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="57-57", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="GlobalDashboardRoutes.cs"];
m3_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="GlobalDashboardRoutes.cs"];
m3_39 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="GlobalDashboardRoutes.cs"];
m3_35 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="GlobalDashboardRoutes.cs"];
m3_36 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan))", span="39-41", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_37 [label="Assert.Equal(''storage'', exception.ParamName)", span="43-43", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_38 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="GlobalDashboardRoutes.cs"];
m3_15 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="GlobalDashboardRoutes.cs"];
m3_0 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="GlobalDashboardRoutes.cs"];
m3_1 [label="_storage = new Mock<JobStorage>()", span="21-21", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="GlobalDashboardRoutes.cs", color=green, community=0];
m3_2 [label="_connection = new Mock<IStorageConnection>()", span="22-22", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="GlobalDashboardRoutes.cs", color=green, community=0];
m3_3 [label="_stateMachine = new Mock<IStateMachine>()", span="23-23", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="GlobalDashboardRoutes.cs", color=green, community=0];
m3_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="GlobalDashboardRoutes.cs"];
m3_9 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="32-33", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="GlobalDashboardRoutes.cs", color=green, community=0];
m3_76 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="81-81", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="GlobalDashboardRoutes.cs"];
m3_77 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="83-84", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_78 [label="var scheduler = CreateScheduler()", span="85-85", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_79 [label="scheduler.Execute(_cts.Token)", span="87-87", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_80 [label="_stateMachine.Verify(\r\n                x => x.TryToChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>()),\r\n                Times.Never)", span="89-91", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_81 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="81-81", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="GlobalDashboardRoutes.cs"];
m3_43 [label="Entry SchedulePoller.cstr", span="", cluster="SchedulePoller.cstr", file="GlobalDashboardRoutes.cs"];
m3_44 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="GlobalDashboardRoutes.cs"];
m3_45 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan))", span="49-51", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_46 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="53-53", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_47 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="GlobalDashboardRoutes.cs"];
m3_31 [label="Entry Unk.GetFirstByLowestScoreFromSet", span="", cluster="Unk.GetFirstByLowestScoreFromSet", file="GlobalDashboardRoutes.cs"];
m3_27 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="GlobalDashboardRoutes.cs"];
m3_67 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="GlobalDashboardRoutes.cs"];
m3_68 [label="var scheduler = CreateScheduler()", span="70-70", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_69 [label="scheduler.Execute(_cts.Token)", span="72-72", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_70 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName }))", span="74-77", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_71 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="GlobalDashboardRoutes.cs"];
m3_4 [label="_cts = new CancellationTokenSource()", span="24-24", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="GlobalDashboardRoutes.cs", color=green, community=0];
m3_17 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="GlobalDashboardRoutes.cs"];
m3_5 [label="_cts.Cancel()", span="25-25", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="GlobalDashboardRoutes.cs", color=green, community=0];
m3_66 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="GlobalDashboardRoutes.cs"];
m3_14 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="GlobalDashboardRoutes.cs"];
m3_6 [label="Entry lambda expression", span="9-9", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_8 [label="Exit lambda expression", span="9-9", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_7 [label="new DashboardPage()", span="9-9", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_10 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="GlobalDashboardRoutes.cs"];
m3_75 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="GlobalDashboardRoutes.cs"];
m3_19 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_24 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_28 [label="Entry lambda expression", span="32-33", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_25 [label="x.GetConnection()", span="31-31", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_26 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_29 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="32-33", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_30 [label="Exit lambda expression", span="32-33", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_32 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_33 [label="time > 0", span="33-33", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_34 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_40 [label="Entry lambda expression", span="40-41", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_41 [label="new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan)", span="40-41", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_42 [label="Exit lambda expression", span="40-41", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_48 [label="Entry lambda expression", span="50-51", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_49 [label="new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan)", span="50-51", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_50 [label="Exit lambda expression", span="50-51", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_60 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_63 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_61 [label="x.GetConnection()", span="63-63", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_62 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_64 [label="x.Dispose()", span="64-64", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_65 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_72 [label="Entry lambda expression", span="74-77", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_73 [label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName })", span="74-77", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_74 [label="Exit lambda expression", span="74-77", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_82 [label="Entry lambda expression", span="83-84", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_88 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_83 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="83-84", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_84 [label="Exit lambda expression", span="83-84", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_85 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_86 [label="time > 0", span="84-84", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_87 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_89 [label="x.TryToChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>())", span="90-90", cluster="lambda expression", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_90 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_20 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="28-28", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_21 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m3_59 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="GlobalDashboardRoutes.cs"];
m3_13 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="GlobalDashboardRoutes.cs"];
m3_23 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="GlobalDashboardRoutes.cs"];
m3_18 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="GlobalDashboardRoutes.cs"];
m3_12 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="GlobalDashboardRoutes.cs"];
m3_11 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="GlobalDashboardRoutes.cs"];
m3_58 [label="Entry Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="GlobalDashboardRoutes.cs"];
m3_57 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="94-94", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="GlobalDashboardRoutes.cs"];
m3_91 [label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan);", span="96-96", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m3_92 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="94-94", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="GlobalDashboardRoutes.cs"];
m3_93 [label="Hangfire.Core.Tests.Server.SchedulePollerFacts", span="", file="GlobalDashboardRoutes.cs"];
m4_6 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="33-33", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="HangFireConfig.cs"];
m4_7 [label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", span="28-28", cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", file="HangFireConfig.cs"];
m4_8 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()", span="31-31", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()", file="HangFireConfig.cs"];
m4_0 [label="Entry MvcSample.HangFireConfig.Start()", span="17-17", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m4_1 [label="var storage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.Sample;Trusted_Connection=True;'')", span="27-28", cluster="MvcSample.HangFireConfig.Start()", color=red, community=1, file="HangFireConfig.cs"];
m4_2 [label="storage.UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')", span="29-29", cluster="MvcSample.HangFireConfig.Start()", color=red, community=0, file="HangFireConfig.cs"];
m4_3 [label="JobStorage.Current = storage", span="31-31", cluster="MvcSample.HangFireConfig.Start()", color=red, community=0, file="HangFireConfig.cs"];
m4_4 [label="_server = new AspNetBackgroundJobServer()", span="46-46", cluster="MvcSample.HangFireConfig.Start()", color=red, community=0, file="HangFireConfig.cs"];
m4_5 [label="Exit MvcSample.HangFireConfig.Start()", span="17-17", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m4_9 [label="Entry MvcSample.HangFireConfig.Stop()", span="50-50", cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs"];
m4_10 [label="_server.Stop()", span="52-52", cluster="MvcSample.HangFireConfig.Stop()", color=red, community=0, file="HangFireConfig.cs"];
m4_11 [label="Exit MvcSample.HangFireConfig.Stop()", span="50-50", cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs"];
m4_12 [label="Entry HangFire.BackgroundJobServer.Stop()", span="71-71", cluster="HangFire.BackgroundJobServer.Stop()", file="HangFireConfig.cs"];
m5_34 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddWithOrderPlacesFilterInGlobalScope()", span="74-74", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddWithOrderPlacesFilterInGlobalScope()", file="HangFirePageFactory.cs"];
m5_35 [label="_collection.Add(_filterInstance, 42)", span="77-77", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddWithOrderPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_36 [label="JobFilter filter = Assert.Single(_collection)", span="80-80", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddWithOrderPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_37 [label="Assert.Same(_filterInstance, filter.Instance)", span="81-81", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddWithOrderPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_38 [label="Assert.Equal(JobFilterScope.Global, filter.Scope)", span="82-82", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddWithOrderPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_39 [label="Assert.Equal(42, filter.Order)", span="83-83", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddWithOrderPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_40 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddWithOrderPlacesFilterInGlobalScope()", span="74-74", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddWithOrderPlacesFilterInGlobalScope()", file="HangFirePageFactory.cs"];
m5_33 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="HangFirePageFactory.cs"];
m5_18 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="HangFirePageFactory.cs"];
m5_49 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.RemoveDeletesFilterByInstance()", span="100-100", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.RemoveDeletesFilterByInstance()", file="HangFirePageFactory.cs"];
m5_50 [label="_collection.Add(_filterInstance)", span="103-103", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.RemoveDeletesFilterByInstance()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_51 [label="_collection.Remove(_filterInstance)", span="106-106", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.RemoveDeletesFilterByInstance()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_52 [label="Assert.Empty(_collection)", span="109-109", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.RemoveDeletesFilterByInstance()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_53 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.RemoveDeletesFilterByInstance()", span="100-100", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.RemoveDeletesFilterByInstance()", file="HangFirePageFactory.cs"];
m5_16 [label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="HangFirePageFactory.cs"];
m5_63 [label="Entry Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", span="32-32", cluster="Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", file="HangFirePageFactory.cs"];
m5_25 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddPlacesFilterInGlobalScope()", span="61-61", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddPlacesFilterInGlobalScope()", file="HangFirePageFactory.cs"];
m5_26 [label="_collection.Add(_filterInstance)", span="64-64", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_27 [label="JobFilter filter = Assert.Single(_collection)", span="67-67", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_28 [label="Assert.Same(_filterInstance, filter.Instance)", span="68-68", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_29 [label="Assert.Equal(JobFilterScope.Global, filter.Scope)", span="69-69", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_30 [label="Assert.Equal(-1, filter.Order)", span="70-70", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddPlacesFilterInGlobalScope()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_31 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddPlacesFilterInGlobalScope()", span="61-61", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddPlacesFilterInGlobalScope()", file="HangFirePageFactory.cs"];
m5_14 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.GetFilterInstance<TFilter>()", span="145-145", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.GetFilterInstance<TFilter>()", file="HangFirePageFactory.cs"];
m5_74 [label="return new Mock<TFilter>().Object;", span="147-147", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.GetFilterInstance<TFilter>()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_75 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.GetFilterInstance<TFilter>()", span="145-145", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.GetFilterInstance<TFilter>()", file="HangFirePageFactory.cs"];
m5_54 [label="Entry Hangfire.Common.GlobalJobFilterCollection.Remove(object)", span="100-100", cluster="Hangfire.Common.GlobalJobFilterCollection.Remove(object)", file="HangFirePageFactory.cs"];
m5_64 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Count_ReturnsNumberOfElements()", span="128-128", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Count_ReturnsNumberOfElements()", file="HangFirePageFactory.cs"];
m5_65 [label="_collection.Add(_filterInstance)", span="130-130", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Count_ReturnsNumberOfElements()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_66 [label="Assert.Equal(1, _collection.Count)", span="132-132", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Count_ReturnsNumberOfElements()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_67 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Count_ReturnsNumberOfElements()", span="128-128", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Count_ReturnsNumberOfElements()", file="HangFirePageFactory.cs"];
m5_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="HangFirePageFactory.cs"];
m5_47 [label="Entry Hangfire.Common.GlobalJobFilterCollection.Contains(object)", span="91-91", cluster="Hangfire.Common.GlobalJobFilterCollection.Contains(object)", file="HangFirePageFactory.cs"];
m5_73 [label="Entry Hangfire.Common.GlobalJobFilterCollection.Clear()", span="81-81", cluster="Hangfire.Common.GlobalJobFilterCollection.Clear()", file="HangFirePageFactory.cs"];
m5_42 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.ContainsFindsFilterByInstance()", span="87-87", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.ContainsFindsFilterByInstance()", file="HangFirePageFactory.cs"];
m5_43 [label="_collection.Add(_filterInstance)", span="90-90", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.ContainsFindsFilterByInstance()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_44 [label="bool result = _collection.Contains(_filterInstance)", span="93-93", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.ContainsFindsFilterByInstance()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_45 [label="Assert.True(result)", span="96-96", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.ContainsFindsFilterByInstance()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_46 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.ContainsFindsFilterByInstance()", span="87-87", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.ContainsFindsFilterByInstance()", file="HangFirePageFactory.cs"];
m5_9 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddAcceptsFilterInstances()", span="41-41", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddAcceptsFilterInstances()", file="HangFirePageFactory.cs"];
m5_10 [label="var filters = new object[] {\r\n                GetFilterInstance<IClientFilter>(),\r\n                GetFilterInstance<IServerFilter>(),\r\n                GetFilterInstance<IClientExceptionFilter>(),\r\n                GetFilterInstance<IServerExceptionFilter>(),\r\n                GetFilterInstance<IApplyStateFilter>(),\r\n                GetFilterInstance<IElectStateFilter>()\r\n            }.ToList()", span="44-51", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddAcceptsFilterInstances()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_11 [label="filters.ForEach(f => _collection.Add(f))", span="54-54", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddAcceptsFilterInstances()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_12 [label="Assert.Equal(filters, _collection.Select(i => i.Instance))", span="57-57", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddAcceptsFilterInstances()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_13 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddAcceptsFilterInstances()", span="41-41", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddAcceptsFilterInstances()", file="HangFirePageFactory.cs"];
m5_56 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.CollectionIsIFilterProviderWhichReturnsAllFilters()", span="113-113", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.CollectionIsIFilterProviderWhichReturnsAllFilters()", file="HangFirePageFactory.cs"];
m5_57 [label="_collection.Add(_filterInstance)", span="116-116", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.CollectionIsIFilterProviderWhichReturnsAllFilters()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_58 [label="var provider = (IJobFilterProvider)_collection", span="117-117", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.CollectionIsIFilterProviderWhichReturnsAllFilters()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_59 [label="IEnumerable<JobFilter> result = provider.GetFilters(null)", span="120-120", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.CollectionIsIFilterProviderWhichReturnsAllFilters()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_60 [label="JobFilter filter = Assert.Single(result)", span="123-123", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.CollectionIsIFilterProviderWhichReturnsAllFilters()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_61 [label="Assert.Same(_filterInstance, filter.Instance)", span="124-124", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.CollectionIsIFilterProviderWhichReturnsAllFilters()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_62 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.CollectionIsIFilterProviderWhichReturnsAllFilters()", span="113-113", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.CollectionIsIFilterProviderWhichReturnsAllFilters()", file="HangFirePageFactory.cs"];
m5_76 [label="Entry Mock<TFilter>.cstr", span="", cluster="Mock<TFilter>.cstr", file="HangFirePageFactory.cs"];
m5_8 [label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56", cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="HangFirePageFactory.cs"];
m5_0 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddRejectsNonFilterInstances()", span="31-31", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddRejectsNonFilterInstances()", file="HangFirePageFactory.cs"];
m5_1 [label=AddRejectsNonFilterInstancesData, span="33-33", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddRejectsNonFilterInstances()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_2 [label="Assert.Throws<InvalidOperationException>(() => _collection.Add(instance))", span="36-36", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddRejectsNonFilterInstances()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_3 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddRejectsNonFilterInstances()", span="31-31", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.AddRejectsNonFilterInstances()", file="HangFirePageFactory.cs"];
m5_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="HangFirePageFactory.cs"];
m5_22 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="HangFirePageFactory.cs"];
m5_6 [label="_collection.Add(instance)", span="36-36", cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs"];
m5_5 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="HangFirePageFactory.cs"];
m5_7 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="HangFirePageFactory.cs"];
m5_19 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="HangFirePageFactory.cs"];
m5_20 [label="_collection.Add(f)", span="54-54", cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs"];
m5_21 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="HangFirePageFactory.cs"];
m5_23 [label="i.Instance", span="57-57", cluster="lambda expression", color=red, community=0, file="HangFirePageFactory.cs"];
m5_24 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="HangFirePageFactory.cs"];
m5_17 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="HangFirePageFactory.cs"];
m5_32 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="HangFirePageFactory.cs"];
m5_48 [label="Entry Unk.True", span="", cluster="Unk.True", file="HangFirePageFactory.cs"];
m5_68 [label="Entry Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Clear_RemovesAllElementsFromCollection()", span="136-136", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Clear_RemovesAllElementsFromCollection()", file="HangFirePageFactory.cs"];
m5_69 [label="_collection.Add(_filterInstance)", span="138-138", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Clear_RemovesAllElementsFromCollection()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_70 [label="_collection.Clear()", span="140-140", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Clear_RemovesAllElementsFromCollection()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_71 [label="Assert.Equal(0, _collection.Count)", span="142-142", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Clear_RemovesAllElementsFromCollection()", color=red, community=0, file="HangFirePageFactory.cs"];
m5_72 [label="Exit Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Clear_RemovesAllElementsFromCollection()", span="136-136", cluster="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts.Clear_RemovesAllElementsFromCollection()", file="HangFirePageFactory.cs"];
m5_55 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="HangFirePageFactory.cs"];
m5_41 [label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object, int)", span="67-67", cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object, int)", file="HangFirePageFactory.cs"];
m5_77 [label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts", span="", file="HangFirePageFactory.cs"];
m5_78 [label=instance, span="", file="HangFirePageFactory.cs"];
m7_8 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobDetailsPage1.generated.cs"];
m7_0 [label="Entry HangFire.States.JobState.JobState(string)", span="7-7", cluster="HangFire.States.JobState.JobState(string)", file="JobDetailsPage1.generated.cs"];
m7_1 [label="Reason = reason", span="9-9", cluster="HangFire.States.JobState.JobState(string)", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m7_2 [label="Exit HangFire.States.JobState.JobState(string)", span="7-7", cluster="HangFire.States.JobState.JobState(string)", file="JobDetailsPage1.generated.cs"];
m7_5 [label="Entry HangFire.States.JobState.GetProperties()", span="18-18", cluster="HangFire.States.JobState.GetProperties()", file="JobDetailsPage1.generated.cs"];
m7_6 [label="return new Dictionary<string, string>();", span="20-20", cluster="HangFire.States.JobState.GetProperties()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m7_7 [label="Exit HangFire.States.JobState.GetProperties()", span="18-18", cluster="HangFire.States.JobState.GetProperties()", file="JobDetailsPage1.generated.cs"];
m7_9 [label="HangFire.States.JobState", span="", file="JobDetailsPage1.generated.cs"];
m8_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobsPage.cs"];
m8_25 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobsPage.cs"];
m8_27 [label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RecurringJobsPage.cs"];
m8_0 [label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_1 [label="RecurringJobs = new List<RecurringJobDto>()", span="11-11", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_2 [label="var connection = JobStorage.Current.GetConnection()", span="13-13", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_3 [label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="15-15", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_5 [label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="19-19", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_18 [label="var stateData = connection.GetStateData(dto.LastJobId)", span="49-49", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_4 [label=ids, span="17-17", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_7 [label="RecurringJobs.Add(new RecurringJobDto { Id = id, Removed = true })", span="23-23", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_8 [label="var dto = new RecurringJobDto { Id = id }", span="27-27", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_6 [label="hash == null", span="21-21", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_9 [label="dto.Cron = hash[''Cron'']", span="28-28", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_10 [label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="32-32", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_14 [label="hash.ContainsKey(''NextExecution'')", span="40-40", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_15 [label="dto.NextExecution = JobHelper.DeserializeDateTime(hash[''NextExecution''])", span="42-42", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_16 [label="hash.ContainsKey(''LastJobId'')", span="45-45", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_17 [label="dto.LastJobId = hash[''LastJobId'']", span="47-47", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_21 [label="hash.ContainsKey(''LastExecution'')", span="56-56", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_22 [label="dto.LastExecution = JobHelper.DeserializeDateTime(hash[''LastExecution''])", span="58-58", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_11 [label="dto.Job = invocationData.Deserialize()", span="33-33", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_13 [label="dto.LoadException = ex", span="37-37", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_20 [label="dto.LastJobState = stateData.Name", span="52-52", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_23 [label="RecurringJobs.Add(dto)", span="61-61", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_12 [label=JobLoadException, span="35-35", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_19 [label="stateData != null", span="50-50", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_24 [label="Exit HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m8_31 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobsPage.cs"];
m8_32 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="31-31", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobsPage.cs"];
m8_33 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="RecurringJobsPage.cs"];
m8_35 [label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="56-56", cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobsPage.cs"];
m8_29 [label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobsPage.cs"];
m8_36 [label="Entry HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45", cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="RecurringJobsPage.cs"];
m8_30 [label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", span="68-68", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", file="RecurringJobsPage.cs"];
m8_28 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobsPage.cs"];
m8_26 [label="Entry HangFire.JobStorage.GetConnection()", span="56-56", cluster="HangFire.JobStorage.GetConnection()", file="RecurringJobsPage.cs"];
m8_37 [label="HangFire.Web.Pages.RecurringJobsPage", span="", file="RecurringJobsPage.cs"];
m10_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="Startup.cs"];
m10_6 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="33-33", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="Startup.cs"];
m10_5 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="Startup.cs"];
m10_7 [label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", span="28-28", cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", file="Startup.cs"];
m10_0 [label="Entry MvcSample.Startup.Configuration(IAppBuilder)", span="12-12", cluster="MvcSample.Startup.Configuration(IAppBuilder)", file="Startup.cs"];
m10_1 [label="app.Map(''/hangfire'', subApp => subApp.Use<DashboardMiddleware>(GlobalDashboardRoutes.Routes))", span="14-14", cluster="MvcSample.Startup.Configuration(IAppBuilder)", color=green, community=0, file="Startup.cs"];
m10_2 [label="var storage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.Sample;Trusted_Connection=True;'')", span="16-17", cluster="MvcSample.Startup.Configuration(IAppBuilder)", color=green, community=1, file="Startup.cs"];
m10_3 [label="storage.UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')", span="18-18", cluster="MvcSample.Startup.Configuration(IAppBuilder)", color=green, community=0, file="Startup.cs"];
m10_4 [label="Exit MvcSample.Startup.Configuration(IAppBuilder)", span="12-12", cluster="MvcSample.Startup.Configuration(IAppBuilder)", file="Startup.cs"];
m10_8 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="Startup.cs"];
m10_9 [label="subApp.Use<DashboardMiddleware>(GlobalDashboardRoutes.Routes)", span="14-14", cluster="lambda expression", color=green, community=0, file="Startup.cs"];
m10_10 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="Startup.cs"];
m11_37 [label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="_Paginator.generated.cs"];
m11_3 [label="_pager.TotalPageCount > 1", span="35-35", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_4 [label="WriteLiteral(''        <div class=\''btn-group paginator\''>\r\n'')", span="41-41", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_5 [label="_pager.PagerItems", span="46-46", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_146 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="_Paginator.generated.cs"];
m11_12 [label="WriteLiteral(''\''>\r\n                            '')", span="75-75", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_22 [label="WriteLiteral(''                        <a href=\'''')", span="127-127", cluster="HangFire.Web.Pages.Paginator.Execute()", color=green, community=0, file="_Paginator.generated.cs"];
m11_21 [label="Pager.ItemType.PrevPage", span="122-122", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_19 [label="Write(page.Disabled ? ''disabled'' : null)", span="111-111", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_20 [label="WriteLiteral(''\''>\r\n                            Next\r\n                        </a>\r\n'')", span="116-116", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_24 [label="WriteLiteral(''\'' class=\''btn btn-default '')", span="137-137", cluster="HangFire.Web.Pages.Paginator.Execute()", color=green, community=0, file="_Paginator.generated.cs"];
m11_25 [label="Write(page.Disabled ? ''disabled'' : null)", span="142-142", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_26 [label="WriteLiteral(''\''>\r\n                            Prev\r\n                        </a>\r\n'')", span="147-147", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_23 [label="Write(_pager.PageUrl(page.PageIndex))", span="132-132", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_15 [label="Pager.ItemType.NextPage", span="91-91", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_17 [label="Write(_pager.PageUrl(page.PageIndex))", span="101-101", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_18 [label="WriteLiteral(''\'' class=\''btn btn-default '')", span="106-106", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_14 [label="WriteLiteral(''  \r\n                        </a>\r\n'')", span="85-85", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_16 [label="WriteLiteral(''                        <a href=\'''')", span="96-96", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_13 [label="Write(page.PageIndex)", span="80-80", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_27 [label="Pager.ItemType.MorePage", span="153-153", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m11_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="_Paginator.generated.cs"];
m11_96 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="_Paginator.generated.cs"];
m11_204 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="_Paginator.generated.cs"];
m11_65 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="_Paginator.generated.cs"];
m11_38 [label="HangFire.Web.Pages.Paginator", span="", cluster="System.TimeSpan.FromMinutes(double)", file="_Paginator.generated.cs"];
m11_36 [label="return Redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="110-112", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="_Paginator.generated.cs", color=green, community=0];
m11_94 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="_Paginator.generated.cs"];
m11_0 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="_Paginator.generated.cs"];
m11_1 [label="Redis = redis", span="35-35", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="_Paginator.generated.cs"];
m11_2 [label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="_Paginator.generated.cs"];
m11_31 [label="Entry Unk.PopAndPushItemBetweenLists", span="", cluster="Unk.PopAndPushItemBetweenLists", file="_Paginator.generated.cs"];
m11_6 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="_Paginator.generated.cs"];
m11_29 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="_Paginator.generated.cs"];
m11_9 [label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="45-45", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="_Paginator.generated.cs"];
m11_11 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="_Paginator.generated.cs"];
m11_7 [label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="45-45", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="_Paginator.generated.cs"];
m11_8 [label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="47-47", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="_Paginator.generated.cs"];
m11_10 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="_Paginator.generated.cs"];
m11_28 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="_Paginator.generated.cs"];
m11_30 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="_Paginator.generated.cs"];
m11_32 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="_Paginator.generated.cs"];
m11_33 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="_Paginator.generated.cs"];
m11_34 [label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", span="23-23", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(string, string)", file="_Paginator.generated.cs"];
m11_203 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="_Paginator.generated.cs"];
m11_171 [label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="298-298", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_172 [label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="300-300", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_175 [label="var pipeline = Redis.CreatePipeline()", span="305-305", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_184 [label="RemoveServer(Redis, heartbeat.Key)", span="333-333", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_173 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="301-301", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_176 [label=serverNames, span="307-307", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_174 [label="var utcNow = DateTime.UtcNow", span="303-303", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_178 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="311-319", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_179 [label="pipeline.Flush()", span="322-322", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_183 [label="utcNow > maxTime.Add(timeOut)", span="331-331", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_182 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="328-329", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_185 [label="removedServerCount++", span="334-334", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_181 [label=heartbeats, span="326-326", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_177 [label="var name = serverName", span="309-309", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_180 [label="var removedServerCount = 0", span="325-325", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_186 [label="return removedServerCount;", span="338-338", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_187 [label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="298-298", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_141 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="_Paginator.generated.cs"];
m11_120 [label="Entry Unk.RemoveEntryFromHash", span="", cluster="Unk.RemoveEntryFromHash", file="_Paginator.generated.cs"];
m11_168 [label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="290-290", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="_Paginator.generated.cs"];
m11_169 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="292-295", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="_Paginator.generated.cs"];
m11_170 [label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="290-290", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="_Paginator.generated.cs"];
m11_167 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="_Paginator.generated.cs"];
m11_157 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="282-284", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="_Paginator.generated.cs"];
m11_154 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="274-274", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="_Paginator.generated.cs"];
m11_156 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="278-280", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="_Paginator.generated.cs"];
m11_155 [label="var transaction = redis.CreateTransaction()", span="276-276", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="_Paginator.generated.cs"];
m11_158 [label="transaction.Commit()", span="286-286", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="_Paginator.generated.cs"];
m11_159 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="274-274", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="_Paginator.generated.cs"];
m11_35 [label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="_Paginator.generated.cs"];
m11_102 [label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="208-208", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="_Paginator.generated.cs"];
m11_103 [label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="210-212", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="_Paginator.generated.cs"];
m11_104 [label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="208-208", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="_Paginator.generated.cs"];
m11_69 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="_Paginator.generated.cs"];
m11_56 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="_Paginator.generated.cs"];
m11_190 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="_Paginator.generated.cs"];
m11_205 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="_Paginator.generated.cs"];
m11_193 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="_Paginator.generated.cs"];
m11_129 [label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="242-242", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="_Paginator.generated.cs"];
m11_130 [label="var transaction = Redis.CreateTransaction()", span="244-244", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="_Paginator.generated.cs"];
m11_131 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="246-247", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="_Paginator.generated.cs"];
m11_132 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="249-255", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="_Paginator.generated.cs"];
m11_135 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="260-262", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="_Paginator.generated.cs"];
m11_136 [label="transaction.Commit()", span="265-265", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="_Paginator.generated.cs"];
m11_134 [label="var queue1 = queue", span="259-259", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="_Paginator.generated.cs"];
m11_133 [label="context.Queues", span="257-257", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="_Paginator.generated.cs"];
m11_137 [label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="242-242", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="_Paginator.generated.cs"];
m11_145 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="_Paginator.generated.cs"];
m11_202 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="_Paginator.generated.cs"];
m11_58 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="_Paginator.generated.cs"];
m11_150 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="_Paginator.generated.cs"];
m11_110 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked''))", span="227-229", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="_Paginator.generated.cs"];
m11_107 [label="var transaction = Redis.CreateTransaction()", span="217-217", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="_Paginator.generated.cs"];
m11_106 [label="Entry HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="_Paginator.generated.cs"];
m11_108 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1))", span="219-222", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="_Paginator.generated.cs"];
m11_109 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched''))", span="224-226", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="_Paginator.generated.cs"];
m11_111 [label="transaction.Commit()", span="231-231", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="_Paginator.generated.cs"];
m11_112 [label="Exit HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="_Paginator.generated.cs"];
m11_191 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="_Paginator.generated.cs"];
m11_163 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="_Paginator.generated.cs"];
m11_151 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="269-269", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="_Paginator.generated.cs"];
m11_152 [label="RemoveServer(Redis, serverId)", span="271-271", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="_Paginator.generated.cs"];
m11_153 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="269-269", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="_Paginator.generated.cs"];
m11_192 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="_Paginator.generated.cs"];
m11_70 [label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_71 [label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="151-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", color=green, community=0, file="_Paginator.generated.cs"];
m11_72 [label="storedData.Count == 0", span="154-154", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_78 [label="storedData.ContainsKey(''Type'')", span="161-161", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_79 [label="type = storedData[''Type'']", span="163-163", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", color=green, community=0, file="_Paginator.generated.cs"];
m11_80 [label="storedData.ContainsKey(''Method'')", span="165-165", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_81 [label="method = storedData[''Method'']", span="167-167", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_82 [label="storedData.ContainsKey(''ParameterTypes'')", span="169-169", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_83 [label="parameterTypes = storedData[''ParameterTypes'']", span="171-171", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_84 [label="storedData.ContainsKey(''Arguments'')", span="173-173", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_85 [label="arguments = storedData[''Arguments'']", span="175-175", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_92 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                LoadException = loadException\r\n            };", span="192-197", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_88 [label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="181-181", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_87 [label="JobLoadException loadException = null", span="179-179", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", color=green, community=0, file="_Paginator.generated.cs"];
m11_86 [label="Job job = null", span="178-178", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_91 [label="loadException = ex", span="189-189", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", color=green, community=0, file="_Paginator.generated.cs"];
m11_90 [label=JobLoadException, span="187-187", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_73 [label="return null;", span="154-154", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_74 [label="string type = null", span="156-156", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_77 [label="string arguments = null", span="159-159", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_89 [label="job = invocationData.Deserialize()", span="185-185", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_75 [label="string method = null", span="157-157", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_76 [label="string parameterTypes = null", span="158-158", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_93 [label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="_Paginator.generated.cs"];
m11_57 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="_Paginator.generated.cs"];
m11_160 [label="Entry lambda expression", span="278-280", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_63 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="134-136", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_67 [label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="138-140", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_114 [label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1)", span="219-222", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_118 [label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched'')", span="224-226", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_122 [label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked'')", span="227-229", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_143 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="249-255", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_148 [label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="260-262", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_165 [label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="282-284", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_62 [label="Entry lambda expression", span="134-136", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_64 [label="Exit lambda expression", span="134-136", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_66 [label="Entry lambda expression", span="138-140", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_68 [label="Exit lambda expression", span="138-140", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_113 [label="Entry lambda expression", span="219-222", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_115 [label="Exit lambda expression", span="219-222", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_117 [label="Entry lambda expression", span="224-226", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_119 [label="Exit lambda expression", span="224-226", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_121 [label="Entry lambda expression", span="227-229", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_123 [label="Exit lambda expression", span="227-229", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_142 [label="Entry lambda expression", span="249-255", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_144 [label="Exit lambda expression", span="249-255", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_147 [label="Entry lambda expression", span="260-262", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_149 [label="Exit lambda expression", span="260-262", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_164 [label="Entry lambda expression", span="282-284", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_166 [label="Exit lambda expression", span="282-284", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_139 [label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="246-247", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_138 [label="Entry lambda expression", span="246-247", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_161 [label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="278-280", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_200 [label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="315-319", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_194 [label="Entry lambda expression", span="312-314", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_199 [label="Entry lambda expression", span="315-319", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_140 [label="Exit lambda expression", span="246-247", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_162 [label="Exit lambda expression", span="278-280", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_201 [label="Exit lambda expression", span="315-319", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_195 [label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="312-314", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_196 [label="Exit lambda expression", span="312-314", cluster="lambda expression", file="_Paginator.generated.cs"];
m11_128 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="_Paginator.generated.cs"];
m11_51 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="138-140", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_41 [label="var jobId = Guid.NewGuid().ToString()", span="120-120", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="_Paginator.generated.cs"];
m11_40 [label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_42 [label="var invocationData = InvocationData.Serialize(job)", span="122-122", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_50 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="134-136", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_53 [label="return jobId;", span="146-146", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_49 [label="var transaction = Redis.CreateTransaction()", span="132-132", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_43 [label="var storedParameters = new Dictionary<string, string>(parameters)", span="125-125", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_44 [label="storedParameters.Add(''Type'', invocationData.Type)", span="126-126", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_45 [label="storedParameters.Add(''Method'', invocationData.Method)", span="127-127", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_46 [label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="128-128", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_47 [label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="129-129", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_52 [label="transaction.Commit()", span="143-143", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_48 [label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="130-130", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_54 [label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="_Paginator.generated.cs"];
m11_189 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="_Paginator.generated.cs"];
m11_99 [label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="200-200", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="_Paginator.generated.cs"];
m11_100 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="202-205", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="_Paginator.generated.cs"];
m11_101 [label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="200-200", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="_Paginator.generated.cs"];
m11_116 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="_Paginator.generated.cs"];
m11_55 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="_Paginator.generated.cs"];
m11_105 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="_Paginator.generated.cs"];
m11_61 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="_Paginator.generated.cs"];
m11_188 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="_Paginator.generated.cs"];
m11_98 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="_Paginator.generated.cs"];
m11_97 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="_Paginator.generated.cs"];
m11_197 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="_Paginator.generated.cs"];
m11_198 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="_Paginator.generated.cs"];
m11_60 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="_Paginator.generated.cs"];
m11_127 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="_Paginator.generated.cs"];
m11_39 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="_Paginator.generated.cs"];
m11_124 [label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="235-235", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="_Paginator.generated.cs"];
m11_125 [label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="237-239", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="_Paginator.generated.cs"];
m11_126 [label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="235-235", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="_Paginator.generated.cs"];
m11_95 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="_Paginator.generated.cs"];
m11_206 [label="HangFire.Redis.RedisConnection", span="", file="_Paginator.generated.cs"];
m11_207 [label=jobId, span="", file="_Paginator.generated.cs"];
m11_208 [label=storedParameters, span="", file="_Paginator.generated.cs"];
m11_209 [label="System.TimeSpan", span="", file="_Paginator.generated.cs"];
m11_210 [label=string, span="", file="_Paginator.generated.cs"];
m11_211 [label=string, span="", file="_Paginator.generated.cs"];
m11_212 [label=string, span="", file="_Paginator.generated.cs"];
m11_213 [label="HangFire.Server.ServerContext", span="", file="_Paginator.generated.cs"];
m11_214 [label=queue1, span="", file="_Paginator.generated.cs"];
m11_215 [label=string, span="", file="_Paginator.generated.cs"];
m11_216 [label=name, span="", file="_Paginator.generated.cs"];
m11_217 [label=heartbeats, span="", file="_Paginator.generated.cs"];
m12_0 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="_PerPageSelector.cs"];
m12_1 [label="_pager = pager", span="8-8", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="_PerPageSelector.cs"];
m12_2 [label="Exit HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="_PerPageSelector.cs"];
m12_3 [label="HangFire.Web.Pages.PerPageSelector", span="", file="_PerPageSelector.cs"];
m0_0 -> m0_1  [key=0, style=solid, color=red];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid, color=red];
m0_4 -> m0_5  [key=0, style=solid, color=red];
m0_4 -> m0_6  [key=0, style=solid, color=red];
m0_5 -> m0_9  [key=0, style=solid, color=red];
m0_5 -> m0_10  [key=2, style=dotted, color=red];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_8  [key=0, style=solid, color=red];
m0_6 -> m0_11  [key=2, style=dotted, color=red];
m0_7 -> m0_9  [key=0, style=solid, color=red];
m0_8 -> m0_9  [key=0, style=solid, color=red];
m0_9 -> m0_3  [key=0, style=bold, color=blue];
m0_12 -> m0_1  [key=1, style=dashed, color=red, label="HangFire.Web.CommandHandler"];
m0_12 -> m0_4  [key=1, style=dashed, color=red, label="HangFire.Web.CommandHandler"];
m0_12 -> m0_6  [key=1, style=dashed, color=red, label="HangFire.Web.CommandHandler"];
m0_12 -> m0_7  [key=1, style=dashed, color=red, label="HangFire.Web.CommandHandler"];
m0_12 -> m0_8  [key=1, style=dashed, color=red, label="HangFire.Web.CommandHandler"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_3 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m3_51 -> m3_52  [key=0, style=solid, color=green];
m3_52 -> m3_53  [key=0, style=solid, color=green];
m3_52 -> m3_57  [key=2, style=dotted, color=green];
m3_53 -> m3_54  [key=0, style=solid, color=green];
m3_53 -> m3_58  [key=2, style=dotted, color=green];
m3_54 -> m3_55  [key=0, style=solid, color=green];
m3_54 -> m3_59  [key=2, style=dotted, color=green];
m3_54 -> m3_60  [key=1, style=dashed, color=green, label="lambda expression"];
m3_55 -> m3_56  [key=0, style=solid, color=green];
m3_55 -> m3_59  [key=2, style=dotted, color=green];
m3_55 -> m3_63  [key=1, style=dashed, color=green, label="lambda expression"];
m3_56 -> m3_51  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid, color=green];
m3_36 -> m3_37  [key=0, style=solid, color=green];
m3_36 -> m3_22  [key=2, style=dotted, color=green];
m3_36 -> m3_40  [key=1, style=dashed, color=green, label="lambda expression"];
m3_37 -> m3_38  [key=0, style=solid, color=green];
m3_37 -> m3_39  [key=2, style=dotted, color=green];
m3_38 -> m3_35  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_11  [key=2, style=dotted, color=green];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2 -> m3_12  [key=2, style=dotted, color=green];
m3_3 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid, color=green];
m3_3 -> m3_13  [key=2, style=dotted, color=green];
m3_9 -> m3_10  [key=0, style=solid, color=green];
m3_9 -> m3_17  [key=2, style=dotted, color=green];
m3_9 -> m3_18  [key=2, style=dotted, color=green];
m3_9 -> m3_28  [key=1, style=dashed, color=green, label="lambda expression"];
m3_76 -> m3_77  [key=0, style=solid, color=green];
m3_77 -> m3_78  [key=0, style=solid, color=green];
m3_77 -> m3_17  [key=2, style=dotted, color=green];
m3_77 -> m3_18  [key=2, style=dotted, color=green];
m3_77 -> m3_82  [key=1, style=dashed, color=green, label="lambda expression"];
m3_78 -> m3_79  [key=0, style=solid, color=green];
m3_78 -> m3_57  [key=2, style=dotted, color=green];
m3_79 -> m3_80  [key=0, style=solid, color=green];
m3_79 -> m3_58  [key=2, style=dotted, color=green];
m3_80 -> m3_81  [key=0, style=solid, color=green];
m3_80 -> m3_59  [key=2, style=dotted, color=green];
m3_80 -> m3_88  [key=1, style=dashed, color=green, label="lambda expression"];
m3_81 -> m3_76  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid, color=green];
m3_45 -> m3_46  [key=0, style=solid, color=green];
m3_45 -> m3_22  [key=2, style=dotted, color=green];
m3_45 -> m3_48  [key=1, style=dashed, color=green, label="lambda expression"];
m3_46 -> m3_47  [key=0, style=solid, color=green];
m3_46 -> m3_39  [key=2, style=dotted, color=green];
m3_47 -> m3_44  [key=0, style=bold, color=blue];
m3_67 -> m3_68  [key=0, style=solid, color=green];
m3_68 -> m3_69  [key=0, style=solid, color=green];
m3_68 -> m3_57  [key=2, style=dotted, color=green];
m3_69 -> m3_70  [key=0, style=solid, color=green];
m3_69 -> m3_58  [key=2, style=dotted, color=green];
m3_70 -> m3_71  [key=0, style=solid, color=green];
m3_70 -> m3_59  [key=2, style=dotted, color=green];
m3_70 -> m3_72  [key=1, style=dashed, color=green, label="lambda expression"];
m3_71 -> m3_67  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid, color=green];
m3_4 -> m3_14  [key=2, style=dotted, color=green];
m3_5 -> m3_6  [key=0, style=solid, color=green];
m3_5 -> m3_15  [key=2, style=dotted, color=green];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_16  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid, color=green];
m3_8 -> m3_17  [key=2, style=dotted, color=green];
m3_8 -> m3_18  [key=2, style=dotted, color=green];
m3_8 -> m3_24  [key=1, style=dashed, color=green, label="lambda expression"];
m3_8 -> m3_6  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid, color=green];
m3_7 -> m3_17  [key=2, style=dotted];
m3_7 -> m3_18  [key=2, style=dotted];
m3_7 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_7 -> m3_9  [key=2, style=dotted];
m3_10 -> m3_0  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid, color=green];
m3_28 -> m3_29  [key=0, style=solid, color=green];
m3_25 -> m3_26  [key=0, style=solid, color=green];
m3_25 -> m3_27  [key=2, style=dotted, color=green];
m3_26 -> m3_24  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid, color=green];
m3_29 -> m3_22  [key=2, style=dotted, color=green];
m3_29 -> m3_31  [key=2, style=dotted, color=green];
m3_29 -> m3_32  [key=1, style=dashed, color=green, label="lambda expression"];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m3_32 -> m3_33  [key=0, style=solid, color=green];
m3_33 -> m3_34  [key=0, style=solid, color=green];
m3_34 -> m3_32  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid, color=green];
m3_41 -> m3_42  [key=0, style=solid, color=green];
m3_41 -> m3_43  [key=2, style=dotted, color=green];
m3_42 -> m3_40  [key=0, style=bold, color=blue];
m3_48 -> m3_49  [key=0, style=solid, color=green];
m3_49 -> m3_50  [key=0, style=solid, color=green];
m3_49 -> m3_43  [key=2, style=dotted, color=green];
m3_50 -> m3_48  [key=0, style=bold, color=blue];
m3_60 -> m3_61  [key=0, style=solid, color=green];
m3_63 -> m3_64  [key=0, style=solid, color=green];
m3_61 -> m3_62  [key=0, style=solid, color=green];
m3_61 -> m3_27  [key=2, style=dotted, color=green];
m3_62 -> m3_60  [key=0, style=bold, color=blue];
m3_64 -> m3_65  [key=0, style=solid, color=green];
m3_64 -> m3_66  [key=2, style=dotted, color=green];
m3_65 -> m3_63  [key=0, style=bold, color=blue];
m3_72 -> m3_73  [key=0, style=solid, color=green];
m3_73 -> m3_74  [key=0, style=solid, color=green];
m3_73 -> m3_22  [key=2, style=dotted, color=green];
m3_73 -> m3_75  [key=2, style=dotted, color=green];
m3_74 -> m3_72  [key=0, style=bold, color=blue];
m3_82 -> m3_83  [key=0, style=solid, color=green];
m3_88 -> m3_89  [key=0, style=solid, color=green];
m3_83 -> m3_84  [key=0, style=solid, color=green];
m3_83 -> m3_22  [key=2, style=dotted, color=green];
m3_83 -> m3_31  [key=2, style=dotted, color=green];
m3_83 -> m3_85  [key=1, style=dashed, color=green, label="lambda expression"];
m3_84 -> m3_82  [key=0, style=bold, color=blue];
m3_85 -> m3_86  [key=0, style=solid, color=green];
m3_86 -> m3_87  [key=0, style=solid, color=green];
m3_87 -> m3_85  [key=0, style=bold, color=blue];
m3_89 -> m3_90  [key=0, style=solid, color=green];
m3_89 -> m3_22  [key=2, style=dotted, color=green];
m3_89 -> m3_75  [key=2, style=dotted, color=green];
m3_90 -> m3_88  [key=0, style=bold, color=blue];
m3_20 -> m3_22  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_23  [key=2, style=dotted];
m3_21 -> m3_19  [key=0, style=bold, color=blue];
m3_57 -> m3_91  [key=0, style=solid, color=green];
m3_91 -> m3_92  [key=0, style=solid, color=green];
m3_91 -> m3_43  [key=2, style=dotted, color=green];
m3_92 -> m3_57  [key=0, style=bold, color=blue];
m3_93 -> m3_1  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_3  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_5  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_8  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_9  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_36  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_41  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_45  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_49  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_52  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_53  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_54  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_55  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_68  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_69  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_70  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_77  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_78  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_79  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_80  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_91  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m3_93 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m4_0 -> m4_1  [key=0, style=solid, color=red];
m4_1 -> m4_2  [key=0, style=solid, color=red];
m4_1 -> m4_6  [key=2, style=dotted, color=red];
m4_1 -> m4_3  [key=1, style=dashed, color=red, label=storage];
m4_2 -> m4_3  [key=0, style=solid, color=red];
m4_2 -> m4_7  [key=2, style=dotted, color=red];
m4_3 -> m4_4  [key=0, style=solid, color=red];
m4_4 -> m4_5  [key=0, style=solid, color=red];
m4_4 -> m4_8  [key=2, style=dotted, color=red];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m4_9 -> m4_10  [key=0, style=solid, color=red];
m4_10 -> m4_11  [key=0, style=solid, color=red];
m4_10 -> m4_12  [key=2, style=dotted, color=red];
m4_11 -> m4_9  [key=0, style=bold, color=blue];
m5_34 -> m5_35  [key=0, style=solid, color=red];
m5_35 -> m5_36  [key=0, style=solid, color=red];
m5_35 -> m5_41  [key=2, style=dotted, color=red];
m5_36 -> m5_37  [key=0, style=solid, color=red];
m5_36 -> m5_32  [key=2, style=dotted, color=red];
m5_36 -> m5_38  [key=1, style=dashed, color=red, label=filter];
m5_36 -> m5_39  [key=1, style=dashed, color=red, label=filter];
m5_37 -> m5_38  [key=0, style=solid, color=red];
m5_37 -> m5_33  [key=2, style=dotted, color=red];
m5_38 -> m5_39  [key=0, style=solid, color=red];
m5_38 -> m5_18  [key=2, style=dotted, color=red];
m5_39 -> m5_40  [key=0, style=solid, color=red];
m5_39 -> m5_18  [key=2, style=dotted, color=red];
m5_40 -> m5_34  [key=0, style=bold, color=blue];
m5_49 -> m5_50  [key=0, style=solid, color=red];
m5_50 -> m5_51  [key=0, style=solid, color=red];
m5_50 -> m5_8  [key=2, style=dotted, color=red];
m5_51 -> m5_52  [key=0, style=solid, color=red];
m5_51 -> m5_54  [key=2, style=dotted, color=red];
m5_52 -> m5_53  [key=0, style=solid, color=red];
m5_52 -> m5_55  [key=2, style=dotted, color=red];
m5_53 -> m5_49  [key=0, style=bold, color=blue];
m5_25 -> m5_26  [key=0, style=solid, color=red];
m5_26 -> m5_27  [key=0, style=solid, color=red];
m5_26 -> m5_8  [key=2, style=dotted, color=red];
m5_27 -> m5_28  [key=0, style=solid, color=red];
m5_27 -> m5_32  [key=2, style=dotted, color=red];
m5_27 -> m5_29  [key=1, style=dashed, color=red, label=filter];
m5_27 -> m5_30  [key=1, style=dashed, color=red, label=filter];
m5_28 -> m5_29  [key=0, style=solid, color=red];
m5_28 -> m5_33  [key=2, style=dotted, color=red];
m5_29 -> m5_30  [key=0, style=solid, color=red];
m5_29 -> m5_18  [key=2, style=dotted, color=red];
m5_30 -> m5_31  [key=0, style=solid, color=red];
m5_30 -> m5_18  [key=2, style=dotted, color=red];
m5_31 -> m5_25  [key=0, style=bold, color=blue];
m5_14 -> m5_74  [key=0, style=solid, color=red];
m5_74 -> m5_75  [key=0, style=solid, color=red];
m5_74 -> m5_76  [key=2, style=dotted, color=red];
m5_75 -> m5_14  [key=0, style=bold, color=blue];
m5_64 -> m5_65  [key=0, style=solid, color=red];
m5_65 -> m5_66  [key=0, style=solid, color=red];
m5_65 -> m5_8  [key=2, style=dotted, color=red];
m5_66 -> m5_67  [key=0, style=solid, color=red];
m5_66 -> m5_18  [key=2, style=dotted, color=red];
m5_67 -> m5_64  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid, color=red];
m5_43 -> m5_44  [key=0, style=solid, color=red];
m5_43 -> m5_8  [key=2, style=dotted, color=red];
m5_44 -> m5_45  [key=0, style=solid, color=red];
m5_44 -> m5_47  [key=2, style=dotted, color=red];
m5_45 -> m5_46  [key=0, style=solid, color=red];
m5_45 -> m5_48  [key=2, style=dotted, color=red];
m5_46 -> m5_42  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid, color=red];
m5_10 -> m5_11  [key=0, style=solid, color=red];
m5_10 -> m5_14  [key=2, style=dotted, color=red];
m5_10 -> m5_15  [key=2, style=dotted, color=red];
m5_10 -> m5_12  [key=1, style=dashed, color=red, label=filters];
m5_11 -> m5_12  [key=0, style=solid, color=red];
m5_11 -> m5_16  [key=2, style=dotted, color=red];
m5_11 -> m5_19  [key=1, style=dashed, color=red, label="lambda expression"];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_12 -> m5_17  [key=2, style=dotted, color=red];
m5_12 -> m5_18  [key=2, style=dotted, color=red];
m5_12 -> m5_22  [key=1, style=dashed, color=red, label="lambda expression"];
m5_13 -> m5_9  [key=0, style=bold, color=blue];
m5_56 -> m5_57  [key=0, style=solid, color=red];
m5_57 -> m5_58  [key=0, style=solid, color=red];
m5_57 -> m5_8  [key=2, style=dotted, color=red];
m5_58 -> m5_59  [key=0, style=solid, color=red];
m5_59 -> m5_60  [key=0, style=solid, color=red];
m5_59 -> m5_63  [key=2, style=dotted, color=red];
m5_60 -> m5_61  [key=0, style=solid, color=red];
m5_60 -> m5_32  [key=2, style=dotted, color=red];
m5_61 -> m5_62  [key=0, style=solid, color=red];
m5_61 -> m5_33  [key=2, style=dotted, color=red];
m5_62 -> m5_56  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=red];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_1 -> m5_3  [key=0, style=solid, color=red];
m5_1 -> m5_6  [key=1, style=dashed, color=red, label=instance];
m5_2 -> m5_1  [key=0, style=solid, color=red];
m5_2 -> m5_4  [key=2, style=dotted, color=red];
m5_2 -> m5_5  [key=1, style=dashed, color=red, label="lambda expression"];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid, color=red];
m5_6 -> m5_7  [key=0, style=solid, color=red];
m5_6 -> m5_8  [key=2, style=dotted, color=red];
m5_5 -> m5_6  [key=0, style=solid, color=red];
m5_7 -> m5_5  [key=0, style=bold, color=blue];
m5_19 -> m5_20  [key=0, style=solid, color=red];
m5_20 -> m5_21  [key=0, style=solid, color=red];
m5_20 -> m5_8  [key=2, style=dotted, color=red];
m5_21 -> m5_19  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid, color=red];
m5_24 -> m5_22  [key=0, style=bold, color=blue];
m5_68 -> m5_69  [key=0, style=solid, color=red];
m5_69 -> m5_70  [key=0, style=solid, color=red];
m5_69 -> m5_8  [key=2, style=dotted, color=red];
m5_70 -> m5_71  [key=0, style=solid, color=red];
m5_70 -> m5_73  [key=2, style=dotted, color=red];
m5_71 -> m5_72  [key=0, style=solid, color=red];
m5_71 -> m5_18  [key=2, style=dotted, color=red];
m5_72 -> m5_68  [key=0, style=bold, color=blue];
m5_77 -> m5_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_6  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_11  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_20  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_12  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_26  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_27  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_28  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_35  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_36  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_37  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_43  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_44  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_50  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_51  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_52  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_57  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_58  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_61  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_65  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_66  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_69  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_70  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_77 -> m5_71  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Common.GlobalJobFilterCollectionFacts"];
m5_78 -> m5_6  [key=1, style=dashed, color=red, label=instance];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid, color=green];
m7_6 -> m7_7  [key=0, style=solid, color=green];
m7_6 -> m7_8  [key=2, style=dotted, color=green];
m7_7 -> m7_5  [key=0, style=bold, color=blue];
m7_9 -> m7_1  [key=1, style=dashed, color=green, label="HangFire.States.JobState"];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_25  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_26  [key=2, style=dotted];
m8_2 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=connection];
m8_2 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=connection];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_27  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_28  [key=2, style=dotted];
m8_5 -> m8_29  [key=2, style=dotted];
m8_5 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label=hash];
m8_5 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label=hash];
m8_5 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=hash];
m8_5 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=hash];
m8_5 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=hash];
m8_5 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=hash];
m8_5 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=hash];
m8_5 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=hash];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_36  [key=2, style=dotted];
m8_18 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_24  [key=0, style=solid];
m8_4 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_4 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_7 -> m8_4  [key=0, style=solid];
m8_7 -> m8_30  [key=2, style=dotted];
m8_7 -> m8_31  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_30  [key=2, style=dotted];
m8_8 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label=dto];
m8_8 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label=dto];
m8_8 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=dto];
m8_8 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=dto];
m8_8 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=dto];
m8_8 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label=dto];
m8_8 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=dto];
m8_8 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=dto];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_8  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_32  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [key=0, style=solid];
m8_14 -> m8_34  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_35  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_21  [key=0, style=solid];
m8_16 -> m8_34  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_23  [key=0, style=solid];
m8_21 -> m8_34  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_35  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_14  [key=0, style=solid];
m8_11 -> m8_33  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_23 -> m8_4  [key=0, style=solid];
m8_23 -> m8_31  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_21  [key=0, style=solid];
m8_24 -> m8_0  [key=0, style=bold, color=blue];
m8_37 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m8_37 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m8_37 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m10_0 -> m10_1  [key=0, style=solid, color=green];
m10_1 -> m10_2  [key=0, style=solid, color=green];
m10_1 -> m10_5  [key=2, style=dotted, color=green];
m10_1 -> m10_8  [key=1, style=dashed, color=green, label="lambda expression"];
m10_2 -> m10_3  [key=0, style=solid, color=green];
m10_2 -> m10_6  [key=2, style=dotted, color=green];
m10_3 -> m10_4  [key=0, style=solid, color=green];
m10_3 -> m10_7  [key=2, style=dotted, color=green];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_8 -> m10_9  [key=0, style=solid, color=green];
m10_9 -> m10_10  [key=0, style=solid, color=green];
m10_9 -> m10_11  [key=2, style=dotted, color=green];
m10_10 -> m10_8  [key=0, style=bold, color=blue];
m11_37 -> m11_35  [key=0, style=bold, color=blue];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_31  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_6  [key=2, style=dotted];
m11_4 -> m11_35  [key=2, style=dotted];
m11_5 -> m11_3  [key=0, style=bold, color=blue];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_29  [key=0, style=solid];
m11_5 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=page];
m11_5 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=page];
m11_5 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label=page];
m11_5 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label=page];
m11_5 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label=page];
m11_5 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=page];
m11_5 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=page];
m11_12 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_12 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_12 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_35  [key=2, style=dotted];
m11_22 -> m11_24  [key=0, style=solid, color=green];
m11_22 -> m11_30  [key=2, style=dotted, color=green];
m11_22 -> m11_25  [key=1, style=dashed, color=green, label=jobId];
m11_22 -> m11_26  [key=1, style=dashed, color=green, label=jobId];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_35  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid, color=green];
m11_21 -> m11_23  [key=0, style=solid];
m11_19 -> m11_22  [key=1, style=dashed, color=green, label=queueKey];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_29  [key=2, style=dotted];
m11_19 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
m11_19 -> m11_37  [key=2, style=dotted];
m11_20 -> m11_22  [key=1, style=dashed, color=green, label=fetchedKey];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_29  [key=2, style=dotted];
m11_20 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m11_20 -> m11_5  [key=0, style=solid];
m11_20 -> m11_35  [key=2, style=dotted];
m11_24 -> m11_15  [key=0, style=solid, color=green];
m11_24 -> m11_25  [key=0, style=solid, color=green];
m11_24 -> m11_35  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_29  [key=2, style=dotted];
m11_25 -> m11_32  [key=2, style=dotted];
m11_25 -> m11_33  [key=2, style=dotted];
m11_25 -> m11_37  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_34  [key=2, style=dotted];
m11_26 -> m11_5  [key=0, style=solid];
m11_26 -> m11_35  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid, color=green];
m11_23 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m11_23 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m11_23 -> m11_31  [key=2, style=dotted];
m11_23 -> m11_36  [key=2, style=dotted];
m11_23 -> m11_37  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m11_17 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m11_17 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_36  [key=2, style=dotted];
m11_17 -> m11_37  [key=2, style=dotted];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m11_18 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m11_18 -> m11_35  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_5  [key=0, style=solid];
m11_14 -> m11_35  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m11_16 -> m11_28  [key=2, style=dotted];
m11_16 -> m11_35  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_37  [key=2, style=dotted];
m11_27 -> m11_12  [key=0, style=bold, color=blue];
m11_27 -> m11_28  [key=0, style=solid];
m11_38 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_38 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m11_36 -> m11_37  [key=0, style=solid, color=green];
m11_36 -> m11_29  [key=2, style=dotted, color=green];
m11_36 -> m11_38  [key=2, style=dotted, color=green];
m11_36 -> m11_39  [key=2, style=dotted, color=green];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_35  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_35  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_35  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_15  [key=0, style=solid];
m11_6 -> m11_21  [key=0, style=solid];
m11_6 -> m11_27  [key=0, style=solid];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_35  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_36  [key=2, style=dotted];
m11_9 -> m11_37  [key=2, style=dotted];
m11_9 -> m11_7  [key=0, style=bold, color=blue];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_37  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_35  [key=2, style=dotted];
m11_8 -> m11_10  [key=2, style=dotted];
m11_8 -> m11_11  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_35  [key=2, style=dotted];
m11_28 -> m11_5  [key=0, style=solid];
m11_28 -> m11_35  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_35  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_37  [key=2, style=dotted];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_35  [key=2, style=dotted];
m11_34 -> m11_0  [key=0, style=bold, color=blue];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_183  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_188  [key=2, style=dotted];
m11_172 -> m11_176  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_189  [key=2, style=dotted];
m11_175 -> m11_178  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_175 -> m11_179  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_184 -> m11_184  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_154  [key=2, style=dotted];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_145  [key=2, style=dotted];
m11_173 -> m11_178  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m11_173 -> m11_200  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m11_173 -> m11_181  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_179  [key=0, style=solid];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_183  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m11_178 -> m11_60  [key=2, style=dotted];
m11_178 -> m11_176  [key=0, style=solid];
m11_178 -> m11_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_178 -> m11_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_190  [key=2, style=dotted];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_181  [key=0, style=solid];
m11_183 -> m11_193  [key=2, style=dotted];
m11_182 -> m11_184  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m11_182 -> m11_183  [key=0, style=solid];
m11_182 -> m11_182  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m11_182 -> m11_191  [key=2, style=dotted];
m11_182 -> m11_192  [key=2, style=dotted];
m11_185 -> m11_185  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m11_185 -> m11_181  [key=0, style=solid];
m11_185 -> m11_186  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_186  [key=0, style=solid];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_200  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_177 -> m11_195  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_180 -> m11_185  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m11_180 -> m11_181  [key=0, style=solid];
m11_180 -> m11_186  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m11_186 -> m11_187  [key=0, style=solid];
m11_187 -> m11_171  [key=0, style=bold, color=blue];
m11_168 -> m11_169  [key=0, style=solid];
m11_169 -> m11_29  [key=2, style=dotted];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_32  [key=2, style=dotted];
m11_169 -> m11_33  [key=2, style=dotted];
m11_170 -> m11_168  [key=0, style=bold, color=blue];
m11_157 -> m11_60  [key=2, style=dotted];
m11_157 -> m11_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_157 -> m11_158  [key=0, style=solid];
m11_154 -> m11_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_156  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_154 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_154 -> m11_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_156 -> m11_60  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_155 -> m11_11  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_157  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_155 -> m11_158  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_158 -> m11_61  [key=2, style=dotted];
m11_158 -> m11_159  [key=0, style=solid];
m11_159 -> m11_154  [key=0, style=bold, color=blue];
m11_35 -> m11_36  [key=0, style=solid, color=green];
m11_102 -> m11_103  [key=0, style=solid];
m11_103 -> m11_29  [key=2, style=dotted];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_105  [key=2, style=dotted];
m11_104 -> m11_102  [key=0, style=bold, color=blue];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_129 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_129 -> m11_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_129 -> m11_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_129 -> m11_132  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_129 -> m11_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m11_129 -> m11_135  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_130 -> m11_131  [key=0, style=solid];
m11_130 -> m11_11  [key=2, style=dotted];
m11_130 -> m11_132  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_130 -> m11_135  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_130 -> m11_136  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_131 -> m11_60  [key=2, style=dotted];
m11_131 -> m11_132  [key=0, style=solid];
m11_131 -> m11_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_132 -> m11_60  [key=2, style=dotted];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_135 -> m11_60  [key=2, style=dotted];
m11_135 -> m11_133  [key=0, style=solid];
m11_135 -> m11_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_61  [key=2, style=dotted];
m11_134 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m11_134 -> m11_135  [key=0, style=solid];
m11_133 -> m11_136  [key=0, style=solid];
m11_133 -> m11_134  [key=0, style=solid];
m11_137 -> m11_129  [key=0, style=bold, color=blue];
m11_110 -> m11_60  [key=2, style=dotted];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_11  [key=2, style=dotted];
m11_107 -> m11_109  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_107 -> m11_110  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_107 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_106 -> m11_118  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_106 -> m11_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_106 -> m11_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_106 -> m11_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_106 -> m11_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_108 -> m11_60  [key=2, style=dotted];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_109 -> m11_60  [key=2, style=dotted];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_61  [key=2, style=dotted];
m11_112 -> m11_106  [key=0, style=bold, color=blue];
m11_151 -> m11_152  [key=0, style=solid];
m11_152 -> m11_153  [key=0, style=solid];
m11_152 -> m11_154  [key=2, style=dotted];
m11_153 -> m11_151  [key=0, style=bold, color=blue];
m11_70 -> m11_71  [key=0, style=solid, color=green];
m11_71 -> m11_72  [key=0, style=solid, color=green];
m11_71 -> m11_29  [key=2, style=dotted, color=green];
m11_71 -> m11_94  [key=2, style=dotted, color=green];
m11_71 -> m11_78  [key=1, style=dashed, color=green, label=storedData];
m11_71 -> m11_79  [key=1, style=dashed, color=green, label=storedData];
m11_71 -> m11_80  [key=1, style=dashed, color=green, label=storedData];
m11_71 -> m11_81  [key=1, style=dashed, color=green, label=storedData];
m11_71 -> m11_82  [key=1, style=dashed, color=green, label=storedData];
m11_71 -> m11_83  [key=1, style=dashed, color=green, label=storedData];
m11_71 -> m11_84  [key=1, style=dashed, color=green, label=storedData];
m11_71 -> m11_85  [key=1, style=dashed, color=green, label=storedData];
m11_71 -> m11_92  [key=1, style=dashed, color=green, label=storedData];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_74  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid, color=green];
m11_78 -> m11_80  [key=0, style=solid];
m11_78 -> m11_95  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid, color=green];
m11_79 -> m11_88  [key=1, style=dashed, color=green, label=type];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_82  [key=0, style=solid];
m11_80 -> m11_95  [key=2, style=dotted];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=method];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_84  [key=0, style=solid];
m11_82 -> m11_95  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_86  [key=0, style=solid];
m11_84 -> m11_95  [key=2, style=dotted];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_98  [key=2, style=dotted];
m11_92 -> m11_95  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_96  [key=2, style=dotted];
m11_87 -> m11_88  [key=0, style=solid, color=green];
m11_86 -> m11_87  [key=0, style=solid, color=green];
m11_91 -> m11_92  [key=0, style=solid, color=green];
m11_90 -> m11_91  [key=0, style=solid, color=green];
m11_73 -> m11_93  [key=0, style=solid];
m11_74 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=type];
m11_74 -> m11_75  [key=0, style=solid];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m11_89 -> m11_92  [key=0, style=solid];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_97  [key=2, style=dotted];
m11_75 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=method];
m11_75 -> m11_76  [key=0, style=solid];
m11_76 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m11_76 -> m11_77  [key=0, style=solid];
m11_93 -> m11_70  [key=0, style=bold, color=blue];
m11_160 -> m11_161  [key=0, style=solid];
m11_63 -> m11_29  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_65  [key=2, style=dotted];
m11_67 -> m11_29  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_69  [key=2, style=dotted];
m11_114 -> m11_29  [key=2, style=dotted];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_116  [key=2, style=dotted];
m11_118 -> m11_29  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_120  [key=2, style=dotted];
m11_122 -> m11_29  [key=2, style=dotted];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_120  [key=2, style=dotted];
m11_143 -> m11_29  [key=2, style=dotted];
m11_143 -> m11_32  [key=2, style=dotted];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_145  [key=2, style=dotted];
m11_143 -> m11_146  [key=2, style=dotted];
m11_143 -> m11_65  [key=2, style=dotted];
m11_148 -> m11_29  [key=2, style=dotted];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_150  [key=2, style=dotted];
m11_165 -> m11_29  [key=2, style=dotted];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_167  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_64 -> m11_62  [key=0, style=bold, color=blue];
m11_66 -> m11_67  [key=0, style=solid];
m11_68 -> m11_66  [key=0, style=bold, color=blue];
m11_113 -> m11_114  [key=0, style=solid];
m11_115 -> m11_113  [key=0, style=bold, color=blue];
m11_117 -> m11_118  [key=0, style=solid];
m11_119 -> m11_117  [key=0, style=bold, color=blue];
m11_121 -> m11_122  [key=0, style=solid];
m11_123 -> m11_121  [key=0, style=bold, color=blue];
m11_142 -> m11_143  [key=0, style=solid];
m11_144 -> m11_142  [key=0, style=bold, color=blue];
m11_147 -> m11_148  [key=0, style=solid];
m11_149 -> m11_147  [key=0, style=bold, color=blue];
m11_164 -> m11_165  [key=0, style=solid];
m11_166 -> m11_164  [key=0, style=bold, color=blue];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_141  [key=2, style=dotted];
m11_138 -> m11_139  [key=0, style=solid];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_163  [key=2, style=dotted];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_202  [key=2, style=dotted];
m11_200 -> m11_203  [key=2, style=dotted];
m11_200 -> m11_204  [key=2, style=dotted];
m11_200 -> m11_205  [key=2, style=dotted];
m11_194 -> m11_195  [key=0, style=solid];
m11_199 -> m11_200  [key=0, style=solid];
m11_140 -> m11_138  [key=0, style=bold, color=blue];
m11_162 -> m11_160  [key=0, style=bold, color=blue];
m11_201 -> m11_199  [key=0, style=bold, color=blue];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_197  [key=2, style=dotted];
m11_195 -> m11_198  [key=2, style=dotted];
m11_196 -> m11_194  [key=0, style=bold, color=blue];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_60  [key=2, style=dotted];
m11_51 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_41 -> m11_42  [key=0, style=solid, color=green];
m11_41 -> m11_55  [key=2, style=dotted, color=green];
m11_41 -> m11_56  [key=2, style=dotted, color=green];
m11_41 -> m11_50  [key=1, style=dashed, color=green, label=jobId];
m11_41 -> m11_63  [key=1, style=dashed, color=green, label=jobId];
m11_41 -> m11_51  [key=1, style=dashed, color=green, label=jobId];
m11_41 -> m11_67  [key=1, style=dashed, color=green, label=jobId];
m11_41 -> m11_53  [key=1, style=dashed, color=green, label=jobId];
m11_40 -> m11_41  [key=0, style=solid, color=green];
m11_40 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m11_40 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m11_40 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_40 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_57  [key=2, style=dotted];
m11_42 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m11_42 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m11_42 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m11_42 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_60  [key=2, style=dotted];
m11_50 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_53 -> m11_54  [key=0, style=solid];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_49 -> m11_11  [key=2, style=dotted];
m11_49 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_43 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m11_43 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_58  [key=2, style=dotted];
m11_43 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m11_43 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m11_43 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m11_43 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_59  [key=2, style=dotted];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_59  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_59  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_59  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_61  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_32  [key=2, style=dotted];
m11_48 -> m11_59  [key=2, style=dotted];
m11_54 -> m11_40  [key=0, style=bold, color=blue];
m11_99 -> m11_100  [key=0, style=solid];
m11_100 -> m11_29  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_33  [key=2, style=dotted];
m11_101 -> m11_99  [key=0, style=bold, color=blue];
m11_124 -> m11_125  [key=0, style=solid];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_127  [key=2, style=dotted];
m11_125 -> m11_128  [key=2, style=dotted];
m11_126 -> m11_124  [key=0, style=bold, color=blue];
m11_206 -> m11_22  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_36  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_71  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_206 -> m11_184  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m11_207 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m11_207 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m11_208 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m11_209 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_210 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_210 -> m11_118  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_210 -> m11_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_211 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_212 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_212 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_212 -> m11_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_213 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m11_214 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m11_215 -> m11_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_215 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_216 -> m11_200  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_216 -> m11_195  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_217 -> m11_200  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_3 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
}
