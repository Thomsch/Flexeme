digraph  {
m1_2 [label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="AutomaticRetryAttribute.cs"];
m1_3 [label="Exit HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="AutomaticRetryAttribute.cs"];
m1_0 [label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="AutomaticRetryAttribute.cs"];
m1_1 [label="Exit HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="AutomaticRetryAttribute.cs"];
m2_11 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="AutomaticRetryProcess.cs"];
m2_12 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="AutomaticRetryProcess.cs"];
m2_0 [label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="AutomaticRetryProcess.cs"];
m2_1 [label="_name = name", span="16-16", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="AutomaticRetryProcess.cs"];
m2_2 [label="_results = results", span="17-17", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="AutomaticRetryProcess.cs", color=green, community=0];
m2_5 [label="Entry HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs"];
m2_6 [label="Assert.NotNull(context)", span="23-23", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="AutomaticRetryProcess.cs"];
m2_7 [label="_results.Add(_name)", span="25-25", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs"];
m2_8 [label="_changeState != null", span="27-27", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs"];
m2_9 [label="context.CandidateState = _changeState", span="29-29", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs"];
m2_10 [label="Exit HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs"];
m2_3 [label="HangFire.Filters.ClientExceptionContext", span="", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="AutomaticRetryProcess.cs"];
m2_4 [label="Exit HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="AutomaticRetryProcess.cs"];
m2_13 [label="HangFire.Tests.TestStateChangingFilter", span="", file="AutomaticRetryProcess.cs"];
m3_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJob.Instance.cs"];
m3_0 [label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs"];
m3_1 [label="id == null", span="27-27", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", color=green, community=0, file="BackgroundJob.Instance.cs"];
m3_3 [label="Id = id", span="29-29", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", color=red, community=0, file="BackgroundJob.Instance.cs"];
m3_4 [label="Job = job", span="30-30", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs"];
m3_5 [label="CreatedAt = createdAt", span="31-31", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs"];
m3_2 [label="throw new ArgumentNullException(''id'');", span="27-27", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", color=green, community=0, file="BackgroundJob.Instance.cs"];
m3_6 [label="Exit Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs"];
m3_8 [label="Hangfire.BackgroundJob", span="", file="BackgroundJob.Instance.cs"];
m4_0 [label="Entry Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="35-35", cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="BackgroundJobClientException.cs"];
m4_1 [label="Exit Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="35-35", cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="BackgroundJobClientException.cs"];
m5_16 [label="jobId = _redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        _fetchTimeout)", span="45-48", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", color=red, community=0];
m5_0 [label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="BackgroundJobClientFacts.cs"];
m5_1 [label="_redis = redis", span="22-22", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="BackgroundJobClientFacts.cs"];
m5_2 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="69-69", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m5_3 [label="type == null", span="71-71", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="BackgroundJobClientFacts.cs", color=green, community=0];
m5_4 [label="throw new ArgumentNullException(''type'');", span="71-71", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="BackgroundJobClientFacts.cs", color=green, community=0];
m5_18 [label="jobId == null", span="56-56", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_76 [label="Method.DeclaringType == null", span="210-210", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_78 [label="!Method.DeclaringType.IsAssignableFrom(Type)", span="215-215", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_79 [label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="217-220", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_80 [label="!Method.IsPublic", span="223-223", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_82 [label="typeof (Task).IsAssignableFrom(Method.ReturnType)", span="228-228", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_84 [label="var parameters = Method.GetParameters()", span="233-233", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_85 [label="parameters.Length != Arguments.Length", span="235-235", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_77 [label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="212-212", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_81 [label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="225-225", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_83 [label="throw new NotSupportedException(''Async methods are not supported. Please make them synchronous before using them in background.'');", span="230-230", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_87 [label=parameters, span="240-240", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_86 [label="throw new ArgumentException(''Argument count must be equal to method parameter count.'');", span="237-237", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_89 [label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="248-249", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_91 [label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="254-255", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_90 [label="parameter.ParameterType.IsByRef", span="252-252", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_88 [label="parameter.IsOut", span="246-246", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_92 [label="Exit Hangfire.Common.Job.Validate()", span="208-208", cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs"];
m5_95 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BackgroundJobClientFacts.cs"];
m5_165 [label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="BackgroundJobClientFacts.cs"];
m5_33 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="BackgroundJobClientFacts.cs"];
m5_107 [label="var parameters = Method.GetParameters()", span="286-286", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_108 [label="var result = new List<object>(Arguments.Length)", span="287-287", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_112 [label="var argument = Arguments[i]", span="292-292", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_110 [label="i < parameters.Length", span="289-289", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_111 [label="var parameter = parameters[i]", span="291-291", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_109 [label="var i = 0", span="289-289", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_122 [label="result.Add(value)", span="324-324", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_124 [label="return result.ToArray();", span="327-327", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_113 [label="object value", span="294-294", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_116 [label="value = argument != null\r\n								? JobHelper.FromJson(argument, parameter.ParameterType)\r\n								: null", span="304-306", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_119 [label="value = argument", span="314-314", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_121 [label="value = converter.ConvertFromInvariantString(argument)", span="319-319", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_115 [label="value = cancellationToken", span="298-298", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_114 [label="typeof (IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="296-296", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_123 [label="i++", span="289-289", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_118 [label="parameter.ParameterType == typeof (object)", span="310-310", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_120 [label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="318-318", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_117 [label=Exception, span="308-308", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_126 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="331-333", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_125 [label=Exception, span="329-329", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_127 [label="Exit Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="282-282", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_93 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="BackgroundJobClientFacts.cs"];
m5_36 [label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="124-126", cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="BackgroundJobClientFacts.cs"];
m5_41 [label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="131-133", cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="BackgroundJobClientFacts.cs", color=green, community=0];
m5_66 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BackgroundJobClientFacts.cs"];
m5_47 [label="invocationData.Type = x[0]", span="92-92", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m5_105 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BackgroundJobClientFacts.cs"];
m5_29 [label="result = InvokeMethod(instance, deserializedArguments)", span="112-112", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_173 [label="Entry Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25", cluster="Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs"];
m5_30 [label="return result;", span="119-119", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", color=green, community=0];
m5_5 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_6 [label="Entry HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_7 [label="string jobId", span="29-29", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_8 [label="string queueName", span="30-30", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m5_9 [label="var queueIndex = 0", span="31-31", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m5_10 [label="cancellationToken.ThrowIfCancellationRequested()", span="35-35", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_11 [label="queueIndex = (queueIndex + 1) % _queueNames.Count", span="37-37", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_12 [label="queueName = _queueNames[queueIndex]", span="38-38", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_13 [label="var queueKey = String.Format(''hangfire:queue:{0}'', queueName)", span="40-40", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m5_14 [label="var fetchedKey = String.Format(''hangfire:queue:{0}:dequeued'', queueName)", span="41-41", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_15 [label="queueIndex == 0", span="43-43", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_35 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="BackgroundJobClientFacts.cs"];
m5_37 [label="Entry lambda expression", span="79-82", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m5_32 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="BackgroundJobClientFacts.cs"];
m5_97 [label="var instance = activator.ActivateJob(Type)", span="264-264", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs"];
m5_99 [label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="268-269", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs"];
m5_98 [label="instance == null", span="266-266", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs"];
m5_100 [label="return instance;", span="272-272", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs"];
m5_102 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during job activation.'',\r\n                    ex);", span="276-278", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs"];
m5_101 [label=Exception, span="274-274", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs"];
m5_103 [label="Exit Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="260-260", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs"];
m5_46 [label="Entry lambda expression", span="90-97", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m5_177 [label="Entry System.Type.ToGenericTypeString()", span="8-8", cluster="System.Type.ToGenericTypeString()", file="BackgroundJobClientFacts.cs"];
m5_94 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="BackgroundJobClientFacts.cs"];
m5_19 [label="var invocationData = new InvocationData()", span="73-73", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_26 [label="return new JobPayload(jobId, queueName, invocationData)\r\n            {\r\n                Args = args,\r\n                Arguments = arguments\r\n            };", span="106-110", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_27 [label="Exit HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_28 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="BackgroundJobClientFacts.cs"];
m5_21 [label="string args = null", span="75-75", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_23 [label="pipeline.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow)))", span="79-82", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_24 [label="pipeline.QueueCommand(\r\n                    x => x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'', ''Method'', ''Arguments'', ''ParameterTypes'' }),\r\n                    x =>\r\n                    {\r\n                        invocationData.Type = x[0];\r\n                        invocationData.Method = x[2];\r\n                        invocationData.ParameterTypes = x[4];\r\n                        args = x[1];\r\n                        arguments = x[3];\r\n                    })", span="86-97", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", color=red, community=0];
m5_25 [label="pipeline.Flush()", span="99-99", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_20 [label="string arguments = null", span="74-74", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_22 [label="var pipeline = _redis.CreatePipeline()", span="77-77", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_31 [label="Entry Unk.PopAndPushItemBetweenLists", span="", cluster="Unk.PopAndPushItemBetweenLists", file="BackgroundJobClientFacts.cs"];
m5_38 [label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="79-82", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m5_64 [label="Entry Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="410-410", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs"];
m5_167 [label="Debug.Assert(expression != null)", span="412-412", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs"];
m5_168 [label="var constantExpression = expression as ConstantExpression", span="414-414", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs"];
m5_171 [label="return CachedExpressionCompiler.Evaluate(expression);", span="421-421", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs"];
m5_170 [label="return constantExpression.Value;", span="418-418", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs"];
m5_169 [label="constantExpression != null", span="416-416", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs"];
m5_172 [label="Exit Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="410-410", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs"];
m5_161 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="BackgroundJobClientFacts.cs"];
m5_163 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="BackgroundJobClientFacts.cs"];
m5_65 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundJobClientFacts.cs"];
m5_34 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="BackgroundJobClientFacts.cs"];
m5_134 [label="return Method.Invoke(instance, deserializedArguments);", span="341-341", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs"];
m5_137 [label="throw ex.InnerException;", span="350-350", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs"];
m5_138 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="353-355", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs"];
m5_136 [label="ex.InnerException is OperationCanceledException", span="345-345", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs"];
m5_135 [label=TargetInvocationException, span="343-343", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs"];
m5_139 [label="Exit Hangfire.Common.Job.InvokeMethod(object, object[])", span="337-337", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs"];
m5_130 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="BackgroundJobClientFacts.cs"];
m5_140 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="BackgroundJobClientFacts.cs"];
m5_67 [label="Entry Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="377-377", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_153 [label="string value = null", span="386-386", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_149 [label="Debug.Assert(callExpression != null)", span="379-379", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_150 [label="var arguments = callExpression.Arguments.Select(GetExpressionValue).ToArray()", span="381-381", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_152 [label=arguments, span="384-384", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_154 [label="argument != null", span="388-388", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_158 [label="serializedArguments.Add(value)", span="404-404", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_159 [label="return serializedArguments.ToArray();", span="407-407", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_151 [label="var serializedArguments = new List<string>(arguments.Length)", span="383-383", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_155 [label="argument is DateTime", span="390-390", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_156 [label="value = ((DateTime) argument).ToString(''o'', CultureInfo.InvariantCulture)", span="392-392", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_157 [label="value = JobHelper.ToJson(argument)", span="396-396", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_160 [label="Exit Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="377-377", cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs"];
m5_133 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="BackgroundJobClientFacts.cs"];
m5_104 [label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42", cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="BackgroundJobClientFacts.cs"];
m5_63 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)", file="BackgroundJobClientFacts.cs"];
m5_68 [label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="192-192", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs"];
m5_69 [label="methodCall == null", span="194-194", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_70 [label="throw new ArgumentNullException(''methodCall'');", span="194-194", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_71 [label="var callExpression = methodCall.Body as MethodCallExpression", span="196-196", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs"];
m5_74 [label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="202-205", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs"];
m5_72 [label="callExpression == null", span="197-197", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs"];
m5_73 [label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="199-199", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs"];
m5_75 [label="Exit Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="192-192", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs"];
m5_39 [label="Exit lambda expression", span="79-82", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m5_44 [label="Exit lambda expression", span="87-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m5_45 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="BackgroundJobClientFacts.cs"];
m5_166 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="BackgroundJobClientFacts.cs"];
m5_43 [label="Entry Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38", cluster="Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="BackgroundJobClientFacts.cs"];
m5_48 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_49 [label="methodCall == null", span="152-152", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m5_42 [label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="129-129", cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="BackgroundJobClientFacts.cs"];
m5_50 [label="throw new ArgumentNullException(''methodCall'');", span="152-152", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_51 [label="var callExpression = methodCall.Body as MethodCallExpression", span="154-154", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_52 [label="callExpression == null", span="155-155", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_40 [label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="129-129", cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="BackgroundJobClientFacts.cs"];
m5_162 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobClientFacts.cs"];
m5_128 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="BackgroundJobClientFacts.cs"];
m5_17 [label="jobId = _redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="52-53", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs"];
m5_164 [label="Entry List<string>.cstr", span="", cluster="List<string>.cstr", file="BackgroundJobClientFacts.cs"];
m5_129 [label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46", cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="BackgroundJobClientFacts.cs"];
m5_132 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobClientFacts.cs"];
m5_106 [label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="BackgroundJobClientFacts.cs"];
m5_141 [label="Entry Hangfire.Common.Job.Dispose(object)", span="359-359", cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs"];
m5_142 [label="var disposable = instance as IDisposable", span="363-363", cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs"];
m5_143 [label="disposable != null", span="364-364", cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs"];
m5_144 [label="disposable.Dispose()", span="366-366", cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs"];
m5_146 [label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="371-373", cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs"];
m5_145 [label=Exception, span="369-369", cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs"];
m5_147 [label="Exit Hangfire.Common.Job.Dispose(object)", span="359-359", cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs"];
m5_174 [label="Entry Hangfire.Common.Job.ToString()", span="424-424", cluster="Hangfire.Common.Job.ToString()", file="BackgroundJobClientFacts.cs"];
m5_175 [label="return String.Format(''{0}.{1}'', Type.ToGenericTypeString(), Method.Name);", span="426-426", cluster="Hangfire.Common.Job.ToString()", file="BackgroundJobClientFacts.cs"];
m5_176 [label="Exit Hangfire.Common.Job.ToString()", span="424-424", cluster="Hangfire.Common.Job.ToString()", file="BackgroundJobClientFacts.cs"];
m5_131 [label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="BackgroundJobClientFacts.cs"];
m5_96 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="BackgroundJobClientFacts.cs"];
m5_148 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="BackgroundJobClientFacts.cs"];
m5_60 [label="type = callExpression.Method.DeclaringType", span="174-174", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_55 [label=invocationData, span="", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_61 [label="return new Job(\r\n                type, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="179-182", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_59 [label="type = objectValue.GetType()", span="170-170", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m5_56 [label="var objectValue = GetExpressionValue(callExpression.Object)", span="164-164", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_57 [label="objectValue == null", span="165-165", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_54 [label=jobId, span="", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_58 [label="throw new InvalidOperationException(''Expression object should not be null.'');", span="167-167", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_53 [label="HangFire.Redis.RedisJobFetcher", span="", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_62 [label="Exit Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m5_178 [label="Hangfire.Common.Job", span="", file="BackgroundJobClientFacts.cs"];
m6_292 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="BackgroundJobServer.cs"];
m6_36 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", span="44-44", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", file="BackgroundJobServer.cs"];
m6_35 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>());\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var hash = redis.GetAllEntriesFromHash(''hangfire:job:my-job'');\r\n                Assert.Equal(''my-state'', hash[''State'']);\r\n            })", span="46-59", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", color=green, community=0, file="BackgroundJobServer.cs"];
m6_34 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", span="44-44", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", file="BackgroundJobServer.cs"];
m6_26 [label="Entry Unk.GetTimeToLive", span="", cluster="Unk.GetTimeToLive", file="BackgroundJobServer.cs"];
m6_241 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m6_183 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="BackgroundJobServer.cs"];
m6_45 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="BackgroundJobServer.cs"];
m6_249 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="BackgroundJobServer.cs"];
m6_201 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", span="196-196", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", file="BackgroundJobServer.cs"];
m6_202 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.IncrementCounter(''entry'', TimeSpan.FromDays(1)));\r\n\r\n                var entryTtl = redis.GetTimeToLive(''hangfire:entry'');\r\n                Assert.Equal(''4'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25));\r\n            })", span="198-207", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", file="BackgroundJobServer.cs"];
m6_203 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", span="196-196", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", file="BackgroundJobServer.cs"];
m6_214 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m6_11 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="BackgroundJobServer.cs"];
m6_324 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="BackgroundJobServer.cs"];
m6_49 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="BackgroundJobServer.cs"];
m6_50 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobServer.cs"];
m6_27 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="BackgroundJobServer.cs"];
m6_330 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="BackgroundJobServer.cs"];
m6_78 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="BackgroundJobServer.cs"];
m6_61 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="BackgroundJobServer.cs"];
m6_175 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", span="169-169", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="BackgroundJobServer.cs"];
m6_176 [label="UseConnection(redis =>\r\n            {\r\n                redis.EnqueueItemOnList(''hangfire:queue:critical'', ''another-job'');\r\n\r\n                Commit(redis, x => x.AddToQueue(''critical'', ''my-job''));\r\n\r\n                Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0));\r\n            })", span="171-178", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="BackgroundJobServer.cs"];
m6_177 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", span="169-169", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="BackgroundJobServer.cs"];
m6_8 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="BackgroundJobServer.cs"];
m6_9 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'');\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'');\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)));\r\n\r\n                // Assert\r\n                var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'');\r\n                var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n                var historyEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n\r\n                Assert.True(TimeSpan.FromHours(23) < jobEntryTtl && jobEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < stateEntryTtl && stateEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < historyEntryTtl && historyEntryTtl < TimeSpan.FromHours(25));\r\n            })", span="22-40", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", color=green, community=0, file="BackgroundJobServer.cs"];
m6_10 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="BackgroundJobServer.cs"];
m6_64 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", span="63-63", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", file="BackgroundJobServer.cs"];
m6_63 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntryInHash(''hangfire:job:my-job:state'', ''OldName'', ''OldValue'');\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''Name'', ''Value'' }\r\n                    });\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.Reason).Returns(''my-reason'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var stateHash = redis.GetAllEntriesFromHash(''hangfire:job:my-job:state'');\r\n                Assert.False(stateHash.ContainsKey(''OldName''));\r\n                Assert.Equal(''my-state'', stateHash[''State'']);\r\n                Assert.Equal(''my-reason'', stateHash[''Reason'']);\r\n                Assert.Equal(''Value'', stateHash[''Name'']);\r\n            })", span="65-88", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", color=green, community=0, file="BackgroundJobServer.cs"];
m6_62 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", span="63-63", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", file="BackgroundJobServer.cs"];
m6_24 [label="Entry Unk.SetEntry", span="", cluster="Unk.SetEntry", file="BackgroundJobServer.cs"];
m6_267 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="BackgroundJobServer.cs"];
m6_268 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'');\r\n\r\n                Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''));\r\n\r\n                Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="265-272", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="BackgroundJobServer.cs"];
m6_269 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="BackgroundJobServer.cs"];
m6_25 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="322-322", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs"];
m6_325 [label="var transaction = new RedisWriteOnlyTransaction(redis.CreateTransaction())", span="324-324", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs"];
m6_326 [label="action(transaction)", span="326-326", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs"];
m6_327 [label="transaction.Commit()", span="327-327", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs"];
m6_328 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="322-322", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs"];
m6_333 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="331-331", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="BackgroundJobServer.cs"];
m6_335 [label="action(redis)", span="335-335", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="BackgroundJobServer.cs"];
m6_334 [label="var redis = RedisUtils.CreateClient()", span="333-333", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="BackgroundJobServer.cs"];
m6_336 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="331-331", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="BackgroundJobServer.cs"];
m6_162 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", span="157-157", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="BackgroundJobServer.cs"];
m6_163 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToQueue(''critical'', ''my-job''));\r\n\r\n                Assert.True(redis.SetContainsItem(''hangfire:queues'', ''critical''));\r\n                Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0));\r\n            })", span="159-165", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", color=green, community=0, file="BackgroundJobServer.cs"];
m6_164 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", span="157-157", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="BackgroundJobServer.cs"];
m6_148 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobServer.cs"];
m6_7 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BackgroundJobServer.cs"];
m6_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobServer.cs"];
m6_262 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="BackgroundJobServer.cs"];
m6_293 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="BackgroundJobServer.cs"];
m6_294 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n                redis.AddItemToList(''hangfire:list'', ''another-value'');\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.RemoveFromList(''list'', ''value''));\r\n\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="291-301", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="BackgroundJobServer.cs"];
m6_295 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="BackgroundJobServer.cs"];
m6_128 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BackgroundJobServer.cs"];
m6_80 [label="Entry Unk.False", span="", cluster="Unk.False", file="BackgroundJobServer.cs"];
m6_228 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", span="225-225", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="BackgroundJobServer.cs"];
m6_229 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.DecrementCounter(''entry'', TimeSpan.FromDays(1)));\r\n\r\n                var entryTtl = redis.GetTimeToLive(''hangfire:entry'');\r\n                Assert.Equal(''2'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25));\r\n            })", span="227-236", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="BackgroundJobServer.cs"];
m6_230 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", span="225-225", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="BackgroundJobServer.cs"];
m6_0 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="13-13", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="BackgroundJobServer.cs"];
m6_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new RedisWriteOnlyTransaction(null))", span="15-16", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="BackgroundJobServer.cs"];
m6_2 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="13-13", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="BackgroundJobServer.cs"];
m6_275 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="BackgroundJobServer.cs"];
m6_227 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="BackgroundJobServer.cs"];
m6_103 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="BackgroundJobServer.cs"];
m6_253 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="BackgroundJobServer.cs"];
m6_32 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="BackgroundJobServer.cs"];
m6_217 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", span="211-211", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="BackgroundJobServer.cs"];
m6_216 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.DecrementCounter(''entry''));\r\n\r\n                Assert.Equal(''2'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(redis.GetTimeToLive(''entry'') < TimeSpan.Zero);\r\n            })", span="213-221", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="BackgroundJobServer.cs"];
m6_215 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", span="211-211", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="BackgroundJobServer.cs"];
m6_331 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="BackgroundJobServer.cs"];
m6_280 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="BackgroundJobServer.cs"];
m6_281 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.InsertToList(''list'', ''new-value''));\r\n\r\n                Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="278-285", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="BackgroundJobServer.cs"];
m6_282 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="BackgroundJobServer.cs"];
m6_146 [label="Entry Unk.GetItemFromList", span="", cluster="Unk.GetItemFromList", file="BackgroundJobServer.cs"];
m6_279 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="BackgroundJobServer.cs"];
m6_93 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", span="92-92", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="BackgroundJobServer.cs"];
m6_94 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>());\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:job:my-job:history''));\r\n            })", span="94-106", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", color=green, community=0, file="BackgroundJobServer.cs"];
m6_95 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", span="92-92", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="BackgroundJobServer.cs"];
m6_131 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="BackgroundJobServer.cs"];
m6_130 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.Reason).Returns(''my-reason'');\r\n                state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                // Act\r\n                Commit(redis, x => x.AddJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var serializedEntry = redis.GetItemFromList(''hangfire:job:my-job:history'', 0);\r\n                Assert.NotNull(serializedEntry);\r\n\r\n                var entry = JobHelper.FromJson<Dictionary<string, string>>(serializedEntry);\r\n                Assert.Equal(''my-state'', entry[''State'']);\r\n                Assert.Equal(''my-reason'', entry[''Reason'']);\r\n                Assert.Equal(''Value'', entry[''Name'']);\r\n                Assert.True(entry.ContainsKey(''CreatedAt''));\r\n            })", span="132-153", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", color=green, community=0, file="BackgroundJobServer.cs"];
m6_129 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="BackgroundJobServer.cs"];
m6_161 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="BackgroundJobServer.cs"];
m6_113 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="BackgroundJobServer.cs"];
m6_114 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'', TimeSpan.FromDays(1));\r\n\r\n                // Act\r\n                Commit(redis, x => x.PersistJob(''my-job''));\r\n\r\n                // Assert\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:state'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:history'') < TimeSpan.Zero);\r\n            })", span="112-126", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", color=green, community=0, file="BackgroundJobServer.cs"];
m6_115 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="BackgroundJobServer.cs"];
m6_242 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="BackgroundJobServer.cs"];
m6_243 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value''));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="242-247", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="BackgroundJobServer.cs"];
m6_244 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="BackgroundJobServer.cs"];
m6_47 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobServer.cs"];
m6_147 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="BackgroundJobServer.cs"];
m6_329 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="BackgroundJobServer.cs"];
m6_46 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundJobServer.cs"];
m6_288 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="BackgroundJobServer.cs"];
m6_54 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData", file="BackgroundJobServer.cs"];
m6_332 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BackgroundJobServer.cs"];
m6_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_12 [label="Entry lambda expression", span="22-40", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_14 [label="redis.SetEntry(''hangfire:job:my-job:state'', ''state'')", span="26-26", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_13 [label="redis.SetEntry(''hangfire:job:my-job'', ''job'')", span="25-25", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_15 [label="redis.SetEntry(''hangfire:job:my-job:history'', ''history'')", span="27-27", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_16 [label="Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)))", span="30-30", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_17 [label="var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'')", span="33-33", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_29 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_18 [label="var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'')", span="34-34", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_20 [label="Assert.True(TimeSpan.FromHours(23) < jobEntryTtl && jobEntryTtl < TimeSpan.FromHours(25))", span="37-37", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_19 [label="var historyEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'')", span="35-35", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_21 [label="Assert.True(TimeSpan.FromHours(23) < stateEntryTtl && stateEntryTtl < TimeSpan.FromHours(25))", span="38-38", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_30 [label="x.ExpireJob(''my-job'', TimeSpan.FromDays(1))", span="30-30", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_31 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_37 [label="Entry lambda expression", span="46-59", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_39 [label="state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>())", span="50-50", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_38 [label="var state = new Mock<IState>()", span="49-49", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_40 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="51-51", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_51 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_52 [label="x.SerializeData()", span="50-50", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_53 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_65 [label="Entry lambda expression", span="65-88", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_68 [label="state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''Name'', ''Value'' }\r\n                    })", span="71-75", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_67 [label="var state = new Mock<IState>()", span="70-70", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_69 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="76-76", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_81 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_70 [label="state.Setup(x => x.Reason).Returns(''my-reason'')", span="77-77", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_71 [label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="80-80", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_87 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_74 [label="Assert.Equal(''my-state'', stateHash[''State''])", span="85-85", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_72 [label="var stateHash = redis.GetAllEntriesFromHash(''hangfire:job:my-job:state'')", span="83-83", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_73 [label="Assert.False(stateHash.ContainsKey(''OldName''))", span="84-84", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_75 [label="Assert.Equal(''my-reason'', stateHash[''Reason''])", span="86-86", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_76 [label="Assert.Equal(''Value'', stateHash[''Name''])", span="87-87", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_77 [label="Exit lambda expression", span="65-88", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_82 [label="x.SerializeData()", span="71-71", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_83 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_88 [label="x.Reason", span="77-77", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_89 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_96 [label="Entry lambda expression", span="94-106", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_100 [label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="102-102", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_97 [label="var state = new Mock<IState>()", span="97-97", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_99 [label="state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>())", span="99-99", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_101 [label="Assert.Equal(1, redis.GetListCount(''hangfire:job:my-job:history''))", span="105-105", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_110 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_102 [label="Exit lambda expression", span="94-106", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_98 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="98-98", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_104 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_107 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_111 [label="x.SetJobState(''my-job'', state.Object)", span="102-102", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_112 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_105 [label="x.Name", span="98-98", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_106 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_108 [label="x.SerializeData()", span="99-99", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_109 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_116 [label="Entry lambda expression", span="112-126", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_117 [label="redis.SetEntry(''hangfire:job:my-job'', ''job'', TimeSpan.FromDays(1))", span="115-115", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_118 [label="redis.SetEntry(''hangfire:job:my-job:state'', ''state'', TimeSpan.FromDays(1))", span="116-116", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_119 [label="redis.SetEntry(''hangfire:job:my-job:history'', ''history'', TimeSpan.FromDays(1))", span="117-117", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_120 [label="Commit(redis, x => x.PersistJob(''my-job''))", span="120-120", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_121 [label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job'') < TimeSpan.Zero)", span="123-123", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_125 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_122 [label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:state'') < TimeSpan.Zero)", span="124-124", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_123 [label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:history'') < TimeSpan.Zero)", span="125-125", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_124 [label="Exit lambda expression", span="112-126", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_126 [label="x.PersistJob(''my-job'')", span="120-120", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_127 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_132 [label="Entry lambda expression", span="132-153", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_133 [label="var state = new Mock<IState>()", span="135-135", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_134 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="136-136", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_135 [label="state.Setup(x => x.Reason).Returns(''my-reason'')", span="137-137", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_136 [label="state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="138-139", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_137 [label="Commit(redis, x => x.AddJobState(''my-job'', state.Object))", span="142-142", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_159 [label="x.AddJobState(''my-job'', state.Object)", span="142-142", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_138 [label="var serializedEntry = redis.GetItemFromList(''hangfire:job:my-job:history'', 0)", span="145-145", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_158 [label="Entry lambda expression", span="142-142", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_149 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_152 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_155 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_160 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_140 [label="var entry = JobHelper.FromJson<Dictionary<string, string>>(serializedEntry)", span="148-148", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_139 [label="Assert.NotNull(serializedEntry)", span="146-146", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_141 [label="Assert.Equal(''my-state'', entry[''State''])", span="149-149", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_142 [label="Assert.Equal(''my-reason'', entry[''Reason''])", span="150-150", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_143 [label="Assert.Equal(''Value'', entry[''Name''])", span="151-151", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_144 [label="Assert.True(entry.ContainsKey(''CreatedAt''))", span="152-152", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_145 [label="Exit lambda expression", span="132-153", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_150 [label="x.Name", span="136-136", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_151 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_153 [label="x.Reason", span="137-137", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_154 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_156 [label="x.SerializeData()", span="138-138", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_157 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_165 [label="Entry lambda expression", span="159-165", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_167 [label="Assert.True(redis.SetContainsItem(''hangfire:queues'', ''critical''))", span="163-163", cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs"];
m6_166 [label="Commit(redis, x => x.AddToQueue(''critical'', ''my-job''))", span="161-161", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_168 [label="Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0))", span="164-164", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_23 [label="Exit lambda expression", span="22-40", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_191 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="186-186", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_205 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="200-200", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_219 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="215-215", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_232 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="229-229", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_41 [label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="54-54", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_180 [label="Commit(redis, x => x.AddToQueue(''critical'', ''my-job''))", span="175-175", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_192 [label="Commit(redis, x => x.IncrementCounter(''entry''))", span="188-188", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_206 [label="Commit(redis, x => x.IncrementCounter(''entry'', TimeSpan.FromDays(1)))", span="202-202", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_220 [label="Commit(redis, x => x.DecrementCounter(''entry''))", span="217-217", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_233 [label="Commit(redis, x => x.DecrementCounter(''entry'', TimeSpan.FromDays(1)))", span="231-231", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_246 [label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value''))", span="244-244", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_258 [label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2))", span="255-255", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_272 [label="Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''))", span="269-269", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_285 [label="Commit(redis, x => x.InsertToList(''list'', ''new-value''))", span="282-282", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_300 [label="Commit(redis, x => x.RemoveFromList(''list'', ''value''))", span="297-297", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_316 [label="Commit(redis, x => x.TrimList(''list'', 1, 2))", span="314-314", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_194 [label="Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero)", span="191-191", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_207 [label="var entryTtl = redis.GetTimeToLive(''hangfire:entry'')", span="204-204", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_222 [label="Assert.True(redis.GetTimeToLive(''entry'') < TimeSpan.Zero)", span="220-220", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_234 [label="var entryTtl = redis.GetTimeToLive(''hangfire:entry'')", span="233-233", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_22 [label="Assert.True(TimeSpan.FromHours(23) < historyEntryTtl && historyEntryTtl < TimeSpan.FromHours(25))", span="39-39", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_212 [label="x.IncrementCounter(''entry'', TimeSpan.FromDays(1))", span="202-202", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_239 [label="x.DecrementCounter(''entry'', TimeSpan.FromDays(1))", span="231-231", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_44 [label="Exit lambda expression", span="46-59", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_42 [label="var hash = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="57-57", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_59 [label="x.SetJobState(''my-job'', state.Object)", span="54-54", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_55 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_66 [label="redis.SetEntryInHash(''hangfire:job:my-job:state'', ''OldName'', ''OldValue'')", span="68-68", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_91 [label="x.SetJobState(''my-job'', state.Object)", span="80-80", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_84 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_90 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_43 [label="Assert.Equal(''my-state'', hash[''State''])", span="58-58", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_181 [label="Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0))", span="177-177", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_193 [label="Assert.Equal(''4'', redis.GetValue(''hangfire:entry''))", span="190-190", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_208 [label="Assert.Equal(''4'', redis.GetValue(''hangfire:entry''))", span="205-205", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_221 [label="Assert.Equal(''2'', redis.GetValue(''hangfire:entry''))", span="219-219", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_235 [label="Assert.Equal(''2'', redis.GetValue(''hangfire:entry''))", span="234-234", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_260 [label="Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3)", span="258-258", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_286 [label="Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="284-284", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_301 [label="Assert.Equal(1, redis.GetListCount(''hangfire:list''))", span="299-299", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_302 [label="Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="300-300", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_317 [label="Assert.Equal(2, redis.GetListCount(''hangfire:list''))", span="316-316", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_318 [label="Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0))", span="317-317", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_319 [label="Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1))", span="318-318", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_209 [label="Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25))", span="206-206", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_236 [label="Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25))", span="235-235", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_247 [label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="246-246", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_259 [label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="257-257", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_169 [label="Exit lambda expression", span="159-165", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_171 [label="Entry lambda expression", span="161-161", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_178 [label="Entry lambda expression", span="171-178", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_190 [label="Entry lambda expression", span="184-192", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_204 [label="Entry lambda expression", span="198-207", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_218 [label="Entry lambda expression", span="213-221", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_231 [label="Entry lambda expression", span="227-236", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_245 [label="Entry lambda expression", span="242-247", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_257 [label="Entry lambda expression", span="253-259", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_270 [label="Entry lambda expression", span="265-272", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_283 [label="Entry lambda expression", span="278-285", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_296 [label="Entry lambda expression", span="291-301", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_311 [label="Entry lambda expression", span="307-319", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_58 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_179 [label="redis.EnqueueItemOnList(''hangfire:queue:critical'', ''another-job'')", span="173-173", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_184 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_197 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_211 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_224 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_238 [label="Entry lambda expression", span="231-231", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_250 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_263 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_271 [label="redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'')", span="267-267", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_273 [label="Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="271-271", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_276 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_284 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="280-280", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_289 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_299 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="295-295", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_304 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_315 [label="redis.AddItemToList(''hangfire:list'', ''4'')", span="312-312", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_321 [label="Entry lambda expression", span="314-314", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_195 [label="Exit lambda expression", span="184-192", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_223 [label="Exit lambda expression", span="213-221", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_213 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_240 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_60 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_57 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_56 [label="x.Name", span="51-51", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_92 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_86 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_85 [label="x.Name", span="76-76", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_182 [label="Exit lambda expression", span="171-178", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_261 [label="Exit lambda expression", span="253-259", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_287 [label="Exit lambda expression", span="278-285", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_303 [label="Exit lambda expression", span="291-301", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_320 [label="Exit lambda expression", span="307-319", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_210 [label="Exit lambda expression", span="198-207", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_237 [label="Exit lambda expression", span="227-236", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_248 [label="Exit lambda expression", span="242-247", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_173 [label="Exit lambda expression", span="161-161", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_172 [label="x.AddToQueue(''critical'', ''my-job'')", span="161-161", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_274 [label="Exit lambda expression", span="265-272", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_297 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="293-293", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_298 [label="redis.AddItemToList(''hangfire:list'', ''another-value'')", span="294-294", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_312 [label="redis.AddItemToList(''hangfire:list'', ''1'')", span="309-309", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_313 [label="redis.AddItemToList(''hangfire:list'', ''2'')", span="310-310", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_314 [label="redis.AddItemToList(''hangfire:list'', ''3'')", span="311-311", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_186 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_185 [label="x.AddToQueue(''critical'', ''my-job'')", span="175-175", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_199 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_198 [label="x.IncrementCounter(''entry'')", span="188-188", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_226 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_225 [label="x.DecrementCounter(''entry'')", span="217-217", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_252 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_251 [label="x.AddToSet(''my-set'', ''my-value'')", span="244-244", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_265 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_264 [label="x.AddToSet(''my-set'', ''my-value'', 3.2)", span="255-255", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_278 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_277 [label="x.RemoveFromSet(''my-set'', ''my-value'')", span="269-269", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_291 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_290 [label="x.InsertToList(''list'', ''new-value'')", span="282-282", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_306 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_305 [label="x.RemoveFromList(''list'', ''value'')", span="297-297", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_323 [label="Exit lambda expression", span="314-314", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_322 [label="x.TrimList(''list'', 1, 2)", span="314-314", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_5 [label="new RedisWriteOnlyTransaction(null)", span="16-16", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="BackgroundJobServer.cs"];
m6_170 [label="Entry Unk.SetContainsItem", span="", cluster="Unk.SetContainsItem", file="BackgroundJobServer.cs"];
m6_266 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="BackgroundJobServer.cs"];
m6_337 [label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15", cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="BackgroundJobServer.cs"];
m6_200 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="BackgroundJobServer.cs"];
m6_33 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m6_174 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BackgroundJobServer.cs"];
m6_196 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="BackgroundJobServer.cs"];
m6_28 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobServer.cs"];
m6_254 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="BackgroundJobServer.cs"];
m6_255 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n                Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3);\r\n            })", span="253-259", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="BackgroundJobServer.cs"];
m6_256 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="BackgroundJobServer.cs"];
m6_189 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="BackgroundJobServer.cs"];
m6_188 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.IncrementCounter(''entry''));\r\n\r\n                Assert.Equal(''4'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero);\r\n            })", span="184-192", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="BackgroundJobServer.cs"];
m6_187 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="BackgroundJobServer.cs"];
m6_48 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundJobServer.cs"];
m6_307 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="BackgroundJobServer.cs"];
m6_308 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="BackgroundJobServer.cs"];
m6_309 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''1'');\r\n                redis.AddItemToList(''hangfire:list'', ''2'');\r\n                redis.AddItemToList(''hangfire:list'', ''3'');\r\n                redis.AddItemToList(''hangfire:list'', ''4'');\r\n\r\n                Commit(redis, x => x.TrimList(''list'', 1, 2));\r\n\r\n                Assert.Equal(2, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0));\r\n                Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1));\r\n            })", span="307-319", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="BackgroundJobServer.cs"];
m6_310 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="BackgroundJobServer.cs"];
m6_79 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="BackgroundJobServer.cs"];
m6_338 [label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", span="", file="BackgroundJobServer.cs"];
m6_341 [label=state, span="", file="BackgroundJobServer.cs"];
m6_342 [label=state, span="", file="BackgroundJobServer.cs"];
m6_339 [label=state, span="", file="BackgroundJobServer.cs"];
m6_340 [label=state, span="", file="BackgroundJobServer.cs"];
m7_8 [label="Entry HangFire.BackgroundJobServer.Start()", span="52-52", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs"];
m7_2 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="15-15", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="BackgroundJobServerOptions.cs"];
m7_3 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="15-15", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="BackgroundJobServerOptions.cs"];
m7_18 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="45-45", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="BackgroundJobServerOptions.cs"];
m7_19 [label="Stop()", span="47-47", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", color=red, community=0, file="BackgroundJobServerOptions.cs"];
m7_20 [label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="45-45", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="BackgroundJobServerOptions.cs"];
m7_0 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="10-10", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", file="BackgroundJobServerOptions.cs"];
m7_1 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="10-10", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", file="BackgroundJobServerOptions.cs"];
m7_9 [label="Entry Unk.RegisterObject", span="", cluster="Unk.RegisterObject", file="BackgroundJobServerOptions.cs"];
m7_16 [label="Entry HangFire.BackgroundJobServer.Stop()", span="70-70", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServerOptions.cs"];
m7_17 [label="Entry Unk.UnregisterObject", span="", cluster="Unk.UnregisterObject", file="BackgroundJobServerOptions.cs"];
m7_4 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Start()", span="24-24", cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs"];
m7_5 [label="base.Start()", span="26-26", cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs"];
m7_6 [label="HostingEnvironment.RegisterObject(this)", span="27-27", cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs"];
m7_7 [label="Exit HangFire.Web.AspNetBackgroundJobServer.Start()", span="24-24", cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs"];
m7_10 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="34-34", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="BackgroundJobServerOptions.cs"];
m7_11 [label="var wasStopped = base.Stop()", span="36-36", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=red, community=0, file="BackgroundJobServerOptions.cs"];
m7_12 [label=wasStopped, span="37-37", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=red, community=0, file="BackgroundJobServerOptions.cs"];
m7_14 [label="return wasStopped;", span="42-42", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=red, community=0, file="BackgroundJobServerOptions.cs"];
m7_13 [label="HostingEnvironment.UnregisterObject(this)", span="39-39", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=red, community=0, file="BackgroundJobServerOptions.cs"];
m7_15 [label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop()", span="34-34", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="BackgroundJobServerOptions.cs"];
m7_21 [label="HangFire.Web.AspNetBackgroundJobServer", span="", file="BackgroundJobServerOptions.cs"];
m8_33 [label="Entry Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="101-101", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="BackgroundJobStateChanger.cs"];
m8_34 [label="var transaction = context.Connection.CreateWriteTransaction()", span="104-104", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_35 [label="var applyContext = new ApplyStateContext(\r\n                    context.Storage,\r\n                    context.Connection,\r\n                    transaction,\r\n                    backgroundJob,\r\n                    toState,\r\n                    oldStateName)", span="106-112", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=1, file="BackgroundJobStateChanger.cs"];
m8_37 [label="transaction.Commit()", span="116-116", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_36 [label="var appliedState = _stateMachine.ApplyState(applyContext)", span="114-114", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_38 [label="return appliedState;", span="118-118", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_39 [label="Exit Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="101-101", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="BackgroundJobStateChanger.cs"];
m8_0 [label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", span="30-30", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", file="BackgroundJobStateChanger.cs"];
m8_1 [label="Exit Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", span="30-30", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", file="BackgroundJobStateChanger.cs"];
m8_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJobStateChanger.cs"];
m8_30 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="BackgroundJobStateChanger.cs"];
m8_42 [label="Entry Hangfire.States.IStateMachine.ApplyState(Hangfire.States.ApplyStateContext)", span="30-30", cluster="Hangfire.States.IStateMachine.ApplyState(Hangfire.States.ApplyStateContext)", file="BackgroundJobStateChanger.cs"];
m8_4 [label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", span="40-40", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", file="BackgroundJobStateChanger.cs"];
m8_5 [label="stateMachine == null", span="42-42", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_7 [label="_stateMachine = stateMachine", span="43-43", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_6 [label="throw new ArgumentNullException(''stateMachine'');", span="42-42", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_8 [label="Exit Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", span="40-40", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", file="BackgroundJobStateChanger.cs"];
m8_28 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BackgroundJobStateChanger.cs"];
m8_41 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="33-33", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="BackgroundJobStateChanger.cs"];
m8_57 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="BackgroundJobStateChanger.cs"];
m8_2 [label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="BackgroundJobStateChanger.cs"];
m8_3 [label="Exit Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="BackgroundJobStateChanger.cs"];
m8_10 [label="Entry Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="46-46", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="BackgroundJobStateChanger.cs"];
m8_11 [label="context.Connection.AcquireDistributedJobLock(context.BackgroundJobId, JobLockTimeout)", span="54-54", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_12 [label="var jobData = GetJobData(context)", span="56-56", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_15 [label="context.ExpectedStates != null && !context.ExpectedStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="65-65", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_17 [label="var appliedState = context.NewState", span="70-70", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_22 [label="var backgroundJob = new BackgroundJob(context.BackgroundJobId, jobData.Job, jobData.CreatedAt)", span="94-94", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_23 [label="appliedState = ChangeState(context, backgroundJob, appliedState, jobData.State)", span="95-95", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_13 [label="jobData == null", span="58-58", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_18 [label="jobData.EnsureLoaded()", span="74-74", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_14 [label="return null;", span="62-62", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_16 [label="return null;", span="67-67", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_20 [label="!appliedState.IgnoreJobLoadException", span="83-83", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_21 [label="appliedState = new FailedState(ex.InnerException)\r\n                        {\r\n                            Reason = String.Format(\r\n                                ''Can not change the state to '{0}': target method was not found.'',\r\n                                appliedState.Name)\r\n                        }", span="85-90", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=1, file="BackgroundJobStateChanger.cs"];
m8_19 [label=JobLoadException, span="76-76", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_24 [label="return appliedState;", span="97-97", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_25 [label="Exit Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="46-46", cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="BackgroundJobStateChanger.cs"];
m8_43 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="BackgroundJobStateChanger.cs"];
m8_56 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="BackgroundJobStateChanger.cs"];
m8_27 [label="Entry Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", span="122-122", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="BackgroundJobStateChanger.cs"];
m8_44 [label="var firstAttempt = true", span="124-124", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_46 [label="var jobData = context.Connection.GetJobData(context.BackgroundJobId)", span="128-128", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_51 [label="context.CancellationToken.IsCancellationRequested", span="139-139", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_45 [label=true, span="126-126", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_53 [label="Thread.Sleep(firstAttempt ? 0 : 100)", span="144-144", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_47 [label="jobData == null", span="129-129", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_49 [label="!String.IsNullOrEmpty(jobData.State)", span="134-134", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_50 [label="return jobData;", span="136-136", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_48 [label="return null;", span="131-131", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_52 [label="return null;", span="141-141", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_54 [label="firstAttempt = false", span="145-145", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", color=red, community=0, file="BackgroundJobStateChanger.cs"];
m8_55 [label="Exit Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", span="122-122", cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="BackgroundJobStateChanger.cs"];
m8_40 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="BackgroundJobStateChanger.cs"];
m8_29 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="BackgroundJobStateChanger.cs"];
m8_31 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BackgroundJobStateChanger.cs"];
m8_26 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="26-26", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="BackgroundJobStateChanger.cs"];
m8_32 [label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJobStateChanger.cs"];
m8_58 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="BackgroundJobStateChanger.cs"];
m8_59 [label="Hangfire.States.BackgroundJobStateChanger", span="", file="BackgroundJobStateChanger.cs"];
m9_38 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="BackgroundProcessContextMock.cs"];
m9_89 [label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Reset()", file="BackgroundProcessContextMock.cs"];
m9_72 [label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="BackgroundProcessContextMock.cs"];
m9_90 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="BackgroundProcessContextMock.cs"];
m9_16 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="BackgroundProcessContextMock.cs"];
m9_66 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="86-86", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="BackgroundProcessContextMock.cs"];
m9_39 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_15 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="BackgroundProcessContextMock.cs"];
m9_69 [label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Server.PerformContext)", span="31-31", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Server.PerformContext)", file="BackgroundProcessContextMock.cs"];
m9_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BackgroundProcessContextMock.cs"];
m9_27 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="BackgroundProcessContextMock.cs"];
m9_17 [label="Entry HangFire.Server.Worker.Stop()", span="57-57", cluster="HangFire.Server.Worker.Stop()", file="BackgroundProcessContextMock.cs"];
m9_18 [label="_stopSent = true", span="59-59", cluster="HangFire.Server.Worker.Stop()", file="BackgroundProcessContextMock.cs"];
m9_19 [label="_cts.Cancel()", span="60-60", cluster="HangFire.Server.Worker.Stop()", file="BackgroundProcessContextMock.cs"];
m9_20 [label="Exit HangFire.Server.Worker.Stop()", span="57-57", cluster="HangFire.Server.Worker.Stop()", file="BackgroundProcessContextMock.cs"];
m9_21 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="BackgroundProcessContextMock.cs"];
m9_8 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="BackgroundProcessContextMock.cs"];
m9_86 [label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="70-70", cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundProcessContextMock.cs"];
m9_10 [label="Entry Unk.GetLogger", span="", cluster="Unk.GetLogger", file="BackgroundProcessContextMock.cs"];
m9_87 [label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="BackgroundProcessContextMock.cs"];
m9_73 [label="Entry HangFire.Server.Worker.DoWork()", span="180-180", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_74 [label=true, span="184-184", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_75 [label="_manager.NotifyReady(this)", span="186-186", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_81 [label=OperationCanceledException, span="203-203", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_82 [label=Exception, span="206-206", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_76 [label="_jobIsReady.Wait(_cts.Token)", span="187-187", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_77 [label=_jobLock, span="189-189", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_78 [label="PerformJob(_jobPayload)", span="191-191", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_79 [label="JobFetcher.RemoveFromFetchedQueue(\r\n                            _redis, _jobPayload.Id, _jobPayload.Queue)", span="193-194", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_80 [label="_jobIsReady.Reset()", span="199-199", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_83 [label="Crashed = true", span="208-208", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_84 [label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="209-212", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_85 [label="Exit HangFire.Server.Worker.DoWork()", span="180-180", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs"];
m9_67 [label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_88 [label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="BackgroundProcessContextMock.cs"];
m9_11 [label="Entry HangFire.Server.Worker.Start()", span="47-47", cluster="HangFire.Server.Worker.Start()", file="BackgroundProcessContextMock.cs"];
m9_12 [label="_thread = new Thread(DoWork)\r\n            {\r\n                Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                IsBackground = true\r\n            }", span="49-53", cluster="HangFire.Server.Worker.Start()", file="BackgroundProcessContextMock.cs"];
m9_13 [label="_thread.Start()", span="54-54", cluster="HangFire.Server.Worker.Start()", file="BackgroundProcessContextMock.cs"];
m9_14 [label="Exit HangFire.Server.Worker.Start()", span="47-47", cluster="HangFire.Server.Worker.Start()", file="BackgroundProcessContextMock.cs"];
m9_0 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", span="33-33", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs"];
m9_1 [label="_redis = redisManager.GetClient()", span="38-38", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs"];
m9_3 [label="_manager = manager", span="41-41", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs"];
m9_4 [label="_context = context", span="42-42", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs"];
m9_5 [label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', context.WorkerNumber))", span="44-44", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs"];
m9_2 [label="_stateMachine = new StateMachine(_redis)", span="39-39", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs"];
m9_6 [label="Exit HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", span="33-33", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs"];
m9_7 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="BackgroundProcessContextMock.cs"];
m9_64 [label="Entry Unk.Warn", span="", cluster="Unk.Warn", file="BackgroundProcessContextMock.cs"];
m9_65 [label="Entry HangFire.States.ProcessingState.ProcessingState(string, string)", span="10-10", cluster="HangFire.States.ProcessingState.ProcessingState(string, string)", file="BackgroundProcessContextMock.cs"];
m9_63 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="BackgroundProcessContextMock.cs"];
m9_41 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="BackgroundProcessContextMock.cs"];
m9_91 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="BackgroundProcessContextMock.cs"];
m9_71 [label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string)", file="BackgroundProcessContextMock.cs"];
m9_68 [label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="16-16", cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="BackgroundProcessContextMock.cs"];
m9_42 [label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="110-110", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_43 [label="String.IsNullOrEmpty(payload.Type)", span="112-112", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_44 [label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="114-116", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_47 [label="!_stateMachine.ChangeState(payload.Id, processingState, EnqueuedState.Name)", span="122-122", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_51 [label="jobDescriptor = new ServerJobDescriptor(\r\n                    _redis, _context.Activator, payload)", span="137-138", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_56 [label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="149-151", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_61 [label="_stateMachine.ChangeState(payload.Id, state, ProcessingState.Name)", span="171-171", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_46 [label="var processingState = new ProcessingState(''Worker has started processing.'', _context.ServerName)", span="121-121", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_45 [label="return;", span="118-118", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_48 [label="return;", span="124-124", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_49 [label="Exception exception = null", span="132-132", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_50 [label="ServerJobDescriptor jobDescriptor = null", span="134-134", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_52 [label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="140-141", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_53 [label="_context.Performer.PerformJob(performContext)", span="143-143", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_54 [label=Exception, span="145-145", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_57 [label="JobState state", span="161-161", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_55 [label="exception = ex", span="147-147", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_58 [label="exception == null", span="162-162", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_60 [label="state = new FailedState(''The job has been failed.'', exception)", span="168-168", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_59 [label="state = new SucceededState(''The job has been completed successfully.'')", span="164-164", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_62 [label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="110-110", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_28 [label="Entry HangFire.Server.Worker.Dispose()", span="91-91", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_29 [label="!_stopSent", span="93-93", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_30 [label="Stop()", span="95-95", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_31 [label="_thread != null", span="98-98", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_32 [label="_thread.Join()", span="100-100", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_34 [label="_cts.Dispose()", span="104-104", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_33 [label="_thread = null", span="101-101", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_35 [label="_jobIsReady.Dispose()", span="105-105", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_36 [label="_redis.Dispose()", span="107-107", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_37 [label="Exit HangFire.Server.Worker.Dispose()", span="91-91", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_70 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="BackgroundProcessContextMock.cs"];
m9_40 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()", file="BackgroundProcessContextMock.cs"];
m9_22 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="81-81", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_23 [label=_jobLock, span="83-83", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_24 [label="_jobPayload = payload", span="85-85", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_25 [label="_jobIsReady.Set()", span="88-88", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_26 [label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="81-81", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs"];
m9_92 [label="HangFire.Server.Worker", span="", file="BackgroundProcessContextMock.cs"];
m10_4 [label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="35-35", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundProcessingServerFacts.cs"];
m10_5 [label="var failedState = context.CandidateState as FailedState", span="37-37", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_8 [label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="44-44", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_11 [label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="50-50", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_12 [label="context.CandidateState = new ScheduledState(delay)\r\n                {\r\n                    Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n                }", span="54-57", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_14 [label="Logger.WarnFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        failedState.Exception,\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay)", span="61-67", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_16 [label="Logger.ErrorFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred.'',\r\n                        failedState.Exception,\r\n                        context.JobId)", span="74-77", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_6 [label="failedState == null", span="38-38", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_7 [label="return;", span="41-41", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_9 [label="retryAttempt <= Attempts", span="46-46", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_10 [label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="48-48", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_15 [label=LogEvents, span="72-72", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_13 [label=LogEvents, span="59-59", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_17 [label="Exit Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="35-35", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundProcessingServerFacts.cs"];
m10_22 [label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="BackgroundProcessingServerFacts.cs"];
m10_25 [label="Entry Unk.ErrorFormat", span="", cluster="Unk.ErrorFormat", file="BackgroundProcessingServerFacts.cs"];
m10_19 [label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="BackgroundProcessingServerFacts.cs"];
m10_26 [label="var random = new Random()", span="85-85", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_27 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="86-87", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_28 [label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="BackgroundProcessingServerFacts.cs"];
m10_23 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BackgroundProcessingServerFacts.cs"];
m10_18 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="BackgroundProcessingServerFacts.cs"];
m10_29 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="BackgroundProcessingServerFacts.cs"];
m10_31 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="BackgroundProcessingServerFacts.cs"];
m10_20 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundProcessingServerFacts.cs"];
m10_30 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="BackgroundProcessingServerFacts.cs"];
m10_32 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="BackgroundProcessingServerFacts.cs"];
m10_0 [label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="BackgroundProcessingServerFacts.cs"];
m10_1 [label="Attempts = DefaultRetryAttempts", span="16-16", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_2 [label="LogEvents = true", span="17-17", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", color=red, community=0, file="BackgroundProcessingServerFacts.cs"];
m10_3 [label="Exit Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="BackgroundProcessingServerFacts.cs"];
m10_21 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="BackgroundProcessingServerFacts.cs"];
m10_24 [label="Entry Unk.WarnFormat", span="", cluster="Unk.WarnFormat", file="BackgroundProcessingServerFacts.cs"];
m10_33 [label="Hangfire.AutomaticRetryAttribute", span="", file="BackgroundProcessingServerFacts.cs"];
m11_27 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", file="BootstrapperConfigurationExtensions.cs"];
m11_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="BootstrapperConfigurationExtensions.cs"];
m11_0 [label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="21-21", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs"];
m11_2 [label="_stateContext = new StateContextMock\r\n            {\r\n                JobIdValue = JobId, \r\n                JobValue = _job,\r\n            }", span="25-29", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", color=green, community=0, file="BootstrapperConfigurationExtensions.cs"];
m11_1 [label="_job = Job.FromExpression(() => Console.WriteLine())", span="23-23", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs"];
m11_3 [label="_newState = new Mock<IState>()", span="31-31", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs"];
m11_4 [label="_newState.Setup(x => x.Name).Returns(NewState)", span="32-32", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs"];
m11_5 [label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="21-21", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs"];
m11_8 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="BootstrapperConfigurationExtensions.cs"];
m11_43 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="BootstrapperConfigurationExtensions.cs"];
m11_9 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BootstrapperConfigurationExtensions.cs"];
m11_7 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="BootstrapperConfigurationExtensions.cs"];
m11_28 [label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", span="45-45", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="BootstrapperConfigurationExtensions.cs"];
m11_29 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ApplyStateContext(_stateContext.Object, _newState.Object, OldState, null))", span="47-48", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="BootstrapperConfigurationExtensions.cs"];
m11_30 [label="Assert.Equal(''traversedStates'', exception.ParamName)", span="50-50", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="BootstrapperConfigurationExtensions.cs"];
m11_31 [label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", span="45-45", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="BootstrapperConfigurationExtensions.cs"];
m11_35 [label="Entry ApplyStateContext.cstr", span="", cluster="ApplyStateContext.cstr", file="BootstrapperConfigurationExtensions.cs"];
m11_23 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BootstrapperConfigurationExtensions.cs"];
m11_10 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BootstrapperConfigurationExtensions.cs"];
m11_14 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="BootstrapperConfigurationExtensions.cs"];
m11_32 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_25 [label="new ApplyStateContext(_stateContext.Object, null, OldState, _traversedStates)", span="39-39", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_33 [label="new ApplyStateContext(_stateContext.Object, _newState.Object, OldState, null)", span="48-48", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_11 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_15 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_24 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_26 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_34 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_13 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_12 [label="Console.WriteLine()", span="23-23", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_16 [label="x.Name", span="32-32", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_17 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m11_36 [label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="54-54", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs"];
m11_37 [label="var context = new ApplyStateContext(\r\n                _stateContext.Object,\r\n                _newState.Object,\r\n                OldState,\r\n                _traversedStates)", span="56-60", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", color=green, community=0, file="BootstrapperConfigurationExtensions.cs"];
m11_38 [label="Assert.Equal(OldState, context.OldStateName)", span="62-62", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs"];
m11_39 [label="Assert.Same(_newState.Object, context.NewState)", span="63-63", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs"];
m11_40 [label="Assert.Same(_job, context.Job)", span="64-64", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs"];
m11_41 [label="Assert.Same(_traversedStates, context.TraversedStates)", span="65-65", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs"];
m11_42 [label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="54-54", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs"];
m11_6 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BootstrapperConfigurationExtensions.cs"];
m11_18 [label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", span="36-36", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="BootstrapperConfigurationExtensions.cs"];
m11_19 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ApplyStateContext(_stateContext.Object, null, OldState, _traversedStates))", span="38-39", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="BootstrapperConfigurationExtensions.cs"];
m11_20 [label="Assert.Equal(''newState'', exception.ParamName)", span="41-41", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="BootstrapperConfigurationExtensions.cs"];
m11_21 [label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", span="36-36", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="BootstrapperConfigurationExtensions.cs"];
m11_44 [label="Hangfire.Core.Tests.States.ApplyStateContextFacts", span="", file="BootstrapperConfigurationExtensions.cs"];
m12_50 [label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45", cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="ContinuationsSupportAttribute.cs"];
m12_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ContinuationsSupportAttribute.cs"];
m12_77 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="ContinuationsSupportAttribute.cs"];
m12_0 [label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="38-38", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="ContinuationsSupportAttribute.cs"];
m12_1 [label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="38-38", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="ContinuationsSupportAttribute.cs"];
m12_74 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ContinuationsSupportAttribute.cs"];
m12_108 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ContinuationsSupportAttribute.cs"];
m12_78 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="ContinuationsSupportAttribute.cs"];
m12_95 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ContinuationsSupportAttribute.cs"];
m12_72 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ContinuationsSupportAttribute.cs"];
m12_49 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ContinuationsSupportAttribute.cs"];
m12_45 [label="Entry Hangfire.ContinuationsSupportAttribute.Continuation.Continuation()", span="247-247", cluster="Hangfire.ContinuationsSupportAttribute.Continuation.Continuation()", file="ContinuationsSupportAttribute.cs"];
m12_75 [label="Entry JsonSerializerSettings.cstr", span="", cluster="JsonSerializerSettings.cstr", file="ContinuationsSupportAttribute.cs"];
m12_43 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="26-26", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_99 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="ContinuationsSupportAttribute.cs"];
m12_51 [label="Entry Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", span="231-231", cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="ContinuationsSupportAttribute.cs"];
m12_100 [label="connection.SetJobParameter(jobId, ''Continuations'', JobHelper.ToJson(continuations))", span="234-234", cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="ContinuationsSupportAttribute.cs"];
m12_101 [label="Exit Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", span="231-231", cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="ContinuationsSupportAttribute.cs"];
m12_103 [label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38", cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="ContinuationsSupportAttribute.cs"];
m12_73 [label="Entry Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="190-190", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_80 [label="StateData currentState = null", span="192-192", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_84 [label="var continuationData = context.Connection.GetJobData(continuationJobId)", span="199-199", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_86 [label="Logger.Warn(String.Format(\r\n                        ''Can not start continuation '{0}' for background job '{1}': continuation does not exist.'',\r\n                        continuationJobId,\r\n                        context.BackgroundJob.Id))", span="202-205", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_87 [label="currentState = context.Connection.GetStateData(continuationJobId)", span="210-210", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_89 [label="DateTime.UtcNow >= started.Add(timeout)", span="216-216", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_90 [label="throw new TimeoutException(String.Format(\r\n                        ''Can not start continuation '{0}' for background job '{1}': timeout expired while trying to fetch continuation state.'',\r\n                        continuationJobId,\r\n                        context.BackgroundJob.Id));", span="218-221", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_81 [label="var started = DateTime.UtcNow", span="194-194", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_93 [label="return currentState;", span="228-228", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_82 [label="var firstAttempt = true", span="195-195", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_83 [label=true, span="197-197", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_91 [label="Thread.Sleep(firstAttempt ? 0 : 1)", span="224-224", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_85 [label="continuationData == null", span="200-200", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_88 [label="currentState != null", span="211-211", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_92 [label="firstAttempt = false", span="225-225", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_94 [label="Exit Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="190-190", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_76 [label="Entry Unk.>", span="", cluster="Unk.>", file="ContinuationsSupportAttribute.cs"];
m12_52 [label="Entry System.Enum.HasFlag(System.Enum)", span="0-0", cluster="System.Enum.HasFlag(System.Enum)", file="ContinuationsSupportAttribute.cs"];
m12_44 [label="Entry Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="237-237", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="ContinuationsSupportAttribute.cs"];
m12_104 [label="return JobHelper.FromJson<List<Continuation>>(connection.GetJobParameter(\r\n                jobId, ''Continuations'')) ?? new List<Continuation>();", span="239-240", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="ContinuationsSupportAttribute.cs"];
m12_105 [label="Exit Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="237-237", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="ContinuationsSupportAttribute.cs"];
m12_14 [label="Entry Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="63-63", cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_15 [label="var awaitingState = context.CandidateState as AwaitingState", span="65-65", cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_17 [label="AddContinuation(context, awaitingState)", span="69-69", cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_18 [label="_knownFinalStates.Contains(context.CandidateState.Name)", span="71-71", cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_19 [label="ExecuteContinuationsIfExist(context)", span="74-74", cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_16 [label="awaitingState != null", span="66-66", cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_20 [label="Exit Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="63-63", cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_47 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="ContinuationsSupportAttribute.cs"];
m12_48 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ContinuationsSupportAttribute.cs"];
m12_53 [label="Entry Hangfire.States.DeletedState.DeletedState()", span="65-65", cluster="Hangfire.States.DeletedState.DeletedState()", file="ContinuationsSupportAttribute.cs"];
m12_97 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="ContinuationsSupportAttribute.cs"];
m12_21 [label="Entry Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", span="87-87", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_29 [label="var connection = context.Connection", span="89-89", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_30 [label="var parentId = awaitingState.ParentId", span="90-90", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_33 [label="continuations.Add(new Continuation { JobId = context.BackgroundJob.Id, Options = awaitingState.Options })", span="99-99", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_40 [label="var startImmediately = !awaitingState.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) ||\r\n                        currentState.Name == SucceededState.StateName", span="120-121", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_41 [label="context.CandidateState = startImmediately\r\n                        ? awaitingState.NextState\r\n                        : new DeletedState { Reason = ''Continuation condition was not met'' }", span="123-125", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_31 [label="connection.AcquireDistributedJobLock(parentId, AddJobLockTimeout)", span="96-96", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_32 [label="var continuations = GetContinuations(connection, parentId)", span="98-98", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_34 [label="var jobData = connection.GetJobData(parentId)", span="101-101", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_37 [label="var currentState = connection.GetStateData(parentId)", span="111-111", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_38 [label="SetContinuations(connection, parentId, continuations)", span="116-116", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_36 [label="throw new InvalidOperationException(\r\n                        String.Format(''Can not add a continuation: parent background job '{0}' does not exist.'', parentId));", span="107-108", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_35 [label="jobData == null", span="102-102", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_39 [label="currentState != null && _knownFinalStates.Contains(currentState.Name)", span="118-118", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_42 [label="Exit Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", span="87-87", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs"];
m12_71 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ContinuationsSupportAttribute.cs"];
m12_107 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="ContinuationsSupportAttribute.cs"];
m12_4 [label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", span="48-48", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="ContinuationsSupportAttribute.cs"];
m12_5 [label="knownFinalStates == null", span="52-52", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_7 [label="stateChanger == null", span="53-53", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_9 [label="_knownFinalStates = knownFinalStates", span="55-55", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="ContinuationsSupportAttribute.cs"];
m12_10 [label="_stateChanger = stateChanger", span="56-56", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_6 [label="throw new ArgumentNullException(''knownFinalStates'');", span="52-52", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_8 [label="throw new ArgumentNullException(''stateChanger'');", span="53-53", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_11 [label="Order = 1000", span="60-60", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="ContinuationsSupportAttribute.cs"];
m12_12 [label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", span="48-48", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="ContinuationsSupportAttribute.cs"];
m12_98 [label="Entry System.TimeoutException.TimeoutException(string)", span="0-0", cluster="System.TimeoutException.TimeoutException(string)", file="ContinuationsSupportAttribute.cs"];
m12_24 [label="Entry Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="78-78", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs"];
m12_25 [label="var awaitingState = context.NewState as AwaitingState", span="80-80", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs"];
m12_27 [label="context.JobExpirationTimeout = awaitingState.Expiration", span="83-83", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs"];
m12_26 [label="awaitingState != null", span="81-81", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs"];
m12_28 [label="Exit Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="78-78", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs"];
m12_96 [label="Entry Hangfire.Logging.ILog.Warn(string)", span="262-262", cluster="Hangfire.Logging.ILog.Warn(string)", file="ContinuationsSupportAttribute.cs"];
m12_23 [label="Entry Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="130-130", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_54 [label="var continuations = GetContinuations(context.Connection, context.BackgroundJob.Id)", span="134-134", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_58 [label="var currentState = GetContinuaionState(context, continuation.JobId, ContinuationStateFetchTimeout)", span="143-143", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_61 [label="continuation.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) &&\r\n                    context.CandidateState.Name != SucceededState.StateName", span="153-154", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_69 [label="_stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    context.Connection,\r\n                    tuple.Key,\r\n                    tuple.Value,\r\n                    AwaitingState.StateName))", span="181-186", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", color=red, community=1, file="ContinuationsSupportAttribute.cs"];
m12_55 [label="var nextStates = new Dictionary<string, IState>()", span="135-135", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_56 [label=continuations, span="139-139", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_62 [label="nextStates.Add(continuation.JobId, new DeletedState { Reason = ''Continuation condition was not met'' })", span="156-156", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_67 [label="nextStates.Add(continuation.JobId, nextState)", span="176-176", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_68 [label=nextStates, span="179-179", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_57 [label="String.IsNullOrWhiteSpace(continuation.JobId)", span="141-141", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_59 [label="currentState == null", span="144-144", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_60 [label="currentState.Name != AwaitingState.StateName", span="151-151", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_64 [label="nextState = JsonConvert.DeserializeObject<IState>(\r\n                        currentState.Data[''NextState''],\r\n                        new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Objects })", span="164-166", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_63 [label="IState nextState", span="160-160", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_65 [label=Exception, span="168-168", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_66 [label="nextState = new FailedState(ex)\r\n                    {\r\n                        Reason = ''An error occurred while deserializing the continuation''\r\n                    }", span="170-173", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", color=red, community=0, file="ContinuationsSupportAttribute.cs"];
m12_70 [label="Exit Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="130-130", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs"];
m12_102 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ContinuationsSupportAttribute.cs"];
m12_2 [label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="43-43", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="ContinuationsSupportAttribute.cs"];
m12_3 [label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="43-43", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="ContinuationsSupportAttribute.cs"];
m12_46 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ContinuationsSupportAttribute.cs"];
m12_106 [label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39", cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="ContinuationsSupportAttribute.cs"];
m12_109 [label="Entry Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="243-243", cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs"];
m12_110 [label="Exit Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="243-243", cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs"];
m12_79 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="ContinuationsSupportAttribute.cs"];
m12_22 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="ContinuationsSupportAttribute.cs"];
m12_111 [label="Hangfire.ContinuationsSupportAttribute", span="", file="ContinuationsSupportAttribute.cs"];
m14_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="CoreBackgroundJobPerformer.cs"];
m14_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="CoreBackgroundJobPerformer.cs"];
m14_0 [label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="CoreBackgroundJobPerformer.cs"];
m14_1 [label="transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="13-16", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=red, community=0, file="CoreBackgroundJobPerformer.cs"];
m14_2 [label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="CoreBackgroundJobPerformer.cs"];
m14_5 [label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="CoreBackgroundJobPerformer.cs"];
m14_6 [label="transaction.RemoveFromSet(''processing'', context.JobId)", span="22-22", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=red, community=0, file="CoreBackgroundJobPerformer.cs"];
m14_7 [label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="CoreBackgroundJobPerformer.cs"];
m14_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="CoreBackgroundJobPerformer.cs"];
m15_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CountersAggregator.cs"];
m15_0 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m15_1 [label="storage == null", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m15_3 [label="_storage = storage", span="38-38", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m15_4 [label="_interval = interval", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m15_2 [label="throw new ArgumentNullException(''storage'');", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m15_5 [label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m15_19 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="CountersAggregator.cs"];
m15_24 [label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="CountersAggregator.cs"];
m15_31 [label="return string.Format(@''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [{0}].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{0}].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'', storage.GetSchemaName());", span="74-100", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="CountersAggregator.cs"];
m15_32 [label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="CountersAggregator.cs"];
m15_25 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="CountersAggregator.cs"];
m15_30 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="CountersAggregator.cs"];
m15_7 [label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m15_8 [label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m15_12 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m15_15 [label="cancellationToken.WaitHandle.WaitOne(_interval)", span="64-64", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m15_9 [label="int removedCount = 0", span="46-46", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=green, community=0, file="CountersAggregator.cs"];
m15_10 [label="_storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", span="50-55", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=green, community=0, file="CountersAggregator.cs"];
m15_11 [label="removedCount >= NumberOfRecordsInSinglePass", span="57-57", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m15_14 [label="removedCount >= NumberOfRecordsInSinglePass", span="62-62", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m15_13 [label="cancellationToken.ThrowIfCancellationRequested()", span="60-60", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m15_16 [label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m15_34 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CountersAggregator.cs"];
m15_17 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="CountersAggregator.cs"];
m15_26 [label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs"];
m15_27 [label="return GetType().ToString();", span="69-69", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", color=green, community=0, file="CountersAggregator.cs"];
m15_28 [label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs"];
m15_33 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetSchemaName()", span="238-238", cluster="Hangfire.SqlServer.SqlServerStorage.GetSchemaName()", file="CountersAggregator.cs"];
m15_18 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="CountersAggregator.cs"];
m15_29 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="CountersAggregator.cs"];
m15_21 [label="Entry lambda expression", span="50-55", cluster="lambda expression", file="CountersAggregator.cs"];
m15_22 [label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54", cluster="lambda expression", color=green, community=0, file="CountersAggregator.cs"];
m15_23 [label="Exit lambda expression", span="50-55", cluster="lambda expression", file="CountersAggregator.cs"];
m15_20 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="CountersAggregator.cs"];
m15_35 [label="Hangfire.SqlServer.CountersAggregator", span="", file="CountersAggregator.cs"];
m18_0 [label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="DelayedJobSchedulerFacts.cs"];
m18_1 [label="Exit Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="DelayedJobSchedulerFacts.cs"];
m19_0 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.FactWithTimeout.FactWithTimeout()", span="8-8", cluster="Hangfire.SqlServer.RabbitMq.Tests.FactWithTimeout.FactWithTimeout()", file="FactWithTimeout.cs"];
m19_1 [label="Timeout = Debugger.IsAttached ? Int32.MaxValue : 30 * 1000", span="10-10", cluster="Hangfire.SqlServer.RabbitMq.Tests.FactWithTimeout.FactWithTimeout()", color=red, community=0, file="FactWithTimeout.cs"];
m19_2 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.FactWithTimeout.FactWithTimeout()", span="8-8", cluster="Hangfire.SqlServer.RabbitMq.Tests.FactWithTimeout.FactWithTimeout()", file="FactWithTimeout.cs"];
m21_0 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs"];
m21_1 [label="transaction == null", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs"];
m21_3 [label="jobId == null", span="30-30", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs"];
m21_5 [label="_transaction = transaction", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs"];
m21_6 [label="JobId = jobId", span="34-34", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs"];
m21_2 [label="throw new ArgumentNullException(''transaction'');", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs"];
m21_4 [label="throw new ArgumentNullException(''jobId'');", span="30-30", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs"];
m21_7 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs"];
m21_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HtmlHelper.cs"];
m21_17 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", span="49-49", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="HtmlHelper.cs"];
m21_18 [label="_transaction.Dispose()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="HtmlHelper.cs"];
m21_19 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", span="49-49", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="HtmlHelper.cs"];
m21_9 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", span="39-39", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", file="HtmlHelper.cs"];
m21_10 [label="_transaction.Commit()", span="41-41", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", file="HtmlHelper.cs"];
m21_11 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", span="39-39", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", file="HtmlHelper.cs"];
m21_12 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", span="25-25", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", file="HtmlHelper.cs"];
m21_13 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", span="44-44", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="HtmlHelper.cs"];
m21_14 [label="_transaction.Abort()", span="46-46", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="HtmlHelper.cs"];
m21_15 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", span="44-44", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="HtmlHelper.cs"];
m21_16 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="HtmlHelper.cs"];
m21_20 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="HtmlHelper.cs"];
m21_21 [label="Hangfire.SqlServer.Msmq.MsmqFetchedJob", span="", file="HtmlHelper.cs"];
m22_0 [label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20", cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="IBackgroundJobPerformer.cs"];
m22_1 [label="Exit Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20", cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="IBackgroundJobPerformer.cs"];
m23_0 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="IBackgroundJobStateChanger.cs"];
m23_1 [label="Exit Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="IBackgroundJobStateChanger.cs"];
m25_0 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", span="23-23", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", file="IMsmqTransaction.cs"];
m25_1 [label="Exit Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", span="23-23", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", file="IMsmqTransaction.cs"];
m25_2 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", span="25-25", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", file="IMsmqTransaction.cs"];
m25_3 [label="Exit Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", span="25-25", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", file="IMsmqTransaction.cs"];
m25_4 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="IMsmqTransaction.cs"];
m25_5 [label="Exit Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="IMsmqTransaction.cs"];
m26_0 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs"];
m26_1 [label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs"];
m27_31 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="203-203", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="InfiniteLoopProcess.cs"];
m27_172 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="203-203", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="InfiniteLoopProcess.cs"];
m27_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="InfiniteLoopProcess.cs"];
m27_18 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="InfiniteLoopProcess.cs"];
m27_37 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InfiniteLoopProcess.cs"];
m27_17 [label="Entry Mock<IJobCreationProcess>.cstr", span="", cluster="Mock<IJobCreationProcess>.cstr", file="InfiniteLoopProcess.cs"];
m27_60 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="InfiniteLoopProcess.cs"];
m27_94 [label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="InfiniteLoopProcess.cs"];
m27_104 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="InfiniteLoopProcess.cs"];
m27_32 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="InfiniteLoopProcess.cs"];
m27_33 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="40-41", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_34 [label="Assert.Equal(''storage'', exception.ParamName)", span="43-43", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_35 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="InfiniteLoopProcess.cs"];
m27_36 [label="Entry Unk.>", span="", cluster="Unk.>", file="InfiniteLoopProcess.cs"];
m27_77 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="85-85", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs"];
m27_78 [label="var client = CreateClient()", span="87-87", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs"];
m27_79 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="89-90", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs"];
m27_80 [label="Assert.Equal(''job'', exception.ParamName)", span="92-92", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs"];
m27_81 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="85-85", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs"];
m27_56 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="65-65", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="InfiniteLoopProcess.cs"];
m27_57 [label="JobStorage.Current = new Mock<JobStorage>().Object", span="67-67", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="InfiniteLoopProcess.cs"];
m27_58 [label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="68-68", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="InfiniteLoopProcess.cs"];
m27_59 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="65-65", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="InfiniteLoopProcess.cs"];
m27_95 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="107-107", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs"];
m27_96 [label="var client = CreateClient()", span="109-109", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs"];
m27_97 [label="client.Create(_job, _state.Object)", span="111-111", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs"];
m27_98 [label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>(), It.IsNotNull<IStateMachine>()))", span="113-113", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs"];
m27_99 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="107-107", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs"];
m27_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="InfiniteLoopProcess.cs"];
m27_136 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="InfiniteLoopProcess.cs"];
m27_121 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="InfiniteLoopProcess.cs"];
m27_114 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="128-128", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs"];
m27_115 [label="var client = CreateClient()", span="130-130", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs"];
m27_116 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>()))\r\n                .Throws<InvalidOperationException>()", span="131-132", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs"];
m27_117 [label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="134-135", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs"];
m27_118 [label="Assert.NotNull(exception.InnerException)", span="137-137", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs"];
m27_119 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="138-138", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs"];
m27_120 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="128-128", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs"];
m27_145 [label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="InfiniteLoopProcess.cs"];
m27_146 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="164-164", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs"];
m27_147 [label="var client = CreateClient()", span="166-166", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs"];
m27_148 [label="client.ChangeState(''job-id'', _state.Object, null)", span="168-168", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs"];
m27_149 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null,\r\n                It.IsAny<CancellationToken>()))", span="170-174", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs"];
m27_150 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="164-164", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs"];
m27_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="InfiniteLoopProcess.cs"];
m27_64 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="InfiniteLoopProcess.cs"];
m27_42 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="InfiniteLoopProcess.cs"];
m27_43 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="49-50", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="InfiniteLoopProcess.cs"];
m27_44 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="52-52", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="InfiniteLoopProcess.cs"];
m27_45 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="InfiniteLoopProcess.cs"];
m27_169 [label="Entry lambda expression", span="194-194", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_20 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_24 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_28 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_21 [label="x.GetConnection()", span="25-25", cluster="lambda expression", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_22 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_25 [label="x.Create(_connection.Object)", span="30-30", cluster="lambda expression", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_26 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_29 [label="Method()", span="34-34", cluster="lambda expression", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_30 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_38 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_39 [label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="41-41", cluster="lambda expression", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_40 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_46 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_47 [label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="50-50", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_48 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_53 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_54 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="59-59", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_55 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_61 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_62 [label="new BackgroundJobClient()", span="68-68", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_63 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_68 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_69 [label="new BackgroundJobClient(_storage.Object)", span="74-74", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_70 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_74 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_75 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="81-81", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_76 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_84 [label="client.Create(null, _state.Object)", span="90-90", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_83 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_85 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_92 [label="client.Create(_job, null)", span="101-101", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_91 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_93 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_101 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_102 [label="x.Run(It.IsNotNull<CreateContext>(), It.IsNotNull<IStateMachine>())", span="113-113", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_103 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_111 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_112 [label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())", span="119-119", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_113 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_126 [label="client.Create(_job, _state.Object)", span="135-135", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_122 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_125 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_123 [label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())", span="131-131", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_124 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_127 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_134 [label="client.ChangeState(null, _state.Object, null)", span="147-147", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_133 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_135 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_143 [label="client.ChangeState(''jobId'', null, null)", span="158-158", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_142 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_144 [label="Exit lambda expression", span="158-158", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_151 [label="Entry lambda expression", span="170-174", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_152 [label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null,\r\n                It.IsAny<CancellationToken>())", span="170-174", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_153 [label="Exit lambda expression", span="170-174", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_159 [label="Entry lambda expression", span="184-188", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_160 [label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' },\r\n                It.IsAny<CancellationToken>())", span="184-188", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_161 [label="Exit lambda expression", span="184-188", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_170 [label="x.ChangeState(''job-id'', _state.Object, null, It.IsAny<CancellationToken>())", span="194-194", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_171 [label="Exit lambda expression", span="194-194", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m27_86 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="96-96", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_87 [label="var client = CreateClient()", span="98-98", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_88 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="100-101", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_89 [label="Assert.Equal(''state'', exception.ParamName)", span="103-103", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_90 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="96-96", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_105 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", span="117-117", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs"];
m27_106 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())).Returns(''some-job'')", span="119-119", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs"];
m27_107 [label="var client = CreateClient()", span="120-120", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs"];
m27_108 [label="var id = client.Create(_job, _state.Object)", span="122-122", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs"];
m27_109 [label="Assert.Equal(''some-job'', id)", span="124-124", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs"];
m27_110 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", span="117-117", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs"];
m27_82 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="207-207", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="InfiniteLoopProcess.cs"];
m27_173 [label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="209-209", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="InfiniteLoopProcess.cs"];
m27_174 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="207-207", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="InfiniteLoopProcess.cs"];
m27_100 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="InfiniteLoopProcess.cs"];
m27_65 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="72-72", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="InfiniteLoopProcess.cs"];
m27_66 [label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="74-74", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="InfiniteLoopProcess.cs"];
m27_67 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="72-72", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="InfiniteLoopProcess.cs"];
m27_128 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="142-142", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs"];
m27_129 [label="var client = CreateClient()", span="144-144", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs"];
m27_130 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="146-147", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs"];
m27_131 [label="Assert.Equal(''jobId'', exception.ParamName)", span="149-149", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs"];
m27_132 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="142-142", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs"];
m27_0 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="21-21", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="InfiniteLoopProcess.cs"];
m27_1 [label="_connection = new Mock<IStorageConnection>()", span="23-23", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_2 [label="_storage = new Mock<JobStorage>()", span="24-24", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_3 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="25-25", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_4 [label="_stateMachine = new Mock<IStateMachine>()", span="27-27", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="29-29", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_6 [label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="30-30", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_7 [label="_process = new Mock<IJobCreationProcess>()", span="32-32", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_8 [label="_state = new Mock<IState>()", span="33-33", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_9 [label="_job = Job.FromExpression(() => Method())", span="34-34", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="InfiniteLoopProcess.cs"];
m27_10 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="21-21", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="InfiniteLoopProcess.cs"];
m27_15 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="InfiniteLoopProcess.cs"];
m27_49 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="56-56", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="InfiniteLoopProcess.cs"];
m27_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="58-59", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="InfiniteLoopProcess.cs"];
m27_51 [label="Assert.Equal(''process'', exception.ParamName)", span="61-61", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="InfiniteLoopProcess.cs"];
m27_52 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="56-56", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="InfiniteLoopProcess.cs"];
m27_27 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="InfiniteLoopProcess.cs"];
m27_154 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="178-178", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs"];
m27_155 [label="var client = CreateClient()", span="180-180", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs"];
m27_156 [label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="182-182", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs"];
m27_157 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' },\r\n                It.IsAny<CancellationToken>()))", span="184-188", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs"];
m27_158 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="178-178", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs"];
m27_162 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="192-192", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs"];
m27_163 [label="_stateMachine.Setup(x => x.ChangeState(''job-id'', _state.Object, null, It.IsAny<CancellationToken>()))\r\n                .Returns(true)", span="194-195", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs"];
m27_164 [label="var client = CreateClient()", span="196-196", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs"];
m27_165 [label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="198-198", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs"];
m27_166 [label="Assert.True(result)", span="200-200", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs"];
m27_167 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="192-192", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs"];
m27_168 [label="Entry Unk.True", span="", cluster="Unk.True", file="InfiniteLoopProcess.cs"];
m27_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="InfiniteLoopProcess.cs"];
m27_41 [label="Entry BackgroundJobClient.cstr", span="", cluster="BackgroundJobClient.cstr", file="InfiniteLoopProcess.cs"];
m27_137 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="153-153", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_138 [label="var client = CreateClient()", span="155-155", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_139 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="157-158", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_140 [label="Assert.Equal(''state'', exception.ParamName)", span="160-160", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_141 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="153-153", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs"];
m27_71 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="78-78", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="InfiniteLoopProcess.cs"];
m27_72 [label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="80-81", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="InfiniteLoopProcess.cs"];
m27_73 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="78-78", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="InfiniteLoopProcess.cs"];
m27_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="InfiniteLoopProcess.cs"];
m27_12 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="InfiniteLoopProcess.cs"];
m27_19 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="InfiniteLoopProcess.cs"];
m27_175 [label="Hangfire.Core.Tests.BackgroundJobClientFacts", span="", file="InfiniteLoopProcess.cs"];
m27_176 [label=client, span="", file="InfiniteLoopProcess.cs"];
m27_177 [label=client, span="", file="InfiniteLoopProcess.cs"];
m27_178 [label=client, span="", file="InfiniteLoopProcess.cs"];
m27_179 [label=client, span="", file="InfiniteLoopProcess.cs"];
m27_180 [label=client, span="", file="InfiniteLoopProcess.cs"];
m28_6 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_7 [label="var type = System.Type.GetType(Type, throwOnError: true, ignoreCase: true)", span="48-48", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_8 [label="var parameterTypes = JobHelper.FromJson<Type[]>(ParameterTypes)", span="49-49", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_9 [label="var method = GetNonOpenMatchingMethod(type, Method, parameterTypes)", span="50-50", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_11 [label="throw new InvalidOperationException(String.Format(\r\n                        ''The type `{0}` does not contain a method with signature `{1}({2})`'',\r\n                        type.FullName,\r\n                        Method,\r\n                        String.Join('', '', parameterTypes.Select(x => x.Name))));", span="54-58", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_14 [label="return new Job(type, method, arguments);", span="64-64", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_10 [label="method == null", span="52-52", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_13 [label="var arguments = DeserializeArguments(method, serializedArguments)", span="62-62", cluster="Hangfire.Storage.InvocationData.Deserialize()", color=red, community=0, file="InvocationData.cs"];
m28_12 [label="var serializedArguments = JobHelper.FromJson<string[]>(Arguments)", span="61-61", cluster="Hangfire.Storage.InvocationData.Deserialize()", color=red, community=0, file="InvocationData.cs"];
m28_15 [label=Exception, span="66-66", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_16 [label="throw new JobLoadException(''Could not load the job. See inner exception for the details.'', ex);", span="68-68", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_17 [label="Exit Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs"];
m28_110 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="InvocationData.cs"];
m28_20 [label="Entry Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_87 [label="var methodCandidates = type.GetMethods()", span="174-174", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_89 [label="!methodCandidate.Name.Equals(name, StringComparison.Ordinal)", span="178-178", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_91 [label="parameters.Length != parameterTypes.Length", span="184-184", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_98 [label="var actualType = parameterTypes[i]", span="198-198", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_88 [label=methodCandidates, span="176-176", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_106 [label="return null;", span="222-222", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_90 [label="var parameters = methodCandidate.GetParameters()", span="183-183", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_105 [label="return methodCandidate.ContainsGenericParameters \r\n                    ? methodCandidate.MakeGenericMethod(genericArguments.ToArray()) \r\n                    : methodCandidate;", span="217-219", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_95 [label="i < parameters.Length", span="194-194", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_96 [label="var parameter = parameters[i]", span="196-196", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_92 [label="var parameterTypesMatched = true", span="189-189", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_93 [label="var genericArguments = new List<Type>()", span="190-190", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_104 [label="!parameterTypesMatched", span="214-214", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_94 [label="var i = 0", span="194-194", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_100 [label="genericArguments.Add(actualType)", span="203-203", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_103 [label="i++", span="194-194", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_97 [label="var parameterType = parameter.ParameterType", span="197-197", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_99 [label="parameterType.IsGenericParameter", span="201-201", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_101 [label="parameterType.IsAssignableFrom(actualType)", span="208-208", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_102 [label="parameterTypesMatched = false", span="210-210", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_107 [label="Exit Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172", cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs"];
m28_112 [label="Entry System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", span="0-0", cluster="System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", file="InvocationData.cs"];
m28_53 [label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="InvocationData.cs"];
m28_26 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="InvocationData.cs"];
m28_23 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="InvocationData.cs"];
m28_111 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="InvocationData.cs"];
m28_25 [label="Entry Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="InvocationData.cs"];
m28_56 [label="var parameters = methodInfo.GetParameters()", span="112-112", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_57 [label="var result = new List<object>(arguments.Length)", span="113-113", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_61 [label="var argument = arguments[i]", span="118-118", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_59 [label="i < parameters.Length", span="115-115", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_60 [label="var parameter = parameters[i]", span="117-117", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_58 [label="var i = 0", span="115-115", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_66 [label="result.Add(value)", span="133-133", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_68 [label="return result.ToArray();", span="136-136", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_67 [label="i++", span="115-115", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_63 [label="CoreBackgroundJobPerformer.Substitutions.ContainsKey(parameter.ParameterType)", span="122-122", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_64 [label="value = parameter.ParameterType.IsValueType\r\n                        ? Activator.CreateInstance(parameter.ParameterType)\r\n                        : null", span="124-126", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=1, file="InvocationData.cs"];
m28_65 [label="value = DeserializeArgument(argument, parameter.ParameterType)", span="130-130", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_62 [label="object value", span="120-120", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="InvocationData.cs"];
m28_69 [label="Exit Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="InvocationData.cs"];
m28_71 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="InvocationData.cs"];
m28_70 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="InvocationData.cs"];
m28_18 [label="Entry System.Type.GetType(string, bool, bool)", span="0-0", cluster="System.Type.GetType(string, bool, bool)", file="InvocationData.cs"];
m28_72 [label="Entry Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="InvocationData.cs"];
m28_73 [label="object value", span="141-141", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=0, file="InvocationData.cs"];
m28_74 [label="value = argument != null\r\n                    ? JobHelper.FromJson(argument, type)\r\n                    : null", span="144-146", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=1, file="InvocationData.cs"];
m28_76 [label="type == typeof (object)", span="150-150", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=0, file="InvocationData.cs"];
m28_77 [label="value = argument", span="154-154", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=0, file="InvocationData.cs"];
m28_78 [label="var converter = TypeDescriptor.GetConverter(type)", span="160-160", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=0, file="InvocationData.cs"];
m28_79 [label="value = converter.ConvertFromInvariantString(argument)", span="161-161", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=0, file="InvocationData.cs"];
m28_75 [label=Exception, span="148-148", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=0, file="InvocationData.cs"];
m28_82 [label="return value;", span="169-169", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=0, file="InvocationData.cs"];
m28_80 [label=Exception, span="163-163", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=0, file="InvocationData.cs"];
m28_81 [label="throw jsonException;", span="165-165", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", color=red, community=0, file="InvocationData.cs"];
m28_83 [label="Exit Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139", cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="InvocationData.cs"];
m28_31 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="InvocationData.cs"];
m28_32 [label="return new InvocationData(\r\n                job.Type.AssemblyQualifiedName,\r\n                job.Method.Name,\r\n                JobHelper.ToJson(job.Method.GetParameters().Select(x => x.ParameterType).ToArray()),\r\n                JobHelper.ToJson(SerializeArguments(job.Args)));", span="74-78", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", color=red, community=0, file="InvocationData.cs"];
m28_33 [label="Exit Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="InvocationData.cs"];
m28_35 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="InvocationData.cs"];
m28_21 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="InvocationData.cs"];
m28_85 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="InvocationData.cs"];
m28_24 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="InvocationData.cs"];
m28_55 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="InvocationData.cs"];
m28_19 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="InvocationData.cs"];
m28_38 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="InvocationData.cs"];
m28_36 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="InvocationData.cs"];
m28_39 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="InvocationData.cs"];
m28_28 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="InvocationData.cs"];
m28_29 [label="x.Name", span="58-58", cluster="lambda expression", file="InvocationData.cs"];
m28_30 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="InvocationData.cs"];
m28_40 [label="x.ParameterType", span="77-77", cluster="lambda expression", file="InvocationData.cs"];
m28_41 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="InvocationData.cs"];
m28_109 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="InvocationData.cs"];
m28_22 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="InvocationData.cs"];
m28_108 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="InvocationData.cs"];
m28_52 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="InvocationData.cs"];
m28_84 [label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46", cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="InvocationData.cs"];
m28_27 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="InvocationData.cs"];
m28_54 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="InvocationData.cs"];
m28_0 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs"];
m28_1 [label="Type = type", span="33-33", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs"];
m28_2 [label="Method = method", span="34-34", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs"];
m28_3 [label="ParameterTypes = parameterTypes", span="35-35", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs"];
m28_4 [label="Arguments = arguments", span="36-36", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs"];
m28_5 [label="Exit Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs"];
m28_86 [label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="InvocationData.cs"];
m28_34 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="InvocationData.cs"];
m28_37 [label="Entry Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="InvocationData.cs"];
m28_42 [label="var serializedArguments = new List<string>(arguments.Count)", span="83-83", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", color=red, community=0, file="InvocationData.cs"];
m28_43 [label=arguments, span="84-84", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", color=red, community=1, file="InvocationData.cs"];
m28_49 [label="serializedArguments.Add(value)", span="104-104", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", color=red, community=0, file="InvocationData.cs"];
m28_50 [label="return serializedArguments.ToArray();", span="107-107", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", color=red, community=0, file="InvocationData.cs"];
m28_44 [label="string value = null", span="86-86", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", color=red, community=0, file="InvocationData.cs"];
m28_45 [label="argument != null", span="88-88", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", color=red, community=0, file="InvocationData.cs"];
m28_46 [label="argument is DateTime", span="90-90", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", color=red, community=0, file="InvocationData.cs"];
m28_47 [label="value = ((DateTime)argument).ToString(''o'', CultureInfo.InvariantCulture)", span="92-92", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", color=red, community=0, file="InvocationData.cs"];
m28_48 [label="value = JobHelper.ToJson(argument)", span="96-96", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", color=red, community=0, file="InvocationData.cs"];
m28_51 [label="Exit Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81", cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="InvocationData.cs"];
m28_113 [label="Hangfire.Storage.InvocationData", span="", file="InvocationData.cs"];
m29_0 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="31-31", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="InvocationDataFacts.cs"];
m29_1 [label="Exit Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="31-31", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="InvocationDataFacts.cs"];
m31_0 [label="Entry Hangfire.States.IState.SerializeData()", span="202-202", cluster="Hangfire.States.IState.SerializeData()", file="IState.cs"];
m31_1 [label="Exit Hangfire.States.IState.SerializeData()", span="202-202", cluster="Hangfire.States.IState.SerializeData()", file="IState.cs"];
m32_12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Job.Obsolete.cs"];
m32_29 [label="Entry Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="83-83", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.Obsolete.cs"];
m32_42 [label="var parameters = Method.GetParameters()", span="87-87", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_50 [label="value = cancellationToken", span="99-99", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_43 [label="var result = new List<object>(Arguments.Length)", span="88-88", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_45 [label="i < parameters.Length", span="90-90", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_46 [label="var parameter = parameters[i]", span="92-92", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_44 [label="var i = 0", span="90-90", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_57 [label="result.Add(value)", span="125-125", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_59 [label="return result.ToArray();", span="128-128", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_47 [label="var argument = Arguments[i]", span="93-93", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_58 [label="i++", span="90-90", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_49 [label="typeof(IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="97-97", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_51 [label="value = argument != null\r\n                                ? JobHelper.FromJson(argument, parameter.ParameterType)\r\n                                : null", span="105-107", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=1, file="Job.Obsolete.cs"];
m32_53 [label="parameter.ParameterType == typeof(object)", span="111-111", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_55 [label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="119-119", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_48 [label="object value", span="95-95", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_54 [label="value = argument", span="115-115", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_56 [label="value = converter.ConvertFromInvariantString(argument)", span="120-120", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_52 [label=Exception, span="109-109", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_60 [label=Exception, span="130-130", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_61 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="132-134", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=red, community=1, file="Job.Obsolete.cs"];
m32_62 [label="Exit Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="83-83", cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.Obsolete.cs"];
m32_65 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="Job.Obsolete.cs"];
m32_14 [label="Entry Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110", cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="Job.Obsolete.cs"];
m32_40 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Job.Obsolete.cs"];
m32_28 [label="Entry Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="60-60", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.Obsolete.cs"];
m32_31 [label="var instance = activator.ActivateJob(Type)", span="64-64", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", color=red, community=0, file="Job.Obsolete.cs"];
m32_32 [label="instance == null", span="66-66", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", color=red, community=0, file="Job.Obsolete.cs"];
m32_34 [label="return instance;", span="72-72", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", color=red, community=0, file="Job.Obsolete.cs"];
m32_33 [label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="68-69", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", color=red, community=1, file="Job.Obsolete.cs"];
m32_35 [label=Exception, span="74-74", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", color=red, community=0, file="Job.Obsolete.cs"];
m32_36 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during job activation.'',\r\n                    ex);", span="76-78", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", color=red, community=1, file="Job.Obsolete.cs"];
m32_37 [label="Exit Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="60-60", cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.Obsolete.cs"];
m32_0 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.Obsolete.cs"];
m32_1 [label="type == null", span="15-15", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_3 [label="method == null", span="16-16", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_5 [label="arguments == null", span="17-17", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_7 [label="Validate(type, ''type'', method, ''method'', arguments.Length, ''arguments'')", span="19-19", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_8 [label="Type = type", span="21-21", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_9 [label="Method = method", span="22-22", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_10 [label="Args = InvocationData.DeserializeArguments(method, arguments)", span="23-23", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_2 [label="throw new ArgumentNullException(''type'');", span="15-15", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_4 [label="throw new ArgumentNullException(''method'');", span="16-16", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_6 [label="throw new ArgumentNullException(''arguments'');", span="17-17", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_11 [label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.Obsolete.cs"];
m32_15 [label="Entry Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="33-33", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.Obsolete.cs"];
m32_16 [label="activator == null", span="35-35", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_18 [label="cancellationToken == null", span="36-36", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_23 [label="instance = Activate(activator)", span="45-45", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_24 [label="var deserializedArguments = DeserializeArguments(cancellationToken)", span="48-48", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_17 [label="throw new ArgumentNullException(''activator'');", span="35-35", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_19 [label="throw new ArgumentNullException(''cancellationToken'');", span="36-36", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_20 [label="object instance = null", span="38-38", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_21 [label="object result", span="40-40", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_25 [label="result = InvokeMethod(instance, deserializedArguments)", span="49-49", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_22 [label="!Method.IsStatic", span="43-43", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_26 [label="return result;", span="56-56", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=0, file="Job.Obsolete.cs"];
m32_27 [label="Exit Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="33-33", cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.Obsolete.cs"];
m32_39 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Job.Obsolete.cs"];
m32_30 [label="Entry Hangfire.Common.Job.InvokeMethod(object, object[])", span="139-139", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.Obsolete.cs"];
m32_71 [label="return Method.Invoke(instance, deserializedArguments);", span="143-143", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_72 [label=TargetInvocationException, span="145-145", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_73 [label="ex.InnerException is OperationCanceledException", span="147-147", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_74 [label="throw ex.InnerException;", span="152-152", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", color=red, community=0, file="Job.Obsolete.cs"];
m32_75 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="155-157", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", color=red, community=1, file="Job.Obsolete.cs"];
m32_76 [label="Exit Hangfire.Common.Job.InvokeMethod(object, object[])", span="139-139", cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.Obsolete.cs"];
m32_67 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="Job.Obsolete.cs"];
m32_77 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="Job.Obsolete.cs"];
m32_70 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="Job.Obsolete.cs"];
m32_38 [label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="44-44", cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="Job.Obsolete.cs"];
m32_64 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="Job.Obsolete.cs"];
m32_66 [label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46", cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="Job.Obsolete.cs"];
m32_69 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="Job.Obsolete.cs"];
m32_41 [label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="Job.Obsolete.cs"];
m32_78 [label="Entry Hangfire.Common.Job.Dispose(object)", span="162-162", cluster="Hangfire.Common.Job.Dispose(object)", file="Job.Obsolete.cs"];
m32_79 [label="var disposable = instance as IDisposable", span="166-166", cluster="Hangfire.Common.Job.Dispose(object)", color=red, community=0, file="Job.Obsolete.cs"];
m32_80 [label="disposable != null", span="167-167", cluster="Hangfire.Common.Job.Dispose(object)", color=red, community=0, file="Job.Obsolete.cs"];
m32_81 [label="disposable.Dispose()", span="169-169", cluster="Hangfire.Common.Job.Dispose(object)", color=red, community=0, file="Job.Obsolete.cs"];
m32_82 [label=Exception, span="172-172", cluster="Hangfire.Common.Job.Dispose(object)", color=red, community=0, file="Job.Obsolete.cs"];
m32_83 [label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="174-176", cluster="Hangfire.Common.Job.Dispose(object)", color=red, community=1, file="Job.Obsolete.cs"];
m32_84 [label="Exit Hangfire.Common.Job.Dispose(object)", span="162-162", cluster="Hangfire.Common.Job.Dispose(object)", file="Job.Obsolete.cs"];
m32_68 [label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="Job.Obsolete.cs"];
m32_63 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="Job.Obsolete.cs"];
m32_85 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="Job.Obsolete.cs"];
m32_13 [label="Entry Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", span="302-302", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.Obsolete.cs"];
m32_86 [label="Hangfire.Common.Job", span="", file="Job.Obsolete.cs"];
m34_37 [label="Entry HangFire.SqlServer.MessageQueueFetchedJob.MessageQueueFetchedJob(MessageQueueTransaction, string)", span="27-27", cluster="HangFire.SqlServer.MessageQueueFetchedJob.MessageQueueFetchedJob(MessageQueueTransaction, string)", file="JobDetailsPage1.generated.cs"];
m34_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobDetailsPage1.generated.cs"];
m34_33 [label="Entry Unk.Receive", span="", cluster="Unk.Receive", file="JobDetailsPage1.generated.cs"];
m34_7 [label="Entry BinaryMessageFormatter.cstr", span="", cluster="BinaryMessageFormatter.cstr", file="JobDetailsPage1.generated.cs"];
m34_31 [label="Entry HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", span="102-102", cluster="HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_53 [label="var queuePath = String.Format(_pathPattern, queue)", span="104-104", cluster="HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_54 [label="return new MessageQueue(queuePath);", span="106-106", cluster="HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_55 [label="Exit HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", span="102-102", cluster="HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_56 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobDetailsPage1.generated.cs"];
m34_32 [label="Entry Unk.Begin", span="", cluster="Unk.Begin", file="JobDetailsPage1.generated.cs"];
m34_8 [label="Entry HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="41-41", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_9 [label="string jobId = null", span="43-43", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_12 [label="cancellationToken.ThrowIfCancellationRequested()", span="49-49", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_13 [label="queueIndex = (queueIndex + 1) % queues.Length", span="51-51", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_14 [label="var queueName = queues[queueIndex]", span="52-52", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_10 [label="MessageQueueTransaction transaction", span="44-44", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_11 [label="var queueIndex = 0", span="45-45", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_18 [label="var message = queueIndex == 0\r\n                            ? messageQueue.Receive(SyncReceiveTimeout, transaction)\r\n                            : messageQueue.Receive(new TimeSpan(1), transaction)", span="62-64", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_15 [label="transaction = new MessageQueueTransaction()", span="54-54", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_16 [label="var messageQueue = GetMessageQueue(queueName)", span="56-56", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_17 [label="transaction.Begin()", span="60-60", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_22 [label="transaction.Abort()", span="73-73", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_23 [label="transaction.Dispose()", span="74-74", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_27 [label="return new MessageQueueFetchedJob(transaction, jobId);", span="84-84", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_19 [label="message.Formatter = _formatter", span="66-66", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_20 [label="jobId = (string)message.Body", span="68-68", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_21 [label=MessageQueueException, span="71-71", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_26 [label="jobId == null", span="82-82", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_24 [label="ex.MessageQueueErrorCode != MessageQueueErrorCode.IOTimeout", span="76-76", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_25 [label="throw;", span="78-78", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_28 [label="Exit HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="41-41", cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs"];
m34_38 [label="Entry HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="87-87", cluster="HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="JobDetailsPage1.generated.cs"];
m34_39 [label="actions.Enqueue(x =>\r\n            {\r\n                using (var messageQueue = GetMessageQueue(queue))\r\n                using (var message = new Message { Body = jobId, Label = jobId, Formatter = _formatter })\r\n                using (var transaction = new MessageQueueTransaction())\r\n                {\r\n                    transaction.Begin();\r\n                    messageQueue.Send(message, transaction);\r\n                    transaction.Commit();\r\n                }\r\n            })", span="89-99", cluster="HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="JobDetailsPage1.generated.cs"];
m34_40 [label="Exit HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="87-87", cluster="HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="JobDetailsPage1.generated.cs"];
m34_41 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="JobDetailsPage1.generated.cs"];
m34_29 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobDetailsPage1.generated.cs"];
m34_36 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="JobDetailsPage1.generated.cs"];
m34_50 [label="Entry Message.cstr", span="", cluster="Message.cstr", file="JobDetailsPage1.generated.cs"];
m34_42 [label="Entry lambda expression", span="89-99", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m34_43 [label="var messageQueue = GetMessageQueue(queue)", span="91-91", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m34_44 [label="var message = new Message { Body = jobId, Label = jobId, Formatter = _formatter }", span="92-92", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m34_47 [label="messageQueue.Send(message, transaction)", span="96-96", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m34_45 [label="var transaction = new MessageQueueTransaction()", span="93-93", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m34_46 [label="transaction.Begin()", span="95-95", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m34_48 [label="transaction.Commit()", span="97-97", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m34_49 [label="Exit lambda expression", span="89-99", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m34_0 [label="Entry HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", span="33-33", cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_1 [label="pathPattern == null", span="35-35", cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_3 [label="_pathPattern = pathPattern", span="37-37", cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_2 [label="throw new ArgumentNullException(''pathPattern'');", span="35-35", cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_4 [label="_formatter = new BinaryMessageFormatter()", span="38-38", cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_5 [label="Exit HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", span="33-33", cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs"];
m34_57 [label="Entry MessageQueue.cstr", span="", cluster="MessageQueue.cstr", file="JobDetailsPage1.generated.cs"];
m34_51 [label="Entry Unk.Send", span="", cluster="Unk.Send", file="JobDetailsPage1.generated.cs"];
m34_34 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)", file="JobDetailsPage1.generated.cs"];
m34_52 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="JobDetailsPage1.generated.cs"];
m34_30 [label="Entry MessageQueueTransaction.cstr", span="", cluster="MessageQueueTransaction.cstr", file="JobDetailsPage1.generated.cs"];
m34_35 [label="Entry Unk.Abort", span="", cluster="Unk.Abort", file="JobDetailsPage1.generated.cs"];
m34_58 [label="HangFire.SqlServer.MessageQueueJobQueue", span="", file="JobDetailsPage1.generated.cs"];
m34_59 [label=string, span="", file="JobDetailsPage1.generated.cs"];
m34_60 [label=string, span="", file="JobDetailsPage1.generated.cs"];
m37_0 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobLoadException.cs"];
m37_1 [label="Exit Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobLoadException.cs"];
m39_0 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="MoreEnumerable.Pairwise.cs"];
m39_1 [label="MaxRetryAttempts = 10", span="26-26", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=red, community=0, file="MoreEnumerable.Pairwise.cs"];
m39_2 [label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="27-27", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=red, community=0, file="MoreEnumerable.Pairwise.cs"];
m39_3 [label="LowerLogVerbosity = false", span="28-28", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=red, community=0, file="MoreEnumerable.Pairwise.cs"];
m39_4 [label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="MoreEnumerable.Pairwise.cs"];
m39_5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="MoreEnumerable.Pairwise.cs"];
m39_6 [label="HangFire.Server.ServerComponentRunnerOptions", span="", file="MoreEnumerable.Pairwise.cs"];
m40_10 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="MsmqDtcTransaction.cs"];
m40_18 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", file="MsmqDtcTransaction.cs"];
m40_19 [label="_scope.Complete()", span="53-53", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", color=red, community=0, file="MsmqDtcTransaction.cs"];
m40_20 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", file="MsmqDtcTransaction.cs"];
m40_0 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="MsmqDtcTransaction.cs"];
m40_1 [label="_scope = new TransactionScope()", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", color=red, community=0, file="MsmqDtcTransaction.cs"];
m40_2 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="MsmqDtcTransaction.cs"];
m40_17 [label="Entry Unk.Receive", span="", cluster="Unk.Receive", file="MsmqDtcTransaction.cs"];
m40_11 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="MsmqDtcTransaction.cs"];
m40_12 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", span="43-43", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="MsmqDtcTransaction.cs"];
m40_13 [label="var message = queue.Receive(timeout, MessageQueueTransactionType.Automatic)", span="45-45", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", color=red, community=0, file="MsmqDtcTransaction.cs"];
m40_14 [label="_suppressedScope = new TransactionScope(TransactionScopeOption.Suppress)", span="46-46", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", color=red, community=0, file="MsmqDtcTransaction.cs"];
m40_15 [label="return message;", span="48-48", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", color=red, community=0, file="MsmqDtcTransaction.cs"];
m40_16 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", span="43-43", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="MsmqDtcTransaction.cs"];
m40_21 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Abort()", span="56-56", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Abort()", file="MsmqDtcTransaction.cs"];
m40_22 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Abort()", span="56-56", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Abort()", file="MsmqDtcTransaction.cs"];
m40_3 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="MsmqDtcTransaction.cs"];
m40_4 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="MsmqDtcTransaction.cs"];
m40_5 [label="_suppressedScope != null", span="34-34", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=red, community=0, file="MsmqDtcTransaction.cs"];
m40_6 [label="_suppressedScope.Complete()", span="36-36", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=red, community=0, file="MsmqDtcTransaction.cs"];
m40_8 [label="_scope.Dispose()", span="40-40", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=red, community=0, file="MsmqDtcTransaction.cs"];
m40_7 [label="_suppressedScope.Dispose()", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=red, community=0, file="MsmqDtcTransaction.cs"];
m40_9 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="MsmqDtcTransaction.cs"];
m40_23 [label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction", span="", file="MsmqDtcTransaction.cs"];
m41_15 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueFacts.cs"];
m41_37 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="56-56", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m41_38 [label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="58-58", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m41_39 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="59-59", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_40 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="61-61", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m41_41 [label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="63-63", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m41_42 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="56-56", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m41_34 [label="Entry Unk.Receive", span="", cluster="Unk.Receive", file="MsmqJobQueueFacts.cs"];
m41_44 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="MsmqJobQueueFacts.cs"];
m41_60 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="88-88", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m41_61 [label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="91-91", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m41_62 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="92-92", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_63 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="95-95", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m41_64 [label="Assert.NotNull(fetchedJob)", span="98-98", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m41_65 [label="var exception = Assert.Throws<MessageQueueException>(\r\n                () => MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1)))", span="100-101", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m41_66 [label="Assert.Equal(MessageQueueErrorCode.IOTimeout, exception.MessageQueueErrorCode)", span="103-103", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m41_67 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="88-88", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m41_35 [label="Entry BinaryMessageFormatter.cstr", span="", cluster="BinaryMessageFormatter.cstr", file="MsmqJobQueueFacts.cs"];
m41_11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="MsmqJobQueueFacts.cs"];
m41_4 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="MsmqJobQueueFacts.cs"];
m41_73 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="107-107", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m41_74 [label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="110-110", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m41_75 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="111-111", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_76 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="114-114", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m41_77 [label="fetchedJob.RemoveFromQueue()", span="116-116", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m41_78 [label="var exception = Assert.Throws<MessageQueueException>(\r\n                () => MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5)))", span="120-121", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m41_79 [label="Assert.Equal(MessageQueueErrorCode.IOTimeout, exception.MessageQueueErrorCode)", span="123-123", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m41_80 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="107-107", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m41_32 [label="Entry Unk.Begin", span="", cluster="Unk.Begin", file="MsmqJobQueueFacts.cs"];
m41_43 [label="Entry Hangfire.Msmq.Tests.MsmqUtils.EnqueueJobId(string, string)", span="7-7", cluster="Hangfire.Msmq.Tests.MsmqUtils.EnqueueJobId(string, string)", file="MsmqJobQueueFacts.cs"];
m41_5 [label="Entry Mock<IDbConnection>.cstr", span="", cluster="Mock<IDbConnection>.cstr", file="MsmqJobQueueFacts.cs"];
m41_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="MsmqJobQueueFacts.cs"];
m41_33 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="MsmqJobQueueFacts.cs"];
m41_29 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="MsmqJobQueueFacts.cs"];
m41_0 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", span="15-15", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", file="MsmqJobQueueFacts.cs"];
m41_1 [label="_token = new CancellationToken()", span="17-17", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", file="MsmqJobQueueFacts.cs"];
m41_2 [label="_connection = new Mock<IDbConnection>()", span="18-18", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_3 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", span="15-15", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", file="MsmqJobQueueFacts.cs"];
m41_16 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", span="31-31", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_17 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="34-34", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_18 [label="queue.Enqueue(_connection.Object, ''my-queue'', ''job-id'')", span="37-37", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_19 [label="var messageQueue = CleanMsmqQueueAttribute.GetMessageQueue(''my-queue'')", span="40-40", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_20 [label="var transaction = new MessageQueueTransaction()", span="41-41", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_22 [label="var message = messageQueue.Receive(TimeSpan.FromSeconds(5), transaction)", span="45-45", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_21 [label="transaction.Begin()", span="43-43", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_26 [label="transaction.Commit()", span="51-51", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_23 [label="message.Formatter = new BinaryMessageFormatter()", span="46-46", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_24 [label="Assert.Equal(''job-id'', message.Body)", span="48-48", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_25 [label="Assert.Equal(''job-id'', message.Label)", span="49-49", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_27 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", span="31-31", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m41_68 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="MsmqJobQueueFacts.cs"];
m41_81 [label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24", cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="MsmqJobQueueFacts.cs"];
m41_30 [label="Entry Hangfire.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", span="45-45", cluster="Hangfire.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", file="MsmqJobQueueFacts.cs"];
m41_82 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_12 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_13 [label="new MsmqJobQueue(null, MsmqTransactionType.Internal)", span="25-25", cluster="lambda expression", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_14 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_52 [label="queue.Dequeue(new[] { ''my-queue'' }, token)", span="73-73", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_51 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_53 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_69 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_70 [label="MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1))", span="101-101", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_71 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_83 [label="MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5))", span="121-121", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_84 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m41_72 [label="Entry Hangfire.Msmq.Tests.MsmqUtils.DequeueJobId(string, System.TimeSpan)", span="19-19", cluster="Hangfire.Msmq.Tests.MsmqUtils.DequeueJobId(string, System.TimeSpan)", file="MsmqJobQueueFacts.cs"];
m41_50 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="MsmqJobQueueFacts.cs"];
m41_45 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="67-67", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs"];
m41_46 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="69-69", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_47 [label="var token = new CancellationToken(true)", span="70-70", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs"];
m41_48 [label="Assert.Throws<OperationCanceledException>(\r\n                () => queue.Dequeue(new[] { ''my-queue'' }, token))", span="72-73", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs"];
m41_49 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="67-67", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs"];
m41_36 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="MsmqJobQueueFacts.cs"];
m41_6 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", span="22-22", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs"];
m41_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new MsmqJobQueue(null, MsmqTransactionType.Internal))", span="24-25", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_8 [label="Assert.Equal(''pathPattern'', exception.ParamName)", span="27-27", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs"];
m41_9 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", span="22-22", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs"];
m41_85 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="127-127", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m41_86 [label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="130-130", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m41_87 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="131-131", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_88 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="134-134", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m41_89 [label="fetchedJob.Dispose()", span="135-135", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m41_90 [label="var jobId = MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5))", span="138-138", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m41_91 [label="Assert.Equal(''job-id'', jobId)", span="139-139", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m41_92 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="127-127", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m41_28 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="142-142", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueFacts.cs"];
m41_94 [label="return new MsmqJobQueue(CleanMsmqQueueAttribute.PathPattern, transactionType);", span="144-144", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_95 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="142-142", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueFacts.cs"];
m41_31 [label="Entry MessageQueueTransaction.cstr", span="", cluster="MessageQueueTransaction.cstr", file="MsmqJobQueueFacts.cs"];
m41_93 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="MsmqJobQueueFacts.cs"];
m41_54 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="77-77", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m41_55 [label="MsmqUtils.EnqueueJobId(''queue-2'', ''job-id'')", span="79-79", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m41_56 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="80-80", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", color=red, community=0, file="MsmqJobQueueFacts.cs"];
m41_57 [label="var fetchedJob = queue.Dequeue(new[] { ''queue-1'', ''queue-2'' }, _token)", span="82-82", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m41_58 [label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="84-84", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m41_59 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="77-77", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m41_96 [label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts", span="", file="MsmqJobQueueFacts.cs"];
m41_97 [label=queue, span="", file="MsmqJobQueueFacts.cs"];
m41_98 [label=token, span="", file="MsmqJobQueueFacts.cs"];
m42_31 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="MsmqJobQueueProviderFacts.cs"];
m42_24 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="39-39", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs"];
m42_25 [label="var context = new BackgroundProcessContext(_serverId, _storage.Object, _cts.Token)", span="41-41", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs"];
m42_26 [label="Assert.Equal(_serverId, context.ServerId)", span="43-43", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs"];
m42_28 [label="Assert.Same(_storage.Object, context.Storage)", span="45-45", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs"];
m42_29 [label="Assert.Equal(_cts.Token, context.CancellationToken)", span="46-46", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs"];
m42_27 [label="Assert.NotNull(context.ServerData)", span="44-44", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs"];
m42_30 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="39-39", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs"];
m42_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="MsmqJobQueueProviderFacts.cs"];
m42_16 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="MsmqJobQueueProviderFacts.cs"];
m42_17 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(_serverId, null, _cts.Token))", span="32-33", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="MsmqJobQueueProviderFacts.cs"];
m42_18 [label="Assert.Equal(''storage'', exception.ParamName)", span="35-35", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="MsmqJobQueueProviderFacts.cs"];
m42_19 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="MsmqJobQueueProviderFacts.cs"];
m42_23 [label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="MsmqJobQueueProviderFacts.cs"];
m42_32 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="MsmqJobQueueProviderFacts.cs"];
m42_0 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="MsmqJobQueueProviderFacts.cs"];
m42_1 [label="_storage = new Mock<JobStorage>()", span="16-16", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="MsmqJobQueueProviderFacts.cs"];
m42_2 [label="_cts = new CancellationTokenSource()", span="17-17", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="MsmqJobQueueProviderFacts.cs"];
m42_3 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="MsmqJobQueueProviderFacts.cs"];
m42_15 [label="Entry BackgroundProcessContext.cstr", span="", cluster="BackgroundProcessContext.cstr", file="MsmqJobQueueProviderFacts.cs"];
m42_11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="MsmqJobQueueProviderFacts.cs"];
m42_5 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="MsmqJobQueueProviderFacts.cs"];
m42_4 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="MsmqJobQueueProviderFacts.cs"];
m42_20 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="MsmqJobQueueProviderFacts.cs"];
m42_12 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="MsmqJobQueueProviderFacts.cs"];
m42_13 [label="new BackgroundProcessContext(null, _storage.Object, _cts.Token)", span="24-24", cluster="lambda expression", color=green, community=0, file="MsmqJobQueueProviderFacts.cs"];
m42_14 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="MsmqJobQueueProviderFacts.cs"];
m42_21 [label="new BackgroundProcessContext(_serverId, null, _cts.Token)", span="33-33", cluster="lambda expression", color=green, community=0, file="MsmqJobQueueProviderFacts.cs"];
m42_22 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="MsmqJobQueueProviderFacts.cs"];
m42_6 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="21-21", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="MsmqJobQueueProviderFacts.cs"];
m42_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(null, _storage.Object, _cts.Token))", span="23-24", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="MsmqJobQueueProviderFacts.cs"];
m42_8 [label="Assert.Equal(''serverId'', exception.ParamName)", span="26-26", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="MsmqJobQueueProviderFacts.cs"];
m42_9 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="21-21", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="MsmqJobQueueProviderFacts.cs"];
m42_33 [label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", span="", file="MsmqJobQueueProviderFacts.cs"];
m44_8 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="22-22", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PerformContextFacts.cs"];
m44_9 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(null, _backgroundJob.Object, _cancellationToken.Object))", span="24-25", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="PerformContextFacts.cs"];
m44_10 [label="Assert.Equal(''connection'', exception.ParamName)", span="27-27", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PerformContextFacts.cs"];
m44_11 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="22-22", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PerformContextFacts.cs"];
m44_65 [label="Entry Hangfire.Server.PerformContext.SetJobParameter(string, object)", span="76-76", cluster="Hangfire.Server.PerformContext.SetJobParameter(string, object)", file="PerformContextFacts.cs"];
m44_25 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", span="40-40", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="PerformContextFacts.cs"];
m44_26 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_connection.Object, _backgroundJob.Object, null))", span="42-43", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", color=red, community=0, file="PerformContextFacts.cs"];
m44_27 [label="Assert.Equal(''cancellationToken'', exception.ParamName)", span="45-45", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="PerformContextFacts.cs", color=green, community=0];
m44_28 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", span="40-40", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="PerformContextFacts.cs"];
m44_41 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="PerformContextFacts.cs"];
m44_13 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="PerformContextFacts.cs"];
m44_76 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="100-100", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs"];
m44_77 [label="var context = CreateContext()", span="102-102", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs"];
m44_78 [label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<string>(null))", span="104-105", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs"];
m44_79 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="100-100", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs"];
m44_57 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="79-79", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs"];
m44_58 [label="var context = CreateContext()", span="81-81", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs"];
m44_59 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="83-84", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs"];
m44_60 [label="Assert.Equal(''name'', exception.ParamName)", span="86-86", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs"];
m44_61 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="79-79", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs"];
m44_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="PerformContextFacts.cs"];
m44_100 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Method()", span="124-124", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Method()", file="PerformContextFacts.cs"];
m44_101 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Method()", span="124-124", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Method()", file="PerformContextFacts.cs"];
m44_39 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="118-118", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="PerformContextFacts.cs"];
m44_98 [label="return new PerformContext(\r\n                _connection.Object, _backgroundJob.Object, _cancellationToken.Object);", span="120-121", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", color=red, community=1, file="PerformContextFacts.cs"];
m44_99 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="118-118", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="PerformContextFacts.cs"];
m44_6 [label="Entry Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", span="9-9", cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="PerformContextFacts.cs"];
m44_49 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="67-67", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs"];
m44_50 [label="var context = CreateContext()", span="69-69", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs"];
m44_51 [label="var contextCopy = new PerformContext(context)", span="70-70", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs"];
m44_52 [label="Assert.Same(context.Items, contextCopy.Items)", span="72-72", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs"];
m44_53 [label="Assert.Same(context.Connection, contextCopy.Connection)", span="73-73", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs"];
m44_54 [label="Assert.Same(context.BackgroundJob, contextCopy.BackgroundJob)", span="74-74", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", color=red, community=0, file="PerformContextFacts.cs"];
m44_55 [label="Assert.Same(context.CancellationToken, contextCopy.CancellationToken)", span="75-75", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs"];
m44_56 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="67-67", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs"];
m44_40 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="PerformContextFacts.cs"];
m44_83 [label="Entry Hangfire.Server.PerformContext.GetJobParameter<T>(string)", span="83-83", cluster="Hangfire.Server.PerformContext.GetJobParameter<T>(string)", file="PerformContextFacts.cs"];
m44_94 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="PerformContextFacts.cs"];
m44_42 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="60-60", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="PerformContextFacts.cs"];
m44_43 [label="Assert.Throws<NullReferenceException>(\r\n                () => new PerformContext(null))", span="62-63", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="PerformContextFacts.cs"];
m44_44 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="60-60", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="PerformContextFacts.cs"];
m44_89 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="PerformContextFacts.cs"];
m44_48 [label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.PerformContext)", span="30-30", cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.PerformContext)", file="PerformContextFacts.cs"];
m44_95 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_14 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_15 [label="new PerformContext(null, _backgroundJob.Object, _cancellationToken.Object)", span="25-25", cluster="lambda expression", color=red, community=0, file="PerformContextFacts.cs"];
m44_16 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_22 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_23 [label="new PerformContext(_connection.Object, null, _cancellationToken.Object)", span="34-34", cluster="lambda expression", color=green, community=0, file="PerformContextFacts.cs"];
m44_24 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_29 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_30 [label="new PerformContext(_connection.Object, _backgroundJob.Object, null)", span="43-43", cluster="lambda expression", color=red, community=0, file="PerformContextFacts.cs"];
m44_31 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_45 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_46 [label="new PerformContext(null)", span="63-63", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_47 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_63 [label="context.SetJobParameter(null, null)", span="84-84", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_62 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_64 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_72 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_73 [label="x.SetJobParameter(_backgroundJob.Id, ''name'', ''\''value\'''')", span="96-96", cluster="lambda expression", color=green, community=0, file="PerformContextFacts.cs"];
m44_74 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_81 [label="context.GetJobParameter<string>(null)", span="105-105", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_80 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_82 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_91 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_96 [label="context.GetJobParameter<int>(''name'')", span="115-115", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_92 [label="x.GetJobParameter(_backgroundJob.Id, ''name'')", span="111-111", cluster="lambda expression", color=red, community=0, file="PerformContextFacts.cs"];
m44_93 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_97 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="PerformContextFacts.cs"];
m44_71 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="PerformContextFacts.cs"];
m44_7 [label="Entry Mock<IJobCancellationToken>.cstr", span="", cluster="Mock<IJobCancellationToken>.cstr", file="PerformContextFacts.cs"];
m44_32 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="49-49", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs"];
m44_33 [label="var context = CreateContext()", span="51-51", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", color=green, community=0];
m44_34 [label="Assert.Equal(_backgroundJob.Object, context.BackgroundJob)", span="53-53", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="PerformContextFacts.cs"];
m44_35 [label="Assert.NotNull(context.Items)", span="54-54", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", color=green, community=0];
m44_36 [label="Assert.Same(_connection.Object, context.Connection)", span="55-55", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs"];
m44_37 [label="Assert.Same(_cancellationToken.Object, context.CancellationToken)", span="56-56", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs"];
m44_38 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="49-49", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs"];
m44_66 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="90-90", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs"];
m44_67 [label="var context = CreateContext()", span="92-92", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs"];
m44_68 [label="context.SetJobParameter(''name'', ''value'')", span="94-94", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs"];
m44_69 [label="_connection.Verify(x => x.SetJobParameter(_backgroundJob.Id, ''name'', ''\''value\''''))", span="96-96", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", color=green, community=0, file="PerformContextFacts.cs"];
m44_70 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="90-90", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs"];
m44_0 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs"];
m44_1 [label="_connection = new Mock<IStorageConnection>()", span="16-16", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs", color=green, community=0];
m44_2 [label="_backgroundJob = new BackgroundJobMock()", span="17-17", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", color=green, community=0, file="PerformContextFacts.cs"];
m44_3 [label="_cancellationToken = new Mock<IJobCancellationToken>()", span="18-18", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs"];
m44_4 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs"];
m44_90 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="PerformContextFacts.cs"];
m44_84 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="109-109", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs"];
m44_85 [label="_connection.Setup(x => x.GetJobParameter(_backgroundJob.Id, ''name'')).Returns(''value'')", span="111-111", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", color=red, community=0, file="PerformContextFacts.cs"];
m44_86 [label="var context = CreateContext()", span="112-112", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs"];
m44_87 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="114-115", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs"];
m44_88 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="109-109", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs"];
m44_5 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="PerformContextFacts.cs"];
m44_75 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="PerformContextFacts.cs"];
m44_18 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", span="31-31", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="PerformContextFacts.cs"];
m44_19 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_connection.Object, null, _cancellationToken.Object))", span="33-34", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", color=green, community=0, file="PerformContextFacts.cs"];
m44_20 [label="Assert.Equal(''backgroundJob'', exception.ParamName)", span="36-36", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", color=red, community=0, file="PerformContextFacts.cs"];
m44_21 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", span="31-31", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="PerformContextFacts.cs"];
m44_17 [label="Entry PerformContext.cstr", span="", cluster="PerformContext.cstr", file="PerformContextFacts.cs"];
m44_102 [label="Hangfire.Core.Tests.Server.PerformContextFacts", span="", file="PerformContextFacts.cs"];
m44_103 [label=context, span="", file="PerformContextFacts.cs"];
m44_104 [label=context, span="", file="PerformContextFacts.cs"];
m44_105 [label=context, span="", file="PerformContextFacts.cs"];
m45_54 [label="Entry HangFire.Web.JobMethodCallRenderer.Encode(string)", span="147-147", cluster="HangFire.Web.JobMethodCallRenderer.Encode(string)", file="PerformContextMock.cs"];
m45_84 [label="return HttpUtility.HtmlEncode(value);", span="149-149", cluster="HangFire.Web.JobMethodCallRenderer.Encode(string)", file="PerformContextMock.cs"];
m45_85 [label="Exit HangFire.Web.JobMethodCallRenderer.Encode(string)", span="147-147", cluster="HangFire.Web.JobMethodCallRenderer.Encode(string)", file="PerformContextMock.cs"];
m45_53 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="PerformContextMock.cs"];
m45_86 [label="Entry Unk.HtmlEncode", span="", cluster="Unk.HtmlEncode", file="PerformContextMock.cs"];
m45_106 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="PerformContextMock.cs"];
m45_71 [label="Entry HangFire.Web.JobMethodCallRenderer.Span(string, string)", span="139-139", cluster="HangFire.Web.JobMethodCallRenderer.Span(string, string)", file="PerformContextMock.cs"];
m45_80 [label="return String.Format(\r\n                ''<span class=\''{0}\''>{1}</span>'', \r\n                HttpUtility.HtmlAttributeEncode(@class), \r\n                value);", span="141-144", cluster="HangFire.Web.JobMethodCallRenderer.Span(string, string)", file="PerformContextMock.cs"];
m45_81 [label="Exit HangFire.Web.JobMethodCallRenderer.Span(string, string)", span="139-139", cluster="HangFire.Web.JobMethodCallRenderer.Span(string, string)", file="PerformContextMock.cs"];
m45_142 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="PerformContextMock.cs"];
m45_51 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="PerformContextMock.cs"];
m45_55 [label="Entry System.Text.StringBuilder.AppendLine()", span="0-0", cluster="System.Text.StringBuilder.AppendLine()", file="PerformContextMock.cs"];
m45_107 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="PerformContextMock.cs"];
m45_82 [label="Entry Unk.HtmlAttributeEncode", span="", cluster="Unk.HtmlAttributeEncode", file="PerformContextMock.cs"];
m45_65 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="PerformContextMock.cs"];
m45_50 [label="Entry HtmlString.cstr", span="", cluster="HtmlString.cstr", file="PerformContextMock.cs"];
m45_77 [label="Entry HangFire.Web.JobMethodCallRenderer.WrapComment(string)", span="134-134", cluster="HangFire.Web.JobMethodCallRenderer.WrapComment(string)", file="PerformContextMock.cs"];
m45_78 [label="return Span(''comment'', value);", span="136-136", cluster="HangFire.Web.JobMethodCallRenderer.WrapComment(string)", file="PerformContextMock.cs"];
m45_79 [label="Exit HangFire.Web.JobMethodCallRenderer.WrapComment(string)", span="134-134", cluster="HangFire.Web.JobMethodCallRenderer.WrapComment(string)", file="PerformContextMock.cs"];
m45_58 [label="Entry HangFire.Web.JobMethodCallRenderer.WrapType(string)", span="124-124", cluster="HangFire.Web.JobMethodCallRenderer.WrapType(string)", file="PerformContextMock.cs"];
m45_72 [label="return Span(''type'', value);", span="126-126", cluster="HangFire.Web.JobMethodCallRenderer.WrapType(string)", file="PerformContextMock.cs"];
m45_73 [label="Exit HangFire.Web.JobMethodCallRenderer.WrapType(string)", span="124-124", cluster="HangFire.Web.JobMethodCallRenderer.WrapType(string)", file="PerformContextMock.cs"];
m45_105 [label="Entry Unk.AppendFormat", span="", cluster="Unk.AppendFormat", file="PerformContextMock.cs"];
m45_118 [label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="243-243", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_119 [label="type == null", span="245-245", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_121 [label="Type.GetTypeCode(type)", span="247-247", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_135 [label="IsNullableType(type)", span="263-263", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_136 [label="return IsNumericType(Nullable.GetUnderlyingType(type));", span="265-265", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_120 [label="return false;", span="245-245", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_122 [label="TypeCode.Byte", span="249-249", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_134 [label="TypeCode.Object", span="262-262", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_123 [label="TypeCode.Decimal", span="250-250", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_124 [label="TypeCode.Double", span="251-251", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_125 [label="TypeCode.Int16", span="252-252", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_126 [label="TypeCode.Int32", span="253-253", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_127 [label="TypeCode.Int64", span="254-254", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_128 [label="TypeCode.SByte", span="255-255", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_129 [label="TypeCode.Single", span="256-256", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_130 [label="TypeCode.UInt16", span="257-257", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_131 [label="TypeCode.UInt32", span="258-258", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_132 [label="TypeCode.UInt64", span="259-259", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_133 [label="return true;", span="260-260", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_137 [label="return false;", span="267-267", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_138 [label="return false;", span="269-269", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_139 [label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="243-243", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs"];
m45_87 [label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="158-158", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="PerformContextMock.cs"];
m45_88 [label="_enclosingString = ''\''''", span="160-160", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="PerformContextMock.cs"];
m45_89 [label="_valueRenderer = WrapString", span="161-161", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="PerformContextMock.cs"];
m45_90 [label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="158-158", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="PerformContextMock.cs"];
m45_52 [label="Entry HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", span="119-119", cluster="HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", file="PerformContextMock.cs"];
m45_69 [label="return Span(''keyword'', value);", span="121-121", cluster="HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", file="PerformContextMock.cs"];
m45_70 [label="Exit HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", span="119-119", cluster="HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", file="PerformContextMock.cs"];
m45_74 [label="Entry HangFire.Web.JobMethodCallRenderer.WrapString(string)", span="129-129", cluster="HangFire.Web.JobMethodCallRenderer.WrapString(string)", file="PerformContextMock.cs"];
m45_75 [label="return Span(''string'', value);", span="131-131", cluster="HangFire.Web.JobMethodCallRenderer.WrapString(string)", file="PerformContextMock.cs"];
m45_76 [label="Exit HangFire.Web.JobMethodCallRenderer.WrapString(string)", span="129-129", cluster="HangFire.Web.JobMethodCallRenderer.WrapString(string)", file="PerformContextMock.cs"];
m45_0 [label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", span="26-26", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_1 [label="job == null", span="28-28", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", color=red, community=0, file="PerformContextMock.cs"];
m45_6 [label="builder.Append(Encode(job.Type.Namespace))", span="34-34", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", color=red, community=0, file="PerformContextMock.cs"];
m45_10 [label="!job.Method.IsStatic", span="39-39", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_11 [label="var serviceName = Char.ToLower(job.Type.Name[0]) + job.Type.Name.Substring(1)", span="41-41", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_12 [label="builder.Append(WrapType(job.Type.Name))", span="43-43", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_13 [label="builder.AppendFormat(\r\n                    '' {0} = Activate<{1}>();'',\r\n                    Encode(serviceName),\r\n                    WrapType(Encode(job.Type.Name)))", span="44-47", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_16 [label="builder.Append(WrapType(Encode(job.Type.Name)))", span="55-55", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_18 [label="builder.Append(Encode(job.Method.Name))", span="59-59", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_20 [label="var parameters = job.Method.GetParameters()", span="62-62", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_27 [label="i < job.Arguments.Length", span="72-72", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_28 [label="var argument = job.Arguments[i]", span="74-74", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_2 [label="return new HtmlString(''<em>Can not find the target method.</em>'');", span="28-28", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", color=red, community=0, file="PerformContextMock.cs"];
m45_3 [label="var builder = new StringBuilder()", span="30-30", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", color=red, community=0, file="PerformContextMock.cs"];
m45_4 [label="builder.Append(WrapKeyword(''using''))", span="32-32", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", color=red, community=0, file="PerformContextMock.cs"];
m45_5 [label="builder.Append('' '')", span="33-33", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", color=red, community=0, file="PerformContextMock.cs"];
m45_7 [label="builder.Append('';'')", span="35-35", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", color=red, community=0, file="PerformContextMock.cs"];
m45_8 [label="builder.AppendLine()", span="36-36", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_9 [label="builder.AppendLine()", span="37-37", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_14 [label="builder.AppendLine()", span="49-49", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_15 [label="builder.Append(Encode(serviceName))", span="51-51", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_17 [label="builder.Append(''.'')", span="58-58", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_19 [label="builder.Append(''('')", span="60-60", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_39 [label="builder.AppendLine()", span="93-93", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_40 [label="builder.Append(''    '')", span="94-94", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_42 [label="builder.Append('' '')", span="98-98", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_43 [label="builder.Append(renderedArgument)", span="101-101", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_45 [label="builder.Append('','')", span="105-105", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_47 [label="builder.Append('');'')", span="109-109", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_48 [label="return new HtmlString(builder.ToString());", span="111-111", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_21 [label="var renderedArguments = new List<string>(parameters.Length)", span="63-63", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_25 [label="i < parameters.Length", span="68-68", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_26 [label="var parameter = parameters[i]", span="70-70", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_22 [label="var renderedArgumentsTotalLength = 0", span="64-64", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_31 [label="renderedArguments.Add(renderedArgument)", span="79-79", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_33 [label="renderedArguments.Add(Encode(''<NO VALUE>''))", span="84-84", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_36 [label="i < renderedArguments.Count", span="88-88", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_37 [label="var renderedArgument = renderedArguments[i]", span="90-90", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_44 [label="i < renderedArguments.Count - 1", span="103-103", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_23 [label="int splitStringMinLength = 200", span="66-66", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_32 [label="renderedArgumentsTotalLength += renderedArgument.Length", span="80-80", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_38 [label="renderedArgumentsTotalLength > splitStringMinLength", span="91-91", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_24 [label="var i = 0", span="68-68", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_34 [label="i++", span="68-68", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_35 [label="int i = 0", span="88-88", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_29 [label="var argumentRenderer = ArgumentRenderer.GetRenderer(parameter.ParameterType)", span="76-76", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_30 [label="var renderedArgument = argumentRenderer.Render(parameter.Name, argument)", span="78-78", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_41 [label="i > 0", span="96-96", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_46 [label="i++", span="88-88", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_49 [label="Exit HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", span="26-26", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs"];
m45_66 [label="Entry HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", span="114-114", cluster="HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", file="PerformContextMock.cs"];
m45_67 [label="return value;", span="116-116", cluster="HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", file="PerformContextMock.cs"];
m45_68 [label="Exit HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", span="114-114", cluster="HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", file="PerformContextMock.cs"];
m45_141 [label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="272-272", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="PerformContextMock.cs"];
m45_143 [label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="274-274", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="PerformContextMock.cs"];
m45_144 [label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="272-272", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="PerformContextMock.cs"];
m45_56 [label="Entry char.ToLower(char)", span="0-0", cluster="char.ToLower(char)", file="PerformContextMock.cs"];
m45_61 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="PerformContextMock.cs"];
m45_64 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="PerformContextMock.cs"];
m45_62 [label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="201-201", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_108 [label="IsNumericType(type)", span="203-203", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_110 [label="type == typeof(bool)", span="212-212", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_112 [label="type == typeof(char)", span="221-221", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_114 [label="type == typeof(string) || type == typeof(object)", span="229-229", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_116 [label="return new ArgumentRenderer\r\n                {\r\n                    _deserializationType = type,\r\n                };", span="237-240", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_109 [label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = String.Empty,\r\n                        _valueRenderer = WrapIdentifier\r\n                    };", span="205-209", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_111 [label="return new ArgumentRenderer\r\n                    {\r\n                        _valueRenderer = WrapKeyword,\r\n                        _enclosingString = String.Empty,\r\n                    };", span="214-218", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_113 [label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''''',\r\n                    };", span="223-226", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_115 [label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''\'''',\r\n                    };", span="231-234", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_117 [label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="201-201", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs"];
m45_83 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="PerformContextMock.cs"];
m45_145 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="PerformContextMock.cs"];
m45_63 [label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", span="164-164", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_91 [label="value == null", span="166-166", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_94 [label="name != null", span="173-173", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_95 [label="builder.AppendFormat(\r\n                        ''<span title=\''{0}:\'' data-placement=\''left\''>'', \r\n                        HttpUtility.HtmlAttributeEncode(name))", span="175-177", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_98 [label="builder.Append(_valueRenderer(Encode(_enclosingString + value + _enclosingString)))", span="186-186", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_101 [label="name != null", span="193-193", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_92 [label="return WrapKeyword(''null'');", span="168-168", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_93 [label="var builder = new StringBuilder()", span="171-171", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_97 [label="builder.Append(WrapIdentifier(\r\n                        String.Format(''Deserialize<{0}>('', WrapType(_deserializationType.Name))))", span="182-183", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_100 [label="builder.Append('')'')", span="190-190", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_102 [label="builder.Append(''</span>'')", span="195-195", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_103 [label="return builder.ToString();", span="198-198", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_96 [label="_deserializationType != null", span="180-180", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_99 [label="_deserializationType != null", span="188-188", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_104 [label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", span="164-164", cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs"];
m45_60 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="PerformContextMock.cs"];
m45_140 [label="Entry System.Type.GetTypeCode(System.Type)", span="0-0", cluster="System.Type.GetTypeCode(System.Type)", file="PerformContextMock.cs"];
m45_59 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="PerformContextMock.cs"];
m45_57 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="PerformContextMock.cs"];
m45_146 [label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", span="", file="PerformContextMock.cs"];
m46_10 [label="var job = Job.FromExpression(() => TestMethod())", span="23-23", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs"];
m46_11 [label="var state = new Mock<IState>()", span="24-24", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs", color=green, community=0];
m46_20 [label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="42-42", cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="PreserveCultureAttributeFacts.cs"];
m46_19 [label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="41-41", cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="PreserveCultureAttributeFacts.cs"];
m46_0 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="PreserveCultureAttributeFacts.cs"];
m46_1 [label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="PreserveCultureAttributeFacts.cs"];
m46_2 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="28-28", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="PreserveCultureAttributeFacts.cs"];
m46_22 [label="Entry Unk.False", span="", cluster="Unk.False", file="PreserveCultureAttributeFacts.cs"];
m46_23 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m46_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="PreserveCultureAttributeFacts.cs"];
m46_14 [label="var context = new CreatingContext(createContext)", span="29-29", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs"];
m46_15 [label="Assert.False(context.Canceled)", span="31-31", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs", color=green, community=0];
m46_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m46_7 [label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="PreserveCultureAttributeFacts.cs"];
m46_26 [label="Entry Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="PreserveCultureAttributeFacts.cs"];
m46_27 [label="Exit Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="PreserveCultureAttributeFacts.cs"];
m46_18 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="PreserveCultureAttributeFacts.cs"];
m46_8 [label="Entry Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs"];
m46_9 [label="var connection = new Mock<IStorageConnection>()", span="22-22", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs"];
m46_12 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs"];
m46_13 [label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="27-28", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs", color=green, community=0];
m46_4 [label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs"];
m46_25 [label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="44-44", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="PreserveCultureAttributeFacts.cs"];
m46_24 [label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="44-44", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="PreserveCultureAttributeFacts.cs"];
m46_5 [label="Exit HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs"];
m46_21 [label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="42-42", cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="PreserveCultureAttributeFacts.cs"];
m46_16 [label="Entry HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="39-39", cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="PreserveCultureAttributeFacts.cs"];
m46_17 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="PreserveCultureAttributeFacts.cs"];
m47_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingState.cs"];
m47_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs"];
m47_13 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ProcessingState.cs"];
m47_9 [label="Entry Hangfire.States.ProcessingState.SerializeData()", span="127-127", cluster="Hangfire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m47_10 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.SerializeDateTime(StartedAt) },\r\n                { ''ServerId'', ServerId },\r\n                { ''WorkerId'', WorkerId }\r\n            };", span="129-134", cluster="Hangfire.States.ProcessingState.SerializeData()", color=red, community=0, file="ProcessingState.cs"];
m47_11 [label="Exit Hangfire.States.ProcessingState.SerializeData()", span="127-127", cluster="Hangfire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m47_7 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs"];
m47_0 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m47_1 [label="String.IsNullOrWhiteSpace(serverId)", span="41-41", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m47_3 [label="ServerId = serverId", span="43-43", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m47_5 [label="WorkerId = workerId", span="45-45", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", color=red, community=0, file="ProcessingState.cs"];
m47_2 [label="throw new ArgumentNullException(''serverId'');", span="41-41", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m47_4 [label="StartedAt = DateTime.UtcNow", span="44-44", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m47_6 [label="Exit Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m47_14 [label="Hangfire.States.ProcessingState", span="", file="ProcessingState.cs"];
m48_29 [label="Entry MessageQueue.cstr", span="", cluster="MessageQueue.cstr", file="ProcessingStateFacts.cs"];
m48_40 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="79-79", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ProcessingStateFacts.cs"];
m48_41 [label="var messageQueue = new MessageQueue(String.Format(_pathPattern, queue))", span="81-81", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ProcessingStateFacts.cs"];
m48_42 [label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = (int?)messageQueue.GetCount()\r\n                };", span="83-86", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ProcessingStateFacts.cs"];
m48_43 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="79-79", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ProcessingStateFacts.cs"];
m48_8 [label="HangFire.BackgroundJobServerOptions", span="", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingStateFacts.cs"];
m48_44 [label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18", cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", file="ProcessingStateFacts.cs"];
m48_28 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ProcessingStateFacts.cs"];
m48_9 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", span="38-38", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", file="ProcessingStateFacts.cs"];
m48_10 [label="return _queues;", span="40-40", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", file="ProcessingStateFacts.cs"];
m48_11 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", span="38-38", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", file="ProcessingStateFacts.cs"];
m48_35 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ProcessingStateFacts.cs"];
m48_36 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="74-74", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_37 [label="return Enumerable.Empty<int>();", span="76-76", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_38 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="74-74", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_31 [label="Entry Unk.GetMessageEnumerator2", span="", cluster="Unk.GetMessageEnumerator2", file="ProcessingStateFacts.cs"];
m48_32 [label="Entry BinaryMessageFormatter.cstr", span="", cluster="BinaryMessageFormatter.cstr", file="ProcessingStateFacts.cs"];
m48_0 [label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs"];
m48_1 [label="WorkerCount = Environment.ProcessorCount * 5", span="13-13", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs"];
m48_3 [label="Queues = new[] { EnqueuedState.DefaultQueue }", span="15-15", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs"];
m48_5 [label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="17-17", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs", color=green, community=0];
m48_6 [label="Exit HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs"];
m48_2 [label="ServerName = Environment.MachineName", span="14-14", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs"];
m48_4 [label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="16-16", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs"];
m48_7 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ProcessingStateFacts.cs"];
m48_34 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="ProcessingStateFacts.cs"];
m48_45 [label="Entry MessageQueue.GetCount()", span="87-87", cluster="MessageQueue.GetCount()", file="ProcessingStateFacts.cs"];
m48_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ProcessingStateFacts.cs"];
m48_39 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ProcessingStateFacts.cs"];
m48_33 [label="Entry Unk.MoveNext", span="", cluster="Unk.MoveNext", file="ProcessingStateFacts.cs"];
m48_12 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="43-43", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_13 [label="var result = new List<int>()", span="45-45", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_14 [label="var messageQueue = new MessageQueue(String.Format(_pathPattern, queue))", span="47-47", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_16 [label="var end = @from + perPage", span="50-50", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_20 [label="current >= @from && current < end", span="57-57", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_23 [label="result.Add(int.Parse((string)message.Body))", span="62-62", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_26 [label="return result;", span="71-71", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_15 [label="var current = 0", span="49-49", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_17 [label="var enumerator = messageQueue.GetMessageEnumerator2()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_24 [label="current >= end", span="65-65", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_25 [label="current++", span="67-67", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_18 [label="var formatter = new BinaryMessageFormatter()", span="53-53", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_19 [label="enumerator.MoveNext()", span="55-55", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_21 [label="var message = enumerator.Current", span="59-59", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_22 [label="message.Formatter = formatter", span="61-61", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_27 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="43-43", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs"];
m48_46 [label="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi", span="", file="ProcessingStateFacts.cs"];
m50_5 [label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m50_8 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="22-23", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", file="RabbitMqJobQueueProvider.cs", color=green, community=0];
m50_15 [label="Entry lambda expression", span="22-23", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m50_16 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="22-23", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs", color=green, community=0];
m50_17 [label="Exit lambda expression", span="22-23", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m50_19 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="RabbitMqJobQueueProvider.cs"];
m50_0 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", span="10-10", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs"];
m50_1 [label="transaction == null", span="12-12", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs"];
m50_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs"];
m50_6 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", span="17-17", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", file="RabbitMqJobQueueProvider.cs"];
m50_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs"];
m50_4 [label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", span="10-10", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs"];
m50_7 [label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="19-20", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", file="RabbitMqJobQueueProvider.cs"];
m50_10 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RabbitMqJobQueueProvider.cs"];
m50_12 [label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="19-20", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m50_13 [label="Exit lambda expression", span="19-20", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m50_14 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="RabbitMqJobQueueProvider.cs"];
m50_9 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="22-22", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m50_18 [label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span="", cluster="string.Format(string, object)", file="RabbitMqJobQueueProvider.cs"];
m50_11 [label="Entry lambda expression", span="19-20", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m50_20 [label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue", span="", file="RabbitMqJobQueueProvider.cs"];
m50_21 [label=string, span="", file="RabbitMqJobQueueProvider.cs"];
m50_22 [label=string, span="", file="RabbitMqJobQueueProvider.cs"];
m51_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobManager.cs"];
m51_11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManager.cs"];
m51_8 [label="Entry HangFire.States.ProcessingState.SerializeData()", span="41-41", cluster="HangFire.States.ProcessingState.SerializeData()", file="RecurringJobManager.cs"];
m51_9 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.ToStringTimestamp(StartedAt) },\r\n                { ''ServerName'', ServerName }\r\n            };", span="43-47", cluster="HangFire.States.ProcessingState.SerializeData()", color=red, community=0, file="RecurringJobManager.cs"];
m51_10 [label="Exit HangFire.States.ProcessingState.SerializeData()", span="41-41", cluster="HangFire.States.ProcessingState.SerializeData()", file="RecurringJobManager.cs"];
m51_6 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="RecurringJobManager.cs"];
m51_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs"];
m51_1 [label="String.IsNullOrWhiteSpace(serverName)", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs"];
m51_3 [label="ServerName = serverName", span="30-30", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs"];
m51_2 [label="throw new ArgumentNullException(''serverName'');", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs"];
m51_4 [label="StartedAt = DateTime.UtcNow", span="31-31", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs"];
m51_5 [label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs"];
m51_12 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RecurringJobManager.cs"];
m51_13 [label="HangFire.States.ProcessingState", span="", file="RecurringJobManager.cs"];
m52_0 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs"];
m52_1 [label="MaxRetryAttempts = 10", span="26-26", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs"];
m52_2 [label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="27-27", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs"];
m52_3 [label="LowerLogVerbosity = false", span="28-28", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs"];
m52_4 [label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs"];
m52_5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="RetryAttributeFacts.cs"];
m52_6 [label="HangFire.Server.ServerComponentRunnerOptions", span="", file="RetryAttributeFacts.cs"];
m53_25 [label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="106-106", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="ScheduledStateHandlerFacts.cs"];
m53_17 [label="handler.Apply(_context.Object, _transaction.Object)", span="37-37", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m53_26 [label="Entry Unk.AddToSet", span="", cluster="Unk.AddToSet", file="ScheduledStateHandlerFacts.cs"];
m53_27 [label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="44-44", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m53_28 [label="var handler = new ScheduledState.Handler()", span="46-46", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m53_43 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ScheduledStateHandlerFacts.cs"];
m53_6 [label="Entry Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="13-13", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ScheduledStateHandlerFacts.cs"];
m53_10 [label="var handler = new ScheduledState.Handler()", span="29-29", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m53_13 [label="Entry Hangfire.States.ScheduledState.Handler.Handler()", span="161-161", cluster="Hangfire.States.ScheduledState.Handler.Handler()", file="ScheduledStateHandlerFacts.cs"];
m53_15 [label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="34-34", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m53_11 [label="Assert.Equal(ScheduledState.StateName, handler.StateName)", span="30-30", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m53_12 [label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", span="27-27", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m53_14 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ScheduledStateHandlerFacts.cs"];
m53_16 [label="var handler = new ScheduledState.Handler()", span="36-36", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m53_8 [label="return Async(type, null);", span="63-63", cluster="HangFire.Perform.Async(System.Type)", file="ScheduledStateHandlerFacts.cs"];
m53_20 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="ScheduledStateHandlerFacts.cs"];
m53_9 [label="Exit HangFire.Perform.Async(System.Type)", span="61-61", cluster="HangFire.Perform.Async(System.Type)", file="ScheduledStateHandlerFacts.cs"];
m53_0 [label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="17-17", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m53_1 [label="_context = new ApplyStateContextMock()", span="19-19", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m53_2 [label="_context.BackgroundJob.Id = JobId", span="20-20", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs", color=green, community=0];
m53_37 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="ScheduledStateHandlerFacts.cs"];
m53_39 [label="return Guid.NewGuid().ToString();", span="175-175", cluster="HangFire.Perform.GenerateId()", color=green, community=0, file="ScheduledStateHandlerFacts.cs"];
m53_38 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="ScheduledStateHandlerFacts.cs"];
m53_40 [label="Exit HangFire.Perform.GenerateId()", span="173-173", cluster="HangFire.Perform.GenerateId()", file="ScheduledStateHandlerFacts.cs"];
m53_41 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="ScheduledStateHandlerFacts.cs"];
m53_42 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="ScheduledStateHandlerFacts.cs"];
m53_44 [label="Entry Unk.>", span="", cluster="Unk.>", file="ScheduledStateHandlerFacts.cs"];
m53_3 [label="_context.NewStateObject = new ScheduledState(_enqueueAt)", span="21-21", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs", color=green, community=0];
m53_4 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m53_5 [label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="17-17", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m53_19 [label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="34-34", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m53_21 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ScheduledStateHandlerFacts.cs"];
m53_30 [label="_transaction.Verify(x => x.RemoveFromSet(''schedule'', JobId))", span="49-49", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m53_31 [label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="44-44", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m53_32 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="ScheduledStateHandlerFacts.cs"];
m53_29 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="160-160", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="ScheduledStateHandlerFacts.cs"];
m53_33 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m53_34 [label="x.RemoveFromSet(''schedule'', JobId)", span="49-49", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m53_35 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m53_36 [label="Entry Unk.RemoveFromSet", span="", cluster="Unk.RemoveFromSet", file="ScheduledStateHandlerFacts.cs"];
m53_18 [label="_transaction.Verify(x => x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(_enqueueAt)))", span="39-40", cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m53_23 [label="x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(_enqueueAt))", span="39-40", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m53_24 [label="Exit lambda expression", span="39-40", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m53_7 [label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="81-81", cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateHandlerFacts.cs"];
m53_45 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m53_46 [label="handler.Apply(_context.Object, _transaction.Object)", span="60-60", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m53_22 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="ScheduledStateHandlerFacts.cs"];
m53_47 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m53_48 [label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", span="", file="ScheduledStateHandlerFacts.cs"];
m53_49 [label=handler, span="", file="ScheduledStateHandlerFacts.cs"];
m55_39 [label="Entry HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", span="151-151", cluster="HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", file="ServerHeartbeatFacts.cs"];
m55_51 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="ServerHeartbeatFacts.cs"];
m55_0 [label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34", cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs"];
m55_1 [label="_storage = storage", span="36-36", cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs"];
m55_2 [label="_pollInterval = pollInterval", span="37-37", cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs"];
m55_3 [label="Exit HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34", cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs"];
m55_38 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="ServerHeartbeatFacts.cs"];
m55_20 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="29-29", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="ServerHeartbeatFacts.cs"];
m55_41 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerHeartbeatFacts.cs"];
m55_16 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ServerHeartbeatFacts.cs"];
m55_18 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ServerHeartbeatFacts.cs"];
m55_22 [label="Entry HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="68-68", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_23 [label="Logger.Info(''Schedule poller has been started.'')", span="72-72", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_24 [label="int enqueued = 0", span="74-74", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_25 [label=true, span="76-76", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_29 [label="enqueued++", span="88-88", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_30 [label="enqueued != 0", span="92-92", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_31 [label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', enqueued)", span="94-94", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_26 [label="var wasEnqueued = false", span="78-78", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_34 [label="Logger.Info(''Schedule poller has been stopped.'')", span="104-104", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_27 [label="JobServer.RetryOnException(\r\n                        () =>\r\n                        {\r\n                            wasEnqueued = EnqueueNextScheduledJob();\r\n                        }, _cts.Token.WaitHandle)", span="80-84", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_28 [label="wasEnqueued && !_cts.IsCancellationRequested", span="86-86", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_33 [label="_cts.Token.WaitHandle.WaitOne(_pollInterval)", span="98-98", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_32 [label="enqueued = 0", span="95-95", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_35 [label=Exception, span="106-106", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_36 [label="Logger.Fatal(\r\n                    ''Unexpected exception caught in the schedule poller. Scheduled jobs will not be added to their queues.'',\r\n                    ex)", span="108-110", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_37 [label="Exit HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="68-68", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs"];
m55_40 [label="Entry Unk.InfoFormat", span="", cluster="Unk.InfoFormat", file="ServerHeartbeatFacts.cs"];
m55_21 [label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.Common.States.State, string[])", span="86-86", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.Common.States.State, string[])", file="ServerHeartbeatFacts.cs"];
m55_46 [label="Entry HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="114-114", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="ServerHeartbeatFacts.cs"];
m55_47 [label="_cts.Cancel()", span="116-116", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="ServerHeartbeatFacts.cs"];
m55_48 [label="thread.Join()", span="117-117", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="ServerHeartbeatFacts.cs"];
m55_49 [label="Exit HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="114-114", cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="ServerHeartbeatFacts.cs"];
m55_42 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="ServerHeartbeatFacts.cs"];
m55_17 [label="Entry HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="26-26", cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="ServerHeartbeatFacts.cs"];
m55_4 [label="Entry HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", span="40-40", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_5 [label="var connection = _storage.GetConnection()", span="42-42", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_6 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="44-44", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_7 [label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="47-48", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_10 [label="var stateMachine = new StateMachine(connection)", span="55-55", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_8 [label="String.IsNullOrEmpty(jobId)", span="50-50", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_12 [label="stateMachine.TryToChangeState(jobId, enqueuedState, new [] { ScheduledState.StateName })", span="61-61", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_9 [label="return false;", span="52-52", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_11 [label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="56-59", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_13 [label="return true;", span="63-63", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_14 [label="Exit HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", span="40-40", cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs"];
m55_43 [label="Entry lambda expression", span="81-84", cluster="lambda expression", file="ServerHeartbeatFacts.cs"];
m55_44 [label="wasEnqueued = EnqueueNextScheduledJob()", span="83-83", cluster="lambda expression", file="ServerHeartbeatFacts.cs"];
m55_45 [label="Exit lambda expression", span="81-84", cluster="lambda expression", file="ServerHeartbeatFacts.cs"];
m55_19 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="ServerHeartbeatFacts.cs"];
m55_50 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="ServerHeartbeatFacts.cs"];
m55_15 [label="Entry HangFire.JobStorage.GetConnection()", span="45-45", cluster="HangFire.JobStorage.GetConnection()", file="ServerHeartbeatFacts.cs"];
m55_52 [label="HangFire.Server.Components.SchedulePoller", span="", file="ServerHeartbeatFacts.cs"];
m56_2 [label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23", cluster="HangFire.Server.IServerComponentRunner.Stop()", file="ServerJobCancellationTokenFacts.cs"];
m56_3 [label="Exit HangFire.Server.IServerComponentRunner.Stop()", span="23-23", cluster="HangFire.Server.IServerComponentRunner.Stop()", file="ServerJobCancellationTokenFacts.cs"];
m56_0 [label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22", cluster="HangFire.Server.IServerComponentRunner.Start()", file="ServerJobCancellationTokenFacts.cs"];
m56_1 [label="Exit HangFire.Server.IServerComponentRunner.Start()", span="22-22", cluster="HangFire.Server.IServerComponentRunner.Start()", file="ServerJobCancellationTokenFacts.cs"];
m57_0 [label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="40-40", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m57_1 [label="Servers.Add(server)", span="44-44", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m57_2 [label="server.Start()", span="46-46", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m57_3 [label="var context = new OwinContext(app.Properties)", span="48-48", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m57_6 [label="token.Register(server.Dispose)", span="53-53", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m57_4 [label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="49-49", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m57_5 [label="token != CancellationToken.None", span="51-51", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m57_7 [label="Exit Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="40-40", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m57_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerOwinExtensions.cs"];
m57_12 [label="Entry Unk.Register", span="", cluster="Unk.Register", file="ServerOwinExtensions.cs"];
m57_9 [label="Entry Hangfire.BackgroundJobServer.Start()", span="157-157", cluster="Hangfire.BackgroundJobServer.Start()", file="ServerOwinExtensions.cs"];
m57_8 [label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="ServerOwinExtensions.cs"];
m57_10 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="ServerOwinExtensions.cs"];
m60_45 [label="Entry System.Text.StringBuilder.Append(int)", span="0-0", cluster="System.Text.StringBuilder.Append(int)", file="ServerWatchdog.cs"];
m60_63 [label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="128-128", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs"];
m60_64 [label="var writer = new StringWriter()", span="130-130", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs"];
m60_65 [label="MarkupStackTrace(stackTrace, writer)", span="132-132", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs"];
m60_66 [label="return new HtmlString(writer.ToString());", span="133-133", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs"];
m60_67 [label="Exit HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="128-128", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs"];
m60_123 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="ServerWatchdog.cs"];
m60_11 [label="Guid guid", span="47-47", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerWatchdog.cs"];
m60_120 [label="Entry HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", span="241-241", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_126 [label="Debug.Assert(text != null)", span="243-243", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_127 [label="Debug.Assert(group != null)", span="244-244", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_128 [label="Debug.Assert(writer != null)", span="245-245", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_129 [label="return group.Success\r\n                 ? StackFrameSpan(text, anchor, klass, group.Value, group.Index, group.Length, writer)\r\n                 : anchor;", span="247-249", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_130 [label="Exit HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", span="241-241", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_6 [label="var serversRemoved = connection.RemoveTimedOutServers(_serverTimeout)", span="41-41", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", color=green, community=0];
m60_69 [label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", span="158-158", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_71 [label="Debug.Assert(text != null)", span="160-160", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_72 [label="Debug.Assert(writer != null)", span="161-161", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_74 [label="_reStackTrace.Matches(text)", span="165-165", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_75 [label="HtmlEncode(text.Substring(anchor, match.Index - anchor), writer)", span="167-167", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_76 [label="MarkupStackFrame(text, match, writer)", span="168-168", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_78 [label="HtmlEncode(text.Substring(anchor), writer)", span="172-172", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_73 [label="int anchor = 0", span="163-163", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_77 [label="anchor = match.Index + match.Length", span="169-169", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_79 [label="Exit HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", span="158-158", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_42 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="ServerWatchdog.cs"];
m60_82 [label="Entry HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", span="273-273", cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_145 [label="Debug.Assert(writer != null)", span="275-275", cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_146 [label="HttpUtility.HtmlEncode(text, writer)", span="276-276", cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_147 [label="Exit HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", span="273-273", cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_148 [label="Entry Unk.HtmlEncode", span="", cluster="Unk.HtmlEncode", file="ServerWatchdog.cs"];
m60_52 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="ServerWatchdog.cs"];
m60_12 [label="return new HtmlString(Guid.TryParse(jobId, out guid)\r\n                ? (shorten ? jobId.Substring(0, 8) : jobId)\r\n                : ''#'' + jobId);", span="48-50", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerWatchdog.cs", color=red, community=0];
m60_0 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerWatchdog.cs"];
m60_2 [label="return new HtmlString(''<em>Can not find the target method.</em>'');", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", color=red, community=0, file="ServerWatchdog.cs"];
m60_1 [label="job == null", span="32-32", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerWatchdog.cs"];
m60_3 [label="return new HtmlString(String.Format(''{0}.{1}'', job.Type.Name, job.Method.Name));", span="37-37", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerWatchdog.cs", color=red, community=0];
m60_19 [label="var builder = new StringBuilder()", span="57-57", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_13 [label="Exit HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerWatchdog.cs"];
m60_41 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="ServerWatchdog.cs"];
m60_125 [label="Entry System.IO.TextWriter.Write(char)", span="0-0", cluster="System.IO.TextWriter.Write(char)", file="ServerWatchdog.cs"];
m60_16 [label="Entry HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_17 [label="duration == null", span="55-55", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", color=red, community=0];
m60_18 [label="return null;", span="55-55", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", color=red, community=0];
m60_47 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="ServerWatchdog.cs"];
m60_5 [label="var connection = context.Storage.GetConnection()", span="39-39", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", color=green, community=0];
m60_131 [label="Entry HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", span="252-252", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_132 [label="Debug.Assert(text != null)", span="254-254", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_133 [label="Debug.Assert(writer != null)", span="255-255", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_134 [label="HtmlEncode(text.Substring(anchor, index - anchor), writer)", span="257-257", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_135 [label="Span(writer, klass, value)", span="258-258", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_136 [label="return index + length;", span="259-259", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_137 [label="Exit HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", span="252-252", cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_80 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="ServerWatchdog.cs"];
m60_44 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="ServerWatchdog.cs"];
m60_15 [label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="57-57", cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="ServerWatchdog.cs"];
m60_20 [label="Hangfire.Server.ServerWatchdog", span="", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_21 [label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", span="60-60", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_22 [label="duration = duration.Value.Duration()", span="63-63", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_24 [label="builder.AppendFormat(''{0}d '', duration.Value.Days)", span="67-67", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_26 [label="builder.AppendFormat(''{0}h '', duration.Value.Hours)", span="72-72", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_28 [label="builder.AppendFormat(''{0}m '', duration.Value.Minutes)", span="77-77", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_30 [label="builder.Append(duration.Value.Seconds)", span="82-82", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_32 [label="builder.AppendFormat(''.{0}'', duration.Value.Milliseconds)", span="85-85", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_33 [label="builder.Append(''s '')", span="88-88", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_35 [label="builder.AppendFormat(''{0}ms '', duration.Value.Milliseconds)", span="94-94", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_36 [label="builder.Length <= 1", span="98-98", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_37 [label="builder.Append('' <1ms '')", span="100-100", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_38 [label="builder.Remove(builder.Length - 1, 1)", span="103-103", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_39 [label="return builder.ToString();", span="105-105", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_23 [label="duration.Value.Days > 0", span="65-65", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_25 [label="duration.Value.Hours > 0", span="70-70", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_27 [label="duration.Value.Minutes > 0", span="75-75", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_29 [label="duration.Value.Seconds > 0", span="80-80", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_31 [label="duration.Value.Milliseconds > 0", span="83-83", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_34 [label="duration.Value.Milliseconds > 0", span="92-92", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_40 [label="Exit HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53", cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs"];
m60_81 [label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="ServerWatchdog.cs"];
m60_56 [label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="113-113", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs"];
m60_57 [label="string label", span="115-115", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs"];
m60_58 [label="queue != null", span="116-116", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs"];
m60_59 [label="label = ''<span class=\''label label-queue label-primary\''>'' + queue + ''</span>''", span="118-118", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs"];
m60_60 [label="label = ''<span class=\''label label-queue label-danger\''><i>Unknown</i></span>''", span="122-122", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs"];
m60_61 [label="return new HtmlString(label);", span="125-125", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs"];
m60_62 [label="Exit HangFire.Web.HtmlHelper.QueueLabel(string)", span="113-113", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs"];
m60_14 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="ServerWatchdog.cs"];
m60_7 [label="serversRemoved != 0", span="42-42", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", color=green, community=0];
m60_8 [label="Logger.Info(String.Format(\r\n                        ''{0} servers were removed due to timeout'', \r\n                        serversRemoved))", span="44-46", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", color=green, community=0];
m60_9 [label="context.Wait(_checkInterval)", span="50-50", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs"];
m60_48 [label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="108-108", cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ServerWatchdog.cs"];
m60_49 [label="return @String.Join('', '', properties.Select(x => String.Format(''{0}: \''{1}\'''', x.Key, x.Value)));", span="110-110", cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ServerWatchdog.cs"];
m60_50 [label="Exit HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="108-108", cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ServerWatchdog.cs"];
m60_43 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="ServerWatchdog.cs"];
m60_53 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="ServerWatchdog.cs"];
m60_54 [label="String.Format(''{0}: \''{1}\'''', x.Key, x.Value)", span="110-110", cluster="lambda expression", file="ServerWatchdog.cs"];
m60_55 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="ServerWatchdog.cs"];
m60_70 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="ServerWatchdog.cs"];
m60_10 [label="Exit Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs"];
m60_51 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServerWatchdog.cs"];
m60_121 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="ServerWatchdog.cs"];
m60_68 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="ServerWatchdog.cs"];
m60_122 [label="Entry string.LastIndexOf(char)", span="0-0", cluster="string.LastIndexOf(char)", file="ServerWatchdog.cs"];
m60_83 [label="Entry HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", span="175-175", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_85 [label="Debug.Assert(text != null)", span="177-177", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_86 [label="Debug.Assert(match != null)", span="178-178", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_87 [label="Debug.Assert(writer != null)", span="179-179", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_88 [label="int anchor = match.Index", span="181-181", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_89 [label="GroupCollection groups = match.Groups", span="182-182", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_91 [label="HtmlEncode(text.Substring(anchor, type.Index - anchor), writer)", span="189-189", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_93 [label="writer.Write(''<span class='st-frame'>'')", span="191-191", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_94 [label="anchor = StackFrameSpan(text, anchor, ''st-type'', type, writer)", span="192-192", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_95 [label="anchor = StackFrameSpan(text, anchor, ''st-method'', groups[''method''], writer)", span="193-193", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_97 [label="HtmlEncode(text.Substring(anchor, parameters.Index - anchor), writer)", span="200-200", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_98 [label="writer.Write(''<span class='st-params'>('')", span="201-201", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_103 [label="Span(writer, ''st-param'', parameter.Trim())", span="208-208", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_105 [label="writer.Write('', '')", span="213-213", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_107 [label="Span(writer, ''st-param-type'', argType)", span="215-215", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_108 [label="writer.Write(' ')", span="216-216", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_110 [label="Span(writer, ''st-param-name'', argName)", span="218-218", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_111 [label="writer.Write('')</span>'')", span="221-221", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_113 [label="anchor = StackFrameSpan(text, anchor, ''st-file'', groups[''file''], writer)", span="228-228", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_114 [label="anchor = StackFrameSpan(text, anchor, ''st-line'', groups[''line''], writer)", span="229-229", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_115 [label="writer.Write(''</span>'')", span="231-231", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_116 [label="int end = match.Index + match.Length", span="237-237", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_117 [label="HtmlEncode(text.Substring(anchor, end - anchor), writer)", span="238-238", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_90 [label="Group type = groups[''type'']", span="188-188", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_96 [label="Group parameters = groups[''params'']", span="199-199", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_92 [label="anchor = type.Index", span="190-190", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_100 [label="parameters.Captures[0].Value.Split(',')", span="203-203", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_112 [label="anchor = parameters.Index + parameters.Length", span="222-222", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_99 [label="int position = 0", span="202-202", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_104 [label="position++ > 0", span="212-212", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_101 [label="int spaceIndex = parameter.LastIndexOf(' ')", span="205-205", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_106 [label="string argType = parameter.Substring(0, spaceIndex).Trim()", span="214-214", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_109 [label="string argName = parameter.Substring(spaceIndex + 1).Trim()", span="217-217", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_102 [label="spaceIndex <= 0", span="206-206", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_118 [label="Exit HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", span="175-175", cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs"];
m60_4 [label="Exit HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerWatchdog.cs"];
m60_46 [label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0", cluster="System.Text.StringBuilder.Remove(int, int)", file="ServerWatchdog.cs"];
m60_119 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="ServerWatchdog.cs"];
m60_124 [label="Entry HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="262-262", cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs"];
m60_138 [label="Debug.Assert(writer != null)", span="264-264", cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs"];
m60_139 [label="writer.Write(''<span class=''')", span="266-266", cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs"];
m60_140 [label="writer.Write(klass)", span="267-267", cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs"];
m60_141 [label="writer.Write('''>'')", span="268-268", cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs"];
m60_142 [label="HtmlEncode(value, writer)", span="269-269", cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs"];
m60_143 [label="writer.Write(''</span>'')", span="270-270", cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs"];
m60_144 [label="Exit HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="262-262", cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs"];
m60_84 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="ServerWatchdog.cs"];
m61_8 [label="return new AspNetCoreLog(_loggerFactory.CreateLogger(name));", span="35-35", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="ServerWatchdogFacts.cs", color=green, community=0];
m61_9 [label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", span="33-33", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="ServerWatchdogFacts.cs"];
m61_5 [label="Exit HangFire.PreserveCultureFilter.OnCreating(HangFire.Filters.CreatingContext)", span="10-10", cluster="HangFire.PreserveCultureFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ServerWatchdogFacts.cs"];
m61_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="ServerWatchdogFacts.cs"];
m61_11 [label="filterContext == null", span="26-26", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_10 [label="Entry AspNetCoreLog.cstr", span="", cluster="AspNetCoreLog.cstr", file="ServerWatchdogFacts.cs"];
m61_13 [label="var cultureName = filterContext.JobDescriptor\r\n                .GetParameter<string>(''CurrentCulture'')", span="28-29", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_14 [label="var uiCultureName = filterContext.JobDescriptor\r\n                .GetParameter<string>(''CurrentUICulture'')", span="30-31", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_17 [label="filterContext.Items[''PreviousCulture''] = thread.CurrentCulture", span="37-37", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", color=red, community=0, file="ServerWatchdogFacts.cs"];
m61_20 [label="filterContext.Items[''PreviousUICulture''] = thread.CurrentUICulture", span="43-43", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_12 [label="Hangfire.AspNetCore.AspNetCoreLogProvider", span="", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_16 [label="!String.IsNullOrEmpty(cultureName)", span="35-35", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_18 [label="thread.CurrentCulture = CultureInfo.GetCultureInfo(cultureName)", span="38-38", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_15 [label="var thread = Thread.CurrentThread", span="33-33", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_19 [label="!String.IsNullOrEmpty(uiCultureName)", span="41-41", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_21 [label="thread.CurrentUICulture = CultureInfo.GetCultureInfo(uiCultureName)", span="44-44", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_22 [label="Exit HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="24-24", cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs"];
m61_24 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ServerWatchdogFacts.cs"];
m61_7 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="73-73", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ServerWatchdogFacts.cs"];
m61_35 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ServerWatchdogFacts.cs"];
m61_0 [label="Entry Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="ServerWatchdogFacts.cs"];
m61_1 [label="loggerFactory == null", span="29-29", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", color=red, community=0, file="ServerWatchdogFacts.cs"];
m61_3 [label="_loggerFactory = loggerFactory", span="30-30", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", color=green, community=0, file="ServerWatchdogFacts.cs"];
m61_4 [label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="ServerWatchdogFacts.cs"];
m61_2 [label="throw new ArgumentNullException(nameof(loggerFactory));", span="29-29", cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", color=red, community=0, file="ServerWatchdogFacts.cs"];
m61_23 [label="Entry HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", span="72-72", cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerWatchdogFacts.cs"];
m61_25 [label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="ServerWatchdogFacts.cs"];
m61_26 [label="Entry HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="48-48", cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs"];
m61_27 [label="filterContext == null", span="50-50", cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs"];
m61_30 [label="filterContext.Items.ContainsKey(''PreviousCulture'')", span="53-53", cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs"];
m61_31 [label="thread.CurrentCulture = (CultureInfo) filterContext.Items[''PreviousCulture'']", span="55-55", cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs"];
m61_32 [label="filterContext.Items.ContainsKey(''PreviousUICulture'')", span="57-57", cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs"];
m61_33 [label="thread.CurrentUICulture = (CultureInfo) filterContext.Items[''PreviousUICulture'']", span="59-59", cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs"];
m61_28 [label="throw new ArgumentNullException(''filterContext'');", span="50-50", cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs"];
m61_29 [label="var thread = Thread.CurrentThread", span="52-52", cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs"];
m61_34 [label="Exit HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="48-48", cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs"];
m63_19 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerDistributedLock.cs"];
m63_0 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="SqlServerDistributedLock.cs"];
m63_1 [label="new Dictionary<string, int>()", span="42-42", cluster="lambda expression", file="SqlServerDistributedLock.cs", color=green, community=0];
m63_23 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerDistributedLock.cs"];
m63_63 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerDistributedLock.cs"];
m63_60 [label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22", cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLock.cs"];
m63_38 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="132-132", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_64 [label="var parameters = new DynamicParameters()", span="134-134", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_65 [label="parameters.Add(''@Resource'', resource)", span="135-135", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_68 [label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="139-142", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_71 [label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                        ''Could not release a lock on the resource '{0}': Server returned the '{1}' error.'',\r\n                        resource,\r\n                        releaseResult));", span="148-152", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_70 [label="releaseResult < 0", span="146-146", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_66 [label="parameters.Add(''@LockOwner'', LockOwner)", span="136-136", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_67 [label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="137-137", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_69 [label="var releaseResult = parameters.Get<int>(''@Result'')", span="144-144", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_72 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="132-132", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m63_61 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerDistributedLock.cs"];
m63_22 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerDistributedLock.cs"];
m63_24 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerDistributedLock.cs"];
m63_58 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerDistributedLock.cs"];
m63_55 [label="Entry DynamicParameters.cstr", span="", cluster="DynamicParameters.cstr", file="SqlServerDistributedLock.cs"];
m63_56 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerDistributedLock.cs"];
m63_4 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="50-50", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_5 [label="storage == null", span="52-52", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs"];
m63_6 [label="throw new ArgumentNullException(''storage'');", span="52-52", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs"];
m63_7 [label="String.IsNullOrEmpty(resource)", span="53-53", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_14 [label="!AcquiredLocks.Value.ContainsKey(_resource)", span="60-60", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs"];
m63_13 [label="_connection = storage.CreateAndOpenConnection()", span="58-58", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_15 [label="Acquire(_connection, _resource, timeout)", span="62-62", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_17 [label="AcquiredLocks.Value[_resource]++", span="67-67", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_9 [label="(timeout.TotalSeconds + CommandTimeoutAdditionSeconds) > Int32.MaxValue", span="54-54", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_11 [label="_storage = storage", span="56-56", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_12 [label="_resource = resource", span="57-57", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_8 [label="throw new ArgumentNullException(''resource'');", span="53-53", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_10 [label="throw new ArgumentException(string.Format(''The timeout specified is too large. Please supply a timeout equal to or less than {0} seconds'', Int32.MaxValue - CommandTimeoutAdditionSeconds), ''timeout'');", span="54-54", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_16 [label="AcquiredLocks.Value[_resource] = 1", span="63-63", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_18 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="50-50", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_3 [label="Exit HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="27-27", cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="SqlServerDistributedLock.cs"];
m63_20 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SqlServerDistributedLock.cs"];
m63_25 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="94-94", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_47 [label="var commandTimeout = (int)(timeout.TotalSeconds + CommandTimeoutAdditionSeconds)", span="105-105", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs"];
m63_45 [label="parameters.Add(''@LockTimeout'', timeout.TotalMilliseconds)", span="101-101", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_46 [label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="102-102", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_48 [label="connection.Execute(\r\n                @''sp_getapplock'',\r\n                parameters,\r\n                commandTimeout: commandTimeout,\r\n                commandType: CommandType.StoredProcedure)", span="107-111", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_40 [label="var parameters = new DynamicParameters()", span="96-96", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_44 [label="parameters.Add(''@LockOwner'', LockOwner)", span="100-100", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_49 [label="var lockResult = parameters.Get<int>(''@Result'')", span="113-113", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_41 [label="parameters.Add(''@Resource'', resource)", span="97-97", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_52 [label="throw new DistributedLockTimeoutException(resource);", span="119-119", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_53 [label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                    ''Could not place a lock on the resource '{0}': {1}.'',\r\n                    resource,\r\n                    LockErrorMessages.ContainsKey(lockResult)\r\n                        ? LockErrorMessages[lockResult]\r\n                        : String.Format(''Server returned the '{0}' error.'', lockResult)));", span="122-128", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_42 [label="parameters.Add(''@DbPrincipal'', ''public'')", span="98-98", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_43 [label="parameters.Add(''@LockMode'', LockMode)", span="99-99", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_50 [label="lockResult < 0", span="115-115", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_51 [label="lockResult == -1", span="117-117", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_54 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="94-94", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m63_2 [label="Entry HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="27-27", cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="SqlServerDistributedLock.cs"];
m63_59 [label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6", cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="SqlServerDistributedLock.cs"];
m63_21 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerDistributedLock.cs"];
m63_57 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerDistributedLock.cs"];
m63_62 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="SqlServerDistributedLock.cs"];
m63_39 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="SqlServerDistributedLock.cs"];
m63_26 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="71-71", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m63_29 [label="_completed = true", span="75-75", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="SqlServerDistributedLock.cs"];
m63_27 [label=_completed, span="73-73", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m63_30 [label="!AcquiredLocks.Value.ContainsKey(_resource)", span="77-77", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m63_35 [label="Release(_connection, _resource)", span="85-85", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="SqlServerDistributedLock.cs"];
m63_33 [label="AcquiredLocks.Value[_resource] != 0", span="81-81", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m63_36 [label="AcquiredLocks.Value.Remove(_resource)", span="86-86", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="SqlServerDistributedLock.cs"];
m63_32 [label="AcquiredLocks.Value[_resource]--", span="79-79", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m63_28 [label="return;", span="73-73", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m63_31 [label="return;", span="77-77", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m63_34 [label="return;", span="81-81", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m63_37 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="71-71", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m63_73 [label="Hangfire.SqlServer.SqlServerDistributedLock", span="", file="SqlServerDistributedLock.cs"];
m64_0 [label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22", cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLockException.cs"];
m64_1 [label="Exit Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22", cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLockException.cs"];
m65_17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerFetchedJob.cs"];
m65_21 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="SqlServerFetchedJob.cs"];
m65_9 [label="queue == null", span="40-40", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_22 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="58-58", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs"];
m65_23 [label="_transaction.Rollback()", span="60-60", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs"];
m65_24 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="58-58", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs"];
m65_31 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerFetchedJob.cs"];
m65_5 [label="transaction == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_30 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerFetchedJob.cs"];
m65_6 [label="throw new ArgumentNullException(''transaction'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_7 [label="jobId == null", span="39-39", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_8 [label="throw new ArgumentNullException(''jobId'');", span="39-39", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_0 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", span="29-29", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_1 [label="storage == null", span="36-36", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_2 [label="throw new ArgumentNullException(''storage'');", span="36-36", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_3 [label="connection == null", span="37-37", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_12 [label="_connection = connection", span="43-43", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", color=green, community=0, file="SqlServerFetchedJob.cs"];
m65_11 [label="_storage = storage", span="42-42", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_13 [label="_transaction = transaction", span="44-44", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_14 [label="JobId = jobId", span="46-46", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_15 [label="Queue = queue", span="47-47", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerFetchedJob.cs"];
m65_10 [label="throw new ArgumentNullException(''queue'');", span="40-40", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_16 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", span="29-29", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs"];
m65_18 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="53-53", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs"];
m65_19 [label="_transaction.Commit()", span="55-55", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", color=green, community=0, file="SqlServerFetchedJob.cs"];
m65_20 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="53-53", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs"];
m65_26 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="63-63", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs"];
m65_27 [label="_transaction.Dispose()", span="65-65", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", color=green, community=0, file="SqlServerFetchedJob.cs"];
m65_28 [label="_storage.ReleaseConnection(_connection)", span="66-66", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", color=green, community=0, file="SqlServerFetchedJob.cs"];
m65_29 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="63-63", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs"];
m65_25 [label="Entry Unk.Rollback", span="", cluster="Unk.Rollback", file="SqlServerFetchedJob.cs"];
m65_32 [label="Hangfire.SqlServer.SqlServerFetchedJob", span="", file="SqlServerFetchedJob.cs"];
m66_57 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", span="119-119", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="SqlServerFetchedJobFacts.cs"];
m66_88 [label="return new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, jobId, queue);", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_89 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", span="119-119", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="SqlServerFetchedJobFacts.cs"];
m66_14 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerFetchedJobFacts.cs"];
m66_7 [label="Entry Mock<SqlServerStorage>.cstr", span="", cluster="Mock<SqlServerStorage>.cstr", file="SqlServerFetchedJobFacts.cs"];
m66_19 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="36-36", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, null, _transaction.Object, JobId, Queue))", span="38-39", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_21 [label="Assert.Equal(''connection'', exception.ParamName)", span="41-41", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_22 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="36-36", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_5 [label="Entry Mock<IDbConnection>.cstr", span="", cluster="Mock<IDbConnection>.cstr", file="SqlServerFetchedJobFacts.cs"];
m66_13 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerFetchedJobFacts.cs"];
m66_0 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", span="19-19", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="SqlServerFetchedJobFacts.cs"];
m66_1 [label="_connection = new Mock<IDbConnection>()", span="21-21", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="SqlServerFetchedJobFacts.cs"];
m66_2 [label="_transaction = new Mock<IDbTransaction>()", span="22-22", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_3 [label="_storage = new Mock<SqlServerStorage>(ConnectionUtils.GetConnectionString())", span="23-23", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_4 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", span="19-19", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="SqlServerFetchedJobFacts.cs"];
m66_9 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_10 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(null, _connection.Object, _transaction.Object, JobId, Queue))", span="29-30", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=1, file="SqlServerFetchedJobFacts.cs"];
m66_11 [label="Assert.Equal(''storage'', exception.ParamName)", span="32-32", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_12 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_18 [label="Entry SqlServerFetchedJob.cstr", span="", cluster="SqlServerFetchedJob.cstr", file="SqlServerFetchedJobFacts.cs"];
m66_47 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="72-72", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerFetchedJobFacts.cs"];
m66_48 [label="var fetchedJob = new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, Queue)", span="74-74", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_49 [label="Assert.Equal(JobId, fetchedJob.JobId)", span="76-76", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerFetchedJobFacts.cs"];
m66_50 [label="Assert.Equal(Queue, fetchedJob.Queue)", span="77-77", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerFetchedJobFacts.cs", color=green, community=0];
m66_51 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="72-72", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerFetchedJobFacts.cs"];
m66_73 [label="Entry Unk.Rollback", span="", cluster="Unk.Rollback", file="SqlServerFetchedJobFacts.cs"];
m66_26 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="45-45", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_27 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, null, JobId, Queue))", span="47-48", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", color=red, community=1, file="SqlServerFetchedJobFacts.cs"];
m66_28 [label="Assert.Equal(''transaction'', exception.ParamName)", span="50-50", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_29 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="45-45", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_74 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", span="107-107", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="SqlServerFetchedJobFacts.cs"];
m66_75 [label="var processingJob = CreateFetchedJob(''1'', ''queue'')", span="109-109", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_76 [label="processingJob.Dispose()", span="112-112", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_77 [label="_transaction.Verify(x => x.Dispose())", span="115-115", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_78 [label="_connection.Verify(x => x.Dispose())", span="116-116", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_79 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", span="107-107", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="SqlServerFetchedJobFacts.cs"];
m66_33 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="54-54", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, null, Queue))", span="56-57", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_35 [label="Assert.Equal(''jobId'', exception.ParamName)", span="59-59", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerFetchedJobFacts.cs", color=green, community=0];
m66_36 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="54-54", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_6 [label="Entry Mock<IDbTransaction>.cstr", span="", cluster="Mock<IDbTransaction>.cstr", file="SqlServerFetchedJobFacts.cs"];
m66_84 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerFetchedJobFacts.cs"];
m66_58 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="53-53", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJobFacts.cs"];
m66_85 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_15 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_16 [label="new SqlServerFetchedJob(null, _connection.Object, _transaction.Object, JobId, Queue)", span="30-30", cluster="lambda expression", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_17 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_23 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_24 [label="new SqlServerFetchedJob(_storage.Object, null, _transaction.Object, JobId, Queue)", span="39-39", cluster="lambda expression", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_25 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_30 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_31 [label="new SqlServerFetchedJob(_storage.Object, _connection.Object, null, JobId, Queue)", span="48-48", cluster="lambda expression", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_32 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_37 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_38 [label="new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, null, Queue)", span="57-57", cluster="lambda expression", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_39 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_44 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_45 [label="new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, null)", span="66-66", cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_46 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_60 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_61 [label="x.Commit()", span="90-90", cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_62 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_70 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_71 [label="x.Rollback()", span="103-103", cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_72 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_81 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_82 [label="x.Dispose()", span="115-115", cluster="lambda expression", color=red, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_83 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_86 [label="x.Dispose()", span="116-116", cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_87 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="SqlServerFetchedJobFacts.cs"];
m66_64 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", span="94-94", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="SqlServerFetchedJobFacts.cs"];
m66_65 [label="var processingJob = CreateFetchedJob(''1'', ''default'')", span="97-97", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_66 [label="processingJob.Requeue()", span="100-100", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_67 [label="_transaction.Verify(x => x.Rollback())", span="103-103", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_68 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", span="94-94", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="SqlServerFetchedJobFacts.cs"];
m66_63 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="SqlServerFetchedJobFacts.cs"];
m66_69 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="58-58", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJobFacts.cs"];
m66_8 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="SqlServerFetchedJobFacts.cs"];
m66_80 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="63-63", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJobFacts.cs"];
m66_59 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerFetchedJobFacts.cs"];
m66_52 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", span="81-81", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="SqlServerFetchedJobFacts.cs"];
m66_53 [label="var processingJob = CreateFetchedJob(''1'', ''default'')", span="84-84", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_54 [label="processingJob.RemoveFromQueue()", span="87-87", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_55 [label="_transaction.Verify(x => x.Commit())", span="90-90", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_56 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", span="81-81", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="SqlServerFetchedJobFacts.cs"];
m66_40 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="63-63", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, null))", span="65-66", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="SqlServerFetchedJobFacts.cs"];
m66_42 [label="Assert.Equal(''queue'', exception.ParamName)", span="68-68", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerFetchedJobFacts.cs", color=green, community=0];
m66_43 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="63-63", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerFetchedJobFacts.cs"];
m66_90 [label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", span="", file="SqlServerFetchedJobFacts.cs"];
m68_26 [label="Entry Unk.GetTestJob", span="", cluster="Unk.GetTestJob", file="SqlServerMonitoringApi.cs"];
m68_375 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerMonitoringApi.cs"];
m68_376 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="447-458", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_377 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerMonitoringApi.cs"];
m68_432 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs"];
m68_433 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="522-533", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_434 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs"];
m68_248 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerMonitoringApi.cs"];
m68_78 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="SqlServerMonitoringApi.cs"];
m68_348 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerMonitoringApi.cs"];
m68_12 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="SqlServerMonitoringApi.cs"];
m68_299 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerMonitoringApi.cs"];
m68_300 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="347-358", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_301 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerMonitoringApi.cs"];
m68_82 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerMonitoringApi.cs"];
m68_286 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerMonitoringApi.cs"];
m68_179 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m68_96 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="SqlServerMonitoringApi.cs"];
m68_235 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerMonitoringApi.cs"];
m68_236 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="266-275", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_237 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerMonitoringApi.cs"];
m68_34 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob", file="SqlServerMonitoringApi.cs"];
m68_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerMonitoringApi.cs"];
m68_131 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="SqlServerMonitoringApi.cs"];
m68_132 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.JobQueue'').Single();\r\n                Assert.Equal(''1'', record.JobId.ToString());\r\n                Assert.Equal(''default'', record.Queue);\r\n                Assert.Null(record.FetchedAt);\r\n            })", span="141-149", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="SqlServerMonitoringApi.cs"];
m68_133 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="SqlServerMonitoringApi.cs"];
m68_444 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerMonitoringApi.cs"];
m68_445 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="539-550", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerMonitoringApi.cs"];
m68_446 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerMonitoringApi.cs"];
m68_145 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerMonitoringApi.cs"];
m68_146 [label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="154-156", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerMonitoringApi.cs"];
m68_147 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerMonitoringApi.cs"];
m68_399 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerMonitoringApi.cs"];
m68_400 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="481-497", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_401 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerMonitoringApi.cs"];
m68_417 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerMonitoringApi.cs"];
m68_22 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerMonitoringApi.cs"];
m68_148 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerMonitoringApi.cs"];
m68_149 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="162-171", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerMonitoringApi.cs"];
m68_150 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerMonitoringApi.cs"];
m68_97 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerMonitoringApi.cs"];
m68_99 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="113-135", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_98 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="108-111", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerMonitoringApi.cs"];
m68_100 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerMonitoringApi.cs"];
m68_206 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs"];
m68_207 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="229-243", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_208 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs"];
m68_473 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlServerMonitoringApi.cs"];
m68_409 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SqlServerMonitoringApi.cs"];
m68_33 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SqlServerMonitoringApi.cs"];
m68_27 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs"];
m68_24 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerMonitoringApi.cs"];
m68_223 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerMonitoringApi.cs"];
m68_224 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="249-260", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_225 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerMonitoringApi.cs"];
m68_387 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerMonitoringApi.cs"];
m68_388 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="464-475", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerMonitoringApi.cs"];
m68_389 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerMonitoringApi.cs"];
m68_0 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerMonitoringApi.cs"];
m68_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null))", span="17-18", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerMonitoringApi.cs"];
m68_2 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerMonitoringApi.cs"];
m68_48 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="SqlServerMonitoringApi.cs"];
m68_130 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="SqlServerMonitoringApi.cs"];
m68_81 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs"];
m68_162 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs"];
m68_163 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="177-191", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs"];
m68_164 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs"];
m68_311 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerMonitoringApi.cs"];
m68_25 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerMonitoringApi.cs"];
m68_474 [label="var transaction = new SqlServerWriteOnlyTransaction(connection)", span="582-582", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_475 [label="action(transaction)", span="584-584", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerMonitoringApi.cs"];
m68_476 [label="transaction.Commit()", span="585-585", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerMonitoringApi.cs"];
m68_477 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerMonitoringApi.cs"];
m68_79 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SqlServerMonitoringApi.cs"];
m68_324 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerMonitoringApi.cs"];
m68_325 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="381-392", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerMonitoringApi.cs"];
m68_326 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerMonitoringApi.cs"];
m68_29 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="SqlServerMonitoringApi.cs"];
m68_374 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerMonitoringApi.cs"];
m68_180 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerMonitoringApi.cs"];
m68_181 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="197-208", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_182 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerMonitoringApi.cs"];
m68_478 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerMonitoringApi.cs"];
m68_92 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData", file="SqlServerMonitoringApi.cs"];
m68_361 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerMonitoringApi.cs"];
m68_362 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="429-441", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_363 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerMonitoringApi.cs"];
m68_35 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerMonitoringApi.cs"];
m68_37 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="52-64", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_36 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="47-50", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerMonitoringApi.cs"];
m68_38 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerMonitoringApi.cs"];
m68_273 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerMonitoringApi.cs"];
m68_274 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="315-324", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_275 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerMonitoringApi.cs"];
m68_121 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_13 [label="Entry lambda expression", span="29-41", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_15 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="32-32", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_14 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="31-31", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_16 [label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="34-34", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_19 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="39-39", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_17 [label="var job = GetTestJob(sql, jobId)", span="36-36", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_18 [label="Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1))", span="37-37", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_20 [label="Assert.Null(anotherJob.ExpireAt)", span="40-40", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_21 [label="Exit lambda expression", span="29-41", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_39 [label="Entry lambda expression", span="52-64", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_40 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_41 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_42 [label="Commit(sql, x => x.PersistJob(jobId))", span="57-57", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_50 [label="x.PersistJob(jobId)", span="57-57", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_43 [label="var job = GetTestJob(sql, jobId)", span="59-59", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_49 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_45 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_44 [label="Assert.Null(job.ExpireAt)", span="60-60", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_46 [label="Assert.NotNull(anotherJob.ExpireAt)", span="63-63", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_51 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_47 [label="Exit lambda expression", span="52-64", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_101 [label="Entry lambda expression", span="113-135", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_183 [label="Entry lambda expression", span="197-208", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_184 [label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="199-203", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_185 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="205-205", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_188 [label="Entry lambda expression", span="199-203", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_186 [label="Assert.Equal(2, recordCount)", span="207-207", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_187 [label="Exit lambda expression", span="197-208", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_190 [label="x.IncrementCounter(''my-key'')", span="202-202", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_189 [label="x.IncrementCounter(''my-key'')", span="201-201", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_191 [label="Exit lambda expression", span="199-203", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_195 [label="Entry lambda expression", span="214-223", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_197 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="218-218", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_196 [label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="216-216", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_198 [label="Assert.Equal(''my-key'', record.Key)", span="220-220", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_199 [label="Assert.Equal(-1, record.Value)", span="221-221", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_200 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="222-222", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_201 [label="Exit lambda expression", span="214-223", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_209 [label="Entry lambda expression", span="229-243", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_211 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="233-233", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_210 [label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="231-231", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_212 [label="Assert.Equal(''my-key'', record.Key)", span="235-235", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_213 [label="Assert.Equal(-1, record.Value)", span="236-236", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_214 [label="Assert.NotNull(record.ExpireAt)", span="237-237", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_215 [label="var expireAt = (DateTime)record.ExpireAt", span="239-239", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_226 [label="Entry lambda expression", span="249-260", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_238 [label="Entry lambda expression", span="266-275", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_240 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="270-270", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_239 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="268-268", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_241 [label="Assert.Equal(''my-key'', record.Key)", span="272-272", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_242 [label="Assert.Equal(''my-value'', record.Value)", span="273-273", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_243 [label="Assert.Equal(0.0, record.Score, 2)", span="274-274", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_276 [label="Entry lambda expression", span="315-324", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_279 [label="Assert.Equal(''my-key'', record.Key)", span="321-321", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_278 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="319-319", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_280 [label="Assert.Equal(''my-value'', record.Value)", span="322-322", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_281 [label="Assert.Equal(3.2, record.Score, 3)", span="323-323", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_282 [label="Exit lambda expression", span="315-324", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_290 [label="Entry lambda expression", span="330-341", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_291 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="332-336", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_292 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="338-338", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_295 [label="Entry lambda expression", span="332-336", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_293 [label="Assert.Equal(3.2, record.Score, 3)", span="340-340", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_297 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="335-335", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_296 [label="x.AddToSet(''my-key'', ''my-value'')", span="334-334", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_298 [label="Exit lambda expression", span="332-336", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_302 [label="Entry lambda expression", span="347-358", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_303 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="349-353", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_304 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="355-355", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_307 [label="Entry lambda expression", span="349-353", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_315 [label="Entry lambda expression", span="364-375", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_339 [label="Entry lambda expression", span="398-406", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_343 [label="Assert.Equal(''my-value'', record.Value)", span="405-405", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_341 [label="var record = sql.Query(''select * from HangFire.List'').Single()", span="402-402", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_342 [label="Assert.Equal(''my-key'', record.Key)", span="404-404", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_344 [label="Exit lambda expression", span="398-406", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_364 [label="Entry lambda expression", span="429-441", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_365 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="431-436", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_366 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="438-438", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_369 [label="Entry lambda expression", span="431-436", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_370 [label="x.InsertToList(''my-key'', ''my-value'')", span="433-433", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_371 [label="x.InsertToList(''my-key'', ''my-value'')", span="434-434", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_372 [label="x.RemoveFromList(''my-key'', ''my-value'')", span="435-435", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_378 [label="Entry lambda expression", span="447-458", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_379 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="449-453", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_380 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="455-455", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_383 [label="Entry lambda expression", span="449-453", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_384 [label="x.InsertToList(''my-key'', ''my-value'')", span="451-451", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_385 [label="x.RemoveFromList(''my-key'', ''different-value'')", span="452-452", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_402 [label="Entry lambda expression", span="481-497", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_403 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="483-490", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_404 [label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="492-492", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_410 [label="Entry lambda expression", span="483-490", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_411 [label="x.InsertToList(''my-key'', ''0'')", span="485-485", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_412 [label="x.InsertToList(''my-key'', ''1'')", span="486-486", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_415 [label="x.TrimList(''my-key'', 1, 2)", span="489-489", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_414 [label="x.InsertToList(''my-key'', ''3'')", span="488-488", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_416 [label="Exit lambda expression", span="483-490", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_435 [label="Entry lambda expression", span="522-533", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_436 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="524-528", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_437 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="530-530", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_440 [label="Entry lambda expression", span="524-528", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_459 [label="Entry lambda expression", span="556-567", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_460 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="558-562", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_461 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="564-564", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_464 [label="Entry lambda expression", span="558-562", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_462 [label="Assert.Equal(1, recordCount)", span="566-566", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_465 [label="x.InsertToList(''my-key'', ''0'')", span="560-560", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_466 [label="x.TrimList(''another-key'', 1, 0)", span="561-561", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_467 [label="Exit lambda expression", span="558-562", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_64 [label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="86-86", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_65 [label="var job = GetTestJob(sql, jobId)", span="88-88", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_68 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="92-92", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_107 [label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="123-123", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_108 [label="var job = GetTestJob(sql, jobId)", span="125-125", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_135 [label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="143-143", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_152 [label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="164-164", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_166 [label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="179-179", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_227 [label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="251-255", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_253 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="283-287", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_265 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="300-304", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_277 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="317-317", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_316 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="366-370", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_328 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="383-387", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_340 [label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="400-400", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_353 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="414-418", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_391 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="466-470", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_422 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="505-511", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_448 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="541-545", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_5 [label="new SqlServerWriteOnlyTransaction(null)", span="18-18", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_31 [label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="34-34", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_30 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_58 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_59 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_71 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="96-96", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_102 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="115-115", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_111 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="129-129", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_136 [label="var record = sql.Query(''select * from HangFire.JobQueue'').Single()", span="145-145", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_153 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="166-166", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_167 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="181-181", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_228 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="257-257", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_254 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="289-289", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_266 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="306-306", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_317 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="372-372", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_329 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="389-389", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_354 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="420-420", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_392 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="472-472", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_423 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="513-513", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_449 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="547-547", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_72 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="97-97", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_112 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="130-130", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_137 [label="Assert.Equal(''1'', record.JobId.ToString())", span="146-146", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_172 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="189-189", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_173 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="190-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_216 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="241-241", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_217 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="242-242", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_69 [label="Assert.Null(anotherJob.StateName)", span="93-93", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_70 [label="Assert.Null(anotherJob.StateId)", span="94-94", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_109 [label="Assert.Null(job.StateName)", span="126-126", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_110 [label="Assert.Null(job.StateId)", span="127-127", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_139 [label="Assert.Null(record.FetchedAt)", span="148-148", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_352 [label="Entry lambda expression", span="412-423", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_67 [label="Assert.NotNull(job.StateId)", span="90-90", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_75 [label="Assert.NotNull(jobState.CreatedAt)", span="100-100", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_115 [label="Assert.NotNull(jobState.CreatedAt)", span="133-133", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_170 [label="Assert.NotNull(record.ExpireAt)", span="185-185", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_117 [label="Exit lambda expression", span="113-135", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_66 [label="Assert.Equal(''State'', job.StateName)", span="89-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_73 [label="Assert.Equal(''State'', jobState.Name)", span="98-98", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_74 [label="Assert.Equal(''Reason'', jobState.Reason)", span="99-99", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_76 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="101-101", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_113 [label="Assert.Equal(''State'', jobState.Name)", span="131-131", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_114 [label="Assert.Equal(''Reason'', jobState.Reason)", span="132-132", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_116 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="134-134", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_138 [label="Assert.Equal(''default'', record.Queue)", span="147-147", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_154 [label="Assert.Equal(''my-key'', record.Key)", span="168-168", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_155 [label="Assert.Equal(1, record.Value)", span="169-169", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_156 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="170-170", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_168 [label="Assert.Equal(''my-key'', record.Key)", span="183-183", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_169 [label="Assert.Equal(1, record.Value)", span="184-184", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_229 [label="Assert.Equal(2, recordCount)", span="259-259", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_255 [label="Assert.Equal(2, recordCount)", span="291-291", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_267 [label="Assert.Equal(1, recordCount)", span="308-308", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_305 [label="Assert.Equal(0, recordCount)", span="357-357", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_318 [label="Assert.Equal(1, recordCount)", span="374-374", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_330 [label="Assert.Equal(1, recordCount)", span="391-391", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_355 [label="Assert.Equal(2, recordCount)", span="422-422", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_367 [label="Assert.Equal(0, recordCount)", span="440-440", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_381 [label="Assert.Equal(1, recordCount)", span="457-457", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_393 [label="Assert.Equal(1, recordCount)", span="474-474", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_405 [label="Assert.Equal(2, records.Length)", span="494-494", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_406 [label="Assert.Equal(''1'', records[0].Value)", span="495-495", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_407 [label="Assert.Equal(''2'', records[1].Value)", span="496-496", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_424 [label="Assert.Equal(2, recordCount)", span="515-515", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_438 [label="Assert.Equal(0, recordCount)", span="532-532", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_450 [label="Assert.Equal(0, recordCount)", span="549-549", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_159 [label="x.IncrementCounter(''my-key'')", span="164-164", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_202 [label="Entry lambda expression", span="216-216", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_218 [label="Exit lambda expression", span="229-243", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_219 [label="Entry lambda expression", span="231-231", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_230 [label="Exit lambda expression", span="249-260", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_244 [label="Exit lambda expression", span="266-275", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_245 [label="Entry lambda expression", span="268-268", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_294 [label="Exit lambda expression", span="330-341", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_284 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="317-317", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_306 [label="Exit lambda expression", span="347-358", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_310 [label="Exit lambda expression", span="349-353", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_308 [label="x.AddToSet(''my-key'', ''my-value'')", span="351-351", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_309 [label="x.RemoveFromSet(''my-key'', ''my-value'')", span="352-352", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_319 [label="Exit lambda expression", span="364-375", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_327 [label="Entry lambda expression", span="381-392", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_368 [label="Exit lambda expression", span="429-441", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_373 [label="Exit lambda expression", span="431-436", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_346 [label="x.InsertToList(''my-key'', ''my-value'')", span="400-400", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_358 [label="x.InsertToList(''my-key'', ''my-value'')", span="416-416", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_359 [label="x.InsertToList(''my-key'', ''my-value'')", span="417-417", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_396 [label="x.InsertToList(''my-key'', ''my-value'')", span="468-468", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_413 [label="x.InsertToList(''my-key'', ''2'')", span="487-487", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_427 [label="x.InsertToList(''my-key'', ''0'')", span="507-507", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_428 [label="x.InsertToList(''my-key'', ''1'')", span="508-508", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_429 [label="x.InsertToList(''my-key'', ''2'')", span="509-509", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_441 [label="x.InsertToList(''my-key'', ''0'')", span="526-526", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_453 [label="x.InsertToList(''my-key'', ''0'')", span="543-543", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_382 [label="Exit lambda expression", span="447-458", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_264 [label="Entry lambda expression", span="298-309", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_386 [label="Exit lambda expression", span="449-453", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_408 [label="Exit lambda expression", span="481-497", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_57 [label="Entry lambda expression", span="75-102", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_134 [label="Entry lambda expression", span="141-149", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_151 [label="Entry lambda expression", span="162-171", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_165 [label="Entry lambda expression", span="177-191", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_430 [label="x.TrimList(''my-key'', 1, 100)", span="510-510", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_442 [label="x.TrimList(''my-key'', 1, 100)", span="527-527", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_454 [label="x.TrimList(''my-key'', 1, 0)", span="544-544", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_439 [label="Exit lambda expression", span="522-533", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_443 [label="Exit lambda expression", span="524-528", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_463 [label="Exit lambda expression", span="556-567", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_60 [label="var state = new Mock<IState>()", span="80-80", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_63 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="83-84", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_93 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_103 [label="var state = new Mock<IState>()", span="117-117", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_106 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="120-121", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_127 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_141 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_158 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_176 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_231 [label="Entry lambda expression", span="251-255", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_252 [label="Entry lambda expression", span="281-292", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_257 [label="Entry lambda expression", span="283-287", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_269 [label="Entry lambda expression", span="300-304", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_283 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_320 [label="Entry lambda expression", span="366-370", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_332 [label="Entry lambda expression", span="383-387", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_345 [label="Entry lambda expression", span="400-400", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_357 [label="Entry lambda expression", span="414-418", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_390 [label="Entry lambda expression", span="464-475", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_395 [label="Entry lambda expression", span="466-470", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_421 [label="Entry lambda expression", span="503-516", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_426 [label="Entry lambda expression", span="505-511", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_447 [label="Entry lambda expression", span="539-550", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_452 [label="Entry lambda expression", span="541-545", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_4 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_6 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_32 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_94 [label="x.SetJobState(jobId, state.Object)", span="86-86", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_128 [label="x.AddJobState(jobId, state.Object)", span="123-123", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_171 [label="var expireAt = (DateTime) record.ExpireAt", span="187-187", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_174 [label="Exit lambda expression", span="177-191", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_140 [label="Exit lambda expression", span="141-149", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_356 [label="Exit lambda expression", span="412-423", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_77 [label="Exit lambda expression", span="75-102", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_157 [label="Exit lambda expression", span="162-171", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_256 [label="Exit lambda expression", span="281-292", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_268 [label="Exit lambda expression", span="298-309", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_331 [label="Exit lambda expression", span="381-392", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_394 [label="Exit lambda expression", span="464-475", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_425 [label="Exit lambda expression", span="503-516", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_451 [label="Exit lambda expression", span="539-550", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_160 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_204 [label="Exit lambda expression", span="216-216", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_203 [label="x.DecrementCounter(''my-key'')", span="216-216", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_221 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_220 [label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="231-231", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_247 [label="Exit lambda expression", span="268-268", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_246 [label="x.AddToSet(''my-key'', ''my-value'')", span="268-268", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_258 [label="x.AddToSet(''my-key'', ''my-value'')", span="285-285", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_259 [label="x.AddToSet(''my-key'', ''another-value'')", span="286-286", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_270 [label="x.AddToSet(''my-key'', ''my-value'')", span="302-302", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_271 [label="x.AddToSet(''my-key'', ''my-value'')", span="303-303", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_321 [label="x.AddToSet(''my-key'', ''my-value'')", span="368-368", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_333 [label="x.AddToSet(''my-key'', ''my-value'')", span="385-385", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_285 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_347 [label="Exit lambda expression", span="400-400", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_360 [label="Exit lambda expression", span="414-418", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_397 [label="x.RemoveFromList(''different-key'', ''my-value'')", span="469-469", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_431 [label="Exit lambda expression", span="505-511", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_455 [label="Exit lambda expression", span="541-545", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_61 [label="state.Setup(x => x.Name).Returns(''State'')", span="81-81", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_62 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="82-82", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_89 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_95 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_104 [label="state.Setup(x => x.Name).Returns(''State'')", span="118-118", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_105 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="119-119", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_124 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_129 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_143 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_142 [label="x.AddToQueue(''default'', ''1'')", span="143-143", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_178 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_177 [label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="179-179", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_234 [label="Exit lambda expression", span="251-255", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_232 [label="x.DecrementCounter(''my-key'')", span="253-253", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_233 [label="x.DecrementCounter(''my-key'')", span="254-254", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_260 [label="Exit lambda expression", span="283-287", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_272 [label="Exit lambda expression", span="300-304", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_323 [label="Exit lambda expression", span="366-370", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_322 [label="x.RemoveFromSet(''my-key'', ''different-value'')", span="369-369", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_335 [label="Exit lambda expression", span="383-387", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_334 [label="x.RemoveFromSet(''different-key'', ''my-value'')", span="386-386", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_398 [label="Exit lambda expression", span="466-470", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_83 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_86 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_91 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_90 [label="x.SerializeData()", span="83-83", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_118 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_126 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_125 [label="x.SerializeData()", span="120-120", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_85 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_84 [label="x.Name", span="81-81", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_88 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_87 [label="x.Reason", span="82-82", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_120 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_119 [label="x.Name", span="118-118", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_122 [label="x.Reason", span="119-119", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_123 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m68_312 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerMonitoringApi.cs"];
m68_313 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="364-375", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_314 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerMonitoringApi.cs"];
m68_261 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs"];
m68_262 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="298-309", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs"];
m68_263 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs"];
m68_468 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerMonitoringApi.cs"];
m68_470 [label="action(connection)", span="574-574", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerMonitoringApi.cs"];
m68_469 [label="var connection = ConnectionUtils.CreateConnection()", span="572-572", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerMonitoringApi.cs"];
m68_471 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerMonitoringApi.cs"];
m68_175 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs"];
m68_7 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerMonitoringApi.cs"];
m68_456 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerMonitoringApi.cs"];
m68_457 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="556-567", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_458 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerMonitoringApi.cs"];
m68_23 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerMonitoringApi.cs"];
m68_8 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerMonitoringApi.cs"];
m68_10 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="29-41", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_9 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="24-27", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerMonitoringApi.cs"];
m68_11 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerMonitoringApi.cs"];
m68_53 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerMonitoringApi.cs"];
m68_55 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="75-102", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerMonitoringApi.cs"];
m68_54 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="70-73", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerMonitoringApi.cs"];
m68_56 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerMonitoringApi.cs"];
m68_28 [label="Entry Unk.True", span="", cluster="Unk.True", file="SqlServerMonitoringApi.cs"];
m68_349 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs"];
m68_350 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="412-423", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs"];
m68_351 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs"];
m68_144 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerMonitoringApi.cs"];
m68_472 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerMonitoringApi.cs"];
m68_161 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerMonitoringApi.cs"];
m68_205 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerMonitoringApi.cs"];
m68_418 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs"];
m68_419 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="503-516", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs"];
m68_420 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs"];
m68_336 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerMonitoringApi.cs"];
m68_337 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="398-406", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_338 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerMonitoringApi.cs"];
m68_287 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs"];
m68_288 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="330-341", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_289 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs"];
m68_52 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob", file="SqlServerMonitoringApi.cs"];
m68_249 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerMonitoringApi.cs"];
m68_250 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="281-292", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerMonitoringApi.cs"];
m68_251 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerMonitoringApi.cs"];
m68_80 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SqlServerMonitoringApi.cs"];
m68_222 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m68_192 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerMonitoringApi.cs"];
m68_193 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="214-223", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m68_194 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerMonitoringApi.cs"];
m68_479 [label="HangFire.SqlServer.Tests.WriteTransactionFacts", span="", file="SqlServerMonitoringApi.cs"];
m68_480 [label=arrangeSql, span="", file="SqlServerMonitoringApi.cs"];
m68_482 [label=arrangeSql, span="", file="SqlServerMonitoringApi.cs"];
m68_483 [label=jobId, span="", file="SqlServerMonitoringApi.cs"];
m68_481 [label=jobId, span="", file="SqlServerMonitoringApi.cs"];
m68_484 [label=arrangeSql, span="", file="SqlServerMonitoringApi.cs"];
m68_487 [label=arrangeSql, span="", file="SqlServerMonitoringApi.cs"];
m68_485 [label=jobId, span="", file="SqlServerMonitoringApi.cs"];
m68_486 [label=state, span="", file="SqlServerMonitoringApi.cs"];
m68_488 [label=jobId, span="", file="SqlServerMonitoringApi.cs"];
m68_489 [label=state, span="", file="SqlServerMonitoringApi.cs"];
m70_35 [label="Entry Hangfire.IStackTraceFormatter<T>.Line(T)", span="66-66", cluster="Hangfire.IStackTraceFormatter<T>.Line(T)", file="StackTraceFormatter.cs"];
m70_36 [label="Exit Hangfire.IStackTraceFormatter<T>.Line(T)", span="66-66", cluster="Hangfire.IStackTraceFormatter<T>.Line(T)", file="StackTraceFormatter.cs"];
m70_27 [label="Entry Hangfire.IStackTraceFormatter<T>.Method(T)", span="62-62", cluster="Hangfire.IStackTraceFormatter<T>.Method(T)", file="StackTraceFormatter.cs"];
m70_28 [label="Exit Hangfire.IStackTraceFormatter<T>.Method(T)", span="62-62", cluster="Hangfire.IStackTraceFormatter<T>.Method(T)", file="StackTraceFormatter.cs"];
m70_50 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise", file="StackTraceFormatter.cs"];
m70_29 [label="Entry Hangfire.IStackTraceFormatter<T>.ParameterType(T)", span="63-63", cluster="Hangfire.IStackTraceFormatter<T>.ParameterType(T)", file="StackTraceFormatter.cs"];
m70_30 [label="Exit Hangfire.IStackTraceFormatter<T>.ParameterType(T)", span="63-63", cluster="Hangfire.IStackTraceFormatter<T>.ParameterType(T)", file="StackTraceFormatter.cs"];
m70_14 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", span="49-49", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", file="StackTraceFormatter.cs"];
m70_15 [label="return  BeforeParameterName + markup + AfterParameterName;", span="49-49", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", color=red, community=0, file="StackTraceFormatter.cs"];
m70_16 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", span="49-49", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", file="StackTraceFormatter.cs"];
m70_41 [label="Entry string.Concat(System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Concat(System.Collections.Generic.IEnumerable<string>)", file="StackTraceFormatter.cs"];
m70_11 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", span="48-48", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", file="StackTraceFormatter.cs"];
m70_12 [label="return  BeforeParameterType + markup + AfterParameterType;", span="48-48", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", color=red, community=0, file="StackTraceFormatter.cs"];
m70_13 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", span="48-48", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", file="StackTraceFormatter.cs"];
m70_4 [label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0", cluster="System.Net.WebUtility.HtmlEncode(string)", file="StackTraceFormatter.cs"];
m70_40 [label="Entry Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", span="82-82", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", file="StackTraceFormatter.cs"];
m70_42 [label="Debug.Assert(text != null)", span="84-84", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", color=red, community=0, file="StackTraceFormatter.cs"];
m70_43 [label="var frames = StackTraceParser.Parse\r\n                (\r\n                    text,\r\n                    (idx, len, txt) => new\r\n                    {\r\n                        Index   = idx,\r\n                        End     = idx + len,\r\n                        Text    = txt,\r\n                        Markup  = formatter.Text(txt),\r\n                    },\r\n                    (t, m) => new\r\n                    {\r\n                        Type   = new { t.Index, t.End, Markup = formatter.Type(t.Markup)   },\r\n                        Method = new { m.Index, m.End, Markup = formatter.Method(m.Markup) }\r\n                    },\r\n                    (t, n) => new\r\n                    {\r\n                        Type = new { t.Index, t.End, Markup = formatter.ParameterType(t.Markup) },\r\n                        Name = new { n.Index, n.End, Markup = formatter.ParameterName(n.Markup) }\r\n                    },\r\n                    (p, ps) => new { List = p, Parameters = ps.ToArray() },\r\n                    (f, l) => new\r\n                    {\r\n                        File = f.Text.Length > 0\r\n                             ? new { f.Index, f.End, Markup = formatter.File(f.Markup) }\r\n                             : null,\r\n                        Line = l.Text.Length > 0\r\n                             ? new { l.Index, l.End, Markup = formatter.Line(l.Markup) }\r\n                             : null,\r\n                    },\r\n                    (f, tm, p, fl) =>\r\n                        from tokens in new[]\r\n                        {\r\n                            new[]\r\n                            {\r\n                                new { f.Index, End = f.Index, Markup = formatter.BeforeFrame },\r\n                                tm.Type,\r\n                                tm.Method,\r\n                                new { p.List.Index, End = p.List.Index, Markup = formatter.BeforeParameters },\r\n                            },\r\n                            from pe in p.Parameters\r\n                            from e in new[] { pe.Type, pe.Name }\r\n                            select e,\r\n                            new[]\r\n                            {\r\n                                new { Index = p.List.End, p.List.End, Markup = formatter.AfterParameters },\r\n                                fl.File,\r\n                                fl.Line,\r\n                                new { Index = f.End, f.End, Markup = formatter.AfterFrame },\r\n                            },\r\n                        }\r\n                        from token in tokens\r\n                        where token != null\r\n                        select token\r\n                )", span="86-140", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", color=red, community=1, file="StackTraceFormatter.cs"];
m70_44 [label="return\r\n                from token in Enumerable.Repeat(new { Index = 0, End = 0, Markup = default(T) }, 1)\r\n                                        .Concat(from tokens in frames from token in tokens select token)\r\n                                        .Pairwise((prev, curr) => new { Previous = prev, Current = curr })\r\n                from m in new[]\r\n                {\r\n                    formatter.Text(text.Substring(token.Previous.End, token.Current.Index - token.Previous.End)),\r\n                    token.Current.Markup,\r\n                }\r\n                select m;", span="142-151", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", color=red, community=1, file="StackTraceFormatter.cs"];
m70_45 [label="Exit Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", span="82-82", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", file="StackTraceFormatter.cs"];
m70_5 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", span="46-46", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", file="StackTraceFormatter.cs"];
m70_6 [label="return  BeforeType          + markup + AfterType;", span="46-46", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", color=red, community=0, file="StackTraceFormatter.cs"];
m70_7 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", span="46-46", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", file="StackTraceFormatter.cs"];
m70_25 [label="Entry Hangfire.IStackTraceFormatter<T>.Type(T)", span="61-61", cluster="Hangfire.IStackTraceFormatter<T>.Type(T)", file="StackTraceFormatter.cs"];
m70_26 [label="Exit Hangfire.IStackTraceFormatter<T>.Type(T)", span="61-61", cluster="Hangfire.IStackTraceFormatter<T>.Type(T)", file="StackTraceFormatter.cs"];
m70_46 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="StackTraceFormatter.cs"];
m70_47 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="StackTraceFormatter.cs"];
m70_51 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="StackTraceFormatter.cs"];
m70_3 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="StackTraceFormatter.cs"];
m70_71 [label="Entry lambda expression", span="145-145", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_53 [label="new\r\n                    {\r\n                        Index   = idx,\r\n                        End     = idx + len,\r\n                        Text    = txt,\r\n                        Markup  = formatter.Text(txt),\r\n                    }", span="89-95", cluster="lambda expression", color=red, community=1, file="StackTraceFormatter.cs"];
m70_56 [label="new\r\n                    {\r\n                        Type   = new { t.Index, t.End, Markup = formatter.Type(t.Markup)   },\r\n                        Method = new { m.Index, m.End, Markup = formatter.Method(m.Markup) }\r\n                    }", span="96-100", cluster="lambda expression", color=red, community=1, file="StackTraceFormatter.cs"];
m70_59 [label="new\r\n                    {\r\n                        Type = new { t.Index, t.End, Markup = formatter.ParameterType(t.Markup) },\r\n                        Name = new { n.Index, n.End, Markup = formatter.ParameterName(n.Markup) }\r\n                    }", span="101-105", cluster="lambda expression", color=red, community=1, file="StackTraceFormatter.cs"];
m70_66 [label="new\r\n                    {\r\n                        File = f.Text.Length > 0\r\n                             ? new { f.Index, f.End, Markup = formatter.File(f.Markup) }\r\n                             : null,\r\n                        Line = l.Text.Length > 0\r\n                             ? new { l.Index, l.End, Markup = formatter.Line(l.Markup) }\r\n                             : null,\r\n                    }", span="107-115", cluster="lambda expression", color=red, community=1, file="StackTraceFormatter.cs"];
m70_69 [label="from tokens in new[]\r\n                        {\r\n                            new[]\r\n                            {\r\n                                new { f.Index, End = f.Index, Markup = formatter.BeforeFrame },\r\n                                tm.Type,\r\n                                tm.Method,\r\n                                new { p.List.Index, End = p.List.Index, Markup = formatter.BeforeParameters },\r\n                            },\r\n                            from pe in p.Parameters\r\n                            from e in new[] { pe.Type, pe.Name }\r\n                            select e,\r\n                            new[]\r\n                            {\r\n                                new { Index = p.List.End, p.List.End, Markup = formatter.AfterParameters },\r\n                                fl.File,\r\n                                fl.Line,\r\n                                new { Index = f.End, f.End, Markup = formatter.AfterFrame },\r\n                            },\r\n                        }\r\n                        from token in tokens\r\n                        where token != null\r\n                        select token", span="117-139", cluster="lambda expression", color=red, community=1, file="StackTraceFormatter.cs"];
m70_52 [label="Entry lambda expression", span="89-95", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_55 [label="Entry lambda expression", span="96-100", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_58 [label="Entry lambda expression", span="101-105", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_61 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_65 [label="Entry lambda expression", span="107-115", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_68 [label="Entry lambda expression", span="116-139", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_54 [label="Exit lambda expression", span="89-95", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_57 [label="Exit lambda expression", span="96-100", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_60 [label="Exit lambda expression", span="101-105", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_62 [label="new { List = p, Parameters = ps.ToArray() }", span="106-106", cluster="lambda expression", color=red, community=0, file="StackTraceFormatter.cs"];
m70_63 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_67 [label="Exit lambda expression", span="107-115", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_70 [label="Exit lambda expression", span="116-139", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_72 [label="new { Previous = prev, Current = curr }", span="145-145", cluster="lambda expression", color=red, community=0, file="StackTraceFormatter.cs"];
m70_73 [label="Exit lambda expression", span="145-145", cluster="lambda expression", file="StackTraceFormatter.cs"];
m70_0 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", span="45-45", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", file="StackTraceFormatter.cs"];
m70_1 [label="return  string.IsNullOrEmpty(text) ? string.Empty : WebUtility.HtmlEncode(text);", span="45-45", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", color=red, community=0, file="StackTraceFormatter.cs"];
m70_2 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", span="45-45", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", file="StackTraceFormatter.cs"];
m70_33 [label="Entry Hangfire.IStackTraceFormatter<T>.File(T)", span="65-65", cluster="Hangfire.IStackTraceFormatter<T>.File(T)", file="StackTraceFormatter.cs"];
m70_34 [label="Exit Hangfire.IStackTraceFormatter<T>.File(T)", span="65-65", cluster="Hangfire.IStackTraceFormatter<T>.File(T)", file="StackTraceFormatter.cs"];
m70_49 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="StackTraceFormatter.cs"];
m70_23 [label="Entry Hangfire.IStackTraceFormatter<T>.Text(string)", span="60-60", cluster="Hangfire.IStackTraceFormatter<T>.Text(string)", file="StackTraceFormatter.cs"];
m70_24 [label="Exit Hangfire.IStackTraceFormatter<T>.Text(string)", span="60-60", cluster="Hangfire.IStackTraceFormatter<T>.Text(string)", file="StackTraceFormatter.cs"];
m70_17 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", span="50-50", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", file="StackTraceFormatter.cs"];
m70_18 [label="return  BeforeFile          + markup + AfterFile;", span="50-50", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", color=red, community=0, file="StackTraceFormatter.cs"];
m70_19 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", span="50-50", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", file="StackTraceFormatter.cs"];
m70_48 [label="Entry System.Linq.Enumerable.Repeat<TResult>(TResult, int)", span="0-0", cluster="System.Linq.Enumerable.Repeat<TResult>(TResult, int)", file="StackTraceFormatter.cs"];
m70_20 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", span="51-51", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", file="StackTraceFormatter.cs"];
m70_21 [label="return  BeforeLine          + markup + AfterLine;", span="51-51", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", color=red, community=0, file="StackTraceFormatter.cs"];
m70_22 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", span="51-51", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", file="StackTraceFormatter.cs"];
m70_37 [label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="StackTraceFormatter.cs"];
m70_38 [label="return string.Concat(Format(text, formatter ?? DefaultStackTraceHtmlFragments));", span="79-79", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", color=red, community=0, file="StackTraceFormatter.cs"];
m70_39 [label="Exit Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="StackTraceFormatter.cs"];
m70_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="StackTraceFormatter.cs"];
m70_8 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", span="47-47", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", file="StackTraceFormatter.cs"];
m70_9 [label="return  BeforeMethod        + markup + AfterMethod;", span="47-47", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", color=red, community=0, file="StackTraceFormatter.cs"];
m70_10 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", span="47-47", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", file="StackTraceFormatter.cs"];
m70_31 [label="Entry Hangfire.IStackTraceFormatter<T>.ParameterName(T)", span="64-64", cluster="Hangfire.IStackTraceFormatter<T>.ParameterName(T)", file="StackTraceFormatter.cs"];
m70_32 [label="Exit Hangfire.IStackTraceFormatter<T>.ParameterName(T)", span="64-64", cluster="Hangfire.IStackTraceFormatter<T>.ParameterName(T)", file="StackTraceFormatter.cs"];
m70_74 [label="Hangfire.StackTraceHtmlFragments", span="", file="StackTraceFormatter.cs"];
m70_75 [label="Hangfire.IStackTraceFormatter<T>", span="", file="StackTraceFormatter.cs"];
m71_3 [label="Entry HangFire.States.JobState.Apply(IRedisTransaction, string)", span="16-16", cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="StartupConfiguration.cs"];
m71_4 [label="Exit HangFire.States.JobState.Apply(IRedisTransaction, string)", span="16-16", cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="StartupConfiguration.cs"];
m71_8 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StartupConfiguration.cs"];
m71_0 [label="Entry HangFire.States.JobState.JobState(string)", span="7-7", cluster="HangFire.States.JobState.JobState(string)", file="StartupConfiguration.cs"];
m71_1 [label="Reason = reason", span="9-9", cluster="HangFire.States.JobState.JobState(string)", file="StartupConfiguration.cs"];
m71_2 [label="Exit HangFire.States.JobState.JobState(string)", span="7-7", cluster="HangFire.States.JobState.JobState(string)", file="StartupConfiguration.cs"];
m71_5 [label="Entry HangFire.States.JobState.GetProperties()", span="18-18", cluster="HangFire.States.JobState.GetProperties()", file="StartupConfiguration.cs"];
m71_6 [label="return new Dictionary<string, string>();", span="20-20", cluster="HangFire.States.JobState.GetProperties()", file="StartupConfiguration.cs"];
m71_7 [label="Exit HangFire.States.JobState.GetProperties()", span="18-18", cluster="HangFire.States.JobState.GetProperties()", file="StartupConfiguration.cs"];
m71_9 [label="HangFire.States.JobState", span="", file="StartupConfiguration.cs"];
m75_22 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SucceededState.cs"];
m75_30 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44", cluster="HangFire.JobHelper.FromJson<T>(string)", file="SucceededState.cs"];
m75_24 [label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SucceededState.cs"];
m75_25 [label="String.IsNullOrEmpty(name)", span="94-94", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=red, community=0, file="SucceededState.cs"];
m75_27 [label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="96-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=red, community=0, file="SucceededState.cs"];
m75_26 [label="throw new ArgumentNullException(''name'');", span="94-94", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=red, community=0, file="SucceededState.cs"];
m75_28 [label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SucceededState.cs"];
m75_0 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SucceededState.cs"];
m75_1 [label="Debug.Assert(redis != null)", span="28-28", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=green, community=0, file="SucceededState.cs"];
m75_2 [label="Debug.Assert(jobId != null)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="SucceededState.cs"];
m75_3 [label="Debug.Assert(type != null)", span="30-30", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="SucceededState.cs"];
m75_4 [label="Debug.Assert(arguments != null)", span="31-31", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="SucceededState.cs"];
m75_5 [label="Debug.Assert(state != null)", span="32-32", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="SucceededState.cs"];
m75_6 [label="_stateMachine = new StateMachine(redis)", span="34-34", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="SucceededState.cs"];
m75_7 [label="JobId = jobId", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="SucceededState.cs"];
m75_8 [label="Type = type", span="37-37", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=green, community=0, file="SucceededState.cs"];
m75_9 [label="State = state", span="38-38", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="SucceededState.cs"];
m75_10 [label="_jobParameters[''Type''] = type.AssemblyQualifiedName", span="40-40", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="SucceededState.cs"];
m75_11 [label="_jobParameters[''Args''] = JobHelper.ToJson(arguments)", span="41-41", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=red, community=0, file="SucceededState.cs"];
m75_12 [label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SucceededState.cs"];
m75_21 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SucceededState.cs"];
m75_16 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SucceededState.cs"];
m75_17 [label="String.IsNullOrEmpty(name)", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=red, community=0, file="SucceededState.cs"];
m75_19 [label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="77-77", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=red, community=0, file="SucceededState.cs"];
m75_18 [label="throw new ArgumentNullException(''name'');", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=red, community=0, file="SucceededState.cs"];
m75_20 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SucceededState.cs"];
m75_34 [label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SucceededState.cs"];
m75_31 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="101-101", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SucceededState.cs"];
m75_32 [label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="103-103", cluster="HangFire.Client.ClientJobDescriptor.Create()", color=red, community=0, file="SucceededState.cs"];
m75_33 [label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="101-101", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SucceededState.cs"];
m75_15 [label="Entry HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="SucceededState.cs"];
m75_29 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SucceededState.cs"];
m75_23 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SucceededState.cs"];
m75_13 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="SucceededState.cs"];
m75_14 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="SucceededState.cs"];
m75_35 [label="HangFire.Client.ClientJobDescriptor", span="", file="SucceededState.cs"];
m76_0 [label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="8-8", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs"];
m76_1 [label="!t.GetTypeInfo().IsGenericType", span="10-10", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=red, community=0, file="TypeExtensions.cs"];
m76_2 [label="return t.Name;", span="12-12", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs"];
m76_3 [label="var genericTypeName = t.GetGenericTypeDefinition().Name", span="15-15", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs"];
m76_5 [label="var genericArgs = string.Join('','', t.GetGenericArguments().Select(ToGenericTypeString).ToArray())", span="18-18", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs"];
m76_4 [label="genericTypeName = genericTypeName.Substring(0, genericTypeName.IndexOf('`'))", span="16-16", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs"];
m76_6 [label="return genericTypeName + ''<'' + genericArgs + ''>'';", span="20-20", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs"];
m76_7 [label="Exit Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="8-8", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs"];
m76_9 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="TypeExtensions.cs"];
m76_10 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="TypeExtensions.cs"];
m76_15 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="TypeExtensions.cs"];
m76_12 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="TypeExtensions.cs"];
m76_14 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="TypeExtensions.cs"];
m76_8 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", file="TypeExtensions.cs"];
m76_11 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="TypeExtensions.cs"];
m76_13 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="TypeExtensions.cs"];
m77_63 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="Worker.cs"];
m77_16 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="134-141", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs"];
m77_59 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Worker.cs"];
m77_60 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38", cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="Worker.cs"];
m77_61 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="Worker.cs"];
m77_89 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="Worker.cs"];
m77_93 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="Worker.cs"];
m77_45 [label="job.Value.ScheduledAt != null", span="320-320", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs"];
m77_56 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="Worker.cs"];
m77_64 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="Worker.cs"];
m77_57 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="Worker.cs"];
m77_62 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33", cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="Worker.cs"];
m77_51 [label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="356-356", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs"];
m77_55 [label="Entry Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="164-164", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_48 [label="WriteLiteral(''\''>\n                                '')", span="336-336", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs"];
m77_70 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="Worker.cs"];
m77_74 [label="var result = _performer.Perform(performContext)", span="188-188", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_69 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="Worker.cs"];
m77_71 [label="HangFire.Web.Pages.ScheduledJobsPage", span="", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_73 [label="var duration = Stopwatch.StartNew()", span="186-186", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_75 [label="duration.Stop()", span="189-189", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_76 [label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="191-191", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_65 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="Worker.cs"];
m77_67 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="Worker.cs"];
m77_68 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="Worker.cs"];
m77_72 [label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="185-185", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_78 [label="throw;", span="195-195", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_80 [label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="199-202", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_82 [label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during processing of a background job.''\r\n                };", span="206-209", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_66 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="Worker.cs"];
m77_77 [label=OperationCanceledException, span="193-193", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_79 [label=JobPerformanceException, span="197-197", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_81 [label=Exception, span="204-204", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_83 [label="Exit Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="164-164", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m77_91 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="Worker.cs"];
m77_92 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="Worker.cs"];
m77_84 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs"];
m77_19 [label=scheduledJobs, span="171-171", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs"];
m77_47 [label="Write(JobHelper.ToTimestamp(job.Value.ScheduledAt.Value))", span="331-331", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs"];
m77_54 [label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs"];
m77_58 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="Worker.cs"];
m77_85 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="Worker.cs"];
m77_0 [label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs"];
m77_1 [label="WriteLiteral(''\n'')", span="51-51", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=red, community=0, file="Worker.cs"];
m77_2 [label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=red, community=0, file="Worker.cs"];
m77_3 [label="int from, perPage", span="64-64", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs"];
m77_4 [label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="Worker.cs"];
m77_5 [label="queues == null", span="65-65", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="Worker.cs"];
m77_7 [label="performer == null", span="66-66", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="Worker.cs"];
m77_6 [label="throw new ArgumentNullException(''queues'');", span="65-65", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="Worker.cs"];
m77_8 [label="throw new ArgumentNullException(''performer'');", span="66-66", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="Worker.cs"];
m77_10 [label="throw new ArgumentNullException(''stateChanger'');", span="67-67", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", color=green, community=0];
m77_17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Worker.cs"];
m77_53 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="Worker.cs"];
m77_9 [label="stateChanger == null", span="67-67", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="Worker.cs"];
m77_11 [label="_queues = queues.ToArray()", span="69-69", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="Worker.cs"];
m77_12 [label="_performer = performer", span="70-70", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m77_13 [label="_stateChanger = stateChanger", span="71-71", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m77_14 [label="_workerId = Guid.NewGuid().ToString()", span="72-72", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="Worker.cs"];
m77_15 [label="Exit Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="Worker.cs"];
m77_18 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", color=red, community=0, file="Worker.cs"];
m77_20 [label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_52 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="Worker.cs"];
m77_21 [label="context == null", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs"];
m77_22 [label="throw new ArgumentNullException(''context'');", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_23 [label="var connection = context.Storage.GetConnection()", span="80-80", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_24 [label="var fetchedJob = connection.FetchNextJob(_queues, context.CancellationToken)", span="81-81", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_25 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="83-83", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_26 [label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="87-87", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs"];
m77_29 [label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId,\r\n                            processingState,\r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token))", span="94-100", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", color=green, community=0];
m77_27 [label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="88-90", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", color=green, community=0];
m77_30 [label="appliedState == null || !appliedState.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="104-104", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_28 [label="var processingState = new ProcessingState(context.ServerId, _workerId)", span="92-92", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", color=green, community=0];
m77_31 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="108-108", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_32 [label="fetchedJob.RemoveFromQueue()", span="111-111", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_33 [label="return;", span="112-112", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_34 [label="var state = PerformJob(context, connection, fetchedJob.JobId)", span="121-121", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_35 [label="state != null", span="123-123", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_36 [label="_stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId, \r\n                            state, \r\n                            ProcessingState.StateName))", span="126-131", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", color=green, community=0];
m77_37 [label="fetchedJob.RemoveFromQueue()", span="139-139", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_38 [label=JobAbortedException, span="144-144", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_39 [label="fetchedJob.RemoveFromQueue()", span="146-146", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", color=green, community=0];
m77_40 [label=Exception, span="148-148", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_41 [label="Logger.DebugException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="150-150", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_42 [label="fetchedJob.Requeue()", span="152-152", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", color=green, community=0];
m77_43 [label="throw;", span="153-153", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_44 [label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m77_46 [label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36", cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs"];
m77_49 [label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="Worker.cs"];
m77_50 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="Worker.cs"];
m77_90 [label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20", cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="Worker.cs"];
m77_87 [label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", file="Worker.cs"];
m77_88 [label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", span="36-36", cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", file="Worker.cs"];
m77_86 [label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="Worker.cs"];
m77_94 [label="Hangfire.Server.Worker", span="", file="Worker.cs"];
m80_31 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="WorkerFacts.cs"];
m80_35 [label="Entry Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", span="132-132", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="WorkerFacts.cs"];
m80_80 [label="filters.Reverse()", span="135-135", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="WorkerFacts.cs"];
m80_81 [label="filter.OnClientException(context)", span="137-137", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="WorkerFacts.cs"];
m80_82 [label="Exit Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", span="132-132", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="WorkerFacts.cs"];
m80_46 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="WorkerFacts.cs"];
m80_16 [label="Entry Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="45-45", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs"];
m80_21 [label="var filterInfo = GetFilters(context.Job)", span="50-50", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs"];
m80_19 [label="creator == null", span="48-48", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs"];
m80_22 [label="var createdContext = CreateWithFilters(context, creator, filterInfo.ClientFilters)", span="54-54", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs"];
m80_26 [label="InvokeExceptionFilters(exceptionContext, filterInfo.ClientExceptionFilters)", span="61-61", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs"];
m80_23 [label="return createdContext.JobId;", span="55-55", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs"];
m80_25 [label="var exceptionContext = new ClientExceptionContext(context, ex)", span="59-59", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs"];
m80_24 [label=Exception, span="57-57", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs"];
m80_27 [label="!exceptionContext.ExceptionHandled", span="62-62", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs"];
m80_28 [label="throw;", span="64-64", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs"];
m80_29 [label="return null;", span="67-67", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs"];
m80_17 [label="context == null", span="47-47", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs"];
m80_20 [label="throw new ArgumentNullException(''creator'');", span="48-48", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs"];
m80_18 [label="throw new ArgumentNullException(''context'');", span="47-47", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs"];
m80_30 [label="Exit Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="45-45", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs"];
m80_39 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="WorkerFacts.cs"];
m80_79 [label="Entry Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", span="33-33", cluster="Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", file="WorkerFacts.cs"];
m80_48 [label="Entry Unk.thunk", span="", cluster="Unk.thunk", file="WorkerFacts.cs"];
m80_45 [label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="32-32", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="WorkerFacts.cs"];
m80_47 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="WorkerFacts.cs"];
m80_77 [label="Entry Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", span="27-27", cluster="Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", file="WorkerFacts.cs"];
m80_53 [label="Entry Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="24-24", cluster="Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="WorkerFacts.cs"];
m80_83 [label="Entry Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", span="27-27", cluster="Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", file="WorkerFacts.cs"];
m80_54 [label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", span="27-27", cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="WorkerFacts.cs"];
m80_3 [label="Exit HangFire.Tests.CustomJob.Perform()", span="10-10", cluster="HangFire.Tests.CustomJob.Perform()", file="WorkerFacts.cs"];
m80_1 [label="LastArticleId = ArticleId", span="12-12", cluster="HangFire.Tests.CustomJob.Perform()", color=green, community=0, file="WorkerFacts.cs"];
m80_0 [label="Entry HangFire.Tests.CustomJob.Perform()", span="10-10", cluster="HangFire.Tests.CustomJob.Perform()", file="WorkerFacts.cs"];
m80_2 [label="LastAuthor = Author", span="13-13", cluster="HangFire.Tests.CustomJob.Perform()", file="WorkerFacts.cs"];
m80_4 [label="HangFire.Tests.CustomJob", span="", cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess()", file="WorkerFacts.cs"];
m80_12 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="WorkerFacts.cs"];
m80_50 [label="var jobId = creator.CreateJob(context.Job, preContext.Parameters, context.InitialState)", span="84-84", cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs"];
m80_49 [label="Entry lambda expression", span="82-86", cluster="lambda expression", file="WorkerFacts.cs"];
m80_51 [label="return new CreatedContext(context, jobId, false, null);", span="85-85", cluster="lambda expression", file="WorkerFacts.cs"];
m80_55 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="WorkerFacts.cs"];
m80_58 [label="InvokeClientFilter(filter, preContext, next)", span="89-89", cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs"];
m80_57 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="WorkerFacts.cs"];
m80_59 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="WorkerFacts.cs"];
m80_52 [label="Exit lambda expression", span="82-86", cluster="lambda expression", file="WorkerFacts.cs"];
m80_56 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="WorkerFacts.cs"];
m80_9 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="42-42", cluster="lambda expression", file="WorkerFacts.cs"];
m80_8 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="WorkerFacts.cs"];
m80_10 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="WorkerFacts.cs"];
m80_13 [label="new JobFilter(f, JobFilterScope.Type, null)", span="42-42", cluster="lambda expression", file="WorkerFacts.cs"];
m80_14 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="WorkerFacts.cs"];
m80_11 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="WorkerFacts.cs"];
m80_32 [label="Entry Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", span="71-71", cluster="Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", file="WorkerFacts.cs"];
m80_36 [label="return new JobFilterInfo(_getFiltersThunk(job));", span="73-73", cluster="Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", file="WorkerFacts.cs"];
m80_37 [label="Exit Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", span="71-71", cluster="Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", file="WorkerFacts.cs"];
m80_34 [label="Entry Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", span="26-26", cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", file="WorkerFacts.cs"];
m80_33 [label="Entry Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="76-76", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="WorkerFacts.cs"];
m80_41 [label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                var jobId = creator.CreateJob(context.Job, preContext.Parameters, context.InitialState);\r\n                return new CreatedContext(context, jobId, false, null);\r\n            }", span="82-86", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", color=green, community=0, file="WorkerFacts.cs"];
m80_40 [label="var preContext = new CreatingContext(context)", span="81-81", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="WorkerFacts.cs"];
m80_42 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="88-89", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", color=green, community=0, file="WorkerFacts.cs"];
m80_43 [label="return thunk();", span="91-91", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", color=green, community=0, file="WorkerFacts.cs"];
m80_44 [label="Exit Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="76-76", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="WorkerFacts.cs"];
m80_60 [label="Entry Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="94-94", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_65 [label="CreatedContext postContext", span="106-106", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", color=green, community=0, file="WorkerFacts.cs"];
m80_64 [label="var wasError = false", span="105-105", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_66 [label="postContext = continuation()", span="109-109", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_75 [label="return postContext;", span="129-129", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", color=green, community=0, file="WorkerFacts.cs"];
m80_69 [label="postContext = new CreatedContext(preContext, null, false, ex)", span="114-114", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_74 [label="filter.OnCreated(postContext)", span="126-126", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_73 [label="!wasError", span="124-124", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_72 [label="throw;", span="120-120", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", color=green, community=0, file="WorkerFacts.cs"];
m80_71 [label="!postContext.ExceptionHandled", span="118-118", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_61 [label="filter.OnCreating(preContext)", span="99-99", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_62 [label="preContext.Canceled", span="100-100", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_63 [label="return new CreatedContext(preContext, null, true, null);", span="102-102", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_70 [label="filter.OnCreated(postContext)", span="116-116", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_67 [label=Exception, span="111-111", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_68 [label="wasError = true", span="113-113", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_76 [label="Exit Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="94-94", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs"];
m80_38 [label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40", cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="WorkerFacts.cs"];
m80_15 [label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38", cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="WorkerFacts.cs"];
m80_5 [label="Entry Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="WorkerFacts.cs"];
m80_6 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="42-42", cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="WorkerFacts.cs"];
m80_7 [label="Exit Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="WorkerFacts.cs"];
m80_78 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="WorkerFacts.cs"];
m80_84 [label="Hangfire.Client.DefaultJobCreationProcess", span="", file="WorkerFacts.cs"];
m80_86 [label="Hangfire.Client.CreateContext", span="", file="WorkerFacts.cs"];
m80_87 [label="Hangfire.Client.IJobCreator", span="", file="WorkerFacts.cs"];
m80_88 [label=preContext, span="", file="WorkerFacts.cs"];
m80_89 [label="System.Func<Hangfire.Client.CreatedContext>", span="", file="WorkerFacts.cs"];
m80_90 [label="Hangfire.Client.IClientFilter", span="", file="WorkerFacts.cs"];
m80_85 [label="System.Collections.Generic.IEnumerable<object>", span="", file="WorkerFacts.cs"];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=green, label="System.Collections.Generic.IList<string>"];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_5 -> m2_6  [key=0, style=solid, color=green];
m2_5 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_6 -> m2_7  [key=0, style=solid, color=green];
m2_6 -> m2_11  [key=2, style=dotted, color=green];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_12  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_5  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.ClientExceptionContext"];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_13 -> m2_2  [key=1, style=dashed, color=green, label="HangFire.Tests.TestStateChangingFilter"];
m2_13 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m2_13 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m2_13 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m2_13 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m2_13 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_0 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_3  [key=0, style=solid, color=green];
m3_3 -> m3_4  [key=0, style=solid, color=red];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_2 -> m3_6  [key=0, style=solid, color=green];
m3_2 -> m3_7  [key=2, style=dotted, color=green];
m3_6 -> m3_0  [key=0, style=bold, color=blue];
m3_8 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJob"];
m3_8 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJob"];
m3_8 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJob"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m5_16 -> m5_18  [key=0, style=solid, color=red];
m5_16 -> m5_30  [key=2, style=dotted, color=red];
m5_16 -> m5_23  [key=1, style=dashed, color=red, label=jobId];
m5_16 -> m5_38  [key=1, style=dashed, color=red, label=jobId];
m5_16 -> m5_24  [key=1, style=dashed, color=red, label=jobId];
m5_16 -> m5_43  [key=1, style=dashed, color=red, label=jobId];
m5_16 -> m5_26  [key=1, style=dashed, color=red, label=jobId];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_2 -> m5_3  [key=0, style=solid, color=green];
m5_2 -> m5_5  [key=2, style=dotted, color=red];
m5_2 -> m5_7  [key=1, style=dashed, color=green, label="string[]"];
m5_2 -> m5_9  [key=1, style=dashed, color=green, label="System.Reflection.MethodInfo"];
m5_2 -> m5_11  [key=1, style=dashed, color=green, label="System.Type"];
m5_2 -> m5_12  [key=1, style=dashed, color=green, label="System.Reflection.MethodInfo"];
m5_2 -> m5_13  [key=1, style=dashed, color=green, label="string[]"];
m5_3 -> m5_4  [key=0, style=solid, color=green];
m5_3 -> m5_5  [key=0, style=solid, color=green];
m5_4 -> m5_0  [key=0, style=bold, color=blue];
m5_4 -> m5_15  [key=0, style=solid, color=green];
m5_4 -> m5_16  [key=2, style=dotted, color=green];
m5_18 -> m5_76  [key=0, style=solid];
m5_18 -> m5_9  [key=0, style=solid, color=red];
m5_18 -> m5_19  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_80  [key=0, style=solid];
m5_78 -> m5_93  [key=2, style=dotted];
m5_79 -> m5_92  [key=0, style=solid];
m5_79 -> m5_94  [key=2, style=dotted];
m5_79 -> m5_95  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_82  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_84  [key=0, style=solid];
m5_82 -> m5_93  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_96  [key=2, style=dotted];
m5_84 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_87  [key=0, style=solid];
m5_77 -> m5_92  [key=0, style=solid];
m5_77 -> m5_63  [key=2, style=dotted];
m5_81 -> m5_92  [key=0, style=solid];
m5_81 -> m5_63  [key=2, style=dotted];
m5_83 -> m5_92  [key=0, style=solid];
m5_83 -> m5_63  [key=2, style=dotted];
m5_87 -> m5_92  [key=0, style=solid];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_86 -> m5_92  [key=0, style=solid];
m5_86 -> m5_94  [key=2, style=dotted];
m5_89 -> m5_92  [key=0, style=solid];
m5_89 -> m5_63  [key=2, style=dotted];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_63  [key=2, style=dotted];
m5_90 -> m5_87  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_90  [key=0, style=solid];
m5_92 -> m5_18  [key=0, style=bold, color=blue];
m5_33 -> m5_107  [key=0, style=solid];
m5_33 -> m5_19  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.IJobCancellationToken cancellationToken"];
m5_33 -> m5_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IJobCancellationToken"];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_96  [key=2, style=dotted];
m5_107 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m5_107 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_128  [key=2, style=dotted];
m5_108 -> m5_122  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_108 -> m5_124  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_112 -> m5_119  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_112 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_110 -> m5_110  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_124  [key=0, style=solid];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_114  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_111 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_111 -> m5_118  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_111 -> m5_120  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_109 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_109 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_132  [key=2, style=dotted];
m5_124 -> m5_127  [key=0, style=solid];
m5_124 -> m5_133  [key=2, style=dotted];
m5_113 -> m5_112  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m5_113 -> m5_33  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m5_113 -> m5_114  [key=0, style=solid];
m5_116 -> m5_122  [key=0, style=solid];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_129  [key=2, style=dotted];
m5_119 -> m5_122  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_131  [key=2, style=dotted];
m5_115 -> m5_122  [key=0, style=solid];
m5_114 -> m5_93  [key=2, style=dotted];
m5_114 -> m5_116  [key=0, style=solid];
m5_114 -> m5_115  [key=0, style=solid];
m5_123 -> m5_110  [key=0, style=solid];
m5_123 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_120  [key=0, style=solid];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_130  [key=2, style=dotted];
m5_117 -> m5_118  [key=0, style=solid];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_106  [key=2, style=dotted];
m5_125 -> m5_126  [key=0, style=solid];
m5_127 -> m5_33  [key=0, style=bold, color=blue];
m5_36 -> m5_39  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid, color=green];
m5_41 -> m5_43  [key=2, style=dotted, color=green];
m5_41 -> m5_39  [key=2, style=dotted, color=green];
m5_47 -> m5_48  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid, color=green];
m5_29 -> m5_34  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid, color=green];
m5_5 -> m5_6  [key=0, style=solid, color=green];
m5_5 -> m5_7  [key=0, style=solid, color=green];
m5_6 -> m5_15  [key=0, style=solid, color=green];
m5_6 -> m5_16  [key=2, style=dotted, color=green];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_7 -> m5_8  [key=0, style=solid, color=red];
m5_7 -> m5_9  [key=0, style=solid, color=green];
m5_8 -> m5_15  [key=0, style=solid, color=green];
m5_8 -> m5_16  [key=2, style=dotted, color=green];
m5_8 -> m5_9  [key=0, style=solid, color=red];
m5_9 -> m5_10  [key=0, style=solid, color=red];
m5_9 -> m5_11  [key=0, style=solid, color=green];
m5_10 -> m5_15  [key=0, style=solid, color=green];
m5_10 -> m5_17  [key=2, style=dotted, color=green];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_28  [key=2, style=dotted];
m5_10 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_11 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m5_11 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_12 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m5_12 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m5_13 -> m5_14  [key=0, style=solid, color=red];
m5_13 -> m5_29  [key=2, style=dotted, color=red];
m5_13 -> m5_16  [key=1, style=dashed, color=red, label=queueKey];
m5_13 -> m5_17  [key=1, style=dashed, color=red, label=queueKey];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_18  [key=2, style=dotted];
m5_14 -> m5_29  [key=2, style=dotted];
m5_14 -> m5_16  [key=1, style=dashed, color=red, label=fetchedKey];
m5_14 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m5_15 -> m5_2  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid, color=red];
m5_15 -> m5_17  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_37 -> m5_35  [key=0, style=bold, color=blue];
m5_37 -> m5_38  [key=0, style=solid];
m5_32 -> m5_97  [key=0, style=solid];
m5_32 -> m5_19  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.JobActivator activator"];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_104  [key=2, style=dotted];
m5_97 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_99 -> m5_103  [key=0, style=solid];
m5_99 -> m5_65  [key=2, style=dotted];
m5_99 -> m5_105  [key=2, style=dotted];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_100  [key=0, style=solid];
m5_100 -> m5_103  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_106  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_103 -> m5_32  [key=0, style=bold, color=blue];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label="?"];
m5_46 -> m5_49  [key=1, style=dashed, color=red, label="?"];
m5_46 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label="?"];
m5_46 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="?"];
m5_19 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobActivator"];
m5_19 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IJobCancellationToken"];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IJobCancellationToken"];
m5_19 -> m5_25  [key=3, color=darkorchid, style=bold, label="method methodReturn object Perform"];
m5_19 -> m5_32  [key=2, style=dotted];
m5_19 -> m5_24  [key=1, style=dashed, color=red, label=invocationData];
m5_19 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_19 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_19 -> m5_49  [key=1, style=dashed, color=red, label=invocationData];
m5_19 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=0, style=solid];
m5_26 -> m5_36  [key=2, style=dotted];
m5_27 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_32  [key=2, style=dotted];
m5_27 -> m5_6  [key=0, style=bold, color=blue];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_33  [key=2, style=dotted];
m5_21 -> m5_16  [key=2, style=dotted];
m5_21 -> m5_31  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_23 -> m5_16  [key=2, style=dotted];
m5_23 -> m5_31  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid, color=red];
m5_23 -> m5_34  [key=2, style=dotted];
m5_23 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_24 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_24 -> m5_24  [key=3, color=darkorchid, style=bold, label="Local variable object instance"];
m5_24 -> m5_25  [key=0, style=solid, color=red];
m5_24 -> m5_32  [key=3, color=darkorchid, style=bold, label="Local variable object instance"];
m5_24 -> m5_34  [key=2, style=dotted, color=red];
m5_24 -> m5_42  [key=1, style=dashed, color=red, label="lambda expression"];
m5_24 -> m5_46  [key=1, style=dashed, color=red, label="lambda expression"];
m5_24 -> m5_26  [key=1, style=dashed, color=red, label=arguments];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_34  [key=3, color=darkorchid, style=bold, label="Local variable object result"];
m5_25 -> m5_35  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=0, style=solid];
m5_22 -> m5_33  [key=2, style=dotted];
m5_22 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m5_31 -> m5_19  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_29  [key=2, style=dotted];
m5_38 -> m5_40  [key=2, style=dotted];
m5_38 -> m5_41  [key=2, style=dotted];
m5_64 -> m5_167  [key=0, style=solid];
m5_64 -> m5_168  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m5_64 -> m5_171  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_161  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_168 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=constantExpression];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_173  [key=2, style=dotted];
m5_170 -> m5_172  [key=0, style=solid];
m5_169 -> m5_171  [key=0, style=solid];
m5_169 -> m5_170  [key=0, style=solid];
m5_172 -> m5_64  [key=0, style=bold, color=blue];
m5_34 -> m5_28  [key=3, color=darkorchid, style=bold, label="Parameter variable object[] deserializedArguments"];
m5_34 -> m5_134  [key=0, style=solid];
m5_34 -> m5_24  [key=3, color=darkorchid, style=bold, label="Parameter variable object instance"];
m5_134 -> m5_139  [key=0, style=solid];
m5_134 -> m5_140  [key=2, style=dotted];
m5_137 -> m5_139  [key=0, style=solid];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_106  [key=2, style=dotted];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_138  [key=0, style=solid];
m5_135 -> m5_136  [key=0, style=solid];
m5_139 -> m5_34  [key=0, style=bold, color=blue];
m5_67 -> m5_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.MethodCallExpression callExpression"];
m5_67 -> m5_71  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.MethodCallExpression callExpression"];
m5_67 -> m5_149  [key=0, style=solid];
m5_67 -> m5_150  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.MethodCallExpression"];
m5_153 -> m5_24  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_158  [key=1, style=dashed, color=darkseagreen4, label=value];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_161  [key=2, style=dotted];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_162  [key=2, style=dotted];
m5_150 -> m5_163  [key=2, style=dotted];
m5_150 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_159  [key=0, style=solid];
m5_152 -> m5_154  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_152 -> m5_155  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_152 -> m5_156  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_152 -> m5_157  [key=1, style=dashed, color=darkseagreen4, label=argument];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_158  [key=0, style=solid];
m5_158 -> m5_132  [key=2, style=dotted];
m5_158 -> m5_152  [key=0, style=solid];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_133  [key=2, style=dotted];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_158  [key=1, style=dashed, color=darkseagreen4, label=serializedArguments];
m5_151 -> m5_159  [key=1, style=dashed, color=darkseagreen4, label=serializedArguments];
m5_151 -> m5_164  [key=2, style=dotted];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_157  [key=0, style=solid];
m5_156 -> m5_158  [key=0, style=solid];
m5_156 -> m5_165  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_166  [key=2, style=dotted];
m5_160 -> m5_67  [key=0, style=bold, color=blue];
m5_68 -> m5_69  [key=0, style=solid, color=green];
m5_68 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m5_69 -> m5_70  [key=0, style=solid, color=green];
m5_69 -> m5_71  [key=0, style=solid, color=green];
m5_70 -> m5_75  [key=0, style=solid, color=green];
m5_70 -> m5_16  [key=2, style=dotted, color=green];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_74 -> m5_2  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_67  [key=2, style=dotted];
m5_72 -> m5_74  [key=0, style=solid];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_75  [key=0, style=solid];
m5_73 -> m5_63  [key=2, style=dotted];
m5_75 -> m5_68  [key=0, style=bold, color=blue];
m5_39 -> m5_44  [key=0, style=solid];
m5_39 -> m5_37  [key=0, style=bold, color=blue];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [key=2, style=dotted];
m5_44 -> m5_47  [key=2, style=dotted];
m5_44 -> m5_42  [key=0, style=bold, color=blue];
m5_45 -> m5_39  [key=0, style=bold, color=blue];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_29  [key=2, style=dotted];
m5_43 -> m5_45  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid, color=red];
m5_48 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m5_49 -> m5_50  [key=0, style=solid, color=red];
m5_49 -> m5_51  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_40  [key=0, style=bold, color=blue];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label=args];
m5_50 -> m5_16  [key=2, style=dotted];
m5_50 -> m5_62  [key=0, style=solid];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_60  [key=1, style=dashed, color=green, label=callExpression];
m5_51 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_51 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_51 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_52 -> m5_46  [key=0, style=bold, color=blue];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_54  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid, color=green];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_31  [key=2, style=dotted];
m5_17 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_17 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_17 -> m5_24  [key=1, style=dashed, color=red, label=jobId];
m5_17 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_17 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_141 -> m5_24  [key=3, color=darkorchid, style=bold, label="Parameter variable object instance"];
m5_141 -> m5_142  [key=0, style=solid];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label=disposable];
m5_143 -> m5_147  [key=0, style=solid];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_145  [key=0, style=solid];
m5_144 -> m5_147  [key=0, style=solid];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_148  [key=2, style=dotted];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_106  [key=2, style=dotted];
m5_145 -> m5_146  [key=0, style=solid];
m5_147 -> m5_141  [key=0, style=bold, color=blue];
m5_174 -> m5_175  [key=0, style=solid];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_177  [key=2, style=dotted];
m5_175 -> m5_95  [key=2, style=dotted];
m5_176 -> m5_174  [key=0, style=bold, color=blue];
m5_60 -> m5_61  [key=0, style=solid, color=green];
m5_55 -> m5_60  [key=0, style=solid, color=green];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_55 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_55 -> m5_49  [key=1, style=dashed, color=red, label=invocationData];
m5_61 -> m5_2  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_67  [key=2, style=dotted];
m5_59 -> m5_61  [key=0, style=solid, color=green];
m5_59 -> m5_66  [key=2, style=dotted, color=green];
m5_56 -> m5_59  [key=1, style=dashed, color=green, label=objectValue];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_64  [key=2, style=dotted];
m5_57 -> m5_59  [key=0, style=solid, color=green];
m5_57 -> m5_58  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_54 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_58 -> m5_62  [key=0, style=solid];
m5_58 -> m5_65  [key=2, style=dotted];
m5_53 -> m5_62  [key=0, style=solid];
m5_53 -> m5_63  [key=2, style=dotted];
m5_53 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m5_53 -> m5_2  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisJobFetcher"];
m5_53 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m5_53 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m5_53 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m5_53 -> m5_16  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisJobFetcher"];
m5_53 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m5_53 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m5_62 -> m5_48  [key=0, style=bold, color=blue];
m5_178 -> m5_11  [key=1, style=dashed, color=green, label="Hangfire.Common.Job"];
m5_178 -> m5_12  [key=1, style=dashed, color=green, label="Hangfire.Common.Job"];
m5_178 -> m5_13  [key=1, style=dashed, color=green, label="Hangfire.Common.Job"];
m5_178 -> m5_41  [key=1, style=dashed, color=green, label="Hangfire.Common.Job"];
m5_178 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_178 -> m5_175  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m6_36 -> m6_34  [key=0, style=bold, color=blue];
m6_35 -> m6_36  [key=0, style=solid, color=green];
m6_35 -> m6_11  [key=2, style=dotted, color=green];
m6_35 -> m6_37  [key=1, style=dashed, color=green, label="lambda expression"];
m6_34 -> m6_35  [key=0, style=solid, color=green];
m6_201 -> m6_202  [key=0, style=solid];
m6_202 -> m6_11  [key=2, style=dotted];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_203 -> m6_201  [key=0, style=bold, color=blue];
m6_175 -> m6_176  [key=0, style=solid];
m6_176 -> m6_11  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_176 -> m6_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_177 -> m6_175  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_9 -> m6_10  [key=0, style=solid, color=green];
m6_9 -> m6_11  [key=2, style=dotted, color=green];
m6_9 -> m6_12  [key=1, style=dashed, color=green, label="lambda expression"];
m6_9 -> m6_63  [key=3, color=green, style=bold, label="Field variable Hangfire.BackgroundJobServerOptions _options"];
m6_10 -> m6_8  [key=0, style=bold, color=blue];
m6_64 -> m6_62  [key=0, style=bold, color=blue];
m6_63 -> m6_64  [key=0, style=solid, color=green];
m6_63 -> m6_11  [key=2, style=dotted, color=green];
m6_63 -> m6_65  [key=1, style=dashed, color=green, label="lambda expression"];
m6_62 -> m6_63  [key=0, style=solid, color=green];
m6_267 -> m6_268  [key=0, style=solid];
m6_268 -> m6_11  [key=2, style=dotted];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_269 -> m6_267  [key=0, style=bold, color=blue];
m6_25 -> m6_325  [key=0, style=solid];
m6_25 -> m6_326  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.Redis.RedisWriteOnlyTransaction>"];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_329  [key=2, style=dotted];
m6_325 -> m6_330  [key=2, style=dotted];
m6_325 -> m6_327  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_326 -> m6_327  [key=0, style=solid];
m6_326 -> m6_331  [key=2, style=dotted];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_332  [key=2, style=dotted];
m6_328 -> m6_25  [key=0, style=bold, color=blue];
m6_333 -> m6_335  [key=1, style=dashed, color=darkseagreen4, label="System.Action<IRedisClient>"];
m6_333 -> m6_334  [key=0, style=solid];
m6_335 -> m6_331  [key=2, style=dotted];
m6_335 -> m6_336  [key=0, style=solid];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_337  [key=2, style=dotted];
m6_336 -> m6_333  [key=0, style=bold, color=blue];
m6_162 -> m6_163  [key=0, style=solid, color=green];
m6_163 -> m6_164  [key=0, style=solid, color=green];
m6_163 -> m6_11  [key=2, style=dotted, color=green];
m6_163 -> m6_165  [key=1, style=dashed, color=green, label="lambda expression"];
m6_164 -> m6_162  [key=0, style=bold, color=blue];
m6_293 -> m6_294  [key=0, style=solid];
m6_294 -> m6_11  [key=2, style=dotted];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_295 -> m6_293  [key=0, style=bold, color=blue];
m6_228 -> m6_229  [key=0, style=solid];
m6_229 -> m6_11  [key=2, style=dotted];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_230 -> m6_228  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_217 -> m6_215  [key=0, style=bold, color=blue];
m6_216 -> m6_11  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_215 -> m6_216  [key=0, style=solid];
m6_280 -> m6_281  [key=0, style=solid];
m6_281 -> m6_11  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_282 -> m6_280  [key=0, style=bold, color=blue];
m6_93 -> m6_94  [key=0, style=solid, color=green];
m6_94 -> m6_95  [key=0, style=solid, color=green];
m6_94 -> m6_11  [key=2, style=dotted, color=green];
m6_94 -> m6_96  [key=1, style=dashed, color=green, label="lambda expression"];
m6_95 -> m6_93  [key=0, style=bold, color=blue];
m6_131 -> m6_129  [key=0, style=bold, color=blue];
m6_130 -> m6_131  [key=0, style=solid, color=green];
m6_130 -> m6_11  [key=2, style=dotted, color=green];
m6_130 -> m6_132  [key=1, style=dashed, color=green, label="lambda expression"];
m6_129 -> m6_130  [key=0, style=solid, color=green];
m6_129 -> m6_129  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m6_113 -> m6_114  [key=0, style=solid, color=green];
m6_114 -> m6_114  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess> GetRequiredProcesses"];
m6_114 -> m6_115  [key=0, style=solid, color=green];
m6_114 -> m6_11  [key=2, style=dotted, color=green];
m6_114 -> m6_116  [key=1, style=dashed, color=green, label="lambda expression"];
m6_115 -> m6_113  [key=0, style=bold, color=blue];
m6_242 -> m6_243  [key=0, style=solid];
m6_243 -> m6_11  [key=2, style=dotted];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_244 -> m6_242  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_12 -> m6_14  [key=1, style=dashed, color=green, label=IRedisClient];
m6_12 -> m6_16  [key=1, style=dashed, color=green, label=IRedisClient];
m6_12 -> m6_17  [key=1, style=dashed, color=green, label=IRedisClient];
m6_12 -> m6_18  [key=1, style=dashed, color=green, label=IRedisClient];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_12 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_14 -> m6_15  [key=0, style=solid, color=green];
m6_14 -> m6_24  [key=2, style=dotted, color=green];
m6_13 -> m6_14  [key=0, style=solid, color=green];
m6_13 -> m6_24  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid, color=green];
m6_15 -> m6_24  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid, color=green];
m6_16 -> m6_25  [key=2, style=dotted, color=green];
m6_16 -> m6_29  [key=1, style=dashed, color=green, label="lambda expression"];
m6_17 -> m6_18  [key=0, style=solid, color=green];
m6_17 -> m6_26  [key=2, style=dotted, color=green];
m6_17 -> m6_20  [key=1, style=dashed, color=green, label=jobEntryTtl];
m6_29 -> m6_30  [key=0, style=solid, color=green];
m6_18 -> m6_19  [key=0, style=solid, color=green];
m6_18 -> m6_26  [key=2, style=dotted, color=green];
m6_18 -> m6_21  [key=1, style=dashed, color=green, label=stateEntryTtl];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_27  [key=2, style=dotted];
m6_20 -> m6_28  [key=2, style=dotted];
m6_19 -> m6_26  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=historyEntryTtl];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_27  [key=2, style=dotted];
m6_21 -> m6_28  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid, color=green];
m6_30 -> m6_32  [key=2, style=dotted, color=green];
m6_30 -> m6_33  [key=2, style=dotted, color=green];
m6_31 -> m6_29  [key=0, style=bold, color=blue];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_37 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_39 -> m6_40  [key=0, style=solid, color=green];
m6_39 -> m6_46  [key=2, style=dotted, color=green];
m6_39 -> m6_47  [key=2, style=dotted, color=green];
m6_39 -> m6_48  [key=2, style=dotted, color=green];
m6_39 -> m6_51  [key=1, style=dashed, color=green, label="lambda expression"];
m6_38 -> m6_39  [key=0, style=solid, color=green];
m6_38 -> m6_45  [key=2, style=dotted];
m6_38 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_38 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_38 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_46  [key=2, style=dotted];
m6_40 -> m6_48  [key=2, style=dotted];
m6_40 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_51 -> m6_52  [key=0, style=solid, color=green];
m6_52 -> m6_53  [key=0, style=solid, color=green];
m6_52 -> m6_54  [key=2, style=dotted, color=green];
m6_53 -> m6_51  [key=0, style=bold, color=blue];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_65 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_68 -> m6_69  [key=0, style=solid, color=green];
m6_68 -> m6_46  [key=2, style=dotted, color=green];
m6_68 -> m6_47  [key=2, style=dotted, color=green];
m6_68 -> m6_48  [key=2, style=dotted, color=green];
m6_68 -> m6_81  [key=1, style=dashed, color=green, label="lambda expression"];
m6_67 -> m6_68  [key=0, style=solid, color=green];
m6_67 -> m6_70  [key=1, style=dashed, color=green, label=state];
m6_67 -> m6_45  [key=2, style=dotted];
m6_67 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_67 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_67 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_69 -> m6_70  [key=0, style=solid, color=green];
m6_69 -> m6_46  [key=2, style=dotted];
m6_69 -> m6_48  [key=2, style=dotted];
m6_69 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_81 -> m6_82  [key=0, style=solid, color=green];
m6_70 -> m6_71  [key=0, style=solid, color=green];
m6_70 -> m6_46  [key=2, style=dotted, color=green];
m6_70 -> m6_48  [key=2, style=dotted, color=green];
m6_70 -> m6_87  [key=1, style=dashed, color=green, label="lambda expression"];
m6_71 -> m6_25  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_87 -> m6_88  [key=0, style=solid, color=green];
m6_74 -> m6_75  [key=0, style=solid, color=green];
m6_74 -> m6_50  [key=2, style=dotted, color=green];
m6_72 -> m6_74  [key=1, style=dashed, color=green, label=stateHash];
m6_72 -> m6_75  [key=1, style=dashed, color=green, label=stateHash];
m6_72 -> m6_76  [key=1, style=dashed, color=green, label=stateHash];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_49  [key=2, style=dotted];
m6_73 -> m6_74  [key=0, style=solid, color=green];
m6_73 -> m6_79  [key=2, style=dotted];
m6_73 -> m6_80  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid, color=green];
m6_75 -> m6_50  [key=2, style=dotted, color=green];
m6_76 -> m6_77  [key=0, style=solid, color=green];
m6_76 -> m6_50  [key=2, style=dotted, color=green];
m6_77 -> m6_65  [key=0, style=bold, color=blue];
m6_82 -> m6_83  [key=0, style=solid, color=green];
m6_82 -> m6_54  [key=2, style=dotted, color=green];
m6_83 -> m6_81  [key=0, style=bold, color=blue];
m6_88 -> m6_89  [key=0, style=solid, color=green];
m6_89 -> m6_87  [key=0, style=bold, color=blue];
m6_96 -> m6_100  [key=1, style=dashed, color=green, label=IRedisClient];
m6_96 -> m6_101  [key=1, style=dashed, color=green, label=IRedisClient];
m6_96 -> m6_97  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid, color=green];
m6_100 -> m6_25  [key=2, style=dotted, color=green];
m6_100 -> m6_110  [key=1, style=dashed, color=green, label="lambda expression"];
m6_97 -> m6_100  [key=1, style=dashed, color=green, label=state];
m6_97 -> m6_98  [key=0, style=solid, color=green];
m6_97 -> m6_99  [key=1, style=dashed, color=green, label=state];
m6_97 -> m6_111  [key=1, style=dashed, color=green, label=state];
m6_97 -> m6_45  [key=2, style=dotted];
m6_99 -> m6_100  [key=0, style=solid, color=green];
m6_99 -> m6_46  [key=2, style=dotted, color=green];
m6_99 -> m6_47  [key=2, style=dotted, color=green];
m6_99 -> m6_48  [key=2, style=dotted, color=green];
m6_99 -> m6_107  [key=1, style=dashed, color=green, label="lambda expression"];
m6_101 -> m6_102  [key=0, style=solid, color=green];
m6_101 -> m6_103  [key=2, style=dotted, color=green];
m6_101 -> m6_50  [key=2, style=dotted, color=green];
m6_110 -> m6_111  [key=0, style=solid, color=green];
m6_102 -> m6_96  [key=0, style=bold, color=blue];
m6_98 -> m6_99  [key=0, style=solid, color=green];
m6_98 -> m6_46  [key=2, style=dotted, color=green];
m6_98 -> m6_48  [key=2, style=dotted, color=green];
m6_98 -> m6_104  [key=1, style=dashed, color=green, label="lambda expression"];
m6_104 -> m6_105  [key=0, style=solid, color=green];
m6_107 -> m6_108  [key=0, style=solid, color=green];
m6_111 -> m6_112  [key=0, style=solid, color=green];
m6_111 -> m6_61  [key=2, style=dotted, color=green];
m6_112 -> m6_110  [key=0, style=bold, color=blue];
m6_105 -> m6_106  [key=0, style=solid, color=green];
m6_106 -> m6_104  [key=0, style=bold, color=blue];
m6_108 -> m6_109  [key=0, style=solid, color=green];
m6_108 -> m6_54  [key=2, style=dotted, color=green];
m6_109 -> m6_107  [key=0, style=bold, color=blue];
m6_116 -> m6_117  [key=0, style=solid, color=green];
m6_116 -> m6_118  [key=1, style=dashed, color=green, label=IRedisClient];
m6_116 -> m6_119  [key=1, style=dashed, color=green, label=IRedisClient];
m6_116 -> m6_120  [key=1, style=dashed, color=green, label=IRedisClient];
m6_116 -> m6_121  [key=1, style=dashed, color=green, label=IRedisClient];
m6_116 -> m6_122  [key=1, style=dashed, color=green, label=IRedisClient];
m6_116 -> m6_123  [key=1, style=dashed, color=green, label=IRedisClient];
m6_117 -> m6_118  [key=0, style=solid, color=green];
m6_117 -> m6_32  [key=2, style=dotted, color=green];
m6_117 -> m6_24  [key=2, style=dotted, color=green];
m6_118 -> m6_119  [key=0, style=solid, color=green];
m6_118 -> m6_32  [key=2, style=dotted, color=green];
m6_118 -> m6_24  [key=2, style=dotted, color=green];
m6_119 -> m6_120  [key=0, style=solid, color=green];
m6_119 -> m6_32  [key=2, style=dotted, color=green];
m6_119 -> m6_24  [key=2, style=dotted, color=green];
m6_120 -> m6_121  [key=0, style=solid, color=green];
m6_120 -> m6_25  [key=2, style=dotted, color=green];
m6_120 -> m6_125  [key=1, style=dashed, color=green, label="lambda expression"];
m6_121 -> m6_122  [key=0, style=solid, color=green];
m6_121 -> m6_26  [key=2, style=dotted, color=green];
m6_121 -> m6_28  [key=2, style=dotted, color=green];
m6_125 -> m6_126  [key=0, style=solid, color=green];
m6_122 -> m6_123  [key=0, style=solid, color=green];
m6_122 -> m6_26  [key=2, style=dotted, color=green];
m6_122 -> m6_28  [key=2, style=dotted, color=green];
m6_123 -> m6_124  [key=0, style=solid, color=green];
m6_123 -> m6_26  [key=2, style=dotted, color=green];
m6_123 -> m6_28  [key=2, style=dotted, color=green];
m6_124 -> m6_116  [key=0, style=bold, color=blue];
m6_126 -> m6_127  [key=0, style=solid, color=green];
m6_126 -> m6_128  [key=2, style=dotted, color=green];
m6_127 -> m6_125  [key=0, style=bold, color=blue];
m6_132 -> m6_133  [key=0, style=solid, color=green];
m6_132 -> m6_137  [key=1, style=dashed, color=green, label=IRedisClient];
m6_132 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_133 -> m6_134  [key=0, style=solid, color=green];
m6_133 -> m6_45  [key=2, style=dotted, color=green];
m6_133 -> m6_135  [key=1, style=dashed, color=green, label=state];
m6_133 -> m6_136  [key=1, style=dashed, color=green, label=state];
m6_133 -> m6_137  [key=1, style=dashed, color=green, label=state];
m6_133 -> m6_159  [key=1, style=dashed, color=green, label=state];
m6_134 -> m6_135  [key=0, style=solid, color=green];
m6_134 -> m6_46  [key=2, style=dotted, color=green];
m6_134 -> m6_48  [key=2, style=dotted, color=green];
m6_134 -> m6_149  [key=1, style=dashed, color=green, label="lambda expression"];
m6_135 -> m6_136  [key=0, style=solid, color=green];
m6_135 -> m6_46  [key=2, style=dotted, color=green];
m6_135 -> m6_48  [key=2, style=dotted, color=green];
m6_135 -> m6_152  [key=1, style=dashed, color=green, label="lambda expression"];
m6_136 -> m6_137  [key=0, style=solid, color=green];
m6_136 -> m6_46  [key=2, style=dotted, color=green];
m6_136 -> m6_47  [key=2, style=dotted, color=green];
m6_136 -> m6_48  [key=2, style=dotted, color=green];
m6_136 -> m6_155  [key=1, style=dashed, color=green, label="lambda expression"];
m6_137 -> m6_138  [key=0, style=solid, color=green];
m6_137 -> m6_25  [key=2, style=dotted, color=green];
m6_137 -> m6_158  [key=1, style=dashed, color=green, label="lambda expression"];
m6_159 -> m6_160  [key=0, style=solid, color=green];
m6_159 -> m6_161  [key=2, style=dotted, color=green];
m6_138 -> m6_140  [key=1, style=dashed, color=green, label=serializedEntry];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_146  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid, color=green];
m6_149 -> m6_150  [key=0, style=solid, color=green];
m6_152 -> m6_153  [key=0, style=solid, color=green];
m6_155 -> m6_156  [key=0, style=solid, color=green];
m6_160 -> m6_158  [key=0, style=bold, color=blue];
m6_140 -> m6_141  [key=0, style=solid, color=green];
m6_140 -> m6_3  [key=2, style=dotted, color=green];
m6_140 -> m6_142  [key=1, style=dashed, color=green, label=entry];
m6_140 -> m6_143  [key=1, style=dashed, color=green, label=entry];
m6_140 -> m6_144  [key=1, style=dashed, color=green, label=entry];
m6_139 -> m6_140  [key=0, style=solid, color=green];
m6_139 -> m6_147  [key=2, style=dotted];
m6_141 -> m6_142  [key=0, style=solid, color=green];
m6_141 -> m6_50  [key=2, style=dotted, color=green];
m6_142 -> m6_50  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_143 -> m6_144  [key=0, style=solid, color=green];
m6_143 -> m6_50  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid, color=green];
m6_144 -> m6_148  [key=2, style=dotted, color=green];
m6_144 -> m6_28  [key=2, style=dotted, color=green];
m6_145 -> m6_132  [key=0, style=bold, color=blue];
m6_150 -> m6_151  [key=0, style=solid, color=green];
m6_151 -> m6_149  [key=0, style=bold, color=blue];
m6_153 -> m6_154  [key=0, style=solid, color=green];
m6_154 -> m6_152  [key=0, style=bold, color=blue];
m6_156 -> m6_157  [key=0, style=solid, color=green];
m6_156 -> m6_54  [key=2, style=dotted, color=green];
m6_157 -> m6_155  [key=0, style=bold, color=blue];
m6_165 -> m6_167  [key=1, style=dashed, color=green, label=IRedisClient];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_168  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_167 -> m6_168  [key=0, style=solid, color=green];
m6_167 -> m6_170  [key=2, style=dotted, color=green];
m6_167 -> m6_28  [key=2, style=dotted, color=green];
m6_166 -> m6_167  [key=0, style=solid, color=green];
m6_166 -> m6_25  [key=2, style=dotted];
m6_166 -> m6_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_168 -> m6_50  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_146  [key=2, style=dotted];
m6_23 -> m6_12  [key=0, style=bold, color=blue];
m6_191 -> m6_24  [key=2, style=dotted];
m6_191 -> m6_192  [key=0, style=solid];
m6_205 -> m6_24  [key=2, style=dotted];
m6_205 -> m6_206  [key=0, style=solid];
m6_219 -> m6_24  [key=2, style=dotted];
m6_219 -> m6_220  [key=0, style=solid];
m6_232 -> m6_24  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_41 -> m6_25  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_180 -> m6_25  [key=2, style=dotted];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_192 -> m6_25  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_206 -> m6_25  [key=2, style=dotted];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_220 -> m6_25  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_233 -> m6_25  [key=2, style=dotted];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_246 -> m6_25  [key=2, style=dotted];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_258 -> m6_25  [key=2, style=dotted];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_272 -> m6_25  [key=2, style=dotted];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_285 -> m6_25  [key=2, style=dotted];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_300 -> m6_25  [key=2, style=dotted];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_304  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_316 -> m6_25  [key=2, style=dotted];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_194 -> m6_26  [key=2, style=dotted];
m6_194 -> m6_28  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_207 -> m6_26  [key=2, style=dotted];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_209  [key=1, style=dashed, color=darkseagreen4, label=entryTtl];
m6_222 -> m6_26  [key=2, style=dotted];
m6_222 -> m6_28  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_234 -> m6_26  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_236  [key=1, style=dashed, color=darkseagreen4, label=entryTtl];
m6_22 -> m6_28  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_27  [key=2, style=dotted];
m6_212 -> m6_32  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_214  [key=2, style=dotted];
m6_239 -> m6_32  [key=2, style=dotted];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_241  [key=2, style=dotted];
m6_44 -> m6_37  [key=0, style=bold, color=blue];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_49  [key=2, style=dotted];
m6_59 -> m6_61  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_55 -> m6_56  [key=0, style=solid];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_78  [key=2, style=dotted];
m6_91 -> m6_61  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_84 -> m6_85  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_43 -> m6_50  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_181 -> m6_50  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_146  [key=2, style=dotted];
m6_193 -> m6_50  [key=2, style=dotted];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_196  [key=2, style=dotted];
m6_208 -> m6_50  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_196  [key=2, style=dotted];
m6_221 -> m6_50  [key=2, style=dotted];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_196  [key=2, style=dotted];
m6_235 -> m6_50  [key=2, style=dotted];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_196  [key=2, style=dotted];
m6_260 -> m6_50  [key=2, style=dotted];
m6_260 -> m6_261  [key=0, style=solid];
m6_260 -> m6_262  [key=2, style=dotted];
m6_286 -> m6_50  [key=2, style=dotted];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_146  [key=2, style=dotted];
m6_301 -> m6_50  [key=2, style=dotted];
m6_301 -> m6_103  [key=2, style=dotted];
m6_301 -> m6_302  [key=0, style=solid];
m6_302 -> m6_50  [key=2, style=dotted];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_146  [key=2, style=dotted];
m6_317 -> m6_50  [key=2, style=dotted];
m6_317 -> m6_103  [key=2, style=dotted];
m6_317 -> m6_318  [key=0, style=solid];
m6_318 -> m6_50  [key=2, style=dotted];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_146  [key=2, style=dotted];
m6_319 -> m6_50  [key=2, style=dotted];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_146  [key=2, style=dotted];
m6_209 -> m6_28  [key=2, style=dotted];
m6_209 -> m6_27  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_236 -> m6_28  [key=2, style=dotted];
m6_236 -> m6_27  [key=2, style=dotted];
m6_236 -> m6_237  [key=0, style=solid];
m6_247 -> m6_28  [key=2, style=dotted];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_249  [key=2, style=dotted];
m6_259 -> m6_28  [key=2, style=dotted];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_249  [key=2, style=dotted];
m6_169 -> m6_165  [key=0, style=bold, color=blue];
m6_171 -> m6_172  [key=0, style=solid];
m6_178 -> m6_180  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_178 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_178 -> m6_179  [key=0, style=solid];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_192  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_190 -> m6_194  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_190 -> m6_193  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_204 -> m6_205  [key=0, style=solid];
m6_204 -> m6_206  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_204 -> m6_207  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_204 -> m6_208  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_218 -> m6_222  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_218 -> m6_221  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_233  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_231 -> m6_234  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_231 -> m6_235  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_260  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_257 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_270 -> m6_272  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_273  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_283 -> m6_285  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_283 -> m6_286  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_283 -> m6_284  [key=0, style=solid];
m6_296 -> m6_300  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_296 -> m6_301  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_296 -> m6_302  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_296 -> m6_297  [key=0, style=solid];
m6_296 -> m6_298  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_296 -> m6_299  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_311 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_311 -> m6_317  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_311 -> m6_318  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_311 -> m6_319  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_311 -> m6_312  [key=0, style=solid];
m6_311 -> m6_313  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_311 -> m6_314  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_311 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_58 -> m6_59  [key=0, style=solid];
m6_179 -> m6_180  [key=0, style=solid];
m6_179 -> m6_183  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_197 -> m6_198  [key=0, style=solid];
m6_211 -> m6_212  [key=0, style=solid];
m6_224 -> m6_225  [key=0, style=solid];
m6_238 -> m6_239  [key=0, style=solid];
m6_250 -> m6_251  [key=0, style=solid];
m6_263 -> m6_264  [key=0, style=solid];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_275  [key=2, style=dotted];
m6_273 -> m6_80  [key=2, style=dotted];
m6_273 -> m6_274  [key=0, style=solid];
m6_273 -> m6_249  [key=2, style=dotted];
m6_276 -> m6_277  [key=0, style=solid];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_288  [key=2, style=dotted];
m6_289 -> m6_290  [key=0, style=solid];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_288  [key=2, style=dotted];
m6_304 -> m6_305  [key=0, style=solid];
m6_315 -> m6_316  [key=0, style=solid];
m6_315 -> m6_288  [key=2, style=dotted];
m6_321 -> m6_322  [key=0, style=solid];
m6_195 -> m6_190  [key=0, style=bold, color=blue];
m6_223 -> m6_218  [key=0, style=bold, color=blue];
m6_213 -> m6_211  [key=0, style=bold, color=blue];
m6_240 -> m6_238  [key=0, style=bold, color=blue];
m6_60 -> m6_58  [key=0, style=bold, color=blue];
m6_57 -> m6_55  [key=0, style=bold, color=blue];
m6_56 -> m6_57  [key=0, style=solid];
m6_92 -> m6_90  [key=0, style=bold, color=blue];
m6_86 -> m6_84  [key=0, style=bold, color=blue];
m6_85 -> m6_86  [key=0, style=solid];
m6_182 -> m6_178  [key=0, style=bold, color=blue];
m6_261 -> m6_257  [key=0, style=bold, color=blue];
m6_287 -> m6_283  [key=0, style=bold, color=blue];
m6_303 -> m6_296  [key=0, style=bold, color=blue];
m6_320 -> m6_311  [key=0, style=bold, color=blue];
m6_210 -> m6_204  [key=0, style=bold, color=blue];
m6_237 -> m6_231  [key=0, style=bold, color=blue];
m6_248 -> m6_245  [key=0, style=bold, color=blue];
m6_173 -> m6_171  [key=0, style=bold, color=blue];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_174  [key=2, style=dotted];
m6_274 -> m6_270  [key=0, style=bold, color=blue];
m6_297 -> m6_298  [key=0, style=solid];
m6_297 -> m6_288  [key=2, style=dotted];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_288  [key=2, style=dotted];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_288  [key=2, style=dotted];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_288  [key=2, style=dotted];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_288  [key=2, style=dotted];
m6_186 -> m6_184  [key=0, style=bold, color=blue];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_174  [key=2, style=dotted];
m6_199 -> m6_197  [key=0, style=bold, color=blue];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_200  [key=2, style=dotted];
m6_226 -> m6_224  [key=0, style=bold, color=blue];
m6_225 -> m6_226  [key=0, style=solid];
m6_225 -> m6_227  [key=2, style=dotted];
m6_252 -> m6_250  [key=0, style=bold, color=blue];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_253  [key=2, style=dotted];
m6_265 -> m6_263  [key=0, style=bold, color=blue];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_266  [key=2, style=dotted];
m6_278 -> m6_276  [key=0, style=bold, color=blue];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_279  [key=2, style=dotted];
m6_291 -> m6_289  [key=0, style=bold, color=blue];
m6_290 -> m6_291  [key=0, style=solid];
m6_290 -> m6_292  [key=2, style=dotted];
m6_306 -> m6_304  [key=0, style=bold, color=blue];
m6_305 -> m6_306  [key=0, style=solid];
m6_305 -> m6_307  [key=2, style=dotted];
m6_323 -> m6_321  [key=0, style=bold, color=blue];
m6_322 -> m6_323  [key=0, style=solid];
m6_322 -> m6_324  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=2, style=dotted];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_254 -> m6_255  [key=0, style=solid];
m6_255 -> m6_11  [key=2, style=dotted];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_256 -> m6_254  [key=0, style=bold, color=blue];
m6_189 -> m6_187  [key=0, style=bold, color=blue];
m6_188 -> m6_11  [key=2, style=dotted];
m6_188 -> m6_189  [key=0, style=solid];
m6_188 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_187 -> m6_188  [key=0, style=solid];
m6_308 -> m6_309  [key=0, style=solid];
m6_309 -> m6_11  [key=2, style=dotted];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_310 -> m6_308  [key=0, style=bold, color=blue];
m6_338 -> m6_9  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_35  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_63  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_94  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_114  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_130  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_163  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_216  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_229  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_268  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_294  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_338 -> m6_309  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m6_341 -> m6_111  [key=1, style=dashed, color=green, label=state];
m6_342 -> m6_159  [key=1, style=dashed, color=green, label=state];
m6_339 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_340 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label=state];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_2  [key=0, style=bold, color=blue];
m7_18 -> m7_19  [key=0, style=solid, color=red];
m7_19 -> m7_20  [key=0, style=solid, color=red];
m7_19 -> m7_10  [key=2, style=dotted, color=red];
m7_20 -> m7_18  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_8  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_9  [key=2, style=dotted];
m7_7 -> m7_4  [key=0, style=bold, color=blue];
m7_10 -> m7_11  [key=0, style=solid, color=red];
m7_11 -> m7_12  [key=0, style=solid, color=red];
m7_11 -> m7_16  [key=2, style=dotted, color=red];
m7_11 -> m7_14  [key=1, style=dashed, color=red, label=wasStopped];
m7_12 -> m7_13  [key=0, style=solid, color=red];
m7_12 -> m7_14  [key=0, style=solid, color=red];
m7_14 -> m7_15  [key=0, style=solid, color=red];
m7_13 -> m7_14  [key=0, style=solid, color=red];
m7_13 -> m7_17  [key=2, style=dotted, color=red];
m7_15 -> m7_10  [key=0, style=bold, color=blue];
m7_21 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
m7_21 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
m7_21 -> m7_11  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
m7_21 -> m7_13  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
m7_21 -> m7_19  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
m8_33 -> m8_34  [key=0, style=solid, color=red];
m8_33 -> m8_35  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeContext"];
m8_33 -> m8_36  [key=3, color=red, style=bold, label="method methodReturn Hangfire.States.IState ChangeState"];
m8_34 -> m8_35  [key=0, style=solid, color=red];
m8_34 -> m8_40  [key=2, style=dotted, color=red];
m8_34 -> m8_37  [key=1, style=dashed, color=red, label=transaction];
m8_35 -> m8_36  [key=0, style=solid, color=red];
m8_35 -> m8_41  [key=2, style=dotted, color=red];
m8_37 -> m8_38  [key=0, style=solid, color=red];
m8_37 -> m8_43  [key=2, style=dotted, color=red];
m8_36 -> m8_37  [key=0, style=solid, color=red];
m8_36 -> m8_42  [key=2, style=dotted, color=red];
m8_36 -> m8_38  [key=1, style=dashed, color=red, label=appliedState];
m8_38 -> m8_39  [key=0, style=solid, color=red];
m8_39 -> m8_33  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid, color=red];
m8_4 -> m8_7  [key=1, style=dashed, color=red, label="Hangfire.States.IStateMachine"];
m8_5 -> m8_6  [key=0, style=solid, color=red];
m8_5 -> m8_7  [key=0, style=solid, color=red];
m8_7 -> m8_8  [key=0, style=solid, color=red];
m8_6 -> m8_8  [key=0, style=solid, color=red];
m8_6 -> m8_9  [key=2, style=dotted, color=red];
m8_8 -> m8_4  [key=0, style=bold, color=blue];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_2  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid, color=red];
m8_10 -> m8_12  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeContext"];
m8_10 -> m8_15  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeContext"];
m8_10 -> m8_17  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeContext"];
m8_10 -> m8_22  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeContext"];
m8_10 -> m8_23  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeContext"];
m8_10 -> m8_14  [key=3, color=red, style=bold, label="method methodReturn Hangfire.States.IState ChangeState"];
m8_11 -> m8_12  [key=0, style=solid, color=red];
m8_11 -> m8_26  [key=2, style=dotted, color=red];
m8_12 -> m8_13  [key=0, style=solid, color=red];
m8_12 -> m8_27  [key=2, style=dotted, color=red];
m8_12 -> m8_15  [key=1, style=dashed, color=red, label=jobData];
m8_12 -> m8_18  [key=1, style=dashed, color=red, label=jobData];
m8_12 -> m8_22  [key=1, style=dashed, color=red, label=jobData];
m8_12 -> m8_23  [key=1, style=dashed, color=red, label=jobData];
m8_15 -> m8_16  [key=0, style=solid, color=red];
m8_15 -> m8_17  [key=0, style=solid, color=red];
m8_15 -> m8_28  [key=2, style=dotted, color=red];
m8_17 -> m8_18  [key=0, style=solid, color=red];
m8_17 -> m8_20  [key=1, style=dashed, color=red, label=appliedState];
m8_17 -> m8_21  [key=1, style=dashed, color=red, label=appliedState];
m8_17 -> m8_23  [key=1, style=dashed, color=red, label=appliedState];
m8_17 -> m8_33  [key=3, color=red, style=bold, label="Local variable Hangfire.States.IState appliedState"];
m8_22 -> m8_23  [key=0, style=solid, color=red];
m8_22 -> m8_32  [key=2, style=dotted, color=red];
m8_23 -> m8_24  [key=0, style=solid, color=red];
m8_23 -> m8_33  [key=2, style=dotted, color=red];
m8_23 -> m8_23  [key=1, style=dashed, color=red, label=appliedState];
m8_13 -> m8_14  [key=0, style=solid, color=red];
m8_13 -> m8_15  [key=0, style=solid, color=red];
m8_18 -> m8_19  [key=0, style=solid, color=red];
m8_18 -> m8_22  [key=0, style=solid, color=red];
m8_18 -> m8_29  [key=2, style=dotted, color=red];
m8_14 -> m8_25  [key=0, style=solid, color=red];
m8_16 -> m8_25  [key=0, style=solid, color=red];
m8_20 -> m8_21  [key=0, style=solid, color=red];
m8_20 -> m8_22  [key=0, style=solid, color=red];
m8_21 -> m8_22  [key=0, style=solid, color=red];
m8_21 -> m8_30  [key=2, style=dotted, color=red];
m8_21 -> m8_31  [key=2, style=dotted, color=red];
m8_21 -> m8_21  [key=1, style=dashed, color=red, label=appliedState];
m8_21 -> m8_23  [key=1, style=dashed, color=red, label=appliedState];
m8_19 -> m8_20  [key=0, style=solid, color=red];
m8_24 -> m8_25  [key=0, style=solid, color=red];
m8_25 -> m8_10  [key=0, style=bold, color=blue];
m8_27 -> m8_44  [key=0, style=solid, color=red];
m8_27 -> m8_46  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeContext"];
m8_27 -> m8_51  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeContext"];
m8_27 -> m8_10  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.StateChangeContext context"];
m8_27 -> m8_14  [key=3, color=red, style=bold, label="method methodReturn Hangfire.Storage.JobData GetJobData"];
m8_44 -> m8_45  [key=0, style=solid, color=red];
m8_44 -> m8_53  [key=1, style=dashed, color=red, label=firstAttempt];
m8_44 -> m8_44  [key=3, color=red, style=bold, label="Local variable bool firstAttempt"];
m8_46 -> m8_47  [key=0, style=solid, color=red];
m8_46 -> m8_56  [key=2, style=dotted, color=red];
m8_46 -> m8_49  [key=1, style=dashed, color=red, label=jobData];
m8_46 -> m8_50  [key=1, style=dashed, color=red, label=jobData];
m8_51 -> m8_52  [key=0, style=solid, color=red];
m8_51 -> m8_53  [key=0, style=solid, color=red];
m8_45 -> m8_46  [key=0, style=solid, color=red];
m8_45 -> m8_55  [key=0, style=solid, color=red];
m8_53 -> m8_54  [key=0, style=solid, color=red];
m8_53 -> m8_58  [key=2, style=dotted, color=red];
m8_47 -> m8_48  [key=0, style=solid, color=red];
m8_47 -> m8_49  [key=0, style=solid, color=red];
m8_49 -> m8_50  [key=0, style=solid, color=red];
m8_49 -> m8_51  [key=0, style=solid, color=red];
m8_49 -> m8_57  [key=2, style=dotted, color=red];
m8_50 -> m8_55  [key=0, style=solid, color=red];
m8_48 -> m8_55  [key=0, style=solid, color=red];
m8_52 -> m8_55  [key=0, style=solid, color=red];
m8_54 -> m8_45  [key=0, style=solid, color=red];
m8_55 -> m8_27  [key=0, style=bold, color=blue];
m8_59 -> m8_7  [key=1, style=dashed, color=red, label="Hangfire.States.BackgroundJobStateChanger"];
m8_59 -> m8_23  [key=1, style=dashed, color=red, label="Hangfire.States.BackgroundJobStateChanger"];
m8_59 -> m8_36  [key=1, style=dashed, color=red, label="Hangfire.States.BackgroundJobStateChanger"];
m9_17 -> m9_18  [key=0, style=solid];
m9_18 -> m9_19  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_21  [key=2, style=dotted];
m9_20 -> m9_17  [key=0, style=bold, color=blue];
m9_73 -> m9_74  [key=0, style=solid];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_81  [key=0, style=solid];
m9_74 -> m9_82  [key=0, style=solid];
m9_74 -> m9_85  [key=0, style=solid];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_86  [key=2, style=dotted];
m9_81 -> m9_85  [key=0, style=solid];
m9_82 -> m9_83  [key=0, style=solid];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_87  [key=2, style=dotted];
m9_77 -> m9_78  [key=0, style=solid];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_42  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_88  [key=2, style=dotted];
m9_80 -> m9_74  [key=0, style=solid];
m9_80 -> m9_89  [key=2, style=dotted];
m9_83 -> m9_84  [key=0, style=solid];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_90  [key=2, style=dotted];
m9_84 -> m9_91  [key=2, style=dotted];
m9_85 -> m9_73  [key=0, style=bold, color=blue];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_15  [key=2, style=dotted];
m9_12 -> m9_9  [key=2, style=dotted];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_16  [key=2, style=dotted];
m9_14 -> m9_11  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m9_0 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m9_0 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_7  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_9  [key=2, style=dotted];
m9_5 -> m9_10  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_8  [key=2, style=dotted];
m9_6 -> m9_0  [key=0, style=bold, color=blue];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m9_42 -> m9_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m9_42 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m9_42 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m9_42 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_46  [key=0, style=solid];
m9_43 -> m9_63  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_9  [key=2, style=dotted];
m9_44 -> m9_64  [key=2, style=dotted];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_49  [key=0, style=solid];
m9_47 -> m9_66  [key=2, style=dotted];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_67  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_9  [key=2, style=dotted];
m9_56 -> m9_70  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_66  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_65  [key=2, style=dotted];
m9_45 -> m9_62  [key=0, style=solid];
m9_48 -> m9_62  [key=0, style=solid];
m9_49 -> m9_50  [key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_68  [key=2, style=dotted];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_57  [key=0, style=solid];
m9_53 -> m9_69  [key=2, style=dotted];
m9_54 -> m9_55  [key=0, style=solid];
m9_57 -> m9_58  [key=0, style=solid];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_58  [key=1, style=dashed, color=darkseagreen4, label=exception];
m9_55 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label=exception];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_60  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_72  [key=2, style=dotted];
m9_59 -> m9_61  [key=0, style=solid];
m9_59 -> m9_71  [key=2, style=dotted];
m9_62 -> m9_42  [key=0, style=bold, color=blue];
m9_28 -> m9_29  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_31  [key=0, style=solid];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_17  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_34  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_38  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_39  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_40  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_41  [key=2, style=dotted];
m9_37 -> m9_28  [key=0, style=bold, color=blue];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m9_23 -> m9_24  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=2, style=dotted];
m9_26 -> m9_22  [key=0, style=bold, color=blue];
m9_92 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_92 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m10_4 -> m10_5  [key=0, style=solid, color=red];
m10_4 -> m10_8  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m10_4 -> m10_11  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m10_4 -> m10_12  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m10_4 -> m10_14  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m10_4 -> m10_16  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m10_5 -> m10_6  [key=0, style=solid, color=red];
m10_5 -> m10_14  [key=1, style=dashed, color=red, label=failedState];
m10_5 -> m10_16  [key=1, style=dashed, color=red, label=failedState];
m10_8 -> m10_9  [key=0, style=solid, color=red];
m10_8 -> m10_18  [key=2, style=dotted, color=red];
m10_8 -> m10_10  [key=1, style=dashed, color=red, label=retryAttempt];
m10_8 -> m10_11  [key=1, style=dashed, color=red, label=retryAttempt];
m10_8 -> m10_12  [key=1, style=dashed, color=red, label=retryAttempt];
m10_8 -> m10_14  [key=1, style=dashed, color=red, label=retryAttempt];
m10_11 -> m10_12  [key=0, style=solid, color=red];
m10_11 -> m10_21  [key=2, style=dotted, color=red];
m10_12 -> m10_13  [key=0, style=solid, color=red];
m10_12 -> m10_22  [key=2, style=dotted, color=red];
m10_12 -> m10_23  [key=2, style=dotted, color=red];
m10_14 -> m10_17  [key=0, style=solid, color=red];
m10_14 -> m10_24  [key=2, style=dotted, color=red];
m10_16 -> m10_17  [key=0, style=solid, color=red];
m10_16 -> m10_25  [key=2, style=dotted, color=red];
m10_6 -> m10_7  [key=0, style=solid, color=red];
m10_6 -> m10_8  [key=0, style=solid, color=red];
m10_7 -> m10_17  [key=0, style=solid, color=red];
m10_9 -> m10_10  [key=0, style=solid, color=red];
m10_9 -> m10_15  [key=0, style=solid, color=red];
m10_10 -> m10_11  [key=0, style=solid, color=red];
m10_10 -> m10_19  [key=2, style=dotted, color=red];
m10_10 -> m10_20  [key=2, style=dotted, color=red];
m10_10 -> m10_12  [key=1, style=dashed, color=red, label=delay];
m10_10 -> m10_14  [key=1, style=dashed, color=red, label=delay];
m10_15 -> m10_16  [key=0, style=solid, color=red];
m10_15 -> m10_17  [key=0, style=solid, color=red];
m10_13 -> m10_14  [key=0, style=solid, color=red];
m10_13 -> m10_17  [key=0, style=solid, color=red];
m10_17 -> m10_4  [key=0, style=bold, color=blue];
m10_19 -> m10_26  [key=0, style=solid, color=red];
m10_19 -> m10_27  [key=1, style=dashed, color=red, label=long];
m10_26 -> m10_27  [key=0, style=solid, color=red];
m10_26 -> m10_29  [key=2, style=dotted, color=red];
m10_27 -> m10_28  [key=0, style=solid, color=red];
m10_27 -> m10_30  [key=2, style=dotted, color=red];
m10_27 -> m10_31  [key=2, style=dotted, color=red];
m10_27 -> m10_32  [key=2, style=dotted, color=red];
m10_28 -> m10_19  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid, color=red];
m10_1 -> m10_2  [key=0, style=solid, color=red];
m10_2 -> m10_3  [key=0, style=solid, color=red];
m10_3 -> m10_0  [key=0, style=bold, color=blue];
m10_33 -> m10_1  [key=1, style=dashed, color=red, label="Hangfire.AutomaticRetryAttribute"];
m10_33 -> m10_2  [key=1, style=dashed, color=red, label="Hangfire.AutomaticRetryAttribute"];
m10_33 -> m10_9  [key=1, style=dashed, color=red, label="Hangfire.AutomaticRetryAttribute"];
m10_33 -> m10_12  [key=1, style=dashed, color=red, label="Hangfire.AutomaticRetryAttribute"];
m10_33 -> m10_13  [key=1, style=dashed, color=red, label="Hangfire.AutomaticRetryAttribute"];
m10_33 -> m10_14  [key=1, style=dashed, color=red, label="Hangfire.AutomaticRetryAttribute"];
m10_33 -> m10_15  [key=1, style=dashed, color=red, label="Hangfire.AutomaticRetryAttribute"];
m11_0 -> m11_1  [key=0, style=solid];
m11_2 -> m11_3  [key=0, style=solid, color=green];
m11_2 -> m11_7  [key=2, style=dotted, color=green];
m11_1 -> m11_2  [key=0, style=solid, color=green];
m11_1 -> m11_6  [key=2, style=dotted];
m11_1 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_8  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_9  [key=2, style=dotted];
m11_4 -> m11_10  [key=2, style=dotted];
m11_4 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_5 -> m11_0  [key=0, style=bold, color=blue];
m11_28 -> m11_29  [key=0, style=solid];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_22  [key=2, style=dotted];
m11_29 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_30 -> m11_23  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_28  [key=0, style=bold, color=blue];
m11_32 -> m11_33  [key=0, style=solid];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_27  [key=2, style=dotted];
m11_33 -> m11_35  [key=2, style=dotted];
m11_33 -> m11_34  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_15 -> m11_16  [key=0, style=solid];
m11_24 -> m11_25  [key=0, style=solid];
m11_26 -> m11_24  [key=0, style=bold, color=blue];
m11_34 -> m11_32  [key=0, style=bold, color=blue];
m11_13 -> m11_11  [key=0, style=bold, color=blue];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_14  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_17 -> m11_15  [key=0, style=bold, color=blue];
m11_36 -> m11_37  [key=0, style=solid, color=green];
m11_37 -> m11_38  [key=0, style=solid, color=green];
m11_37 -> m11_35  [key=2, style=dotted, color=green];
m11_37 -> m11_39  [key=1, style=dashed, color=green, label=context];
m11_37 -> m11_40  [key=1, style=dashed, color=green, label=context];
m11_37 -> m11_41  [key=1, style=dashed, color=green, label=context];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_23  [key=2, style=dotted];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_43  [key=2, style=dotted];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_43  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_43  [key=2, style=dotted];
m11_42 -> m11_36  [key=0, style=bold, color=blue];
m11_18 -> m11_19  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_22  [key=2, style=dotted];
m11_19 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_20 -> m11_23  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_21 -> m11_18  [key=0, style=bold, color=blue];
m11_44 -> m11_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_37  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m11_44 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m12_51 -> m12_100  [key=0, style=solid];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_102  [key=2, style=dotted];
m12_100 -> m12_103  [key=2, style=dotted];
m12_101 -> m12_51  [key=0, style=bold, color=blue];
m12_73 -> m12_80  [key=0, style=solid];
m12_73 -> m12_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_73 -> m12_86  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m12_73 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_73 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m12_73 -> m12_90  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m12_73 -> m12_23  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ElectStateContext context"];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m12_80 -> m12_80  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.Storage.StateData currentState"];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_47  [key=2, style=dotted];
m12_86 -> m12_93  [key=0, style=solid, color=red];
m12_86 -> m12_95  [key=2, style=dotted, color=red];
m12_86 -> m12_96  [key=2, style=dotted, color=red];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_50  [key=2, style=dotted];
m12_87 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m12_89 -> m12_90  [key=0, style=solid, color=red];
m12_89 -> m12_91  [key=0, style=solid];
m12_89 -> m12_97  [key=2, style=dotted];
m12_90 -> m12_94  [key=0, style=solid, color=red];
m12_90 -> m12_98  [key=2, style=dotted, color=red];
m12_90 -> m12_95  [key=2, style=dotted, color=red];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label=started];
m12_93 -> m12_94  [key=0, style=solid];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_91  [key=1, style=dashed, color=darkseagreen4, label=firstAttempt];
m12_82 -> m12_82  [key=3, color=darkorchid, style=bold, label="Local variable bool firstAttempt"];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_93  [key=0, style=solid];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_99  [key=2, style=dotted];
m12_85 -> m12_86  [key=0, style=solid, color=red];
m12_85 -> m12_87  [key=0, style=solid];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_93  [key=0, style=solid];
m12_92 -> m12_83  [key=0, style=solid];
m12_94 -> m12_73  [key=0, style=bold, color=blue];
m12_44 -> m12_104  [key=0, style=solid];
m12_44 -> m12_29  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Storage.IStorageConnection connection"];
m12_44 -> m12_30  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_106  [key=2, style=dotted];
m12_104 -> m12_107  [key=2, style=dotted];
m12_104 -> m12_108  [key=2, style=dotted];
m12_105 -> m12_44  [key=0, style=bold, color=blue];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_14 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_14 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label=awaitingState];
m12_17 -> m12_20  [key=0, style=solid];
m12_17 -> m12_21  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_20  [key=0, style=solid];
m12_18 -> m12_22  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_23  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_18  [key=0, style=solid];
m12_20 -> m12_14  [key=0, style=bold, color=blue];
m12_21 -> m12_29  [key=0, style=solid];
m12_21 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.AwaitingState"];
m12_21 -> m12_33  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m12_21 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.AwaitingState"];
m12_21 -> m12_41  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m12_21 -> m12_14  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ElectStateContext context"];
m12_21 -> m12_15  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.AwaitingState awaitingState"];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_29 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_29 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_29 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_29 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label=parentId];
m12_30 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label=parentId];
m12_30 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=parentId];
m12_30 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label=parentId];
m12_30 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label=parentId];
m12_33 -> m12_34  [key=0, style=solid, color=red];
m12_33 -> m12_45  [key=2, style=dotted, color=red];
m12_33 -> m12_46  [key=2, style=dotted, color=red];
m12_40 -> m12_41  [key=0, style=solid, color=red];
m12_40 -> m12_52  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid, color=red];
m12_41 -> m12_53  [key=2, style=dotted, color=red];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_43  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid, color=red];
m12_32 -> m12_44  [key=2, style=dotted];
m12_32 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label=continuations];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_47  [key=2, style=dotted];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_50  [key=2, style=dotted];
m12_37 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m12_37 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_51  [key=2, style=dotted];
m12_36 -> m12_42  [key=0, style=solid];
m12_36 -> m12_48  [key=2, style=dotted];
m12_36 -> m12_49  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_37  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_42  [key=0, style=solid];
m12_39 -> m12_22  [key=2, style=dotted];
m12_42 -> m12_21  [key=0, style=bold, color=blue];
m12_4 -> m12_5  [key=0, style=solid, color=red];
m12_4 -> m12_7  [key=1, style=dashed, color=red, label="Hangfire.States.IBackgroundJobStateChanger"];
m12_4 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.HashSet<string>"];
m12_4 -> m12_10  [key=1, style=dashed, color=red, label="Hangfire.States.IBackgroundJobStateChanger"];
m12_5 -> m12_6  [key=0, style=solid, color=red];
m12_5 -> m12_7  [key=0, style=solid, color=red];
m12_7 -> m12_8  [key=0, style=solid, color=red];
m12_7 -> m12_9  [key=0, style=solid, color=red];
m12_9 -> m12_10  [key=0, style=solid, color=red];
m12_10 -> m12_11  [key=0, style=solid, color=red];
m12_6 -> m12_12  [key=0, style=solid, color=red];
m12_6 -> m12_13  [key=2, style=dotted, color=red];
m12_8 -> m12_12  [key=0, style=solid, color=red];
m12_8 -> m12_13  [key=2, style=dotted, color=red];
m12_11 -> m12_12  [key=0, style=solid];
m12_12 -> m12_4  [key=0, style=bold, color=blue];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=awaitingState];
m12_27 -> m12_28  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=0, style=solid];
m12_28 -> m12_24  [key=0, style=bold, color=blue];
m12_23 -> m12_54  [key=0, style=solid, color=red];
m12_23 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_23 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m12_23 -> m12_69  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m12_23 -> m12_14  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ElectStateContext context"];
m12_54 -> m12_55  [key=0, style=solid, color=red];
m12_54 -> m12_44  [key=2, style=dotted, color=red];
m12_54 -> m12_56  [key=1, style=dashed, color=red, label=continuations];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_73  [key=2, style=dotted];
m12_58 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m12_58 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m12_58 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m12_58 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m12_61 -> m12_62  [key=0, style=solid, color=red];
m12_61 -> m12_63  [key=0, style=solid];
m12_61 -> m12_52  [key=2, style=dotted];
m12_61 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m12_61 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m12_69 -> m12_68  [key=0, style=solid, color=red];
m12_69 -> m12_78  [key=2, style=dotted, color=red];
m12_69 -> m12_79  [key=2, style=dotted, color=red];
m12_69 -> m12_69  [key=1, style=dashed, color=red, label=tuple];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_71  [key=2, style=dotted];
m12_55 -> m12_62  [key=1, style=dashed, color=red, label=nextStates];
m12_55 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=nextStates];
m12_55 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label=nextStates];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_68  [key=0, style=solid];
m12_62 -> m12_56  [key=0, style=solid, color=red];
m12_62 -> m12_53  [key=2, style=dotted, color=red];
m12_62 -> m12_74  [key=2, style=dotted, color=red];
m12_62 -> m12_62  [key=1, style=dashed, color=red, label=continuation];
m12_62 -> m12_67  [key=1, style=dashed, color=red, label=continuation];
m12_67 -> m12_56  [key=0, style=solid];
m12_67 -> m12_74  [key=2, style=dotted];
m12_67 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m12_68 -> m12_69  [key=0, style=solid, color=red];
m12_68 -> m12_70  [key=0, style=solid];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_56  [key=0, style=solid];
m12_57 -> m12_72  [key=2, style=dotted];
m12_57 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_56  [key=0, style=solid];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_56  [key=0, style=solid];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_67  [key=0, style=solid];
m12_64 -> m12_75  [key=2, style=dotted];
m12_64 -> m12_76  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_65 -> m12_66  [key=0, style=solid, color=red];
m12_66 -> m12_67  [key=0, style=solid, color=red];
m12_66 -> m12_77  [key=2, style=dotted, color=red];
m12_70 -> m12_23  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_2  [key=0, style=bold, color=blue];
m12_109 -> m12_110  [key=0, style=solid];
m12_110 -> m12_109  [key=0, style=bold, color=blue];
m12_111 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m12_111 -> m12_10  [key=1, style=dashed, color=red, label="Hangfire.ContinuationsSupportAttribute"];
m12_111 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m12_111 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m12_111 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m12_111 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m12_111 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m12_111 -> m12_69  [key=1, style=dashed, color=red, label="Hangfire.ContinuationsSupportAttribute"];
m14_0 -> m14_1  [key=0, style=solid, color=red];
m14_1 -> m14_2  [key=0, style=solid, color=red];
m14_1 -> m14_3  [key=2, style=dotted, color=red];
m14_1 -> m14_4  [key=2, style=dotted, color=red];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_5 -> m14_6  [key=0, style=solid, color=red];
m14_6 -> m14_7  [key=0, style=solid, color=red];
m14_6 -> m14_8  [key=2, style=dotted, color=red];
m14_7 -> m14_5  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m15_0 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_2 -> m15_5  [key=0, style=solid];
m15_2 -> m15_6  [key=2, style=dotted];
m15_5 -> m15_0  [key=0, style=bold, color=blue];
m15_24 -> m15_31  [key=0, style=solid, color=green];
m15_31 -> m15_32  [key=0, style=solid, color=green];
m15_31 -> m15_33  [key=2, style=dotted, color=green];
m15_31 -> m15_34  [key=2, style=dotted, color=green];
m15_32 -> m15_24  [key=0, style=bold, color=blue];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_7 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_8 -> m15_9  [key=0, style=solid, color=green];
m15_8 -> m15_17  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_19  [key=2, style=dotted];
m15_12 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_19  [key=2, style=dotted];
m15_15 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_9 -> m15_10  [key=0, style=solid, color=green];
m15_9 -> m15_9  [key=3, color=green, style=bold, label="Local variable int removedCount"];
m15_10 -> m15_11  [key=0, style=solid, color=green];
m15_10 -> m15_18  [key=2, style=dotted, color=green];
m15_10 -> m15_21  [key=1, style=dashed, color=green, label="lambda expression"];
m15_10 -> m15_14  [key=1, style=dashed, color=green, label=removedCount];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_14  [key=0, style=solid];
m15_14 -> m15_9  [key=0, style=solid, color=green];
m15_14 -> m15_15  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_20  [key=2, style=dotted];
m15_13 -> m15_13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_13 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_16 -> m15_7  [key=0, style=bold, color=blue];
m15_26 -> m15_27  [key=0, style=solid, color=green];
m15_27 -> m15_28  [key=0, style=solid, color=green];
m15_27 -> m15_29  [key=2, style=dotted, color=green];
m15_27 -> m15_30  [key=2, style=dotted, color=green];
m15_28 -> m15_26  [key=0, style=bold, color=blue];
m15_21 -> m15_22  [key=0, style=solid, color=green];
m15_22 -> m15_23  [key=0, style=solid, color=green];
m15_22 -> m15_24  [key=2, style=dotted, color=green];
m15_22 -> m15_25  [key=2, style=dotted, color=green];
m15_23 -> m15_21  [key=0, style=bold, color=blue];
m15_35 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m15_35 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m15_35 -> m15_10  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.CountersAggregator"];
m15_35 -> m15_22  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.CountersAggregator"];
m15_35 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m15_35 -> m15_27  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.CountersAggregator"];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid, color=red];
m19_1 -> m19_2  [key=0, style=solid, color=red];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_0 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.IMsmqTransaction"];
m21_0 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=0, style=solid];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_6 -> m21_7  [key=0, style=solid];
m21_2 -> m21_7  [key=0, style=solid];
m21_2 -> m21_8  [key=2, style=dotted];
m21_4 -> m21_7  [key=0, style=solid];
m21_4 -> m21_8  [key=2, style=dotted];
m21_7 -> m21_0  [key=0, style=bold, color=blue];
m21_17 -> m21_18  [key=0, style=solid];
m21_18 -> m21_19  [key=0, style=solid];
m21_18 -> m21_20  [key=2, style=dotted];
m21_19 -> m21_17  [key=0, style=bold, color=blue];
m21_9 -> m21_10  [key=0, style=solid];
m21_10 -> m21_11  [key=0, style=solid];
m21_10 -> m21_12  [key=2, style=dotted];
m21_11 -> m21_9  [key=0, style=bold, color=blue];
m21_12 -> m21_0  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.SqlServer.Msmq.IMsmqTransaction _transaction"];
m21_13 -> m21_14  [key=0, style=solid];
m21_14 -> m21_15  [key=0, style=solid];
m21_14 -> m21_16  [key=2, style=dotted];
m21_15 -> m21_13  [key=0, style=bold, color=blue];
m21_21 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m21_21 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m21_21 -> m21_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m21_21 -> m21_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m21_21 -> m21_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_0  [key=0, style=bold, color=blue];
m25_2 -> m25_3  [key=0, style=solid];
m25_3 -> m25_2  [key=0, style=bold, color=blue];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_4  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [key=0, style=bold, color=blue];
m27_31 -> m27_172  [key=0, style=solid];
m27_172 -> m27_31  [key=0, style=bold, color=blue];
m27_32 -> m27_33  [key=0, style=solid, color=red];
m27_33 -> m27_34  [key=0, style=solid, color=red];
m27_33 -> m27_36  [key=2, style=dotted, color=red];
m27_33 -> m27_38  [key=1, style=dashed, color=red, label="lambda expression"];
m27_34 -> m27_35  [key=0, style=solid, color=red];
m27_34 -> m27_37  [key=2, style=dotted, color=red];
m27_35 -> m27_32  [key=0, style=bold, color=blue];
m27_77 -> m27_78  [key=0, style=solid];
m27_78 -> m27_79  [key=0, style=solid];
m27_78 -> m27_82  [key=2, style=dotted];
m27_78 -> m27_84  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_79 -> m27_80  [key=0, style=solid];
m27_79 -> m27_36  [key=2, style=dotted];
m27_79 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_80 -> m27_81  [key=0, style=solid];
m27_80 -> m27_37  [key=2, style=dotted];
m27_81 -> m27_77  [key=0, style=bold, color=blue];
m27_56 -> m27_57  [key=0, style=solid];
m27_57 -> m27_58  [key=0, style=solid];
m27_57 -> m27_12  [key=2, style=dotted];
m27_58 -> m27_59  [key=0, style=solid];
m27_58 -> m27_60  [key=2, style=dotted];
m27_58 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_59 -> m27_56  [key=0, style=bold, color=blue];
m27_95 -> m27_96  [key=0, style=solid];
m27_96 -> m27_97  [key=0, style=solid];
m27_96 -> m27_82  [key=2, style=dotted];
m27_97 -> m27_98  [key=0, style=solid];
m27_97 -> m27_27  [key=2, style=dotted];
m27_98 -> m27_99  [key=0, style=solid];
m27_98 -> m27_100  [key=2, style=dotted];
m27_98 -> m27_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_99 -> m27_95  [key=0, style=bold, color=blue];
m27_114 -> m27_115  [key=0, style=solid];
m27_115 -> m27_116  [key=0, style=solid];
m27_115 -> m27_82  [key=2, style=dotted];
m27_115 -> m27_117  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_115 -> m27_126  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_116 -> m27_117  [key=0, style=solid];
m27_116 -> m27_13  [key=2, style=dotted];
m27_116 -> m27_36  [key=2, style=dotted];
m27_116 -> m27_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_117 -> m27_118  [key=0, style=solid];
m27_117 -> m27_36  [key=2, style=dotted];
m27_117 -> m27_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_117 -> m27_119  [key=1, style=dashed, color=darkseagreen4, label=exception];
m27_118 -> m27_119  [key=0, style=solid];
m27_118 -> m27_121  [key=2, style=dotted];
m27_119 -> m27_120  [key=0, style=solid];
m27_119 -> m27_36  [key=2, style=dotted];
m27_120 -> m27_114  [key=0, style=bold, color=blue];
m27_146 -> m27_147  [key=0, style=solid];
m27_147 -> m27_148  [key=0, style=solid];
m27_147 -> m27_82  [key=2, style=dotted];
m27_148 -> m27_149  [key=0, style=solid];
m27_148 -> m27_136  [key=2, style=dotted];
m27_149 -> m27_150  [key=0, style=solid];
m27_149 -> m27_100  [key=2, style=dotted];
m27_149 -> m27_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_150 -> m27_146  [key=0, style=bold, color=blue];
m27_42 -> m27_43  [key=0, style=solid];
m27_43 -> m27_44  [key=0, style=solid];
m27_43 -> m27_36  [key=2, style=dotted];
m27_43 -> m27_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_44 -> m27_45  [key=0, style=solid];
m27_44 -> m27_37  [key=2, style=dotted];
m27_45 -> m27_42  [key=0, style=bold, color=blue];
m27_169 -> m27_170  [key=0, style=solid];
m27_20 -> m27_21  [key=0, style=solid, color=red];
m27_24 -> m27_25  [key=0, style=solid, color=red];
m27_28 -> m27_29  [key=0, style=solid, color=red];
m27_21 -> m27_22  [key=0, style=solid, color=red];
m27_21 -> m27_23  [key=2, style=dotted, color=red];
m27_22 -> m27_20  [key=0, style=bold, color=blue];
m27_25 -> m27_26  [key=0, style=solid, color=red];
m27_25 -> m27_27  [key=2, style=dotted, color=red];
m27_26 -> m27_24  [key=0, style=bold, color=blue];
m27_29 -> m27_30  [key=0, style=solid, color=red];
m27_29 -> m27_31  [key=2, style=dotted, color=red];
m27_30 -> m27_28  [key=0, style=bold, color=blue];
m27_38 -> m27_39  [key=0, style=solid, color=red];
m27_39 -> m27_40  [key=0, style=solid, color=red];
m27_39 -> m27_41  [key=2, style=dotted, color=red];
m27_40 -> m27_38  [key=0, style=bold, color=blue];
m27_46 -> m27_47  [key=0, style=solid];
m27_47 -> m27_48  [key=0, style=solid];
m27_47 -> m27_41  [key=2, style=dotted];
m27_48 -> m27_46  [key=0, style=bold, color=blue];
m27_53 -> m27_54  [key=0, style=solid];
m27_54 -> m27_55  [key=0, style=solid];
m27_54 -> m27_41  [key=2, style=dotted];
m27_55 -> m27_53  [key=0, style=bold, color=blue];
m27_61 -> m27_62  [key=0, style=solid];
m27_62 -> m27_63  [key=0, style=solid];
m27_62 -> m27_64  [key=2, style=dotted];
m27_63 -> m27_61  [key=0, style=bold, color=blue];
m27_68 -> m27_69  [key=0, style=solid];
m27_69 -> m27_70  [key=0, style=solid];
m27_69 -> m27_41  [key=2, style=dotted];
m27_70 -> m27_68  [key=0, style=bold, color=blue];
m27_74 -> m27_75  [key=0, style=solid];
m27_75 -> m27_76  [key=0, style=solid];
m27_75 -> m27_41  [key=2, style=dotted];
m27_76 -> m27_74  [key=0, style=bold, color=blue];
m27_84 -> m27_85  [key=0, style=solid];
m27_84 -> m27_27  [key=2, style=dotted];
m27_83 -> m27_84  [key=0, style=solid];
m27_85 -> m27_83  [key=0, style=bold, color=blue];
m27_92 -> m27_93  [key=0, style=solid];
m27_92 -> m27_94  [key=2, style=dotted];
m27_91 -> m27_92  [key=0, style=solid];
m27_93 -> m27_91  [key=0, style=bold, color=blue];
m27_101 -> m27_102  [key=0, style=solid];
m27_102 -> m27_103  [key=0, style=solid];
m27_102 -> m27_36  [key=2, style=dotted];
m27_102 -> m27_104  [key=2, style=dotted];
m27_103 -> m27_101  [key=0, style=bold, color=blue];
m27_111 -> m27_112  [key=0, style=solid];
m27_112 -> m27_113  [key=0, style=solid];
m27_112 -> m27_36  [key=2, style=dotted];
m27_112 -> m27_104  [key=2, style=dotted];
m27_113 -> m27_111  [key=0, style=bold, color=blue];
m27_126 -> m27_127  [key=0, style=solid];
m27_126 -> m27_27  [key=2, style=dotted];
m27_122 -> m27_123  [key=0, style=solid];
m27_125 -> m27_126  [key=0, style=solid];
m27_123 -> m27_124  [key=0, style=solid];
m27_123 -> m27_36  [key=2, style=dotted];
m27_123 -> m27_104  [key=2, style=dotted];
m27_124 -> m27_122  [key=0, style=bold, color=blue];
m27_127 -> m27_125  [key=0, style=bold, color=blue];
m27_134 -> m27_135  [key=0, style=solid];
m27_134 -> m27_136  [key=2, style=dotted];
m27_133 -> m27_134  [key=0, style=solid];
m27_135 -> m27_133  [key=0, style=bold, color=blue];
m27_143 -> m27_144  [key=0, style=solid];
m27_143 -> m27_145  [key=2, style=dotted];
m27_142 -> m27_143  [key=0, style=solid];
m27_144 -> m27_142  [key=0, style=bold, color=blue];
m27_151 -> m27_152  [key=0, style=solid];
m27_152 -> m27_153  [key=0, style=solid];
m27_152 -> m27_36  [key=2, style=dotted];
m27_152 -> m27_136  [key=2, style=dotted];
m27_153 -> m27_151  [key=0, style=bold, color=blue];
m27_159 -> m27_160  [key=0, style=solid];
m27_160 -> m27_161  [key=0, style=solid];
m27_160 -> m27_36  [key=2, style=dotted];
m27_160 -> m27_136  [key=2, style=dotted];
m27_161 -> m27_159  [key=0, style=bold, color=blue];
m27_170 -> m27_171  [key=0, style=solid];
m27_170 -> m27_36  [key=2, style=dotted];
m27_170 -> m27_136  [key=2, style=dotted];
m27_171 -> m27_169  [key=0, style=bold, color=blue];
m27_86 -> m27_87  [key=0, style=solid];
m27_87 -> m27_88  [key=0, style=solid];
m27_87 -> m27_82  [key=2, style=dotted];
m27_87 -> m27_92  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_88 -> m27_89  [key=0, style=solid];
m27_88 -> m27_36  [key=2, style=dotted];
m27_88 -> m27_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_89 -> m27_90  [key=0, style=solid];
m27_89 -> m27_37  [key=2, style=dotted];
m27_90 -> m27_86  [key=0, style=bold, color=blue];
m27_105 -> m27_106  [key=0, style=solid];
m27_106 -> m27_107  [key=0, style=solid];
m27_106 -> m27_13  [key=2, style=dotted];
m27_106 -> m27_14  [key=2, style=dotted];
m27_106 -> m27_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_107 -> m27_108  [key=0, style=solid];
m27_107 -> m27_82  [key=2, style=dotted];
m27_108 -> m27_109  [key=0, style=solid];
m27_108 -> m27_27  [key=2, style=dotted];
m27_109 -> m27_110  [key=0, style=solid];
m27_109 -> m27_37  [key=2, style=dotted];
m27_110 -> m27_105  [key=0, style=bold, color=blue];
m27_82 -> m27_173  [key=0, style=solid];
m27_173 -> m27_174  [key=0, style=solid];
m27_173 -> m27_41  [key=2, style=dotted];
m27_174 -> m27_82  [key=0, style=bold, color=blue];
m27_65 -> m27_66  [key=0, style=solid];
m27_66 -> m27_67  [key=0, style=solid];
m27_66 -> m27_60  [key=2, style=dotted];
m27_66 -> m27_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_67 -> m27_65  [key=0, style=bold, color=blue];
m27_128 -> m27_129  [key=0, style=solid];
m27_129 -> m27_130  [key=0, style=solid];
m27_129 -> m27_82  [key=2, style=dotted];
m27_129 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_130 -> m27_131  [key=0, style=solid];
m27_130 -> m27_36  [key=2, style=dotted];
m27_130 -> m27_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_131 -> m27_132  [key=0, style=solid];
m27_131 -> m27_37  [key=2, style=dotted];
m27_132 -> m27_128  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid, color=red];
m27_1 -> m27_2  [key=0, style=solid, color=red];
m27_1 -> m27_11  [key=2, style=dotted, color=red];
m27_2 -> m27_3  [key=0, style=solid, color=red];
m27_2 -> m27_12  [key=2, style=dotted, color=red];
m27_3 -> m27_4  [key=0, style=solid, color=red];
m27_3 -> m27_13  [key=2, style=dotted, color=red];
m27_3 -> m27_14  [key=2, style=dotted, color=red];
m27_3 -> m27_20  [key=1, style=dashed, color=red, label="lambda expression"];
m27_4 -> m27_5  [key=0, style=solid, color=red];
m27_4 -> m27_15  [key=2, style=dotted, color=red];
m27_5 -> m27_6  [key=0, style=solid, color=red];
m27_5 -> m27_16  [key=2, style=dotted, color=red];
m27_5 -> m27_1  [key=3, color=red, style=bold, label="Property variable Hangfire.Server.IServerProcess InnerProcess"];
m27_6 -> m27_7  [key=0, style=solid, color=red];
m27_6 -> m27_13  [key=2, style=dotted, color=red];
m27_6 -> m27_14  [key=2, style=dotted, color=red];
m27_6 -> m27_24  [key=1, style=dashed, color=red, label="lambda expression"];
m27_7 -> m27_8  [key=0, style=solid, color=red];
m27_7 -> m27_17  [key=2, style=dotted, color=red];
m27_8 -> m27_9  [key=0, style=solid, color=red];
m27_8 -> m27_18  [key=2, style=dotted, color=red];
m27_9 -> m27_10  [key=0, style=solid, color=red];
m27_9 -> m27_19  [key=2, style=dotted, color=red];
m27_9 -> m27_28  [key=1, style=dashed, color=red, label="lambda expression"];
m27_10 -> m27_0  [key=0, style=bold, color=blue];
m27_49 -> m27_50  [key=0, style=solid];
m27_50 -> m27_51  [key=0, style=solid];
m27_50 -> m27_36  [key=2, style=dotted];
m27_50 -> m27_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_51 -> m27_52  [key=0, style=solid];
m27_51 -> m27_37  [key=2, style=dotted];
m27_52 -> m27_49  [key=0, style=bold, color=blue];
m27_154 -> m27_155  [key=0, style=solid];
m27_155 -> m27_156  [key=0, style=solid];
m27_155 -> m27_82  [key=2, style=dotted];
m27_156 -> m27_157  [key=0, style=solid];
m27_156 -> m27_136  [key=2, style=dotted];
m27_157 -> m27_158  [key=0, style=solid];
m27_157 -> m27_100  [key=2, style=dotted];
m27_157 -> m27_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_158 -> m27_154  [key=0, style=bold, color=blue];
m27_162 -> m27_163  [key=0, style=solid];
m27_163 -> m27_164  [key=0, style=solid];
m27_163 -> m27_13  [key=2, style=dotted];
m27_163 -> m27_14  [key=2, style=dotted];
m27_163 -> m27_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_164 -> m27_165  [key=0, style=solid];
m27_164 -> m27_82  [key=2, style=dotted];
m27_165 -> m27_166  [key=0, style=solid];
m27_165 -> m27_136  [key=2, style=dotted];
m27_166 -> m27_167  [key=0, style=solid];
m27_166 -> m27_168  [key=2, style=dotted];
m27_167 -> m27_162  [key=0, style=bold, color=blue];
m27_137 -> m27_138  [key=0, style=solid];
m27_138 -> m27_139  [key=0, style=solid];
m27_138 -> m27_82  [key=2, style=dotted];
m27_138 -> m27_143  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_139 -> m27_140  [key=0, style=solid];
m27_139 -> m27_36  [key=2, style=dotted];
m27_139 -> m27_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_140 -> m27_141  [key=0, style=solid];
m27_140 -> m27_37  [key=2, style=dotted];
m27_141 -> m27_137  [key=0, style=bold, color=blue];
m27_71 -> m27_72  [key=0, style=solid];
m27_72 -> m27_73  [key=0, style=solid];
m27_72 -> m27_60  [key=2, style=dotted];
m27_72 -> m27_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_73 -> m27_71  [key=0, style=bold, color=blue];
m27_175 -> m27_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_4  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_5  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_6  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_25  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_7  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_8  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_9  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_33  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_39  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_126  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_175 -> m27_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m27_176 -> m27_84  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_177 -> m27_92  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_178 -> m27_126  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_179 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m27_180 -> m27_143  [key=1, style=dashed, color=darkseagreen4, label=client];
m28_6 -> m28_7  [key=0, style=solid];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_18  [key=2, style=dotted];
m28_7 -> m28_9  [key=1, style=dashed, color=darkseagreen4, label=type];
m28_7 -> m28_11  [key=1, style=dashed, color=darkseagreen4, label=type];
m28_7 -> m28_14  [key=1, style=dashed, color=darkseagreen4, label=type];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_19  [key=2, style=dotted];
m28_8 -> m28_11  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m28_9 -> m28_10  [key=0, style=solid];
m28_9 -> m28_20  [key=2, style=dotted];
m28_9 -> m28_13  [key=1, style=dashed, color=red, label=method];
m28_9 -> m28_14  [key=1, style=dashed, color=darkseagreen4, label=method];
m28_11 -> m28_17  [key=0, style=solid];
m28_11 -> m28_21  [key=2, style=dotted];
m28_11 -> m28_22  [key=2, style=dotted];
m28_11 -> m28_23  [key=2, style=dotted];
m28_11 -> m28_24  [key=2, style=dotted];
m28_11 -> m28_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_14 -> m28_17  [key=0, style=solid];
m28_14 -> m28_26  [key=2, style=dotted];
m28_10 -> m28_11  [key=0, style=solid];
m28_10 -> m28_12  [key=0, style=solid, color=red];
m28_13 -> m28_14  [key=0, style=solid, color=red];
m28_13 -> m28_25  [key=2, style=dotted, color=red];
m28_12 -> m28_13  [key=0, style=solid, color=red];
m28_12 -> m28_19  [key=2, style=dotted, color=red];
m28_15 -> m28_16  [key=0, style=solid];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_27  [key=2, style=dotted];
m28_17 -> m28_6  [key=0, style=bold, color=blue];
m28_20 -> m28_87  [key=0, style=solid];
m28_20 -> m28_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_20 -> m28_91  [key=1, style=dashed, color=darkseagreen4, label="System.Type[]"];
m28_20 -> m28_98  [key=1, style=dashed, color=darkseagreen4, label="System.Type[]"];
m28_20 -> m28_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m28_20 -> m28_8  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type[] parameterTypes"];
m28_20 -> m28_44  [key=3, color=red, style=bold, label="method methodReturn System.Reflection.MethodInfo GetNonOpenMatchingMethod"];
m28_87 -> m28_88  [key=0, style=solid];
m28_87 -> m28_108  [key=2, style=dotted];
m28_89 -> m28_90  [key=0, style=solid];
m28_89 -> m28_88  [key=0, style=solid];
m28_89 -> m28_109  [key=2, style=dotted];
m28_91 -> m28_92  [key=0, style=solid];
m28_91 -> m28_88  [key=0, style=solid];
m28_98 -> m28_99  [key=0, style=solid];
m28_98 -> m28_100  [key=1, style=dashed, color=darkseagreen4, label=actualType];
m28_98 -> m28_101  [key=1, style=dashed, color=darkseagreen4, label=actualType];
m28_88 -> m28_89  [key=0, style=solid];
m28_88 -> m28_106  [key=0, style=solid];
m28_88 -> m28_90  [key=1, style=dashed, color=darkseagreen4, label=methodCandidate];
m28_88 -> m28_105  [key=1, style=dashed, color=darkseagreen4, label=methodCandidate];
m28_106 -> m28_107  [key=0, style=solid];
m28_90 -> m28_91  [key=0, style=solid];
m28_90 -> m28_34  [key=2, style=dotted];
m28_90 -> m28_95  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m28_90 -> m28_96  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m28_105 -> m28_107  [key=0, style=solid];
m28_105 -> m28_55  [key=2, style=dotted];
m28_105 -> m28_112  [key=2, style=dotted];
m28_95 -> m28_96  [key=0, style=solid];
m28_95 -> m28_104  [key=0, style=solid];
m28_95 -> m28_59  [key=3, color=red, style=bold, label="Local variable int i"];
m28_96 -> m28_97  [key=0, style=solid];
m28_92 -> m28_93  [key=0, style=solid];
m28_92 -> m28_104  [key=1, style=dashed, color=darkseagreen4, label=parameterTypesMatched];
m28_92 -> m28_92  [key=3, color=darkorchid, style=bold, label="Local variable bool parameterTypesMatched"];
m28_93 -> m28_94  [key=0, style=solid];
m28_93 -> m28_110  [key=2, style=dotted];
m28_93 -> m28_100  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
m28_93 -> m28_105  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
m28_104 -> m28_105  [key=0, style=solid];
m28_104 -> m28_88  [key=0, style=solid];
m28_94 -> m28_95  [key=0, style=solid];
m28_94 -> m28_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_94 -> m28_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_94 -> m28_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_100 -> m28_95  [key=0, style=solid];
m28_100 -> m28_54  [key=2, style=dotted];
m28_103 -> m28_95  [key=0, style=solid];
m28_103 -> m28_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m28_97 -> m28_98  [key=0, style=solid];
m28_97 -> m28_99  [key=1, style=dashed, color=darkseagreen4, label=parameterType];
m28_97 -> m28_101  [key=1, style=dashed, color=darkseagreen4, label=parameterType];
m28_99 -> m28_100  [key=0, style=solid];
m28_99 -> m28_101  [key=0, style=solid];
m28_101 -> m28_102  [key=0, style=solid];
m28_101 -> m28_95  [key=0, style=solid];
m28_101 -> m28_111  [key=2, style=dotted];
m28_102 -> m28_104  [key=0, style=solid];
m28_107 -> m28_20  [key=0, style=bold, color=blue];
m28_25 -> m28_56  [key=0, style=solid, color=red];
m28_25 -> m28_57  [key=1, style=dashed, color=red, label="string[]"];
m28_25 -> m28_61  [key=1, style=dashed, color=red, label="string[]"];
m28_25 -> m28_9  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo methodInfo"];
m28_25 -> m28_12  [key=3, color=red, style=bold, label="Parameter variable string[] arguments"];
m28_56 -> m28_57  [key=0, style=solid, color=red];
m28_56 -> m28_34  [key=2, style=dotted, color=red];
m28_56 -> m28_59  [key=1, style=dashed, color=red, label=parameters];
m28_56 -> m28_60  [key=1, style=dashed, color=red, label=parameters];
m28_57 -> m28_58  [key=0, style=solid, color=red];
m28_57 -> m28_52  [key=2, style=dotted, color=red];
m28_57 -> m28_66  [key=1, style=dashed, color=red, label=result];
m28_57 -> m28_68  [key=1, style=dashed, color=red, label=result];
m28_61 -> m28_62  [key=0, style=solid, color=red];
m28_61 -> m28_65  [key=1, style=dashed, color=red, label=argument];
m28_59 -> m28_60  [key=0, style=solid, color=red];
m28_59 -> m28_68  [key=0, style=solid, color=red];
m28_59 -> m28_59  [key=3, color=red, style=bold, label="Local variable int i"];
m28_60 -> m28_61  [key=0, style=solid, color=red];
m28_60 -> m28_63  [key=1, style=dashed, color=red, label=parameter];
m28_60 -> m28_64  [key=1, style=dashed, color=red, label=parameter];
m28_60 -> m28_65  [key=1, style=dashed, color=red, label=parameter];
m28_58 -> m28_59  [key=0, style=solid, color=red];
m28_58 -> m28_60  [key=1, style=dashed, color=red, label=i];
m28_58 -> m28_61  [key=1, style=dashed, color=red, label=i];
m28_58 -> m28_67  [key=1, style=dashed, color=red, label=i];
m28_66 -> m28_67  [key=0, style=solid, color=red];
m28_66 -> m28_54  [key=2, style=dotted, color=red];
m28_68 -> m28_69  [key=0, style=solid, color=red];
m28_68 -> m28_55  [key=2, style=dotted, color=red];
m28_67 -> m28_59  [key=0, style=solid, color=red];
m28_67 -> m28_67  [key=1, style=dashed, color=red, label=i];
m28_63 -> m28_64  [key=0, style=solid, color=red];
m28_63 -> m28_65  [key=0, style=solid, color=red];
m28_63 -> m28_70  [key=2, style=dotted, color=red];
m28_64 -> m28_66  [key=0, style=solid, color=red];
m28_64 -> m28_71  [key=2, style=dotted, color=red];
m28_65 -> m28_66  [key=0, style=solid, color=red];
m28_65 -> m28_72  [key=2, style=dotted, color=red];
m28_62 -> m28_63  [key=0, style=solid, color=red];
m28_62 -> m28_72  [key=3, color=red, style=bold, label="Local variable object value"];
m28_69 -> m28_25  [key=0, style=bold, color=blue];
m28_72 -> m28_73  [key=0, style=solid, color=red];
m28_72 -> m28_74  [key=1, style=dashed, color=red, label=string];
m28_72 -> m28_76  [key=1, style=dashed, color=red, label="System.Type"];
m28_72 -> m28_77  [key=1, style=dashed, color=red, label=string];
m28_72 -> m28_78  [key=1, style=dashed, color=red, label="System.Type"];
m28_72 -> m28_79  [key=1, style=dashed, color=red, label=string];
m28_72 -> m28_61  [key=3, color=red, style=bold, label="Parameter variable string argument"];
m28_73 -> m28_74  [key=0, style=solid, color=red];
m28_73 -> m28_72  [key=3, color=red, style=bold, label="Local variable object value"];
m28_74 -> m28_75  [key=0, style=solid, color=red];
m28_74 -> m28_82  [key=0, style=solid, color=red];
m28_74 -> m28_84  [key=2, style=dotted, color=red];
m28_76 -> m28_77  [key=0, style=solid, color=red];
m28_76 -> m28_78  [key=0, style=solid, color=red];
m28_77 -> m28_82  [key=0, style=solid, color=red];
m28_78 -> m28_79  [key=0, style=solid, color=red];
m28_78 -> m28_85  [key=2, style=dotted, color=red];
m28_79 -> m28_80  [key=0, style=solid, color=red];
m28_79 -> m28_82  [key=0, style=solid, color=red];
m28_79 -> m28_86  [key=2, style=dotted, color=red];
m28_75 -> m28_76  [key=0, style=solid, color=red];
m28_82 -> m28_83  [key=0, style=solid, color=red];
m28_80 -> m28_81  [key=0, style=solid, color=red];
m28_81 -> m28_83  [key=0, style=solid, color=red];
m28_83 -> m28_72  [key=0, style=bold, color=blue];
m28_31 -> m28_32  [key=0, style=solid, color=red];
m28_32 -> m28_33  [key=0, style=solid, color=red];
m28_32 -> m28_0  [key=2, style=dotted, color=red];
m28_32 -> m28_34  [key=2, style=dotted, color=red];
m28_32 -> m28_22  [key=2, style=dotted, color=red];
m28_32 -> m28_35  [key=2, style=dotted, color=red];
m28_32 -> m28_36  [key=2, style=dotted, color=red];
m28_32 -> m28_37  [key=2, style=dotted, color=red];
m28_32 -> m28_38  [key=2, style=dotted, color=red];
m28_32 -> m28_39  [key=1, style=dashed, color=red, label="lambda expression"];
m28_33 -> m28_31  [key=0, style=bold, color=blue];
m28_39 -> m28_40  [key=0, style=solid];
m28_28 -> m28_29  [key=0, style=solid];
m28_29 -> m28_30  [key=0, style=solid];
m28_30 -> m28_28  [key=0, style=bold, color=blue];
m28_40 -> m28_41  [key=0, style=solid];
m28_41 -> m28_39  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_0 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_0 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_4  [key=0, style=solid];
m28_4 -> m28_5  [key=0, style=solid];
m28_5 -> m28_0  [key=0, style=bold, color=blue];
m28_37 -> m28_42  [key=0, style=solid, color=red];
m28_37 -> m28_43  [key=1, style=dashed, color=red, label="System.Collections.Generic.IReadOnlyCollection<object>"];
m28_42 -> m28_43  [key=0, style=solid, color=red];
m28_42 -> m28_52  [key=2, style=dotted, color=red];
m28_42 -> m28_49  [key=1, style=dashed, color=red, label=serializedArguments];
m28_42 -> m28_50  [key=1, style=dashed, color=red, label=serializedArguments];
m28_43 -> m28_44  [key=0, style=solid, color=red];
m28_43 -> m28_50  [key=0, style=solid, color=red];
m28_43 -> m28_45  [key=1, style=dashed, color=red, label=argument];
m28_43 -> m28_46  [key=1, style=dashed, color=red, label=argument];
m28_43 -> m28_47  [key=1, style=dashed, color=red, label=argument];
m28_43 -> m28_48  [key=1, style=dashed, color=red, label=argument];
m28_49 -> m28_43  [key=0, style=solid, color=red];
m28_49 -> m28_54  [key=2, style=dotted, color=red];
m28_50 -> m28_51  [key=0, style=solid, color=red];
m28_50 -> m28_55  [key=2, style=dotted, color=red];
m28_44 -> m28_45  [key=0, style=solid, color=red];
m28_44 -> m28_49  [key=1, style=dashed, color=red, label=value];
m28_44 -> m28_44  [key=3, color=red, style=bold, label="Local variable string value"];
m28_45 -> m28_46  [key=0, style=solid, color=red];
m28_45 -> m28_49  [key=0, style=solid, color=red];
m28_46 -> m28_47  [key=0, style=solid, color=red];
m28_46 -> m28_48  [key=0, style=solid, color=red];
m28_47 -> m28_49  [key=0, style=solid, color=red];
m28_47 -> m28_53  [key=2, style=dotted, color=red];
m28_48 -> m28_49  [key=0, style=solid, color=red];
m28_48 -> m28_38  [key=2, style=dotted, color=red];
m28_51 -> m28_37  [key=0, style=bold, color=blue];
m28_113 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.InvocationData"];
m28_113 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.InvocationData"];
m28_113 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.InvocationData"];
m28_113 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.InvocationData"];
m28_113 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.InvocationData"];
m28_113 -> m28_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.InvocationData"];
m28_113 -> m28_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.InvocationData"];
m28_113 -> m28_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.InvocationData"];
m28_113 -> m28_12  [key=1, style=dashed, color=red, label="Hangfire.Storage.InvocationData"];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_0  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_0  [key=0, style=bold, color=blue];
m32_29 -> m32_42  [key=0, style=solid, color=red];
m32_29 -> m32_50  [key=1, style=dashed, color=red, label="Hangfire.IJobCancellationToken"];
m32_29 -> m32_15  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.IJobCancellationToken cancellationToken"];
m32_42 -> m32_43  [key=0, style=solid, color=red];
m32_42 -> m32_63  [key=2, style=dotted, color=red];
m32_42 -> m32_45  [key=1, style=dashed, color=red, label=parameters];
m32_42 -> m32_46  [key=1, style=dashed, color=red, label=parameters];
m32_50 -> m32_57  [key=0, style=solid, color=red];
m32_43 -> m32_44  [key=0, style=solid, color=red];
m32_43 -> m32_64  [key=2, style=dotted, color=red];
m32_43 -> m32_57  [key=1, style=dashed, color=red, label=result];
m32_43 -> m32_59  [key=1, style=dashed, color=red, label=result];
m32_45 -> m32_46  [key=0, style=solid, color=red];
m32_45 -> m32_59  [key=0, style=solid, color=red];
m32_45 -> m32_45  [key=3, color=red, style=bold, label="Local variable int i"];
m32_46 -> m32_47  [key=0, style=solid, color=red];
m32_46 -> m32_49  [key=1, style=dashed, color=red, label=parameter];
m32_46 -> m32_51  [key=1, style=dashed, color=red, label=parameter];
m32_46 -> m32_53  [key=1, style=dashed, color=red, label=parameter];
m32_46 -> m32_55  [key=1, style=dashed, color=red, label=parameter];
m32_44 -> m32_45  [key=0, style=solid, color=red];
m32_44 -> m32_46  [key=1, style=dashed, color=red, label=i];
m32_44 -> m32_47  [key=1, style=dashed, color=red, label=i];
m32_44 -> m32_58  [key=1, style=dashed, color=red, label=i];
m32_57 -> m32_58  [key=0, style=solid, color=red];
m32_57 -> m32_69  [key=2, style=dotted, color=red];
m32_59 -> m32_62  [key=0, style=solid, color=red];
m32_59 -> m32_70  [key=2, style=dotted, color=red];
m32_47 -> m32_48  [key=0, style=solid, color=red];
m32_47 -> m32_51  [key=1, style=dashed, color=red, label=argument];
m32_47 -> m32_54  [key=1, style=dashed, color=red, label=argument];
m32_47 -> m32_56  [key=1, style=dashed, color=red, label=argument];
m32_58 -> m32_45  [key=0, style=solid, color=red];
m32_58 -> m32_58  [key=1, style=dashed, color=red, label=i];
m32_49 -> m32_50  [key=0, style=solid, color=red];
m32_49 -> m32_51  [key=0, style=solid, color=red];
m32_49 -> m32_65  [key=2, style=dotted, color=red];
m32_51 -> m32_52  [key=0, style=solid, color=red];
m32_51 -> m32_57  [key=0, style=solid, color=red];
m32_51 -> m32_66  [key=2, style=dotted, color=red];
m32_53 -> m32_54  [key=0, style=solid, color=red];
m32_53 -> m32_55  [key=0, style=solid, color=red];
m32_55 -> m32_56  [key=0, style=solid, color=red];
m32_55 -> m32_67  [key=2, style=dotted, color=red];
m32_48 -> m32_49  [key=0, style=solid, color=red];
m32_48 -> m32_29  [key=3, color=red, style=bold, label="Local variable object value"];
m32_48 -> m32_47  [key=3, color=red, style=bold, label="Local variable object value"];
m32_54 -> m32_57  [key=0, style=solid, color=red];
m32_56 -> m32_57  [key=0, style=solid, color=red];
m32_56 -> m32_68  [key=2, style=dotted, color=red];
m32_52 -> m32_53  [key=0, style=solid, color=red];
m32_60 -> m32_61  [key=0, style=solid, color=red];
m32_61 -> m32_62  [key=0, style=solid, color=red];
m32_61 -> m32_41  [key=2, style=dotted, color=red];
m32_62 -> m32_29  [key=0, style=bold, color=blue];
m32_28 -> m32_31  [key=0, style=solid, color=red];
m32_28 -> m32_15  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.JobActivator activator"];
m32_31 -> m32_32  [key=0, style=solid, color=red];
m32_31 -> m32_38  [key=2, style=dotted, color=red];
m32_31 -> m32_34  [key=1, style=dashed, color=red, label=instance];
m32_32 -> m32_33  [key=0, style=solid, color=red];
m32_32 -> m32_34  [key=0, style=solid, color=red];
m32_34 -> m32_37  [key=0, style=solid, color=red];
m32_33 -> m32_37  [key=0, style=solid, color=red];
m32_33 -> m32_39  [key=2, style=dotted, color=red];
m32_33 -> m32_40  [key=2, style=dotted, color=red];
m32_35 -> m32_36  [key=0, style=solid, color=red];
m32_36 -> m32_37  [key=0, style=solid, color=red];
m32_36 -> m32_41  [key=2, style=dotted, color=red];
m32_37 -> m32_28  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid, color=red];
m32_0 -> m32_3  [key=1, style=dashed, color=red, label="System.Reflection.MethodInfo"];
m32_0 -> m32_5  [key=1, style=dashed, color=red, label="string[]"];
m32_0 -> m32_7  [key=1, style=dashed, color=red, label="System.Type"];
m32_0 -> m32_8  [key=1, style=dashed, color=red, label="System.Type"];
m32_0 -> m32_9  [key=1, style=dashed, color=red, label="System.Reflection.MethodInfo"];
m32_0 -> m32_10  [key=1, style=dashed, color=red, label="System.Reflection.MethodInfo"];
m32_1 -> m32_2  [key=0, style=solid, color=red];
m32_1 -> m32_3  [key=0, style=solid, color=red];
m32_3 -> m32_4  [key=0, style=solid, color=red];
m32_3 -> m32_5  [key=0, style=solid, color=red];
m32_5 -> m32_6  [key=0, style=solid, color=red];
m32_5 -> m32_7  [key=0, style=solid, color=red];
m32_7 -> m32_8  [key=0, style=solid, color=red];
m32_7 -> m32_13  [key=2, style=dotted, color=red];
m32_8 -> m32_9  [key=0, style=solid, color=red];
m32_9 -> m32_10  [key=0, style=solid, color=red];
m32_10 -> m32_11  [key=0, style=solid, color=red];
m32_10 -> m32_14  [key=2, style=dotted, color=red];
m32_2 -> m32_11  [key=0, style=solid, color=red];
m32_2 -> m32_12  [key=2, style=dotted, color=red];
m32_4 -> m32_11  [key=0, style=solid, color=red];
m32_4 -> m32_12  [key=2, style=dotted, color=red];
m32_6 -> m32_11  [key=0, style=solid, color=red];
m32_6 -> m32_12  [key=2, style=dotted, color=red];
m32_11 -> m32_0  [key=0, style=bold, color=blue];
m32_15 -> m32_16  [key=0, style=solid, color=red];
m32_15 -> m32_18  [key=1, style=dashed, color=red, label="Hangfire.IJobCancellationToken"];
m32_15 -> m32_23  [key=1, style=dashed, color=red, label="Hangfire.JobActivator"];
m32_15 -> m32_24  [key=1, style=dashed, color=red, label="Hangfire.IJobCancellationToken"];
m32_15 -> m32_21  [key=3, color=red, style=bold, label="method methodReturn object Perform"];
m32_16 -> m32_17  [key=0, style=solid, color=red];
m32_16 -> m32_18  [key=0, style=solid, color=red];
m32_18 -> m32_19  [key=0, style=solid, color=red];
m32_18 -> m32_20  [key=0, style=solid, color=red];
m32_23 -> m32_24  [key=0, style=solid, color=red];
m32_23 -> m32_28  [key=2, style=dotted, color=red];
m32_23 -> m32_25  [key=1, style=dashed, color=red, label=instance];
m32_24 -> m32_25  [key=0, style=solid, color=red];
m32_24 -> m32_29  [key=2, style=dotted, color=red];
m32_17 -> m32_27  [key=0, style=solid, color=red];
m32_17 -> m32_12  [key=2, style=dotted, color=red];
m32_19 -> m32_27  [key=0, style=solid, color=red];
m32_19 -> m32_12  [key=2, style=dotted, color=red];
m32_20 -> m32_21  [key=0, style=solid, color=red];
m32_20 -> m32_25  [key=1, style=dashed, color=red, label=instance];
m32_20 -> m32_20  [key=3, color=red, style=bold, label="Local variable object instance"];
m32_20 -> m32_28  [key=3, color=red, style=bold, label="Local variable object instance"];
m32_21 -> m32_22  [key=0, style=solid, color=red];
m32_21 -> m32_30  [key=3, color=red, style=bold, label="Local variable object result"];
m32_25 -> m32_26  [key=0, style=solid, color=red];
m32_25 -> m32_30  [key=2, style=dotted, color=red];
m32_22 -> m32_23  [key=0, style=solid, color=red];
m32_22 -> m32_24  [key=0, style=solid, color=red];
m32_26 -> m32_27  [key=0, style=solid, color=red];
m32_27 -> m32_15  [key=0, style=bold, color=blue];
m32_30 -> m32_71  [key=0, style=solid, color=red];
m32_30 -> m32_20  [key=3, color=red, style=bold, label="Parameter variable object instance"];
m32_30 -> m32_24  [key=3, color=red, style=bold, label="Parameter variable object[] deserializedArguments"];
m32_71 -> m32_76  [key=0, style=solid, color=red];
m32_71 -> m32_77  [key=2, style=dotted, color=red];
m32_72 -> m32_73  [key=0, style=solid, color=red];
m32_73 -> m32_74  [key=0, style=solid, color=red];
m32_73 -> m32_75  [key=0, style=solid, color=red];
m32_74 -> m32_76  [key=0, style=solid, color=red];
m32_75 -> m32_76  [key=0, style=solid, color=red];
m32_75 -> m32_41  [key=2, style=dotted, color=red];
m32_76 -> m32_30  [key=0, style=bold, color=blue];
m32_78 -> m32_79  [key=0, style=solid, color=red];
m32_78 -> m32_20  [key=3, color=red, style=bold, label="Parameter variable object instance"];
m32_79 -> m32_80  [key=0, style=solid, color=red];
m32_79 -> m32_81  [key=1, style=dashed, color=red, label=disposable];
m32_80 -> m32_81  [key=0, style=solid, color=red];
m32_80 -> m32_82  [key=0, style=solid, color=red];
m32_80 -> m32_84  [key=0, style=solid, color=red];
m32_81 -> m32_82  [key=0, style=solid, color=red];
m32_81 -> m32_84  [key=0, style=solid, color=red];
m32_81 -> m32_85  [key=2, style=dotted, color=red];
m32_82 -> m32_83  [key=0, style=solid, color=red];
m32_83 -> m32_84  [key=0, style=solid, color=red];
m32_83 -> m32_41  [key=2, style=dotted, color=red];
m32_84 -> m32_78  [key=0, style=bold, color=blue];
m32_86 -> m32_8  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_9  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_10  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_22  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_23  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_24  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_25  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_31  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_33  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_42  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_43  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_47  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m32_86 -> m32_71  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m34_31 -> m34_53  [key=0, style=solid];
m34_53 -> m34_54  [key=0, style=solid];
m34_53 -> m34_56  [key=2, style=dotted];
m34_54 -> m34_55  [key=0, style=solid];
m34_54 -> m34_57  [key=2, style=dotted];
m34_55 -> m34_31  [key=0, style=bold, color=blue];
m34_8 -> m34_9  [key=0, style=solid];
m34_8 -> m34_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m34_8 -> m34_13  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m34_8 -> m34_14  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m34_9 -> m34_10  [key=0, style=solid];
m34_12 -> m34_13  [key=0, style=solid];
m34_12 -> m34_29  [key=2, style=dotted];
m34_12 -> m34_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m34_13 -> m34_14  [key=0, style=solid];
m34_13 -> m34_13  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m34_13 -> m34_18  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m34_14 -> m34_15  [key=0, style=solid];
m34_14 -> m34_16  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m34_10 -> m34_11  [key=0, style=solid];
m34_11 -> m34_12  [key=0, style=solid];
m34_11 -> m34_13  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m34_18 -> m34_19  [key=0, style=solid];
m34_18 -> m34_33  [key=2, style=dotted];
m34_18 -> m34_34  [key=2, style=dotted];
m34_15 -> m34_16  [key=0, style=solid];
m34_15 -> m34_30  [key=2, style=dotted];
m34_15 -> m34_17  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m34_15 -> m34_18  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m34_15 -> m34_22  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m34_15 -> m34_23  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m34_15 -> m34_27  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m34_16 -> m34_17  [key=0, style=solid];
m34_16 -> m34_31  [key=2, style=dotted];
m34_16 -> m34_18  [key=1, style=dashed, color=darkseagreen4, label=messageQueue];
m34_17 -> m34_18  [key=0, style=solid];
m34_17 -> m34_32  [key=2, style=dotted];
m34_22 -> m34_23  [key=0, style=solid];
m34_22 -> m34_35  [key=2, style=dotted];
m34_23 -> m34_24  [key=0, style=solid];
m34_23 -> m34_36  [key=2, style=dotted];
m34_27 -> m34_28  [key=0, style=solid];
m34_27 -> m34_37  [key=2, style=dotted];
m34_27 -> m34_27  [key=3, color=darkorchid, style=bold, label="Local variable string title"];
m34_19 -> m34_20  [key=0, style=solid];
m34_19 -> m34_19  [key=1, style=dashed, color=darkseagreen4, label=message];
m34_20 -> m34_21  [key=0, style=solid];
m34_20 -> m34_26  [key=0, style=solid];
m34_20 -> m34_27  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m34_21 -> m34_22  [key=0, style=solid];
m34_26 -> m34_11  [key=0, style=solid];
m34_26 -> m34_27  [key=0, style=solid];
m34_24 -> m34_25  [key=0, style=solid];
m34_24 -> m34_26  [key=0, style=solid];
m34_25 -> m34_28  [key=0, style=solid];
m34_28 -> m34_8  [key=0, style=bold, color=blue];
m34_38 -> m34_39  [key=0, style=solid];
m34_38 -> m34_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_38 -> m34_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_39 -> m34_40  [key=0, style=solid];
m34_39 -> m34_41  [key=2, style=dotted];
m34_39 -> m34_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_40 -> m34_38  [key=0, style=bold, color=blue];
m34_42 -> m34_43  [key=0, style=solid];
m34_43 -> m34_44  [key=0, style=solid];
m34_43 -> m34_31  [key=2, style=dotted];
m34_43 -> m34_47  [key=1, style=dashed, color=darkseagreen4, label=messageQueue];
m34_44 -> m34_45  [key=0, style=solid];
m34_44 -> m34_50  [key=2, style=dotted];
m34_44 -> m34_47  [key=1, style=dashed, color=darkseagreen4, label=message];
m34_47 -> m34_48  [key=0, style=solid];
m34_47 -> m34_51  [key=2, style=dotted];
m34_45 -> m34_46  [key=0, style=solid];
m34_45 -> m34_30  [key=2, style=dotted];
m34_45 -> m34_47  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m34_45 -> m34_48  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m34_46 -> m34_47  [key=0, style=solid];
m34_46 -> m34_32  [key=2, style=dotted];
m34_48 -> m34_49  [key=0, style=solid];
m34_48 -> m34_52  [key=2, style=dotted];
m34_49 -> m34_42  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_3  [key=0, style=solid];
m34_3 -> m34_4  [key=0, style=solid];
m34_2 -> m34_5  [key=0, style=solid];
m34_2 -> m34_6  [key=2, style=dotted];
m34_4 -> m34_5  [key=0, style=solid];
m34_4 -> m34_7  [key=2, style=dotted];
m34_5 -> m34_0  [key=0, style=bold, color=blue];
m34_58 -> m34_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueJobQueue"];
m34_58 -> m34_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueJobQueue"];
m34_58 -> m34_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueJobQueue"];
m34_58 -> m34_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueJobQueue"];
m34_58 -> m34_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueJobQueue"];
m34_58 -> m34_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueJobQueue"];
m34_58 -> m34_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueJobQueue"];
m34_58 -> m34_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueJobQueue"];
m34_59 -> m34_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_60 -> m34_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_0  [key=0, style=bold, color=blue];
m39_0 -> m39_1  [key=0, style=solid, color=red];
m39_1 -> m39_2  [key=0, style=solid, color=red];
m39_2 -> m39_3  [key=0, style=solid, color=red];
m39_2 -> m39_5  [key=2, style=dotted, color=red];
m39_3 -> m39_4  [key=0, style=solid, color=red];
m39_4 -> m39_0  [key=0, style=bold, color=blue];
m39_6 -> m39_1  [key=1, style=dashed, color=red, label="HangFire.Server.ServerComponentRunnerOptions"];
m39_6 -> m39_2  [key=1, style=dashed, color=red, label="HangFire.Server.ServerComponentRunnerOptions"];
m39_6 -> m39_3  [key=1, style=dashed, color=red, label="HangFire.Server.ServerComponentRunnerOptions"];
m40_18 -> m40_19  [key=0, style=solid, color=red];
m40_19 -> m40_20  [key=0, style=solid, color=red];
m40_19 -> m40_10  [key=2, style=dotted, color=red];
m40_20 -> m40_18  [key=0, style=bold, color=blue];
m40_0 -> m40_1  [key=0, style=solid, color=red];
m40_1 -> m40_2  [key=0, style=solid, color=red];
m40_1 -> m40_3  [key=2, style=dotted, color=red];
m40_2 -> m40_0  [key=0, style=bold, color=blue];
m40_12 -> m40_13  [key=0, style=solid, color=red];
m40_13 -> m40_14  [key=0, style=solid, color=red];
m40_13 -> m40_17  [key=2, style=dotted, color=red];
m40_13 -> m40_15  [key=1, style=dashed, color=red, label=message];
m40_14 -> m40_15  [key=0, style=solid, color=red];
m40_14 -> m40_3  [key=2, style=dotted, color=red];
m40_15 -> m40_16  [key=0, style=solid, color=red];
m40_16 -> m40_12  [key=0, style=bold, color=blue];
m40_21 -> m40_22  [key=0, style=solid];
m40_22 -> m40_21  [key=0, style=bold, color=blue];
m40_4 -> m40_5  [key=0, style=solid, color=red];
m40_5 -> m40_6  [key=0, style=solid, color=red];
m40_5 -> m40_8  [key=0, style=solid, color=red];
m40_6 -> m40_7  [key=0, style=solid, color=red];
m40_6 -> m40_10  [key=2, style=dotted, color=red];
m40_8 -> m40_9  [key=0, style=solid, color=red];
m40_8 -> m40_11  [key=2, style=dotted, color=red];
m40_7 -> m40_8  [key=0, style=solid, color=red];
m40_7 -> m40_11  [key=2, style=dotted, color=red];
m40_9 -> m40_4  [key=0, style=bold, color=blue];
m40_23 -> m40_1  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m40_23 -> m40_5  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m40_23 -> m40_6  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m40_23 -> m40_7  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m40_23 -> m40_8  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m40_23 -> m40_14  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m40_23 -> m40_19  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m41_37 -> m41_38  [key=0, style=solid];
m41_38 -> m41_39  [key=0, style=solid, color=red];
m41_38 -> m41_43  [key=2, style=dotted];
m41_39 -> m41_40  [key=0, style=solid, color=red];
m41_39 -> m41_28  [key=2, style=dotted, color=red];
m41_40 -> m41_41  [key=0, style=solid];
m41_40 -> m41_44  [key=2, style=dotted];
m41_41 -> m41_42  [key=0, style=solid];
m41_41 -> m41_11  [key=2, style=dotted];
m41_42 -> m41_37  [key=0, style=bold, color=blue];
m41_60 -> m41_61  [key=0, style=solid];
m41_61 -> m41_62  [key=0, style=solid, color=red];
m41_61 -> m41_43  [key=2, style=dotted];
m41_62 -> m41_63  [key=0, style=solid, color=red];
m41_62 -> m41_28  [key=2, style=dotted, color=red];
m41_63 -> m41_64  [key=0, style=solid];
m41_63 -> m41_44  [key=2, style=dotted];
m41_64 -> m41_65  [key=0, style=solid];
m41_64 -> m41_68  [key=2, style=dotted];
m41_65 -> m41_66  [key=0, style=solid];
m41_65 -> m41_10  [key=2, style=dotted];
m41_65 -> m41_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_66 -> m41_67  [key=0, style=solid];
m41_66 -> m41_11  [key=2, style=dotted];
m41_67 -> m41_60  [key=0, style=bold, color=blue];
m41_73 -> m41_74  [key=0, style=solid];
m41_74 -> m41_75  [key=0, style=solid, color=red];
m41_74 -> m41_43  [key=2, style=dotted];
m41_75 -> m41_76  [key=0, style=solid, color=red];
m41_75 -> m41_28  [key=2, style=dotted, color=red];
m41_76 -> m41_77  [key=0, style=solid];
m41_76 -> m41_44  [key=2, style=dotted];
m41_77 -> m41_78  [key=0, style=solid];
m41_77 -> m41_81  [key=2, style=dotted];
m41_78 -> m41_79  [key=0, style=solid];
m41_78 -> m41_10  [key=2, style=dotted];
m41_78 -> m41_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_79 -> m41_80  [key=0, style=solid];
m41_79 -> m41_11  [key=2, style=dotted];
m41_80 -> m41_73  [key=0, style=bold, color=blue];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_2  [key=0, style=solid, color=red];
m41_1 -> m41_4  [key=2, style=dotted];
m41_2 -> m41_3  [key=0, style=solid, color=red];
m41_2 -> m41_5  [key=2, style=dotted, color=red];
m41_3 -> m41_0  [key=0, style=bold, color=blue];
m41_16 -> m41_17  [key=0, style=solid, color=red];
m41_17 -> m41_18  [key=0, style=solid, color=red];
m41_17 -> m41_28  [key=2, style=dotted, color=red];
m41_18 -> m41_19  [key=0, style=solid, color=red];
m41_18 -> m41_29  [key=2, style=dotted, color=red];
m41_19 -> m41_20  [key=0, style=solid];
m41_19 -> m41_30  [key=2, style=dotted];
m41_19 -> m41_22  [key=1, style=dashed, color=darkseagreen4, label=messageQueue];
m41_20 -> m41_21  [key=0, style=solid];
m41_20 -> m41_31  [key=2, style=dotted];
m41_20 -> m41_22  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m41_20 -> m41_26  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m41_22 -> m41_23  [key=0, style=solid];
m41_22 -> m41_33  [key=2, style=dotted];
m41_22 -> m41_34  [key=2, style=dotted];
m41_21 -> m41_22  [key=0, style=solid];
m41_21 -> m41_32  [key=2, style=dotted];
m41_26 -> m41_27  [key=0, style=solid];
m41_26 -> m41_36  [key=2, style=dotted];
m41_23 -> m41_24  [key=0, style=solid];
m41_23 -> m41_35  [key=2, style=dotted];
m41_23 -> m41_23  [key=1, style=dashed, color=darkseagreen4, label=message];
m41_23 -> m41_25  [key=1, style=dashed, color=darkseagreen4, label=message];
m41_24 -> m41_25  [key=0, style=solid];
m41_24 -> m41_11  [key=2, style=dotted];
m41_25 -> m41_26  [key=0, style=solid];
m41_25 -> m41_11  [key=2, style=dotted];
m41_27 -> m41_16  [key=0, style=bold, color=blue];
m41_82 -> m41_83  [key=0, style=solid];
m41_12 -> m41_13  [key=0, style=solid, color=red];
m41_13 -> m41_14  [key=0, style=solid, color=red];
m41_13 -> m41_15  [key=2, style=dotted, color=red];
m41_14 -> m41_12  [key=0, style=bold, color=blue];
m41_52 -> m41_53  [key=0, style=solid];
m41_52 -> m41_44  [key=2, style=dotted];
m41_51 -> m41_52  [key=0, style=solid];
m41_53 -> m41_51  [key=0, style=bold, color=blue];
m41_69 -> m41_70  [key=0, style=solid];
m41_70 -> m41_71  [key=0, style=solid];
m41_70 -> m41_33  [key=2, style=dotted];
m41_70 -> m41_72  [key=2, style=dotted];
m41_71 -> m41_69  [key=0, style=bold, color=blue];
m41_83 -> m41_84  [key=0, style=solid];
m41_83 -> m41_33  [key=2, style=dotted];
m41_83 -> m41_72  [key=2, style=dotted];
m41_84 -> m41_82  [key=0, style=bold, color=blue];
m41_45 -> m41_46  [key=0, style=solid, color=red];
m41_46 -> m41_47  [key=0, style=solid, color=red];
m41_46 -> m41_28  [key=2, style=dotted, color=red];
m41_46 -> m41_48  [key=1, style=dashed, color=red, label=queue];
m41_46 -> m41_52  [key=1, style=dashed, color=red, label=queue];
m41_47 -> m41_48  [key=0, style=solid];
m41_47 -> m41_50  [key=2, style=dotted];
m41_47 -> m41_52  [key=1, style=dashed, color=darkseagreen4, label=token];
m41_48 -> m41_49  [key=0, style=solid];
m41_48 -> m41_10  [key=2, style=dotted];
m41_48 -> m41_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_49 -> m41_45  [key=0, style=bold, color=blue];
m41_6 -> m41_7  [key=0, style=solid, color=red];
m41_7 -> m41_8  [key=0, style=solid, color=red];
m41_7 -> m41_10  [key=2, style=dotted, color=red];
m41_7 -> m41_12  [key=1, style=dashed, color=red, label="lambda expression"];
m41_8 -> m41_9  [key=0, style=solid];
m41_8 -> m41_11  [key=2, style=dotted];
m41_9 -> m41_6  [key=0, style=bold, color=blue];
m41_85 -> m41_86  [key=0, style=solid];
m41_86 -> m41_87  [key=0, style=solid, color=red];
m41_86 -> m41_43  [key=2, style=dotted];
m41_87 -> m41_88  [key=0, style=solid, color=red];
m41_87 -> m41_28  [key=2, style=dotted, color=red];
m41_88 -> m41_89  [key=0, style=solid];
m41_88 -> m41_44  [key=2, style=dotted];
m41_89 -> m41_90  [key=0, style=solid];
m41_89 -> m41_93  [key=2, style=dotted];
m41_90 -> m41_91  [key=0, style=solid];
m41_90 -> m41_33  [key=2, style=dotted];
m41_90 -> m41_72  [key=2, style=dotted];
m41_91 -> m41_92  [key=0, style=solid];
m41_91 -> m41_11  [key=2, style=dotted];
m41_92 -> m41_85  [key=0, style=bold, color=blue];
m41_28 -> m41_94  [key=0, style=solid, color=red];
m41_28 -> m41_17  [key=3, color=red, style=bold, label="Parameter variable Hangfire.SqlServer.Msmq.MsmqTransactionType transactionType"];
m41_94 -> m41_95  [key=0, style=solid, color=red];
m41_94 -> m41_15  [key=2, style=dotted, color=red];
m41_95 -> m41_28  [key=0, style=bold, color=blue];
m41_54 -> m41_55  [key=0, style=solid];
m41_55 -> m41_56  [key=0, style=solid, color=red];
m41_55 -> m41_43  [key=2, style=dotted];
m41_56 -> m41_57  [key=0, style=solid, color=red];
m41_56 -> m41_28  [key=2, style=dotted, color=red];
m41_57 -> m41_58  [key=0, style=solid];
m41_57 -> m41_44  [key=2, style=dotted];
m41_58 -> m41_59  [key=0, style=solid];
m41_58 -> m41_11  [key=2, style=dotted];
m41_59 -> m41_54  [key=0, style=bold, color=blue];
m41_96 -> m41_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m41_96 -> m41_2  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m41_96 -> m41_18  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m41_96 -> m41_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m41_96 -> m41_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m41_96 -> m41_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m41_96 -> m41_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m41_96 -> m41_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m41_97 -> m41_52  [key=1, style=dashed, color=darkseagreen4, label=queue];
m41_98 -> m41_52  [key=1, style=dashed, color=darkseagreen4, label=token];
m42_24 -> m42_25  [key=0, style=solid];
m42_25 -> m42_15  [key=2, style=dotted];
m42_25 -> m42_26  [key=0, style=solid];
m42_25 -> m42_27  [key=1, style=dashed, color=darkseagreen4, label=context];
m42_25 -> m42_28  [key=1, style=dashed, color=darkseagreen4, label=context];
m42_25 -> m42_29  [key=1, style=dashed, color=darkseagreen4, label=context];
m42_26 -> m42_27  [key=0, style=solid];
m42_26 -> m42_11  [key=2, style=dotted];
m42_28 -> m42_29  [key=0, style=solid];
m42_28 -> m42_32  [key=2, style=dotted];
m42_29 -> m42_30  [key=0, style=solid];
m42_29 -> m42_11  [key=2, style=dotted];
m42_27 -> m42_28  [key=0, style=solid];
m42_27 -> m42_31  [key=2, style=dotted];
m42_30 -> m42_24  [key=0, style=bold, color=blue];
m42_16 -> m42_17  [key=0, style=solid, color=green];
m42_17 -> m42_18  [key=0, style=solid, color=green];
m42_17 -> m42_10  [key=2, style=dotted, color=green];
m42_17 -> m42_20  [key=1, style=dashed, color=green, label="lambda expression"];
m42_18 -> m42_19  [key=0, style=solid];
m42_18 -> m42_11  [key=2, style=dotted];
m42_19 -> m42_16  [key=0, style=bold, color=blue];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_4  [key=2, style=dotted];
m42_2 -> m42_3  [key=0, style=solid];
m42_2 -> m42_5  [key=2, style=dotted];
m42_3 -> m42_0  [key=0, style=bold, color=blue];
m42_20 -> m42_21  [key=0, style=solid, color=green];
m42_12 -> m42_13  [key=0, style=solid, color=green];
m42_13 -> m42_14  [key=0, style=solid, color=green];
m42_13 -> m42_15  [key=2, style=dotted, color=green];
m42_14 -> m42_12  [key=0, style=bold, color=blue];
m42_21 -> m42_22  [key=0, style=solid, color=green];
m42_21 -> m42_23  [key=2, style=dotted, color=green];
m42_22 -> m42_20  [key=0, style=bold, color=blue];
m42_6 -> m42_7  [key=0, style=solid, color=green];
m42_7 -> m42_8  [key=0, style=solid, color=green];
m42_7 -> m42_10  [key=2, style=dotted, color=green];
m42_7 -> m42_12  [key=1, style=dashed, color=green, label="lambda expression"];
m42_8 -> m42_9  [key=0, style=solid];
m42_8 -> m42_11  [key=2, style=dotted];
m42_9 -> m42_6  [key=0, style=bold, color=blue];
m42_33 -> m42_7  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m42_33 -> m42_13  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m42_33 -> m42_17  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m42_33 -> m42_21  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m42_33 -> m42_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m42_33 -> m42_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m42_33 -> m42_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m42_33 -> m42_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m42_33 -> m42_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m42_33 -> m42_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m44_8 -> m44_9  [key=0, style=solid, color=green];
m44_9 -> m44_10  [key=0, style=solid, color=green];
m44_9 -> m44_12  [key=2, style=dotted, color=green];
m44_9 -> m44_14  [key=1, style=dashed, color=green, label="lambda expression"];
m44_10 -> m44_11  [key=0, style=solid];
m44_10 -> m44_13  [key=2, style=dotted];
m44_11 -> m44_8  [key=0, style=bold, color=blue];
m44_25 -> m44_26  [key=0, style=solid, color=red];
m44_26 -> m44_27  [key=0, style=solid, color=green];
m44_26 -> m44_12  [key=2, style=dotted, color=red];
m44_26 -> m44_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_27 -> m44_28  [key=0, style=solid, color=green];
m44_27 -> m44_13  [key=2, style=dotted, color=green];
m44_28 -> m44_25  [key=0, style=bold, color=blue];
m44_76 -> m44_77  [key=0, style=solid];
m44_77 -> m44_78  [key=0, style=solid];
m44_77 -> m44_39  [key=2, style=dotted];
m44_77 -> m44_81  [key=1, style=dashed, color=darkseagreen4, label=context];
m44_78 -> m44_79  [key=0, style=solid];
m44_78 -> m44_12  [key=2, style=dotted];
m44_78 -> m44_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_79 -> m44_76  [key=0, style=bold, color=blue];
m44_57 -> m44_58  [key=0, style=solid];
m44_58 -> m44_59  [key=0, style=solid];
m44_58 -> m44_39  [key=2, style=dotted];
m44_58 -> m44_63  [key=1, style=dashed, color=darkseagreen4, label=context];
m44_59 -> m44_60  [key=0, style=solid];
m44_59 -> m44_12  [key=2, style=dotted];
m44_59 -> m44_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_60 -> m44_61  [key=0, style=solid];
m44_60 -> m44_13  [key=2, style=dotted];
m44_61 -> m44_57  [key=0, style=bold, color=blue];
m44_100 -> m44_101  [key=0, style=solid];
m44_101 -> m44_100  [key=0, style=bold, color=blue];
m44_39 -> m44_98  [key=0, style=solid, color=red];
m44_98 -> m44_99  [key=0, style=solid, color=red];
m44_98 -> m44_17  [key=2, style=dotted, color=red];
m44_99 -> m44_39  [key=0, style=bold, color=blue];
m44_49 -> m44_50  [key=0, style=solid];
m44_50 -> m44_51  [key=0, style=solid];
m44_50 -> m44_39  [key=2, style=dotted];
m44_50 -> m44_52  [key=1, style=dashed, color=darkseagreen4, label=context];
m44_50 -> m44_53  [key=1, style=dashed, color=darkseagreen4, label=context];
m44_50 -> m44_54  [key=1, style=dashed, color=red, label=context];
m44_50 -> m44_55  [key=1, style=dashed, color=darkseagreen4, label=context];
m44_51 -> m44_52  [key=0, style=solid];
m44_51 -> m44_48  [key=2, style=dotted];
m44_51 -> m44_53  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m44_51 -> m44_54  [key=1, style=dashed, color=red, label=contextCopy];
m44_51 -> m44_55  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m44_52 -> m44_53  [key=0, style=solid];
m44_52 -> m44_41  [key=2, style=dotted];
m44_53 -> m44_54  [key=0, style=solid, color=red];
m44_53 -> m44_41  [key=2, style=dotted];
m44_54 -> m44_55  [key=0, style=solid, color=red];
m44_54 -> m44_41  [key=2, style=dotted, color=red];
m44_55 -> m44_56  [key=0, style=solid];
m44_55 -> m44_41  [key=2, style=dotted];
m44_56 -> m44_49  [key=0, style=bold, color=blue];
m44_42 -> m44_43  [key=0, style=solid];
m44_43 -> m44_44  [key=0, style=solid];
m44_43 -> m44_12  [key=2, style=dotted];
m44_43 -> m44_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_44 -> m44_42  [key=0, style=bold, color=blue];
m44_95 -> m44_96  [key=0, style=solid];
m44_14 -> m44_15  [key=0, style=solid, color=red];
m44_15 -> m44_16  [key=0, style=solid, color=red];
m44_15 -> m44_17  [key=2, style=dotted, color=red];
m44_16 -> m44_14  [key=0, style=bold, color=blue];
m44_22 -> m44_23  [key=0, style=solid, color=green];
m44_23 -> m44_24  [key=0, style=solid, color=green];
m44_23 -> m44_17  [key=2, style=dotted, color=green];
m44_24 -> m44_22  [key=0, style=bold, color=blue];
m44_29 -> m44_30  [key=0, style=solid, color=red];
m44_30 -> m44_31  [key=0, style=solid, color=red];
m44_30 -> m44_17  [key=2, style=dotted, color=red];
m44_31 -> m44_29  [key=0, style=bold, color=blue];
m44_45 -> m44_46  [key=0, style=solid];
m44_46 -> m44_47  [key=0, style=solid];
m44_46 -> m44_48  [key=2, style=dotted];
m44_47 -> m44_45  [key=0, style=bold, color=blue];
m44_63 -> m44_64  [key=0, style=solid];
m44_63 -> m44_65  [key=2, style=dotted];
m44_62 -> m44_63  [key=0, style=solid];
m44_64 -> m44_62  [key=0, style=bold, color=blue];
m44_72 -> m44_73  [key=0, style=solid, color=green];
m44_73 -> m44_74  [key=0, style=solid, color=green];
m44_73 -> m44_75  [key=2, style=dotted, color=green];
m44_74 -> m44_72  [key=0, style=bold, color=blue];
m44_81 -> m44_82  [key=0, style=solid];
m44_81 -> m44_83  [key=2, style=dotted];
m44_80 -> m44_81  [key=0, style=solid];
m44_82 -> m44_80  [key=0, style=bold, color=blue];
m44_91 -> m44_92  [key=0, style=solid, color=red];
m44_96 -> m44_97  [key=0, style=solid];
m44_96 -> m44_83  [key=2, style=dotted];
m44_92 -> m44_93  [key=0, style=solid, color=red];
m44_92 -> m44_94  [key=2, style=dotted, color=red];
m44_93 -> m44_91  [key=0, style=bold, color=blue];
m44_97 -> m44_95  [key=0, style=bold, color=blue];
m44_32 -> m44_33  [key=0, style=solid, color=green];
m44_33 -> m44_34  [key=0, style=solid, color=green];
m44_33 -> m44_39  [key=2, style=dotted, color=green];
m44_33 -> m44_35  [key=1, style=dashed, color=green, label=context];
m44_33 -> m44_36  [key=1, style=dashed, color=green, label=context];
m44_33 -> m44_37  [key=1, style=dashed, color=green, label=context];
m44_34 -> m44_35  [key=0, style=solid, color=green];
m44_34 -> m44_13  [key=2, style=dotted, color=green];
m44_35 -> m44_36  [key=0, style=solid, color=green];
m44_35 -> m44_40  [key=2, style=dotted, color=green];
m44_36 -> m44_37  [key=0, style=solid];
m44_36 -> m44_41  [key=2, style=dotted];
m44_37 -> m44_38  [key=0, style=solid];
m44_37 -> m44_41  [key=2, style=dotted];
m44_38 -> m44_32  [key=0, style=bold, color=blue];
m44_66 -> m44_67  [key=0, style=solid];
m44_67 -> m44_68  [key=0, style=solid];
m44_67 -> m44_39  [key=2, style=dotted];
m44_68 -> m44_69  [key=0, style=solid, color=green];
m44_68 -> m44_65  [key=2, style=dotted];
m44_69 -> m44_70  [key=0, style=solid, color=green];
m44_69 -> m44_71  [key=2, style=dotted, color=green];
m44_69 -> m44_72  [key=1, style=dashed, color=green, label="lambda expression"];
m44_70 -> m44_66  [key=0, style=bold, color=blue];
m44_0 -> m44_1  [key=0, style=solid, color=green];
m44_1 -> m44_2  [key=0, style=solid, color=green];
m44_1 -> m44_5  [key=2, style=dotted, color=green];
m44_2 -> m44_3  [key=0, style=solid, color=green];
m44_2 -> m44_6  [key=2, style=dotted, color=green];
m44_3 -> m44_4  [key=0, style=solid];
m44_3 -> m44_7  [key=2, style=dotted];
m44_4 -> m44_0  [key=0, style=bold, color=blue];
m44_84 -> m44_85  [key=0, style=solid, color=red];
m44_85 -> m44_86  [key=0, style=solid, color=red];
m44_85 -> m44_89  [key=2, style=dotted, color=red];
m44_85 -> m44_90  [key=2, style=dotted, color=red];
m44_85 -> m44_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_86 -> m44_87  [key=0, style=solid];
m44_86 -> m44_39  [key=2, style=dotted];
m44_86 -> m44_96  [key=1, style=dashed, color=darkseagreen4, label=context];
m44_87 -> m44_88  [key=0, style=solid];
m44_87 -> m44_12  [key=2, style=dotted];
m44_87 -> m44_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_88 -> m44_84  [key=0, style=bold, color=blue];
m44_18 -> m44_19  [key=0, style=solid, color=green];
m44_19 -> m44_20  [key=0, style=solid, color=green];
m44_19 -> m44_12  [key=2, style=dotted, color=green];
m44_19 -> m44_22  [key=1, style=dashed, color=green, label="lambda expression"];
m44_20 -> m44_21  [key=0, style=solid, color=red];
m44_20 -> m44_13  [key=2, style=dotted, color=red];
m44_21 -> m44_18  [key=0, style=bold, color=blue];
m44_102 -> m44_1  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_9  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_19  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_23  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_33  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_34  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_69  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_73  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_102 -> m44_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m44_103 -> m44_63  [key=1, style=dashed, color=darkseagreen4, label=context];
m44_104 -> m44_81  [key=1, style=dashed, color=darkseagreen4, label=context];
m44_105 -> m44_96  [key=1, style=dashed, color=darkseagreen4, label=context];
m45_54 -> m45_84  [key=0, style=solid];
m45_54 -> m45_11  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m45_54 -> m45_33  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m45_84 -> m45_85  [key=0, style=solid];
m45_84 -> m45_86  [key=2, style=dotted];
m45_85 -> m45_54  [key=0, style=bold, color=blue];
m45_71 -> m45_80  [key=0, style=solid];
m45_71 -> m45_69  [key=3, color=darkorchid, style=bold, label="Parameter variable string class"];
m45_71 -> m45_72  [key=3, color=darkorchid, style=bold, label="Parameter variable string class"];
m45_71 -> m45_75  [key=3, color=darkorchid, style=bold, label="Parameter variable string class"];
m45_71 -> m45_78  [key=3, color=darkorchid, style=bold, label="Parameter variable string class"];
m45_71 -> m45_52  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m45_71 -> m45_58  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m45_71 -> m45_74  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m45_71 -> m45_77  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m45_80 -> m45_81  [key=0, style=solid];
m45_80 -> m45_82  [key=2, style=dotted];
m45_80 -> m45_83  [key=2, style=dotted];
m45_81 -> m45_71  [key=0, style=bold, color=blue];
m45_77 -> m45_78  [key=0, style=solid];
m45_77 -> m45_71  [key=3, color=darkorchid, style=bold, label="method methodReturn string WrapComment"];
m45_78 -> m45_79  [key=0, style=solid];
m45_78 -> m45_71  [key=2, style=dotted];
m45_79 -> m45_77  [key=0, style=bold, color=blue];
m45_58 -> m45_72  [key=0, style=solid];
m45_58 -> m45_54  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m45_58 -> m45_71  [key=3, color=darkorchid, style=bold, label="method methodReturn string WrapType"];
m45_72 -> m45_73  [key=0, style=solid];
m45_72 -> m45_71  [key=2, style=dotted];
m45_73 -> m45_58  [key=0, style=bold, color=blue];
m45_118 -> m45_119  [key=0, style=solid];
m45_118 -> m45_121  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m45_118 -> m45_135  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m45_118 -> m45_136  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m45_118 -> m45_62  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m45_118 -> m45_133  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNumericType"];
m45_118 -> m45_118  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNumericType"];
m45_119 -> m45_120  [key=0, style=solid];
m45_119 -> m45_121  [key=0, style=solid];
m45_121 -> m45_122  [key=0, style=solid];
m45_121 -> m45_134  [key=0, style=solid];
m45_121 -> m45_140  [key=2, style=dotted];
m45_135 -> m45_136  [key=0, style=solid];
m45_135 -> m45_137  [key=0, style=solid];
m45_135 -> m45_141  [key=2, style=dotted];
m45_136 -> m45_139  [key=0, style=solid];
m45_136 -> m45_142  [key=2, style=dotted];
m45_136 -> m45_118  [key=2, style=dotted];
m45_120 -> m45_139  [key=0, style=solid];
m45_122 -> m45_123  [key=0, style=solid];
m45_134 -> m45_135  [key=0, style=solid];
m45_123 -> m45_124  [key=0, style=solid];
m45_124 -> m45_125  [key=0, style=solid];
m45_125 -> m45_126  [key=0, style=solid];
m45_126 -> m45_127  [key=0, style=solid];
m45_127 -> m45_128  [key=0, style=solid];
m45_128 -> m45_129  [key=0, style=solid];
m45_129 -> m45_130  [key=0, style=solid];
m45_130 -> m45_131  [key=0, style=solid];
m45_131 -> m45_132  [key=0, style=solid];
m45_132 -> m45_133  [key=0, style=solid];
m45_133 -> m45_139  [key=0, style=solid];
m45_137 -> m45_139  [key=0, style=solid];
m45_138 -> m45_139  [key=0, style=solid];
m45_139 -> m45_118  [key=0, style=bold, color=blue];
m45_87 -> m45_88  [key=0, style=solid];
m45_88 -> m45_89  [key=0, style=solid];
m45_89 -> m45_90  [key=0, style=solid];
m45_90 -> m45_87  [key=0, style=bold, color=blue];
m45_52 -> m45_69  [key=0, style=solid];
m45_52 -> m45_4  [key=3, color=red, style=bold, label="Parameter variable string value"];
m45_52 -> m45_92  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m45_52 -> m45_71  [key=3, color=darkorchid, style=bold, label="method methodReturn string WrapKeyword"];
m45_69 -> m45_70  [key=0, style=solid];
m45_69 -> m45_71  [key=2, style=dotted];
m45_70 -> m45_52  [key=0, style=bold, color=blue];
m45_74 -> m45_75  [key=0, style=solid];
m45_74 -> m45_71  [key=3, color=darkorchid, style=bold, label="method methodReturn string WrapString"];
m45_75 -> m45_76  [key=0, style=solid];
m45_75 -> m45_71  [key=2, style=dotted];
m45_76 -> m45_74  [key=0, style=bold, color=blue];
m45_0 -> m45_1  [key=0, style=solid, color=red];
m45_0 -> m45_6  [key=1, style=dashed, color=red, label="HangFire.Common.Job"];
m45_0 -> m45_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m45_0 -> m45_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m45_0 -> m45_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m45_0 -> m45_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m45_0 -> m45_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m45_0 -> m45_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m45_0 -> m45_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m45_0 -> m45_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m45_0 -> m45_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m45_1 -> m45_2  [key=0, style=solid, color=red];
m45_1 -> m45_3  [key=0, style=solid, color=red];
m45_6 -> m45_7  [key=0, style=solid, color=red];
m45_6 -> m45_54  [key=2, style=dotted, color=red];
m45_6 -> m45_53  [key=2, style=dotted, color=red];
m45_10 -> m45_11  [key=0, style=solid];
m45_10 -> m45_16  [key=0, style=solid];
m45_11 -> m45_12  [key=0, style=solid];
m45_11 -> m45_56  [key=2, style=dotted];
m45_11 -> m45_57  [key=2, style=dotted];
m45_11 -> m45_13  [key=1, style=dashed, color=darkseagreen4, label=serviceName];
m45_11 -> m45_15  [key=1, style=dashed, color=darkseagreen4, label=serviceName];
m45_12 -> m45_13  [key=0, style=solid];
m45_12 -> m45_58  [key=2, style=dotted];
m45_12 -> m45_53  [key=2, style=dotted];
m45_13 -> m45_14  [key=0, style=solid];
m45_13 -> m45_54  [key=2, style=dotted];
m45_13 -> m45_58  [key=2, style=dotted];
m45_13 -> m45_59  [key=2, style=dotted];
m45_16 -> m45_17  [key=0, style=solid];
m45_16 -> m45_54  [key=2, style=dotted];
m45_16 -> m45_58  [key=2, style=dotted];
m45_16 -> m45_53  [key=2, style=dotted];
m45_18 -> m45_19  [key=0, style=solid];
m45_18 -> m45_54  [key=2, style=dotted];
m45_18 -> m45_53  [key=2, style=dotted];
m45_20 -> m45_21  [key=0, style=solid];
m45_20 -> m45_60  [key=2, style=dotted];
m45_20 -> m45_25  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m45_20 -> m45_26  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m45_27 -> m45_28  [key=0, style=solid];
m45_27 -> m45_33  [key=0, style=solid];
m45_28 -> m45_29  [key=0, style=solid];
m45_28 -> m45_30  [key=1, style=dashed, color=darkseagreen4, label=argument];
m45_2 -> m45_49  [key=0, style=solid, color=red];
m45_2 -> m45_50  [key=2, style=dotted, color=red];
m45_3 -> m45_4  [key=0, style=solid, color=red];
m45_3 -> m45_51  [key=2, style=dotted, color=red];
m45_3 -> m45_5  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_6  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_7  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_8  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_9  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_12  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_13  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_14  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_15  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_16  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_17  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_18  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_19  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_39  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_40  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_42  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_43  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_45  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_47  [key=1, style=dashed, color=red, label=builder];
m45_3 -> m45_48  [key=1, style=dashed, color=red, label=builder];
m45_4 -> m45_5  [key=0, style=solid, color=red];
m45_4 -> m45_52  [key=2, style=dotted, color=red];
m45_4 -> m45_53  [key=2, style=dotted, color=red];
m45_5 -> m45_6  [key=0, style=solid, color=red];
m45_5 -> m45_53  [key=2, style=dotted, color=red];
m45_7 -> m45_8  [key=0, style=solid, color=red];
m45_7 -> m45_53  [key=2, style=dotted, color=red];
m45_8 -> m45_9  [key=0, style=solid];
m45_8 -> m45_55  [key=2, style=dotted];
m45_9 -> m45_10  [key=0, style=solid];
m45_9 -> m45_55  [key=2, style=dotted];
m45_14 -> m45_15  [key=0, style=solid];
m45_14 -> m45_55  [key=2, style=dotted];
m45_15 -> m45_17  [key=0, style=solid];
m45_15 -> m45_54  [key=2, style=dotted];
m45_15 -> m45_53  [key=2, style=dotted];
m45_17 -> m45_18  [key=0, style=solid];
m45_17 -> m45_53  [key=2, style=dotted];
m45_19 -> m45_20  [key=0, style=solid];
m45_19 -> m45_53  [key=2, style=dotted];
m45_39 -> m45_40  [key=0, style=solid];
m45_39 -> m45_55  [key=2, style=dotted];
m45_40 -> m45_43  [key=0, style=solid];
m45_40 -> m45_53  [key=2, style=dotted];
m45_42 -> m45_43  [key=0, style=solid];
m45_42 -> m45_53  [key=2, style=dotted];
m45_43 -> m45_44  [key=0, style=solid];
m45_43 -> m45_53  [key=2, style=dotted];
m45_45 -> m45_46  [key=0, style=solid];
m45_45 -> m45_53  [key=2, style=dotted];
m45_47 -> m45_48  [key=0, style=solid];
m45_47 -> m45_53  [key=2, style=dotted];
m45_48 -> m45_49  [key=0, style=solid];
m45_48 -> m45_50  [key=2, style=dotted];
m45_48 -> m45_65  [key=2, style=dotted];
m45_21 -> m45_22  [key=0, style=solid];
m45_21 -> m45_61  [key=2, style=dotted];
m45_21 -> m45_31  [key=1, style=dashed, color=darkseagreen4, label=renderedArguments];
m45_21 -> m45_33  [key=1, style=dashed, color=darkseagreen4, label=renderedArguments];
m45_21 -> m45_36  [key=1, style=dashed, color=darkseagreen4, label=renderedArguments];
m45_21 -> m45_37  [key=1, style=dashed, color=darkseagreen4, label=renderedArguments];
m45_21 -> m45_44  [key=1, style=dashed, color=darkseagreen4, label=renderedArguments];
m45_25 -> m45_26  [key=0, style=solid];
m45_25 -> m45_35  [key=0, style=solid];
m45_25 -> m45_22  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m45_26 -> m45_27  [key=0, style=solid];
m45_26 -> m45_29  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m45_26 -> m45_30  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m45_22 -> m45_23  [key=0, style=solid];
m45_22 -> m45_32  [key=1, style=dashed, color=darkseagreen4, label=renderedArgumentsTotalLength];
m45_22 -> m45_38  [key=1, style=dashed, color=darkseagreen4, label=renderedArgumentsTotalLength];
m45_22 -> m45_22  [key=3, color=darkorchid, style=bold, label="Local variable int renderedArgumentsTotalLength"];
m45_31 -> m45_32  [key=0, style=solid];
m45_31 -> m45_64  [key=2, style=dotted];
m45_33 -> m45_34  [key=0, style=solid];
m45_33 -> m45_54  [key=2, style=dotted];
m45_33 -> m45_64  [key=2, style=dotted];
m45_36 -> m45_37  [key=0, style=solid];
m45_36 -> m45_47  [key=0, style=solid];
m45_36 -> m45_22  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m45_37 -> m45_38  [key=0, style=solid];
m45_37 -> m45_43  [key=1, style=dashed, color=darkseagreen4, label=renderedArgument];
m45_44 -> m45_45  [key=0, style=solid];
m45_44 -> m45_46  [key=0, style=solid];
m45_23 -> m45_24  [key=0, style=solid];
m45_23 -> m45_38  [key=1, style=dashed, color=darkseagreen4, label=splitStringMinLength];
m45_23 -> m45_23  [key=3, color=darkorchid, style=bold, label="Local variable int splitStringMinLength"];
m45_32 -> m45_34  [key=0, style=solid];
m45_32 -> m45_32  [key=1, style=dashed, color=darkseagreen4, label=renderedArgumentsTotalLength];
m45_32 -> m45_38  [key=1, style=dashed, color=darkseagreen4, label=renderedArgumentsTotalLength];
m45_38 -> m45_39  [key=0, style=solid];
m45_38 -> m45_41  [key=0, style=solid];
m45_24 -> m45_25  [key=0, style=solid];
m45_24 -> m45_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_24 -> m45_27  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_24 -> m45_28  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_24 -> m45_34  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_34 -> m45_25  [key=0, style=solid];
m45_34 -> m45_34  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_35 -> m45_36  [key=0, style=solid];
m45_35 -> m45_37  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_35 -> m45_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_35 -> m45_44  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_35 -> m45_46  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_29 -> m45_30  [key=0, style=solid];
m45_29 -> m45_62  [key=2, style=dotted];
m45_30 -> m45_31  [key=0, style=solid];
m45_30 -> m45_63  [key=2, style=dotted];
m45_30 -> m45_32  [key=1, style=dashed, color=darkseagreen4, label=renderedArgument];
m45_41 -> m45_42  [key=0, style=solid];
m45_41 -> m45_43  [key=0, style=solid];
m45_46 -> m45_36  [key=0, style=solid];
m45_46 -> m45_46  [key=1, style=dashed, color=darkseagreen4, label=i];
m45_49 -> m45_0  [key=0, style=bold, color=blue];
m45_66 -> m45_67  [key=0, style=solid];
m45_66 -> m45_66  [key=3, color=darkorchid, style=bold, label="method methodReturn string WrapIdentifier"];
m45_67 -> m45_68  [key=0, style=solid];
m45_68 -> m45_66  [key=0, style=bold, color=blue];
m45_141 -> m45_143  [key=0, style=solid];
m45_141 -> m45_118  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m45_143 -> m45_144  [key=0, style=solid];
m45_143 -> m45_145  [key=2, style=dotted];
m45_144 -> m45_141  [key=0, style=bold, color=blue];
m45_62 -> m45_108  [key=0, style=solid];
m45_62 -> m45_110  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m45_62 -> m45_112  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m45_62 -> m45_114  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m45_62 -> m45_116  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m45_108 -> m45_109  [key=0, style=solid];
m45_108 -> m45_110  [key=0, style=solid];
m45_108 -> m45_118  [key=2, style=dotted];
m45_110 -> m45_111  [key=0, style=solid];
m45_110 -> m45_112  [key=0, style=solid];
m45_112 -> m45_113  [key=0, style=solid];
m45_112 -> m45_114  [key=0, style=solid];
m45_114 -> m45_115  [key=0, style=solid];
m45_114 -> m45_116  [key=0, style=solid];
m45_116 -> m45_117  [key=0, style=solid];
m45_116 -> m45_87  [key=2, style=dotted];
m45_109 -> m45_117  [key=0, style=solid];
m45_109 -> m45_87  [key=2, style=dotted];
m45_111 -> m45_117  [key=0, style=solid];
m45_111 -> m45_87  [key=2, style=dotted];
m45_113 -> m45_117  [key=0, style=solid];
m45_113 -> m45_87  [key=2, style=dotted];
m45_115 -> m45_117  [key=0, style=solid];
m45_115 -> m45_87  [key=2, style=dotted];
m45_117 -> m45_62  [key=0, style=bold, color=blue];
m45_63 -> m45_91  [key=0, style=solid];
m45_63 -> m45_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m45_63 -> m45_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m45_63 -> m45_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m45_63 -> m45_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m45_63 -> m45_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m45_63 -> m45_52  [key=3, color=darkorchid, style=bold, label="method methodReturn string Render"];
m45_91 -> m45_92  [key=0, style=solid];
m45_91 -> m45_93  [key=0, style=solid];
m45_94 -> m45_95  [key=0, style=solid];
m45_94 -> m45_96  [key=0, style=solid];
m45_95 -> m45_96  [key=0, style=solid];
m45_95 -> m45_82  [key=2, style=dotted];
m45_95 -> m45_105  [key=2, style=dotted];
m45_98 -> m45_99  [key=0, style=solid];
m45_98 -> m45_54  [key=2, style=dotted];
m45_98 -> m45_107  [key=2, style=dotted];
m45_98 -> m45_53  [key=2, style=dotted];
m45_101 -> m45_102  [key=0, style=solid];
m45_101 -> m45_103  [key=0, style=solid];
m45_92 -> m45_104  [key=0, style=solid];
m45_92 -> m45_52  [key=2, style=dotted];
m45_93 -> m45_94  [key=0, style=solid];
m45_93 -> m45_51  [key=2, style=dotted];
m45_93 -> m45_95  [key=1, style=dashed, color=darkseagreen4, label=builder];
m45_93 -> m45_97  [key=1, style=dashed, color=darkseagreen4, label=builder];
m45_93 -> m45_98  [key=1, style=dashed, color=darkseagreen4, label=builder];
m45_93 -> m45_100  [key=1, style=dashed, color=darkseagreen4, label=builder];
m45_93 -> m45_102  [key=1, style=dashed, color=darkseagreen4, label=builder];
m45_93 -> m45_103  [key=1, style=dashed, color=darkseagreen4, label=builder];
m45_97 -> m45_98  [key=0, style=solid];
m45_97 -> m45_58  [key=2, style=dotted];
m45_97 -> m45_106  [key=2, style=dotted];
m45_97 -> m45_66  [key=2, style=dotted];
m45_97 -> m45_53  [key=2, style=dotted];
m45_100 -> m45_101  [key=0, style=solid];
m45_100 -> m45_53  [key=2, style=dotted];
m45_102 -> m45_103  [key=0, style=solid];
m45_102 -> m45_53  [key=2, style=dotted];
m45_103 -> m45_104  [key=0, style=solid];
m45_103 -> m45_65  [key=2, style=dotted];
m45_96 -> m45_97  [key=0, style=solid];
m45_96 -> m45_98  [key=0, style=solid];
m45_99 -> m45_100  [key=0, style=solid];
m45_99 -> m45_101  [key=0, style=solid];
m45_104 -> m45_63  [key=0, style=bold, color=blue];
m45_146 -> m45_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer"];
m45_146 -> m45_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer"];
m45_146 -> m45_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer"];
m45_146 -> m45_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer"];
m45_146 -> m45_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer"];
m45_146 -> m45_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer"];
m46_10 -> m46_11  [key=0, style=solid, color=green];
m46_10 -> m46_13  [key=1, style=dashed, color=green, label=job];
m46_10 -> m46_18  [key=2, style=dotted];
m46_10 -> m46_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_11 -> m46_10  [key=0, style=bold, color=blue];
m46_11 -> m46_13  [key=1, style=dashed, color=green, label=state];
m46_11 -> m46_12  [key=0, style=solid, color=green];
m46_11 -> m46_19  [key=2, style=dotted, color=green];
m46_20 -> m46_21  [key=0, style=solid];
m46_19 -> m46_18  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_3  [key=2, style=dotted];
m46_1 -> m46_0  [key=0, style=bold, color=blue];
m46_2 -> m46_0  [key=0, style=bold, color=blue];
m46_2 -> m46_3  [key=0, style=solid];
m46_22 -> m46_23  [key=0, style=solid];
m46_23 -> m46_22  [key=0, style=bold, color=blue];
m46_23 -> m46_24  [key=0, style=solid];
m46_3 -> m46_2  [key=0, style=bold, color=blue];
m46_14 -> m46_15  [key=0, style=solid, color=green];
m46_14 -> m46_7  [key=2, style=dotted];
m46_15 -> m46_14  [key=0, style=bold, color=blue];
m46_15 -> m46_16  [key=0, style=solid, color=green];
m46_15 -> m46_22  [key=2, style=dotted, color=green];
m46_6 -> m46_7  [key=0, style=solid];
m46_6 -> m46_4  [key=0, style=bold, color=blue];
m46_7 -> m46_6  [key=0, style=bold, color=blue];
m46_26 -> m46_27  [key=0, style=solid];
m46_27 -> m46_26  [key=0, style=bold, color=blue];
m46_18 -> m46_19  [key=0, style=solid];
m46_8 -> m46_9  [key=0, style=solid];
m46_9 -> m46_8  [key=0, style=bold, color=blue];
m46_9 -> m46_13  [key=1, style=dashed, color=green, label=connection];
m46_9 -> m46_10  [key=0, style=solid];
m46_9 -> m46_17  [key=2, style=dotted];
m46_12 -> m46_13  [key=0, style=solid, color=green];
m46_12 -> m46_20  [key=2, style=dotted];
m46_13 -> m46_12  [key=0, style=bold, color=blue];
m46_13 -> m46_14  [key=0, style=solid, color=green];
m46_13 -> m46_21  [key=2, style=dotted, color=green];
m46_4 -> m46_5  [key=0, style=solid];
m46_25 -> m46_23  [key=0, style=bold, color=blue];
m46_25 -> m46_24  [key=0, style=bold, color=blue];
m46_24 -> m46_25  [key=0, style=solid];
m46_24 -> m46_26  [key=2, style=dotted];
m46_5 -> m46_7  [key=2, style=dotted];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_4  [key=0, style=bold, color=blue];
m46_21 -> m46_20  [key=0, style=bold, color=blue];
m46_16 -> m46_8  [key=0, style=bold, color=blue];
m46_16 -> m46_17  [key=0, style=solid];
m46_17 -> m46_16  [key=0, style=bold, color=blue];
m47_9 -> m47_10  [key=0, style=solid, color=red];
m47_10 -> m47_11  [key=0, style=solid, color=red];
m47_10 -> m47_12  [key=2, style=dotted, color=red];
m47_10 -> m47_13  [key=2, style=dotted, color=red];
m47_11 -> m47_9  [key=0, style=bold, color=blue];
m47_0 -> m47_1  [key=0, style=solid];
m47_0 -> m47_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m47_0 -> m47_5  [key=1, style=dashed, color=red, label=string];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> m47_3  [key=0, style=solid];
m47_1 -> m47_7  [key=2, style=dotted];
m47_3 -> m47_4  [key=0, style=solid];
m47_5 -> m47_6  [key=0, style=solid, color=red];
m47_2 -> m47_6  [key=0, style=solid];
m47_2 -> m47_8  [key=2, style=dotted];
m47_4 -> m47_5  [key=0, style=solid, color=red];
m47_6 -> m47_0  [key=0, style=bold, color=blue];
m47_14 -> m47_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ProcessingState"];
m47_14 -> m47_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ProcessingState"];
m47_14 -> m47_5  [key=1, style=dashed, color=red, label="Hangfire.States.ProcessingState"];
m47_14 -> m47_10  [key=1, style=dashed, color=red, label="Hangfire.States.ProcessingState"];
m48_40 -> m48_41  [key=0, style=solid];
m48_41 -> m48_42  [key=0, style=solid];
m48_41 -> m48_29  [key=2, style=dotted];
m48_41 -> m48_30  [key=2, style=dotted];
m48_42 -> m48_43  [key=0, style=solid];
m48_42 -> m48_44  [key=2, style=dotted];
m48_42 -> m48_45  [key=2, style=dotted];
m48_43 -> m48_40  [key=0, style=bold, color=blue];
m48_8 -> m48_5  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m48_8 -> m48_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m48_8 -> m48_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m48_8 -> m48_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m48_8 -> m48_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m48_9 -> m48_10  [key=0, style=solid];
m48_10 -> m48_11  [key=0, style=solid];
m48_11 -> m48_9  [key=0, style=bold, color=blue];
m48_36 -> m48_37  [key=0, style=solid];
m48_37 -> m48_38  [key=0, style=solid];
m48_37 -> m48_39  [key=2, style=dotted];
m48_38 -> m48_36  [key=0, style=bold, color=blue];
m48_0 -> m48_1  [key=0, style=solid];
m48_0 -> m48_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m48_0 -> m48_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_0 -> m48_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m48_0 -> m48_0  [key=3, color=darkorchid, style=bold, label="Field variable string ServerId"];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> m48_3  [key=0, style=solid];
m48_3 -> m48_4  [key=0, style=solid];
m48_3 -> m48_5  [key=0, style=solid];
m48_5 -> m48_6  [key=0, style=solid, color=green];
m48_5 -> m48_7  [key=2, style=dotted, color=green];
m48_6 -> m48_7  [key=0, style=solid];
m48_6 -> m48_0  [key=0, style=bold, color=blue];
m48_2 -> m48_7  [key=0, style=solid];
m48_2 -> m48_8  [key=2, style=dotted];
m48_2 -> m48_3  [key=0, style=solid];
m48_4 -> m48_7  [key=0, style=solid];
m48_4 -> m48_8  [key=2, style=dotted];
m48_4 -> m48_5  [key=0, style=solid, color=green];
m48_7 -> m48_0  [key=0, style=bold, color=blue];
m48_12 -> m48_13  [key=0, style=solid];
m48_12 -> m48_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_12 -> m48_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m48_12 -> m48_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m48_13 -> m48_14  [key=0, style=solid];
m48_13 -> m48_28  [key=2, style=dotted];
m48_13 -> m48_23  [key=1, style=dashed, color=darkseagreen4, label=result];
m48_13 -> m48_26  [key=1, style=dashed, color=darkseagreen4, label=result];
m48_14 -> m48_15  [key=0, style=solid];
m48_14 -> m48_29  [key=2, style=dotted];
m48_14 -> m48_30  [key=2, style=dotted];
m48_14 -> m48_17  [key=1, style=dashed, color=darkseagreen4, label=messageQueue];
m48_16 -> m48_17  [key=0, style=solid];
m48_16 -> m48_20  [key=1, style=dashed, color=darkseagreen4, label=end];
m48_16 -> m48_24  [key=1, style=dashed, color=darkseagreen4, label=end];
m48_20 -> m48_21  [key=0, style=solid];
m48_20 -> m48_24  [key=0, style=solid];
m48_23 -> m48_24  [key=0, style=solid];
m48_23 -> m48_34  [key=2, style=dotted];
m48_23 -> m48_35  [key=2, style=dotted];
m48_26 -> m48_27  [key=0, style=solid];
m48_15 -> m48_16  [key=0, style=solid];
m48_15 -> m48_20  [key=1, style=dashed, color=darkseagreen4, label=current];
m48_15 -> m48_24  [key=1, style=dashed, color=darkseagreen4, label=current];
m48_15 -> m48_25  [key=1, style=dashed, color=darkseagreen4, label=current];
m48_17 -> m48_18  [key=0, style=solid];
m48_17 -> m48_31  [key=2, style=dotted];
m48_17 -> m48_19  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m48_17 -> m48_21  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m48_24 -> m48_25  [key=0, style=solid];
m48_24 -> m48_26  [key=0, style=solid];
m48_25 -> m48_19  [key=0, style=solid];
m48_25 -> m48_25  [key=1, style=dashed, color=darkseagreen4, label=current];
m48_18 -> m48_19  [key=0, style=solid];
m48_18 -> m48_32  [key=2, style=dotted];
m48_18 -> m48_22  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m48_19 -> m48_20  [key=0, style=solid];
m48_19 -> m48_26  [key=0, style=solid];
m48_19 -> m48_33  [key=2, style=dotted];
m48_21 -> m48_22  [key=0, style=solid];
m48_22 -> m48_23  [key=0, style=solid];
m48_22 -> m48_22  [key=1, style=dashed, color=darkseagreen4, label=message];
m48_27 -> m48_12  [key=0, style=bold, color=blue];
m48_46 -> m48_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi"];
m48_46 -> m48_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi"];
m48_46 -> m48_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi"];
m48_46 -> m48_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi"];
m48_46 -> m48_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi"];
m50_5 -> m50_6  [key=0, style=solid];
m50_5 -> m50_9  [key=2, style=dotted];
m50_8 -> m50_9  [key=0, style=solid, color=green];
m50_8 -> m50_10  [key=2, style=dotted, color=green];
m50_8 -> m50_15  [key=1, style=dashed, color=green, label="lambda expression"];
m50_15 -> m50_16  [key=0, style=solid, color=green];
m50_16 -> m50_17  [key=0, style=solid, color=green];
m50_16 -> m50_18  [key=2, style=dotted, color=green];
m50_16 -> m50_19  [key=2, style=dotted, color=green];
m50_17 -> m50_15  [key=0, style=bold, color=blue];
m50_0 -> m50_1  [key=0, style=solid];
m50_0 -> m50_3  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m50_0 -> m50_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m50_0 -> m50_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> m50_3  [key=0, style=solid];
m50_3 -> m50_4  [key=0, style=solid];
m50_3 -> m50_5  [key=0, style=solid];
m50_6 -> m50_7  [key=0, style=solid];
m50_6 -> m50_10  [key=2, style=dotted];
m50_6 -> m50_11  [key=2, style=dotted];
m50_6 -> m50_8  [key=1, style=dashed, color=green, label=string];
m50_6 -> m50_16  [key=1, style=dashed, color=green, label=string];
m50_6 -> m50_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m50_2 -> m50_7  [key=0, style=solid];
m50_2 -> m50_8  [key=2, style=dotted];
m50_2 -> m50_4  [key=0, style=solid];
m50_2 -> m50_5  [key=2, style=dotted];
m50_4 -> m50_7  [key=0, style=solid];
m50_4 -> m50_8  [key=2, style=dotted];
m50_4 -> m50_0  [key=0, style=bold, color=blue];
m50_7 -> m50_0  [key=0, style=bold, color=blue];
m50_7 -> m50_8  [key=0, style=solid, color=green];
m50_7 -> m50_10  [key=2, style=dotted];
m50_7 -> m50_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m50_12 -> m50_13  [key=0, style=solid];
m50_12 -> m50_14  [key=2, style=dotted];
m50_13 -> m50_14  [key=0, style=solid];
m50_13 -> m50_11  [key=0, style=bold, color=blue];
m50_14 -> m50_12  [key=0, style=bold, color=blue];
m50_9 -> m50_6  [key=0, style=bold, color=blue];
m50_18 -> m50_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m50_18 -> m50_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m50_18 -> m50_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m50_18 -> m50_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m50_11 -> m50_12  [key=0, style=solid];
m50_20 -> m50_8  [key=1, style=dashed, color=green, label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue"];
m50_20 -> m50_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue"];
m50_20 -> m50_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue"];
m50_21 -> m50_16  [key=1, style=dashed, color=green, label=string];
m50_21 -> m50_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m50_22 -> m50_16  [key=1, style=dashed, color=green, label=string];
m51_8 -> m51_9  [key=0, style=solid, color=red];
m51_9 -> m51_10  [key=0, style=solid, color=red];
m51_9 -> m51_11  [key=2, style=dotted, color=red];
m51_9 -> m51_12  [key=2, style=dotted, color=red];
m51_10 -> m51_8  [key=0, style=bold, color=blue];
m51_0 -> m51_1  [key=0, style=solid];
m51_0 -> m51_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_3  [key=0, style=solid];
m51_1 -> m51_6  [key=2, style=dotted];
m51_3 -> m51_4  [key=0, style=solid];
m51_2 -> m51_5  [key=0, style=solid];
m51_2 -> m51_7  [key=2, style=dotted];
m51_4 -> m51_5  [key=0, style=solid];
m51_5 -> m51_0  [key=0, style=bold, color=blue];
m51_13 -> m51_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m51_13 -> m51_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m51_13 -> m51_9  [key=1, style=dashed, color=red, label="HangFire.States.ProcessingState"];
m52_0 -> m52_1  [key=0, style=solid];
m52_1 -> m52_2  [key=0, style=solid];
m52_2 -> m52_3  [key=0, style=solid];
m52_2 -> m52_5  [key=2, style=dotted];
m52_3 -> m52_4  [key=0, style=solid];
m52_4 -> m52_0  [key=0, style=bold, color=blue];
m52_6 -> m52_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m52_6 -> m52_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m52_6 -> m52_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m53_25 -> m53_23  [key=0, style=bold, color=blue];
m53_17 -> m53_18  [key=0, style=solid];
m53_17 -> m53_20  [key=2, style=dotted];
m53_26 -> m53_27  [key=0, style=solid];
m53_27 -> m53_28  [key=0, style=solid];
m53_27 -> m53_29  [key=2, style=dotted];
m53_28 -> m53_26  [key=0, style=bold, color=blue];
m53_28 -> m53_29  [key=0, style=solid];
m53_28 -> m53_13  [key=2, style=dotted];
m53_6 -> m53_10  [key=0, style=solid];
m53_6 -> m53_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m53_6 -> m53_15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m53_10 -> m53_11  [key=0, style=solid];
m53_10 -> m53_12  [key=0, style=solid];
m53_10 -> m53_13  [key=2, style=dotted];
m53_13 -> m53_14  [key=0, style=solid];
m53_13 -> m53_19  [key=2, style=dotted];
m53_15 -> m53_16  [key=0, style=solid];
m53_15 -> m53_21  [key=2, style=dotted];
m53_15 -> m53_22  [key=2, style=dotted];
m53_11 -> m53_16  [key=0, style=solid];
m53_11 -> m53_17  [key=2, style=dotted];
m53_11 -> m53_12  [key=0, style=solid];
m53_11 -> m53_14  [key=2, style=dotted];
m53_12 -> m53_13  [key=0, style=solid];
m53_12 -> m53_18  [key=2, style=dotted];
m53_12 -> m53_15  [key=1, style=dashed, color=darkseagreen4, label=client];
m53_12 -> m53_9  [key=0, style=bold, color=blue];
m53_14 -> m53_15  [key=0, style=solid];
m53_14 -> m53_20  [key=2, style=dotted];
m53_16 -> m53_6  [key=0, style=bold, color=blue];
m53_16 -> m53_17  [key=0, style=solid];
m53_16 -> m53_13  [key=2, style=dotted];
m53_8 -> m53_9  [key=0, style=solid];
m53_8 -> m53_6  [key=2, style=dotted];
m53_9 -> m53_10  [key=0, style=solid];
m53_9 -> m53_7  [key=0, style=bold, color=blue];
m53_0 -> m53_1  [key=0, style=solid];
m53_1 -> m53_2  [key=0, style=solid, color=green];
m53_1 -> m53_3  [key=2, style=dotted];
m53_1 -> m53_6  [key=2, style=dotted];
m53_2 -> m53_0  [key=0, style=bold, color=blue];
m53_2 -> m53_3  [key=0, style=solid, color=green];
m53_37 -> m53_38  [key=0, style=solid];
m53_39 -> m53_40  [key=0, style=solid, color=green];
m53_39 -> m53_41  [key=2, style=dotted];
m53_39 -> m53_42  [key=2, style=dotted];
m53_38 -> m53_39  [key=0, style=solid, color=green];
m53_38 -> m53_13  [key=2, style=dotted];
m53_38 -> m53_41  [key=1, style=dashed, color=darkseagreen4, label=handler];
m53_38 -> m53_46  [key=1, style=dashed, color=darkseagreen4, label=handler];
m53_40 -> m53_41  [key=0, style=solid];
m53_40 -> m53_43  [key=2, style=dotted];
m53_40 -> m53_21  [key=0, style=bold, color=blue];
m53_41 -> m53_42  [key=0, style=solid];
m53_41 -> m53_44  [key=2, style=dotted];
m53_41 -> m53_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m53_42 -> m53_37  [key=0, style=bold, color=blue];
m53_3 -> m53_4  [key=0, style=solid, color=green];
m53_3 -> m53_7  [key=2, style=dotted, color=green];
m53_4 -> m53_5  [key=0, style=solid];
m53_4 -> m53_6  [key=2, style=dotted];
m53_4 -> m53_8  [key=2, style=dotted];
m53_5 -> m53_3  [key=0, style=bold, color=blue];
m53_5 -> m53_0  [key=0, style=bold, color=blue];
m53_19 -> m53_15  [key=0, style=bold, color=blue];
m53_21 -> m53_39  [key=0, style=solid];
m53_30 -> m53_31  [key=0, style=solid];
m53_30 -> m53_21  [key=2, style=dotted];
m53_30 -> m53_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m53_31 -> m53_32  [key=0, style=solid];
m53_31 -> m53_29  [key=2, style=dotted];
m53_31 -> m53_27  [key=0, style=bold, color=blue];
m53_32 -> m53_30  [key=0, style=bold, color=blue];
m53_29 -> m53_30  [key=0, style=solid];
m53_29 -> m53_32  [key=2, style=dotted];
m53_29 -> m53_33  [key=0, style=solid];
m53_29 -> m53_34  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m53_29 -> m53_35  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m53_33 -> m53_34  [key=0, style=solid];
m53_33 -> m53_18  [key=2, style=dotted];
m53_33 -> m53_35  [key=1, style=dashed, color=darkseagreen4, label=client];
m53_34 -> m53_35  [key=0, style=solid];
m53_34 -> m53_37  [key=2, style=dotted];
m53_34 -> m53_38  [key=2, style=dotted];
m53_34 -> m53_36  [key=2, style=dotted];
m53_35 -> m53_36  [key=0, style=solid];
m53_35 -> m53_21  [key=2, style=dotted];
m53_35 -> m53_22  [key=2, style=dotted];
m53_35 -> m53_33  [key=0, style=bold, color=blue];
m53_36 -> m53_29  [key=0, style=bold, color=blue];
m53_18 -> m53_19  [key=0, style=solid];
m53_18 -> m53_21  [key=2, style=dotted];
m53_18 -> m53_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m53_23 -> m53_24  [key=0, style=solid];
m53_23 -> m53_25  [key=2, style=dotted];
m53_23 -> m53_26  [key=2, style=dotted];
m53_24 -> m53_25  [key=0, style=solid];
m53_24 -> m53_26  [key=2, style=dotted];
m53_24 -> m53_22  [key=0, style=bold, color=blue];
m53_7 -> m53_8  [key=0, style=solid];
m53_45 -> m53_46  [key=0, style=solid];
m53_46 -> m53_47  [key=0, style=solid];
m53_46 -> m53_20  [key=2, style=dotted];
m53_22 -> m53_23  [key=0, style=solid];
m53_47 -> m53_45  [key=0, style=bold, color=blue];
m53_48 -> m53_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_3  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_39  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_48 -> m53_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts"];
m53_49 -> m53_46  [key=1, style=dashed, color=darkseagreen4, label=handler];
m55_0 -> m55_1  [key=0, style=solid];
m55_0 -> m55_2  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m55_1 -> m55_2  [key=0, style=solid];
m55_2 -> m55_3  [key=0, style=solid];
m55_3 -> m55_0  [key=0, style=bold, color=blue];
m55_22 -> m55_23  [key=0, style=solid];
m55_23 -> m55_24  [key=0, style=solid];
m55_23 -> m55_38  [key=2, style=dotted];
m55_24 -> m55_25  [key=0, style=solid];
m55_24 -> m55_29  [key=1, style=dashed, color=darkseagreen4, label=enqueued];
m55_24 -> m55_30  [key=1, style=dashed, color=darkseagreen4, label=enqueued];
m55_24 -> m55_31  [key=1, style=dashed, color=darkseagreen4, label=enqueued];
m55_25 -> m55_26  [key=0, style=solid];
m55_25 -> m55_34  [key=0, style=solid];
m55_29 -> m55_25  [key=0, style=solid];
m55_29 -> m55_29  [key=1, style=dashed, color=darkseagreen4, label=enqueued];
m55_29 -> m55_30  [key=1, style=dashed, color=darkseagreen4, label=enqueued];
m55_29 -> m55_31  [key=1, style=dashed, color=darkseagreen4, label=enqueued];
m55_30 -> m55_31  [key=0, style=solid];
m55_30 -> m55_33  [key=0, style=solid];
m55_31 -> m55_32  [key=0, style=solid];
m55_31 -> m55_40  [key=2, style=dotted];
m55_26 -> m55_27  [key=0, style=solid];
m55_34 -> m55_35  [key=0, style=solid];
m55_34 -> m55_37  [key=0, style=solid];
m55_34 -> m55_38  [key=2, style=dotted];
m55_27 -> m55_28  [key=0, style=solid];
m55_27 -> m55_39  [key=2, style=dotted];
m55_27 -> m55_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m55_28 -> m55_29  [key=0, style=solid];
m55_28 -> m55_30  [key=0, style=solid];
m55_33 -> m55_25  [key=0, style=solid];
m55_33 -> m55_34  [key=0, style=solid];
m55_33 -> m55_41  [key=2, style=dotted];
m55_32 -> m55_33  [key=0, style=solid];
m55_35 -> m55_36  [key=0, style=solid];
m55_36 -> m55_37  [key=0, style=solid];
m55_36 -> m55_42  [key=2, style=dotted];
m55_37 -> m55_22  [key=0, style=bold, color=blue];
m55_46 -> m55_47  [key=0, style=solid];
m55_46 -> m55_48  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.Thread"];
m55_47 -> m55_48  [key=0, style=solid];
m55_47 -> m55_50  [key=2, style=dotted];
m55_48 -> m55_49  [key=0, style=solid];
m55_48 -> m55_51  [key=2, style=dotted];
m55_49 -> m55_46  [key=0, style=bold, color=blue];
m55_4 -> m55_5  [key=0, style=solid];
m55_5 -> m55_6  [key=0, style=solid];
m55_5 -> m55_15  [key=2, style=dotted];
m55_5 -> m55_7  [key=1, style=dashed, color=darkseagreen4, label=connection];
m55_5 -> m55_10  [key=1, style=dashed, color=darkseagreen4, label=connection];
m55_6 -> m55_7  [key=0, style=solid];
m55_6 -> m55_16  [key=2, style=dotted];
m55_7 -> m55_8  [key=0, style=solid];
m55_7 -> m55_17  [key=2, style=dotted];
m55_7 -> m55_12  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m55_10 -> m55_11  [key=0, style=solid];
m55_10 -> m55_19  [key=2, style=dotted];
m55_10 -> m55_12  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m55_8 -> m55_9  [key=0, style=solid];
m55_8 -> m55_10  [key=0, style=solid];
m55_8 -> m55_18  [key=2, style=dotted];
m55_12 -> m55_13  [key=0, style=solid];
m55_12 -> m55_21  [key=2, style=dotted];
m55_9 -> m55_14  [key=0, style=solid];
m55_11 -> m55_12  [key=0, style=solid];
m55_11 -> m55_20  [key=2, style=dotted];
m55_13 -> m55_14  [key=0, style=solid];
m55_14 -> m55_4  [key=0, style=bold, color=blue];
m55_43 -> m55_44  [key=0, style=solid];
m55_44 -> m55_45  [key=0, style=solid];
m55_44 -> m55_4  [key=2, style=dotted];
m55_45 -> m55_43  [key=0, style=bold, color=blue];
m55_52 -> m55_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.SchedulePoller"];
m55_52 -> m55_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.SchedulePoller"];
m55_52 -> m55_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.SchedulePoller"];
m55_52 -> m55_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.SchedulePoller"];
m55_52 -> m55_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.SchedulePoller"];
m55_52 -> m55_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.SchedulePoller"];
m55_52 -> m55_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.SchedulePoller"];
m55_52 -> m55_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Components.SchedulePoller"];
m56_2 -> m56_3  [key=0, style=solid];
m56_3 -> m56_2  [key=0, style=bold, color=blue];
m56_0 -> m56_1  [key=0, style=solid];
m56_1 -> m56_0  [key=0, style=bold, color=blue];
m57_0 -> m57_1  [key=0, style=solid];
m57_0 -> m57_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m57_0 -> m57_3  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m57_0 -> m57_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m57_1 -> m57_2  [key=0, style=solid];
m57_1 -> m57_8  [key=2, style=dotted];
m57_2 -> m57_3  [key=0, style=solid];
m57_2 -> m57_9  [key=2, style=dotted];
m57_3 -> m57_4  [key=0, style=solid];
m57_3 -> m57_10  [key=2, style=dotted];
m57_6 -> m57_7  [key=0, style=solid];
m57_6 -> m57_12  [key=2, style=dotted];
m57_4 -> m57_5  [key=0, style=solid];
m57_4 -> m57_11  [key=2, style=dotted];
m57_4 -> m57_6  [key=1, style=dashed, color=darkseagreen4, label=token];
m57_5 -> m57_6  [key=0, style=solid];
m57_5 -> m57_7  [key=0, style=solid];
m57_7 -> m57_0  [key=0, style=bold, color=blue];
m60_63 -> m60_64  [key=0, style=solid];
m60_63 -> m60_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_64 -> m60_65  [key=0, style=solid];
m60_64 -> m60_68  [key=2, style=dotted];
m60_64 -> m60_66  [key=1, style=dashed, color=darkseagreen4, label=writer];
m60_65 -> m60_66  [key=0, style=solid];
m60_65 -> m60_69  [key=2, style=dotted];
m60_66 -> m60_67  [key=0, style=solid];
m60_66 -> m60_5  [key=2, style=dotted];
m60_66 -> m60_70  [key=2, style=dotted];
m60_67 -> m60_63  [key=0, style=bold, color=blue];
m60_11 -> m60_12  [key=0, style=solid, color=red];
m60_120 -> m60_126  [key=0, style=solid];
m60_120 -> m60_127  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Group"];
m60_120 -> m60_128  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_120 -> m60_129  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_126 -> m60_127  [key=0, style=solid];
m60_126 -> m60_80  [key=2, style=dotted];
m60_127 -> m60_128  [key=0, style=solid];
m60_127 -> m60_80  [key=2, style=dotted];
m60_128 -> m60_129  [key=0, style=solid];
m60_128 -> m60_80  [key=2, style=dotted];
m60_129 -> m60_130  [key=0, style=solid];
m60_129 -> m60_131  [key=2, style=dotted];
m60_130 -> m60_120  [key=0, style=bold, color=blue];
m60_6 -> m60_7  [key=0, style=solid, color=green];
m60_6 -> m60_12  [key=2, style=dotted, color=green];
m60_6 -> m60_8  [key=1, style=dashed, color=green, label=serversRemoved];
m60_69 -> m60_71  [key=0, style=solid];
m60_69 -> m60_72  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_69 -> m60_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_69 -> m60_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_69 -> m60_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_69 -> m60_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_71 -> m60_72  [key=0, style=solid];
m60_71 -> m60_80  [key=2, style=dotted];
m60_72 -> m60_73  [key=0, style=solid];
m60_72 -> m60_80  [key=2, style=dotted];
m60_74 -> m60_75  [key=0, style=solid];
m60_74 -> m60_78  [key=0, style=solid];
m60_74 -> m60_81  [key=2, style=dotted];
m60_74 -> m60_76  [key=1, style=dashed, color=darkseagreen4, label=match];
m60_74 -> m60_77  [key=1, style=dashed, color=darkseagreen4, label=match];
m60_75 -> m60_76  [key=0, style=solid];
m60_75 -> m60_15  [key=2, style=dotted];
m60_75 -> m60_82  [key=2, style=dotted];
m60_76 -> m60_77  [key=0, style=solid];
m60_76 -> m60_83  [key=2, style=dotted];
m60_78 -> m60_79  [key=0, style=solid];
m60_78 -> m60_84  [key=2, style=dotted];
m60_78 -> m60_82  [key=2, style=dotted];
m60_73 -> m60_74  [key=0, style=solid];
m60_73 -> m60_75  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_73 -> m60_78  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_77 -> m60_74  [key=0, style=solid];
m60_77 -> m60_78  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_79 -> m60_69  [key=0, style=bold, color=blue];
m60_82 -> m60_145  [key=0, style=solid];
m60_82 -> m60_146  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_145 -> m60_146  [key=0, style=solid];
m60_145 -> m60_80  [key=2, style=dotted];
m60_146 -> m60_147  [key=0, style=solid];
m60_146 -> m60_148  [key=2, style=dotted];
m60_147 -> m60_82  [key=0, style=bold, color=blue];
m60_12 -> m60_13  [key=0, style=solid, color=red];
m60_12 -> m60_5  [key=2, style=dotted, color=red];
m60_12 -> m60_14  [key=2, style=dotted, color=red];
m60_12 -> m60_15  [key=2, style=dotted, color=red];
m60_0 -> m60_2  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m60_0 -> m60_1  [key=0, style=solid];
m60_0 -> m60_3  [key=1, style=dashed, color=red, label="HangFire.Common.Job"];
m60_2 -> m60_3  [key=0, style=solid, color=green];
m60_2 -> m60_4  [key=0, style=solid, color=red];
m60_2 -> m60_5  [key=2, style=dotted, color=red];
m60_1 -> m60_2  [key=0, style=solid, color=red];
m60_1 -> m60_3  [key=0, style=solid, color=red];
m60_3 -> m60_0  [key=0, style=bold, color=blue];
m60_3 -> m60_4  [key=0, style=solid, color=red];
m60_3 -> m60_5  [key=2, style=dotted, color=red];
m60_3 -> m60_6  [key=2, style=dotted, color=red];
m60_19 -> m60_20  [key=0, style=solid];
m60_19 -> m60_41  [key=2, style=dotted];
m60_19 -> m60_21  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_24  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_26  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_30  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_32  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_33  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_35  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_36  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_37  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_38  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_19 -> m60_39  [key=1, style=dashed, color=darkseagreen4, label=builder];
m60_13 -> m60_10  [key=0, style=bold, color=blue];
m60_16 -> m60_17  [key=0, style=solid, color=red];
m60_16 -> m60_20  [key=1, style=dashed, color=darkseagreen4, label=bool];
m60_16 -> m60_21  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_16 -> m60_22  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_17 -> m60_18  [key=0, style=solid, color=red];
m60_17 -> m60_19  [key=2, style=dotted];
m60_18 -> m60_16  [key=0, style=bold, color=blue];
m60_18 -> m60_40  [key=0, style=solid, color=red];
m60_5 -> m60_6  [key=0, style=solid, color=green];
m60_5 -> m60_11  [key=2, style=dotted, color=green];
m60_131 -> m60_132  [key=0, style=solid];
m60_131 -> m60_133  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_131 -> m60_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_131 -> m60_135  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_131 -> m60_136  [key=1, style=dashed, color=darkseagreen4, label=int];
m60_132 -> m60_133  [key=0, style=solid];
m60_132 -> m60_80  [key=2, style=dotted];
m60_133 -> m60_134  [key=0, style=solid];
m60_133 -> m60_80  [key=2, style=dotted];
m60_134 -> m60_135  [key=0, style=solid];
m60_134 -> m60_15  [key=2, style=dotted];
m60_134 -> m60_82  [key=2, style=dotted];
m60_135 -> m60_136  [key=0, style=solid];
m60_135 -> m60_124  [key=2, style=dotted];
m60_136 -> m60_137  [key=0, style=solid];
m60_137 -> m60_131  [key=0, style=bold, color=blue];
m60_20 -> m60_21  [key=0, style=solid];
m60_20 -> m60_22  [key=0, style=solid];
m60_20 -> m60_2  [key=1, style=dashed, color=green, label="Hangfire.Server.ServerWatchdog"];
m60_20 -> m60_6  [key=1, style=dashed, color=green, label="Hangfire.Server.ServerWatchdog"];
m60_20 -> m60_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdog"];
m60_20 -> m60_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdog"];
m60_20 -> m60_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdog"];
m60_21 -> m60_22  [key=0, style=solid];
m60_21 -> m60_42  [key=2, style=dotted];
m60_22 -> m60_23  [key=0, style=solid];
m60_22 -> m60_43  [key=2, style=dotted];
m60_22 -> m60_22  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_24  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_25  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_26  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_27  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_28  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_29  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_30  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_31  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_32  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_34  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_22 -> m60_35  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m60_24 -> m60_25  [key=0, style=solid];
m60_24 -> m60_44  [key=2, style=dotted];
m60_26 -> m60_27  [key=0, style=solid];
m60_26 -> m60_44  [key=2, style=dotted];
m60_28 -> m60_29  [key=0, style=solid];
m60_28 -> m60_44  [key=2, style=dotted];
m60_30 -> m60_31  [key=0, style=solid];
m60_30 -> m60_45  [key=2, style=dotted];
m60_32 -> m60_33  [key=0, style=solid];
m60_32 -> m60_44  [key=2, style=dotted];
m60_33 -> m60_36  [key=0, style=solid];
m60_33 -> m60_42  [key=2, style=dotted];
m60_35 -> m60_36  [key=0, style=solid];
m60_35 -> m60_44  [key=2, style=dotted];
m60_36 -> m60_37  [key=0, style=solid];
m60_36 -> m60_38  [key=0, style=solid];
m60_37 -> m60_38  [key=0, style=solid];
m60_37 -> m60_42  [key=2, style=dotted];
m60_38 -> m60_39  [key=0, style=solid];
m60_38 -> m60_46  [key=2, style=dotted];
m60_39 -> m60_40  [key=0, style=solid];
m60_39 -> m60_47  [key=2, style=dotted];
m60_23 -> m60_24  [key=0, style=solid];
m60_23 -> m60_25  [key=0, style=solid];
m60_25 -> m60_26  [key=0, style=solid];
m60_25 -> m60_27  [key=0, style=solid];
m60_27 -> m60_28  [key=0, style=solid];
m60_27 -> m60_29  [key=0, style=solid];
m60_29 -> m60_30  [key=0, style=solid];
m60_29 -> m60_34  [key=0, style=solid];
m60_31 -> m60_32  [key=0, style=solid];
m60_31 -> m60_33  [key=0, style=solid];
m60_34 -> m60_35  [key=0, style=solid];
m60_34 -> m60_36  [key=0, style=solid];
m60_40 -> m60_16  [key=0, style=bold, color=blue];
m60_56 -> m60_57  [key=0, style=solid];
m60_56 -> m60_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_56 -> m60_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_57 -> m60_58  [key=0, style=solid];
m60_58 -> m60_59  [key=0, style=solid];
m60_58 -> m60_60  [key=0, style=solid];
m60_59 -> m60_61  [key=0, style=solid];
m60_60 -> m60_61  [key=0, style=solid];
m60_61 -> m60_62  [key=0, style=solid];
m60_61 -> m60_5  [key=2, style=dotted];
m60_62 -> m60_56  [key=0, style=bold, color=blue];
m60_7 -> m60_8  [key=0, style=solid, color=green];
m60_7 -> m60_9  [key=0, style=solid, color=green];
m60_8 -> m60_9  [key=0, style=solid, color=green];
m60_8 -> m60_5  [key=2, style=dotted];
m60_8 -> m60_13  [key=2, style=dotted, color=green];
m60_8 -> m60_14  [key=2, style=dotted, color=green];
m60_9 -> m60_7  [key=0, style=bold, color=blue];
m60_9 -> m60_10  [key=0, style=solid];
m60_9 -> m60_15  [key=2, style=dotted];
m60_48 -> m60_49  [key=0, style=solid];
m60_49 -> m60_50  [key=0, style=solid];
m60_49 -> m60_51  [key=2, style=dotted];
m60_49 -> m60_52  [key=2, style=dotted];
m60_49 -> m60_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m60_50 -> m60_48  [key=0, style=bold, color=blue];
m60_53 -> m60_54  [key=0, style=solid];
m60_54 -> m60_55  [key=0, style=solid];
m60_54 -> m60_6  [key=2, style=dotted];
m60_54 -> m60_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m60_55 -> m60_53  [key=0, style=bold, color=blue];
m60_10 -> m60_11  [key=0, style=solid];
m60_10 -> m60_12  [key=1, style=dashed, color=red, label=string];
m60_10 -> m60_4  [key=0, style=bold, color=blue];
m60_83 -> m60_85  [key=0, style=solid];
m60_83 -> m60_86  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m60_83 -> m60_87  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_88  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m60_83 -> m60_89  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m60_83 -> m60_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_83 -> m60_93  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_83 -> m60_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_83 -> m60_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_83 -> m60_98  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_103  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_105  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_107  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_108  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_110  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_111  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_113  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_83 -> m60_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_83 -> m60_115  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_83 -> m60_116  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m60_83 -> m60_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_85 -> m60_86  [key=0, style=solid];
m60_85 -> m60_80  [key=2, style=dotted];
m60_86 -> m60_87  [key=0, style=solid];
m60_86 -> m60_80  [key=2, style=dotted];
m60_87 -> m60_88  [key=0, style=solid];
m60_87 -> m60_80  [key=2, style=dotted];
m60_88 -> m60_89  [key=0, style=solid];
m60_88 -> m60_91  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_89 -> m60_90  [key=0, style=solid];
m60_89 -> m60_95  [key=1, style=dashed, color=darkseagreen4, label=groups];
m60_89 -> m60_96  [key=1, style=dashed, color=darkseagreen4, label=groups];
m60_89 -> m60_113  [key=1, style=dashed, color=darkseagreen4, label=groups];
m60_89 -> m60_114  [key=1, style=dashed, color=darkseagreen4, label=groups];
m60_91 -> m60_92  [key=0, style=solid];
m60_91 -> m60_15  [key=2, style=dotted];
m60_91 -> m60_82  [key=2, style=dotted];
m60_93 -> m60_94  [key=0, style=solid];
m60_93 -> m60_119  [key=2, style=dotted];
m60_94 -> m60_95  [key=0, style=solid];
m60_94 -> m60_120  [key=2, style=dotted];
m60_94 -> m60_94  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_95 -> m60_96  [key=0, style=solid];
m60_95 -> m60_120  [key=2, style=dotted];
m60_95 -> m60_95  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_95 -> m60_97  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_97 -> m60_98  [key=0, style=solid];
m60_97 -> m60_15  [key=2, style=dotted];
m60_97 -> m60_82  [key=2, style=dotted];
m60_98 -> m60_99  [key=0, style=solid];
m60_98 -> m60_119  [key=2, style=dotted];
m60_103 -> m60_100  [key=0, style=solid];
m60_103 -> m60_123  [key=2, style=dotted];
m60_103 -> m60_124  [key=2, style=dotted];
m60_105 -> m60_106  [key=0, style=solid];
m60_105 -> m60_119  [key=2, style=dotted];
m60_107 -> m60_108  [key=0, style=solid];
m60_107 -> m60_124  [key=2, style=dotted];
m60_108 -> m60_109  [key=0, style=solid];
m60_108 -> m60_125  [key=2, style=dotted];
m60_110 -> m60_100  [key=0, style=solid];
m60_110 -> m60_124  [key=2, style=dotted];
m60_111 -> m60_112  [key=0, style=solid];
m60_111 -> m60_119  [key=2, style=dotted];
m60_113 -> m60_114  [key=0, style=solid];
m60_113 -> m60_120  [key=2, style=dotted];
m60_113 -> m60_113  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_114 -> m60_115  [key=0, style=solid];
m60_114 -> m60_120  [key=2, style=dotted];
m60_114 -> m60_114  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_114 -> m60_117  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_115 -> m60_116  [key=0, style=solid];
m60_115 -> m60_119  [key=2, style=dotted];
m60_116 -> m60_117  [key=0, style=solid];
m60_117 -> m60_118  [key=0, style=solid];
m60_117 -> m60_15  [key=2, style=dotted];
m60_117 -> m60_82  [key=2, style=dotted];
m60_90 -> m60_91  [key=0, style=solid];
m60_90 -> m60_92  [key=1, style=dashed, color=darkseagreen4, label=type];
m60_90 -> m60_94  [key=1, style=dashed, color=darkseagreen4, label=type];
m60_96 -> m60_97  [key=0, style=solid];
m60_96 -> m60_100  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m60_96 -> m60_112  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m60_92 -> m60_93  [key=0, style=solid];
m60_92 -> m60_94  [key=1, style=dashed, color=darkseagreen4, label=anchor];
m60_100 -> m60_101  [key=0, style=solid];
m60_100 -> m60_111  [key=0, style=solid];
m60_100 -> m60_121  [key=2, style=dotted];
m60_100 -> m60_103  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m60_100 -> m60_106  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m60_100 -> m60_109  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m60_112 -> m60_113  [key=0, style=solid];
m60_99 -> m60_100  [key=0, style=solid];
m60_99 -> m60_104  [key=1, style=dashed, color=darkseagreen4, label=position];
m60_104 -> m60_105  [key=0, style=solid];
m60_104 -> m60_106  [key=0, style=solid];
m60_104 -> m60_104  [key=1, style=dashed, color=darkseagreen4, label=position];
m60_101 -> m60_102  [key=0, style=solid];
m60_101 -> m60_122  [key=2, style=dotted];
m60_101 -> m60_106  [key=1, style=dashed, color=darkseagreen4, label=spaceIndex];
m60_101 -> m60_109  [key=1, style=dashed, color=darkseagreen4, label=spaceIndex];
m60_106 -> m60_107  [key=0, style=solid];
m60_106 -> m60_15  [key=2, style=dotted];
m60_106 -> m60_123  [key=2, style=dotted];
m60_109 -> m60_110  [key=0, style=solid];
m60_109 -> m60_84  [key=2, style=dotted];
m60_109 -> m60_123  [key=2, style=dotted];
m60_102 -> m60_103  [key=0, style=solid];
m60_102 -> m60_104  [key=0, style=solid];
m60_118 -> m60_83  [key=0, style=bold, color=blue];
m60_4 -> m60_5  [key=0, style=solid, color=green];
m60_4 -> m60_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m60_4 -> m60_0  [key=0, style=bold, color=blue];
m60_124 -> m60_138  [key=0, style=solid];
m60_124 -> m60_139  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_124 -> m60_140  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_124 -> m60_141  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_124 -> m60_142  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_124 -> m60_143  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m60_138 -> m60_139  [key=0, style=solid];
m60_138 -> m60_80  [key=2, style=dotted];
m60_139 -> m60_140  [key=0, style=solid];
m60_139 -> m60_119  [key=2, style=dotted];
m60_140 -> m60_141  [key=0, style=solid];
m60_140 -> m60_119  [key=2, style=dotted];
m60_141 -> m60_142  [key=0, style=solid];
m60_141 -> m60_119  [key=2, style=dotted];
m60_142 -> m60_143  [key=0, style=solid];
m60_142 -> m60_82  [key=2, style=dotted];
m60_143 -> m60_144  [key=0, style=solid];
m60_143 -> m60_119  [key=2, style=dotted];
m60_144 -> m60_124  [key=0, style=bold, color=blue];
m61_8 -> m61_9  [key=0, style=solid, color=green];
m61_8 -> m61_10  [key=2, style=dotted, color=green];
m61_8 -> m61_11  [key=2, style=dotted, color=green];
m61_9 -> m61_8  [key=0, style=bold, color=blue];
m61_9 -> m61_7  [key=0, style=bold, color=blue];
m61_5 -> m61_0  [key=0, style=bold, color=blue];
m61_11 -> m61_12  [key=0, style=solid];
m61_11 -> m61_13  [key=0, style=solid];
m61_10 -> m61_11  [key=0, style=solid];
m61_10 -> m61_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformingContext"];
m61_10 -> m61_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformingContext"];
m61_10 -> m61_17  [key=1, style=dashed, color=red, label="HangFire.Filters.PerformingContext"];
m61_10 -> m61_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformingContext"];
m61_13 -> m61_14  [key=0, style=solid];
m61_13 -> m61_23  [key=2, style=dotted];
m61_13 -> m61_16  [key=1, style=dashed, color=darkseagreen4, label=cultureName];
m61_13 -> m61_18  [key=1, style=dashed, color=darkseagreen4, label=cultureName];
m61_14 -> m61_15  [key=0, style=solid];
m61_14 -> m61_23  [key=2, style=dotted];
m61_14 -> m61_19  [key=1, style=dashed, color=darkseagreen4, label=uiCultureName];
m61_14 -> m61_21  [key=1, style=dashed, color=darkseagreen4, label=uiCultureName];
m61_17 -> m61_18  [key=0, style=solid, color=red];
m61_20 -> m61_21  [key=0, style=solid];
m61_12 -> m61_22  [key=0, style=solid];
m61_12 -> m61_6  [key=2, style=dotted];
m61_12 -> m61_3  [key=1, style=dashed, color=green, label="Hangfire.AspNetCore.AspNetCoreLogProvider"];
m61_12 -> m61_8  [key=1, style=dashed, color=green, label="Hangfire.AspNetCore.AspNetCoreLogProvider"];
m61_16 -> m61_17  [key=0, style=solid, color=red];
m61_16 -> m61_19  [key=0, style=solid];
m61_16 -> m61_24  [key=2, style=dotted];
m61_18 -> m61_19  [key=0, style=solid];
m61_18 -> m61_25  [key=2, style=dotted];
m61_15 -> m61_16  [key=0, style=solid];
m61_15 -> m61_17  [key=1, style=dashed, color=red, label=thread];
m61_15 -> m61_18  [key=1, style=dashed, color=darkseagreen4, label=thread];
m61_15 -> m61_20  [key=1, style=dashed, color=darkseagreen4, label=thread];
m61_15 -> m61_21  [key=1, style=dashed, color=darkseagreen4, label=thread];
m61_19 -> m61_20  [key=0, style=solid];
m61_19 -> m61_22  [key=0, style=solid];
m61_19 -> m61_24  [key=2, style=dotted];
m61_21 -> m61_22  [key=0, style=solid];
m61_21 -> m61_25  [key=2, style=dotted];
m61_22 -> m61_10  [key=0, style=bold, color=blue];
m61_7 -> m61_8  [key=0, style=solid, color=green];
m61_0 -> m61_1  [key=0, style=solid, color=red];
m61_0 -> m61_3  [key=1, style=dashed, color=green, label=ILoggerFactory];
m61_0 -> m61_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatingContext"];
m61_0 -> m61_2  [key=1, style=dashed, color=darkseagreen4, label=ILoggerFactory];
m61_1 -> m61_2  [key=0, style=solid, color=red];
m61_1 -> m61_3  [key=0, style=solid, color=green];
m61_3 -> m61_4  [key=0, style=solid, color=green];
m61_3 -> m61_7  [key=2, style=dotted, color=red];
m61_4 -> m61_5  [key=0, style=solid];
m61_4 -> m61_7  [key=2, style=dotted];
m61_4 -> m61_0  [key=0, style=bold, color=blue];
m61_2 -> m61_5  [key=0, style=solid, color=red];
m61_2 -> m61_6  [key=2, style=dotted, color=red];
m61_2 -> m61_4  [key=0, style=solid];
m61_26 -> m61_27  [key=0, style=solid];
m61_26 -> m61_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m61_26 -> m61_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m61_26 -> m61_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m61_26 -> m61_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m61_27 -> m61_28  [key=0, style=solid];
m61_27 -> m61_29  [key=0, style=solid];
m61_30 -> m61_31  [key=0, style=solid];
m61_30 -> m61_32  [key=0, style=solid];
m61_30 -> m61_35  [key=2, style=dotted];
m61_31 -> m61_32  [key=0, style=solid];
m61_32 -> m61_33  [key=0, style=solid];
m61_32 -> m61_34  [key=0, style=solid];
m61_32 -> m61_35  [key=2, style=dotted];
m61_33 -> m61_34  [key=0, style=solid];
m61_28 -> m61_34  [key=0, style=solid];
m61_28 -> m61_6  [key=2, style=dotted];
m61_29 -> m61_30  [key=0, style=solid];
m61_29 -> m61_31  [key=1, style=dashed, color=darkseagreen4, label=thread];
m61_29 -> m61_33  [key=1, style=dashed, color=darkseagreen4, label=thread];
m61_34 -> m61_26  [key=0, style=bold, color=blue];
m63_0 -> m63_1  [key=0, style=solid, color=green];
m63_1 -> m63_0  [key=0, style=bold, color=blue];
m63_1 -> m63_2  [key=0, style=solid, color=green];
m63_1 -> m63_3  [key=2, style=dotted, color=green];
m63_38 -> m63_64  [key=0, style=solid];
m63_38 -> m63_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m63_38 -> m63_68  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m63_38 -> m63_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m63_64 -> m63_65  [key=0, style=solid];
m63_64 -> m63_55  [key=2, style=dotted];
m63_64 -> m63_66  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_64 -> m63_67  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_64 -> m63_68  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_64 -> m63_69  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_65 -> m63_66  [key=0, style=solid];
m63_65 -> m63_56  [key=2, style=dotted];
m63_68 -> m63_69  [key=0, style=solid];
m63_68 -> m63_57  [key=2, style=dotted];
m63_71 -> m63_72  [key=0, style=solid];
m63_71 -> m63_60  [key=2, style=dotted];
m63_71 -> m63_62  [key=2, style=dotted];
m63_70 -> m63_72  [key=0, style=solid];
m63_70 -> m63_71  [key=0, style=solid];
m63_66 -> m63_56  [key=2, style=dotted];
m63_66 -> m63_67  [key=0, style=solid];
m63_67 -> m63_68  [key=0, style=solid];
m63_67 -> m63_56  [key=2, style=dotted];
m63_69 -> m63_71  [key=1, style=dashed, color=darkseagreen4, label=releaseResult];
m63_69 -> m63_70  [key=0, style=solid];
m63_69 -> m63_58  [key=2, style=dotted];
m63_72 -> m63_38  [key=0, style=bold, color=blue];
m63_4 -> m63_5  [key=0, style=solid, color=green];
m63_4 -> m63_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m63_4 -> m63_9  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m63_4 -> m63_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m63_4 -> m63_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m63_4 -> m63_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m63_5 -> m63_6  [key=0, style=solid, color=green];
m63_5 -> m63_7  [key=0, style=solid, color=green];
m63_6 -> m63_18  [key=0, style=solid, color=green];
m63_6 -> m63_19  [key=2, style=dotted, color=green];
m63_7 -> m63_8  [key=0, style=solid];
m63_7 -> m63_9  [key=0, style=solid];
m63_7 -> m63_20  [key=2, style=dotted];
m63_14 -> m63_15  [key=0, style=solid, color=green];
m63_14 -> m63_17  [key=0, style=solid, color=green];
m63_14 -> m63_24  [key=2, style=dotted, color=green];
m63_13 -> m63_14  [key=0, style=solid, color=green];
m63_13 -> m63_23  [key=2, style=dotted];
m63_15 -> m63_16  [key=0, style=solid];
m63_15 -> m63_25  [key=2, style=dotted];
m63_17 -> m63_18  [key=0, style=solid];
m63_9 -> m63_15  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m63_9 -> m63_9  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m63_9 -> m63_10  [key=0, style=solid];
m63_9 -> m63_11  [key=0, style=solid];
m63_11 -> m63_12  [key=0, style=solid];
m63_12 -> m63_13  [key=0, style=solid];
m63_8 -> m63_18  [key=0, style=solid];
m63_8 -> m63_19  [key=2, style=dotted];
m63_10 -> m63_18  [key=0, style=solid];
m63_10 -> m63_21  [key=2, style=dotted];
m63_10 -> m63_22  [key=2, style=dotted];
m63_16 -> m63_18  [key=0, style=solid];
m63_18 -> m63_4  [key=0, style=bold, color=blue];
m63_3 -> m63_2  [key=0, style=bold, color=blue];
m63_25 -> m63_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan timeout"];
m63_25 -> m63_45  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m63_25 -> m63_48  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m63_25 -> m63_40  [key=0, style=solid];
m63_25 -> m63_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m63_25 -> m63_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m63_25 -> m63_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m63_47 -> m63_47  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m63_47 -> m63_48  [key=0, style=solid, color=green];
m63_45 -> m63_47  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m63_45 -> m63_45  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m63_45 -> m63_46  [key=0, style=solid];
m63_45 -> m63_56  [key=2, style=dotted];
m63_46 -> m63_47  [key=0, style=solid, color=green];
m63_46 -> m63_56  [key=2, style=dotted];
m63_48 -> m63_49  [key=0, style=solid];
m63_48 -> m63_57  [key=2, style=dotted];
m63_40 -> m63_45  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_40 -> m63_46  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_40 -> m63_48  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_40 -> m63_41  [key=0, style=solid];
m63_40 -> m63_55  [key=2, style=dotted];
m63_40 -> m63_42  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_40 -> m63_43  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_40 -> m63_44  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_40 -> m63_49  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m63_44 -> m63_45  [key=0, style=solid];
m63_44 -> m63_56  [key=2, style=dotted];
m63_49 -> m63_50  [key=0, style=solid];
m63_49 -> m63_58  [key=2, style=dotted];
m63_49 -> m63_51  [key=1, style=dashed, color=darkseagreen4, label=lockResult];
m63_49 -> m63_53  [key=1, style=dashed, color=darkseagreen4, label=lockResult];
m63_41 -> m63_56  [key=2, style=dotted];
m63_41 -> m63_42  [key=0, style=solid];
m63_52 -> m63_54  [key=0, style=solid];
m63_52 -> m63_59  [key=2, style=dotted];
m63_53 -> m63_54  [key=0, style=solid];
m63_53 -> m63_60  [key=2, style=dotted];
m63_53 -> m63_61  [key=2, style=dotted];
m63_53 -> m63_62  [key=2, style=dotted];
m63_53 -> m63_63  [key=2, style=dotted];
m63_42 -> m63_56  [key=2, style=dotted];
m63_42 -> m63_43  [key=0, style=solid];
m63_43 -> m63_44  [key=0, style=solid];
m63_43 -> m63_56  [key=2, style=dotted];
m63_50 -> m63_54  [key=0, style=solid];
m63_50 -> m63_51  [key=0, style=solid];
m63_51 -> m63_52  [key=0, style=solid];
m63_51 -> m63_53  [key=0, style=solid];
m63_54 -> m63_25  [key=0, style=bold, color=blue];
m63_2 -> m63_0  [key=0, style=bold, color=blue];
m63_2 -> m63_3  [key=0, style=solid];
m63_26 -> m63_27  [key=0, style=solid];
m63_29 -> m63_30  [key=0, style=solid, color=green];
m63_27 -> m63_29  [key=0, style=solid, color=green];
m63_27 -> m63_28  [key=0, style=solid];
m63_30 -> m63_24  [key=2, style=dotted];
m63_30 -> m63_31  [key=0, style=solid];
m63_30 -> m63_32  [key=0, style=solid];
m63_35 -> m63_36  [key=0, style=solid, color=green];
m63_35 -> m63_38  [key=2, style=dotted, color=green];
m63_33 -> m63_35  [key=0, style=solid, color=green];
m63_33 -> m63_34  [key=0, style=solid];
m63_36 -> m63_37  [key=0, style=solid, color=green];
m63_36 -> m63_39  [key=2, style=dotted, color=green];
m63_32 -> m63_33  [key=0, style=solid];
m63_28 -> m63_37  [key=0, style=solid];
m63_31 -> m63_37  [key=0, style=solid];
m63_34 -> m63_37  [key=0, style=solid];
m63_37 -> m63_26  [key=0, style=bold, color=blue];
m63_73 -> m63_14  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_29  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_35  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_36  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m63_73 -> m63_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m64_0 -> m64_1  [key=0, style=solid];
m64_1 -> m64_0  [key=0, style=bold, color=blue];
m65_9 -> m65_11  [key=0, style=solid];
m65_9 -> m65_10  [key=0, style=solid];
m65_22 -> m65_23  [key=0, style=solid];
m65_23 -> m65_24  [key=0, style=solid];
m65_23 -> m65_25  [key=2, style=dotted];
m65_24 -> m65_22  [key=0, style=bold, color=blue];
m65_5 -> m65_6  [key=0, style=solid];
m65_5 -> m65_7  [key=0, style=solid];
m65_6 -> m65_7  [key=0, style=solid];
m65_6 -> m65_16  [key=0, style=solid];
m65_6 -> m65_17  [key=2, style=dotted];
m65_7 -> m65_8  [key=0, style=solid];
m65_7 -> m65_9  [key=2, style=dotted];
m65_8 -> m65_6  [key=0, style=bold, color=blue];
m65_8 -> m65_16  [key=0, style=solid];
m65_8 -> m65_17  [key=2, style=dotted];
m65_0 -> m65_1  [key=0, style=solid];
m65_0 -> m65_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m65_0 -> m65_12  [key=1, style=dashed, color=green, label=IDbConnection];
m65_0 -> m65_3  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m65_0 -> m65_5  [key=1, style=dashed, color=darkseagreen4, label=IDbTransaction];
m65_0 -> m65_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m65_0 -> m65_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m65_0 -> m65_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m65_0 -> m65_13  [key=1, style=dashed, color=darkseagreen4, label=IDbTransaction];
m65_0 -> m65_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m65_0 -> m65_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m65_1 -> m65_2  [key=0, style=solid];
m65_1 -> m65_4  [key=2, style=dotted];
m65_1 -> m65_3  [key=0, style=solid];
m65_2 -> m65_3  [key=0, style=solid];
m65_2 -> m65_5  [key=2, style=dotted];
m65_2 -> m65_2  [key=3, color=darkorchid, style=bold, label="Field variable int WorkerCount"];
m65_2 -> m65_16  [key=0, style=solid];
m65_2 -> m65_17  [key=2, style=dotted];
m65_3 -> m65_0  [key=0, style=bold, color=blue];
m65_3 -> m65_4  [key=0, style=solid];
m65_3 -> m65_5  [key=0, style=solid];
m65_12 -> m65_13  [key=0, style=solid, color=green];
m65_11 -> m65_12  [key=0, style=solid, color=green];
m65_13 -> m65_14  [key=0, style=solid];
m65_14 -> m65_15  [key=0, style=solid];
m65_15 -> m65_16  [key=0, style=solid];
m65_4 -> m65_16  [key=0, style=solid];
m65_4 -> m65_17  [key=2, style=dotted];
m65_10 -> m65_16  [key=0, style=solid];
m65_10 -> m65_17  [key=2, style=dotted];
m65_16 -> m65_0  [key=0, style=bold, color=blue];
m65_18 -> m65_19  [key=0, style=solid, color=green];
m65_19 -> m65_20  [key=0, style=solid, color=green];
m65_19 -> m65_21  [key=2, style=dotted, color=green];
m65_20 -> m65_18  [key=0, style=bold, color=blue];
m65_26 -> m65_27  [key=0, style=solid, color=green];
m65_27 -> m65_28  [key=0, style=solid, color=green];
m65_27 -> m65_30  [key=2, style=dotted, color=green];
m65_28 -> m65_29  [key=0, style=solid, color=green];
m65_28 -> m65_31  [key=2, style=dotted, color=green];
m65_29 -> m65_26  [key=0, style=bold, color=blue];
m65_32 -> m65_12  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m65_32 -> m65_19  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m65_32 -> m65_27  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m65_32 -> m65_28  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m65_32 -> m65_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m65_32 -> m65_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m65_32 -> m65_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m65_32 -> m65_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m65_32 -> m65_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m66_57 -> m66_88  [key=0, style=solid, color=green];
m66_57 -> m66_53  [key=3, color=red, style=bold, label="Parameter variable string queue"];
m66_88 -> m66_89  [key=0, style=solid, color=green];
m66_88 -> m66_18  [key=2, style=dotted, color=green];
m66_89 -> m66_57  [key=0, style=bold, color=blue];
m66_19 -> m66_20  [key=0, style=solid, color=red];
m66_20 -> m66_21  [key=0, style=solid, color=red];
m66_20 -> m66_13  [key=2, style=dotted, color=red];
m66_20 -> m66_23  [key=1, style=dashed, color=red, label="lambda expression"];
m66_21 -> m66_22  [key=0, style=solid];
m66_21 -> m66_14  [key=2, style=dotted];
m66_22 -> m66_19  [key=0, style=bold, color=blue];
m66_0 -> m66_1  [key=0, style=solid];
m66_1 -> m66_2  [key=0, style=solid, color=red];
m66_1 -> m66_5  [key=2, style=dotted];
m66_2 -> m66_3  [key=0, style=solid, color=red];
m66_2 -> m66_6  [key=2, style=dotted, color=red];
m66_3 -> m66_4  [key=0, style=solid, color=red];
m66_3 -> m66_7  [key=2, style=dotted, color=red];
m66_3 -> m66_8  [key=2, style=dotted, color=red];
m66_4 -> m66_0  [key=0, style=bold, color=blue];
m66_9 -> m66_10  [key=0, style=solid, color=red];
m66_10 -> m66_11  [key=0, style=solid, color=red];
m66_10 -> m66_13  [key=2, style=dotted, color=red];
m66_10 -> m66_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m66_11 -> m66_12  [key=0, style=solid, color=red];
m66_11 -> m66_14  [key=2, style=dotted, color=red];
m66_12 -> m66_9  [key=0, style=bold, color=blue];
m66_47 -> m66_48  [key=0, style=solid, color=red];
m66_48 -> m66_49  [key=0, style=solid, color=red];
m66_48 -> m66_18  [key=2, style=dotted, color=red];
m66_48 -> m66_50  [key=1, style=dashed, color=green, label=fetchedJob];
m66_49 -> m66_50  [key=0, style=solid, color=green];
m66_49 -> m66_14  [key=2, style=dotted];
m66_50 -> m66_51  [key=0, style=solid, color=green];
m66_50 -> m66_14  [key=2, style=dotted, color=green];
m66_51 -> m66_47  [key=0, style=bold, color=blue];
m66_26 -> m66_27  [key=0, style=solid, color=red];
m66_27 -> m66_28  [key=0, style=solid, color=red];
m66_27 -> m66_13  [key=2, style=dotted, color=red];
m66_27 -> m66_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m66_28 -> m66_29  [key=0, style=solid, color=red];
m66_28 -> m66_14  [key=2, style=dotted, color=red];
m66_28 -> m66_47  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.Client.CreateContext context"];
m66_29 -> m66_26  [key=0, style=bold, color=blue];
m66_74 -> m66_75  [key=0, style=solid, color=green];
m66_75 -> m66_76  [key=0, style=solid, color=green];
m66_75 -> m66_57  [key=2, style=dotted, color=green];
m66_76 -> m66_77  [key=0, style=solid, color=green];
m66_76 -> m66_80  [key=2, style=dotted, color=green];
m66_77 -> m66_78  [key=0, style=solid, color=green];
m66_77 -> m66_59  [key=2, style=dotted, color=red];
m66_77 -> m66_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m66_78 -> m66_79  [key=0, style=solid, color=green];
m66_78 -> m66_59  [key=2, style=dotted, color=green];
m66_78 -> m66_85  [key=1, style=dashed, color=green, label="lambda expression"];
m66_79 -> m66_74  [key=0, style=bold, color=blue];
m66_33 -> m66_34  [key=0, style=solid, color=red];
m66_34 -> m66_35  [key=0, style=solid, color=green];
m66_34 -> m66_13  [key=2, style=dotted, color=red];
m66_34 -> m66_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m66_35 -> m66_36  [key=0, style=solid, color=green];
m66_35 -> m66_14  [key=2, style=dotted, color=green];
m66_36 -> m66_33  [key=0, style=bold, color=blue];
m66_85 -> m66_86  [key=0, style=solid, color=green];
m66_15 -> m66_16  [key=0, style=solid, color=red];
m66_16 -> m66_17  [key=0, style=solid, color=red];
m66_16 -> m66_18  [key=2, style=dotted, color=red];
m66_17 -> m66_15  [key=0, style=bold, color=blue];
m66_23 -> m66_24  [key=0, style=solid, color=red];
m66_24 -> m66_25  [key=0, style=solid, color=red];
m66_24 -> m66_18  [key=2, style=dotted, color=red];
m66_25 -> m66_23  [key=0, style=bold, color=blue];
m66_30 -> m66_31  [key=0, style=solid, color=red];
m66_31 -> m66_32  [key=0, style=solid, color=red];
m66_31 -> m66_18  [key=2, style=dotted, color=red];
m66_32 -> m66_30  [key=0, style=bold, color=blue];
m66_37 -> m66_38  [key=0, style=solid, color=red];
m66_38 -> m66_39  [key=0, style=solid, color=red];
m66_38 -> m66_18  [key=2, style=dotted, color=red];
m66_39 -> m66_37  [key=0, style=bold, color=blue];
m66_44 -> m66_45  [key=0, style=solid, color=green];
m66_45 -> m66_46  [key=0, style=solid, color=green];
m66_45 -> m66_18  [key=2, style=dotted, color=green];
m66_46 -> m66_44  [key=0, style=bold, color=blue];
m66_60 -> m66_61  [key=0, style=solid, color=green];
m66_61 -> m66_62  [key=0, style=solid, color=green];
m66_61 -> m66_63  [key=2, style=dotted, color=green];
m66_62 -> m66_60  [key=0, style=bold, color=blue];
m66_70 -> m66_71  [key=0, style=solid, color=green];
m66_71 -> m66_72  [key=0, style=solid, color=green];
m66_71 -> m66_73  [key=2, style=dotted, color=green];
m66_72 -> m66_70  [key=0, style=bold, color=blue];
m66_81 -> m66_82  [key=0, style=solid, color=red];
m66_82 -> m66_83  [key=0, style=solid, color=red];
m66_82 -> m66_84  [key=2, style=dotted, color=red];
m66_83 -> m66_81  [key=0, style=bold, color=blue];
m66_86 -> m66_87  [key=0, style=solid, color=green];
m66_86 -> m66_84  [key=2, style=dotted, color=green];
m66_87 -> m66_85  [key=0, style=bold, color=blue];
m66_64 -> m66_65  [key=0, style=solid, color=green];
m66_65 -> m66_66  [key=0, style=solid, color=green];
m66_65 -> m66_57  [key=2, style=dotted, color=green];
m66_66 -> m66_67  [key=0, style=solid, color=green];
m66_66 -> m66_69  [key=2, style=dotted, color=green];
m66_67 -> m66_68  [key=0, style=solid, color=green];
m66_67 -> m66_59  [key=2, style=dotted, color=green];
m66_67 -> m66_70  [key=1, style=dashed, color=green, label="lambda expression"];
m66_68 -> m66_64  [key=0, style=bold, color=blue];
m66_52 -> m66_53  [key=0, style=solid, color=green];
m66_53 -> m66_54  [key=0, style=solid, color=green];
m66_53 -> m66_57  [key=2, style=dotted, color=green];
m66_54 -> m66_55  [key=0, style=solid, color=green];
m66_54 -> m66_58  [key=2, style=dotted, color=green];
m66_55 -> m66_56  [key=0, style=solid, color=green];
m66_55 -> m66_59  [key=2, style=dotted, color=green];
m66_55 -> m66_60  [key=1, style=dashed, color=green, label="lambda expression"];
m66_56 -> m66_52  [key=0, style=bold, color=blue];
m66_40 -> m66_41  [key=0, style=solid, color=green];
m66_41 -> m66_42  [key=0, style=solid, color=green];
m66_41 -> m66_13  [key=2, style=dotted, color=green];
m66_41 -> m66_44  [key=1, style=dashed, color=green, label="lambda expression"];
m66_42 -> m66_43  [key=0, style=solid, color=green];
m66_42 -> m66_14  [key=2, style=dotted, color=green];
m66_43 -> m66_40  [key=0, style=bold, color=blue];
m66_90 -> m66_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_2  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_16  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_20  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_24  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_31  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_38  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_41  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_45  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_53  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_55  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_65  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_67  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_75  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_78  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m66_90 -> m66_88  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m68_375 -> m68_376  [key=0, style=solid, color=green];
m68_376 -> m68_377  [key=0, style=solid, color=green];
m68_376 -> m68_12  [key=2, style=dotted, color=green];
m68_376 -> m68_378  [key=1, style=dashed, color=green, label="lambda expression"];
m68_376 -> m68_53  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m68_376 -> m68_261  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m68_376 -> m68_262  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m68_377 -> m68_375  [key=0, style=bold, color=blue];
m68_432 -> m68_433  [key=0, style=solid, color=green];
m68_433 -> m68_207  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<int> jobIds"];
m68_433 -> m68_434  [key=0, style=solid, color=green];
m68_433 -> m68_12  [key=2, style=dotted, color=green];
m68_433 -> m68_435  [key=1, style=dashed, color=green, label="lambda expression"];
m68_434 -> m68_432  [key=0, style=bold, color=blue];
m68_299 -> m68_300  [key=0, style=solid, color=green];
m68_300 -> m68_99  [key=3, color=green, style=bold, label="Parameter variable string type"];
m68_300 -> m68_207  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m68_300 -> m68_301  [key=0, style=solid, color=green];
m68_300 -> m68_12  [key=2, style=dotted, color=green];
m68_300 -> m68_302  [key=1, style=dashed, color=green, label="lambda expression"];
m68_300 -> m68_98  [key=3, color=green, style=bold, label="Parameter variable string type"];
m68_301 -> m68_299  [key=0, style=bold, color=blue];
m68_235 -> m68_236  [key=0, style=solid, color=green];
m68_236 -> m68_237  [key=0, style=solid, color=green];
m68_236 -> m68_12  [key=2, style=dotted, color=green];
m68_236 -> m68_238  [key=1, style=dashed, color=green, label="lambda expression"];
m68_237 -> m68_235  [key=0, style=bold, color=blue];
m68_131 -> m68_132  [key=0, style=solid];
m68_132 -> m68_12  [key=2, style=dotted];
m68_132 -> m68_350  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.FailedJobDto> FailedJobs"];
m68_132 -> m68_133  [key=0, style=solid];
m68_132 -> m68_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_133 -> m68_131  [key=0, style=bold, color=blue];
m68_444 -> m68_445  [key=0, style=solid];
m68_445 -> m68_12  [key=2, style=dotted];
m68_445 -> m68_446  [key=0, style=solid];
m68_445 -> m68_447  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_446 -> m68_444  [key=0, style=bold, color=blue];
m68_145 -> m68_146  [key=0, style=solid];
m68_146 -> m68_22  [key=2, style=dotted];
m68_146 -> m68_23  [key=2, style=dotted];
m68_146 -> m68_147  [key=0, style=solid];
m68_147 -> m68_145  [key=0, style=bold, color=blue];
m68_399 -> m68_400  [key=0, style=solid, color=green];
m68_400 -> m68_401  [key=0, style=solid, color=green];
m68_400 -> m68_12  [key=2, style=dotted, color=green];
m68_400 -> m68_402  [key=1, style=dashed, color=green, label="lambda expression"];
m68_400 -> m68_55  [key=3, color=green, style=bold, label="Parameter variable System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto> selector"];
m68_400 -> m68_132  [key=3, color=green, style=bold, label="Parameter variable int count"];
m68_400 -> m68_149  [key=3, color=green, style=bold, label="Parameter variable System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto> selector"];
m68_400 -> m68_163  [key=3, color=green, style=bold, label="Parameter variable System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto> selector"];
m68_400 -> m68_145  [key=3, color=green, style=bold, label="Parameter variable System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto> selector"];
m68_401 -> m68_399  [key=0, style=bold, color=blue];
m68_148 -> m68_149  [key=0, style=solid];
m68_149 -> m68_12  [key=2, style=dotted];
m68_149 -> m68_350  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.SucceededJobDto> SucceededJobs"];
m68_149 -> m68_150  [key=0, style=solid];
m68_149 -> m68_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_150 -> m68_148  [key=0, style=bold, color=blue];
m68_97 -> m68_350  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m68_97 -> m68_98  [key=0, style=solid];
m68_99 -> m68_99  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.ServerDto> "];
m68_99 -> m68_100  [key=0, style=solid, color=green];
m68_99 -> m68_12  [key=2, style=dotted, color=green];
m68_99 -> m68_101  [key=1, style=dashed, color=green, label="lambda expression"];
m68_98 -> m68_99  [key=0, style=solid, color=green];
m68_98 -> m68_102  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_100 -> m68_97  [key=0, style=bold, color=blue];
m68_206 -> m68_207  [key=0, style=solid, color=green];
m68_207 -> m68_208  [key=0, style=solid, color=green];
m68_207 -> m68_12  [key=2, style=dotted, color=green];
m68_207 -> m68_209  [key=1, style=dashed, color=green, label="lambda expression"];
m68_207 -> m68_350  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m68_208 -> m68_206  [key=0, style=bold, color=blue];
m68_223 -> m68_224  [key=0, style=solid, color=green];
m68_224 -> m68_225  [key=0, style=solid, color=green];
m68_224 -> m68_12  [key=2, style=dotted, color=green];
m68_224 -> m68_226  [key=1, style=dashed, color=green, label="lambda expression"];
m68_224 -> m68_350  [key=3, color=green, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobDetailsDto JobDetails"];
m68_225 -> m68_223  [key=0, style=bold, color=blue];
m68_387 -> m68_388  [key=0, style=solid];
m68_388 -> m68_12  [key=2, style=dotted];
m68_388 -> m68_389  [key=0, style=solid];
m68_388 -> m68_390  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_389 -> m68_387  [key=0, style=bold, color=blue];
m68_0 -> m68_1  [key=0, style=solid];
m68_1 -> m68_3  [key=2, style=dotted];
m68_1 -> m68_2  [key=0, style=solid];
m68_1 -> m68_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_2 -> m68_0  [key=0, style=bold, color=blue];
m68_162 -> m68_163  [key=0, style=solid];
m68_163 -> m68_12  [key=2, style=dotted];
m68_163 -> m68_350  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.DeletedJobDto> DeletedJobs"];
m68_163 -> m68_164  [key=0, style=solid];
m68_163 -> m68_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_164 -> m68_162  [key=0, style=bold, color=blue];
m68_25 -> m68_474  [key=0, style=solid, color=green];
m68_25 -> m68_475  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>"];
m68_474 -> m68_475  [key=0, style=solid, color=green];
m68_474 -> m68_7  [key=2, style=dotted, color=green];
m68_474 -> m68_476  [key=1, style=dashed, color=green, label=transaction];
m68_475 -> m68_476  [key=0, style=solid];
m68_475 -> m68_473  [key=2, style=dotted];
m68_476 -> m68_477  [key=0, style=solid];
m68_476 -> m68_478  [key=2, style=dotted];
m68_477 -> m68_25  [key=0, style=bold, color=blue];
m68_324 -> m68_325  [key=0, style=solid];
m68_325 -> m68_337  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m68_325 -> m68_12  [key=2, style=dotted];
m68_325 -> m68_326  [key=0, style=solid];
m68_325 -> m68_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_326 -> m68_324  [key=0, style=bold, color=blue];
m68_180 -> m68_181  [key=0, style=solid, color=green];
m68_181 -> m68_182  [key=0, style=solid, color=green];
m68_181 -> m68_12  [key=2, style=dotted, color=green];
m68_181 -> m68_183  [key=1, style=dashed, color=green, label="lambda expression"];
m68_182 -> m68_180  [key=0, style=bold, color=blue];
m68_361 -> m68_362  [key=0, style=solid, color=green];
m68_362 -> m68_207  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m68_362 -> m68_363  [key=0, style=solid, color=green];
m68_362 -> m68_12  [key=2, style=dotted, color=green];
m68_362 -> m68_364  [key=1, style=dashed, color=green, label="lambda expression"];
m68_362 -> m68_206  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<int> jobIds"];
m68_363 -> m68_361  [key=0, style=bold, color=blue];
m68_35 -> m68_36  [key=0, style=solid];
m68_37 -> m68_38  [key=0, style=solid, color=green];
m68_37 -> m68_12  [key=2, style=dotted, color=green];
m68_37 -> m68_39  [key=1, style=dashed, color=green, label="lambda expression"];
m68_37 -> m68_350  [key=3, color=green, style=bold, label="Local variable Hangfire.SqlServer.IPersistentJobQueueMonitoringApi queueApi"];
m68_36 -> m68_37  [key=0, style=solid, color=green];
m68_36 -> m68_40  [key=1, style=dashed, color=green, label=arrangeSql];
m68_36 -> m68_41  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_38 -> m68_35  [key=0, style=bold, color=blue];
m68_273 -> m68_274  [key=0, style=solid, color=green];
m68_274 -> m68_275  [key=0, style=solid, color=green];
m68_274 -> m68_12  [key=2, style=dotted, color=green];
m68_274 -> m68_276  [key=1, style=dashed, color=green, label="lambda expression"];
m68_275 -> m68_273  [key=0, style=bold, color=blue];
m68_121 -> m68_122  [key=0, style=solid];
m68_13 -> m68_15  [key=1, style=dashed, color=green, label=SqlConnection];
m68_13 -> m68_17  [key=1, style=dashed, color=green, label=SqlConnection];
m68_13 -> m68_19  [key=1, style=dashed, color=green, label=SqlConnection];
m68_13 -> m68_14  [key=0, style=solid];
m68_13 -> m68_16  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_15 -> m68_16  [key=0, style=solid, color=green];
m68_15 -> m68_22  [key=2, style=dotted, color=green];
m68_15 -> m68_23  [key=2, style=dotted, color=green];
m68_15 -> m68_24  [key=2, style=dotted, color=green];
m68_15 -> m68_19  [key=1, style=dashed, color=green, label=anotherJobId];
m68_14 -> m68_15  [key=0, style=solid, color=green];
m68_14 -> m68_17  [key=1, style=dashed, color=green, label=jobId];
m68_14 -> m68_22  [key=2, style=dotted];
m68_14 -> m68_23  [key=2, style=dotted];
m68_14 -> m68_24  [key=2, style=dotted];
m68_14 -> m68_16  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_14 -> m68_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_16 -> m68_17  [key=0, style=solid, color=green];
m68_16 -> m68_25  [key=2, style=dotted];
m68_16 -> m68_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_19 -> m68_20  [key=0, style=solid, color=green];
m68_19 -> m68_26  [key=2, style=dotted, color=green];
m68_17 -> m68_18  [key=0, style=solid, color=green];
m68_17 -> m68_26  [key=2, style=dotted, color=green];
m68_18 -> m68_19  [key=0, style=solid, color=green];
m68_18 -> m68_27  [key=2, style=dotted, color=green];
m68_18 -> m68_28  [key=2, style=dotted, color=green];
m68_20 -> m68_21  [key=0, style=solid, color=green];
m68_20 -> m68_29  [key=2, style=dotted, color=green];
m68_21 -> m68_13  [key=0, style=bold, color=blue];
m68_39 -> m68_40  [key=0, style=solid, color=green];
m68_39 -> m68_42  [key=1, style=dashed, color=green, label=SqlConnection];
m68_39 -> m68_45  [key=1, style=dashed, color=green, label=SqlConnection];
m68_39 -> m68_41  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_39 -> m68_43  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_40 -> m68_41  [key=0, style=solid, color=green];
m68_40 -> m68_22  [key=2, style=dotted, color=green];
m68_40 -> m68_23  [key=2, style=dotted, color=green];
m68_40 -> m68_24  [key=2, style=dotted, color=green];
m68_40 -> m68_42  [key=1, style=dashed, color=green, label=jobId];
m68_40 -> m68_50  [key=1, style=dashed, color=green, label=jobId];
m68_40 -> m68_43  [key=1, style=dashed, color=green, label=jobId];
m68_41 -> m68_42  [key=0, style=solid, color=green];
m68_41 -> m68_45  [key=1, style=dashed, color=green, label=anotherJobId];
m68_41 -> m68_22  [key=2, style=dotted];
m68_41 -> m68_23  [key=2, style=dotted];
m68_41 -> m68_24  [key=2, style=dotted];
m68_42 -> m68_43  [key=0, style=solid, color=green];
m68_42 -> m68_25  [key=2, style=dotted, color=green];
m68_42 -> m68_49  [key=1, style=dashed, color=green, label="lambda expression"];
m68_50 -> m68_51  [key=0, style=solid, color=green];
m68_50 -> m68_52  [key=2, style=dotted, color=green];
m68_43 -> m68_26  [key=2, style=dotted];
m68_43 -> m68_44  [key=0, style=solid];
m68_49 -> m68_50  [key=0, style=solid, color=green];
m68_45 -> m68_46  [key=0, style=solid, color=green];
m68_45 -> m68_26  [key=2, style=dotted, color=green];
m68_44 -> m68_45  [key=0, style=solid, color=green];
m68_44 -> m68_29  [key=2, style=dotted];
m68_46 -> m68_47  [key=0, style=solid, color=green];
m68_46 -> m68_48  [key=2, style=dotted, color=green];
m68_51 -> m68_49  [key=0, style=bold, color=blue];
m68_47 -> m68_39  [key=0, style=bold, color=blue];
m68_101 -> m68_102  [key=0, style=solid];
m68_101 -> m68_107  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_101 -> m68_108  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_101 -> m68_111  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_183 -> m68_184  [key=0, style=solid, color=green];
m68_183 -> m68_185  [key=1, style=dashed, color=green, label=SqlConnection];
m68_184 -> m68_185  [key=0, style=solid, color=green];
m68_184 -> m68_25  [key=2, style=dotted, color=green];
m68_184 -> m68_188  [key=1, style=dashed, color=green, label="lambda expression"];
m68_185 -> m68_186  [key=0, style=solid, color=green];
m68_185 -> m68_3  [key=2, style=dotted, color=green];
m68_185 -> m68_23  [key=2, style=dotted, color=green];
m68_188 -> m68_190  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_188 -> m68_189  [key=0, style=solid];
m68_186 -> m68_187  [key=0, style=solid, color=green];
m68_186 -> m68_82  [key=2, style=dotted, color=green];
m68_187 -> m68_183  [key=0, style=bold, color=blue];
m68_190 -> m68_191  [key=0, style=solid, color=green];
m68_190 -> m68_161  [key=2, style=dotted, color=green];
m68_189 -> m68_190  [key=0, style=solid, color=green];
m68_189 -> m68_161  [key=2, style=dotted];
m68_191 -> m68_188  [key=0, style=bold, color=blue];
m68_195 -> m68_197  [key=1, style=dashed, color=green, label=SqlConnection];
m68_195 -> m68_196  [key=0, style=solid];
m68_197 -> m68_198  [key=0, style=solid, color=green];
m68_197 -> m68_22  [key=2, style=dotted, color=green];
m68_197 -> m68_23  [key=2, style=dotted, color=green];
m68_197 -> m68_199  [key=1, style=dashed, color=green, label=record];
m68_197 -> m68_200  [key=1, style=dashed, color=green, label=record];
m68_196 -> m68_197  [key=0, style=solid, color=green];
m68_196 -> m68_25  [key=2, style=dotted];
m68_196 -> m68_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_198 -> m68_199  [key=0, style=solid, color=green];
m68_198 -> m68_82  [key=2, style=dotted, color=green];
m68_199 -> m68_200  [key=0, style=solid, color=green];
m68_199 -> m68_82  [key=2, style=dotted, color=green];
m68_200 -> m68_201  [key=0, style=solid, color=green];
m68_200 -> m68_82  [key=2, style=dotted, color=green];
m68_201 -> m68_195  [key=0, style=bold, color=blue];
m68_209 -> m68_211  [key=1, style=dashed, color=green, label=SqlConnection];
m68_209 -> m68_210  [key=0, style=solid];
m68_211 -> m68_212  [key=0, style=solid, color=green];
m68_211 -> m68_22  [key=2, style=dotted, color=green];
m68_211 -> m68_23  [key=2, style=dotted, color=green];
m68_211 -> m68_213  [key=1, style=dashed, color=green, label=record];
m68_211 -> m68_214  [key=1, style=dashed, color=green, label=record];
m68_211 -> m68_215  [key=1, style=dashed, color=green, label=record];
m68_210 -> m68_211  [key=0, style=solid, color=green];
m68_210 -> m68_25  [key=2, style=dotted];
m68_210 -> m68_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_212 -> m68_213  [key=0, style=solid, color=green];
m68_212 -> m68_82  [key=2, style=dotted, color=green];
m68_213 -> m68_214  [key=0, style=solid, color=green];
m68_213 -> m68_82  [key=2, style=dotted];
m68_214 -> m68_215  [key=0, style=solid, color=green];
m68_214 -> m68_48  [key=2, style=dotted, color=green];
m68_215 -> m68_216  [key=0, style=solid];
m68_215 -> m68_217  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
m68_226 -> m68_227  [key=0, style=solid];
m68_226 -> m68_228  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_238 -> m68_240  [key=1, style=dashed, color=green, label=SqlConnection];
m68_238 -> m68_239  [key=0, style=solid];
m68_240 -> m68_241  [key=0, style=solid, color=green];
m68_240 -> m68_22  [key=2, style=dotted, color=green];
m68_240 -> m68_23  [key=2, style=dotted, color=green];
m68_240 -> m68_242  [key=1, style=dashed, color=green, label=record];
m68_240 -> m68_243  [key=1, style=dashed, color=green, label=record];
m68_239 -> m68_240  [key=0, style=solid, color=green];
m68_239 -> m68_25  [key=2, style=dotted];
m68_239 -> m68_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_241 -> m68_242  [key=0, style=solid, color=green];
m68_241 -> m68_82  [key=2, style=dotted, color=green];
m68_242 -> m68_82  [key=2, style=dotted];
m68_242 -> m68_243  [key=0, style=solid];
m68_243 -> m68_82  [key=2, style=dotted];
m68_243 -> m68_244  [key=0, style=solid];
m68_276 -> m68_277  [key=0, style=solid];
m68_276 -> m68_278  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_279 -> m68_280  [key=0, style=solid, color=green];
m68_279 -> m68_82  [key=2, style=dotted, color=green];
m68_278 -> m68_279  [key=0, style=solid, color=green];
m68_278 -> m68_280  [key=1, style=dashed, color=green, label=record];
m68_278 -> m68_281  [key=1, style=dashed, color=green, label=record];
m68_278 -> m68_22  [key=2, style=dotted];
m68_278 -> m68_23  [key=2, style=dotted];
m68_280 -> m68_281  [key=0, style=solid, color=green];
m68_280 -> m68_82  [key=2, style=dotted, color=green];
m68_281 -> m68_282  [key=0, style=solid, color=green];
m68_281 -> m68_82  [key=2, style=dotted, color=green];
m68_282 -> m68_276  [key=0, style=bold, color=blue];
m68_290 -> m68_291  [key=0, style=solid, color=green];
m68_290 -> m68_292  [key=1, style=dashed, color=green, label=SqlConnection];
m68_291 -> m68_292  [key=0, style=solid, color=green];
m68_291 -> m68_25  [key=2, style=dotted, color=green];
m68_291 -> m68_295  [key=1, style=dashed, color=green, label="lambda expression"];
m68_292 -> m68_293  [key=0, style=solid, color=green];
m68_292 -> m68_22  [key=2, style=dotted, color=green];
m68_292 -> m68_23  [key=2, style=dotted, color=green];
m68_295 -> m68_297  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_295 -> m68_296  [key=0, style=solid];
m68_293 -> m68_82  [key=2, style=dotted];
m68_293 -> m68_294  [key=0, style=solid];
m68_297 -> m68_298  [key=0, style=solid, color=green];
m68_297 -> m68_286  [key=2, style=dotted, color=green];
m68_296 -> m68_297  [key=0, style=solid, color=green];
m68_296 -> m68_248  [key=2, style=dotted];
m68_298 -> m68_295  [key=0, style=bold, color=blue];
m68_302 -> m68_303  [key=0, style=solid, color=green];
m68_302 -> m68_304  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_303 -> m68_304  [key=0, style=solid, color=green];
m68_303 -> m68_25  [key=2, style=dotted, color=green];
m68_303 -> m68_307  [key=1, style=dashed, color=green, label="lambda expression"];
m68_304 -> m68_23  [key=2, style=dotted];
m68_304 -> m68_3  [key=2, style=dotted];
m68_304 -> m68_305  [key=0, style=solid];
m68_307 -> m68_308  [key=0, style=solid];
m68_307 -> m68_309  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_315 -> m68_316  [key=0, style=solid];
m68_315 -> m68_317  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_339 -> m68_340  [key=0, style=solid];
m68_339 -> m68_341  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_343 -> m68_344  [key=0, style=solid, color=green];
m68_343 -> m68_82  [key=2, style=dotted, color=green];
m68_341 -> m68_343  [key=1, style=dashed, color=green, label=record];
m68_341 -> m68_22  [key=2, style=dotted];
m68_341 -> m68_23  [key=2, style=dotted];
m68_341 -> m68_342  [key=0, style=solid];
m68_342 -> m68_343  [key=0, style=solid, color=green];
m68_342 -> m68_82  [key=2, style=dotted];
m68_344 -> m68_339  [key=0, style=bold, color=blue];
m68_364 -> m68_365  [key=0, style=solid, color=green];
m68_364 -> m68_366  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_365 -> m68_366  [key=0, style=solid, color=green];
m68_365 -> m68_25  [key=2, style=dotted, color=green];
m68_365 -> m68_369  [key=1, style=dashed, color=green, label="lambda expression"];
m68_366 -> m68_23  [key=2, style=dotted];
m68_366 -> m68_3  [key=2, style=dotted];
m68_366 -> m68_367  [key=0, style=solid];
m68_369 -> m68_370  [key=0, style=solid, color=green];
m68_369 -> m68_371  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_369 -> m68_372  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_370 -> m68_371  [key=0, style=solid, color=green];
m68_370 -> m68_348  [key=2, style=dotted, color=green];
m68_371 -> m68_372  [key=0, style=solid, color=green];
m68_371 -> m68_348  [key=2, style=dotted, color=green];
m68_372 -> m68_373  [key=0, style=solid];
m68_372 -> m68_374  [key=2, style=dotted];
m68_378 -> m68_379  [key=0, style=solid, color=green];
m68_378 -> m68_380  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_379 -> m68_380  [key=0, style=solid, color=green];
m68_379 -> m68_25  [key=2, style=dotted, color=green];
m68_379 -> m68_383  [key=1, style=dashed, color=green, label="lambda expression"];
m68_380 -> m68_23  [key=2, style=dotted];
m68_380 -> m68_3  [key=2, style=dotted];
m68_380 -> m68_381  [key=0, style=solid];
m68_383 -> m68_384  [key=0, style=solid, color=green];
m68_383 -> m68_385  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_384 -> m68_385  [key=0, style=solid, color=green];
m68_384 -> m68_348  [key=2, style=dotted, color=green];
m68_385 -> m68_386  [key=0, style=solid];
m68_385 -> m68_374  [key=2, style=dotted];
m68_402 -> m68_403  [key=0, style=solid, color=green];
m68_402 -> m68_404  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_403 -> m68_404  [key=0, style=solid, color=green];
m68_403 -> m68_25  [key=2, style=dotted, color=green];
m68_403 -> m68_410  [key=1, style=dashed, color=green, label="lambda expression"];
m68_404 -> m68_22  [key=2, style=dotted];
m68_404 -> m68_405  [key=0, style=solid];
m68_404 -> m68_409  [key=2, style=dotted];
m68_404 -> m68_406  [key=1, style=dashed, color=darkseagreen4, label=records];
m68_404 -> m68_407  [key=1, style=dashed, color=darkseagreen4, label=records];
m68_410 -> m68_411  [key=0, style=solid, color=green];
m68_410 -> m68_415  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_410 -> m68_412  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_410 -> m68_413  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_410 -> m68_414  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_411 -> m68_412  [key=0, style=solid, color=green];
m68_411 -> m68_348  [key=2, style=dotted, color=green];
m68_412 -> m68_348  [key=2, style=dotted];
m68_412 -> m68_413  [key=0, style=solid];
m68_415 -> m68_416  [key=0, style=solid, color=green];
m68_415 -> m68_417  [key=2, style=dotted, color=green];
m68_414 -> m68_415  [key=0, style=solid, color=green];
m68_414 -> m68_348  [key=2, style=dotted];
m68_416 -> m68_410  [key=0, style=bold, color=blue];
m68_435 -> m68_436  [key=0, style=solid, color=green];
m68_435 -> m68_437  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_436 -> m68_437  [key=0, style=solid, color=green];
m68_436 -> m68_25  [key=2, style=dotted, color=green];
m68_436 -> m68_440  [key=1, style=dashed, color=green, label="lambda expression"];
m68_437 -> m68_23  [key=2, style=dotted];
m68_437 -> m68_3  [key=2, style=dotted];
m68_437 -> m68_438  [key=0, style=solid];
m68_440 -> m68_441  [key=0, style=solid];
m68_440 -> m68_442  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_459 -> m68_460  [key=0, style=solid, color=green];
m68_459 -> m68_461  [key=1, style=dashed, color=green, label=SqlConnection];
m68_460 -> m68_461  [key=0, style=solid, color=green];
m68_460 -> m68_25  [key=2, style=dotted, color=green];
m68_460 -> m68_464  [key=1, style=dashed, color=green, label="lambda expression"];
m68_461 -> m68_462  [key=0, style=solid, color=green];
m68_461 -> m68_3  [key=2, style=dotted, color=green];
m68_461 -> m68_23  [key=2, style=dotted, color=green];
m68_464 -> m68_465  [key=0, style=solid, color=green];
m68_464 -> m68_466  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_462 -> m68_82  [key=2, style=dotted];
m68_462 -> m68_463  [key=0, style=solid];
m68_465 -> m68_466  [key=0, style=solid, color=green];
m68_465 -> m68_348  [key=2, style=dotted, color=green];
m68_466 -> m68_467  [key=0, style=solid, color=green];
m68_466 -> m68_417  [key=2, style=dotted, color=green];
m68_467 -> m68_464  [key=0, style=bold, color=blue];
m68_64 -> m68_25  [key=2, style=dotted];
m68_64 -> m68_65  [key=0, style=solid];
m68_64 -> m68_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_65 -> m68_26  [key=2, style=dotted];
m68_65 -> m68_66  [key=0, style=solid];
m68_65 -> m68_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m68_68 -> m68_26  [key=2, style=dotted];
m68_68 -> m68_69  [key=0, style=solid];
m68_68 -> m68_70  [key=1, style=dashed, color=darkseagreen4, label=anotherJob];
m68_107 -> m68_25  [key=2, style=dotted];
m68_107 -> m68_108  [key=0, style=solid];
m68_107 -> m68_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_108 -> m68_26  [key=2, style=dotted];
m68_108 -> m68_109  [key=0, style=solid];
m68_108 -> m68_110  [key=1, style=dashed, color=darkseagreen4, label=job];
m68_135 -> m68_25  [key=2, style=dotted];
m68_135 -> m68_136  [key=0, style=solid];
m68_135 -> m68_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_152 -> m68_25  [key=2, style=dotted];
m68_152 -> m68_153  [key=0, style=solid];
m68_152 -> m68_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_166 -> m68_25  [key=2, style=dotted];
m68_166 -> m68_167  [key=0, style=solid];
m68_166 -> m68_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_227 -> m68_25  [key=2, style=dotted];
m68_227 -> m68_228  [key=0, style=solid];
m68_227 -> m68_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_253 -> m68_25  [key=2, style=dotted];
m68_253 -> m68_254  [key=0, style=solid];
m68_253 -> m68_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_265 -> m68_25  [key=2, style=dotted];
m68_265 -> m68_266  [key=0, style=solid];
m68_265 -> m68_269  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_277 -> m68_25  [key=2, style=dotted];
m68_277 -> m68_278  [key=0, style=solid];
m68_277 -> m68_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_316 -> m68_25  [key=2, style=dotted];
m68_316 -> m68_317  [key=0, style=solid];
m68_316 -> m68_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_328 -> m68_25  [key=2, style=dotted];
m68_328 -> m68_329  [key=0, style=solid];
m68_328 -> m68_332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_340 -> m68_25  [key=2, style=dotted];
m68_340 -> m68_341  [key=0, style=solid];
m68_340 -> m68_345  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_353 -> m68_25  [key=2, style=dotted];
m68_353 -> m68_354  [key=0, style=solid];
m68_353 -> m68_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_391 -> m68_25  [key=2, style=dotted];
m68_391 -> m68_392  [key=0, style=solid];
m68_391 -> m68_395  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_422 -> m68_25  [key=2, style=dotted];
m68_422 -> m68_423  [key=0, style=solid];
m68_422 -> m68_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_448 -> m68_25  [key=2, style=dotted];
m68_448 -> m68_449  [key=0, style=solid];
m68_448 -> m68_452  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_5 -> m68_7  [key=2, style=dotted];
m68_5 -> m68_6  [key=0, style=solid];
m68_31 -> m68_32  [key=0, style=solid];
m68_31 -> m68_33  [key=2, style=dotted];
m68_31 -> m68_34  [key=2, style=dotted];
m68_30 -> m68_31  [key=0, style=solid];
m68_58 -> m68_22  [key=2, style=dotted];
m68_58 -> m68_23  [key=2, style=dotted];
m68_58 -> m68_24  [key=2, style=dotted];
m68_58 -> m68_64  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_58 -> m68_65  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_58 -> m68_59  [key=0, style=solid];
m68_58 -> m68_94  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_58 -> m68_72  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_59 -> m68_22  [key=2, style=dotted];
m68_59 -> m68_23  [key=2, style=dotted];
m68_59 -> m68_24  [key=2, style=dotted];
m68_59 -> m68_68  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
m68_59 -> m68_60  [key=0, style=solid];
m68_71 -> m68_22  [key=2, style=dotted];
m68_71 -> m68_23  [key=2, style=dotted];
m68_71 -> m68_72  [key=0, style=solid];
m68_71 -> m68_73  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m68_71 -> m68_74  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m68_71 -> m68_75  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m68_71 -> m68_76  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m68_102 -> m68_22  [key=2, style=dotted];
m68_102 -> m68_23  [key=2, style=dotted];
m68_102 -> m68_24  [key=2, style=dotted];
m68_102 -> m68_107  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_102 -> m68_108  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_102 -> m68_103  [key=0, style=solid];
m68_102 -> m68_128  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_102 -> m68_112  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_111 -> m68_22  [key=2, style=dotted];
m68_111 -> m68_23  [key=2, style=dotted];
m68_111 -> m68_112  [key=0, style=solid];
m68_111 -> m68_113  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m68_111 -> m68_114  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m68_111 -> m68_115  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m68_111 -> m68_116  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m68_136 -> m68_22  [key=2, style=dotted];
m68_136 -> m68_23  [key=2, style=dotted];
m68_136 -> m68_137  [key=0, style=solid];
m68_136 -> m68_138  [key=1, style=dashed, color=darkseagreen4, label=record];
m68_136 -> m68_139  [key=1, style=dashed, color=darkseagreen4, label=record];
m68_153 -> m68_22  [key=2, style=dotted];
m68_153 -> m68_23  [key=2, style=dotted];
m68_153 -> m68_154  [key=0, style=solid];
m68_153 -> m68_155  [key=1, style=dashed, color=darkseagreen4, label=record];
m68_153 -> m68_156  [key=1, style=dashed, color=darkseagreen4, label=record];
m68_167 -> m68_22  [key=2, style=dotted];
m68_167 -> m68_23  [key=2, style=dotted];
m68_167 -> m68_168  [key=0, style=solid];
m68_167 -> m68_169  [key=1, style=dashed, color=darkseagreen4, label=record];
m68_167 -> m68_170  [key=1, style=dashed, color=darkseagreen4, label=record];
m68_167 -> m68_171  [key=1, style=dashed, color=darkseagreen4, label=record];
m68_228 -> m68_23  [key=2, style=dotted];
m68_228 -> m68_3  [key=2, style=dotted];
m68_228 -> m68_229  [key=0, style=solid];
m68_254 -> m68_23  [key=2, style=dotted];
m68_254 -> m68_3  [key=2, style=dotted];
m68_254 -> m68_255  [key=0, style=solid];
m68_266 -> m68_23  [key=2, style=dotted];
m68_266 -> m68_3  [key=2, style=dotted];
m68_266 -> m68_267  [key=0, style=solid];
m68_317 -> m68_23  [key=2, style=dotted];
m68_317 -> m68_3  [key=2, style=dotted];
m68_317 -> m68_318  [key=0, style=solid];
m68_329 -> m68_23  [key=2, style=dotted];
m68_329 -> m68_3  [key=2, style=dotted];
m68_329 -> m68_330  [key=0, style=solid];
m68_354 -> m68_23  [key=2, style=dotted];
m68_354 -> m68_3  [key=2, style=dotted];
m68_354 -> m68_355  [key=0, style=solid];
m68_392 -> m68_23  [key=2, style=dotted];
m68_392 -> m68_3  [key=2, style=dotted];
m68_392 -> m68_393  [key=0, style=solid];
m68_423 -> m68_23  [key=2, style=dotted];
m68_423 -> m68_3  [key=2, style=dotted];
m68_423 -> m68_424  [key=0, style=solid];
m68_449 -> m68_23  [key=2, style=dotted];
m68_449 -> m68_3  [key=2, style=dotted];
m68_449 -> m68_450  [key=0, style=solid];
m68_72 -> m68_24  [key=2, style=dotted];
m68_72 -> m68_82  [key=2, style=dotted];
m68_72 -> m68_73  [key=0, style=solid];
m68_112 -> m68_24  [key=2, style=dotted];
m68_112 -> m68_82  [key=2, style=dotted];
m68_112 -> m68_113  [key=0, style=solid];
m68_137 -> m68_24  [key=2, style=dotted];
m68_137 -> m68_82  [key=2, style=dotted];
m68_137 -> m68_138  [key=0, style=solid];
m68_172 -> m68_28  [key=2, style=dotted];
m68_172 -> m68_173  [key=0, style=solid];
m68_172 -> m68_175  [key=2, style=dotted];
m68_173 -> m68_28  [key=2, style=dotted];
m68_173 -> m68_174  [key=0, style=solid];
m68_173 -> m68_175  [key=2, style=dotted];
m68_216 -> m68_28  [key=2, style=dotted];
m68_216 -> m68_217  [key=0, style=solid];
m68_216 -> m68_175  [key=2, style=dotted];
m68_217 -> m68_28  [key=2, style=dotted];
m68_217 -> m68_218  [key=0, style=solid];
m68_217 -> m68_175  [key=2, style=dotted];
m68_69 -> m68_29  [key=2, style=dotted];
m68_69 -> m68_70  [key=0, style=solid];
m68_70 -> m68_29  [key=2, style=dotted];
m68_70 -> m68_71  [key=0, style=solid];
m68_109 -> m68_29  [key=2, style=dotted];
m68_109 -> m68_110  [key=0, style=solid];
m68_110 -> m68_29  [key=2, style=dotted];
m68_110 -> m68_111  [key=0, style=solid];
m68_139 -> m68_29  [key=2, style=dotted];
m68_139 -> m68_140  [key=0, style=solid];
m68_352 -> m68_353  [key=0, style=solid];
m68_352 -> m68_354  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_67 -> m68_48  [key=2, style=dotted];
m68_67 -> m68_68  [key=0, style=solid];
m68_75 -> m68_48  [key=2, style=dotted];
m68_75 -> m68_76  [key=0, style=solid];
m68_115 -> m68_48  [key=2, style=dotted];
m68_115 -> m68_116  [key=0, style=solid];
m68_170 -> m68_48  [key=2, style=dotted];
m68_170 -> m68_171  [key=0, style=solid];
m68_117 -> m68_101  [key=0, style=bold, color=blue];
m68_66 -> m68_82  [key=2, style=dotted];
m68_66 -> m68_67  [key=0, style=solid];
m68_73 -> m68_82  [key=2, style=dotted];
m68_73 -> m68_74  [key=0, style=solid];
m68_74 -> m68_82  [key=2, style=dotted];
m68_74 -> m68_75  [key=0, style=solid];
m68_76 -> m68_82  [key=2, style=dotted];
m68_76 -> m68_77  [key=0, style=solid];
m68_113 -> m68_82  [key=2, style=dotted];
m68_113 -> m68_114  [key=0, style=solid];
m68_114 -> m68_82  [key=2, style=dotted];
m68_114 -> m68_115  [key=0, style=solid];
m68_116 -> m68_82  [key=2, style=dotted];
m68_116 -> m68_117  [key=0, style=solid];
m68_138 -> m68_82  [key=2, style=dotted];
m68_138 -> m68_139  [key=0, style=solid];
m68_154 -> m68_82  [key=2, style=dotted];
m68_154 -> m68_155  [key=0, style=solid];
m68_155 -> m68_82  [key=2, style=dotted];
m68_155 -> m68_156  [key=0, style=solid];
m68_156 -> m68_82  [key=2, style=dotted];
m68_156 -> m68_157  [key=0, style=solid];
m68_168 -> m68_82  [key=2, style=dotted];
m68_168 -> m68_169  [key=0, style=solid];
m68_169 -> m68_82  [key=2, style=dotted];
m68_169 -> m68_170  [key=0, style=solid];
m68_229 -> m68_82  [key=2, style=dotted];
m68_229 -> m68_230  [key=0, style=solid];
m68_255 -> m68_82  [key=2, style=dotted];
m68_255 -> m68_256  [key=0, style=solid];
m68_267 -> m68_82  [key=2, style=dotted];
m68_267 -> m68_268  [key=0, style=solid];
m68_305 -> m68_82  [key=2, style=dotted];
m68_305 -> m68_306  [key=0, style=solid];
m68_318 -> m68_82  [key=2, style=dotted];
m68_318 -> m68_319  [key=0, style=solid];
m68_330 -> m68_82  [key=2, style=dotted];
m68_330 -> m68_331  [key=0, style=solid];
m68_355 -> m68_82  [key=2, style=dotted];
m68_355 -> m68_356  [key=0, style=solid];
m68_367 -> m68_82  [key=2, style=dotted];
m68_367 -> m68_368  [key=0, style=solid];
m68_381 -> m68_82  [key=2, style=dotted];
m68_381 -> m68_382  [key=0, style=solid];
m68_393 -> m68_82  [key=2, style=dotted];
m68_393 -> m68_394  [key=0, style=solid];
m68_405 -> m68_82  [key=2, style=dotted];
m68_405 -> m68_406  [key=0, style=solid];
m68_406 -> m68_82  [key=2, style=dotted];
m68_406 -> m68_407  [key=0, style=solid];
m68_407 -> m68_82  [key=2, style=dotted];
m68_407 -> m68_408  [key=0, style=solid];
m68_424 -> m68_82  [key=2, style=dotted];
m68_424 -> m68_425  [key=0, style=solid];
m68_438 -> m68_82  [key=2, style=dotted];
m68_438 -> m68_439  [key=0, style=solid];
m68_450 -> m68_82  [key=2, style=dotted];
m68_450 -> m68_451  [key=0, style=solid];
m68_159 -> m68_161  [key=2, style=dotted];
m68_159 -> m68_160  [key=0, style=solid];
m68_202 -> m68_203  [key=0, style=solid];
m68_218 -> m68_209  [key=0, style=bold, color=blue];
m68_219 -> m68_220  [key=0, style=solid];
m68_230 -> m68_226  [key=0, style=bold, color=blue];
m68_244 -> m68_238  [key=0, style=bold, color=blue];
m68_245 -> m68_246  [key=0, style=solid];
m68_294 -> m68_290  [key=0, style=bold, color=blue];
m68_284 -> m68_286  [key=2, style=dotted];
m68_284 -> m68_285  [key=0, style=solid];
m68_306 -> m68_302  [key=0, style=bold, color=blue];
m68_310 -> m68_307  [key=0, style=bold, color=blue];
m68_308 -> m68_248  [key=2, style=dotted];
m68_308 -> m68_309  [key=0, style=solid];
m68_309 -> m68_310  [key=0, style=solid];
m68_309 -> m68_311  [key=2, style=dotted];
m68_319 -> m68_315  [key=0, style=bold, color=blue];
m68_327 -> m68_328  [key=0, style=solid];
m68_327 -> m68_329  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_368 -> m68_364  [key=0, style=bold, color=blue];
m68_373 -> m68_369  [key=0, style=bold, color=blue];
m68_346 -> m68_348  [key=2, style=dotted];
m68_346 -> m68_347  [key=0, style=solid];
m68_358 -> m68_348  [key=2, style=dotted];
m68_358 -> m68_359  [key=0, style=solid];
m68_359 -> m68_348  [key=2, style=dotted];
m68_359 -> m68_360  [key=0, style=solid];
m68_396 -> m68_348  [key=2, style=dotted];
m68_396 -> m68_397  [key=0, style=solid];
m68_413 -> m68_348  [key=2, style=dotted];
m68_413 -> m68_414  [key=0, style=solid];
m68_427 -> m68_348  [key=2, style=dotted];
m68_427 -> m68_428  [key=0, style=solid];
m68_428 -> m68_348  [key=2, style=dotted];
m68_428 -> m68_429  [key=0, style=solid];
m68_429 -> m68_348  [key=2, style=dotted];
m68_429 -> m68_430  [key=0, style=solid];
m68_441 -> m68_348  [key=2, style=dotted];
m68_441 -> m68_442  [key=0, style=solid];
m68_453 -> m68_348  [key=2, style=dotted];
m68_453 -> m68_454  [key=0, style=solid];
m68_382 -> m68_378  [key=0, style=bold, color=blue];
m68_264 -> m68_265  [key=0, style=solid];
m68_264 -> m68_266  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_386 -> m68_383  [key=0, style=bold, color=blue];
m68_408 -> m68_402  [key=0, style=bold, color=blue];
m68_57 -> m68_64  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_57 -> m68_65  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_57 -> m68_68  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_57 -> m68_58  [key=0, style=solid];
m68_57 -> m68_59  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_57 -> m68_71  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_134 -> m68_135  [key=0, style=solid];
m68_134 -> m68_136  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_151 -> m68_152  [key=0, style=solid];
m68_151 -> m68_153  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_165 -> m68_166  [key=0, style=solid];
m68_165 -> m68_167  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_430 -> m68_417  [key=2, style=dotted];
m68_430 -> m68_431  [key=0, style=solid];
m68_442 -> m68_417  [key=2, style=dotted];
m68_442 -> m68_443  [key=0, style=solid];
m68_454 -> m68_417  [key=2, style=dotted];
m68_454 -> m68_455  [key=0, style=solid];
m68_439 -> m68_435  [key=0, style=bold, color=blue];
m68_443 -> m68_440  [key=0, style=bold, color=blue];
m68_463 -> m68_459  [key=0, style=bold, color=blue];
m68_60 -> m68_64  [key=1, style=dashed, color=darkseagreen4, label=state];
m68_60 -> m68_61  [key=0, style=solid];
m68_60 -> m68_78  [key=2, style=dotted];
m68_60 -> m68_62  [key=1, style=dashed, color=darkseagreen4, label=state];
m68_60 -> m68_63  [key=1, style=dashed, color=darkseagreen4, label=state];
m68_60 -> m68_94  [key=1, style=dashed, color=darkseagreen4, label=state];
m68_63 -> m68_64  [key=0, style=solid];
m68_63 -> m68_79  [key=2, style=dotted];
m68_63 -> m68_81  [key=2, style=dotted];
m68_63 -> m68_80  [key=2, style=dotted];
m68_63 -> m68_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_93 -> m68_94  [key=0, style=solid];
m68_103 -> m68_107  [key=1, style=dashed, color=darkseagreen4, label=state];
m68_103 -> m68_104  [key=0, style=solid];
m68_103 -> m68_78  [key=2, style=dotted];
m68_103 -> m68_105  [key=1, style=dashed, color=darkseagreen4, label=state];
m68_103 -> m68_106  [key=1, style=dashed, color=darkseagreen4, label=state];
m68_103 -> m68_128  [key=1, style=dashed, color=darkseagreen4, label=state];
m68_106 -> m68_107  [key=0, style=solid];
m68_106 -> m68_79  [key=2, style=dotted];
m68_106 -> m68_81  [key=2, style=dotted];
m68_106 -> m68_80  [key=2, style=dotted];
m68_106 -> m68_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_127 -> m68_128  [key=0, style=solid];
m68_141 -> m68_142  [key=0, style=solid];
m68_158 -> m68_159  [key=0, style=solid];
m68_176 -> m68_177  [key=0, style=solid];
m68_231 -> m68_232  [key=0, style=solid];
m68_231 -> m68_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_252 -> m68_253  [key=0, style=solid];
m68_252 -> m68_254  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_257 -> m68_258  [key=0, style=solid];
m68_257 -> m68_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_269 -> m68_270  [key=0, style=solid];
m68_269 -> m68_271  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_283 -> m68_284  [key=0, style=solid];
m68_320 -> m68_321  [key=0, style=solid];
m68_320 -> m68_322  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_332 -> m68_333  [key=0, style=solid];
m68_332 -> m68_334  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_345 -> m68_346  [key=0, style=solid];
m68_357 -> m68_358  [key=0, style=solid];
m68_357 -> m68_359  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_390 -> m68_391  [key=0, style=solid];
m68_390 -> m68_392  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_395 -> m68_396  [key=0, style=solid];
m68_395 -> m68_397  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_421 -> m68_422  [key=0, style=solid];
m68_421 -> m68_423  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_426 -> m68_427  [key=0, style=solid];
m68_426 -> m68_428  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_426 -> m68_429  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_426 -> m68_430  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_447 -> m68_448  [key=0, style=solid];
m68_447 -> m68_449  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m68_452 -> m68_453  [key=0, style=solid];
m68_452 -> m68_454  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m68_4 -> m68_5  [key=0, style=solid];
m68_6 -> m68_4  [key=0, style=bold, color=blue];
m68_32 -> m68_30  [key=0, style=bold, color=blue];
m68_94 -> m68_95  [key=0, style=solid];
m68_94 -> m68_96  [key=2, style=dotted];
m68_128 -> m68_129  [key=0, style=solid];
m68_128 -> m68_130  [key=2, style=dotted];
m68_171 -> m68_172  [key=0, style=solid];
m68_171 -> m68_173  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
m68_174 -> m68_165  [key=0, style=bold, color=blue];
m68_140 -> m68_134  [key=0, style=bold, color=blue];
m68_356 -> m68_352  [key=0, style=bold, color=blue];
m68_77 -> m68_57  [key=0, style=bold, color=blue];
m68_157 -> m68_151  [key=0, style=bold, color=blue];
m68_256 -> m68_252  [key=0, style=bold, color=blue];
m68_268 -> m68_264  [key=0, style=bold, color=blue];
m68_331 -> m68_327  [key=0, style=bold, color=blue];
m68_394 -> m68_390  [key=0, style=bold, color=blue];
m68_425 -> m68_421  [key=0, style=bold, color=blue];
m68_451 -> m68_447  [key=0, style=bold, color=blue];
m68_160 -> m68_158  [key=0, style=bold, color=blue];
m68_204 -> m68_202  [key=0, style=bold, color=blue];
m68_203 -> m68_204  [key=0, style=solid];
m68_203 -> m68_205  [key=2, style=dotted];
m68_221 -> m68_219  [key=0, style=bold, color=blue];
m68_220 -> m68_33  [key=2, style=dotted];
m68_220 -> m68_221  [key=0, style=solid];
m68_220 -> m68_222  [key=2, style=dotted];
m68_247 -> m68_245  [key=0, style=bold, color=blue];
m68_246 -> m68_248  [key=2, style=dotted];
m68_246 -> m68_247  [key=0, style=solid];
m68_258 -> m68_248  [key=2, style=dotted];
m68_258 -> m68_259  [key=0, style=solid];
m68_259 -> m68_248  [key=2, style=dotted];
m68_259 -> m68_260  [key=0, style=solid];
m68_270 -> m68_248  [key=2, style=dotted];
m68_270 -> m68_271  [key=0, style=solid];
m68_271 -> m68_248  [key=2, style=dotted];
m68_271 -> m68_272  [key=0, style=solid];
m68_321 -> m68_248  [key=2, style=dotted];
m68_321 -> m68_322  [key=0, style=solid];
m68_333 -> m68_248  [key=2, style=dotted];
m68_333 -> m68_334  [key=0, style=solid];
m68_285 -> m68_283  [key=0, style=bold, color=blue];
m68_347 -> m68_345  [key=0, style=bold, color=blue];
m68_360 -> m68_357  [key=0, style=bold, color=blue];
m68_397 -> m68_374  [key=2, style=dotted];
m68_397 -> m68_398  [key=0, style=solid];
m68_431 -> m68_426  [key=0, style=bold, color=blue];
m68_455 -> m68_452  [key=0, style=bold, color=blue];
m68_61 -> m68_62  [key=0, style=solid];
m68_61 -> m68_79  [key=2, style=dotted];
m68_61 -> m68_80  [key=2, style=dotted];
m68_61 -> m68_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_62 -> m68_63  [key=0, style=solid];
m68_62 -> m68_79  [key=2, style=dotted];
m68_62 -> m68_80  [key=2, style=dotted];
m68_62 -> m68_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_89 -> m68_90  [key=0, style=solid];
m68_95 -> m68_93  [key=0, style=bold, color=blue];
m68_104 -> m68_79  [key=2, style=dotted];
m68_104 -> m68_80  [key=2, style=dotted];
m68_104 -> m68_105  [key=0, style=solid];
m68_104 -> m68_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_105 -> m68_106  [key=0, style=solid];
m68_105 -> m68_79  [key=2, style=dotted];
m68_105 -> m68_80  [key=2, style=dotted];
m68_105 -> m68_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_124 -> m68_125  [key=0, style=solid];
m68_129 -> m68_127  [key=0, style=bold, color=blue];
m68_143 -> m68_141  [key=0, style=bold, color=blue];
m68_142 -> m68_143  [key=0, style=solid];
m68_142 -> m68_144  [key=2, style=dotted];
m68_178 -> m68_176  [key=0, style=bold, color=blue];
m68_177 -> m68_33  [key=2, style=dotted];
m68_177 -> m68_178  [key=0, style=solid];
m68_177 -> m68_179  [key=2, style=dotted];
m68_234 -> m68_231  [key=0, style=bold, color=blue];
m68_232 -> m68_233  [key=0, style=solid];
m68_232 -> m68_205  [key=2, style=dotted];
m68_233 -> m68_234  [key=0, style=solid];
m68_233 -> m68_205  [key=2, style=dotted];
m68_260 -> m68_257  [key=0, style=bold, color=blue];
m68_272 -> m68_269  [key=0, style=bold, color=blue];
m68_323 -> m68_320  [key=0, style=bold, color=blue];
m68_322 -> m68_311  [key=2, style=dotted];
m68_322 -> m68_323  [key=0, style=solid];
m68_335 -> m68_332  [key=0, style=bold, color=blue];
m68_334 -> m68_311  [key=2, style=dotted];
m68_334 -> m68_335  [key=0, style=solid];
m68_398 -> m68_395  [key=0, style=bold, color=blue];
m68_83 -> m68_84  [key=0, style=solid];
m68_86 -> m68_87  [key=0, style=solid];
m68_91 -> m68_89  [key=0, style=bold, color=blue];
m68_90 -> m68_91  [key=0, style=solid];
m68_90 -> m68_92  [key=2, style=dotted];
m68_118 -> m68_119  [key=0, style=solid];
m68_126 -> m68_124  [key=0, style=bold, color=blue];
m68_125 -> m68_126  [key=0, style=solid];
m68_125 -> m68_92  [key=2, style=dotted];
m68_85 -> m68_83  [key=0, style=bold, color=blue];
m68_84 -> m68_85  [key=0, style=solid];
m68_88 -> m68_86  [key=0, style=bold, color=blue];
m68_87 -> m68_88  [key=0, style=solid];
m68_120 -> m68_118  [key=0, style=bold, color=blue];
m68_119 -> m68_120  [key=0, style=solid];
m68_122 -> m68_123  [key=0, style=solid];
m68_123 -> m68_121  [key=0, style=bold, color=blue];
m68_312 -> m68_313  [key=0, style=solid, color=green];
m68_313 -> m68_99  [key=3, color=green, style=bold, label="Parameter variable string type"];
m68_313 -> m68_314  [key=0, style=solid, color=green];
m68_313 -> m68_12  [key=2, style=dotted, color=green];
m68_313 -> m68_315  [key=1, style=dashed, color=green, label="lambda expression"];
m68_313 -> m68_98  [key=3, color=green, style=bold, label="Parameter variable string type"];
m68_314 -> m68_312  [key=0, style=bold, color=blue];
m68_261 -> m68_262  [key=0, style=solid];
m68_262 -> m68_12  [key=2, style=dotted];
m68_262 -> m68_350  [key=3, color=darkorchid, style=bold, label="method methodReturn long DeletedListCount"];
m68_262 -> m68_263  [key=0, style=solid];
m68_262 -> m68_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_263 -> m68_261  [key=0, style=bold, color=blue];
m68_468 -> m68_470  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m68_468 -> m68_469  [key=0, style=solid];
m68_470 -> m68_473  [key=2, style=dotted];
m68_470 -> m68_471  [key=0, style=solid];
m68_469 -> m68_470  [key=0, style=solid];
m68_469 -> m68_472  [key=2, style=dotted];
m68_471 -> m68_468  [key=0, style=bold, color=blue];
m68_7 -> m68_10  [key=3, color=green, style=bold, label="Field variable int? _jobListLimit"];
m68_456 -> m68_457  [key=0, style=solid, color=green];
m68_457 -> m68_458  [key=0, style=solid, color=green];
m68_457 -> m68_12  [key=2, style=dotted, color=green];
m68_457 -> m68_459  [key=1, style=dashed, color=green, label="lambda expression"];
m68_458 -> m68_456  [key=0, style=bold, color=blue];
m68_8 -> m68_9  [key=0, style=solid];
m68_10 -> m68_10  [key=3, color=green, style=bold, label="Field variable Hangfire.SqlServer.SqlServerStorage _storage"];
m68_10 -> m68_11  [key=0, style=solid, color=green];
m68_10 -> m68_12  [key=2, style=dotted, color=green];
m68_10 -> m68_13  [key=1, style=dashed, color=green, label="lambda expression"];
m68_9 -> m68_10  [key=0, style=solid, color=green];
m68_9 -> m68_15  [key=1, style=dashed, color=green, label=arrangeSql];
m68_9 -> m68_14  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_11 -> m68_8  [key=0, style=bold, color=blue];
m68_53 -> m68_54  [key=0, style=solid];
m68_55 -> m68_12  [key=2, style=dotted];
m68_55 -> m68_350  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.ScheduledJobDto> ScheduledJobs"];
m68_55 -> m68_56  [key=0, style=solid];
m68_55 -> m68_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_54 -> m68_350  [key=3, color=darkorchid, style=bold, label="method methodReturn long ProcessingCount"];
m68_54 -> m68_55  [key=0, style=solid];
m68_54 -> m68_58  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_54 -> m68_59  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_56 -> m68_53  [key=0, style=bold, color=blue];
m68_349 -> m68_350  [key=0, style=solid];
m68_350 -> m68_37  [key=3, color=green, style=bold, label="Parameter variable string queueName"];
m68_350 -> m68_99  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_350 -> m68_207  [key=3, color=green, style=bold, label="Parameter variable string queueName"];
m68_350 -> m68_224  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_350 -> m68_12  [key=2, style=dotted];
m68_350 -> m68_36  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m68_350 -> m68_350  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.SqlServer.IPersistentJobQueueMonitoringApi GetQueueApi"];
m68_350 -> m68_351  [key=0, style=solid];
m68_350 -> m68_352  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_350 -> m68_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_350 -> m68_55  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_350 -> m68_98  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_350 -> m68_132  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_350 -> m68_149  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_350 -> m68_163  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_350 -> m68_261  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_350 -> m68_262  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m68_351 -> m68_349  [key=0, style=bold, color=blue];
m68_418 -> m68_419  [key=0, style=solid];
m68_419 -> m68_12  [key=2, style=dotted];
m68_419 -> m68_420  [key=0, style=solid];
m68_419 -> m68_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_420 -> m68_418  [key=0, style=bold, color=blue];
m68_336 -> m68_337  [key=0, style=solid, color=green];
m68_337 -> m68_338  [key=0, style=solid, color=green];
m68_337 -> m68_12  [key=2, style=dotted, color=green];
m68_337 -> m68_339  [key=1, style=dashed, color=green, label="lambda expression"];
m68_338 -> m68_336  [key=0, style=bold, color=blue];
m68_287 -> m68_288  [key=0, style=solid, color=green];
m68_288 -> m68_289  [key=0, style=solid, color=green];
m68_288 -> m68_12  [key=2, style=dotted, color=green];
m68_288 -> m68_290  [key=1, style=dashed, color=green, label="lambda expression"];
m68_289 -> m68_287  [key=0, style=bold, color=blue];
m68_249 -> m68_250  [key=0, style=solid];
m68_250 -> m68_12  [key=2, style=dotted];
m68_250 -> m68_251  [key=0, style=solid];
m68_250 -> m68_252  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m68_251 -> m68_249  [key=0, style=bold, color=blue];
m68_192 -> m68_193  [key=0, style=solid, color=green];
m68_193 -> m68_194  [key=0, style=solid, color=green];
m68_193 -> m68_12  [key=2, style=dotted, color=green];
m68_193 -> m68_195  [key=1, style=dashed, color=green, label="lambda expression"];
m68_194 -> m68_192  [key=0, style=bold, color=blue];
m68_479 -> m68_10  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_17  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_19  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_37  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_42  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_45  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_99  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_181  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_184  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_193  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_207  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_224  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_236  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_274  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_288  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_291  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_300  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_303  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_313  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_337  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_362  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_365  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_376  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_379  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_400  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_403  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_433  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_436  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_457  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_460  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_196  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_227  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_239  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_250  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_253  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_262  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_265  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_277  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_316  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_325  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_328  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_340  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_350  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_353  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_388  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_391  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_419  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_422  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_445  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_479 -> m68_448  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m68_480 -> m68_15  [key=1, style=dashed, color=green, label=arrangeSql];
m68_480 -> m68_14  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_482 -> m68_40  [key=1, style=dashed, color=green, label=arrangeSql];
m68_482 -> m68_41  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_483 -> m68_50  [key=1, style=dashed, color=green, label=jobId];
m68_481 -> m68_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_484 -> m68_58  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_484 -> m68_59  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_487 -> m68_102  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m68_485 -> m68_94  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_486 -> m68_94  [key=1, style=dashed, color=darkseagreen4, label=state];
m68_488 -> m68_128  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_489 -> m68_128  [key=1, style=dashed, color=darkseagreen4, label=state];
m70_35 -> m70_36  [key=0, style=solid];
m70_35 -> m70_20  [key=3, color=darkorchid, style=bold, label="method methodReturn T Line"];
m70_35 -> m70_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m70_36 -> m70_35  [key=0, style=bold, color=blue];
m70_27 -> m70_28  [key=0, style=solid];
m70_27 -> m70_8  [key=3, color=darkorchid, style=bold, label="method methodReturn T Method"];
m70_27 -> m70_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m70_28 -> m70_27  [key=0, style=bold, color=blue];
m70_29 -> m70_30  [key=0, style=solid];
m70_29 -> m70_11  [key=3, color=darkorchid, style=bold, label="method methodReturn T ParameterType"];
m70_29 -> m70_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m70_30 -> m70_29  [key=0, style=bold, color=blue];
m70_14 -> m70_15  [key=0, style=solid, color=red];
m70_14 -> m70_31  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m70_15 -> m70_16  [key=0, style=solid, color=red];
m70_16 -> m70_14  [key=0, style=bold, color=blue];
m70_11 -> m70_12  [key=0, style=solid, color=red];
m70_11 -> m70_29  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m70_12 -> m70_13  [key=0, style=solid, color=red];
m70_13 -> m70_11  [key=0, style=bold, color=blue];
m70_40 -> m70_42  [key=0, style=solid, color=red];
m70_40 -> m70_43  [key=1, style=dashed, color=red, label=string];
m70_40 -> m70_53  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m70_40 -> m70_56  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m70_40 -> m70_59  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m70_40 -> m70_66  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m70_40 -> m70_69  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m70_40 -> m70_44  [key=1, style=dashed, color=red, label=string];
m70_40 -> m70_37  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m70_42 -> m70_43  [key=0, style=solid, color=red];
m70_42 -> m70_46  [key=2, style=dotted, color=red];
m70_43 -> m70_44  [key=0, style=solid, color=red];
m70_43 -> m70_47  [key=2, style=dotted, color=red];
m70_43 -> m70_52  [key=1, style=dashed, color=red, label="lambda expression"];
m70_43 -> m70_55  [key=1, style=dashed, color=red, label="lambda expression"];
m70_43 -> m70_58  [key=1, style=dashed, color=red, label="lambda expression"];
m70_43 -> m70_61  [key=1, style=dashed, color=red, label="lambda expression"];
m70_43 -> m70_65  [key=1, style=dashed, color=red, label="lambda expression"];
m70_43 -> m70_68  [key=1, style=dashed, color=red, label="lambda expression"];
m70_44 -> m70_45  [key=0, style=solid, color=red];
m70_44 -> m70_48  [key=2, style=dotted, color=red];
m70_44 -> m70_49  [key=2, style=dotted, color=red];
m70_44 -> m70_50  [key=2, style=dotted, color=red];
m70_44 -> m70_51  [key=2, style=dotted, color=red];
m70_44 -> m70_23  [key=2, style=dotted, color=red];
m70_44 -> m70_44  [key=1, style=dashed, color=red, label=tokens];
m70_44 -> m70_71  [key=1, style=dashed, color=red, label="lambda expression"];
m70_45 -> m70_40  [key=0, style=bold, color=blue];
m70_5 -> m70_6  [key=0, style=solid, color=red];
m70_5 -> m70_25  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m70_6 -> m70_7  [key=0, style=solid, color=red];
m70_7 -> m70_5  [key=0, style=bold, color=blue];
m70_25 -> m70_26  [key=0, style=solid];
m70_25 -> m70_5  [key=3, color=darkorchid, style=bold, label="method methodReturn T Type"];
m70_25 -> m70_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m70_26 -> m70_25  [key=0, style=bold, color=blue];
m70_71 -> m70_72  [key=0, style=solid, color=red];
m70_53 -> m70_54  [key=0, style=solid, color=red];
m70_53 -> m70_23  [key=2, style=dotted, color=red];
m70_56 -> m70_57  [key=0, style=solid, color=red];
m70_56 -> m70_25  [key=2, style=dotted, color=red];
m70_56 -> m70_27  [key=2, style=dotted, color=red];
m70_59 -> m70_60  [key=0, style=solid, color=red];
m70_59 -> m70_29  [key=2, style=dotted, color=red];
m70_59 -> m70_31  [key=2, style=dotted, color=red];
m70_66 -> m70_67  [key=0, style=solid, color=red];
m70_66 -> m70_33  [key=2, style=dotted, color=red];
m70_66 -> m70_35  [key=2, style=dotted, color=red];
m70_69 -> m70_70  [key=0, style=solid, color=red];
m70_69 -> m70_69  [key=1, style=dashed, color=red, label=pe];
m70_52 -> m70_53  [key=0, style=solid, color=red];
m70_55 -> m70_56  [key=0, style=solid, color=red];
m70_58 -> m70_59  [key=0, style=solid, color=red];
m70_61 -> m70_62  [key=0, style=solid, color=red];
m70_65 -> m70_66  [key=0, style=solid, color=red];
m70_68 -> m70_69  [key=0, style=solid, color=red];
m70_54 -> m70_52  [key=0, style=bold, color=blue];
m70_57 -> m70_55  [key=0, style=bold, color=blue];
m70_60 -> m70_58  [key=0, style=bold, color=blue];
m70_62 -> m70_63  [key=0, style=solid, color=red];
m70_62 -> m70_64  [key=2, style=dotted, color=red];
m70_63 -> m70_61  [key=0, style=bold, color=blue];
m70_67 -> m70_65  [key=0, style=bold, color=blue];
m70_70 -> m70_68  [key=0, style=bold, color=blue];
m70_72 -> m70_73  [key=0, style=solid, color=red];
m70_73 -> m70_71  [key=0, style=bold, color=blue];
m70_0 -> m70_1  [key=0, style=solid, color=red];
m70_0 -> m70_23  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m70_1 -> m70_2  [key=0, style=solid, color=red];
m70_1 -> m70_3  [key=2, style=dotted, color=red];
m70_1 -> m70_4  [key=2, style=dotted, color=red];
m70_2 -> m70_0  [key=0, style=bold, color=blue];
m70_33 -> m70_34  [key=0, style=solid];
m70_33 -> m70_17  [key=3, color=darkorchid, style=bold, label="method methodReturn T File"];
m70_33 -> m70_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m70_34 -> m70_33  [key=0, style=bold, color=blue];
m70_23 -> m70_24  [key=0, style=solid];
m70_23 -> m70_0  [key=3, color=darkorchid, style=bold, label="method methodReturn T Text"];
m70_23 -> m70_43  [key=3, color=red, style=bold, label="Parameter variable string text"];
m70_24 -> m70_23  [key=0, style=bold, color=blue];
m70_17 -> m70_18  [key=0, style=solid, color=red];
m70_17 -> m70_33  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m70_18 -> m70_19  [key=0, style=solid, color=red];
m70_19 -> m70_17  [key=0, style=bold, color=blue];
m70_20 -> m70_21  [key=0, style=solid, color=red];
m70_20 -> m70_35  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m70_21 -> m70_22  [key=0, style=solid, color=red];
m70_22 -> m70_20  [key=0, style=bold, color=blue];
m70_37 -> m70_38  [key=0, style=solid, color=red];
m70_38 -> m70_39  [key=0, style=solid, color=red];
m70_38 -> m70_40  [key=2, style=dotted, color=red];
m70_38 -> m70_41  [key=2, style=dotted, color=red];
m70_39 -> m70_37  [key=0, style=bold, color=blue];
m70_8 -> m70_9  [key=0, style=solid, color=red];
m70_8 -> m70_27  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m70_9 -> m70_10  [key=0, style=solid, color=red];
m70_10 -> m70_8  [key=0, style=bold, color=blue];
m70_31 -> m70_32  [key=0, style=solid];
m70_31 -> m70_14  [key=3, color=darkorchid, style=bold, label="method methodReturn T ParameterName"];
m70_31 -> m70_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m70_32 -> m70_31  [key=0, style=bold, color=blue];
m70_74 -> m70_6  [key=1, style=dashed, color=red, label="Hangfire.StackTraceHtmlFragments"];
m70_74 -> m70_9  [key=1, style=dashed, color=red, label="Hangfire.StackTraceHtmlFragments"];
m70_74 -> m70_12  [key=1, style=dashed, color=red, label="Hangfire.StackTraceHtmlFragments"];
m70_74 -> m70_15  [key=1, style=dashed, color=red, label="Hangfire.StackTraceHtmlFragments"];
m70_74 -> m70_18  [key=1, style=dashed, color=red, label="Hangfire.StackTraceHtmlFragments"];
m70_74 -> m70_21  [key=1, style=dashed, color=red, label="Hangfire.StackTraceHtmlFragments"];
m70_75 -> m70_53  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m70_75 -> m70_56  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m70_75 -> m70_59  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m70_75 -> m70_66  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m70_75 -> m70_69  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m71_3 -> m71_4  [key=0, style=solid];
m71_4 -> m71_3  [key=0, style=bold, color=blue];
m71_0 -> m71_1  [key=0, style=solid];
m71_1 -> m71_2  [key=0, style=solid];
m71_2 -> m71_0  [key=0, style=bold, color=blue];
m71_5 -> m71_6  [key=0, style=solid];
m71_6 -> m71_7  [key=0, style=solid];
m71_6 -> m71_8  [key=2, style=dotted];
m71_7 -> m71_5  [key=0, style=bold, color=blue];
m71_9 -> m71_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m75_24 -> m75_25  [key=0, style=solid, color=red];
m75_24 -> m75_27  [key=1, style=dashed, color=red, label=string];
m75_25 -> m75_26  [key=0, style=solid, color=red];
m75_25 -> m75_27  [key=0, style=solid, color=red];
m75_25 -> m75_21  [key=2, style=dotted, color=red];
m75_27 -> m75_28  [key=0, style=solid, color=red];
m75_27 -> m75_29  [key=2, style=dotted, color=red];
m75_27 -> m75_30  [key=2, style=dotted, color=red];
m75_27 -> m75_27  [key=3, color=red, style=bold, label="Property variable bool IsFinal"];
m75_26 -> m75_28  [key=0, style=solid, color=red];
m75_26 -> m75_22  [key=2, style=dotted, color=red];
m75_28 -> m75_24  [key=0, style=bold, color=blue];
m75_0 -> m75_1  [key=0, style=solid, color=green];
m75_0 -> m75_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m75_0 -> m75_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m75_0 -> m75_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m75_0 -> m75_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m75_0 -> m75_6  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m75_0 -> m75_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m75_0 -> m75_8  [key=1, style=dashed, color=green, label="System.Type"];
m75_0 -> m75_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m75_0 -> m75_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m75_0 -> m75_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m75_1 -> m75_2  [key=0, style=solid, color=green];
m75_1 -> m75_13  [key=2, style=dotted, color=green];
m75_2 -> m75_3  [key=0, style=solid, color=red];
m75_2 -> m75_13  [key=2, style=dotted, color=red];
m75_3 -> m75_4  [key=0, style=solid, color=red];
m75_3 -> m75_13  [key=2, style=dotted, color=red];
m75_4 -> m75_5  [key=0, style=solid, color=red];
m75_4 -> m75_13  [key=2, style=dotted, color=red];
m75_5 -> m75_6  [key=0, style=solid, color=red];
m75_5 -> m75_13  [key=2, style=dotted, color=red];
m75_6 -> m75_7  [key=0, style=solid, color=red];
m75_6 -> m75_14  [key=2, style=dotted, color=red];
m75_7 -> m75_8  [key=0, style=solid, color=green];
m75_8 -> m75_9  [key=0, style=solid, color=green];
m75_9 -> m75_10  [key=0, style=solid, color=red];
m75_10 -> m75_11  [key=0, style=solid, color=red];
m75_11 -> m75_12  [key=0, style=solid, color=red];
m75_11 -> m75_15  [key=2, style=dotted, color=red];
m75_12 -> m75_0  [key=0, style=bold, color=blue];
m75_16 -> m75_17  [key=0, style=solid, color=red];
m75_16 -> m75_19  [key=1, style=dashed, color=red, label=string];
m75_17 -> m75_18  [key=0, style=solid, color=red];
m75_17 -> m75_19  [key=0, style=solid, color=red];
m75_17 -> m75_21  [key=2, style=dotted, color=red];
m75_19 -> m75_20  [key=0, style=solid, color=red];
m75_19 -> m75_15  [key=2, style=dotted, color=red];
m75_19 -> m75_23  [key=2, style=dotted, color=red];
m75_18 -> m75_20  [key=0, style=solid, color=red];
m75_18 -> m75_22  [key=2, style=dotted, color=red];
m75_20 -> m75_16  [key=0, style=bold, color=blue];
m75_31 -> m75_32  [key=0, style=solid, color=red];
m75_32 -> m75_33  [key=0, style=solid, color=red];
m75_32 -> m75_34  [key=2, style=dotted, color=red];
m75_33 -> m75_31  [key=0, style=bold, color=blue];
m75_35 -> m75_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m75_35 -> m75_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m75_35 -> m75_8  [key=1, style=dashed, color=green, label="HangFire.Client.ClientJobDescriptor"];
m75_35 -> m75_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m75_35 -> m75_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m75_35 -> m75_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m75_35 -> m75_19  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m75_35 -> m75_27  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m75_35 -> m75_32  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m76_0 -> m76_1  [key=0, style=solid, color=red];
m76_0 -> m76_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m76_0 -> m76_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m76_0 -> m76_5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m76_1 -> m76_2  [key=0, style=solid, color=red];
m76_1 -> m76_3  [key=0, style=solid, color=red];
m76_1 -> m76_8  [key=2, style=dotted, color=red];
m76_2 -> m76_7  [key=0, style=solid];
m76_3 -> m76_4  [key=0, style=solid];
m76_3 -> m76_9  [key=2, style=dotted];
m76_5 -> m76_6  [key=0, style=solid];
m76_5 -> m76_12  [key=2, style=dotted];
m76_5 -> m76_13  [key=2, style=dotted];
m76_5 -> m76_14  [key=2, style=dotted];
m76_5 -> m76_15  [key=2, style=dotted];
m76_4 -> m76_5  [key=0, style=solid];
m76_4 -> m76_10  [key=2, style=dotted];
m76_4 -> m76_11  [key=2, style=dotted];
m76_4 -> m76_4  [key=1, style=dashed, color=darkseagreen4, label=genericTypeName];
m76_4 -> m76_6  [key=1, style=dashed, color=darkseagreen4, label=genericTypeName];
m76_6 -> m76_7  [key=0, style=solid];
m76_7 -> m76_0  [key=0, style=bold, color=blue];
m77_16 -> m77_17  [key=0, style=solid];
m77_16 -> m77_55  [key=2, style=dotted];
m77_59 -> m77_60  [key=0, style=solid];
m77_60 -> m77_61  [key=0, style=solid];
m77_60 -> m77_62  [key=2, style=dotted];
m77_60 -> m77_63  [key=2, style=dotted];
m77_60 -> m77_64  [key=2, style=dotted];
m77_61 -> m77_59  [key=0, style=bold, color=blue];
m77_45 -> m77_46  [key=0, style=solid];
m77_45 -> m77_51  [key=0, style=solid];
m77_45 -> m77_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_45 -> m77_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_51 -> m77_19  [key=0, style=solid];
m77_51 -> m77_55  [key=2, style=dotted];
m77_55 -> m77_20  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Server.BackgroundProcessContext context"];
m77_55 -> m77_23  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Storage.IStorageConnection connection"];
m77_55 -> m77_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m77_55 -> m77_65  [key=0, style=solid];
m77_55 -> m77_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m77_55 -> m77_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m77_55 -> m77_67  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.States.IState PerformJob"];
m77_48 -> m77_49  [key=0, style=solid];
m77_48 -> m77_55  [key=2, style=dotted];
m77_70 -> m77_71  [key=0, style=solid];
m77_70 -> m77_87  [key=2, style=dotted];
m77_74 -> m77_75  [key=0, style=solid];
m77_74 -> m77_90  [key=2, style=dotted];
m77_74 -> m77_76  [key=1, style=dashed, color=darkseagreen4, label=result];
m77_69 -> m77_70  [key=0, style=solid];
m77_69 -> m77_86  [key=2, style=dotted];
m77_69 -> m77_71  [key=1, style=dashed, color=darkseagreen4, label=backgroundJob];
m77_71 -> m77_74  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m77_71 -> m77_72  [key=0, style=solid];
m77_71 -> m77_88  [key=2, style=dotted];
m77_71 -> m77_1  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_2  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_4  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_5  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_7  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_9  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_11  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_14  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_15  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_18  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_21  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_26  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_71 -> m77_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m77_73 -> m77_74  [key=0, style=solid];
m77_73 -> m77_89  [key=2, style=dotted];
m77_73 -> m77_75  [key=1, style=dashed, color=darkseagreen4, label=duration];
m77_73 -> m77_76  [key=1, style=dashed, color=darkseagreen4, label=duration];
m77_75 -> m77_76  [key=0, style=solid];
m77_75 -> m77_91  [key=2, style=dotted];
m77_76 -> m77_83  [key=0, style=solid];
m77_76 -> m77_92  [key=2, style=dotted];
m77_65 -> m77_69  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m77_65 -> m77_66  [key=0, style=solid];
m77_65 -> m77_84  [key=2, style=dotted];
m77_65 -> m77_68  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m77_65 -> m77_72  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m77_67 -> m77_83  [key=0, style=solid];
m77_68 -> m77_69  [key=0, style=solid];
m77_68 -> m77_85  [key=2, style=dotted];
m77_72 -> m77_73  [key=0, style=solid];
m77_72 -> m77_76  [key=1, style=dashed, color=darkseagreen4, label=latency];
m77_78 -> m77_83  [key=0, style=solid];
m77_80 -> m77_83  [key=0, style=solid];
m77_80 -> m77_93  [key=2, style=dotted];
m77_82 -> m77_83  [key=0, style=solid];
m77_82 -> m77_93  [key=2, style=dotted];
m77_66 -> m77_67  [key=0, style=solid];
m77_66 -> m77_68  [key=0, style=solid];
m77_77 -> m77_78  [key=0, style=solid];
m77_79 -> m77_80  [key=0, style=solid];
m77_81 -> m77_82  [key=0, style=solid];
m77_83 -> m77_55  [key=0, style=bold, color=blue];
m77_19 -> m77_20  [key=0, style=solid];
m77_19 -> m77_52  [key=0, style=solid];
m77_19 -> m77_21  [key=1, style=dashed, color=red, label=job];
m77_47 -> m77_48  [key=0, style=solid];
m77_47 -> m77_68  [key=2, style=dotted];
m77_47 -> m77_63  [key=2, style=dotted];
m77_47 -> m77_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_47 -> m77_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_54 -> m77_0  [key=0, style=bold, color=blue];
m77_0 -> m77_1  [key=0, style=solid, color=red];
m77_1 -> m77_2  [key=0, style=solid, color=red];
m77_1 -> m77_55  [key=2, style=dotted, color=red];
m77_2 -> m77_3  [key=0, style=solid, color=red];
m77_2 -> m77_56  [key=2, style=dotted, color=red];
m77_3 -> m77_4  [key=0, style=solid, color=red];
m77_4 -> m77_5  [key=0, style=solid, color=red];
m77_4 -> m77_57  [key=2, style=dotted, color=red];
m77_4 -> m77_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m77_4 -> m77_9  [key=1, style=dashed, color=green, label="Hangfire.States.IBackgroundJobStateChanger"];
m77_4 -> m77_11  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m77_4 -> m77_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m77_4 -> m77_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m77_5 -> m77_6  [key=0, style=solid, color=red];
m77_5 -> m77_57  [key=2, style=dotted, color=red];
m77_5 -> m77_7  [key=1, style=dashed, color=red, label=perPage];
m77_7 -> m77_8  [key=0, style=solid, color=red];
m77_7 -> m77_59  [key=2, style=dotted, color=red];
m77_7 -> m77_60  [key=2, style=dotted, color=red];
m77_7 -> m77_61  [key=2, style=dotted, color=red];
m77_7 -> m77_10  [key=1, style=dashed, color=red, label=pager];
m77_7 -> m77_17  [key=1, style=dashed, color=red, label=pager];
m77_7 -> m77_53  [key=1, style=dashed, color=red, label=pager];
m77_7 -> m77_9  [key=0, style=solid, color=green];
m77_6 -> m77_7  [key=0, style=solid, color=red];
m77_6 -> m77_58  [key=2, style=dotted, color=red];
m77_6 -> m77_8  [key=1, style=dashed, color=red, label=monitor];
m77_6 -> m77_15  [key=0, style=solid];
m77_6 -> m77_16  [key=2, style=dotted];
m77_8 -> m77_9  [key=0, style=solid, color=red];
m77_8 -> m77_62  [key=2, style=dotted, color=red];
m77_8 -> m77_19  [key=1, style=dashed, color=red, label=scheduledJobs];
m77_8 -> m77_15  [key=0, style=solid];
m77_8 -> m77_16  [key=2, style=dotted];
m77_10 -> m77_11  [key=0, style=solid, color=red];
m77_10 -> m77_12  [key=0, style=solid];
m77_10 -> m77_15  [key=0, style=solid, color=green];
m77_10 -> m77_16  [key=2, style=dotted, color=green];
m77_17 -> m77_18  [key=0, style=solid, color=red];
m77_17 -> m77_64  [key=2, style=dotted];
m77_17 -> m77_65  [key=2, style=dotted];
m77_17 -> m77_66  [key=2, style=dotted];
m77_53 -> m77_54  [key=0, style=solid];
m77_53 -> m77_70  [key=2, style=dotted];
m77_53 -> m77_65  [key=2, style=dotted];
m77_53 -> m77_66  [key=2, style=dotted];
m77_9 -> m77_10  [key=0, style=solid, color=green];
m77_9 -> m77_55  [key=2, style=dotted, color=red];
m77_9 -> m77_11  [key=0, style=solid, color=green];
m77_11 -> m77_54  [key=0, style=solid, color=red];
m77_11 -> m77_55  [key=2, style=dotted, color=red];
m77_11 -> m77_12  [key=0, style=solid, color=green];
m77_11 -> m77_17  [key=2, style=dotted, color=green];
m77_12 -> m77_13  [key=0, style=solid];
m77_12 -> m77_55  [key=2, style=dotted];
m77_13 -> m77_14  [key=0, style=solid, color=red];
m77_13 -> m77_61  [key=2, style=dotted];
m77_13 -> m77_63  [key=2, style=dotted];
m77_14 -> m77_15  [key=0, style=solid, color=red];
m77_14 -> m77_55  [key=2, style=dotted, color=red];
m77_14 -> m77_18  [key=2, style=dotted];
m77_14 -> m77_19  [key=2, style=dotted];
m77_15 -> m77_16  [key=0, style=solid, color=red];
m77_15 -> m77_61  [key=2, style=dotted, color=red];
m77_15 -> m77_63  [key=2, style=dotted, color=red];
m77_15 -> m77_4  [key=0, style=bold, color=blue];
m77_18 -> m77_19  [key=0, style=solid, color=red];
m77_18 -> m77_55  [key=2, style=dotted, color=red];
m77_20 -> m77_21  [key=0, style=solid, color=red];
m77_20 -> m77_55  [key=2, style=dotted];
m77_20 -> m77_27  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m77_20 -> m77_28  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m77_20 -> m77_29  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m77_20 -> m77_36  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m77_20 -> m77_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m77_20 -> m77_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m77_20 -> m77_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m77_20 -> m77_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m77_20 -> m77_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m77_52 -> m77_53  [key=0, style=solid];
m77_52 -> m77_55  [key=2, style=dotted];
m77_21 -> m77_22  [key=0, style=solid, color=red];
m77_21 -> m77_63  [key=2, style=dotted, color=red];
m77_21 -> m77_21  [key=1, style=dashed, color=red, label=job];
m77_21 -> m77_23  [key=1, style=dashed, color=red, label=job];
m77_22 -> m77_23  [key=0, style=solid];
m77_22 -> m77_55  [key=2, style=dotted];
m77_22 -> m77_16  [key=2, style=dotted];
m77_22 -> m77_44  [key=0, style=solid];
m77_23 -> m77_24  [key=0, style=solid];
m77_23 -> m77_63  [key=2, style=dotted];
m77_23 -> m77_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_23 -> m77_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_23 -> m77_29  [key=1, style=dashed, color=green, label=connection];
m77_23 -> m77_36  [key=1, style=dashed, color=green, label=connection];
m77_23 -> m77_45  [key=2, style=dotted];
m77_23 -> m77_34  [key=1, style=dashed, color=darkseagreen4, label=connection];
m77_24 -> m77_25  [key=0, style=solid];
m77_24 -> m77_55  [key=2, style=dotted];
m77_24 -> m77_29  [key=1, style=dashed, color=green, label=fetchedJob];
m77_24 -> m77_36  [key=1, style=dashed, color=green, label=fetchedJob];
m77_24 -> m77_39  [key=1, style=dashed, color=green, label=fetchedJob];
m77_24 -> m77_42  [key=1, style=dashed, color=green, label=fetchedJob];
m77_24 -> m77_46  [key=2, style=dotted];
m77_24 -> m77_32  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m77_24 -> m77_34  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m77_24 -> m77_37  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m77_25 -> m77_26  [key=0, style=solid, color=red];
m77_25 -> m77_29  [key=0, style=solid];
m77_25 -> m77_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_25 -> m77_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_25 -> m77_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_25 -> m77_47  [key=2, style=dotted];
m77_26 -> m77_27  [key=0, style=solid, color=green];
m77_26 -> m77_55  [key=2, style=dotted, color=red];
m77_26 -> m77_48  [key=2, style=dotted];
m77_29 -> m77_30  [key=0, style=solid, color=green];
m77_29 -> m77_55  [key=2, style=dotted];
m77_29 -> m77_51  [key=2, style=dotted, color=green];
m77_29 -> m77_52  [key=2, style=dotted, color=green];
m77_27 -> m77_28  [key=0, style=solid, color=green];
m77_27 -> m77_63  [key=2, style=dotted];
m77_27 -> m77_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_27 -> m77_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_27 -> m77_49  [key=2, style=dotted, color=green];
m77_27 -> m77_29  [key=1, style=dashed, color=green, label=linkedCts];
m77_30 -> m77_31  [key=0, style=solid];
m77_30 -> m77_61  [key=2, style=dotted];
m77_30 -> m77_63  [key=2, style=dotted];
m77_30 -> m77_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_30 -> m77_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_30 -> m77_34  [key=0, style=solid];
m77_30 -> m77_53  [key=2, style=dotted];
m77_28 -> m77_29  [key=0, style=solid, color=green];
m77_28 -> m77_55  [key=2, style=dotted];
m77_28 -> m77_50  [key=2, style=dotted, color=green];
m77_31 -> m77_32  [key=0, style=solid];
m77_31 -> m77_55  [key=2, style=dotted];
m77_31 -> m77_47  [key=2, style=dotted];
m77_32 -> m77_33  [key=0, style=solid];
m77_32 -> m77_67  [key=2, style=dotted];
m77_32 -> m77_66  [key=2, style=dotted];
m77_32 -> m77_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_32 -> m77_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_32 -> m77_54  [key=2, style=dotted];
m77_33 -> m77_34  [key=0, style=solid];
m77_33 -> m77_55  [key=2, style=dotted];
m77_33 -> m77_44  [key=0, style=solid];
m77_34 -> m77_35  [key=0, style=solid];
m77_34 -> m77_36  [key=0, style=solid];
m77_34 -> m77_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_34 -> m77_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_34 -> m77_55  [key=2, style=dotted];
m77_35 -> m77_36  [key=0, style=solid, color=green];
m77_35 -> m77_55  [key=2, style=dotted];
m77_35 -> m77_37  [key=0, style=solid];
m77_36 -> m77_37  [key=0, style=solid, color=green];
m77_36 -> m77_55  [key=2, style=dotted];
m77_36 -> m77_56  [key=2, style=dotted, color=green];
m77_36 -> m77_52  [key=2, style=dotted, color=green];
m77_37 -> m77_38  [key=0, style=solid];
m77_37 -> m77_68  [key=2, style=dotted];
m77_37 -> m77_63  [key=2, style=dotted];
m77_37 -> m77_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_37 -> m77_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_37 -> m77_40  [key=0, style=solid];
m77_37 -> m77_44  [key=0, style=solid];
m77_37 -> m77_54  [key=2, style=dotted];
m77_38 -> m77_39  [key=0, style=solid, color=green];
m77_38 -> m77_55  [key=2, style=dotted];
m77_39 -> m77_40  [key=0, style=solid];
m77_39 -> m77_63  [key=2, style=dotted];
m77_39 -> m77_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_39 -> m77_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_39 -> m77_44  [key=0, style=solid, color=green];
m77_39 -> m77_54  [key=2, style=dotted, color=green];
m77_40 -> m77_41  [key=0, style=solid];
m77_40 -> m77_55  [key=2, style=dotted];
m77_41 -> m77_42  [key=0, style=solid, color=green];
m77_41 -> m77_61  [key=2, style=dotted];
m77_41 -> m77_63  [key=2, style=dotted];
m77_41 -> m77_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_41 -> m77_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_41 -> m77_57  [key=2, style=dotted];
m77_42 -> m77_43  [key=0, style=solid, color=green];
m77_42 -> m77_55  [key=2, style=dotted];
m77_42 -> m77_58  [key=2, style=dotted, color=green];
m77_43 -> m77_44  [key=0, style=solid];
m77_43 -> m77_69  [key=2, style=dotted];
m77_43 -> m77_66  [key=2, style=dotted];
m77_43 -> m77_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_43 -> m77_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_44 -> m77_45  [key=0, style=solid];
m77_44 -> m77_55  [key=2, style=dotted];
m77_44 -> m77_20  [key=0, style=bold, color=blue];
m77_46 -> m77_47  [key=0, style=solid];
m77_46 -> m77_55  [key=2, style=dotted];
m77_49 -> m77_50  [key=0, style=solid];
m77_49 -> m77_63  [key=2, style=dotted];
m77_49 -> m77_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m77_50 -> m77_51  [key=0, style=solid];
m77_50 -> m77_55  [key=2, style=dotted];
m77_94 -> m77_11  [key=1, style=dashed, color=green, label="Hangfire.Server.Worker"];
m77_94 -> m77_28  [key=1, style=dashed, color=green, label="Hangfire.Server.Worker"];
m77_94 -> m77_29  [key=1, style=dashed, color=green, label="Hangfire.Server.Worker"];
m77_94 -> m77_36  [key=1, style=dashed, color=green, label="Hangfire.Server.Worker"];
m77_94 -> m77_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m77_94 -> m77_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m77_94 -> m77_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m77_94 -> m77_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m77_94 -> m77_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m77_94 -> m77_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m77_94 -> m77_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m77_94 -> m77_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m80_35 -> m80_80  [key=0, style=solid];
m80_35 -> m80_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.ClientExceptionContext"];
m80_80 -> m80_46  [key=2, style=dotted];
m80_80 -> m80_82  [key=0, style=solid];
m80_80 -> m80_81  [key=0, style=solid];
m80_81 -> m80_80  [key=0, style=solid];
m80_81 -> m80_83  [key=2, style=dotted];
m80_82 -> m80_35  [key=0, style=bold, color=blue];
m80_16 -> m80_21  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m80_16 -> m80_22  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m80_16 -> m80_25  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m80_16 -> m80_17  [key=0, style=solid];
m80_16 -> m80_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreator"];
m80_21 -> m80_22  [key=0, style=solid, color=green];
m80_21 -> m80_32  [key=2, style=dotted, color=green];
m80_21 -> m80_26  [key=1, style=dashed, color=green, label=filterInfo];
m80_19 -> m80_21  [key=0, style=solid, color=green];
m80_19 -> m80_20  [key=0, style=solid];
m80_22 -> m80_23  [key=0, style=solid, color=green];
m80_22 -> m80_33  [key=2, style=dotted, color=green];
m80_26 -> m80_27  [key=0, style=solid, color=green];
m80_26 -> m80_35  [key=2, style=dotted, color=green];
m80_23 -> m80_30  [key=0, style=solid, color=green];
m80_25 -> m80_26  [key=0, style=solid, color=green];
m80_25 -> m80_34  [key=2, style=dotted, color=green];
m80_25 -> m80_27  [key=1, style=dashed, color=green, label=exceptionContext];
m80_24 -> m80_25  [key=0, style=solid, color=green];
m80_27 -> m80_28  [key=0, style=solid, color=green];
m80_27 -> m80_29  [key=0, style=solid, color=green];
m80_28 -> m80_30  [key=0, style=solid];
m80_29 -> m80_30  [key=0, style=solid];
m80_17 -> m80_19  [key=0, style=solid];
m80_17 -> m80_18  [key=0, style=solid];
m80_20 -> m80_30  [key=0, style=solid];
m80_20 -> m80_31  [key=2, style=dotted];
m80_18 -> m80_30  [key=0, style=solid];
m80_18 -> m80_31  [key=2, style=dotted];
m80_30 -> m80_16  [key=0, style=bold, color=blue];
m80_3 -> m80_4  [key=0, style=solid];
m80_3 -> m80_0  [key=0, style=bold, color=blue];
m80_1 -> m80_2  [key=0, style=solid, color=green];
m80_1 -> m80_3  [key=2, style=dotted, color=green];
m80_0 -> m80_1  [key=0, style=solid, color=green];
m80_2 -> m80_0  [key=0, style=bold, color=blue];
m80_2 -> m80_3  [key=0, style=solid];
m80_4 -> m80_3  [key=0, style=bold, color=blue];
m80_4 -> m80_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.CustomJob"];
m80_4 -> m80_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.CustomJob"];
m80_12 -> m80_13  [key=0, style=solid];
m80_50 -> m80_51  [key=0, style=solid, color=green];
m80_50 -> m80_53  [key=2, style=dotted, color=green];
m80_49 -> m80_50  [key=0, style=solid, color=green];
m80_51 -> m80_52  [key=0, style=solid];
m80_51 -> m80_54  [key=2, style=dotted];
m80_55 -> m80_42  [key=1, style=dashed, color=green, label="System.Func<Hangfire.Client.CreatedContext>"];
m80_55 -> m80_58  [key=1, style=dashed, color=green, label="System.Func<Hangfire.Client.CreatedContext>"];
m80_55 -> m80_56  [key=0, style=solid];
m80_58 -> m80_59  [key=0, style=solid, color=green];
m80_58 -> m80_60  [key=2, style=dotted, color=green];
m80_57 -> m80_58  [key=0, style=solid, color=green];
m80_59 -> m80_57  [key=0, style=bold, color=blue];
m80_52 -> m80_49  [key=0, style=bold, color=blue];
m80_56 -> m80_55  [key=0, style=bold, color=blue];
m80_9 -> m80_10  [key=0, style=solid];
m80_9 -> m80_11  [key=2, style=dotted];
m80_9 -> m80_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m80_8 -> m80_9  [key=0, style=solid];
m80_10 -> m80_8  [key=0, style=bold, color=blue];
m80_13 -> m80_14  [key=0, style=solid];
m80_13 -> m80_15  [key=2, style=dotted];
m80_14 -> m80_12  [key=0, style=bold, color=blue];
m80_32 -> m80_36  [key=0, style=solid];
m80_36 -> m80_37  [key=0, style=solid];
m80_36 -> m80_38  [key=2, style=dotted];
m80_36 -> m80_39  [key=2, style=dotted];
m80_37 -> m80_32  [key=0, style=bold, color=blue];
m80_33 -> m80_41  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m80_33 -> m80_50  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m80_33 -> m80_42  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>"];
m80_33 -> m80_40  [key=0, style=solid];
m80_33 -> m80_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m80_41 -> m80_42  [key=0, style=solid, color=green];
m80_40 -> m80_41  [key=0, style=solid, color=green];
m80_40 -> m80_50  [key=1, style=dashed, color=green, label=preContext];
m80_40 -> m80_42  [key=1, style=dashed, color=green, label=preContext];
m80_40 -> m80_58  [key=1, style=dashed, color=green, label=preContext];
m80_40 -> m80_45  [key=2, style=dotted];
m80_42 -> m80_43  [key=0, style=solid, color=green];
m80_42 -> m80_46  [key=2, style=dotted, color=green];
m80_42 -> m80_47  [key=2, style=dotted, color=green];
m80_42 -> m80_55  [key=1, style=dashed, color=green, label="lambda expression"];
m80_43 -> m80_44  [key=0, style=solid, color=green];
m80_43 -> m80_48  [key=2, style=dotted, color=green];
m80_44 -> m80_33  [key=0, style=bold, color=blue];
m80_60 -> m80_61  [key=0, style=solid];
m80_60 -> m80_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m80_60 -> m80_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m80_60 -> m80_66  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Client.CreatedContext>"];
m80_60 -> m80_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m80_60 -> m80_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IClientFilter"];
m80_60 -> m80_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IClientFilter"];
m80_65 -> m80_66  [key=0, style=solid, color=green];
m80_64 -> m80_65  [key=0, style=solid, color=green];
m80_66 -> m80_67  [key=0, style=solid];
m80_66 -> m80_73  [key=0, style=solid];
m80_66 -> m80_78  [key=2, style=dotted];
m80_75 -> m80_76  [key=0, style=solid, color=green];
m80_69 -> m80_75  [key=1, style=dashed, color=green, label=postContext];
m80_69 -> m80_70  [key=0, style=solid];
m80_69 -> m80_54  [key=2, style=dotted];
m80_69 -> m80_71  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m80_69 -> m80_74  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m80_74 -> m80_75  [key=0, style=solid, color=green];
m80_74 -> m80_79  [key=2, style=dotted];
m80_73 -> m80_75  [key=0, style=solid, color=green];
m80_73 -> m80_74  [key=0, style=solid];
m80_72 -> m80_76  [key=0, style=solid, color=green];
m80_71 -> m80_72  [key=0, style=solid, color=green];
m80_71 -> m80_73  [key=0, style=solid];
m80_61 -> m80_62  [key=0, style=solid];
m80_61 -> m80_77  [key=2, style=dotted];
m80_62 -> m80_64  [key=0, style=solid];
m80_62 -> m80_63  [key=0, style=solid];
m80_63 -> m80_76  [key=0, style=solid];
m80_63 -> m80_54  [key=2, style=dotted];
m80_70 -> m80_71  [key=0, style=solid];
m80_70 -> m80_79  [key=2, style=dotted];
m80_67 -> m80_68  [key=0, style=solid];
m80_68 -> m80_69  [key=0, style=solid];
m80_68 -> m80_73  [key=1, style=dashed, color=darkseagreen4, label=wasError];
m80_76 -> m80_60  [key=0, style=bold, color=blue];
m80_5 -> m80_6  [key=0, style=solid];
m80_5 -> m80_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m80_6 -> m80_7  [key=0, style=solid];
m80_7 -> m80_5  [key=0, style=bold, color=blue];
m80_84 -> m80_21  [key=1, style=dashed, color=green, label="Hangfire.Client.DefaultJobCreationProcess"];
m80_84 -> m80_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.DefaultJobCreationProcess"];
m80_84 -> m80_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.DefaultJobCreationProcess"];
m80_86 -> m80_50  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m80_86 -> m80_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m80_87 -> m80_50  [key=1, style=dashed, color=green, label="Hangfire.Client.IJobCreator"];
m80_88 -> m80_50  [key=1, style=dashed, color=green, label=preContext];
m80_88 -> m80_58  [key=1, style=dashed, color=green, label=preContext];
m80_89 -> m80_58  [key=1, style=dashed, color=green, label="System.Func<Hangfire.Client.CreatedContext>"];
m80_90 -> m80_58  [key=1, style=dashed, color=green, label="Hangfire.Client.IClientFilter"];
m80_85 -> m80_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
}
