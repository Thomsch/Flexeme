digraph  {
n121 [label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts", span=""];
n0 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()"];
n1 [label="_supervisor1 = new Mock<IServerSupervisor>()", span="16-16", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()"];
n2 [label="_supervisor2 = new Mock<IServerSupervisor>()", span="17-17", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()"];
n5 [label="Entry Mock<IServerSupervisor>.cstr", span="", cluster="Mock<IServerSupervisor>.cstr"];
n3 [label="_supervisors = new List<IServerSupervisor>\r\n            {\r\n                _supervisor1.Object,\r\n                _supervisor2.Object\r\n            }", span="19-23", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()"];
n4 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()"];
n6 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n7 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()", span="27-27", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()"];
n8 [label="Assert.Throws<ArgumentNullException>(() => new ServerSupervisorCollection(null))", span="29-29", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()"];
n9 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()", span="27-27", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()"];
n10 [label="Entry Unk.>", span="", cluster="Unk.>"];
n11 [label="Entry lambda expression", span="29-29", cluster="lambda expression"];
n12 [label="new ServerSupervisorCollection(null)", span="29-29", cluster="lambda expression"];
n13 [label="Exit lambda expression", span="29-29", cluster="lambda expression"];
n14 [label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)"];
n15 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()"];
n16 [label="var collection = CreateCollection()", span="35-35", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()"];
n17 [label="collection.Start()", span="37-37", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()"];
n21 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", span="149-149", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()"];
n18 [label="_supervisor1.Verify(x => x.Start())", span="39-39", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()"];
n22 [label="Entry Hangfire.Server.ServerSupervisorCollection.Start()", span="36-36", cluster="Hangfire.Server.ServerSupervisorCollection.Start()"];
n19 [label="_supervisor2.Verify(x => x.Start())", span="40-40", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()"];
n23 [label="Entry Unk.Verify", span="", cluster="Unk.Verify"];
n24 [label="Entry lambda expression", span="39-39", cluster="lambda expression"];
n20 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()"];
n28 [label="Entry lambda expression", span="40-40", cluster="lambda expression"];
n25 [label="x.Start()", span="39-39", cluster="lambda expression"];
n26 [label="Exit lambda expression", span="39-39", cluster="lambda expression"];
n27 [label="Entry Unk.Start", span="", cluster="Unk.Start"];
n29 [label="x.Start()", span="40-40", cluster="lambda expression"];
n30 [label="Exit lambda expression", span="40-40", cluster="lambda expression"];
n31 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", span="44-44", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()"];
n32 [label="var collection = CreateCollection()", span="46-46", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()"];
n33 [label="collection.Stop()", span="48-48", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()"];
n34 [label="_supervisor1.Verify(x => x.Stop())", span="50-50", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()"];
n37 [label="Entry Hangfire.Server.ServerSupervisorCollection.Stop()", span="44-44", cluster="Hangfire.Server.ServerSupervisorCollection.Stop()"];
n35 [label="_supervisor2.Verify(x => x.Stop())", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()"];
n38 [label="Entry lambda expression", span="50-50", cluster="lambda expression"];
n36 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", span="44-44", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()"];
n42 [label="Entry lambda expression", span="51-51", cluster="lambda expression"];
n39 [label="x.Stop()", span="50-50", cluster="lambda expression"];
n40 [label="Exit lambda expression", span="50-50", cluster="lambda expression"];
n41 [label="Entry Unk.Stop", span="", cluster="Unk.Stop"];
n43 [label="x.Stop()", span="51-51", cluster="lambda expression"];
n44 [label="Exit lambda expression", span="51-51", cluster="lambda expression"];
n45 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()"];
n46 [label="var collection = CreateCollection()", span="57-57", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()"];
n47 [label="collection.Dispose()", span="59-59", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()"];
n48 [label="_supervisor1.Verify(x => x.Dispose())", span="61-61", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()"];
n51 [label="Entry Hangfire.Server.ServerSupervisorCollection.Dispose()", span="52-52", cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()"];
n49 [label="_supervisor2.Verify(x => x.Dispose())", span="62-62", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()"];
n52 [label="Entry lambda expression", span="61-61", cluster="lambda expression"];
n50 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()"];
n56 [label="Entry lambda expression", span="62-62", cluster="lambda expression"];
n53 [label="x.Dispose()", span="61-61", cluster="lambda expression"];
n54 [label="Exit lambda expression", span="61-61", cluster="lambda expression"];
n55 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose"];
n57 [label="x.Dispose()", span="62-62", cluster="lambda expression"];
n58 [label="Exit lambda expression", span="62-62", cluster="lambda expression"];
n59 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", span="66-66", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()"];
n60 [label="var collection = CreateCollection()", span="68-68", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()"];
n61 [label="collection.Dispose()", span="70-70", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()"];
n62 [label="_supervisor1.Verify(x => x.Stop())", span="72-72", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()"];
n63 [label="_supervisor2.Verify(x => x.Stop())", span="73-73", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()"];
n65 [label="Entry lambda expression", span="72-72", cluster="lambda expression"];
n64 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", span="66-66", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()"];
n68 [label="Entry lambda expression", span="73-73", cluster="lambda expression"];
n66 [label="x.Stop()", span="72-72", cluster="lambda expression"];
n67 [label="Exit lambda expression", span="72-72", cluster="lambda expression"];
n69 [label="x.Stop()", span="73-73", cluster="lambda expression"];
n70 [label="Exit lambda expression", span="73-73", cluster="lambda expression"];
n71 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()"];
n72 [label="var collection = CreateCollection()", span="79-79", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()"];
n73 [label="Assert.Equal(2, collection.Count)", span="81-81", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()"];
n74 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()"];
n75 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n76 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()"];
n77 [label="var collection = CreateCollection()", span="87-87", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()"];
n78 [label="collection.Add(new Mock<IServerSupervisor>().Object)", span="89-89", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()"];
n79 [label="Assert.Equal(3, collection.Count)", span="91-91", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()"];
n81 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
n80 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()"];
n82 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()"];
n83 [label="var collection = CreateCollection()", span="97-97", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()"];
n84 [label="collection.Clear()", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()"];
n85 [label="Assert.Equal(0, collection.Count)", span="101-101", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()"];
n87 [label="Entry Hangfire.Server.ServerSupervisorCollection.Clear()", span="77-77", cluster="Hangfire.Server.ServerSupervisorCollection.Clear()"];
n86 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()"];
n88 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()"];
n89 [label="var element = new Mock<IServerSupervisor>()", span="107-107", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()"];
n90 [label="var collection = CreateCollection()", span="108-108", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()"];
n91 [label="Assert.False(collection.Contains(element.Object))", span="110-110", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()"];
n92 [label="collection.Add(element.Object)", span="112-112", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()"];
n93 [label="Assert.True(collection.Contains(element.Object))", span="114-114", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()"];
n95 [label="Entry Unk.Contains", span="", cluster="Unk.Contains"];
n96 [label="Entry Unk.False", span="", cluster="Unk.False"];
n94 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()"];
n97 [label="Entry Unk.True", span="", cluster="Unk.True"];
n98 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()"];
n99 [label="var supervisor = new Mock<IServerSupervisor>()", span="120-120", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()"];
n100 [label="var collection = CreateCollection()", span="121-121", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()"];
n101 [label="collection.Add(supervisor.Object)", span="122-122", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()"];
n102 [label="collection.Remove(supervisor.Object)", span="124-124", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()"];
n103 [label="Assert.False(collection.Contains(supervisor.Object))", span="126-126", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()"];
n105 [label="Entry Unk.Remove", span="", cluster="Unk.Remove"];
n104 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()"];
n106 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()"];
n107 [label="var collection = CreateCollection()", span="132-132", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()"];
n108 [label="Assert.False(collection.IsReadOnly)", span="134-134", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()"];
n109 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()"];
n110 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", span="138-138", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()"];
n111 [label="var collection = CreateCollection()", span="140-140", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()"];
n112 [label="var array = new IServerSupervisor[3]", span="141-141", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()"];
n113 [label="collection.CopyTo(array, 1)", span="143-143", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()"];
n114 [label="Assert.Same(_supervisor1.Object, array[1])", span="145-145", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()"];
n115 [label="Assert.Same(_supervisor2.Object, array[2])", span="146-146", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()"];
n117 [label="Entry Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", span="87-87", cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)"];
n118 [label="Entry Unk.Same", span="", cluster="Unk.Same"];
n116 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", span="138-138", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()"];
n119 [label="return new ServerSupervisorCollection(_supervisors);", span="151-151", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()"];
n120 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", span="149-149", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()"];
m0_37 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="BackgroundProcessContext.cs"];
m0_11 [label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m0_12 [label="Entry Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="48-48", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m0_22 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="BackgroundProcessContext.cs"];
m0_39 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="BackgroundProcessContext.cs"];
m0_41 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="BackgroundProcessContext.cs"];
m0_21 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundProcessContext.cs"];
m0_20 [label="Entry Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="72-72", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_31 [label="var stateMachine = _stateMachineFactory(context.Storage).Create(connection)", span="87-87", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_26 [label="var connection = _storage.GetConnection()", span="74-74", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_29 [label="String.IsNullOrEmpty(jobId)", span="82-82", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_32 [label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="88-91", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_33 [label="stateMachine.ChangeState(jobId, enqueuedState, new[] { ScheduledState.StateName })", span="93-93", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_27 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="76-76", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_28 [label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="79-80", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_30 [label="return false;", span="84-84", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_34 [label="return true;", span="95-95", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_35 [label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="72-72", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="BackgroundProcessContext.cs"];
m0_40 [label="Entry Unk._stateMachineFactory", span="", cluster="Unk._stateMachineFactory", file="BackgroundProcessContext.cs"];
m0_0 [label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m0_1 [label="serverId == null", span="31-31", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m0_3 [label="storage == null", span="40-40", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundProcessContext.cs"];
m0_5 [label="stateMachineFactory == null", span="41-41", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundProcessContext.cs"];
m0_7 [label="_storage = storage", span="43-43", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundProcessContext.cs"];
m0_8 [label="_stateMachineFactory = stateMachineFactory", span="44-44", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundProcessContext.cs"];
m0_9 [label="_pollInterval = pollInterval", span="45-45", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundProcessContext.cs"];
m0_10 [label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", span="38-38", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundProcessContext.cs"];
m0_2 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", span="38-38", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundProcessContext.cs"];
m0_4 [label="throw new ArgumentNullException(''storage'');", span="40-40", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundProcessContext.cs"];
m0_6 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="41-41", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="BackgroundProcessContext.cs"];
m0_42 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="BackgroundProcessContext.cs"];
m0_38 [label="Entry Unk.GetFirstByLowestScoreFromSet", span="", cluster="Unk.GetFirstByLowestScoreFromSet", file="BackgroundProcessContext.cs"];
m0_36 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="BackgroundProcessContext.cs"];
m0_17 [label="cancellationToken.WaitHandle.WaitOne(_pollInterval)", span="58-58", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundProcessContext.cs"];
m0_14 [label="Hangfire.Server.BackgroundProcessContext", span="", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundProcessContext.cs"];
m0_16 [label="_enqueuedCount = 0", span="55-55", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundProcessContext.cs"];
m0_13 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="BackgroundProcessContext.cs"];
m0_15 [label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", span="54-54", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundProcessContext.cs"];
m0_18 [label="_enqueuedCount++", span="63-63", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m0_19 [label="Exit Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="48-48", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m0_43 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="BackgroundProcessContext.cs"];
m0_44 [label="Hangfire.Server.SchedulePoller", span="", file="BackgroundProcessContext.cs"];
m1_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundProcessContextExtensions.cs"];
m1_6 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="BackgroundProcessContextExtensions.cs"];
m1_7 [label="Entry Hangfire.Server.BackgroundProcessContextExtensions.SleepOrThrow(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", span="29-29", cluster="Hangfire.Server.BackgroundProcessContextExtensions.SleepOrThrow(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", file="BackgroundProcessContextExtensions.cs"];
m1_8 [label="context == null", span="31-31", cluster="Hangfire.Server.BackgroundProcessContextExtensions.SleepOrThrow(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", color=red, community=0, file="BackgroundProcessContextExtensions.cs"];
m1_10 [label="context.CancellationToken.WaitHandle.WaitOne(timeout)", span="32-32", cluster="Hangfire.Server.BackgroundProcessContextExtensions.SleepOrThrow(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", color=red, community=0, file="BackgroundProcessContextExtensions.cs"];
m1_11 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="33-33", cluster="Hangfire.Server.BackgroundProcessContextExtensions.SleepOrThrow(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", color=red, community=0, file="BackgroundProcessContextExtensions.cs"];
m1_9 [label="throw new ArgumentNullException(''context'');", span="31-31", cluster="Hangfire.Server.BackgroundProcessContextExtensions.SleepOrThrow(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", color=red, community=0, file="BackgroundProcessContextExtensions.cs"];
m1_12 [label="Exit Hangfire.Server.BackgroundProcessContextExtensions.SleepOrThrow(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", span="29-29", cluster="Hangfire.Server.BackgroundProcessContextExtensions.SleepOrThrow(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", file="BackgroundProcessContextExtensions.cs"];
m1_0 [label="Entry Hangfire.Server.BackgroundProcessContextExtensions.Sleep(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", span="23-23", cluster="Hangfire.Server.BackgroundProcessContextExtensions.Sleep(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", file="BackgroundProcessContextExtensions.cs"];
m1_1 [label="context == null", span="25-25", cluster="Hangfire.Server.BackgroundProcessContextExtensions.Sleep(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", color=red, community=0, file="BackgroundProcessContextExtensions.cs"];
m1_3 [label="return context.CancellationToken.WaitHandle.WaitOne(timeout);", span="26-26", cluster="Hangfire.Server.BackgroundProcessContextExtensions.Sleep(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", color=red, community=0, file="BackgroundProcessContextExtensions.cs"];
m1_2 [label="throw new ArgumentNullException(''context'');", span="25-25", cluster="Hangfire.Server.BackgroundProcessContextExtensions.Sleep(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", color=red, community=0, file="BackgroundProcessContextExtensions.cs"];
m1_4 [label="Exit Hangfire.Server.BackgroundProcessContextExtensions.Sleep(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", span="23-23", cluster="Hangfire.Server.BackgroundProcessContextExtensions.Sleep(Hangfire.Server.BackgroundProcessContext, System.TimeSpan)", file="BackgroundProcessContextExtensions.cs"];
m1_13 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="BackgroundProcessContextExtensions.cs"];
m4_6 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new CoreBackgroundJobPerformer(null))", span="28-30", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_8 [label="Assert.Equal(''activator'', exception.ParamName)", span="32-32", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_9 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_190 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_191 [label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m4_192 [label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m4_193 [label="var performer = CreatePerformer()", span="229-229", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=1, file="CoreBackgroundJobPerformerFacts.cs"];
m4_194 [label="Assert.Throws<OperationCanceledException>(\r\n                () => performer.Perform(_context.Object))", span="232-233", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m4_195 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_90 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_77 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_53 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_219 [label="_methodInvoked = true", span="256-256", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_220 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_101 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_239 [label="_methodInvoked = true", span="296-296", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_240 [label="Assert.Equal(SomeDateTime, argument)", span="298-298", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_241 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_157 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="CoreBackgroundJobPerformerFacts.cs"];
m4_24 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_251 [label="return new CoreBackgroundJobPerformer(_activator.Object);", span="321-321", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_252 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_0 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_1 [label="_activator = new Mock<JobActivator>() { CallBase = true }", span="21-21", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_2 [label="_context = new PerformContextMock()", span="22-22", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_3 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_38 [label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="286-286", cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_91 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", span="128-128", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_93 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="132-132", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_94 [label="var performer = CreatePerformer()", span="133-133", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_95 [label="performer.Perform(_context.Object)", span="136-136", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_92 [label="_methodInvoked = false", span="131-131", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_96 [label="Assert.True(_methodInvoked)", span="139-139", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_97 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", span="128-128", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_78 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_79 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CoreBackgroundJobPerformerFacts.cs"];
m4_207 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_208 [label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_209 [label="var performer = CreatePerformer()", span="240-240", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_210 [label="var result = performer.Perform(_context.Object)", span="242-242", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_211 [label="Assert.Equal(''Return value'', result)", span="244-244", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_212 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_120 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_186 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_248 [label="throw new InvalidOperationException(''exception'');", span="316-316", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_249 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="CoreBackgroundJobPerformerFacts.cs"];
m4_102 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_104 [label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_105 [label="var performer = CreatePerformer()", span="149-149", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_106 [label="performer.Perform(_context.Object)", span="151-151", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_103 [label="_methodInvoked = false", span="146-146", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_107 [label="Assert.True(_methodInvoked)", span="154-154", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_108 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_203 [label="Entry Unk.ThrowIfCancellationRequested", span="", cluster="Unk.ThrowIfCancellationRequested", file="CoreBackgroundJobPerformerFacts.cs"];
m4_54 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_56 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_57 [label="var performer = CreatePerformer()", span="77-77", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_58 [label="performer.Perform(_context.Object)", span="80-80", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_55 [label="_methodInvoked = false", span="75-75", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_59 [label="Assert.True(_methodInvoked)", span="83-83", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_60 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_15 [label="Entry Hangfire.Server.CoreBackgroundJobPerformer.CoreBackgroundJobPerformer(Hangfire.JobActivator)", span="35-35", cluster="Hangfire.Server.CoreBackgroundJobPerformer.CoreBackgroundJobPerformer(Hangfire.JobActivator)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_64 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_244 [label="_methodInvoked = true", span="308-308", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_245 [label="Assert.Equal(''hello'', stringArg)", span="310-310", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_246 [label="Assert.Equal(5, intArg)", span="311-311", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_247 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_250 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_65 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_71 [label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="97-97", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_72 [label="var performer = CreatePerformer()", span="98-98", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_73 [label="performer.Perform(_context.Object)", span="101-101", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_68 [label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="92-92", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_69 [label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="94-94", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_70 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="95-95", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_74 [label="Assert.True(_methodInvoked)", span="104-104", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_67 [label="var typeConverter = TypeDescriptor.GetConverter(typeof(DateTime))", span="91-91", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_66 [label="_methodInvoked = false", span="90-90", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_75 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_76 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_25 [label="Entry Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="41-41", cluster="Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_158 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="CoreBackgroundJobPerformerFacts.cs"];
m4_162 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_164 [label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_165 [label="var performer = CreatePerformer()", span="202-202", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_166 [label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="204-205", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_163 [label="_methodInvoked = false", span="200-200", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_167 [label="Assert.True(_methodInvoked)", span="207-207", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_168 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_16 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", span="36-36", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_18 [label="_context.BackgroundJob.Job = Job.FromExpression(() => StaticMethod())", span="39-39", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_19 [label="var performer = CreatePerformer()", span="40-40", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_20 [label="performer.Perform(_context.Object)", span="42-42", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_17 [label="_methodInvoked = false", span="38-38", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_21 [label="Assert.True(_methodInvoked)", span="44-44", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_22 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", span="36-36", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_121 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="CoreBackgroundJobPerformerFacts.cs"];
m4_113 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_115 [label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="162-162", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_116 [label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="164-164", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_117 [label="var performer = CreatePerformer()", span="165-165", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_118 [label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="168-169", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_114 [label="var exception = new InvalidOperationException()", span="161-161", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_119 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_122 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="CoreBackgroundJobPerformerFacts.cs"];
m4_235 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="CoreBackgroundJobPerformerFacts.cs"];
m4_149 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_152 [label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_153 [label="var performer = CreatePerformer()", span="189-189", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_154 [label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="191-192", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_150 [label="var type = typeof(JobFacts)", span="186-186", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_151 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_155 [label="Assert.NotNull(exception.InnerException)", span="194-194", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_156 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_253 [label="Entry CoreBackgroundJobPerformer.cstr", span="", cluster="CoreBackgroundJobPerformer.cstr", file="CoreBackgroundJobPerformerFacts.cs"];
m4_43 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_45 [label="_context.BackgroundJob.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_46 [label="var performer = CreatePerformer()", span="64-64", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_47 [label="performer.Perform(_context.Object)", span="66-66", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_44 [label="_disposed = false", span="62-62", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_48 [label="Assert.True(_disposed)", span="68-68", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_49 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_133 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_134 [label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_135 [label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_136 [label="var performer = CreatePerformer()", span="177-177", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_137 [label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="179-180", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_138 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_12 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_196 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_200 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_205 [label="performer.Perform(_context.Object)", span="233-233", cluster="lambda expression", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m4_204 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_206 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_197 [label="CancelableJob(JobCancellationToken.Null)", span="227-227", cluster="lambda expression", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m4_198 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_201 [label="x.ThrowIfCancellationRequested()", span="228-228", cluster="lambda expression", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m4_202 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_62 [label="MethodWithArguments(''hello'', 5)", span="76-76", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_99 [label="MethodWithDateTimeArgument(SomeDateTime)", span="132-132", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_128 [label="InstanceMethod()", span="164-164", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_131 [label="performer.Perform(_context.Object)", span="169-169", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_144 [label="InstanceMethod()", span="176-176", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_147 [label="performer.Perform(_context.Object)", span="180-180", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_160 [label="performer.Perform(_context.Object)", span="192-192", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_174 [label="performer.Perform(_context.Object)", span="205-205", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_188 [label="performer.Perform(_context.Object)", span="217-217", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_124 [label="x.ActivateJob(It.IsAny<Type>())", span="162-162", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_141 [label="x.ActivateJob(It.IsNotNull<Type>())", span="175-175", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_27 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_39 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_50 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_61 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_63 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_98 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_100 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_109 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_123 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_127 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_129 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_130 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_132 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_140 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_143 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_145 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_146 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_148 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_159 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_161 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_169 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_173 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_175 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_183 [label="Entry lambda expression", span="213-213", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_187 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_189 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_213 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_125 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_142 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_29 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_28 [label="StaticMethod()", span="39-39", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_41 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_40 [label="x.InstanceMethod()", span="51-51", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_52 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_51 [label="x.Method()", span="63-63", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_110 [label="NullArgumentMethod(null)", span="147-147", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_111 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_171 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_170 [label="x.Method()", span="201-201", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_185 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_184 [label="ExceptionMethod()", span="213-213", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_215 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_214 [label="x.FunctionReturningValue()", span="239-239", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_13 [label="new CoreBackgroundJobPerformer(null)", span="30-30", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_14 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m4_216 [label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571", cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_126 [label="Entry Unk.ActivateJob", span="", cluster="Unk.ActivateJob", file="CoreBackgroundJobPerformerFacts.cs"];
m4_80 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_85 [label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_86 [label="var performer = CreatePerformer()", span="118-118", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_87 [label="performer.Perform(_context.Object)", span="121-121", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_82 [label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="112-112", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_83 [label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="114-114", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_84 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="115-115", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_88 [label="Assert.True(_methodInvoked)", span="124-124", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_81 [label="_methodInvoked = false", span="111-111", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_89 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_4 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="CoreBackgroundJobPerformerFacts.cs"];
m4_238 [label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24", cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_172 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_224 [label="_methodInvoked = true", span="269-269", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_225 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_31 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_33 [label="_context.BackgroundJob.Job = Job.FromExpression<CoreBackgroundJobPerformerFacts>(x => x.InstanceMethod())", span="51-51", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_34 [label="var performer = CreatePerformer()", span="52-52", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_35 [label="performer.Perform(_context.Object)", span="54-54", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_32 [label="_methodInvoked = false", span="50-50", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_36 [label="Assert.True(_methodInvoked)", span="56-56", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_37 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_26 [label="Entry Unk.True", span="", cluster="Unk.True", file="CoreBackgroundJobPerformerFacts.cs"];
m4_176 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_177 [label="_context.BackgroundJob.Job = Job.FromExpression(() => ExceptionMethod())", span="213-213", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_178 [label="var performer = CreatePerformer()", span="214-214", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_179 [label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="216-217", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_180 [label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="219-219", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_181 [label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_182 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_139 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="CoreBackgroundJobPerformerFacts.cs"];
m4_30 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_242 [label="_methodInvoked = true", span="303-303", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_243 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_199 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_236 [label="token.ThrowIfCancellationRequested()", span="291-291", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_237 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_112 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="CoreBackgroundJobPerformerFacts.cs"];
m4_232 [label="_methodInvoked = true", span="285-285", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="CoreBackgroundJobPerformerFacts.cs"];
m4_233 [label="Assert.Null(argument)", span="286-286", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="CoreBackgroundJobPerformerFacts.cs"];
m4_234 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="CoreBackgroundJobPerformerFacts.cs"];
m4_5 [label="Entry Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12", cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_226 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_227 [label="throw new InvalidOperationException();", span="274-274", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_228 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_42 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_217 [label="_methodInvoked = true", span="249-249", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_218 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m4_23 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="232-232", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CoreBackgroundJobPerformerFacts.cs"];
m4_254 [label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", span="", file="CoreBackgroundJobPerformerFacts.cs"];
m4_260 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m4_255 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m4_256 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m4_257 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m4_258 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m4_259 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m5_20 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CountersAggregator.cs"];
m5_29 [label="Entry Unk.IncrementValue", span="", cluster="Unk.IncrementValue", file="CountersAggregator.cs"];
m5_25 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="CountersAggregator.cs"];
m5_23 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="CountersAggregator.cs"];
m5_24 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CountersAggregator.cs"];
m5_22 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="CountersAggregator.cs"];
m5_37 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="CountersAggregator.cs"];
m5_16 [label="transaction.QueueCommand(x => x.ExpireEntryIn(hourlyFailedKey, TimeSpan.FromDays(1)))", span="38-38", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_0 [label="Entry HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_1 [label="redis == null", span="10-10", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_3 [label="state == null", span="11-11", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_5 [label="var transaction = redis.CreateTransaction()", span="13-13", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_6 [label="state.StateName == SucceededState.Name", span="15-15", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_11 [label="state.StateName == FailedState.Name", span="26-26", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_18 [label="return state;", span="44-44", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_2 [label="throw new ArgumentNullException(''redis'');", span="10-10", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_4 [label="throw new ArgumentNullException(''state'');", span="11-11", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_7 [label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:succeeded:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd''))))", span="17-18", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_9 [label="transaction.QueueCommand(x => x.IncrementValue(hourlySucceededKey))", span="23-23", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_10 [label="transaction.QueueCommand(x => x.ExpireEntryIn(hourlySucceededKey, TimeSpan.FromDays(1)))", span="24-24", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_12 [label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd''))))", span="28-29", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_13 [label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-ddTHH-mm''))))", span="31-32", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_15 [label="transaction.QueueCommand(x => x.IncrementValue(hourlyFailedKey))", span="37-37", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_17 [label="transaction.Commit()", span="41-41", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_8 [label="var hourlySucceededKey = String.Format(\r\n                        ''hangfire:stats:succeeded:{0}'',\r\n                        DateTime.UtcNow.ToString(''yyyy-MM-dd-HH''))", span="20-22", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_14 [label="var hourlyFailedKey = String.Format(\r\n                        ''hangfire:stats:failed:{0}'',\r\n                        DateTime.UtcNow.ToString(''yyyy-MM-dd-HH''))", span="34-36", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_19 [label="Exit HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8", cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="CountersAggregator.cs"];
m5_36 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="CountersAggregator.cs"];
m5_33 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="CountersAggregator.cs"];
m5_26 [label="Entry lambda expression", span="17-18", cluster="lambda expression", file="CountersAggregator.cs"];
m5_31 [label="x.IncrementValue(hourlySucceededKey)", span="23-23", cluster="lambda expression", file="CountersAggregator.cs"];
m5_34 [label="x.ExpireEntryIn(hourlySucceededKey, TimeSpan.FromDays(1))", span="24-24", cluster="lambda expression", file="CountersAggregator.cs"];
m5_30 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="CountersAggregator.cs"];
m5_38 [label="Entry lambda expression", span="28-29", cluster="lambda expression", file="CountersAggregator.cs"];
m5_41 [label="Entry lambda expression", span="31-32", cluster="lambda expression", file="CountersAggregator.cs"];
m5_45 [label="x.IncrementValue(hourlyFailedKey)", span="37-37", cluster="lambda expression", file="CountersAggregator.cs"];
m5_48 [label="x.ExpireEntryIn(hourlyFailedKey, TimeSpan.FromDays(1))", span="38-38", cluster="lambda expression", file="CountersAggregator.cs"];
m5_44 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="CountersAggregator.cs"];
m5_47 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="CountersAggregator.cs"];
m5_27 [label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:succeeded:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd'')))", span="17-18", cluster="lambda expression", file="CountersAggregator.cs"];
m5_28 [label="Exit lambda expression", span="17-18", cluster="lambda expression", file="CountersAggregator.cs"];
m5_32 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="CountersAggregator.cs"];
m5_35 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="CountersAggregator.cs"];
m5_39 [label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd'')))", span="28-29", cluster="lambda expression", file="CountersAggregator.cs"];
m5_40 [label="Exit lambda expression", span="28-29", cluster="lambda expression", file="CountersAggregator.cs"];
m5_42 [label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-ddTHH-mm'')))", span="31-32", cluster="lambda expression", file="CountersAggregator.cs"];
m5_43 [label="Exit lambda expression", span="31-32", cluster="lambda expression", file="CountersAggregator.cs"];
m5_46 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="CountersAggregator.cs"];
m5_49 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="CountersAggregator.cs"];
m5_21 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="CountersAggregator.cs"];
m5_50 [label=hourlySucceededKey, span="", file="CountersAggregator.cs"];
m5_51 [label=hourlyFailedKey, span="", file="CountersAggregator.cs"];
m6_44 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="DelayedJobScheduler.cs"];
m6_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DelayedJobScheduler.cs"];
m6_43 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DelayedJobScheduler.cs"];
m6_42 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="DelayedJobScheduler.cs"];
m6_2 [label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="91-91", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", file="DelayedJobScheduler.cs"];
m6_3 [label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="91-91", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", file="DelayedJobScheduler.cs"];
m6_46 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="DelayedJobScheduler.cs"];
m6_47 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="DelayedJobScheduler.cs"];
m6_22 [label="Entry Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="143-143", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_29 [label="var connection = context.Storage.GetConnection()", span="145-145", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_35 [label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = String.Format(''Triggered by {0}'', ToString()) }, \r\n                    ScheduledState.StateName))", span="159-164", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_30 [label="connection.AcquireDistributedLock(''locks:schedulepoller'', DefaultLockTimeout)", span="146-146", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_32 [label="var jobId = connection.GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="151-151", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_37 [label="var transaction = connection.CreateWriteTransaction()", span="171-171", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_31 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="148-148", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_33 [label="jobId == null", span="153-153", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_38 [label="transaction.RemoveFromSet(''schedule'', jobId)", span="173-173", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_34 [label="return false;", span="156-156", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_36 [label="appliedState == null", span="166-166", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_40 [label="return true;", span="178-178", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_39 [label="transaction.Commit()", span="174-174", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_41 [label="Exit Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="143-143", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_28 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DelayedJobScheduler.cs"];
m6_48 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="DelayedJobScheduler.cs"];
m6_51 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="DelayedJobScheduler.cs"];
m6_24 [label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23", cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="DelayedJobScheduler.cs"];
m6_50 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="DelayedJobScheduler.cs"];
m6_25 [label="Entry Hangfire.Server.DelayedJobScheduler.ToString()", span="138-138", cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="DelayedJobScheduler.cs"];
m6_26 [label="return GetType().Name;", span="140-140", cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="DelayedJobScheduler.cs"];
m6_27 [label="Exit Hangfire.Server.DelayedJobScheduler.ToString()", span="138-138", cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="DelayedJobScheduler.cs"];
m6_52 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="DelayedJobScheduler.cs"];
m6_45 [label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57", cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DelayedJobScheduler.cs"];
m6_23 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="DelayedJobScheduler.cs"];
m6_0 [label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="81-81", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", file="DelayedJobScheduler.cs"];
m6_1 [label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="81-81", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", file="DelayedJobScheduler.cs"];
m6_49 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="DelayedJobScheduler.cs"];
m6_11 [label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_12 [label="context == null", span="115-115", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_15 [label="EnqueueNextScheduledJob(context)", span="119-119", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_17 [label="context.CancellationToken.IsCancellationRequested", span="123-123", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="DelayedJobScheduler.cs"];
m6_20 [label="context.Sleep(_pollingDelay)", span="134-134", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="DelayedJobScheduler.cs"];
m6_13 [label="throw new ArgumentNullException(''context'');", span="115-115", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_14 [label="var jobsEnqueued = 0", span="117-117", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_16 [label="jobsEnqueued++", span="121-121", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_18 [label="jobsEnqueued != 0", span="129-129", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_19 [label="Logger.InfoFormat(''{0} scheduled job(s) enqueued.'', jobsEnqueued)", span="131-131", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_21 [label="Exit Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DelayedJobScheduler.cs"];
m6_4 [label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs"];
m6_5 [label="stateChanger == null", span="106-106", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs"];
m6_7 [label="_stateChanger = stateChanger", span="108-108", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs"];
m6_8 [label="_pollingDelay = pollingDelay", span="109-109", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs"];
m6_6 [label="throw new ArgumentNullException(''stateChanger'');", span="106-106", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs"];
m6_9 [label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="DelayedJobScheduler.cs"];
m6_53 [label="Hangfire.Server.DelayedJobScheduler", span="", file="DelayedJobScheduler.cs"];
m7_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EmbeddedResourceDispatcher.cs"];
m7_10 [label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", span="43-43", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="EmbeddedResourceDispatcher.cs"];
m7_11 [label="var owinContext = new OwinContext(context.OwinEnvironment)", span="45-45", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="EmbeddedResourceDispatcher.cs"];
m7_12 [label="owinContext.Response.ContentType = _contentType", span="47-47", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="EmbeddedResourceDispatcher.cs"];
m7_13 [label="owinContext.Response.Expires = DateTime.Now.AddYears(1)", span="48-48", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="EmbeddedResourceDispatcher.cs"];
m7_14 [label="WriteResponse(owinContext.Response)", span="50-50", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="EmbeddedResourceDispatcher.cs"];
m7_15 [label="return Task.FromResult(true);", span="52-52", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="EmbeddedResourceDispatcher.cs"];
m7_16 [label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", span="43-43", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="EmbeddedResourceDispatcher.cs"];
m7_20 [label="Entry System.Threading.Tasks.Task.FromResult<TResult>(TResult)", span="0-0", cluster="System.Threading.Tasks.Task.FromResult<TResult>(TResult)", file="EmbeddedResourceDispatcher.cs"];
m7_35 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="EmbeddedResourceDispatcher.cs"];
m7_19 [label="Entry Unk.WriteResponse", span="", cluster="Unk.WriteResponse", file="EmbeddedResourceDispatcher.cs"];
m7_37 [label="Entry System.Math.Min(long, long)", span="0-0", cluster="System.Math.Min(long, long)", file="EmbeddedResourceDispatcher.cs"];
m7_36 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="EmbeddedResourceDispatcher.cs"];
m7_18 [label="Entry System.DateTime.AddYears(int)", span="0-0", cluster="System.DateTime.AddYears(int)", file="EmbeddedResourceDispatcher.cs"];
m7_24 [label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="60-60", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_25 [label="var inputStream = assembly.GetManifestResourceStream(resourceName)", span="62-62", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_27 [label="throw new ArgumentException(string.Format(\r\n                        @''Resource with name {0} not found in assembly {1}.'',\r\n                        resourceName, assembly));", span="66-68", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_31 [label="response.Write(buffer, 0, readLength)", span="75-75", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceDispatcher.cs"];
m7_26 [label="inputStream == null", span="64-64", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_28 [label="var buffer = new byte[Math.Min(inputStream.Length, 4096)]", span="71-71", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m7_29 [label="var readLength = inputStream.Read(buffer, 0, buffer.Length)", span="72-72", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceDispatcher.cs"];
m7_32 [label="readLength = inputStream.Read(buffer, 0, buffer.Length)", span="76-76", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceDispatcher.cs"];
m7_30 [label="readLength > 0", span="73-73", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceDispatcher.cs"];
m7_33 [label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="60-60", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_38 [label="Entry System.IO.Stream.Read(byte[], int, int)", span="0-0", cluster="System.IO.Stream.Read(byte[], int, int)", file="EmbeddedResourceDispatcher.cs"];
m7_0 [label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="30-30", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_1 [label="contentType == null", span="35-35", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_3 [label="assembly == null", span="36-36", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_5 [label="_assembly = assembly", span="38-38", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_6 [label="_resourceName = resourceName", span="39-39", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_7 [label="_contentType = contentType", span="40-40", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_2 [label="throw new ArgumentNullException(''contentType'');", span="35-35", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_4 [label="throw new ArgumentNullException(''assembly'');", span="36-36", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_8 [label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="30-30", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m7_17 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="EmbeddedResourceDispatcher.cs"];
m7_34 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="EmbeddedResourceDispatcher.cs"];
m7_39 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="EmbeddedResourceDispatcher.cs"];
m7_21 [label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="55-55", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="EmbeddedResourceDispatcher.cs"];
m7_22 [label="WriteResource(response, _assembly, _resourceName)", span="57-57", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="EmbeddedResourceDispatcher.cs"];
m7_23 [label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="55-55", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="EmbeddedResourceDispatcher.cs"];
m7_40 [label="Hangfire.Dashboard.EmbeddedResourceDispatcher", span="", file="EmbeddedResourceDispatcher.cs"];
m9_36 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37", cluster="HangFire.JobHelper.FromJson<T>(string)", file="InfiniteLoopProcess.cs"];
m9_291 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="InfiniteLoopProcess.cs"];
m9_30 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="InfiniteLoopProcess.cs"];
m9_11 [label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="InfiniteLoopProcess.cs"];
m9_12 [label=Redis, span="30-30", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="InfiniteLoopProcess.cs"];
m9_13 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="InfiniteLoopProcess.cs"];
m9_133 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="InfiniteLoopProcess.cs"];
m9_43 [label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_44 [label=Redis, span="82-82", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_45 [label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="84-87", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_46 [label="scheduledJobs.Count == 0", span="89-89", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_51 [label=scheduledJobs, span="99-99", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_56 [label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_47 [label="return new Dictionary<string, ScheduleDto>();", span="91-91", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_48 [label="var jobs = new Dictionary<string, List<string>>()", span="94-94", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_49 [label="var states = new Dictionary<string, string>()", span="95-95", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_53 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_50 [label="var pipeline = Redis.CreatePipeline()", span="97-97", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_54 [label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_55 [label="pipeline.Flush()", span="116-116", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_52 [label="var job = scheduledJob", span="101-101", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_57 [label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_38 [label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="65-65", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="InfiniteLoopProcess.cs"];
m9_214 [label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="InfiniteLoopProcess.cs"];
m9_386 [label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="InfiniteLoopProcess.cs"];
m9_29 [label="Entry Unk.GetJobsWithProperties", span="", cluster="Unk.GetJobsWithProperties", file="InfiniteLoopProcess.cs"];
m9_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="InfiniteLoopProcess.cs"];
m9_359 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="InfiniteLoopProcess.cs"];
m9_197 [label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5", cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="InfiniteLoopProcess.cs"];
m9_60 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="InfiniteLoopProcess.cs"];
m9_76 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="InfiniteLoopProcess.cs"];
m9_0 [label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="InfiniteLoopProcess.cs"];
m9_3 [label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="InfiniteLoopProcess.cs"];
m9_1 [label=Redis, span="14-14", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="InfiniteLoopProcess.cs"];
m9_2 [label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="InfiniteLoopProcess.cs"];
m9_4 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="InfiniteLoopProcess.cs"];
m9_23 [label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_24 [label=Redis, span="55-55", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_25 [label="var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="57-60", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_26 [label="return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="62-76", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_27 [label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_134 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="InfiniteLoopProcess.cs"];
m9_257 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="InfiniteLoopProcess.cs"];
m9_5 [label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="InfiniteLoopProcess.cs"];
m9_173 [label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="502-502", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_324 [label="jobIds.Count == 0", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_326 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="511-511", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_327 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="512-512", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_328 [label="var pipeline = redis.CreatePipeline()", span="514-514", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_329 [label=jobIds, span="516-516", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_331 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="520-522", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_332 [label="stateProperties != null", span="524-524", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_333 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="526-528", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_335 [label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="535-545", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_325 [label="return new List<KeyValuePair<string, T>>();", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_334 [label="pipeline.Flush()", span="532-532", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_330 [label="var id = jobId", span="518-518", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_336 [label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="502-502", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="InfiniteLoopProcess.cs"];
m9_361 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="InfiniteLoopProcess.cs"];
m9_345 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="InfiniteLoopProcess.cs"];
m9_14 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="InfiniteLoopProcess.cs"];
m9_219 [label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="441-441", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_269 [label="var endDate = DateTime.UtcNow", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_276 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="452-452", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_277 [label="var valuesMap = redis.GetValuesMap(keys)", span="453-453", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_270 [label="var dates = new List<DateTime>()", span="445-445", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_273 [label="dates.Add(endDate)", span="448-448", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_274 [label="endDate = endDate.AddHours(-1)", span="449-449", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_271 [label="var i = 0", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_280 [label="i < dates.Count", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_284 [label="result.Add(dates[i], value)", span="464-464", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_272 [label="i < 24", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_275 [label="i++", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_278 [label="var result = new Dictionary<DateTime, long>()", span="455-455", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_282 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="459-459", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_279 [label="var i = 0", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_286 [label="return result;", span="467-467", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_285 [label="i++", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_281 [label="long value", span="458-458", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_283 [label="value = 0", span="461-461", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_287 [label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="441-441", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_232 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="InfiniteLoopProcess.cs"];
m9_58 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="InfiniteLoopProcess.cs"];
m9_132 [label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Web.ServerDto.ServerDto()", file="InfiniteLoopProcess.cs"];
m9_6 [label=Redis, span="22-22", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="InfiniteLoopProcess.cs"];
m9_7 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", color=green, community=0, file="InfiniteLoopProcess.cs"];
m9_8 [label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="InfiniteLoopProcess.cs"];
m9_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="InfiniteLoopProcess.cs"];
m9_234 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="InfiniteLoopProcess.cs"];
m9_258 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="InfiniteLoopProcess.cs"];
m9_236 [label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="394-394", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="InfiniteLoopProcess.cs"];
m9_237 [label=Redis, span="396-396", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="InfiniteLoopProcess.cs"];
m9_238 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="398-398", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="InfiniteLoopProcess.cs"];
m9_242 [label="return JobState.Apply(\r\n                    Redis,\r\n                    jobId,\r\n                    new EnqueuedState(''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="406-410", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="InfiniteLoopProcess.cs"];
m9_239 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="399-399", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="InfiniteLoopProcess.cs"];
m9_240 [label="String.IsNullOrEmpty(queue)", span="401-401", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="InfiniteLoopProcess.cs"];
m9_241 [label="return false;", span="403-403", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="InfiniteLoopProcess.cs"];
m9_243 [label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="394-394", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="InfiniteLoopProcess.cs"];
m9_174 [label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="InfiniteLoopProcess.cs"];
m9_317 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="InfiniteLoopProcess.cs"];
m9_360 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="InfiniteLoopProcess.cs"];
m9_429 [label="Entry lambda expression", span="595-595", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_32 [label="Entry lambda expression", span="66-76", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_40 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_33 [label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_34 [label="Exit lambda expression", span="66-76", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_41 [label="x.Value.StartedAt", span="76-76", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_42 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_70 [label="jobs.Add(job.Key, x)", span="107-107", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_84 [label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_78 [label="states.Add(job.Key, x)", span="113-113", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_65 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_74 [label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_64 [label="Entry lambda expression", span="104-106", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_69 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_73 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_77 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_80 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_83 [label="Entry lambda expression", span="121-129", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_66 [label="Exit lambda expression", span="104-106", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_71 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_75 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_79 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_81 [label="job.Key", span="120-120", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_82 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_85 [label="Exit lambda expression", span="121-129", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_120 [label="servers.Add(name, x)", span="173-173", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_130 [label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_127 [label="queues.Add(name, x)", span="178-178", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_117 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_123 [label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_116 [label="Entry lambda expression", span="170-172", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_119 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_122 [label="Entry lambda expression", span="176-177", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_126 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_129 [label="Entry lambda expression", span="184-191", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_118 [label="Exit lambda expression", span="170-172", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_121 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_124 [label="Exit lambda expression", span="176-177", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_128 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_131 [label="Exit lambda expression", span="184-191", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_141 [label="Entry lambda expression", span="209-219", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_142 [label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_143 [label="Exit lambda expression", span="209-219", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_151 [label="Entry lambda expression", span="237-244", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_152 [label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_153 [label="Exit lambda expression", span="237-244", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_177 [label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_183 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_189 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_176 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_179 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_182 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_185 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_188 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_191 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_194 [label="Entry lambda expression", span="284-290", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_178 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_180 [label="firstJobIds = x", span="266-266", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_181 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_184 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_186 [label="length = x", span="270-270", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_187 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_190 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_192 [label="dequeued = x", span="274-274", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_193 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_195 [label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_196 [label="Exit lambda expression", span="284-290", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_203 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_204 [label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_205 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_211 [label="Entry lambda expression", span="344-352", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_212 [label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_213 [label="Exit lambda expression", span="344-352", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_260 [label="!hiddenProperties.Contains(x.Key)", span="435-435", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_259 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_263 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_266 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_261 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_264 [label="x.Key", span="435-435", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_265 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_267 [label="x.Value", span="435-435", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_268 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_294 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="452-452", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_293 [label="Entry lambda expression", span="452-452", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_295 [label="Exit lambda expression", span="452-452", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_322 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="484-484", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_318 [label="Entry lambda expression", span="483-483", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_321 [label="Entry lambda expression", span="484-484", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_319 [label="x.ToString(''yyyy-MM-dd'')", span="483-483", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_320 [label="Exit lambda expression", span="483-483", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_323 [label="Exit lambda expression", span="484-484", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_339 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="521-521", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_347 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="527-527", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_357 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="542-544", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_342 [label="!jobs.ContainsKey(id)", span="522-522", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_343 [label="jobs.Add(id, x)", span="522-522", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_354 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="536-541", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_350 [label="!states.ContainsKey(id)", span="528-528", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_351 [label="states.Add(id, x)", span="528-528", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_338 [label="Entry lambda expression", span="521-521", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_341 [label="Entry lambda expression", span="522-522", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_346 [label="Entry lambda expression", span="527-527", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_349 [label="Entry lambda expression", span="528-528", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_353 [label="Entry lambda expression", span="536-541", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_356 [label="Entry lambda expression", span="542-544", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_340 [label="Exit lambda expression", span="521-521", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_344 [label="Exit lambda expression", span="522-522", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_348 [label="Exit lambda expression", span="527-527", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_352 [label="Exit lambda expression", span="528-528", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_355 [label="Exit lambda expression", span="536-541", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_358 [label="Exit lambda expression", span="542-544", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_362 [label="Entry lambda expression", span="544-544", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_363 [label="y == null", span="544-544", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_364 [label="Exit lambda expression", span="544-544", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_392 [label="stats.Servers = x", span="568-568", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_398 [label="stats.Queues = x", span="572-572", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_404 [label="stats.Scheduled = x", span="576-576", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_410 [label="stats.Processing = x", span="580-580", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_417 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="584-584", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_424 [label="stats.Failed = x", span="588-588", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_430 [label="stats.Enqueued += x", span="595-595", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_387 [label="Entry lambda expression", span="567-567", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_391 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_394 [label="Entry lambda expression", span="571-571", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_397 [label="Entry lambda expression", span="572-572", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_400 [label="Entry lambda expression", span="575-575", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_403 [label="Entry lambda expression", span="576-576", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_406 [label="Entry lambda expression", span="579-579", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_409 [label="Entry lambda expression", span="580-580", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_412 [label="Entry lambda expression", span="583-583", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_416 [label="Entry lambda expression", span="584-584", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_420 [label="Entry lambda expression", span="587-587", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_423 [label="Entry lambda expression", span="588-588", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_427 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="594-594", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_426 [label="Entry lambda expression", span="594-594", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_388 [label="x.GetSetCount(''hangfire:servers'')", span="567-567", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_389 [label="Exit lambda expression", span="567-567", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_393 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_395 [label="x.GetSetCount(''hangfire:queues'')", span="571-571", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_396 [label="Exit lambda expression", span="571-571", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_399 [label="Exit lambda expression", span="572-572", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_401 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="575-575", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_402 [label="Exit lambda expression", span="575-575", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_405 [label="Exit lambda expression", span="576-576", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_407 [label="x.GetSortedSetCount(''hangfire:processing'')", span="579-579", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_408 [label="Exit lambda expression", span="579-579", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_411 [label="Exit lambda expression", span="580-580", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_413 [label="x.GetValue(''hangfire:stats:succeeded'')", span="583-583", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_414 [label="Exit lambda expression", span="583-583", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_418 [label="Exit lambda expression", span="584-584", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_421 [label="x.GetSortedSetCount(''hangfire:failed'')", span="587-587", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_422 [label="Exit lambda expression", span="587-587", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_425 [label="Exit lambda expression", span="588-588", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_428 [label="Exit lambda expression", span="594-594", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_431 [label="Exit lambda expression", span="595-595", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_28 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="InfiniteLoopProcess.cs"];
m9_175 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="InfiniteLoopProcess.cs"];
m9_115 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="InfiniteLoopProcess.cs"];
m9_67 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="InfiniteLoopProcess.cs"];
m9_220 [label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="InfiniteLoopProcess.cs"];
m9_221 [label=Redis, span="366-366", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="InfiniteLoopProcess.cs"];
m9_222 [label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="InfiniteLoopProcess.cs"];
m9_223 [label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="InfiniteLoopProcess.cs"];
m9_35 [label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5", cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="InfiniteLoopProcess.cs"];
m9_61 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="InfiniteLoopProcess.cs"];
m9_135 [label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_136 [label=Redis, span="197-197", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_137 [label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_138 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_139 [label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_37 [label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="InfiniteLoopProcess.cs"];
m9_144 [label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5", cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="InfiniteLoopProcess.cs"];
m9_87 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50", cluster="HangFire.JobHelper.FromTimestamp(long)", file="InfiniteLoopProcess.cs"];
m9_296 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="InfiniteLoopProcess.cs"];
m9_145 [label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_146 [label=Redis, span="225-225", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_147 [label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_148 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_149 [label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="InfiniteLoopProcess.cs"];
m9_172 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="InfiniteLoopProcess.cs"];
m9_290 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="InfiniteLoopProcess.cs"];
m9_10 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="InfiniteLoopProcess.cs"];
m9_150 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="InfiniteLoopProcess.cs"];
m9_155 [label="Entry HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_156 [label=Redis, span="250-250", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_157 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_158 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_159 [label=queues, span="255-255", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_169 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_170 [label="return result;", span="301-301", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_160 [label="IList<string> firstJobIds = null", span="257-257", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_164 [label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_165 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_166 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_161 [label="long length = 0", span="258-258", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_162 [label="long dequeued = 0", span="259-259", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_163 [label="var pipeline = Redis.CreatePipeline()", span="261-261", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_167 [label="pipeline.Flush()", span="276-276", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_168 [label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_171 [label="Exit HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="InfiniteLoopProcess.cs"];
m9_88 [label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="InfiniteLoopProcess.cs"];
m9_89 [label=Redis, span="135-135", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="InfiniteLoopProcess.cs"];
m9_90 [label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="InfiniteLoopProcess.cs"];
m9_91 [label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="InfiniteLoopProcess.cs"];
m9_62 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="InfiniteLoopProcess.cs"];
m9_154 [label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5", cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="InfiniteLoopProcess.cs"];
m9_419 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="InfiniteLoopProcess.cs"];
m9_72 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="InfiniteLoopProcess.cs"];
m9_97 [label="Entry HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_98 [label=Redis, span="151-151", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_99 [label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_100 [label="serverNames.Count == 0", span="155-155", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_105 [label=serverNames, span="165-165", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_110 [label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_101 [label="return new List<ServerDto>();", span="157-157", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_102 [label="var servers = new Dictionary<string, List<string>>()", span="160-160", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_103 [label="var queues = new Dictionary<string, List<string>>()", span="161-161", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_107 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_104 [label="var pipeline = Redis.CreatePipeline()", span="163-163", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_108 [label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_109 [label="pipeline.Flush()", span="181-181", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_106 [label="var name = serverName", span="167-167", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_111 [label="Exit HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="InfiniteLoopProcess.cs"];
m9_369 [label="Entry HangFire.Web.JobStorage.GetStatistics()", span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_370 [label=Redis, span="558-558", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_371 [label="var stats = new StatisticsDto()", span="560-560", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_372 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="562-562", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_374 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="566-568", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_375 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="570-572", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_376 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="574-576", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_377 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="578-580", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_378 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="582-584", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_379 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="586-588", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_382 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="593-595", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_384 [label="return stats;", span="601-601", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_373 [label="var pipeline = Redis.CreatePipeline()", span="564-564", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_380 [label=queues, span="590-590", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_383 [label="pipeline.Flush()", span="598-598", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_381 [label="var queueName = queue", span="592-592", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_385 [label="Exit HangFire.Web.JobStorage.GetStatistics()", span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="InfiniteLoopProcess.cs"];
m9_365 [label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="InfiniteLoopProcess.cs"];
m9_366 [label=Redis, span="550-550", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="InfiniteLoopProcess.cs"];
m9_367 [label="return Redis.GetListCount(''hangfire:succeeded'');", span="552-552", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="InfiniteLoopProcess.cs"];
m9_368 [label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="InfiniteLoopProcess.cs"];
m9_215 [label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="InfiniteLoopProcess.cs"];
m9_216 [label=Redis, span="358-358", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="InfiniteLoopProcess.cs"];
m9_217 [label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="InfiniteLoopProcess.cs"];
m9_218 [label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="InfiniteLoopProcess.cs"];
m9_39 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="InfiniteLoopProcess.cs"];
m9_235 [label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="InfiniteLoopProcess.cs"];
m9_288 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="InfiniteLoopProcess.cs"];
m9_92 [label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="470-470", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_298 [label="var endDate = DateTime.UtcNow.Date", span="473-473", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_305 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="484-484", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_306 [label="var valuesMap = redis.GetValuesMap(keys)", span="486-486", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_299 [label="var startDate = endDate.AddDays(-7)", span="474-474", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_301 [label="startDate <= endDate", span="477-477", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_302 [label="dates.Add(endDate)", span="479-479", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_303 [label="endDate = endDate.AddDays(-1)", span="480-480", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_300 [label="var dates = new List<DateTime>()", span="475-475", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_304 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="483-483", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_313 [label="result.Add(dates[i], value)", span="496-496", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_309 [label="i < stringDates.Count", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_307 [label="var result = new Dictionary<DateTime, long>()", span="488-488", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_311 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="492-492", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_308 [label="var i = 0", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_315 [label="return result;", span="499-499", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_314 [label="i++", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_310 [label="long value", span="491-491", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_312 [label="value = 0", span="494-494", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_316 [label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="470-470", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_15 [label="Hangfire.Server.InfiniteLoopProcess", span="", cluster="HangFire.Web.JobStorage.FailedCount()", file="InfiniteLoopProcess.cs"];
m9_16 [label=Redis, span="38-38", cluster="HangFire.Web.JobStorage.FailedCount()", file="InfiniteLoopProcess.cs"];
m9_17 [label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40", cluster="HangFire.Web.JobStorage.FailedCount()", file="InfiniteLoopProcess.cs"];
m9_18 [label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36", cluster="HangFire.Web.JobStorage.FailedCount()", file="InfiniteLoopProcess.cs"];
m9_255 [label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4", cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="InfiniteLoopProcess.cs"];
m9_244 [label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_245 [label=Redis, span="416-416", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_246 [label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="418-418", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_250 [label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="423-424", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_247 [label="job.Count == 0", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_252 [label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="430-437", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_248 [label="return null;", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_249 [label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="421-421", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_251 [label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="426-428", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_253 [label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="InfiniteLoopProcess.cs"];
m9_292 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="InfiniteLoopProcess.cs"];
m9_297 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="InfiniteLoopProcess.cs"];
m9_254 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="InfiniteLoopProcess.cs"];
m9_63 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="InfiniteLoopProcess.cs"];
m9_337 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="InfiniteLoopProcess.cs"];
m9_390 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="InfiniteLoopProcess.cs"];
m9_206 [label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_207 [label=Redis, span="333-333", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_208 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_209 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_210 [label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_93 [label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="InfiniteLoopProcess.cs"];
m9_94 [label=Redis, span="143-143", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="InfiniteLoopProcess.cs"];
m9_95 [label="return GetTimelineStats(Redis, ''failed'');", span="145-145", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="InfiniteLoopProcess.cs"];
m9_96 [label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="InfiniteLoopProcess.cs"];
m9_256 [label="Entry Unk.>", span="", cluster="Unk.>", file="InfiniteLoopProcess.cs"];
m9_86 [label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5", cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="InfiniteLoopProcess.cs"];
m9_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="InfiniteLoopProcess.cs"];
m9_233 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="InfiniteLoopProcess.cs"];
m9_289 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="InfiniteLoopProcess.cs"];
m9_19 [label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="InfiniteLoopProcess.cs"];
m9_20 [label=Redis, span="46-46", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="InfiniteLoopProcess.cs"];
m9_21 [label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="InfiniteLoopProcess.cs"];
m9_22 [label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="InfiniteLoopProcess.cs"];
m9_125 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="InfiniteLoopProcess.cs"];
m9_262 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="InfiniteLoopProcess.cs"];
m9_114 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="InfiniteLoopProcess.cs"];
m9_112 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="InfiniteLoopProcess.cs"];
m9_140 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="InfiniteLoopProcess.cs"];
m9_415 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="InfiniteLoopProcess.cs"];
m9_68 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="InfiniteLoopProcess.cs"];
m9_224 [label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="InfiniteLoopProcess.cs"];
m9_225 [label=Redis, span="374-374", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="InfiniteLoopProcess.cs"];
m9_226 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="InfiniteLoopProcess.cs"];
m9_230 [label="return JobState.Apply(\r\n                    Redis,\r\n                    jobId,\r\n                    new EnqueuedState(''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-390", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="InfiniteLoopProcess.cs"];
m9_227 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="InfiniteLoopProcess.cs"];
m9_228 [label="String.IsNullOrEmpty(queue)", span="379-379", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="InfiniteLoopProcess.cs"];
m9_229 [label="return false;", span="381-381", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="InfiniteLoopProcess.cs"];
m9_231 [label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="InfiniteLoopProcess.cs"];
m9_198 [label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_199 [label=Redis, span="308-308", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_200 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_201 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_202 [label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="InfiniteLoopProcess.cs"];
m9_432 [label=job, span="", file="InfiniteLoopProcess.cs"];
m9_433 [label=jobs, span="", file="InfiniteLoopProcess.cs"];
m9_434 [label=states, span="", file="InfiniteLoopProcess.cs"];
m9_435 [label=name, span="", file="InfiniteLoopProcess.cs"];
m9_436 [label=servers, span="", file="InfiniteLoopProcess.cs"];
m9_437 [label=queues, span="", file="InfiniteLoopProcess.cs"];
m9_438 [label=queue, span="", file="InfiniteLoopProcess.cs"];
m9_439 [label=hiddenProperties, span="", file="InfiniteLoopProcess.cs"];
m9_440 [label=string, span="", file="InfiniteLoopProcess.cs"];
m9_441 [label=string, span="", file="InfiniteLoopProcess.cs"];
m9_442 [label="string[]", span="", file="InfiniteLoopProcess.cs"];
m9_443 [label=id, span="", file="InfiniteLoopProcess.cs"];
m9_444 [label=jobs, span="", file="InfiniteLoopProcess.cs"];
m9_445 [label="string[]", span="", file="InfiniteLoopProcess.cs"];
m9_446 [label=states, span="", file="InfiniteLoopProcess.cs"];
m9_447 [label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="InfiniteLoopProcess.cs"];
m9_448 [label=stats, span="", file="InfiniteLoopProcess.cs"];
m9_449 [label=queueName, span="", file="InfiniteLoopProcess.cs"];
m10_7 [label="client == null", span="48-48", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs", color=red, community=0];
m10_12 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RecurringJobManager.cs"];
m10_66 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobManager.cs"];
m10_19 [label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="71-71", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_20 [label="recurringJobId == null", span="78-78", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_22 [label="job == null", span="79-79", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_24 [label="cronExpression == null", span="80-80", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_26 [label="timeZone == null", span="81-81", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_28 [label="ValidateCronExpression(cronExpression)", span="83-83", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_31 [label="var invocationData = InvocationData.Serialize(job)", span="88-88", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_33 [label="recurringJob[''Cron''] = cronExpression", span="91-91", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_34 [label="recurringJob[''TimeZoneId''] = timeZone.Id", span="92-92", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_35 [label="recurringJob[''Queue''] = queue", span="93-93", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_37 [label="transaction.SetRangeInHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId),\r\n                        recurringJob)", span="97-99", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_38 [label="transaction.AddToSet(''recurring-jobs'', recurringJobId)", span="101-101", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_21 [label="throw new ArgumentNullException(''recurringJobId'');", span="78-78", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_23 [label="throw new ArgumentNullException(''job'');", span="79-79", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_25 [label="throw new ArgumentNullException(''cronExpression'');", span="80-80", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_27 [label="throw new ArgumentNullException(''timeZone'');", span="81-81", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_29 [label="var connection = _storage.GetConnection()", span="85-85", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_30 [label="var recurringJob = new Dictionary<string, string>()", span="87-87", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_36 [label="var transaction = connection.CreateWriteTransaction()", span="95-95", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_32 [label="recurringJob[''Job''] = JobHelper.ToJson(invocationData)", span="90-90", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_39 [label="transaction.Commit()", span="103-103", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_40 [label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="71-71", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m10_42 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobManager.cs"];
m10_67 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobManager.cs"];
m10_6 [label="throw new ArgumentNullException(''storage'');", span="47-47", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs"];
m10_51 [label="Entry Hangfire.RecurringJobManager.Trigger(string)", span="108-108", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_52 [label="recurringJobId == null", span="110-110", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_55 [label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', recurringJobId))", span="114-114", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_53 [label="throw new ArgumentNullException(''recurringJobId'');", span="110-110", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_54 [label="var connection = _storage.GetConnection()", span="112-112", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_56 [label="hash == null", span="115-115", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_58 [label="var job = JobHelper.FromJson<InvocationData>(hash[''Job'']).Deserialize()", span="120-120", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_60 [label="hash.ContainsKey(''Queue'')", span="123-123", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_61 [label="state.Queue = hash[''Queue'']", span="125-125", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_57 [label="return;", span="117-117", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_59 [label="var state = new EnqueuedState { Reason = ''Triggered using recurring job manager'' }", span="121-121", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_62 [label="_client.Create(job, state)", span="128-128", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m10_63 [label="Exit Hangfire.RecurringJobManager.Trigger(string)", span="108-108", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m10_70 [label="Entry Hangfire.RecurringJobManager.RemoveIfExists(string)", span="132-132", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m10_71 [label="recurringJobId == null", span="134-134", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m10_75 [label="transaction.RemoveHash(String.Format(''recurring-job:{0}'', recurringJobId))", span="139-139", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m10_76 [label="transaction.RemoveFromSet(''recurring-jobs'', recurringJobId)", span="140-140", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m10_72 [label="throw new ArgumentNullException(''recurringJobId'');", span="134-134", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m10_73 [label="var connection = _storage.GetConnection()", span="136-136", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m10_74 [label="var transaction = connection.CreateWriteTransaction()", span="137-137", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m10_77 [label="transaction.Commit()", span="142-142", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m10_78 [label="Exit Hangfire.RecurringJobManager.RemoveIfExists(string)", span="132-132", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m10_0 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager()", span="35-35", cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="RecurringJobManager.cs"];
m10_3 [label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="40-40", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="RecurringJobManager.cs"];
m10_4 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", span="45-45", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs"];
m10_1 [label="Exit Hangfire.RecurringJobManager.RecurringJobManager()", span="35-35", cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="RecurringJobManager.cs"];
m10_2 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="40-40", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="RecurringJobManager.cs"];
m10_5 [label="storage == null", span="47-47", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs"];
m10_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobManager.cs"];
m10_87 [label="Entry Unk.GetNextOccurrence", span="", cluster="Unk.GetNextOccurrence", file="RecurringJobManager.cs"];
m10_88 [label="Entry System.ArgumentException.ArgumentException(string, string, System.Exception)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string, System.Exception)", file="RecurringJobManager.cs"];
m10_80 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="RecurringJobManager.cs"];
m10_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobManager.cs"];
m10_13 [label="HangFire.States.ProcessingState", span="", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", file="RecurringJobManager.cs"];
m10_14 [label="AddOrUpdate(recurringJobId, job, cronExpression, TimeZoneInfo.Utc)", span="59-59", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", file="RecurringJobManager.cs"];
m10_15 [label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", span="54-54", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", file="RecurringJobManager.cs"];
m10_69 [label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="65-65", cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobManager.cs"];
m10_16 [label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="62-62", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManager.cs"];
m10_17 [label="AddOrUpdate(recurringJobId, job, cronExpression, timeZone, EnqueuedState.DefaultQueue)", span="68-68", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManager.cs"];
m10_18 [label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="62-62", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManager.cs"];
m10_44 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobManager.cs"];
m10_46 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="RecurringJobManager.cs"];
m10_86 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="RecurringJobManager.cs"];
m10_49 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="41-41", cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="RecurringJobManager.cs"];
m10_43 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManager.cs"];
m10_48 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="51-51", cluster="Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobManager.cs"];
m10_65 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobManager.cs"];
m10_41 [label="Entry Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="146-146", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m10_81 [label="var schedule = CrontabSchedule.Parse(cronExpression)", span="150-150", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m10_82 [label="schedule.GetNextOccurrence(DateTime.UtcNow)", span="151-151", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m10_83 [label=Exception, span="153-153", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m10_84 [label="throw new ArgumentException(''CRON expression is invalid. Please see the inner exception for details.'', ''cronExpression'', ex);", span="155-155", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m10_85 [label="Exit Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="146-146", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m10_50 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="RecurringJobManager.cs"];
m10_8 [label="throw new ArgumentNullException(''client'');", span="48-48", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs", color=red, community=0];
m10_9 [label="_storage = storage", span="50-50", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", color=green, community=0, file="RecurringJobManager.cs"];
m10_10 [label="_client = client", span="51-51", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs", color=red, community=0];
m10_45 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobManager.cs"];
m10_11 [label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", span="45-45", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs"];
m10_64 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobManager.cs"];
m10_79 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", span="52-52", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", file="RecurringJobManager.cs"];
m10_89 [label="Hangfire.RecurringJobManager", span="", file="RecurringJobManager.cs"];
m11_31 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobManagerFacts.cs"];
m11_32 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RecurringJobManager(null, _client.Object))", span="38-39", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_33 [label="Assert.Equal(''storage'', exception.ParamName)", span="41-41", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobManagerFacts.cs"];
m11_34 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobManagerFacts.cs"];
m11_67 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", span="76-76", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", file="RecurringJobManagerFacts.cs"];
m11_68 [label="var manager = CreateManager()", span="78-78", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", file="RecurringJobManagerFacts.cs"];
m11_69 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => manager.AddOrUpdate(_id, _job, null))", span="80-81", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", file="RecurringJobManagerFacts.cs"];
m11_70 [label="Assert.Equal(''cronExpression'', exception.ParamName)", span="83-83", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", file="RecurringJobManagerFacts.cs"];
m11_71 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", span="76-76", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsNull()", file="RecurringJobManagerFacts.cs"];
m11_40 [label="Entry RecurringJobManager.cstr", span="", cluster="RecurringJobManager.cstr", file="RecurringJobManagerFacts.cs"];
m11_110 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RecurringJobManagerFacts.cs"];
m11_57 [label="Entry Hangfire.Cron.Daily()", span="54-54", cluster="Hangfire.Cron.Daily()", file="RecurringJobManagerFacts.cs"];
m11_14 [label="Entry Mock<IBackgroundJobClient>.cstr", span="", cluster="Mock<IBackgroundJobClient>.cstr", file="RecurringJobManagerFacts.cs"];
m11_18 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="RecurringJobManagerFacts.cs"];
m11_153 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuedJobToTheSpecificQueue_IfSpecified()", span="169-169", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuedJobToTheSpecificQueue_IfSpecified()", file="RecurringJobManagerFacts.cs"];
m11_154 [label="_connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', _id)))\r\n                .Returns(new Dictionary<string, string>\r\n                {\r\n                    { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) },\r\n                    { ''Queue'', ''my_queue'' }\r\n                })", span="172-177", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuedJobToTheSpecificQueue_IfSpecified()", file="RecurringJobManagerFacts.cs"];
m11_155 [label="var manager = CreateManager()", span="179-179", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuedJobToTheSpecificQueue_IfSpecified()", file="RecurringJobManagerFacts.cs"];
m11_156 [label="manager.Trigger(_id)", span="182-182", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuedJobToTheSpecificQueue_IfSpecified()", file="RecurringJobManagerFacts.cs"];
m11_157 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.Is<EnqueuedState>(state => state.Queue == ''my_queue'')))", span="185-185", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuedJobToTheSpecificQueue_IfSpecified()", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_158 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuedJobToTheSpecificQueue_IfSpecified()", span="169-169", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuedJobToTheSpecificQueue_IfSpecified()", file="RecurringJobManagerFacts.cs"];
m11_144 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RecurringJobManagerFacts.cs"];
m11_131 [label="Entry Hangfire.RecurringJobManager.Trigger(string)", span="108-108", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManagerFacts.cs"];
m11_190 [label="Entry Hangfire.RecurringJobManager.RemoveIfExists(string)", span="132-132", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManagerFacts.cs"];
m11_109 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobManagerFacts.cs"];
m11_176 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="RecurringJobManagerFacts.cs"];
m11_191 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", span="209-209", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="RecurringJobManagerFacts.cs"];
m11_192 [label="var manager = CreateManager()", span="211-211", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="RecurringJobManagerFacts.cs"];
m11_193 [label="manager.RemoveIfExists(_id)", span="213-213", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="RecurringJobManagerFacts.cs"];
m11_194 [label="_transaction.Verify(x => x.RemoveFromSet(''recurring-jobs'', _id))", span="215-215", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="RecurringJobManagerFacts.cs"];
m11_195 [label="_transaction.Verify(x => x.RemoveHash(String.Format(''recurring-job:{0}'', _id)))", span="216-216", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="RecurringJobManagerFacts.cs"];
m11_196 [label="_transaction.Verify(x => x.Commit())", span="217-217", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="RecurringJobManagerFacts.cs"];
m11_197 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", span="209-209", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_RemovesEntriesAndCommitsTheTransaction()", file="RecurringJobManagerFacts.cs"];
m11_75 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsInvalid()", span="87-87", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsInvalid()", file="RecurringJobManagerFacts.cs"];
m11_76 [label="var manager = CreateManager()", span="89-89", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsInvalid()", file="RecurringJobManagerFacts.cs"];
m11_77 [label="var exception = Assert.Throws<ArgumentException>(\r\n                () => manager.AddOrUpdate(_id, _job, ''* * *''))", span="91-92", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsInvalid()", file="RecurringJobManagerFacts.cs"];
m11_78 [label="Assert.Equal(''cronExpression'', exception.ParamName)", span="94-94", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsInvalid()", file="RecurringJobManagerFacts.cs"];
m11_79 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsInvalid()", span="87-87", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpressionIsInvalid()", file="RecurringJobManagerFacts.cs"];
m11_91 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", span="109-109", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", file="RecurringJobManagerFacts.cs"];
m11_92 [label="var manager = CreateManager()", span="111-111", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", file="RecurringJobManagerFacts.cs"];
m11_93 [label="manager.AddOrUpdate(_id, _job, _cronExpression)", span="113-113", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", file="RecurringJobManagerFacts.cs"];
m11_94 [label="_transaction.Verify(x => x.AddToSet(''recurring-jobs'', _id))", span="115-115", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", file="RecurringJobManagerFacts.cs"];
m11_95 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", span="109-109", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_AddsAJob_ToTheRecurringJobsSet()", file="RecurringJobManagerFacts.cs"];
m11_35 [label="Entry Unk.>", span="", cluster="Unk.>", file="RecurringJobManagerFacts.cs"];
m11_58 [label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", span="54-54", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", file="RecurringJobManagerFacts.cs"];
m11_100 [label="Entry Unk.AddToSet", span="", cluster="Unk.AddToSet", file="RecurringJobManagerFacts.cs"];
m11_183 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", span="200-200", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_184 [label="var manager = CreateManager()", span="202-202", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_185 [label="Assert.Throws<ArgumentNullException>(\r\n                () => manager.RemoveIfExists(null))", span="204-205", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_186 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", span="200-200", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RemoveIfExists_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_171 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_DoesNotThrowIfJobDoesNotExist()", span="189-189", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_DoesNotThrowIfJobDoesNotExist()", file="RecurringJobManagerFacts.cs"];
m11_172 [label="var manager = CreateManager()", span="191-191", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_DoesNotThrowIfJobDoesNotExist()", file="RecurringJobManagerFacts.cs"];
m11_173 [label="Assert.DoesNotThrow(() => manager.Trigger(_id))", span="193-193", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_DoesNotThrowIfJobDoesNotExist()", file="RecurringJobManagerFacts.cs"];
m11_174 [label="_client.Verify(\r\n                x => x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>()),\r\n                Times.Never)", span="194-196", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_DoesNotThrowIfJobDoesNotExist()", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_175 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_DoesNotThrowIfJobDoesNotExist()", span="189-189", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_DoesNotThrowIfJobDoesNotExist()", file="RecurringJobManagerFacts.cs"];
m11_139 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobManagerFacts.cs"];
m11_205 [label="Entry Unk.RemoveHash", span="", cluster="Unk.RemoveHash", file="RecurringJobManagerFacts.cs"];
m11_26 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="RecurringJobManagerFacts.cs"];
m11_148 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="RecurringJobManagerFacts.cs"];
m11_132 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuesScheduledJob()", span="150-150", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuesScheduledJob()", file="RecurringJobManagerFacts.cs"];
m11_133 [label="_connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', _id)))\r\n                .Returns(new Dictionary<string, string>\r\n                {\r\n                    { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) }\r\n                })", span="153-157", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuesScheduledJob()", file="RecurringJobManagerFacts.cs"];
m11_134 [label="var manager = CreateManager()", span="159-159", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuesScheduledJob()", file="RecurringJobManagerFacts.cs"];
m11_135 [label="manager.Trigger(_id)", span="162-162", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuesScheduledJob()", file="RecurringJobManagerFacts.cs"];
m11_136 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="165-165", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuesScheduledJob()", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_137 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuesScheduledJob()", span="150-150", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_EnqueuesScheduledJob()", file="RecurringJobManagerFacts.cs"];
m11_138 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManagerFacts.cs"];
m11_41 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="45-45", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobManagerFacts.cs"];
m11_42 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RecurringJobManager(_storage.Object, null))", span="47-48", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobManagerFacts.cs"];
m11_43 [label="Assert.Equal(''client'', exception.ParamName)", span="50-50", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_44 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="45-45", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobManagerFacts.cs"];
m11_53 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.CreateManager()", span="220-220", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.CreateManager()", file="RecurringJobManagerFacts.cs"];
m11_209 [label="return new RecurringJobManager(_storage.Object, _client.Object);", span="222-222", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.CreateManager()", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_210 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.CreateManager()", span="220-220", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.CreateManager()", file="RecurringJobManagerFacts.cs"];
m11_16 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RecurringJobManagerFacts.cs"];
m11_105 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", span="119-119", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", file="RecurringJobManagerFacts.cs"];
m11_101 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", span="119-119", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", file="RecurringJobManagerFacts.cs"];
m11_102 [label="var manager = CreateManager()", span="121-121", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", file="RecurringJobManagerFacts.cs"];
m11_103 [label="manager.AddOrUpdate(_id, _job, _cronExpression)", span="123-123", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", file="RecurringJobManagerFacts.cs"];
m11_104 [label="_transaction.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', _id),\r\n                It.Is<Dictionary<string, string>>(rj => \r\n                    rj[''Cron''] == ''* * * * *'' && !String.IsNullOrEmpty(rj[''Job'']))))", span="125-128", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_SetsTheRecurringJobEntry()", file="RecurringJobManagerFacts.cs"];
m11_140 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobManagerFacts.cs"];
m11_12 [label="Entry Hangfire.Cron.Minutely()", span="29-29", cluster="Hangfire.Cron.Minutely()", file="RecurringJobManagerFacts.cs"];
m11_115 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_CommitsTransaction()", span="132-132", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_CommitsTransaction()", file="RecurringJobManagerFacts.cs"];
m11_116 [label="var manager = CreateManager()", span="134-134", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_CommitsTransaction()", file="RecurringJobManagerFacts.cs"];
m11_117 [label="manager.AddOrUpdate(_id, _job, _cronExpression)", span="136-136", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_CommitsTransaction()", file="RecurringJobManagerFacts.cs"];
m11_118 [label="_transaction.Verify(x => x.Commit())", span="138-138", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_CommitsTransaction()", file="RecurringJobManagerFacts.cs"];
m11_119 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_CommitsTransaction()", span="132-132", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_CommitsTransaction()", file="RecurringJobManagerFacts.cs"];
m11_206 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_19 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_23 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_27 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_20 [label="Method()", span="23-23", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_21 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_24 [label="x.GetConnection()", span="29-29", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_25 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_28 [label="x.CreateWriteTransaction()", span="32-32", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_29 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_37 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_38 [label="new RecurringJobManager(null, _client.Object)", span="39-39", cluster="lambda expression", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_39 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_45 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_46 [label="new RecurringJobManager(_storage.Object, null)", span="48-48", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_47 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_55 [label="manager.AddOrUpdate(null, _job, Cron.Daily())", span="59-59", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_54 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_56 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_65 [label="manager.AddOrUpdate(_id, null, Cron.Daily())", span="70-70", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_64 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_66 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_73 [label="manager.AddOrUpdate(_id, _job, null)", span="81-81", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_72 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_74 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_81 [label="manager.AddOrUpdate(_id, _job, ''* * *'')", span="92-92", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_80 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_82 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_89 [label="manager.AddOrUpdate(_id, _job, ''* * * * 9999'')", span="103-103", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_88 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_90 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_97 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_98 [label="x.AddToSet(''recurring-jobs'', _id)", span="115-115", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_99 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_106 [label="Entry lambda expression", span="125-128", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_107 [label="x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', _id),\r\n                It.Is<Dictionary<string, string>>(rj => \r\n                    rj[''Cron''] == ''* * * * *'' && !String.IsNullOrEmpty(rj[''Job''])))", span="125-128", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_108 [label="Exit lambda expression", span="125-128", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_111 [label="Entry lambda expression", span="127-128", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_112 [label="rj[''Cron''] == ''* * * * *'' && !String.IsNullOrEmpty(rj[''Job''])", span="128-128", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_113 [label="Exit lambda expression", span="127-128", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_120 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_121 [label="x.Commit()", span="138-138", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_122 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_129 [label="manager.Trigger(null)", span="146-146", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_128 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_130 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_141 [label="Entry lambda expression", span="153-153", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_145 [label="Entry lambda expression", span="156-156", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_149 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_142 [label="x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', _id))", span="153-153", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_143 [label="Exit lambda expression", span="153-153", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_146 [label="Console.WriteLine()", span="156-156", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_147 [label="Exit lambda expression", span="156-156", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_150 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="165-165", cluster="lambda expression", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_151 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_159 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_162 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_165 [label="Entry lambda expression", span="185-185", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_160 [label="x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', _id))", span="172-172", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_161 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_163 [label="Console.WriteLine()", span="175-175", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_164 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_166 [label="x.Create(It.IsNotNull<Job>(), It.Is<EnqueuedState>(state => state.Queue == ''my_queue''))", span="185-185", cluster="lambda expression", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_167 [label="Exit lambda expression", span="185-185", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_168 [label="Entry lambda expression", span="185-185", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_169 [label="state.Queue == ''my_queue''", span="185-185", cluster="lambda expression", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_170 [label="Exit lambda expression", span="185-185", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_178 [label="manager.Trigger(_id)", span="193-193", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_177 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_180 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_179 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_181 [label="x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>())", span="195-195", cluster="lambda expression", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_182 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_188 [label="manager.RemoveIfExists(null)", span="205-205", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_187 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_189 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_198 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_202 [label="Entry lambda expression", span="216-216", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_199 [label="x.RemoveFromSet(''recurring-jobs'', _id)", span="215-215", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_200 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_203 [label="x.RemoveHash(String.Format(''recurring-job:{0}'', _id))", span="216-216", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_204 [label="Exit lambda expression", span="216-216", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_207 [label="x.Commit()", span="217-217", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_208 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="RecurringJobManagerFacts.cs"];
m11_59 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", span="65-65", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", file="RecurringJobManagerFacts.cs"];
m11_60 [label="var manager = CreateManager()", span="67-67", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", file="RecurringJobManagerFacts.cs"];
m11_61 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => manager.AddOrUpdate(_id, null, Cron.Daily()))", span="69-70", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", file="RecurringJobManagerFacts.cs"];
m11_62 [label="Assert.Equal(''job'', exception.ParamName)", span="72-72", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", file="RecurringJobManagerFacts.cs"];
m11_63 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", span="65-65", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenJobIsNull()", file="RecurringJobManagerFacts.cs"];
m11_83 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpression_HaveInvalidParts()", span="98-98", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpression_HaveInvalidParts()", file="RecurringJobManagerFacts.cs"];
m11_84 [label="var manager = CreateManager()", span="100-100", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpression_HaveInvalidParts()", file="RecurringJobManagerFacts.cs"];
m11_85 [label="var exception = Assert.Throws<ArgumentException>(\r\n                () => manager.AddOrUpdate(_id, _job, ''* * * * 9999''))", span="102-103", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpression_HaveInvalidParts()", file="RecurringJobManagerFacts.cs"];
m11_86 [label="Assert.Equal(''cronExpression'', exception.ParamName)", span="105-105", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpression_HaveInvalidParts()", file="RecurringJobManagerFacts.cs"];
m11_87 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpression_HaveInvalidParts()", span="98-98", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenCronExpression_HaveInvalidParts()", file="RecurringJobManagerFacts.cs"];
m11_96 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RecurringJobManagerFacts.cs"];
m11_48 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", span="54-54", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_49 [label="var manager = CreateManager()", span="56-56", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => manager.AddOrUpdate(null, _job, Cron.Daily()))", span="58-59", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_51 [label="Assert.Equal(''recurringJobId'', exception.ParamName)", span="61-61", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_52 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", span="54-54", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.AddOrUpdate_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_123 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="RecurringJobManagerFacts.cs"];
m11_30 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="RecurringJobManagerFacts.cs"];
m11_114 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="RecurringJobManagerFacts.cs"];
m11_22 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.Method()", span="225-225", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Method()", file="RecurringJobManagerFacts.cs"];
m11_211 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.Method()", span="225-225", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Method()", file="RecurringJobManagerFacts.cs"];
m11_0 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", span="20-20", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_1 [label="_id = ''recurring-job-id''", span="22-22", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_2 [label="_job = Job.FromExpression(() => Method())", span="23-23", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_3 [label="_cronExpression = Cron.Minutely()", span="24-24", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_4 [label="_storage = new Mock<JobStorage>()", span="25-25", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_5 [label="_client = new Mock<IBackgroundJobClient>()", span="26-26", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m11_6 [label="_connection = new Mock<IStorageConnection>()", span="28-28", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_7 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="29-29", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_8 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="31-31", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_9 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="32-32", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_10 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", span="20-20", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.RecurringJobManagerFacts()", file="RecurringJobManagerFacts.cs"];
m11_152 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="RecurringJobManagerFacts.cs"];
m11_201 [label="Entry Unk.RemoveFromSet", span="", cluster="Unk.RemoveFromSet", file="RecurringJobManagerFacts.cs"];
m11_17 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="RecurringJobManagerFacts.cs"];
m11_15 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="RecurringJobManagerFacts.cs"];
m11_13 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="RecurringJobManagerFacts.cs"];
m11_124 [label="Entry Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_ThrowsAnException_WhenIdIsNull()", span="142-142", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_125 [label="var manager = CreateManager()", span="144-144", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_126 [label="Assert.Throws<ArgumentNullException>(() => manager.Trigger(null))", span="146-146", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_127 [label="Exit Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_ThrowsAnException_WhenIdIsNull()", span="142-142", cluster="Hangfire.Core.Tests.RecurringJobManagerFacts.Trigger_ThrowsAnException_WhenIdIsNull()", file="RecurringJobManagerFacts.cs"];
m11_11 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="232-232", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobManagerFacts.cs"];
m11_212 [label="Hangfire.Core.Tests.RecurringJobManagerFacts", span="", file="RecurringJobManagerFacts.cs"];
m11_213 [label=manager, span="", file="RecurringJobManagerFacts.cs"];
m11_214 [label=manager, span="", file="RecurringJobManagerFacts.cs"];
m11_215 [label=manager, span="", file="RecurringJobManagerFacts.cs"];
m11_216 [label=manager, span="", file="RecurringJobManagerFacts.cs"];
m11_217 [label=manager, span="", file="RecurringJobManagerFacts.cs"];
m11_218 [label=manager, span="", file="RecurringJobManagerFacts.cs"];
m11_219 [label=manager, span="", file="RecurringJobManagerFacts.cs"];
m11_220 [label=manager, span="", file="RecurringJobManagerFacts.cs"];
m12_8 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="ServerHeartbeat.cs"];
m12_0 [label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="26-26", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="ServerHeartbeat.cs"];
m12_1 [label="_heartbeatInterval = heartbeatInterval", span="28-28", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="ServerHeartbeat.cs"];
m12_2 [label="Exit Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="26-26", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="ServerHeartbeat.cs"];
m12_3 [label="Entry Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerHeartbeat.cs"];
m12_4 [label="var connection = context.Storage.GetConnection()", span="33-33", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerHeartbeat.cs"];
m12_5 [label="connection.Heartbeat(context.ServerId)", span="35-35", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerHeartbeat.cs"];
m12_6 [label="context.Sleep(_heartbeatInterval)", span="38-38", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="ServerHeartbeat.cs"];
m12_7 [label="Exit Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerHeartbeat.cs"];
m12_10 [label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23", cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="ServerHeartbeat.cs"];
m12_11 [label="Entry Hangfire.Server.ServerHeartbeat.ToString()", span="41-41", cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs"];
m12_12 [label="return GetType().Name;", span="43-43", cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs"];
m12_13 [label="Exit Hangfire.Server.ServerHeartbeat.ToString()", span="41-41", cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs"];
m12_14 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ServerHeartbeat.cs"];
m12_9 [label="Entry Hangfire.Storage.IStorageConnection.Heartbeat(string)", span="49-49", cluster="Hangfire.Storage.IStorageConnection.Heartbeat(string)", file="ServerHeartbeat.cs"];
m12_15 [label="Hangfire.Server.ServerHeartbeat", span="", file="ServerHeartbeat.cs"];
m13_17 [label="return GetType().Name;", span="55-55", cluster="Hangfire.Server.ServerWatchdog.ToString()", file="ServerWatchdog.cs"];
m13_11 [label="process == null", span="73-73", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="ServerWatchdog.cs"];
m13_31 [label="Entry HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", span="28-28", cluster="HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", file="ServerWatchdog.cs"];
m13_12 [label="throw new ArgumentNullException(''process'');", span="73-73", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="ServerWatchdog.cs"];
m13_0 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39", cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="ServerWatchdog.cs"];
m13_1 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39", cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="ServerWatchdog.cs"];
m13_2 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="ServerWatchdog.cs"];
m13_3 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="ServerWatchdog.cs"];
m13_4 [label="Entry Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs"];
m13_5 [label="var connection = context.Storage.GetConnection()", span="39-39", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs"];
m13_19 [label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="81-81", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_13 [label="_connection = storage.GetConnection()", span="75-75", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="ServerWatchdog.cs"];
m13_6 [label="var serversRemoved = connection.RemoveTimedOutServers(_serverTimeout)", span="41-41", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs"];
m13_7 [label="serversRemoved != 0", span="42-42", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs"];
m13_9 [label="context.Wait(_checkInterval)", span="50-50", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", color=green, community=0];
m13_14 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="ServerWatchdog.cs"];
m13_15 [label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="57-57", cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="ServerWatchdog.cs"];
m13_8 [label="Logger.Info(String.Format(\r\n                        ''{0} servers were removed due to timeout'', \r\n                        serversRemoved))", span="44-46", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs"];
m13_10 [label="Exit Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37", cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs"];
m13_16 [label="Entry Hangfire.Server.ServerWatchdog.ToString()", span="53-53", cluster="Hangfire.Server.ServerWatchdog.ToString()", file="ServerWatchdog.cs"];
m13_20 [label="Hangfire.Server.ServerWatchdog", span="", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_22 [label="state == null", span="84-84", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_24 [label="var context = new CreateContext(_connection, _stateMachineFactory, job, state)", span="88-88", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_21 [label="throw new ArgumentNullException(''job'');", span="83-83", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_23 [label="throw new ArgumentNullException(''state'');", span="84-84", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_25 [label="_process.Run(context)", span="89-89", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_26 [label="return context.JobId;", span="91-91", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_27 [label=Exception, span="93-93", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_28 [label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="95-95", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_29 [label="Exit HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="81-81", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_18 [label="Entry HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="ServerWatchdog.cs"];
m13_33 [label="Entry HangFire.BackgroundJobClient.Dispose()", span="103-103", cluster="HangFire.BackgroundJobClient.Dispose()", file="ServerWatchdog.cs"];
m13_34 [label="_connection.Dispose()", span="105-105", cluster="HangFire.BackgroundJobClient.Dispose()", file="ServerWatchdog.cs"];
m13_35 [label="Exit HangFire.BackgroundJobClient.Dispose()", span="103-103", cluster="HangFire.BackgroundJobClient.Dispose()", file="ServerWatchdog.cs"];
m13_32 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="ServerWatchdog.cs"];
m13_30 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="ServerWatchdog.cs"];
m13_36 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="ServerWatchdog.cs"];
m13_37 [label="HangFire.BackgroundJobClient", span="", file="ServerWatchdog.cs"];
m14_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="SqlServerConnection.cs"];
m14_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="SqlServerConnection.cs"];
m14_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="SqlServerConnection.cs"];
m14_67 [label="Entry HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", span="150-150", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="SqlServerConnection.cs"];
m14_68 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying, it should remove the job from the processing set'', ((string[])(null)))", span="152-152", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="SqlServerConnection.cs"];
m14_69 [label="this.ScenarioSetup(scenarioInfo)", span="154-154", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="SqlServerConnection.cs"];
m14_70 [label="this.FeatureBackground()", span="156-156", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="SqlServerConnection.cs"];
m14_71 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="SqlServerConnection.cs"];
m14_72 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="160-160", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="SqlServerConnection.cs"];
m14_73 [label="testRunner.Then(''the processing set should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="SqlServerConnection.cs"];
m14_74 [label="this.ScenarioCleanup()", span="164-164", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="SqlServerConnection.cs"];
m14_75 [label="Exit HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", span="150-150", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="SqlServerConnection.cs"];
m14_35 [label="Entry Unk.And", span="", cluster="Unk.And", file="SqlServerConnection.cs"];
m14_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="SqlServerConnection.cs"];
m14_14 [label="Entry HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", file="SqlServerConnection.cs"];
m14_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Processing state''))", span="48-49", cluster="HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", color=red, community=0, file="SqlServerConnection.cs"];
m14_16 [label="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", file="SqlServerConnection.cs"];
m14_17 [label="Exit HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", file="SqlServerConnection.cs"];
m14_18 [label="Entry HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", file="SqlServerConnection.cs"];
m14_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", file="SqlServerConnection.cs"];
m14_20 [label="Exit HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", file="SqlServerConnection.cs"];
m14_0 [label="Entry HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerConnection.cs"];
m14_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerConnection.cs"];
m14_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Processing state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerConnection.cs"];
m14_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerConnection.cs"];
m14_4 [label="Exit HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerConnection.cs"];
m14_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="SqlServerConnection.cs"];
m14_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="SqlServerConnection.cs"];
m14_36 [label="Entry HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", span="85-85", cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="SqlServerConnection.cs"];
m14_37 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Processing\''', ((string[])(null)))", span="87-87", cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="SqlServerConnection.cs"];
m14_38 [label="this.ScenarioSetup(scenarioInfo)", span="89-89", cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="SqlServerConnection.cs"];
m14_39 [label="this.FeatureBackground()", span="91-91", cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="SqlServerConnection.cs"];
m14_40 [label="testRunner.Then(''the state name should be equal to \'Processing\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93", cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="SqlServerConnection.cs"];
m14_41 [label="this.ScenarioCleanup()", span="95-95", cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="SqlServerConnection.cs"];
m14_42 [label="Exit HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", span="85-85", cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="SqlServerConnection.cs"];
m14_66 [label="Entry Unk.When", span="", cluster="Unk.When", file="SqlServerConnection.cs"];
m14_57 [label="Entry HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", span="129-129", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="SqlServerConnection.cs"];
m14_58 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying, it should add the job to the processing set'', ((string[])(null)))", span="131-131", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="SqlServerConnection.cs"];
m14_59 [label="this.ScenarioSetup(scenarioInfo)", span="133-133", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="SqlServerConnection.cs"];
m14_60 [label="this.FeatureBackground()", span="135-135", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="SqlServerConnection.cs"];
m14_61 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="SqlServerConnection.cs"];
m14_62 [label="testRunner.Then(''the processing set should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="139-139", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="SqlServerConnection.cs"];
m14_63 [label="testRunner.And(''processing timestamp should be set to UtcNow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="SqlServerConnection.cs"];
m14_64 [label="this.ScenarioCleanup()", span="143-143", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="SqlServerConnection.cs"];
m14_65 [label="Exit HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", span="129-129", cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="SqlServerConnection.cs"];
m14_56 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="SqlServerConnection.cs"];
m14_43 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="SqlServerConnection.cs"];
m14_26 [label="Entry HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", file="SqlServerConnection.cs"];
m14_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", file="SqlServerConnection.cs"];
m14_28 [label="Exit HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", file="SqlServerConnection.cs"];
m14_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="SqlServerConnection.cs"];
m14_34 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="SqlServerConnection.cs"];
m14_45 [label="Entry HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerConnection.cs"];
m14_46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="104-104", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerConnection.cs"];
m14_47 [label="this.ScenarioSetup(scenarioInfo)", span="106-106", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerConnection.cs"];
m14_48 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerConnection.cs"];
m14_49 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerConnection.cs"];
m14_50 [label="table1.AddRow(new string[] {\r\n                        ''StartedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=0, file="SqlServerConnection.cs"];
m14_51 [label="table1.AddRow(new string[] {\r\n                        ''ServerName'',\r\n                        ''TestServer''})", span="116-118", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=0, file="SqlServerConnection.cs"];
m14_52 [label="testRunner.Then(''properties table should contain the following items:'', ((string)(null)), table1, ''Then '')", span="120-120", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerConnection.cs"];
m14_53 [label="this.ScenarioCleanup()", span="122-122", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerConnection.cs"];
m14_54 [label="Exit HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerConnection.cs"];
m14_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SqlServerConnection.cs"];
m14_55 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="SqlServerConnection.cs"];
m14_22 [label="Entry HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerConnection.cs"];
m14_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerConnection.cs"];
m14_24 [label="Exit HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerConnection.cs"];
m14_30 [label="Entry HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", file="SqlServerConnection.cs"];
m14_31 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", file="SqlServerConnection.cs"];
m14_32 [label="testRunner.And(''the Processing state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", file="SqlServerConnection.cs"];
m14_33 [label="Exit HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", file="SqlServerConnection.cs"];
m14_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="SqlServerConnection.cs"];
m14_9 [label="Entry HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", file="SqlServerConnection.cs"];
m14_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", file="SqlServerConnection.cs"];
m14_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", file="SqlServerConnection.cs"];
m14_12 [label="Exit HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", file="SqlServerConnection.cs"];
m14_76 [label="HangFire.Tests.States.ProcessingStateFeature", span="", file="SqlServerConnection.cs"];
m15_47 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="SqlServerJobQueue.cs"];
m15_8 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="SqlServerJobQueue.cs"];
m15_23 [label="transaction.Dispose()", span="75-75", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_21 [label="fetchedJob = connection.Query<FetchedJob>(\r\n                               fetchJobSqlTemplate,\r\n                               new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds },\r\n                               transaction)\r\n                               .SingleOrDefault()", span="67-71", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_37 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerJobQueue.cs"];
m15_22 [label=SqlException, span="73-73", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_19 [label="connection = _storage.CreateAndOpenConnection()", span="62-62", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_39 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerJobQueue.cs"];
m15_40 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerJobQueue.cs"];
m15_3 [label="options == null", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs"];
m15_0 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="SqlServerJobQueue.cs"];
m15_5 [label="new CreatedContext(null, false, null)", span="16-16", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m15_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m15_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatedContext(null, false, null))", span="15-16", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="SqlServerJobQueue.cs"];
m15_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m15_2 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="SqlServerJobQueue.cs"];
m15_7 [label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="SqlServerJobQueue.cs"];
m15_46 [label="Entry SqlServerFetchedJob.cstr", span="", cluster="SqlServerFetchedJob.cstr", file="SqlServerJobQueue.cs"];
m15_30 [label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="86-86", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_31 [label="cancellationToken.ThrowIfCancellationRequested()", span="87-87", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_44 [label="Entry Unk.Rollback", span="", cluster="Unk.Rollback", file="SqlServerJobQueue.cs"];
m15_43 [label="Entry Unk.ReleaseConnection", span="", cluster="Unk.ReleaseConnection", file="SqlServerJobQueue.cs"];
m15_48 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", span="99-99", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", file="SqlServerJobQueue.cs"];
m15_49 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue) values (@jobId, @queue)''", span="101-102", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", color=green, community=0, file="SqlServerJobQueue.cs"];
m15_50 [label="connection.Execute(enqueueJobSql, new { jobId = jobId, queue = queue })", span="104-104", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", file="SqlServerJobQueue.cs"];
m15_51 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", span="99-99", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", file="SqlServerJobQueue.cs"];
m15_36 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerJobQueue.cs"];
m15_9 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_10 [label="queues == null", span="45-45", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_14 [label="FetchedJob fetchedJob = null", span="48-48", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_11 [label="throw new ArgumentNullException(''queues'');", span="45-45", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_12 [label="queues.Length == 0", span="46-46", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_13 [label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="46-46", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_15 [label="SqlConnection connection = null", span="49-49", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_17 [label="string fetchJobSqlTemplate = @''\r\ndelete top (1) from HangFire.JobQueue with (readpast, updlock, rowlock)\r\noutput DELETED.Id, DELETED.JobId, DELETED.Queue\r\nwhere (FetchedAt is null or FetchedAt < DATEADD(second, @timeout, GETUTCDATE()))\r\nand Queue in @queues''", span="52-56", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", color=green, community=0];
m15_16 [label="SqlTransaction transaction = null", span="50-50", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_18 [label="cancellationToken.ThrowIfCancellationRequested()", span="60-60", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_42 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerJobQueue.cs"];
m15_27 [label="transaction.Rollback()", span="82-82", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_28 [label="transaction.Dispose()", span="83-83", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_29 [label="_storage.ReleaseConnection(connection)", span="84-84", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_24 [label="_storage.ReleaseConnection(connection)", span="76-76", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_38 [label="Entry Unk.BeginTransaction", span="", cluster="Unk.BeginTransaction", file="SqlServerJobQueue.cs"];
m15_35 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerJobQueue.cs"];
m15_45 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerJobQueue.cs"];
m15_25 [label="throw;", span="77-77", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_52 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerJobQueue.cs"];
m15_20 [label="transaction = connection.BeginTransaction(IsolationLevel.ReadCommitted)", span="63-63", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_41 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerJobQueue.cs"];
m15_32 [label="fetchedJob == null", span="89-89", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_26 [label="fetchedJob == null", span="80-80", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_33 [label="return new SqlServerFetchedJob(\r\n                _storage,\r\n                connection,\r\n                transaction,\r\n                fetchedJob.JobId.ToString(CultureInfo.InvariantCulture),\r\n                fetchedJob.Queue);", span="91-96", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_34 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m15_53 [label="Hangfire.SqlServer.SqlServerJobQueue", span="", file="SqlServerJobQueue.cs"];
m16_86 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_52 [label="return _storage.UseTransaction(func, IsolationLevel.ReadUncommitted);", span="107-107", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_18 [label="Entry lambda expression", span="50-53", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_19 [label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_20 [label="Exit lambda expression", span="50-53", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_21 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerJobQueueMonitoringApi.cs"];
m16_22 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerJobQueueMonitoringApi.cs"];
m16_56 [label=sqlQuery, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_57 [label=string, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_58 [label=int, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_59 [label=int, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_119 [label="Entry System.Text.StringBuilder.Append(int)", span="0-0", cluster="System.Text.StringBuilder.Append(int)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_130 [label="Entry Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_131 [label="var label = queue != null \r\n                ? $''<a class=\''text-uppercase\'' href=\''{_page.Url.Queue(queue)}\''>{queue}</a>'' \r\n                : $''<span class=\''label label-danger\''><i>{Strings.Common_Unknown}</i></span>''", span="220-222", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_132 [label="return new NonEscapedString(label);", span="224-224", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_133 [label="Exit Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="SqlServerJobQueueMonitoringApi.cs"];
m16_7 [label="Entry Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="40-40", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m16_8 [label="items == null", span="42-42", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_10 [label="return RenderPartial(new Breadcrumbs(title, items));", span="43-43", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_9 [label="throw new ArgumentNullException(nameof(items));", span="42-42", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_11 [label="Exit Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="40-40", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_13 [label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_12 [label="Entry Hangfire.Dashboard.Pages.Breadcrumbs.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", span="6-6", cluster="Hangfire.Dashboard.Pages.Breadcrumbs.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_14 [label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46", cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="SqlServerJobQueueMonitoringApi.cs"];
m16_134 [label="Entry Hangfire.Dashboard.UrlHelper.Queue(string)", span="68-68", cluster="Hangfire.Dashboard.UrlHelper.Queue(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_27 [label="Exit Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="57-57", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_28 [label="Entry Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4", cluster="Hangfire.Dashboard.Pages.BlockMetric.BlockMetric(Hangfire.Dashboard.DashboardMetric)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m16_29 [label="Entry Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="63-63", cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_30 [label="metric == null", span="65-65", cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="SqlServerJobQueueMonitoringApi.cs", color=red, community=0];
m16_16 [label="Exit Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46", cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="SqlServerJobQueueMonitoringApi.cs"];
m16_53 [label="Entry Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_35 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_36 [label="x.Id", span="79-79", cluster="lambda expression", color=red, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m16_37 [label="Exit lambda expression", span="79-79", cluster="lambda expression", color=red, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m16_38 [label="return RenderPartial(new Paginator(pager));", span="72-72", cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_39 [label="Exit Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69", cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_73 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_117 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_126 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="SqlServerJobQueueMonitoringApi.cs"];
m16_74 [label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83", cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_122 [label="Entry Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_123 [label="return String.Join('', '', properties.Select(x => $''{x.Key}: \''{x.Value}\''''));", span="215-215", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_124 [label="Exit Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_42 [label="pager == null", span="77-77", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_43 [label="throw new ArgumentNullException(nameof(pager));", span="77-77", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m16_44 [label="return RenderPartial(new PerPageSelector(pager));", span="78-78", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_45 [label="Exit Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SqlServerJobQueueMonitoringApi.cs"];
m16_78 [label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58", cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_15 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_116 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="SqlServerJobQueueMonitoringApi.cs"];
m16_143 [label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_144 [label="return new NonEscapedString(StackTraceFormatter.FormatHtml(stackTrace, StackTraceHtmlFragments));", span="252-252", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_145 [label="Exit Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_149 [label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0", cluster="System.Net.WebUtility.HtmlEncode(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_82 [label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_147 [label="return WebUtility.HtmlEncode(text);", span="257-257", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_148 [label="Exit Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_121 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="SqlServerJobQueueMonitoringApi.cs"];
m16_54 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="SqlServerJobQueueMonitoringApi.cs"];
m16_55 [label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span="", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_0 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_1 [label="storage == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_2 [label="throw new ArgumentNullException(''storage'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_3 [label="_storage = storage", span="39-39", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_4 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerJobQueueMonitoringApi.cs"];
m16_24 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_25 [label="(string) x.Queue", span="52-52", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_26 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_87 [label="Entry Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_88 [label="return Raw($''<span data-moment-title=\''{JobHelper.ToTimestamp(time)}\''>{value}</span>'');", span="152-152", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_89 [label="Exit Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_61 [label=string, span="", cluster="string.Substring(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_135 [label="Entry Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_136 [label="var parts = serverId.Split(':')", span="229-229", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_137 [label="var shortenedId = parts.Length > 1\r\n                ? String.Join('':'', parts.Take(parts.Length - 1))\r\n                : serverId", span="230-232", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_138 [label="return new NonEscapedString(\r\n                $''<span class=\''labe label-defult text-uppercase\'' title=\''{serverId}\''>{shortenedId}</span>'');", span="234-235", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_139 [label="Exit Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_62 [label=sqlQuery, span="", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_63 [label="job == null", span="102-102", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_65 [label="return job.ToString();", span="122-122", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_64 [label="return Strings.Common_CannotFindTargetMethod;", span="104-104", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_66 [label="Exit Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="100-100", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_142 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_90 [label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_91 [label="duration == null", span="157-157", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_94 [label=displaySign, span="160-160", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_95 [label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", span="162-162", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_96 [label="duration = duration.Value.Duration()", span="165-165", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_92 [label="return null;", span="157-157", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_93 [label="var builder = new StringBuilder()", span="159-159", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_98 [label="builder.Append($''{duration.Value.Days}d '')", span="169-169", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_100 [label="builder.Append($''{duration.Value.Hours}h '')", span="174-174", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_102 [label="builder.Append($''{duration.Value.Minutes}m '')", span="179-179", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_105 [label="builder.Append(duration.Value.Seconds)", span="186-186", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_107 [label="builder.Append($''.{duration.Value.Milliseconds}'')", span="189-189", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_108 [label="builder.Append(''s '')", span="192-192", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_110 [label="builder.Append($''{duration.Value.Milliseconds}ms '')", span="198-198", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_111 [label="builder.Length <= 1", span="203-203", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_112 [label="builder.Append('' <1ms '')", span="205-205", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_113 [label="builder.Remove(builder.Length - 1, 1)", span="208-208", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_114 [label="return builder.ToString();", span="210-210", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_97 [label="duration.Value.Days > 0", span="167-167", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_99 [label="duration.Value.Hours > 0", span="172-172", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_101 [label="duration.Value.Minutes > 0", span="177-177", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_103 [label="duration.Value.TotalHours < 1", span="182-182", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_104 [label="duration.Value.Seconds > 0", span="184-184", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_106 [label="duration.Value.Milliseconds > 0", span="187-187", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_109 [label="duration.Value.Milliseconds > 0", span="196-196", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_115 [label="Exit Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_141 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_60 [label=sqlQuery, span="", cluster="System.Guid.TryParse(string, out System.Guid)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_51 [label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22", cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_40 [label="Entry Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", span="6-6", cluster="Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_31 [label="Entry lambda expression", span="73-81", cluster="lambda expression", color=red, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m16_32 [label="return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="75-80", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_33 [label="Exit lambda expression", span="73-81", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_83 [label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_84 [label="return Raw($''<span data-moment=\''{JobHelper.ToTimestamp(value)}\''>{value}</span>'');", span="147-147", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_85 [label="Exit Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_118 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="SqlServerJobQueueMonitoringApi.cs"];
m16_46 [label="Entry Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", span="6-6", cluster="Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_127 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_128 [label="$''{x.Key}: \''{x.Value}\''''", span="215-215", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_129 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m16_47 [label="partialPage.Assign(_page)", span="83-83", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_48 [label="return new NonEscapedString(partialPage.ToString());", span="84-84", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_49 [label="Exit Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_125 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerJobQueueMonitoringApi.cs"];
m16_140 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="SqlServerJobQueueMonitoringApi.cs"];
m16_68 [label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_69 [label="String.IsNullOrWhiteSpace(stateName)", span="127-127", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_71 [label="return Raw($''<span class=\''label label-default\'' style=\''background-color: {JobHistoryRenderer.GetForegroundStateColor(stateName)};\''>{stateName}</span>'');", span="132-132", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_70 [label="return Raw($''<em>{Strings.Common_NoState}</em>'');", span="129-129", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_72 [label="Exit Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_41 [label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_75 [label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_76 [label="return Raw($''<a href=\''{_page.Url.JobDetails(jobId)}\''>{JobId(jobId)}</a>'');", span="137-137", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_77 [label="Exit Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_79 [label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_80 [label="return Raw($''<a class=\''job-method\'' href=\''{_page.Url.JobDetails(jobId)}\''>{HtmlEncode(JobName(job))}</a>'');", span="142-142", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_81 [label="Exit Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_50 [label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="74-74", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_67 [label="Entry Hangfire.Common.Job.ToString()", span="179-179", cluster="Hangfire.Common.Job.ToString()", file="SqlServerJobQueueMonitoringApi.cs"];
m16_146 [label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_120 [label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0", cluster="System.Text.StringBuilder.Remove(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_34 [label="Entry Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4", cluster="Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="SqlServerJobQueueMonitoringApi.cs"];
m16_150 [label="Hangfire.Dashboard.HtmlHelper", span="", file="SqlServerJobQueueMonitoringApi.cs"];
m17_351 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerMonitoringApi.cs"];
m17_112 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="SqlServerMonitoringApi.cs"];
m17_366 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="SqlServerMonitoringApi.cs"];
m17_89 [label="Entry Hangfire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.ServerDto.ServerDto()", file="SqlServerMonitoringApi.cs"];
m17_45 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_352 [label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j with (forceseek)\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="491-498", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_353 [label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="500-503", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_354 [label="return DeserializeJobs(jobs, selector);", span="505-505", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_355 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_367 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SqlServerMonitoringApi.cs"];
m17_27 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m17_28 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="68-69", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m17_29 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m17_140 [label="Entry Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerMonitoringApi.cs"];
m17_100 [label="Entry Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SqlServerMonitoringApi.cs"];
m17_356 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_357 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="512-512", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_358 [label=jobs, span="514-514", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_361 [label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="521-521", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_362 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="523-524", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_363 [label="return new JobList<TDto>(result);", span="527-527", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_359 [label="var deserializedData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="516-516", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_360 [label="var stateData = deserializedData != null\r\n                    ? new Dictionary<string, string>(deserializedData, StringComparer.OrdinalIgnoreCase)\r\n                    : null", span="517-519", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_364 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m17_14 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="455-455", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_339 [label="var sqlQuery = _jobListLimit.HasValue\r\n                ? @''select count(j.Id) from (select top (@limit) Id from HangFire.Job where StateName = @state) as j''\r\n                : @''select count(Id) from HangFire.Job where StateName = @state''", span="457-459", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_340 [label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName, limit = _jobListLimit })\r\n                 .Single()", span="461-464", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_341 [label="return count;", span="466-466", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_342 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="455-455", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_227 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs"];
m17_228 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="302-303", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs"];
m17_229 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs"];
m17_379 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerMonitoringApi.cs"];
m17_10 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="423-423", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerMonitoringApi.cs"];
m17_327 [label="return _storage.UseTransaction(action, IsolationLevel.ReadUncommitted);", span="425-425", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerMonitoringApi.cs"];
m17_328 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="423-423", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerMonitoringApi.cs"];
m17_239 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SqlServerMonitoringApi.cs"];
m17_186 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m17_187 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="248-249", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m17_188 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m17_334 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="SqlServerMonitoringApi.cs"];
m17_233 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m17_234 [label="string sql = @''\r\nselect count(Id) from HangFire.Job where StateName = N'Enqueued';\r\nselect count(Id) from HangFire.Job where StateName = N'Failed';\r\nselect count(Id) from HangFire.Job where StateName = N'Processing';\r\nselect count(Id) from HangFire.Job where StateName = N'Scheduled';\r\nselect count(Id) from HangFire.Server;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:succeeded'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:succeeded'\r\n) as s;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:deleted'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:deleted'\r\n) as s;\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="308-325", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_235 [label="var statistics = UseConnection(connection =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    stats.Enqueued = multi.Read<int>().Single();\r\n                    stats.Failed = multi.Read<int>().Single();\r\n                    stats.Processing = multi.Read<int>().Single();\r\n                    stats.Scheduled = multi.Read<int>().Single();\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n                return stats;\r\n            })", span="327-345", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m17_236 [label="statistics.Queues = _storage.QueueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi().GetQueues())\r\n                .Count()", span="347-349", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m17_237 [label="return statistics;", span="351-351", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m17_238 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m17_174 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_169 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_170 [label="var queueApi = GetQueueApi(queue)", span="234-234", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_171 [label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="235-235", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_172 [label="return UseConnection(connection => FetchedJobs(connection, fetchedJobIds));", span="237-237", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_173 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_185 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_260 [label="var endDate = DateTime.UtcNow", span="358-358", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_267 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH'')), x => x)", span="366-366", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_268 [label="return GetTimelineStats(connection, keyMaps);", span="368-368", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_261 [label="var dates = new List<DateTime>()", span="359-359", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_264 [label="dates.Add(endDate)", span="362-362", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_265 [label="endDate = endDate.AddHours(-1)", span="363-363", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_262 [label="var i = 0", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_263 [label="i < 24", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_266 [label="i++", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_269 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_312 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerMonitoringApi.cs"];
m17_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerMonitoringApi.cs"];
m17_111 [label="Entry Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SqlServerMonitoringApi.cs"];
m17_158 [label="Entry Unk.EnqueuedJobs", span="", cluster="Unk.EnqueuedJobs", file="SqlServerMonitoringApi.cs"];
m17_380 [label="Entry Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="SqlServerMonitoringApi.cs"];
m17_259 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="SqlServerMonitoringApi.cs"];
m17_164 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_144 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="SqlServerMonitoringApi.cs"];
m17_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerMonitoringApi.cs"];
m17_368 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="SqlServerMonitoringApi.cs"];
m17_329 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="SqlServerMonitoringApi.cs"];
m17_123 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_124 [label="var tuples = _storage.QueueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi())\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="197-201", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_125 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="203-203", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_126 [label=tuples, span="205-205", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_130 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = firstJobs\r\n                })", span="212-218", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_131 [label="return result;", span="221-221", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_127 [label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="207-207", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_128 [label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="208-208", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_129 [label="var firstJobs = UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds))", span="210-210", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_132 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m17_136 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SqlServerMonitoringApi.cs"];
m17_290 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs"];
m17_220 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="SqlServerMonitoringApi.cs"];
m17_350 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlServerMonitoringApi.cs"];
m17_0 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs"];
m17_1 [label="storage == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs"];
m17_3 [label="_storage = storage", span="40-40", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs"];
m17_4 [label="_jobListLimit = jobListLimit", span="41-41", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs"];
m17_2 [label="throw new ArgumentNullException(''storage'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs"];
m17_5 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs"];
m17_113 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_114 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="183-192", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_115 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_271 [label="Entry Unk.GetTimelineStats", span="", cluster="Unk.GetTimelineStats", file="SqlServerMonitoringApi.cs"];
m17_219 [label="Entry Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="SqlServerMonitoringApi.cs"];
m17_335 [label="Entry lambda expression", span="445-452", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_11 [label="Entry lambda expression", span="46-47", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_12 [label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="47-47", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_13 [label="Exit lambda expression", span="46-47", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_30 [label="Entry lambda expression", span="68-69", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_31 [label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="69-69", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_32 [label="Exit lambda expression", span="68-69", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_36 [label="Entry lambda expression", span="74-75", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_37 [label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="75-75", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_38 [label="Exit lambda expression", span="74-75", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_43 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="80-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_42 [label="Entry lambda expression", span="80-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_44 [label="Exit lambda expression", span="80-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_46 [label="Entry lambda expression", span="84-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_47 [label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="84-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_48 [label="Exit lambda expression", span="84-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_56 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="94-103", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_55 [label="Entry lambda expression", span="94-103", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_57 [label="Exit lambda expression", span="94-103", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_58 [label="Entry lambda expression", span="98-103", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_59 [label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="98-103", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_60 [label="Exit lambda expression", span="98-103", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_65 [label="Entry lambda expression", span="108-109", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_66 [label="GetTimelineStats(connection, ''succeeded'')", span="109-109", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_67 [label="Exit lambda expression", span="108-109", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_72 [label="Entry lambda expression", span="114-115", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_73 [label="GetTimelineStats(connection, ''failed'')", span="115-115", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_74 [label="Exit lambda expression", span="114-115", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_79 [label="Entry lambda expression", span="120-142", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_80 [label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="122-124", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_81 [label="var result = new List<ServerDto>()", span="126-126", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_82 [label=servers, span="128-128", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_84 [label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="131-138", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_85 [label="return result;", span="141-141", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_83 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="130-130", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_86 [label="Exit lambda expression", span="120-142", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_95 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="147-160", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_94 [label="Entry lambda expression", span="147-160", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_96 [label="Exit lambda expression", span="147-160", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_97 [label="Entry lambda expression", span="152-160", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_98 [label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="152-160", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_99 [label="Exit lambda expression", span="152-160", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_106 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="165-178", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_105 [label="Entry lambda expression", span="165-178", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_107 [label="Exit lambda expression", span="165-178", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_108 [label="Entry lambda expression", span="170-178", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_109 [label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="170-178", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_110 [label="Exit lambda expression", span="170-178", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_117 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="183-192", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_116 [label="Entry lambda expression", span="183-192", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_118 [label="Exit lambda expression", span="183-192", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_119 [label="Entry lambda expression", span="188-192", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_120 [label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="188-192", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_121 [label="Exit lambda expression", span="188-192", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_141 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_145 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_149 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_152 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_156 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="210-210", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_155 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_142 [label="x.GetJobQueueMonitoringApi()", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_143 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_146 [label="x.GetQueues()", span="199-199", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_147 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_150 [label="new { Monitoring = monitoring, Queue = queue }", span="199-199", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_151 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_153 [label="x.Queue", span="200-200", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_154 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_157 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_166 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="229-229", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_165 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_167 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_176 [label="FetchedJobs(connection, fetchedJobIds)", span="237-237", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_175 [label="Entry lambda expression", span="237-237", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_177 [label="Exit lambda expression", span="237-237", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_182 [label="Entry lambda expression", span="242-243", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_183 [label="GetHourlyTimelineStats(connection, ''succeeded'')", span="243-243", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_184 [label="Exit lambda expression", span="242-243", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_189 [label="Entry lambda expression", span="248-249", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_190 [label="GetHourlyTimelineStats(connection, ''failed'')", span="249-249", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_191 [label="Exit lambda expression", span="248-249", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_197 [label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="262-262", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_195 [label="Entry lambda expression", span="254-291", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_196 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="257-260", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_198 [label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="264-264", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_201 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="267-267", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_202 [label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList()", span="268-280", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_199 [label="job == null", span="265-265", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_203 [label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="282-289", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_200 [label="return null;", span="265-265", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_210 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_213 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_216 [label="Entry lambda expression", span="271-279", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_204 [label="Exit lambda expression", span="254-291", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_211 [label="x.Name", span="267-267", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_212 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_214 [label="x.Value", span="267-267", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_215 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_217 [label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            }", span="271-279", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_218 [label="Exit lambda expression", span="271-279", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_224 [label="Entry lambda expression", span="296-297", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_225 [label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="297-297", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_226 [label="Exit lambda expression", span="296-297", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_230 [label="Entry lambda expression", span="302-303", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_231 [label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="303-303", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_232 [label="Exit lambda expression", span="302-303", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_243 [label="var multi = connection.QueryMultiple(sql)", span="330-330", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_241 [label="Entry lambda expression", span="327-345", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_256 [label="Entry lambda expression", span="348-348", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_242 [label="var stats = new StatisticsDto()", span="329-329", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_244 [label="stats.Enqueued = multi.Read<int>().Single()", span="332-332", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_245 [label="stats.Failed = multi.Read<int>().Single()", span="333-333", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_246 [label="stats.Processing = multi.Read<int>().Single()", span="334-334", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_247 [label="stats.Scheduled = multi.Read<int>().Single()", span="335-335", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_248 [label="stats.Servers = multi.Read<int>().Single()", span="337-337", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_249 [label="stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0", span="339-339", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_250 [label="stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0", span="340-340", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_251 [label="stats.Recurring = multi.Read<int>().Single()", span="342-342", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_252 [label="return stats;", span="344-344", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_253 [label="Exit lambda expression", span="327-345", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_257 [label="x.GetJobQueueMonitoringApi().GetQueues()", span="348-348", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_258 [label="Exit lambda expression", span="348-348", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_273 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_272 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_277 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_274 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_278 [label=x, span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_279 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_292 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd''))", span="383-383", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_291 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_294 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_293 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_295 [label=x, span="383-383", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_296 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_316 [label="Entry lambda expression", span="398-398", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_319 [label="Entry lambda expression", span="398-398", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_317 [label="(string)x.Key", span="398-398", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_318 [label="Exit lambda expression", span="398-398", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_320 [label="(long)x.Count", span="398-398", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_321 [label="Exit lambda expression", span="398-398", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_336 [label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="445-452", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_337 [label="Exit lambda expression", span="445-452", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m17_90 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs"];
m17_87 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerMonitoringApi.cs"];
m17_315 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="SqlServerMonitoringApi.cs"];
m17_22 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_23 [label="var queueApi = GetQueueApi(queue)", span="60-60", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_24 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="61-61", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_25 [label="return counters.FetchedCount ?? 0;", span="63-63", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_26 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_369 [label="Entry Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22", cluster="Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerMonitoringApi.cs"];
m17_61 [label="Entry Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="SqlServerMonitoringApi.cs"];
m17_275 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="SqlServerMonitoringApi.cs"];
m17_102 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_103 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="165-178", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_104 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_137 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerMonitoringApi.cs"];
m17_21 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_122 [label="Entry Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7", cluster="Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="SqlServerMonitoringApi.cs"];
m17_178 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_370 [label="string fetchedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="534-538", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_371 [label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="540-543", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_372 [label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="545-545", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_373 [label=jobs, span="547-547", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_374 [label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                    }))", span="549-555", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_375 [label="return new JobList<FetchedJobDto>(result);", span="558-558", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_376 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_378 [label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span="", cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="SqlServerMonitoringApi.cs"];
m17_192 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m17_193 [label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="254-291", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_194 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m17_311 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerMonitoringApi.cs"];
m17_7 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m17_8 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="46-47", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m17_9 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m17_168 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_330 [label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="432-436", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_331 [label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="438-441", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_332 [label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="443-452", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_333 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m17_313 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerMonitoringApi.cs"];
m17_221 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m17_222 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="296-297", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m17_223 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m17_51 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="SqlServerMonitoringApi.cs"];
m17_338 [label="Entry Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerMonitoringApi.cs"];
m17_377 [label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="SqlServerMonitoringApi.cs"];
m17_270 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs"];
m17_91 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_92 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="147-160", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_93 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_343 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m17_344 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="471-471", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m17_345 [label="data.Arguments = arguments", span="472-472", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m17_346 [label="return data.Deserialize();", span="476-476", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m17_347 [label=JobLoadException, span="478-478", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m17_348 [label="return null;", span="480-480", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m17_349 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m17_75 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m17_76 [label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="120-142", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_77 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m17_205 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="SqlServerMonitoringApi.cs"];
m17_20 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m17_322 [label="var provider = _storage.QueueProviders.GetProvider(queueName)", span="417-417", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m17_323 [label="var monitoringApi = provider.GetJobQueueMonitoringApi()", span="418-418", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m17_324 [label="return monitoringApi;", span="420-420", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m17_325 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m17_39 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_40 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="80-89", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_41 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_52 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_53 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="94-103", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_54 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m17_208 [label="Entry Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22", cluster="Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SqlServerMonitoringApi.cs"];
m17_69 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m17_70 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="114-115", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m17_71 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m17_179 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m17_180 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="242-243", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m17_181 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m17_276 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs"];
m17_326 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerMonitoringApi.cs"];
m17_134 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="SqlServerMonitoringApi.cs"];
m17_207 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs"];
m17_78 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerMonitoringApi.cs"];
m17_138 [label="Entry Unk.GetEnqueuedJobIds", span="", cluster="Unk.GetEnqueuedJobIds", file="SqlServerMonitoringApi.cs"];
m17_101 [label="Entry Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", span="84-84", cluster="Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", file="SqlServerMonitoringApi.cs"];
m17_135 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="SqlServerMonitoringApi.cs"];
m17_139 [label="Entry Unk.GetEnqueuedAndFetchedCount", span="", cluster="Unk.GetEnqueuedAndFetchedCount", file="SqlServerMonitoringApi.cs"];
m17_15 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_16 [label="var queueApi = GetQueueApi(queue)", span="52-52", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_17 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="53-53", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_18 [label="return counters.EnqueuedCount ?? 0;", span="55-55", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_19 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m17_148 [label="Entry Unk.GetQueues", span="", cluster="Unk.GetQueues", file="SqlServerMonitoringApi.cs"];
m17_62 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m17_63 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="108-109", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m17_64 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m17_314 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs"];
m17_68 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_280 [label="var endDate = DateTime.UtcNow.Date", span="375-375", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_287 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd'')), x => x)", span="383-383", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_288 [label="return GetTimelineStats(connection, keyMaps);", span="385-385", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_281 [label="var dates = new List<DateTime>()", span="376-376", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_284 [label="dates.Add(endDate)", span="379-379", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_285 [label="endDate = endDate.AddDays(-1)", span="380-380", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_282 [label="var i = 0", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_283 [label="i < 7", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_286 [label="i++", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_289 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m17_254 [label="Entry Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SqlServerMonitoringApi.cs"];
m17_49 [label="Entry Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="SqlServerMonitoringApi.cs"];
m17_297 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_298 [label="string sqlQuery = @''\r\nselect [Key], [Value] as [Count] from HangFire.AggregatedCounter\r\nwhere [Key] in @keys''", span="391-393", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m17_299 [label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keyMaps.Keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="395-398", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_300 [label="keyMaps.Keys", span="400-400", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_305 [label="i < keyMaps.Count", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_306 [label="var value = valuesMap[keyMaps.ElementAt(i).Key]", span="408-408", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_307 [label="result.Add(keyMaps.ElementAt(i).Value, value)", span="409-409", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_301 [label="!valuesMap.ContainsKey(key)", span="402-402", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_302 [label="valuesMap.Add(key, 0)", span="402-402", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_303 [label="var result = new Dictionary<DateTime, long>()", span="405-405", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_304 [label="var i = 0", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_309 [label="return result;", span="412-412", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_308 [label="i++", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_310 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m17_240 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SqlServerMonitoringApi.cs"];
m17_133 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerMonitoringApi.cs"];
m17_365 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerMonitoringApi.cs"];
m17_255 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerMonitoringApi.cs"];
m17_159 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_160 [label="var queueApi = GetQueueApi(queue)", span="226-226", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_161 [label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="227-227", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_162 [label="return UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds));", span="229-229", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_163 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m17_206 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs"];
m17_33 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs"];
m17_34 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="74-75", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs"];
m17_35 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs"];
m17_209 [label="Entry Unk.DeserializeJob", span="", cluster="Unk.DeserializeJob", file="SqlServerMonitoringApi.cs"];
m17_381 [label="Hangfire.SqlServer.SqlServerMonitoringApi", span="", file="SqlServerMonitoringApi.cs"];
m17_382 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_383 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_384 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_385 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_386 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_387 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_388 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_389 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_390 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_391 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m17_392 [label=enqueuedJobIds, span="", file="SqlServerMonitoringApi.cs"];
m17_393 [label=enqueuedJobIds, span="", file="SqlServerMonitoringApi.cs"];
m17_394 [label=fetchedJobIds, span="", file="SqlServerMonitoringApi.cs"];
m17_395 [label=string, span="", file="SqlServerMonitoringApi.cs"];
m17_396 [label=sql, span="", file="SqlServerMonitoringApi.cs"];
m17_397 [label=string, span="", file="SqlServerMonitoringApi.cs"];
m17_398 [label=string, span="", file="SqlServerMonitoringApi.cs"];
m18_18 [label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="SqlServerObjectsInstaller.cs"];
m18_22 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m18_23 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="SqlServerObjectsInstaller.cs"];
m18_24 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerObjectsInstaller.cs"];
m18_25 [label="Entry Unk.WarnException", span="", cluster="Unk.WarnException", file="SqlServerObjectsInstaller.cs"];
m18_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="SqlServerObjectsInstaller.cs"];
m18_20 [label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="SqlServerObjectsInstaller.cs"];
m18_26 [label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="SqlServerObjectsInstaller.cs"];
m18_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="SqlServerObjectsInstaller.cs"];
m18_28 [label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="SqlServerObjectsInstaller.cs"];
m18_21 [label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0", cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerObjectsInstaller.cs"];
m18_39 [label="this.FeatureBackground()", span="91-91", cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="SqlServerObjectsInstaller.cs"];
m18_36 [label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m18_37 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerObjectsInstaller.cs"];
m18_38 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerObjectsInstaller.cs"];
m18_40 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerObjectsInstaller.cs"];
m18_41 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerObjectsInstaller.cs"];
m18_42 [label="Exit HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", span="85-85", cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="SqlServerObjectsInstaller.cs"];
m18_35 [label="return reader.ReadToEnd();", span="95-95", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m18_0 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m18_1 [label="connection == null", span="37-37", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", color=green, community=0];
m18_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", color=green, community=0];
m18_3 [label="Log.Info(''Start installing Hangfire SQL objects...'')", span="39-39", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", color=green, community=0];
m18_4 [label="!IsSqlEditionSupported(connection)", span="41-41", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m18_5 [label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="43-43", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m18_19 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerObjectsInstaller.cs"];
m18_13 [label="Log.WarnException(''Deadlock occurred during automatic migration execution. Retrying...'', ex)", span="63-63", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m18_7 [label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 5;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="50-50", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m18_67 [label="Entry Unk.When", span="", cluster="Unk.When", file="SqlServerObjectsInstaller.cs"];
m18_59 [label="Entry HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_60 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the failed set'', ((string[])(null)))", span="137-137", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_61 [label="this.ScenarioSetup(scenarioInfo)", span="139-139", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_62 [label="this.FeatureBackground()", span="141-141", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_63 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="143-143", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_64 [label="testRunner.Then(''the job should be added to the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="145-145", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_65 [label="this.ScenarioCleanup()", span="147-147", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_66 [label="Exit HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_58 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="SqlServerObjectsInstaller.cs"];
m18_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="SqlServerObjectsInstaller.cs"];
m18_16 [label="HangFire.Tests.States.FailedStateFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="SqlServerObjectsInstaller.cs"];
m18_14 [label="Entry HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="SqlServerObjectsInstaller.cs"];
m18_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SqlServerObjectsInstaller.cs"];
m18_9 [label="Entry HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="SqlServerObjectsInstaller.cs"];
m18_12 [label="Exit HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="SqlServerObjectsInstaller.cs"];
m18_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="SqlServerObjectsInstaller.cs"];
m18_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Failed state''))", span="48-49", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="SqlServerObjectsInstaller.cs"];
m18_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="SqlServerObjectsInstaller.cs"];
m18_17 [label="Exit HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="SqlServerObjectsInstaller.cs"];
m18_68 [label="Entry HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="154-154", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_69 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the failed set'', ((string[])(null)))", span="156-156", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_70 [label="this.ScenarioSetup(scenarioInfo)", span="158-158", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_71 [label="this.FeatureBackground()", span="160-160", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_72 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="162-162", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_73 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_74 [label="testRunner.Then(''the job should be removed from the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="166-166", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_75 [label="this.ScenarioCleanup()", span="168-168", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_76 [label="Exit HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="154-154", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="SqlServerObjectsInstaller.cs"];
m18_31 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="SqlServerObjectsInstaller.cs"];
m18_33 [label="Exit HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="SqlServerObjectsInstaller.cs"];
m18_32 [label="testRunner.And(''the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="SqlServerObjectsInstaller.cs"];
m18_34 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="SqlServerObjectsInstaller.cs"];
m18_45 [label="Entry HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="104-104", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_47 [label="this.ScenarioSetup(scenarioInfo)", span="106-106", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_48 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_49 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_50 [label="table1.AddRow(new string[] {\r\n                        ''FailedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_51 [label="table1.AddRow(new string[] {\r\n                        ''ExceptionType'',\r\n                        ''System.InvalidOperationException''})", span="116-118", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_52 [label="table1.AddRow(new string[] {\r\n                        ''ExceptionMessage'',\r\n                        ''Hello''})", span="119-121", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_53 [label="table1.AddRow(new string[] {\r\n                        ''ExceptionDetails'',\r\n                        ''<Non-empty>''})", span="122-124", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_54 [label="testRunner.Then(''properties table should contain the following items:'', ((string)(null)), table1, ''Then '')", span="126-126", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_55 [label="this.ScenarioCleanup()", span="128-128", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_56 [label="Exit HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m18_43 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="SqlServerObjectsInstaller.cs"];
m18_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="SqlServerObjectsInstaller.cs"];
m18_30 [label="Entry HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="SqlServerObjectsInstaller.cs"];
m18_57 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="SqlServerObjectsInstaller.cs"];
m18_77 [label="HangFire.Tests.States.FailedStateFeature", span="", file="SqlServerObjectsInstaller.cs"];
m20_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerStorageOptions.cs"];
m20_17 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerStorageOptions.cs"];
m20_11 [label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="81-81", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerStorageOptions.cs"];
m20_12 [label="var enqueuedState = context.NewState as EnqueuedState", span="83-83", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerStorageOptions.cs"];
m20_15 [label="transaction.AddToQueue(enqueuedState.Queue, context.JobId)", span="91-91", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerStorageOptions.cs"];
m20_13 [label="enqueuedState == null", span="84-84", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerStorageOptions.cs"];
m20_14 [label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Enqueued state.'',\r\n                        typeof(Handler).FullName));", span="86-88", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerStorageOptions.cs"];
m20_16 [label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="81-81", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerStorageOptions.cs"];
m20_0 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="SqlServerStorageOptions.cs"];
m20_1 [label="Exit HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="SqlServerStorageOptions.cs"];
m20_20 [label="Entry HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="94-94", cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerStorageOptions.cs"];
m20_21 [label="Exit HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="94-94", cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerStorageOptions.cs"];
m20_19 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerStorageOptions.cs"];
m20_18 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerStorageOptions.cs"];
m20_10 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorageOptions.cs"];
m20_2 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="SqlServerStorageOptions.cs"];
m20_3 [label="EnqueuedAt = DateTime.UtcNow", span="38-38", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="SqlServerStorageOptions.cs"];
m20_4 [label="Queue = queue", span="39-39", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="SqlServerStorageOptions.cs"];
m20_5 [label="Exit HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="SqlServerStorageOptions.cs"];
m20_6 [label="Entry HangFire.States.EnqueuedState.SerializeData()", span="70-70", cluster="HangFire.States.EnqueuedState.SerializeData()", file="SqlServerStorageOptions.cs"];
m20_7 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueuedAt'', JobHelper.ToStringTimestamp(EnqueuedAt) },\r\n                { ''Queue'', Queue }\r\n            };", span="72-76", cluster="HangFire.States.EnqueuedState.SerializeData()", file="SqlServerStorageOptions.cs"];
m20_8 [label="Exit HangFire.States.EnqueuedState.SerializeData()", span="70-70", cluster="HangFire.States.EnqueuedState.SerializeData()", file="SqlServerStorageOptions.cs"];
m20_22 [label="HangFire.States.EnqueuedState", span="", file="SqlServerStorageOptions.cs"];
m21_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyTransaction.cs"];
m21_2 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", span="36-36", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m21_3 [label="activator == null", span="38-38", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m21_5 [label="_activator = activator", span="39-39", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m21_4 [label="throw new ArgumentNullException(''activator'');", span="38-38", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m21_6 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", span="36-36", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m21_0 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess()", span="31-31", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess()", file="SqlServerWriteOnlyTransaction.cs"];
m21_1 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess()", span="31-31", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess()", file="SqlServerWriteOnlyTransaction.cs"];
m21_51 [label="Entry Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", span="24-24", cluster="Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", file="SqlServerWriteOnlyTransaction.cs"];
m21_52 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="SqlServerWriteOnlyTransaction.cs"];
m21_100 [label="Entry Hangfire.Server.IServerExceptionFilter.OnServerException(Hangfire.Server.ServerExceptionContext)", span="27-27", cluster="Hangfire.Server.IServerExceptionFilter.OnServerException(Hangfire.Server.ServerExceptionContext)", file="SqlServerWriteOnlyTransaction.cs"];
m21_93 [label="Entry Hangfire.Server.IServerFilter.OnPerforming(Hangfire.Server.PerformingContext)", span="27-27", cluster="Hangfire.Server.IServerFilter.OnPerforming(Hangfire.Server.PerformingContext)", file="SqlServerWriteOnlyTransaction.cs"];
m21_59 [label="Entry Hangfire.Server.IJobPerformer.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="20-20", cluster="Hangfire.Server.IJobPerformer.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m21_43 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs"];
m21_36 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", span="80-80", cluster="Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", file="SqlServerWriteOnlyTransaction.cs"];
m21_40 [label="return new JobFilterInfo(_getFiltersThunk(job));", span="82-82", cluster="Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m21_41 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", span="80-80", cluster="Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", file="SqlServerWriteOnlyTransaction.cs"];
m21_8 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", span="42-42", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_9 [label="filters != null", span="45-45", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_10 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="47-47", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_11 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", span="42-42", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_54 [label="Entry Unk.thunk", span="", cluster="Unk.thunk", file="SqlServerWriteOnlyTransaction.cs"];
m21_38 [label="Entry Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", span="26-26", cluster="Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", file="SqlServerWriteOnlyTransaction.cs"];
m21_53 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="SqlServerWriteOnlyTransaction.cs"];
m21_60 [label="Entry Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", span="26-26", cluster="Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", file="SqlServerWriteOnlyTransaction.cs"];
m21_39 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", span="183-183", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_97 [label="filters.Reverse()", span="187-187", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m21_98 [label="filter.OnServerException(context)", span="189-189", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_99 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", span="183-183", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_63 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_13 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="47-47", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_12 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_14 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_16 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_17 [label="new JobFilter(f, JobFilterScope.Type, null)", span="47-47", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_18 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_56 [label="result = performer.Perform(_activator, context.CancellationToken)", span="95-95", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_57 [label="return new PerformedContext(context, result, false, null);", span="96-96", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_64 [label="InvokePerformFilter(filter, preContext, next)", span="100-100", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_61 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_55 [label="Entry lambda expression", span="93-97", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_58 [label="Exit lambda expression", span="93-97", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_62 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_65 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m21_66 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="107-107", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_67 [label="filter.OnPerforming(preContext)", span="114-114", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_72 [label="preContext.Canceled", span="127-127", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_73 [label="return new PerformedContext(\r\n                    preContext, null, true, null);", span="129-130", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_76 [label="postContext = continuation()", span="137-137", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_79 [label="postContext = new PerformedContext(\r\n                    preContext, null, false, ex)", span="142-143", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m21_80 [label="filter.OnPerformed(postContext)", span="147-147", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_86 [label="filter.OnPerformed(postContext)", span="166-166", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_68 [label=OperationCanceledException, span="116-116", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_70 [label=Exception, span="120-120", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_69 [label="throw;", span="118-118", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_71 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during execution of one of the filters'',\r\n                    filterException);", span="122-124", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_74 [label="var wasError = false", span="133-133", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_75 [label="PerformedContext postContext", span="134-134", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_77 [label=Exception, span="139-139", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_85 [label="!wasError", span="162-162", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_78 [label="wasError = true", span="141-141", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_83 [label="!postContext.ExceptionHandled", span="156-156", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_91 [label="return postContext;", span="180-180", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_81 [label=Exception, span="149-149", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m21_82 [label="throw new JobPerformanceException(\r\n                        ''An exception occurred during execution of one of the filters'',\r\n                        filterException);", span="151-153", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_84 [label="throw;", span="158-158", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_87 [label=OperationCanceledException, span="168-168", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_89 [label=Exception, span="172-172", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_88 [label="throw;", span="170-170", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_90 [label="throw new JobPerformanceException(\r\n                        ''An exception occurred during execution of one of the filters'',\r\n                        filterException);", span="174-176", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m21_92 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="107-107", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_15 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerWriteOnlyTransaction.cs"];
m21_94 [label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="SqlServerWriteOnlyTransaction.cs"];
m21_42 [label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40", cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_19 [label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38", cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="SqlServerWriteOnlyTransaction.cs"];
m21_20 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="51-51", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_21 [label="context == null", span="53-53", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_23 [label="performer == null", span="54-54", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_25 [label="var filterInfo = GetFilters(context.Job)", span="56-56", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_26 [label="return PerformJobWithFilters(context, performer, filterInfo.ServerFilters);", span="60-60", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_30 [label="var exceptionContext = new ServerExceptionContext(context, ex)", span="68-68", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m21_22 [label="throw new ArgumentNullException(''context'');", span="53-53", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_24 [label="throw new ArgumentNullException(''performer'');", span="54-54", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_31 [label="InvokeServerExceptionFilters(exceptionContext, filterInfo.ServerExceptionFilters)", span="69-69", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_27 [label=OperationCanceledException, span="62-62", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_28 [label="throw;", span="64-64", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_29 [label=Exception, span="66-66", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_32 [label="!exceptionContext.ExceptionHandled", span="71-71", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_33 [label="throw;", span="73-73", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_34 [label="return null;", span="77-77", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_35 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="51-51", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m21_37 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="85-85", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_44 [label="object result = null", span="90-90", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_45 [label="var preContext = new PerformingContext(context)", span="92-92", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_46 [label="Func<PerformedContext> continuation = () =>\r\n            {\r\n                result = performer.Perform(_activator, context.CancellationToken);\r\n                return new PerformedContext(context, result, false, null);\r\n            }", span="93-97", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_47 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokePerformFilter(filter, preContext, next))", span="99-100", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_48 [label="thunk()", span="102-102", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m21_49 [label="return result;", span="104-104", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_50 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="85-85", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="SqlServerWriteOnlyTransaction.cs"];
m21_95 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="SqlServerWriteOnlyTransaction.cs"];
m21_96 [label="Entry Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", span="33-33", cluster="Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", file="SqlServerWriteOnlyTransaction.cs"];
m21_101 [label="Hangfire.Server.DefaultJobPerformanceProcess", span="", file="SqlServerWriteOnlyTransaction.cs"];
m21_102 [label="System.Collections.Generic.IEnumerable<object>", span="", file="SqlServerWriteOnlyTransaction.cs"];
m21_103 [label="Hangfire.Server.PerformContext", span="", file="SqlServerWriteOnlyTransaction.cs"];
m21_104 [label="Hangfire.Server.IJobPerformer", span="", file="SqlServerWriteOnlyTransaction.cs"];
m21_105 [label=preContext, span="", file="SqlServerWriteOnlyTransaction.cs"];
m21_106 [label="System.Func<Hangfire.Server.PerformedContext>", span="", file="SqlServerWriteOnlyTransaction.cs"];
m21_107 [label="Hangfire.Server.IServerFilter", span="", file="SqlServerWriteOnlyTransaction.cs"];
m22_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SucceededState.cs"];
m22_10 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SucceededState.cs"];
m22_11 [label="filters == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SucceededState.cs"];
m22_13 [label="_getFiltersThunk = md => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SucceededState.cs"];
m22_12 [label="throw new ArgumentNullException(''filters'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SucceededState.cs"];
m22_14 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SucceededState.cs"];
m22_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="SucceededState.cs"];
m22_66 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="SucceededState.cs"];
m22_90 [label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SucceededState.cs"];
m22_67 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SucceededState.cs"];
m22_0 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_1 [label="connection == null", span="34-34", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_3 [label="handlers == null", span="35-35", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_5 [label="_connection = connection", span="37-37", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_6 [label="_handlerCollection = GetHandlerCollection(handlers)", span="38-38", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_2 [label="throw new ArgumentNullException(''connection'');", span="34-34", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_4 [label="throw new ArgumentNullException(''handlers'');", span="35-35", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_7 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_35 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SucceededState.cs"];
m22_101 [label="Entry HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27", cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="SucceededState.cs"];
m22_36 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="28-28", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededState.cs"];
m22_63 [label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37", cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="SucceededState.cs"];
m22_89 [label="Entry HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)", span="26-26", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_77 [label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", span="184-184", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", file="SucceededState.cs"];
m22_91 [label="return new JobFilterInfo(_getFiltersThunk(job));", span="186-186", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", file="SucceededState.cs"];
m22_92 [label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", span="184-184", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", file="SucceededState.cs"];
m22_37 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="SucceededState.cs"];
m22_94 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SucceededState.cs"];
m22_78 [label="Entry HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="160-160", cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="SucceededState.cs"];
m22_81 [label="var context = new ElectStateContext(\r\n                stateContext, toState, fromStateName, _connection)", span="166-167", cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="SucceededState.cs"];
m22_82 [label="return context.ElectState(filters);", span="169-169", cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", color=red, community=0, file="SucceededState.cs"];
m22_83 [label="Exit HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="160-160", cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="SucceededState.cs"];
m22_65 [label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27", cluster="HangFire.Storage.JobData.EnsureLoaded()", file="SucceededState.cs"];
m22_93 [label="Entry HangFire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.JobFilter>)", span="40-40", cluster="HangFire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.JobFilter>)", file="SucceededState.cs"];
m22_38 [label="Entry HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", span="132-132", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_68 [label="var filterInfo = GetFilters(context.Job)", span="136-136", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_69 [label="var electedState = ElectState(context, toState, oldStateName, filterInfo.ElectStateFilters)", span="138-138", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_70 [label="ApplyState(context, electedState, oldStateName, filterInfo.ApplyStateFilters)", span="139-139", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_74 [label="ApplyState(context, failedState, oldStateName, Enumerable.Empty<IApplyStateFilter>())", span="153-153", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_71 [label="return true;", span="142-142", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_72 [label=Exception, span="144-144", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_73 [label="var failedState = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during the transition of job's state''\r\n                }", span="146-149", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_75 [label="return false;", span="156-156", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_76 [label="Exit HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", span="132-132", cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.IState, string)", file="SucceededState.cs"];
m22_100 [label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22", cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()", file="SucceededState.cs"];
m22_62 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="36-36", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="SucceededState.cs"];
m22_22 [label="Entry HangFire.Common.JobFilter.JobFilter(object, HangFire.Common.JobFilterScope, int?)", span="38-38", cluster="HangFire.Common.JobFilter.JobFilter(object, HangFire.Common.JobFilterScope, int?)", file="SucceededState.cs"];
m22_19 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="SucceededState.cs"];
m22_16 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="49-49", cluster="lambda expression", file="SucceededState.cs"];
m22_15 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="SucceededState.cs"];
m22_17 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="SucceededState.cs"];
m22_20 [label="new JobFilter(f, JobFilterScope.Type, null)", span="49-49", cluster="lambda expression", file="SucceededState.cs"];
m22_21 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="SucceededState.cs"];
m22_79 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="172-172", cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SucceededState.cs"];
m22_86 [label="var context = new ApplyStateContext(\r\n                _connection, stateContext, electedState, oldStateName)", span="178-179", cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SucceededState.cs"];
m22_87 [label="context.ApplyState(_handlerCollection, filters)", span="181-181", cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SucceededState.cs"];
m22_88 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="172-172", cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.IState, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="SucceededState.cs"];
m22_18 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SucceededState.cs"];
m22_9 [label="Entry HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="189-189", cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_95 [label="var handlerCollection = new StateHandlerCollection()", span="191-191", cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_96 [label=handlers, span="192-192", cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_97 [label="handlerCollection.AddHandler(handler)", span="194-194", cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_98 [label="return handlerCollection;", span="197-197", cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_99 [label="Exit HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="189-189", cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="SucceededState.cs"];
m22_84 [label="Entry HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.IState, string, HangFire.Storage.IStorageConnection)", span="27-27", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.IState, string, HangFire.Storage.IStorageConnection)", file="SucceededState.cs"];
m22_23 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="52-52", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_24 [label="job == null", span="57-57", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_26 [label="parameters == null", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_28 [label="state == null", span="59-59", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_30 [label="var jobId = _connection.CreateExpiredJob(\r\n                job,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="61-64", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_31 [label="var context = new StateContext(jobId, job)", span="66-66", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_32 [label="ChangeState(context, state, null)", span="67-67", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_25 [label="throw new ArgumentNullException(''job'');", span="57-57", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_27 [label="throw new ArgumentNullException(''parameters'');", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_29 [label="throw new ArgumentNullException(''state'');", span="59-59", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_33 [label="return jobId;", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_34 [label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="52-52", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="SucceededState.cs"];
m22_85 [label="Entry HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="69-69", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="SucceededState.cs"];
m22_80 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="SucceededState.cs"];
m22_39 [label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="72-72", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_40 [label="jobId == null", span="75-75", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_42 [label="toState == null", span="76-76", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_44 [label="fromStates == null", span="77-77", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_46 [label="_connection.AcquireJobLock(jobId)", span="85-85", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_48 [label="var jobData = _connection.GetJobData(jobId)", span="89-89", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_51 [label="!fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="98-98", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_56 [label="toState = new FailedState(ex)\r\n                    {\r\n                        Reason = String.Format(\r\n                            ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                            toState.Name, jobId)\r\n                    }", span="115-120", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_58 [label="var context = new StateContext(jobId, jobData.Job)", span="125-125", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_41 [label="throw new ArgumentNullException(''jobId'');", span="75-75", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_43 [label="throw new ArgumentNullException(''toState'');", span="76-76", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_45 [label="throw new ArgumentNullException(''fromStates'');", span="77-77", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_47 [label="bool loadSucceeded", span="87-87", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_49 [label="jobData == null", span="91-91", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_53 [label="jobData.EnsureLoaded()", span="105-105", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_59 [label="var stateChanged = ChangeState(context, toState, jobData.State)", span="126-126", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_50 [label="return false;", span="95-95", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_52 [label="return false;", span="100-100", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_54 [label="loadSucceeded = true", span="106-106", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_55 [label=JobLoadException, span="108-108", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_57 [label="loadSucceeded = false", span="122-122", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_60 [label="return loadSucceeded && stateChanged;", span="128-128", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_61 [label="Exit HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="72-72", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededState.cs"];
m22_102 [label="HangFire.States.StateMachine", span="", file="SucceededState.cs"];
m22_103 [label="System.Collections.Generic.IEnumerable<object>", span="", file="SucceededState.cs"];
m23_23 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_DoesNotAppendEntry_ForNullResult()", span="37-37", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_DoesNotAppendEntry_ForNullResult()", file="SucceededStateFacts.cs"];
m23_20 [label="var state = new SucceededState(null, 0, 0)", span="39-39", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_DoesNotAppendEntry_ForNullResult()", file="SucceededStateFacts.cs"];
m23_21 [label="var data = state.SerializeData()", span="41-41", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_DoesNotAppendEntry_ForNullResult()", file="SucceededStateFacts.cs"];
m23_19 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_DoesNotAppendEntry_ForNullResult()", span="37-37", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_DoesNotAppendEntry_ForNullResult()", file="SucceededStateFacts.cs"];
m23_22 [label="Assert.False(data.ContainsKey(''Result''))", span="43-43", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_DoesNotAppendEntry_ForNullResult()", file="SucceededStateFacts.cs"];
m23_12 [label="Assert.Equal(''\''Returned  value\'''', data[''Result''])", span="30-30", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m23_14 [label="Assert.Equal(''123'', data[''PerformanceDuration''])", span="32-32", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m23_0 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="11-11", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="SucceededStateFacts.cs"];
m23_1 [label="Assert.Equal(''Succeeded'', SucceededState.StateName)", span="13-13", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="SucceededStateFacts.cs"];
m23_2 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="11-11", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="SucceededStateFacts.cs"];
m23_3 [label="Write(Request.LinkTo(''/css/styles.css''))", span="50-50", cluster="HangFire.Web.Pages.ErrorPage.Execute()", file="SucceededStateFacts.cs"];
m23_4 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="17-17", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs"];
m23_5 [label="var state = CreateState()", span="19-19", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs"];
m23_6 [label="Assert.Equal(SucceededState.StateName, state.Name)", span="20-20", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs"];
m23_7 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="17-17", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs"];
m23_8 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", span="71-71", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", file="SucceededStateFacts.cs"];
m23_9 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="24-24", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m23_44 [label="return new SucceededState(''Returned  value'', 11, 123);", span="73-73", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", file="SucceededStateFacts.cs"];
m23_45 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", span="71-71", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", file="SucceededStateFacts.cs"];
m23_25 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SucceededStateFacts.cs"];
m23_10 [label="var state = CreateState()", span="26-26", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m23_11 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="SucceededStateFacts.cs"];
m23_13 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="SucceededStateFacts.cs"];
m23_15 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="SucceededStateFacts.cs"];
m23_16 [label="HangFire.Web.Pages.ErrorPage", span="", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m23_26 [label="Entry Unk.False", span="", cluster="Unk.False", file="SucceededStateFacts.cs"];
m23_40 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", span="65-65", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs"];
m23_41 [label="var state = CreateState()", span="67-67", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs"];
m23_42 [label="Assert.False(state.IgnoreJobLoadException)", span="68-68", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs"];
m23_43 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", span="65-65", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs"];
m23_24 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SucceededStateFacts.cs"];
m23_27 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", span="47-47", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="SucceededStateFacts.cs"];
m23_28 [label="var process = new Process()", span="49-49", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", color=green, community=0, file="SucceededStateFacts.cs"];
m23_29 [label="var state = new SucceededState(process, 0, 0)", span="50-50", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", color=green, community=0, file="SucceededStateFacts.cs"];
m23_30 [label="var data = state.SerializeData()", span="52-52", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", color=green, community=0, file="SucceededStateFacts.cs"];
m23_31 [label="Assert.Contains(''Can not serialize'', data[''Result''])", span="54-54", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", color=green, community=0, file="SucceededStateFacts.cs"];
m23_32 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", span="47-47", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="SucceededStateFacts.cs"];
m23_18 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="SucceededStateFacts.cs"];
m23_17 [label="Entry Hangfire.States.SucceededState.SerializeData()", span="158-158", cluster="Hangfire.States.SucceededState.SerializeData()", file="SucceededStateFacts.cs"];
m23_34 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="SucceededStateFacts.cs"];
m23_39 [label="Entry Unk.True", span="", cluster="Unk.True", file="SucceededStateFacts.cs"];
m23_35 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="58-58", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs"];
m23_36 [label="var state = CreateState()", span="60-60", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs"];
m23_37 [label="Assert.True(state.IsFinal)", span="61-61", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs"];
m23_38 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="58-58", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs"];
m23_33 [label="Entry System.Diagnostics.Process.Process()", span="0-0", cluster="System.Diagnostics.Process.Process()", file="SucceededStateFacts.cs"];
n121 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n121 -> n119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n5  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n6  [key=2, style=dotted];
n4 -> n0  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=2, style=dotted];
n8 -> n11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n9 -> n7  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=2, style=dotted];
n13 -> n11  [key=0, style=bold, color=blue];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n21  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n22  [key=2, style=dotted];
n21 -> n119  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n23  [key=2, style=dotted];
n18 -> n24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n19 -> n20  [key=0, style=solid];
n19 -> n23  [key=2, style=dotted];
n19 -> n28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n24 -> n25  [key=0, style=solid];
n20 -> n15  [key=0, style=bold, color=blue];
n28 -> n29  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=2, style=dotted];
n26 -> n24  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n29 -> n27  [key=2, style=dotted];
n30 -> n28  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n31 -> n90  [key=3, color=darkorchid, style=bold, label="Property variable System.Func<int, System.TimeSpan> DelayCallback"];
n32 -> n33  [key=0, style=solid];
n32 -> n21  [key=2, style=dotted];
n32 -> n7  [key=3, color=darkorchid, style=bold, label="Property variable Hangfire.Server.IServerProcess InnerProcess"];
n33 -> n34  [key=0, style=solid];
n33 -> n37  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n23  [key=2, style=dotted];
n34 -> n38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n35 -> n36  [key=0, style=solid];
n35 -> n23  [key=2, style=dotted];
n35 -> n42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n38 -> n39  [key=0, style=solid];
n36 -> n31  [key=0, style=bold, color=blue];
n42 -> n43  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=2, style=dotted];
n40 -> n38  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n43 -> n41  [key=2, style=dotted];
n44 -> n42  [key=0, style=bold, color=blue];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n21  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n51  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n23  [key=2, style=dotted];
n48 -> n52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n49 -> n50  [key=0, style=solid];
n49 -> n23  [key=2, style=dotted];
n49 -> n56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n52 -> n53  [key=0, style=solid];
n50 -> n45  [key=0, style=bold, color=blue];
n56 -> n57  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n55  [key=2, style=dotted];
n54 -> n52  [key=0, style=bold, color=blue];
n57 -> n58  [key=0, style=solid];
n57 -> n55  [key=2, style=dotted];
n58 -> n56  [key=0, style=bold, color=blue];
n59 -> n60  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n21  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n51  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n23  [key=2, style=dotted];
n62 -> n65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n63 -> n64  [key=0, style=solid];
n63 -> n23  [key=2, style=dotted];
n63 -> n68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n65 -> n66  [key=0, style=solid];
n64 -> n59  [key=0, style=bold, color=blue];
n68 -> n69  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n41  [key=2, style=dotted];
n67 -> n65  [key=0, style=bold, color=blue];
n69 -> n70  [key=0, style=solid];
n69 -> n41  [key=2, style=dotted];
n70 -> n68  [key=0, style=bold, color=blue];
n71 -> n72  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n72 -> n21  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n75  [key=2, style=dotted];
n74 -> n71  [key=0, style=bold, color=blue];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n21  [key=2, style=dotted];
n77 -> n79  [key=1, style=dashed, color=darkseagreen4, label=collection];
n78 -> n79  [key=0, style=solid];
n78 -> n5  [key=2, style=dotted];
n78 -> n81  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n75  [key=2, style=dotted];
n80 -> n76  [key=0, style=bold, color=blue];
n82 -> n83  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n21  [key=2, style=dotted];
n83 -> n85  [key=1, style=dashed, color=darkseagreen4, label=collection];
n84 -> n85  [key=0, style=solid];
n84 -> n87  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n75  [key=2, style=dotted];
n86 -> n82  [key=0, style=bold, color=blue];
n88 -> n89  [key=0, style=solid];
n89 -> n90  [key=0, style=solid];
n89 -> n5  [key=2, style=dotted];
n89 -> n91  [key=1, style=dashed, color=darkseagreen4, label=element];
n89 -> n92  [key=1, style=dashed, color=darkseagreen4, label=element];
n89 -> n93  [key=1, style=dashed, color=darkseagreen4, label=element];
n90 -> n91  [key=0, style=solid];
n90 -> n21  [key=2, style=dotted];
n90 -> n92  [key=1, style=dashed, color=darkseagreen4, label=collection];
n90 -> n93  [key=1, style=dashed, color=darkseagreen4, label=collection];
n91 -> n92  [key=0, style=solid];
n91 -> n95  [key=2, style=dotted];
n91 -> n96  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n81  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [key=2, style=dotted];
n93 -> n97  [key=2, style=dotted];
n94 -> n88  [key=0, style=bold, color=blue];
n98 -> n99  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n5  [key=2, style=dotted];
n99 -> n101  [key=1, style=dashed, color=darkseagreen4, label=supervisor];
n99 -> n102  [key=1, style=dashed, color=darkseagreen4, label=supervisor];
n99 -> n103  [key=1, style=dashed, color=darkseagreen4, label=supervisor];
n100 -> n101  [key=0, style=solid];
n100 -> n21  [key=2, style=dotted];
n100 -> n102  [key=1, style=dashed, color=darkseagreen4, label=collection];
n100 -> n103  [key=1, style=dashed, color=darkseagreen4, label=collection];
n101 -> n102  [key=0, style=solid];
n101 -> n81  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n102 -> n105  [key=2, style=dotted];
n103 -> n104  [key=0, style=solid];
n103 -> n95  [key=2, style=dotted];
n103 -> n96  [key=2, style=dotted];
n104 -> n98  [key=0, style=bold, color=blue];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n21  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n96  [key=2, style=dotted];
n109 -> n106  [key=0, style=bold, color=blue];
n110 -> n111  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n21  [key=2, style=dotted];
n111 -> n113  [key=1, style=dashed, color=darkseagreen4, label=collection];
n112 -> n113  [key=0, style=solid];
n112 -> n114  [key=1, style=dashed, color=darkseagreen4, label=array];
n112 -> n115  [key=1, style=dashed, color=darkseagreen4, label=array];
n113 -> n114  [key=0, style=solid];
n113 -> n117  [key=2, style=dotted];
n114 -> n115  [key=0, style=solid];
n114 -> n118  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n118  [key=2, style=dotted];
n116 -> n110  [key=0, style=bold, color=blue];
n119 -> n120  [key=0, style=solid];
n119 -> n14  [key=2, style=dotted];
n120 -> n21  [key=0, style=bold, color=blue];
m0_11 -> m0_0  [key=0, style=bold, color=blue];
m0_12 -> m0_17  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m0_12 -> m0_13  [key=0, style=solid];
m0_20 -> m0_26  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_40  [key=2, style=dotted];
m0_31 -> m0_41  [key=2, style=dotted];
m0_31 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m0_26 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_36  [key=2, style=dotted];
m0_26 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_29 -> m0_31  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_39  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_42  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_43  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_37  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_28 -> m0_38  [key=2, style=dotted];
m0_30 -> m0_35  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_20  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m0_0 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m0_0 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m0_0 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_13  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_2  [key=0, style=bold, color=blue];
m0_2 -> m0_11  [key=0, style=solid];
m0_2 -> m0_12  [key=2, style=dotted];
m0_2 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>"];
m0_2 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>"];
m0_4 -> m0_11  [key=0, style=solid];
m0_4 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_10  [key=0, style=solid];
m0_6 -> m0_11  [key=0, style=solid];
m0_6 -> m0_12  [key=2, style=dotted];
m0_6 -> m0_10  [key=0, style=solid];
m0_17 -> m0_17  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m0_17 -> m0_19  [key=0, style=solid, color=green];
m0_17 -> m0_22  [key=2, style=dotted, color=green];
m0_14 -> m0_17  [key=0, style=solid, color=green];
m0_14 -> m0_15  [key=0, style=solid, color=green];
m0_14 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_14 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_14 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_14 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_13 -> m0_14  [key=0, style=solid, color=green];
m0_13 -> m0_18  [key=0, style=solid];
m0_13 -> m0_20  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_15 -> m0_21  [key=2, style=dotted, color=green];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_12  [key=0, style=bold, color=blue];
m0_44 -> m0_17  [key=1, style=dashed, color=green, label="Hangfire.Server.SchedulePoller"];
m0_44 -> m0_14  [key=1, style=dashed, color=green, label="Hangfire.Server.SchedulePoller"];
m0_44 -> m0_15  [key=1, style=dashed, color=green, label="Hangfire.Server.SchedulePoller"];
m0_44 -> m0_16  [key=1, style=dashed, color=green, label="Hangfire.Server.SchedulePoller"];
m0_44 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m0_44 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m0_44 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m0_44 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m0_44 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m1_7 -> m1_8  [key=0, style=solid, color=red];
m1_7 -> m1_10  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m1_7 -> m1_11  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m1_8 -> m1_9  [key=0, style=solid, color=red];
m1_8 -> m1_10  [key=0, style=solid, color=red];
m1_10 -> m1_11  [key=0, style=solid, color=red];
m1_10 -> m1_6  [key=2, style=dotted, color=red];
m1_11 -> m1_12  [key=0, style=solid, color=red];
m1_11 -> m1_13  [key=2, style=dotted, color=red];
m1_9 -> m1_12  [key=0, style=solid, color=red];
m1_9 -> m1_5  [key=2, style=dotted, color=red];
m1_12 -> m1_7  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=red];
m1_0 -> m1_3  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m1_1 -> m1_2  [key=0, style=solid, color=red];
m1_1 -> m1_3  [key=0, style=solid, color=red];
m1_3 -> m1_4  [key=0, style=solid, color=red];
m1_3 -> m1_6  [key=2, style=dotted, color=red];
m1_2 -> m1_4  [key=0, style=solid, color=red];
m1_2 -> m1_5  [key=2, style=dotted, color=red];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_10  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> n75  [key=2, style=dotted];
m4_9 -> m4_6  [key=0, style=bold, color=blue];
m4_190 -> m4_191  [key=0, style=solid, color=green];
m4_191 -> m4_192  [key=0, style=solid, color=green];
m4_191 -> m4_23  [key=2, style=dotted, color=green];
m4_191 -> m4_196  [key=1, style=dashed, color=green, label="lambda expression"];
m4_192 -> m4_193  [key=0, style=solid, color=green];
m4_192 -> m4_121  [key=2, style=dotted, color=green];
m4_192 -> m4_10  [key=2, style=dotted, color=green];
m4_192 -> m4_200  [key=1, style=dashed, color=green, label="lambda expression"];
m4_193 -> m4_194  [key=0, style=solid, color=green];
m4_193 -> m4_24  [key=2, style=dotted, color=green];
m4_193 -> m4_205  [key=1, style=dashed, color=green, label=performer];
m4_194 -> m4_195  [key=0, style=solid, color=green];
m4_194 -> m4_10  [key=2, style=dotted, color=green];
m4_194 -> m4_204  [key=1, style=dashed, color=green, label="lambda expression"];
m4_195 -> m4_190  [key=0, style=bold, color=blue];
m4_53 -> m4_219  [key=0, style=solid];
m4_219 -> m4_220  [key=0, style=solid];
m4_220 -> m4_53  [key=0, style=bold, color=blue];
m4_101 -> m4_239  [key=0, style=solid];
m4_101 -> m4_240  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_239 -> m4_240  [key=0, style=solid];
m4_240 -> m4_241  [key=0, style=solid];
m4_240 -> n75  [key=2, style=dotted];
m4_241 -> m4_101  [key=0, style=bold, color=blue];
m4_24 -> m4_251  [key=0, style=solid];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_253  [key=2, style=dotted];
m4_252 -> m4_24  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_91 -> m4_92  [key=0, style=solid];
m4_93 -> m4_23  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_94 -> m4_24  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_95 -> m4_25  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_26  [key=2, style=dotted];
m4_97 -> m4_91  [key=0, style=bold, color=blue];
m4_207 -> m4_208  [key=0, style=solid];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_38  [key=2, style=dotted];
m4_208 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_209 -> m4_24  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_210 -> m4_25  [key=2, style=dotted];
m4_210 -> m4_211  [key=0, style=solid];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> n75  [key=2, style=dotted];
m4_212 -> m4_207  [key=0, style=bold, color=blue];
m4_186 -> m4_248  [key=0, style=solid];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_250  [key=2, style=dotted];
m4_249 -> m4_186  [key=0, style=bold, color=blue];
m4_102 -> m4_103  [key=0, style=solid];
m4_104 -> m4_23  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_105 -> m4_24  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_106 -> m4_25  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_103 -> m4_104  [key=0, style=solid];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_26  [key=2, style=dotted];
m4_108 -> m4_102  [key=0, style=bold, color=blue];
m4_54 -> m4_55  [key=0, style=solid];
m4_56 -> m4_23  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_57 -> m4_24  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_58 -> m4_25  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_26  [key=2, style=dotted];
m4_60 -> m4_54  [key=0, style=bold, color=blue];
m4_64 -> m4_56  [key=3, color=darkorchid, style=bold, label="Parameter variable int intArg"];
m4_64 -> m4_244  [key=0, style=solid];
m4_64 -> m4_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_64 -> m4_246  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_244 -> m4_245  [key=0, style=solid];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> n75  [key=2, style=dotted];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> n75  [key=2, style=dotted];
m4_247 -> m4_64  [key=0, style=bold, color=blue];
m4_65 -> m4_66  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_79  [key=2, style=dotted];
m4_72 -> m4_24  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_73 -> m4_25  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_68 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_77  [key=2, style=dotted];
m4_69 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_69 -> m4_70  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_78  [key=2, style=dotted];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_26  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_76  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_75 -> m4_65  [key=0, style=bold, color=blue];
m4_162 -> m4_163  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_38  [key=2, style=dotted];
m4_164 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_165 -> m4_24  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_174  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_166 -> m4_10  [key=2, style=dotted];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_163 -> m4_164  [key=0, style=solid];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_26  [key=2, style=dotted];
m4_168 -> m4_162  [key=0, style=bold, color=blue];
m4_16 -> m4_17  [key=0, style=solid];
m4_18 -> m4_23  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_19 -> m4_24  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_20 -> m4_25  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_26  [key=2, style=dotted];
m4_22 -> m4_16  [key=0, style=bold, color=blue];
m4_113 -> m4_114  [key=0, style=solid];
m4_115 -> m4_121  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_122  [key=2, style=dotted];
m4_115 -> m4_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_116 -> m4_23  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_117 -> m4_24  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_118 -> m4_10  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_120  [key=2, style=dotted];
m4_119 -> m4_113  [key=0, style=bold, color=blue];
m4_149 -> m4_150  [key=0, style=solid];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_157  [key=2, style=dotted];
m4_153 -> m4_24  [key=2, style=dotted];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_154 -> m4_10  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_150 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_150 -> m4_151  [key=0, style=solid];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_78  [key=2, style=dotted];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_158  [key=2, style=dotted];
m4_156 -> m4_149  [key=0, style=bold, color=blue];
m4_43 -> m4_44  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_38  [key=2, style=dotted];
m4_45 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_46 -> m4_24  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_25  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_26  [key=2, style=dotted];
m4_49 -> m4_43  [key=0, style=bold, color=blue];
m4_133 -> m4_134  [key=0, style=solid];
m4_134 -> m4_121  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_139  [key=2, style=dotted];
m4_134 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_135 -> m4_23  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_136 -> m4_24  [key=2, style=dotted];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_137 -> m4_10  [key=2, style=dotted];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_138 -> m4_133  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid];
m4_196 -> m4_197  [key=0, style=solid, color=green];
m4_200 -> m4_201  [key=0, style=solid, color=green];
m4_205 -> m4_206  [key=0, style=solid, color=green];
m4_205 -> m4_25  [key=2, style=dotted, color=green];
m4_204 -> m4_205  [key=0, style=solid, color=green];
m4_206 -> m4_204  [key=0, style=bold, color=blue];
m4_197 -> m4_198  [key=0, style=solid, color=green];
m4_197 -> m4_199  [key=2, style=dotted, color=green];
m4_198 -> m4_196  [key=0, style=bold, color=blue];
m4_201 -> m4_202  [key=0, style=solid, color=green];
m4_201 -> m4_203  [key=2, style=dotted, color=green];
m4_202 -> m4_200  [key=0, style=bold, color=blue];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_64  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_101  [key=2, style=dotted];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_42  [key=2, style=dotted];
m4_131 -> m4_25  [key=2, style=dotted];
m4_131 -> m4_132  [key=0, style=solid];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_42  [key=2, style=dotted];
m4_147 -> m4_25  [key=2, style=dotted];
m4_147 -> m4_148  [key=0, style=solid];
m4_160 -> m4_25  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_174 -> m4_25  [key=2, style=dotted];
m4_174 -> m4_175  [key=0, style=solid];
m4_188 -> m4_25  [key=2, style=dotted];
m4_188 -> m4_189  [key=0, style=solid];
m4_124 -> m4_10  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_126  [key=2, style=dotted];
m4_141 -> m4_10  [key=2, style=dotted];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_126  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_50 -> m4_51  [key=0, style=solid];
m4_61 -> m4_62  [key=0, style=solid];
m4_63 -> m4_61  [key=0, style=bold, color=blue];
m4_98 -> m4_99  [key=0, style=solid];
m4_100 -> m4_98  [key=0, style=bold, color=blue];
m4_109 -> m4_110  [key=0, style=solid];
m4_123 -> m4_124  [key=0, style=solid];
m4_127 -> m4_128  [key=0, style=solid];
m4_129 -> m4_127  [key=0, style=bold, color=blue];
m4_130 -> m4_131  [key=0, style=solid];
m4_132 -> m4_130  [key=0, style=bold, color=blue];
m4_140 -> m4_141  [key=0, style=solid];
m4_143 -> m4_144  [key=0, style=solid];
m4_145 -> m4_143  [key=0, style=bold, color=blue];
m4_146 -> m4_147  [key=0, style=solid];
m4_148 -> m4_146  [key=0, style=bold, color=blue];
m4_159 -> m4_160  [key=0, style=solid];
m4_161 -> m4_159  [key=0, style=bold, color=blue];
m4_169 -> m4_170  [key=0, style=solid];
m4_173 -> m4_174  [key=0, style=solid];
m4_175 -> m4_173  [key=0, style=bold, color=blue];
m4_183 -> m4_184  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid];
m4_189 -> m4_187  [key=0, style=bold, color=blue];
m4_213 -> m4_214  [key=0, style=solid];
m4_125 -> m4_123  [key=0, style=bold, color=blue];
m4_142 -> m4_140  [key=0, style=bold, color=blue];
m4_29 -> m4_27  [key=0, style=bold, color=blue];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=2, style=dotted];
m4_41 -> m4_39  [key=0, style=bold, color=blue];
m4_40 -> m4_42  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_52 -> m4_50  [key=0, style=bold, color=blue];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_53  [key=2, style=dotted];
m4_110 -> m4_112  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_111 -> m4_109  [key=0, style=bold, color=blue];
m4_171 -> m4_169  [key=0, style=bold, color=blue];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_172  [key=2, style=dotted];
m4_185 -> m4_183  [key=0, style=bold, color=blue];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_186  [key=2, style=dotted];
m4_215 -> m4_213  [key=0, style=bold, color=blue];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_216  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_12  [key=0, style=bold, color=blue];
m4_80 -> m4_81  [key=0, style=solid];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_79  [key=2, style=dotted];
m4_86 -> m4_24  [key=2, style=dotted];
m4_86 -> m4_87  [key=0, style=solid];
m4_87 -> m4_25  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_82 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_90  [key=2, style=dotted];
m4_83 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_83 -> m4_84  [key=0, style=solid];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_78  [key=2, style=dotted];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_26  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_89 -> m4_80  [key=0, style=bold, color=blue];
m4_172 -> m4_224  [key=0, style=solid];
m4_224 -> m4_225  [key=0, style=solid];
m4_225 -> m4_172  [key=0, style=bold, color=blue];
m4_31 -> m4_32  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_38  [key=2, style=dotted];
m4_33 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_34 -> m4_24  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_35 -> m4_25  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_26  [key=2, style=dotted];
m4_37 -> m4_31  [key=0, style=bold, color=blue];
m4_176 -> m4_177  [key=0, style=solid];
m4_177 -> m4_23  [key=2, style=dotted];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_178 -> m4_24  [key=2, style=dotted];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_179 -> m4_10  [key=2, style=dotted];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_179 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label=thrownException];
m4_180 -> m4_10  [key=2, style=dotted];
m4_180 -> m4_181  [key=0, style=solid];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> n75  [key=2, style=dotted];
m4_182 -> m4_176  [key=0, style=bold, color=blue];
m4_30 -> m4_242  [key=0, style=solid];
m4_242 -> m4_243  [key=0, style=solid];
m4_243 -> m4_30  [key=0, style=bold, color=blue];
m4_199 -> m4_236  [key=0, style=solid];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_238  [key=2, style=dotted];
m4_237 -> m4_199  [key=0, style=bold, color=blue];
m4_112 -> m4_104  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] argument"];
m4_112 -> m4_232  [key=0, style=solid];
m4_112 -> m4_233  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_232 -> m4_233  [key=0, style=solid];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_235  [key=2, style=dotted];
m4_234 -> m4_112  [key=0, style=bold, color=blue];
m4_226 -> m4_227  [key=0, style=solid];
m4_227 -> m4_120  [key=2, style=dotted];
m4_227 -> m4_228  [key=0, style=solid];
m4_228 -> m4_226  [key=0, style=bold, color=blue];
m4_42 -> m4_217  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_218 -> m4_42  [key=0, style=bold, color=blue];
m4_254 -> m4_191  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_192  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_193  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_194  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_205  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_254 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m4_260 -> m4_205  [key=1, style=dashed, color=green, label=performer];
m4_255 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_256 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_257 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_258 -> m4_174  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_259 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label=performer];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_22  [key=2, style=dotted];
m5_16 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_0 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_0 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_0 -> m5_0  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.States.JobState OnStateChanged"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_21  [key=2, style=dotted];
m5_5 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_5 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_5 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_5 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_5 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_5 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_5 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_5 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_17  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_2 -> m5_19  [key=0, style=solid];
m5_2 -> m5_20  [key=2, style=dotted];
m5_4 -> m5_19  [key=0, style=solid];
m5_4 -> m5_20  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_22  [key=2, style=dotted];
m5_7 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_22  [key=2, style=dotted];
m5_9 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_10 -> m5_17  [key=0, style=solid];
m5_10 -> m5_22  [key=2, style=dotted];
m5_10 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_22  [key=2, style=dotted];
m5_12 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_12 -> m5_12  [key=3, color=darkorchid, style=bold, label="Field variable int NumberOfRecordsInSinglePass"];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_22  [key=2, style=dotted];
m5_13 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_22  [key=2, style=dotted];
m5_15 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_25  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_23  [key=2, style=dotted];
m5_8 -> m5_24  [key=2, style=dotted];
m5_8 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=hourlySucceededKey];
m5_8 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=hourlySucceededKey];
m5_8 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=hourlySucceededKey];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_23  [key=2, style=dotted];
m5_14 -> m5_24  [key=2, style=dotted];
m5_14 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=hourlyFailedKey];
m5_14 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=hourlyFailedKey];
m5_14 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label=hourlyFailedKey];
m5_19 -> m5_0  [key=0, style=bold, color=blue];
m5_33 -> m5_34  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_29  [key=2, style=dotted];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_36  [key=2, style=dotted];
m5_34 -> m5_37  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_29  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_36  [key=2, style=dotted];
m5_48 -> m5_37  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_23  [key=2, style=dotted];
m5_27 -> m5_24  [key=2, style=dotted];
m5_27 -> m5_29  [key=2, style=dotted];
m5_28 -> m5_26  [key=0, style=bold, color=blue];
m5_32 -> m5_30  [key=0, style=bold, color=blue];
m5_35 -> m5_33  [key=0, style=bold, color=blue];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_23  [key=2, style=dotted];
m5_39 -> m5_24  [key=2, style=dotted];
m5_39 -> m5_29  [key=2, style=dotted];
m5_40 -> m5_38  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_23  [key=2, style=dotted];
m5_42 -> m5_24  [key=2, style=dotted];
m5_42 -> m5_29  [key=2, style=dotted];
m5_43 -> m5_41  [key=0, style=bold, color=blue];
m5_46 -> m5_44  [key=0, style=bold, color=blue];
m5_49 -> m5_47  [key=0, style=bold, color=blue];
m5_50 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=hourlySucceededKey];
m5_50 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=hourlySucceededKey];
m5_51 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=hourlyFailedKey];
m5_51 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label=hourlyFailedKey];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [key=0, style=bold, color=blue];
m6_22 -> m6_29  [key=0, style=solid];
m6_22 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m6_22 -> m6_11  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Server.BackgroundProcessContext context"];
m6_22 -> m6_34  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m6_22 -> m6_40  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_42  [key=2, style=dotted];
m6_29 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=connection];
m6_29 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label=connection];
m6_29 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=connection];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_46  [key=2, style=dotted];
m6_35 -> m6_47  [key=2, style=dotted];
m6_35 -> m6_25  [key=2, style=dotted];
m6_35 -> m6_48  [key=2, style=dotted];
m6_35 -> m6_49  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_43  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_45  [key=2, style=dotted];
m6_32 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_32 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_50  [key=2, style=dotted];
m6_37 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_44  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_35  [key=0, style=solid];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_51  [key=2, style=dotted];
m6_34 -> m6_41  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_40  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_52  [key=2, style=dotted];
m6_41 -> m6_22  [key=0, style=bold, color=blue];
m6_25 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_28  [key=2, style=dotted];
m6_27 -> m6_25  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m6_11 -> m6_17  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m6_11 -> m6_20  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_18  [key=0, style=solid];
m6_15 -> m6_22  [key=2, style=dotted];
m6_17 -> m6_15  [key=0, style=solid, color=red];
m6_17 -> m6_18  [key=0, style=solid, color=red];
m6_20 -> m6_21  [key=0, style=solid, color=red];
m6_20 -> m6_24  [key=2, style=dotted, color=red];
m6_13 -> m6_21  [key=0, style=solid];
m6_13 -> m6_10  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m6_14 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m6_14 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m6_14 -> m6_14  [key=3, color=darkorchid, style=bold, label="Local variable int jobsEnqueued"];
m6_16 -> m6_17  [key=0, style=solid, color=red];
m6_16 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m6_16 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m6_16 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_20  [key=0, style=solid, color=red];
m6_19 -> m6_20  [key=0, style=solid, color=red];
m6_19 -> m6_23  [key=2, style=dotted];
m6_21 -> m6_11  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m6_4 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_6 -> m6_9  [key=0, style=solid];
m6_6 -> m6_10  [key=2, style=dotted];
m6_9 -> m6_4  [key=0, style=bold, color=blue];
m6_53 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m6_53 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m6_53 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m6_53 -> m6_20  [key=1, style=dashed, color=red, label="Hangfire.Server.DelayedJobScheduler"];
m6_53 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m6_53 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_17  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label=owinContext];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_18  [key=2, style=dotted];
m7_13 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label=owinContext];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_19  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_20  [key=2, style=dotted];
m7_16 -> m7_10  [key=0, style=bold, color=blue];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_27  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m7_24 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label=IOwinResponse];
m7_24 -> m7_21  [key=3, color=darkorchid, style=bold, label="Parameter variable IOwinResponse response"];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_34  [key=2, style=dotted];
m7_25 -> m7_28  [key=1, style=dashed, color=green, label=inputStream];
m7_25 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label=inputStream];
m7_25 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label=inputStream];
m7_27 -> m7_33  [key=0, style=solid];
m7_27 -> m7_35  [key=2, style=dotted];
m7_27 -> m7_36  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid, color=red];
m7_31 -> m7_39  [key=2, style=dotted, color=red];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_28  [key=0, style=solid, color=green];
m7_28 -> m7_29  [key=0, style=solid, color=green];
m7_28 -> m7_37  [key=2, style=dotted, color=green];
m7_28 -> m7_31  [key=1, style=dashed, color=green, label=buffer];
m7_28 -> m7_32  [key=1, style=dashed, color=green, label=buffer];
m7_29 -> m7_30  [key=0, style=solid, color=red];
m7_29 -> m7_38  [key=2, style=dotted, color=red];
m7_29 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label=readLength];
m7_32 -> m7_30  [key=0, style=solid, color=red];
m7_32 -> m7_38  [key=2, style=dotted, color=red];
m7_30 -> m7_31  [key=0, style=solid, color=red];
m7_30 -> m7_33  [key=0, style=solid, color=red];
m7_33 -> m7_24  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m7_0 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m7_0 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_0 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_2 -> m7_8  [key=0, style=solid];
m7_2 -> m7_9  [key=2, style=dotted];
m7_4 -> m7_8  [key=0, style=solid];
m7_4 -> m7_9  [key=2, style=dotted];
m7_8 -> m7_0  [key=0, style=bold, color=blue];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_24  [key=2, style=dotted];
m7_23 -> m7_21  [key=0, style=bold, color=blue];
m7_40 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m7_40 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m7_40 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m7_40 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m7_40 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m7_40 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_14  [key=2, style=dotted];
m9_13 -> m9_11  [key=0, style=bold, color=blue];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_9  [key=2, style=dotted];
m9_13 -> m9_10  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_44 -> m9_45  [key=0, style=solid];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_58  [key=2, style=dotted];
m9_45 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m9_45 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_48  [key=0, style=solid];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_55  [key=0, style=solid];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_63  [key=2, style=dotted];
m9_56 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_56 -> m9_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_47 -> m9_57  [key=0, style=solid];
m9_47 -> m9_59  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_59  [key=2, style=dotted];
m9_48 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_48 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_48 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_48 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_59  [key=2, style=dotted];
m9_49 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_49 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_49 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_49 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_61  [key=2, style=dotted];
m9_53 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_53 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_60  [key=2, style=dotted];
m9_50 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_50 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_50 -> m9_55  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_54 -> m9_51  [key=0, style=solid];
m9_54 -> m9_61  [key=2, style=dotted];
m9_54 -> m9_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_54 -> m9_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_62  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_52 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_52 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_52 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_52 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_57 -> m9_43  [key=0, style=bold, color=blue];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerProcess"];
m9_0 -> m9_1  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_1 -> m9_3  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_4  [key=0, style=solid];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_4 -> m9_0  [key=0, style=bold, color=blue];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_28  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_29  [key=2, style=dotted];
m9_26 -> m9_30  [key=2, style=dotted];
m9_26 -> m9_31  [key=2, style=dotted];
m9_26 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_26 -> m9_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_27 -> m9_23  [key=0, style=bold, color=blue];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_173 -> m9_324  [key=0, style=solid];
m9_173 -> m9_326  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m9_173 -> m9_327  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m9_173 -> m9_328  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m9_173 -> m9_329  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m9_173 -> m9_331  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_332  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_335  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m9_173 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m9_324 -> m9_325  [key=0, style=solid];
m9_324 -> m9_326  [key=0, style=solid];
m9_326 -> m9_327  [key=0, style=solid];
m9_326 -> m9_337  [key=2, style=dotted];
m9_326 -> m9_331  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_326 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_326 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_326 -> m9_335  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_326 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_327 -> m9_328  [key=0, style=solid];
m9_327 -> m9_337  [key=2, style=dotted];
m9_327 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_327 -> m9_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_327 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_327 -> m9_335  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_327 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_328 -> m9_329  [key=0, style=solid];
m9_328 -> m9_60  [key=2, style=dotted];
m9_328 -> m9_331  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_328 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_328 -> m9_334  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_329 -> m9_330  [key=0, style=solid];
m9_329 -> m9_334  [key=0, style=solid];
m9_331 -> m9_332  [key=0, style=solid];
m9_331 -> m9_61  [key=2, style=dotted];
m9_331 -> m9_338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_331 -> m9_341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_332 -> m9_333  [key=0, style=solid];
m9_332 -> m9_329  [key=0, style=solid];
m9_333 -> m9_329  [key=0, style=solid];
m9_333 -> m9_61  [key=2, style=dotted];
m9_333 -> m9_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_333 -> m9_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_335 -> m9_336  [key=0, style=solid];
m9_335 -> m9_114  [key=2, style=dotted];
m9_335 -> m9_115  [key=2, style=dotted];
m9_335 -> m9_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_335 -> m9_356  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_325 -> m9_336  [key=0, style=solid];
m9_325 -> n6  [key=2, style=dotted];
m9_334 -> m9_335  [key=0, style=solid];
m9_334 -> m9_62  [key=2, style=dotted];
m9_330 -> m9_331  [key=0, style=solid];
m9_330 -> m9_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_336 -> m9_173  [key=0, style=bold, color=blue];
m9_14 -> m9_11  [key=0, style=bold, color=blue];
m9_219 -> m9_269  [key=0, style=solid];
m9_219 -> m9_276  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_219 -> m9_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_219 -> m9_277  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m9_269 -> m9_270  [key=0, style=solid];
m9_269 -> m9_273  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_269 -> m9_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_276 -> m9_277  [key=0, style=solid];
m9_276 -> m9_114  [key=2, style=dotted];
m9_276 -> m9_115  [key=2, style=dotted];
m9_276 -> m9_293  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_277 -> m9_278  [key=0, style=solid];
m9_277 -> m9_289  [key=2, style=dotted];
m9_277 -> m9_282  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_270 -> m9_271  [key=0, style=solid];
m9_270 -> n6  [key=2, style=dotted];
m9_270 -> m9_273  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_270 -> m9_276  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_270 -> m9_280  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_270 -> m9_284  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_273 -> m9_274  [key=0, style=solid];
m9_273 -> m9_175  [key=2, style=dotted];
m9_274 -> m9_275  [key=0, style=solid];
m9_274 -> m9_288  [key=2, style=dotted];
m9_274 -> m9_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_271 -> m9_272  [key=0, style=solid];
m9_271 -> m9_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_280 -> m9_281  [key=0, style=solid];
m9_280 -> m9_286  [key=0, style=solid];
m9_284 -> m9_285  [key=0, style=solid];
m9_284 -> m9_292  [key=2, style=dotted];
m9_272 -> m9_273  [key=0, style=solid];
m9_272 -> m9_276  [key=0, style=solid];
m9_275 -> m9_272  [key=0, style=solid];
m9_275 -> m9_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_278 -> m9_279  [key=0, style=solid];
m9_278 -> m9_59  [key=2, style=dotted];
m9_278 -> m9_284  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_278 -> m9_286  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_282 -> m9_283  [key=0, style=solid];
m9_282 -> m9_284  [key=0, style=solid];
m9_282 -> m9_290  [key=2, style=dotted];
m9_282 -> m9_291  [key=2, style=dotted];
m9_279 -> m9_280  [key=0, style=solid];
m9_279 -> m9_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_279 -> m9_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_279 -> m9_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_286 -> m9_287  [key=0, style=solid];
m9_285 -> m9_280  [key=0, style=solid];
m9_285 -> m9_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_281 -> m9_282  [key=0, style=solid];
m9_283 -> m9_284  [key=0, style=solid];
m9_287 -> m9_219  [key=0, style=bold, color=blue];
m9_6 -> m9_7  [key=0, style=solid, color=green];
m9_6 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m9_7 -> m9_8  [key=0, style=solid, color=green];
m9_7 -> m9_9  [key=0, style=solid, color=green];
m9_7 -> m9_10  [key=2, style=dotted];
m9_8 -> m9_7  [key=0, style=solid, color=green];
m9_8 -> m9_10  [key=2, style=dotted];
m9_8 -> m9_5  [key=0, style=bold, color=blue];
m9_9 -> m9_6  [key=0, style=bold, color=blue];
m9_236 -> m9_237  [key=0, style=solid];
m9_236 -> m9_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_236 -> m9_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_237 -> m9_238  [key=0, style=solid];
m9_238 -> m9_239  [key=0, style=solid];
m9_238 -> m9_9  [key=2, style=dotted];
m9_238 -> m9_76  [key=2, style=dotted];
m9_242 -> m9_243  [key=0, style=solid];
m9_242 -> m9_234  [key=2, style=dotted];
m9_242 -> m9_235  [key=2, style=dotted];
m9_239 -> m9_240  [key=0, style=solid];
m9_239 -> m9_232  [key=2, style=dotted];
m9_239 -> m9_242  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_240 -> m9_241  [key=0, style=solid];
m9_240 -> m9_242  [key=0, style=solid];
m9_240 -> m9_233  [key=2, style=dotted];
m9_241 -> m9_243  [key=0, style=solid];
m9_243 -> m9_236  [key=0, style=bold, color=blue];
m9_429 -> m9_430  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_35  [key=2, style=dotted];
m9_33 -> m9_36  [key=2, style=dotted];
m9_33 -> m9_37  [key=2, style=dotted];
m9_33 -> m9_38  [key=2, style=dotted];
m9_33 -> m9_39  [key=2, style=dotted];
m9_34 -> m9_32  [key=0, style=bold, color=blue];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>"];
m9_42 -> m9_40  [key=0, style=bold, color=blue];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_72  [key=2, style=dotted];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_86  [key=2, style=dotted];
m9_84 -> m9_87  [key=2, style=dotted];
m9_84 -> m9_36  [key=2, style=dotted];
m9_84 -> m9_37  [key=2, style=dotted];
m9_84 -> m9_39  [key=2, style=dotted];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_72  [key=2, style=dotted];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_67  [key=2, style=dotted];
m9_65 -> m9_68  [key=2, style=dotted];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_67  [key=2, style=dotted];
m9_74 -> m9_76  [key=2, style=dotted];
m9_64 -> m9_65  [key=0, style=solid];
m9_69 -> m9_70  [key=0, style=solid];
m9_73 -> m9_74  [key=0, style=solid];
m9_77 -> m9_78  [key=0, style=solid];
m9_80 -> m9_81  [key=0, style=solid];
m9_83 -> m9_84  [key=0, style=solid];
m9_66 -> m9_64  [key=0, style=bold, color=blue];
m9_71 -> m9_69  [key=0, style=bold, color=blue];
m9_75 -> m9_73  [key=0, style=bold, color=blue];
m9_79 -> m9_77  [key=0, style=bold, color=blue];
m9_81 -> m9_82  [key=0, style=solid];
m9_82 -> m9_80  [key=0, style=bold, color=blue];
m9_85 -> m9_83  [key=0, style=bold, color=blue];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_72  [key=2, style=dotted];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_132  [key=2, style=dotted];
m9_130 -> m9_133  [key=2, style=dotted];
m9_130 -> m9_134  [key=2, style=dotted];
m9_130 -> m9_38  [key=2, style=dotted];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_72  [key=2, style=dotted];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_67  [key=2, style=dotted];
m9_117 -> m9_68  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_67  [key=2, style=dotted];
m9_123 -> m9_125  [key=2, style=dotted];
m9_116 -> m9_117  [key=0, style=solid];
m9_119 -> m9_120  [key=0, style=solid];
m9_122 -> m9_123  [key=0, style=solid];
m9_126 -> m9_127  [key=0, style=solid];
m9_129 -> m9_130  [key=0, style=solid];
m9_118 -> m9_116  [key=0, style=bold, color=blue];
m9_121 -> m9_119  [key=0, style=bold, color=blue];
m9_124 -> m9_122  [key=0, style=bold, color=blue];
m9_128 -> m9_126  [key=0, style=bold, color=blue];
m9_131 -> m9_129  [key=0, style=bold, color=blue];
m9_141 -> m9_142  [key=0, style=solid];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_144  [key=2, style=dotted];
m9_142 -> m9_37  [key=2, style=dotted];
m9_142 -> m9_36  [key=2, style=dotted];
m9_142 -> m9_38  [key=2, style=dotted];
m9_142 -> m9_39  [key=2, style=dotted];
m9_143 -> m9_141  [key=0, style=bold, color=blue];
m9_151 -> m9_152  [key=0, style=solid];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_154  [key=2, style=dotted];
m9_152 -> m9_37  [key=2, style=dotted];
m9_152 -> m9_36  [key=2, style=dotted];
m9_152 -> m9_38  [key=2, style=dotted];
m9_152 -> m9_39  [key=2, style=dotted];
m9_153 -> m9_151  [key=0, style=bold, color=blue];
m9_177 -> m9_178  [key=0, style=solid];
m9_177 -> m9_67  [key=2, style=dotted];
m9_177 -> m9_150  [key=2, style=dotted];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_67  [key=2, style=dotted];
m9_183 -> m9_10  [key=2, style=dotted];
m9_189 -> m9_190  [key=0, style=solid];
m9_189 -> m9_67  [key=2, style=dotted];
m9_189 -> m9_10  [key=2, style=dotted];
m9_176 -> m9_177  [key=0, style=solid];
m9_179 -> m9_180  [key=0, style=solid];
m9_182 -> m9_183  [key=0, style=solid];
m9_185 -> m9_186  [key=0, style=solid];
m9_188 -> m9_189  [key=0, style=solid];
m9_191 -> m9_192  [key=0, style=solid];
m9_194 -> m9_195  [key=0, style=solid];
m9_178 -> m9_176  [key=0, style=bold, color=blue];
m9_180 -> m9_181  [key=0, style=solid];
m9_181 -> m9_179  [key=0, style=bold, color=blue];
m9_184 -> m9_182  [key=0, style=bold, color=blue];
m9_186 -> m9_187  [key=0, style=solid];
m9_187 -> m9_185  [key=0, style=bold, color=blue];
m9_190 -> m9_188  [key=0, style=bold, color=blue];
m9_192 -> m9_193  [key=0, style=solid];
m9_193 -> m9_191  [key=0, style=bold, color=blue];
m9_195 -> m9_196  [key=0, style=solid];
m9_195 -> m9_197  [key=2, style=dotted];
m9_195 -> m9_36  [key=2, style=dotted];
m9_195 -> m9_38  [key=2, style=dotted];
m9_195 -> m9_39  [key=2, style=dotted];
m9_196 -> m9_194  [key=0, style=bold, color=blue];
m9_203 -> m9_204  [key=0, style=solid];
m9_204 -> m9_205  [key=0, style=solid];
m9_204 -> m9_197  [key=2, style=dotted];
m9_204 -> m9_36  [key=2, style=dotted];
m9_204 -> m9_38  [key=2, style=dotted];
m9_204 -> m9_39  [key=2, style=dotted];
m9_205 -> m9_203  [key=0, style=bold, color=blue];
m9_211 -> m9_212  [key=0, style=solid];
m9_212 -> m9_213  [key=0, style=solid];
m9_212 -> m9_214  [key=2, style=dotted];
m9_212 -> m9_36  [key=2, style=dotted];
m9_212 -> m9_38  [key=2, style=dotted];
m9_213 -> m9_211  [key=0, style=bold, color=blue];
m9_260 -> m9_261  [key=0, style=solid];
m9_260 -> m9_262  [key=2, style=dotted];
m9_259 -> m9_260  [key=0, style=solid];
m9_263 -> m9_264  [key=0, style=solid];
m9_266 -> m9_267  [key=0, style=solid];
m9_261 -> m9_259  [key=0, style=bold, color=blue];
m9_264 -> m9_265  [key=0, style=solid];
m9_265 -> m9_263  [key=0, style=bold, color=blue];
m9_267 -> m9_268  [key=0, style=solid];
m9_268 -> m9_266  [key=0, style=bold, color=blue];
m9_294 -> m9_295  [key=0, style=solid];
m9_294 -> m9_296  [key=2, style=dotted];
m9_294 -> m9_297  [key=2, style=dotted];
m9_293 -> m9_294  [key=0, style=solid];
m9_295 -> m9_293  [key=0, style=bold, color=blue];
m9_322 -> m9_323  [key=0, style=solid];
m9_322 -> m9_67  [key=2, style=dotted];
m9_318 -> m9_319  [key=0, style=solid];
m9_321 -> m9_322  [key=0, style=solid];
m9_319 -> m9_320  [key=0, style=solid];
m9_319 -> m9_296  [key=2, style=dotted];
m9_320 -> m9_318  [key=0, style=bold, color=blue];
m9_323 -> m9_321  [key=0, style=bold, color=blue];
m9_339 -> m9_340  [key=0, style=solid];
m9_339 -> m9_9  [key=2, style=dotted];
m9_339 -> m9_68  [key=2, style=dotted];
m9_347 -> m9_348  [key=0, style=solid];
m9_347 -> m9_9  [key=2, style=dotted];
m9_347 -> m9_68  [key=2, style=dotted];
m9_357 -> m9_358  [key=0, style=solid];
m9_357 -> m9_359  [key=2, style=dotted];
m9_357 -> m9_360  [key=2, style=dotted];
m9_357 -> m9_361  [key=2, style=dotted];
m9_357 -> m9_362  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_342 -> m9_343  [key=0, style=solid];
m9_342 -> m9_344  [key=0, style=solid];
m9_342 -> m9_345  [key=2, style=dotted];
m9_343 -> m9_344  [key=0, style=solid];
m9_343 -> m9_72  [key=2, style=dotted];
m9_354 -> m9_355  [key=0, style=solid];
m9_354 -> m9_345  [key=2, style=dotted];
m9_350 -> m9_351  [key=0, style=solid];
m9_350 -> m9_352  [key=0, style=solid];
m9_350 -> m9_345  [key=2, style=dotted];
m9_351 -> m9_352  [key=0, style=solid];
m9_351 -> m9_72  [key=2, style=dotted];
m9_338 -> m9_339  [key=0, style=solid];
m9_341 -> m9_342  [key=0, style=solid];
m9_341 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label="?"];
m9_346 -> m9_347  [key=0, style=solid];
m9_349 -> m9_350  [key=0, style=solid];
m9_349 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label="?"];
m9_353 -> m9_354  [key=0, style=solid];
m9_356 -> m9_357  [key=0, style=solid];
m9_340 -> m9_338  [key=0, style=bold, color=blue];
m9_344 -> m9_341  [key=0, style=bold, color=blue];
m9_348 -> m9_346  [key=0, style=bold, color=blue];
m9_352 -> m9_349  [key=0, style=bold, color=blue];
m9_355 -> m9_353  [key=0, style=bold, color=blue];
m9_358 -> m9_356  [key=0, style=bold, color=blue];
m9_362 -> m9_363  [key=0, style=solid];
m9_363 -> m9_364  [key=0, style=solid];
m9_364 -> m9_362  [key=0, style=bold, color=blue];
m9_392 -> m9_393  [key=0, style=solid];
m9_398 -> m9_399  [key=0, style=solid];
m9_404 -> m9_405  [key=0, style=solid];
m9_410 -> m9_411  [key=0, style=solid];
m9_417 -> m9_418  [key=0, style=solid];
m9_417 -> m9_419  [key=2, style=dotted];
m9_424 -> m9_425  [key=0, style=solid];
m9_430 -> m9_431  [key=0, style=solid];
m9_387 -> m9_388  [key=0, style=solid];
m9_391 -> m9_392  [key=0, style=solid];
m9_394 -> m9_395  [key=0, style=solid];
m9_397 -> m9_398  [key=0, style=solid];
m9_400 -> m9_401  [key=0, style=solid];
m9_403 -> m9_404  [key=0, style=solid];
m9_406 -> m9_407  [key=0, style=solid];
m9_409 -> m9_410  [key=0, style=solid];
m9_412 -> m9_413  [key=0, style=solid];
m9_416 -> m9_417  [key=0, style=solid];
m9_420 -> m9_421  [key=0, style=solid];
m9_423 -> m9_424  [key=0, style=solid];
m9_427 -> m9_428  [key=0, style=solid];
m9_427 -> m9_67  [key=2, style=dotted];
m9_427 -> m9_10  [key=2, style=dotted];
m9_426 -> m9_427  [key=0, style=solid];
m9_388 -> m9_389  [key=0, style=solid];
m9_388 -> m9_390  [key=2, style=dotted];
m9_389 -> m9_387  [key=0, style=bold, color=blue];
m9_393 -> m9_391  [key=0, style=bold, color=blue];
m9_395 -> m9_396  [key=0, style=solid];
m9_395 -> m9_390  [key=2, style=dotted];
m9_396 -> m9_394  [key=0, style=bold, color=blue];
m9_399 -> m9_397  [key=0, style=bold, color=blue];
m9_401 -> m9_402  [key=0, style=solid];
m9_401 -> m9_4  [key=2, style=dotted];
m9_402 -> m9_400  [key=0, style=bold, color=blue];
m9_405 -> m9_403  [key=0, style=bold, color=blue];
m9_407 -> m9_408  [key=0, style=solid];
m9_407 -> m9_4  [key=2, style=dotted];
m9_408 -> m9_406  [key=0, style=bold, color=blue];
m9_411 -> m9_409  [key=0, style=bold, color=blue];
m9_413 -> m9_414  [key=0, style=solid];
m9_413 -> m9_415  [key=2, style=dotted];
m9_414 -> m9_412  [key=0, style=bold, color=blue];
m9_418 -> m9_416  [key=0, style=bold, color=blue];
m9_421 -> m9_422  [key=0, style=solid];
m9_421 -> m9_4  [key=2, style=dotted];
m9_422 -> m9_420  [key=0, style=bold, color=blue];
m9_425 -> m9_423  [key=0, style=bold, color=blue];
m9_428 -> m9_426  [key=0, style=bold, color=blue];
m9_431 -> m9_429  [key=0, style=bold, color=blue];
m9_220 -> m9_221  [key=0, style=solid];
m9_221 -> m9_222  [key=0, style=solid];
m9_222 -> m9_223  [key=0, style=solid];
m9_222 -> m9_219  [key=2, style=dotted];
m9_223 -> m9_220  [key=0, style=bold, color=blue];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_137  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_136 -> m9_137  [key=0, style=solid];
m9_137 -> m9_138  [key=0, style=solid];
m9_137 -> m9_140  [key=2, style=dotted];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_29  [key=2, style=dotted];
m9_138 -> m9_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_139 -> m9_135  [key=0, style=bold, color=blue];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_147  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_146 -> m9_147  [key=0, style=solid];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_150  [key=2, style=dotted];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_29  [key=2, style=dotted];
m9_148 -> m9_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_149 -> m9_145  [key=0, style=bold, color=blue];
m9_155 -> m9_156  [key=0, style=solid];
m9_156 -> m9_157  [key=0, style=solid];
m9_157 -> m9_158  [key=0, style=solid];
m9_157 -> m9_112  [key=2, style=dotted];
m9_157 -> m9_159  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_158 -> m9_159  [key=0, style=solid];
m9_158 -> m9_172  [key=2, style=dotted];
m9_158 -> m9_169  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_158 -> m9_170  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_159 -> m9_160  [key=0, style=solid];
m9_159 -> m9_170  [key=0, style=solid];
m9_159 -> m9_164  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_159 -> m9_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_159 -> m9_165  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_159 -> m9_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_159 -> m9_166  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_159 -> m9_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_159 -> m9_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_169 -> m9_159  [key=0, style=solid];
m9_169 -> m9_174  [key=2, style=dotted];
m9_169 -> m9_175  [key=2, style=dotted];
m9_170 -> m9_171  [key=0, style=solid];
m9_160 -> m9_161  [key=0, style=solid];
m9_164 -> m9_165  [key=0, style=solid];
m9_164 -> m9_61  [key=2, style=dotted];
m9_164 -> m9_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_164 -> m9_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_164 -> m9_168  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_61  [key=2, style=dotted];
m9_165 -> m9_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_165 -> m9_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_165 -> m9_169  [key=1, style=dashed, color=darkseagreen4, label=length];
m9_166 -> m9_167  [key=0, style=solid];
m9_166 -> m9_61  [key=2, style=dotted];
m9_166 -> m9_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_166 -> m9_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_166 -> m9_169  [key=1, style=dashed, color=darkseagreen4, label=dequeued];
m9_161 -> m9_162  [key=0, style=solid];
m9_162 -> m9_163  [key=0, style=solid];
m9_163 -> m9_164  [key=0, style=solid];
m9_163 -> m9_60  [key=2, style=dotted];
m9_163 -> m9_165  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_163 -> m9_166  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_163 -> m9_167  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_167 -> m9_168  [key=0, style=solid];
m9_167 -> m9_62  [key=2, style=dotted];
m9_168 -> m9_169  [key=0, style=solid];
m9_168 -> m9_173  [key=2, style=dotted];
m9_168 -> m9_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_171 -> m9_155  [key=0, style=bold, color=blue];
m9_88 -> m9_89  [key=0, style=solid];
m9_89 -> m9_90  [key=0, style=solid];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_92  [key=2, style=dotted];
m9_91 -> m9_88  [key=0, style=bold, color=blue];
m9_97 -> m9_98  [key=0, style=solid];
m9_98 -> m9_99  [key=0, style=solid];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_112  [key=2, style=dotted];
m9_99 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m9_99 -> m9_110  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_102  [key=0, style=solid];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_109  [key=0, style=solid];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_114  [key=2, style=dotted];
m9_110 -> m9_115  [key=2, style=dotted];
m9_110 -> m9_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_101 -> m9_111  [key=0, style=solid];
m9_101 -> n6  [key=2, style=dotted];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_59  [key=2, style=dotted];
m9_102 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=servers];
m9_102 -> m9_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m9_102 -> m9_110  [key=1, style=dashed, color=darkseagreen4, label=servers];
m9_102 -> m9_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_59  [key=2, style=dotted];
m9_103 -> m9_108  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_103 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_103 -> m9_110  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_103 -> m9_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_61  [key=2, style=dotted];
m9_107 -> m9_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_107 -> m9_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_60  [key=2, style=dotted];
m9_104 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_104 -> m9_108  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_104 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_108 -> m9_105  [key=0, style=solid];
m9_108 -> m9_61  [key=2, style=dotted];
m9_108 -> m9_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_108 -> m9_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_62  [key=2, style=dotted];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_106 -> m9_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_106 -> m9_108  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_106 -> m9_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_106 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_111 -> m9_97  [key=0, style=bold, color=blue];
m9_369 -> m9_370  [key=0, style=solid];
m9_370 -> m9_371  [key=0, style=solid];
m9_371 -> m9_372  [key=0, style=solid];
m9_371 -> m9_386  [key=2, style=dotted];
m9_371 -> m9_374  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_375  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_376  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_377  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_378  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_379  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_382  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_384  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_372 -> m9_373  [key=0, style=solid];
m9_372 -> m9_112  [key=2, style=dotted];
m9_372 -> m9_380  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_374 -> m9_375  [key=0, style=solid];
m9_374 -> m9_61  [key=2, style=dotted];
m9_374 -> m9_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_374 -> m9_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_375 -> m9_376  [key=0, style=solid];
m9_375 -> m9_61  [key=2, style=dotted];
m9_375 -> m9_394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_375 -> m9_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_376 -> m9_377  [key=0, style=solid];
m9_376 -> m9_61  [key=2, style=dotted];
m9_376 -> m9_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_376 -> m9_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_377 -> m9_378  [key=0, style=solid];
m9_377 -> m9_61  [key=2, style=dotted];
m9_377 -> m9_406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_377 -> m9_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_378 -> m9_379  [key=0, style=solid];
m9_378 -> m9_61  [key=2, style=dotted];
m9_378 -> m9_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_378 -> m9_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_379 -> m9_380  [key=0, style=solid];
m9_379 -> m9_61  [key=2, style=dotted];
m9_379 -> m9_420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_379 -> m9_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_382 -> m9_380  [key=0, style=solid];
m9_382 -> m9_61  [key=2, style=dotted];
m9_382 -> m9_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_382 -> m9_429  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_384 -> m9_385  [key=0, style=solid];
m9_373 -> m9_374  [key=0, style=solid];
m9_373 -> m9_60  [key=2, style=dotted];
m9_373 -> m9_375  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_376  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_377  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_378  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_379  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_382  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_383  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_380 -> m9_381  [key=0, style=solid];
m9_380 -> m9_383  [key=0, style=solid];
m9_383 -> m9_384  [key=0, style=solid];
m9_383 -> m9_62  [key=2, style=dotted];
m9_381 -> m9_382  [key=0, style=solid];
m9_381 -> m9_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m9_385 -> m9_369  [key=0, style=bold, color=blue];
m9_365 -> m9_366  [key=0, style=solid];
m9_366 -> m9_367  [key=0, style=solid];
m9_367 -> m9_368  [key=0, style=solid];
m9_367 -> m9_10  [key=2, style=dotted];
m9_368 -> m9_365  [key=0, style=bold, color=blue];
m9_215 -> m9_216  [key=0, style=solid];
m9_216 -> m9_217  [key=0, style=solid];
m9_217 -> m9_218  [key=0, style=solid];
m9_217 -> m9_219  [key=2, style=dotted];
m9_218 -> m9_215  [key=0, style=bold, color=blue];
m9_92 -> m9_298  [key=0, style=solid];
m9_92 -> m9_305  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_92 -> m9_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_92 -> m9_306  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m9_298 -> m9_299  [key=0, style=solid];
m9_298 -> m9_301  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_298 -> m9_302  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_298 -> m9_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_305 -> m9_306  [key=0, style=solid];
m9_305 -> m9_114  [key=2, style=dotted];
m9_305 -> m9_115  [key=2, style=dotted];
m9_305 -> m9_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_306 -> m9_307  [key=0, style=solid];
m9_306 -> m9_289  [key=2, style=dotted];
m9_306 -> m9_311  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_299 -> m9_300  [key=0, style=solid];
m9_299 -> m9_317  [key=2, style=dotted];
m9_299 -> m9_301  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m9_301 -> m9_302  [key=0, style=solid];
m9_301 -> m9_304  [key=0, style=solid];
m9_302 -> m9_303  [key=0, style=solid];
m9_302 -> m9_175  [key=2, style=dotted];
m9_303 -> m9_301  [key=0, style=solid];
m9_303 -> m9_317  [key=2, style=dotted];
m9_303 -> m9_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_300 -> m9_301  [key=0, style=solid];
m9_300 -> n6  [key=2, style=dotted];
m9_300 -> m9_302  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_300 -> m9_304  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_300 -> m9_313  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_304 -> m9_305  [key=0, style=solid];
m9_304 -> m9_114  [key=2, style=dotted];
m9_304 -> m9_115  [key=2, style=dotted];
m9_304 -> m9_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_304 -> m9_309  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m9_313 -> m9_314  [key=0, style=solid];
m9_313 -> m9_292  [key=2, style=dotted];
m9_309 -> m9_310  [key=0, style=solid];
m9_309 -> m9_315  [key=0, style=solid];
m9_307 -> m9_308  [key=0, style=solid];
m9_307 -> m9_59  [key=2, style=dotted];
m9_307 -> m9_313  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_307 -> m9_315  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_311 -> m9_312  [key=0, style=solid];
m9_311 -> m9_313  [key=0, style=solid];
m9_311 -> m9_290  [key=2, style=dotted];
m9_311 -> m9_291  [key=2, style=dotted];
m9_308 -> m9_309  [key=0, style=solid];
m9_308 -> m9_311  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_308 -> m9_313  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_308 -> m9_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_315 -> m9_316  [key=0, style=solid];
m9_314 -> m9_309  [key=0, style=solid];
m9_314 -> m9_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_310 -> m9_311  [key=0, style=solid];
m9_312 -> m9_313  [key=0, style=solid];
m9_316 -> m9_92  [key=0, style=bold, color=blue];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.InfiniteLoopProcess"];
m9_15 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.InfiniteLoopProcess"];
m9_15 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.InfiniteLoopProcess"];
m9_16 -> m9_17  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_4  [key=2, style=dotted];
m9_18 -> m9_15  [key=0, style=bold, color=blue];
m9_244 -> m9_245  [key=0, style=solid];
m9_244 -> m9_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_244 -> m9_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_245 -> m9_246  [key=0, style=solid];
m9_246 -> m9_247  [key=0, style=solid];
m9_246 -> m9_9  [key=2, style=dotted];
m9_246 -> m9_254  [key=2, style=dotted];
m9_246 -> m9_252  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_250 -> m9_251  [key=0, style=solid];
m9_250 -> m9_9  [key=2, style=dotted];
m9_250 -> m9_125  [key=2, style=dotted];
m9_247 -> m9_248  [key=0, style=solid];
m9_247 -> m9_249  [key=0, style=solid];
m9_252 -> m9_253  [key=0, style=solid];
m9_252 -> m9_255  [key=2, style=dotted];
m9_252 -> m9_256  [key=2, style=dotted];
m9_252 -> m9_257  [key=2, style=dotted];
m9_252 -> m9_258  [key=2, style=dotted];
m9_252 -> m9_63  [key=2, style=dotted];
m9_252 -> m9_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_252 -> m9_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_252 -> m9_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_248 -> m9_253  [key=0, style=solid];
m9_249 -> m9_250  [key=0, style=solid];
m9_249 -> m9_252  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m9_249 -> m9_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m9_251 -> m9_252  [key=0, style=solid];
m9_251 -> m9_114  [key=2, style=dotted];
m9_251 -> m9_115  [key=2, style=dotted];
m9_253 -> m9_244  [key=0, style=bold, color=blue];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_208  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_207 -> m9_208  [key=0, style=solid];
m9_208 -> m9_209  [key=0, style=solid];
m9_208 -> m9_9  [key=2, style=dotted];
m9_208 -> m9_150  [key=2, style=dotted];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_29  [key=2, style=dotted];
m9_209 -> m9_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_210 -> m9_206  [key=0, style=bold, color=blue];
m9_93 -> m9_94  [key=0, style=solid];
m9_94 -> m9_95  [key=0, style=solid];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_92  [key=2, style=dotted];
m9_96 -> m9_93  [key=0, style=bold, color=blue];
m9_19 -> m9_20  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_4  [key=2, style=dotted];
m9_22 -> m9_19  [key=0, style=bold, color=blue];
m9_224 -> m9_225  [key=0, style=solid];
m9_224 -> m9_226  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_224 -> m9_230  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_225 -> m9_226  [key=0, style=solid];
m9_226 -> m9_227  [key=0, style=solid];
m9_226 -> m9_9  [key=2, style=dotted];
m9_226 -> m9_76  [key=2, style=dotted];
m9_230 -> m9_231  [key=0, style=solid];
m9_230 -> m9_234  [key=2, style=dotted];
m9_230 -> m9_235  [key=2, style=dotted];
m9_227 -> m9_228  [key=0, style=solid];
m9_227 -> m9_232  [key=2, style=dotted];
m9_227 -> m9_230  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_228 -> m9_229  [key=0, style=solid];
m9_228 -> m9_230  [key=0, style=solid];
m9_228 -> m9_233  [key=2, style=dotted];
m9_229 -> m9_231  [key=0, style=solid];
m9_231 -> m9_224  [key=0, style=bold, color=blue];
m9_198 -> m9_199  [key=0, style=solid];
m9_198 -> m9_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_199 -> m9_200  [key=0, style=solid];
m9_200 -> m9_201  [key=0, style=solid];
m9_200 -> m9_9  [key=2, style=dotted];
m9_200 -> m9_150  [key=2, style=dotted];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_29  [key=2, style=dotted];
m9_201 -> m9_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_202 -> m9_198  [key=0, style=bold, color=blue];
m9_432 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_432 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_432 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_432 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_433 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_433 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_434 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_434 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_435 -> m9_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_435 -> m9_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_435 -> m9_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_435 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_436 -> m9_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m9_436 -> m9_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m9_437 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_437 -> m9_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_438 -> m9_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_438 -> m9_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_438 -> m9_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_439 -> m9_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m9_440 -> m9_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_441 -> m9_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_442 -> m9_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_443 -> m9_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_444 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_444 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_444 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_445 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_446 -> m9_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_446 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_446 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_447 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m9_448 -> m9_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_449 -> m9_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m10_7 -> m10_8  [key=0, style=solid, color=red];
m10_7 -> m10_9  [key=0, style=solid, color=red];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m10_19 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_19 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m10_19 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_19 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m10_19 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_19 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m10_19 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_19 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_19 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_22  [key=0, style=solid];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_24  [key=0, style=solid];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_26  [key=0, style=solid];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_28  [key=0, style=solid];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_41  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_44  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_35 -> m10_36  [key=0, style=solid];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_47  [key=2, style=dotted];
m10_37 -> m10_48  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_49  [key=2, style=dotted];
m10_21 -> m10_40  [key=0, style=solid];
m10_21 -> m10_12  [key=2, style=dotted];
m10_23 -> m10_40  [key=0, style=solid];
m10_23 -> m10_12  [key=2, style=dotted];
m10_25 -> m10_40  [key=0, style=solid];
m10_25 -> m10_12  [key=2, style=dotted];
m10_27 -> m10_40  [key=0, style=solid];
m10_27 -> m10_12  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_42  [key=2, style=dotted];
m10_29 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_43  [key=2, style=dotted];
m10_30 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m10_30 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m10_30 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m10_30 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m10_30 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_46  [key=2, style=dotted];
m10_36 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_36 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_45  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_50  [key=2, style=dotted];
m10_40 -> m10_19  [key=0, style=bold, color=blue];
m10_6 -> m10_11  [key=0, style=solid];
m10_6 -> m10_12  [key=2, style=dotted];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_54  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_47  [key=2, style=dotted];
m10_55 -> m10_64  [key=2, style=dotted];
m10_55 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label=hash];
m10_55 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label=hash];
m10_55 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label=hash];
m10_53 -> m10_63  [key=0, style=solid];
m10_53 -> m10_12  [key=2, style=dotted];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_42  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_58  [key=0, style=solid];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_65  [key=2, style=dotted];
m10_58 -> m10_66  [key=2, style=dotted];
m10_58 -> m10_62  [key=1, style=dashed, color=red, label=job];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_62  [key=0, style=solid, color=red];
m10_60 -> m10_68  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid, color=red];
m10_57 -> m10_63  [key=0, style=solid];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_67  [key=2, style=dotted];
m10_59 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label=state];
m10_59 -> m10_62  [key=1, style=dashed, color=red, label=state];
m10_62 -> m10_63  [key=0, style=solid, color=red];
m10_62 -> m10_69  [key=2, style=dotted, color=red];
m10_63 -> m10_51  [key=0, style=bold, color=blue];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_70 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_73  [key=0, style=solid];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_47  [key=2, style=dotted];
m10_75 -> m10_79  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_80  [key=2, style=dotted];
m10_72 -> m10_78  [key=0, style=solid];
m10_72 -> m10_12  [key=2, style=dotted];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_42  [key=2, style=dotted];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_46  [key=2, style=dotted];
m10_74 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_74 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_50  [key=2, style=dotted];
m10_78 -> m10_70  [key=0, style=bold, color=blue];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_1  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_2  [key=0, style=bold, color=blue];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_7  [key=1, style=dashed, color=red, label="Hangfire.IBackgroundJobClient"];
m10_4 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m10_4 -> m10_10  [key=1, style=dashed, color=red, label="Hangfire.IBackgroundJobClient"];
m10_1 -> m10_3  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_6  [key=2, style=dotted];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_2 -> m10_5  [key=0, style=solid];
m10_2 -> m10_7  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_5 -> m10_0  [key=0, style=bold, color=blue];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_7  [key=0, style=solid, color=red];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_9  [key=1, style=dashed, color=green, label="HangFire.States.ProcessingState"];
m10_13 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m10_13 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_16  [key=2, style=dotted];
m10_15 -> m10_13  [key=0, style=bold, color=blue];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_19  [key=2, style=dotted];
m10_18 -> m10_16  [key=0, style=bold, color=blue];
m10_41 -> m10_81  [key=0, style=solid];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_86  [key=2, style=dotted];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_85  [key=0, style=solid];
m10_82 -> m10_87  [key=2, style=dotted];
m10_83 -> m10_84  [key=0, style=solid];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_88  [key=2, style=dotted];
m10_85 -> m10_41  [key=0, style=bold, color=blue];
m10_8 -> m10_9  [key=0, style=solid, color=green];
m10_8 -> m10_11  [key=0, style=solid, color=red];
m10_8 -> m10_12  [key=2, style=dotted, color=red];
m10_9 -> m10_10  [key=0, style=solid, color=red];
m10_9 -> m10_43  [key=2, style=dotted, color=green];
m10_9 -> m10_12  [key=2, style=dotted, color=green];
m10_10 -> m10_8  [key=0, style=bold, color=blue];
m10_10 -> m10_11  [key=0, style=solid, color=red];
m10_45 -> m10_4  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.JobStorage _storage"];
m10_11 -> m10_4  [key=0, style=bold, color=blue];
m10_64 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Common.Job job"];
m10_89 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m10_89 -> m10_10  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m10_89 -> m10_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m10_89 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m10_89 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m10_89 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m10_89 -> m10_62  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m10_89 -> m10_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m11_31 -> m11_32  [key=0, style=solid, color=red];
m11_32 -> m11_33  [key=0, style=solid, color=red];
m11_32 -> m11_35  [key=2, style=dotted, color=red];
m11_32 -> m11_37  [key=1, style=dashed, color=red, label="lambda expression"];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> n75  [key=2, style=dotted];
m11_34 -> m11_31  [key=0, style=bold, color=blue];
m11_67 -> m11_68  [key=0, style=solid];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_53  [key=2, style=dotted];
m11_68 -> m11_73  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_35  [key=2, style=dotted];
m11_69 -> m11_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> n75  [key=2, style=dotted];
m11_71 -> m11_67  [key=0, style=bold, color=blue];
m11_153 -> m11_154  [key=0, style=solid];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_16  [key=2, style=dotted];
m11_154 -> m11_138  [key=2, style=dotted];
m11_154 -> m11_11  [key=2, style=dotted];
m11_154 -> m11_139  [key=2, style=dotted];
m11_154 -> m11_140  [key=2, style=dotted];
m11_154 -> m11_17  [key=2, style=dotted];
m11_154 -> m11_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_154 -> m11_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_53  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid, color=red];
m11_156 -> m11_131  [key=2, style=dotted];
m11_157 -> m11_158  [key=0, style=solid, color=red];
m11_157 -> m11_96  [key=2, style=dotted, color=red];
m11_157 -> m11_165  [key=1, style=dashed, color=red, label="lambda expression"];
m11_158 -> m11_153  [key=0, style=bold, color=blue];
m11_191 -> m11_192  [key=0, style=solid];
m11_192 -> m11_193  [key=0, style=solid];
m11_192 -> m11_53  [key=2, style=dotted];
m11_193 -> m11_194  [key=0, style=solid];
m11_193 -> m11_190  [key=2, style=dotted];
m11_194 -> m11_195  [key=0, style=solid];
m11_194 -> m11_96  [key=2, style=dotted];
m11_194 -> m11_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_96  [key=2, style=dotted];
m11_195 -> m11_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_196 -> m11_197  [key=0, style=solid];
m11_196 -> m11_96  [key=2, style=dotted];
m11_196 -> m11_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_197 -> m11_191  [key=0, style=bold, color=blue];
m11_75 -> m11_76  [key=0, style=solid];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_53  [key=2, style=dotted];
m11_76 -> m11_81  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_35  [key=2, style=dotted];
m11_77 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> n75  [key=2, style=dotted];
m11_79 -> m11_75  [key=0, style=bold, color=blue];
m11_91 -> m11_92  [key=0, style=solid];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_53  [key=2, style=dotted];
m11_93 -> m11_94  [key=0, style=solid];
m11_93 -> m11_58  [key=2, style=dotted];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_96  [key=2, style=dotted];
m11_94 -> m11_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_95 -> m11_91  [key=0, style=bold, color=blue];
m11_183 -> m11_184  [key=0, style=solid];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_53  [key=2, style=dotted];
m11_184 -> m11_188  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_35  [key=2, style=dotted];
m11_185 -> m11_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_186 -> m11_183  [key=0, style=bold, color=blue];
m11_171 -> m11_172  [key=0, style=solid];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_53  [key=2, style=dotted];
m11_172 -> m11_178  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_173 -> m11_174  [key=0, style=solid, color=red];
m11_173 -> m11_176  [key=2, style=dotted];
m11_173 -> m11_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_174 -> m11_175  [key=0, style=solid, color=red];
m11_174 -> m11_96  [key=2, style=dotted, color=red];
m11_174 -> m11_180  [key=1, style=dashed, color=red, label="lambda expression"];
m11_175 -> m11_171  [key=0, style=bold, color=blue];
m11_132 -> m11_133  [key=0, style=solid];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_16  [key=2, style=dotted];
m11_133 -> m11_138  [key=2, style=dotted];
m11_133 -> m11_11  [key=2, style=dotted];
m11_133 -> m11_139  [key=2, style=dotted];
m11_133 -> m11_140  [key=2, style=dotted];
m11_133 -> m11_17  [key=2, style=dotted];
m11_133 -> m11_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_133 -> m11_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_134 -> m11_135  [key=0, style=solid];
m11_134 -> m11_53  [key=2, style=dotted];
m11_135 -> m11_136  [key=0, style=solid, color=red];
m11_135 -> m11_131  [key=2, style=dotted];
m11_136 -> m11_137  [key=0, style=solid, color=red];
m11_136 -> m11_96  [key=2, style=dotted, color=red];
m11_136 -> m11_149  [key=1, style=dashed, color=red, label="lambda expression"];
m11_137 -> m11_132  [key=0, style=bold, color=blue];
m11_41 -> m11_42  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid, color=red];
m11_42 -> m11_35  [key=2, style=dotted];
m11_42 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_43 -> m11_44  [key=0, style=solid, color=red];
m11_43 -> n75  [key=2, style=dotted, color=red];
m11_44 -> m11_41  [key=0, style=bold, color=blue];
m11_53 -> m11_209  [key=0, style=solid, color=red];
m11_209 -> m11_210  [key=0, style=solid, color=red];
m11_209 -> m11_40  [key=2, style=dotted, color=red];
m11_210 -> m11_53  [key=0, style=bold, color=blue];
m11_105 -> m11_101  [key=0, style=bold, color=blue];
m11_101 -> m11_102  [key=0, style=solid];
m11_102 -> m11_103  [key=0, style=solid];
m11_102 -> m11_53  [key=2, style=dotted];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_58  [key=2, style=dotted];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_96  [key=2, style=dotted];
m11_104 -> m11_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_115 -> m11_116  [key=0, style=solid];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_53  [key=2, style=dotted];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_58  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_96  [key=2, style=dotted];
m11_118 -> m11_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_119 -> m11_115  [key=0, style=bold, color=blue];
m11_206 -> m11_207  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_22  [key=2, style=dotted];
m11_21 -> m11_19  [key=0, style=bold, color=blue];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_26  [key=2, style=dotted];
m11_25 -> m11_23  [key=0, style=bold, color=blue];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_30  [key=2, style=dotted];
m11_29 -> m11_27  [key=0, style=bold, color=blue];
m11_37 -> m11_38  [key=0, style=solid, color=red];
m11_38 -> m11_39  [key=0, style=solid, color=red];
m11_38 -> m11_40  [key=2, style=dotted, color=red];
m11_39 -> m11_37  [key=0, style=bold, color=blue];
m11_45 -> m11_46  [key=0, style=solid];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_40  [key=2, style=dotted];
m11_47 -> m11_45  [key=0, style=bold, color=blue];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_57  [key=2, style=dotted];
m11_55 -> m11_58  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_56 -> m11_54  [key=0, style=bold, color=blue];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_57  [key=2, style=dotted];
m11_65 -> m11_58  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_66 -> m11_64  [key=0, style=bold, color=blue];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_58  [key=2, style=dotted];
m11_72 -> m11_73  [key=0, style=solid];
m11_74 -> m11_72  [key=0, style=bold, color=blue];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_58  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_82 -> m11_80  [key=0, style=bold, color=blue];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_58  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_90 -> m11_88  [key=0, style=bold, color=blue];
m11_97 -> m11_98  [key=0, style=solid];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_100  [key=2, style=dotted];
m11_99 -> m11_97  [key=0, style=bold, color=blue];
m11_106 -> m11_107  [key=0, style=solid];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_109  [key=2, style=dotted];
m11_107 -> m11_35  [key=2, style=dotted];
m11_107 -> m11_110  [key=2, style=dotted];
m11_107 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_108 -> m11_106  [key=0, style=bold, color=blue];
m11_111 -> m11_112  [key=0, style=solid];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_114  [key=2, style=dotted];
m11_113 -> m11_111  [key=0, style=bold, color=blue];
m11_120 -> m11_121  [key=0, style=solid];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_123  [key=2, style=dotted];
m11_122 -> m11_120  [key=0, style=bold, color=blue];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_131  [key=2, style=dotted];
m11_128 -> m11_129  [key=0, style=solid];
m11_130 -> m11_128  [key=0, style=bold, color=blue];
m11_141 -> m11_142  [key=0, style=solid];
m11_145 -> m11_146  [key=0, style=solid];
m11_149 -> m11_150  [key=0, style=solid, color=red];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_109  [key=2, style=dotted];
m11_142 -> m11_144  [key=2, style=dotted];
m11_143 -> m11_141  [key=0, style=bold, color=blue];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_148  [key=2, style=dotted];
m11_147 -> m11_145  [key=0, style=bold, color=blue];
m11_150 -> m11_151  [key=0, style=solid, color=red];
m11_150 -> m11_35  [key=2, style=dotted, color=red];
m11_150 -> m11_152  [key=2, style=dotted, color=red];
m11_151 -> m11_149  [key=0, style=bold, color=blue];
m11_159 -> m11_160  [key=0, style=solid];
m11_162 -> m11_163  [key=0, style=solid];
m11_165 -> m11_166  [key=0, style=solid, color=red];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_109  [key=2, style=dotted];
m11_160 -> m11_144  [key=2, style=dotted];
m11_161 -> m11_159  [key=0, style=bold, color=blue];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_148  [key=2, style=dotted];
m11_164 -> m11_162  [key=0, style=bold, color=blue];
m11_166 -> m11_167  [key=0, style=solid, color=red];
m11_166 -> m11_35  [key=2, style=dotted, color=red];
m11_166 -> m11_152  [key=2, style=dotted, color=red];
m11_166 -> m11_168  [key=1, style=dashed, color=red, label="lambda expression"];
m11_167 -> m11_165  [key=0, style=bold, color=blue];
m11_168 -> m11_169  [key=0, style=solid, color=red];
m11_169 -> m11_170  [key=0, style=solid, color=red];
m11_170 -> m11_168  [key=0, style=bold, color=blue];
m11_178 -> m11_179  [key=0, style=solid];
m11_178 -> m11_131  [key=2, style=dotted];
m11_177 -> m11_178  [key=0, style=solid];
m11_180 -> m11_181  [key=0, style=solid, color=red];
m11_179 -> m11_177  [key=0, style=bold, color=blue];
m11_181 -> m11_182  [key=0, style=solid, color=red];
m11_181 -> m11_35  [key=2, style=dotted, color=red];
m11_181 -> m11_152  [key=2, style=dotted, color=red];
m11_182 -> m11_180  [key=0, style=bold, color=blue];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_190  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_189 -> m11_187  [key=0, style=bold, color=blue];
m11_198 -> m11_199  [key=0, style=solid];
m11_202 -> m11_203  [key=0, style=solid];
m11_199 -> m11_200  [key=0, style=solid];
m11_199 -> m11_201  [key=2, style=dotted];
m11_200 -> m11_198  [key=0, style=bold, color=blue];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_109  [key=2, style=dotted];
m11_203 -> m11_205  [key=2, style=dotted];
m11_204 -> m11_202  [key=0, style=bold, color=blue];
m11_207 -> m11_208  [key=0, style=solid];
m11_207 -> m11_123  [key=2, style=dotted];
m11_208 -> m11_206  [key=0, style=bold, color=blue];
m11_59 -> m11_60  [key=0, style=solid];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_53  [key=2, style=dotted];
m11_60 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_35  [key=2, style=dotted];
m11_61 -> m11_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> n75  [key=2, style=dotted];
m11_63 -> m11_59  [key=0, style=bold, color=blue];
m11_83 -> m11_84  [key=0, style=solid];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_53  [key=2, style=dotted];
m11_84 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_35  [key=2, style=dotted];
m11_85 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> n75  [key=2, style=dotted];
m11_87 -> m11_83  [key=0, style=bold, color=blue];
m11_48 -> m11_49  [key=0, style=solid];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_53  [key=2, style=dotted];
m11_49 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_35  [key=2, style=dotted];
m11_50 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> n75  [key=2, style=dotted];
m11_52 -> m11_48  [key=0, style=bold, color=blue];
m11_22 -> m11_211  [key=0, style=solid];
m11_211 -> m11_22  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_11  [key=2, style=dotted];
m11_2 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_12  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid, color=red];
m11_4 -> m11_13  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid, color=red];
m11_5 -> m11_14  [key=2, style=dotted, color=red];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_15  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_16  [key=2, style=dotted];
m11_7 -> m11_17  [key=2, style=dotted];
m11_7 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_18  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_16  [key=2, style=dotted];
m11_9 -> m11_17  [key=2, style=dotted];
m11_9 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_10 -> m11_0  [key=0, style=bold, color=blue];
m11_124 -> m11_125  [key=0, style=solid];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_53  [key=2, style=dotted];
m11_125 -> m11_129  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_35  [key=2, style=dotted];
m11_126 -> m11_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_127 -> m11_124  [key=0, style=bold, color=blue];
m11_212 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_5  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_32  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_38  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_136  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_157  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_174  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_212 -> m11_209  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.RecurringJobManagerFacts"];
m11_213 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_214 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_215 -> m11_73  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_216 -> m11_81  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_217 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_218 -> m11_129  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_219 -> m11_178  [key=1, style=dashed, color=darkseagreen4, label=manager];
m11_220 -> m11_188  [key=1, style=dashed, color=darkseagreen4, label=manager];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m12_3 -> m12_6  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_8  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid, color=red];
m12_5 -> m12_9  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid, color=red];
m12_6 -> m12_10  [key=2, style=dotted, color=red];
m12_7 -> m12_3  [key=0, style=bold, color=blue];
m12_11 -> m12_12  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_14  [key=2, style=dotted];
m12_13 -> m12_11  [key=0, style=bold, color=blue];
m12_15 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerHeartbeat"];
m12_15 -> m12_6  [key=1, style=dashed, color=red, label="Hangfire.Server.ServerHeartbeat"];
m12_15 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerHeartbeat"];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_19  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_13  [key=0, style=solid];
m13_12 -> m13_16  [key=0, style=solid];
m13_12 -> m13_17  [key=2, style=dotted];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_0  [key=0, style=bold, color=blue];
m13_3 -> m13_2  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_9  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m13_5 -> m13_4  [key=0, style=bold, color=blue];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_11  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m13_19 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_18  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m13_6 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.IJobCreationProcess"];
m13_6 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m13_6 -> m13_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m13_6 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.IJobCreationProcess"];
m13_6 -> m13_8  [key=1, style=dashed, color=darkseagreen4, label=serversRemoved];
m13_6 -> m13_12  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_9  [key=0, style=solid, color=green];
m13_9 -> m13_10  [key=0, style=solid, color=green];
m13_9 -> m13_11  [key=0, style=solid];
m13_9 -> m13_15  [key=2, style=dotted, color=green];
m13_14 -> m13_15  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid];
m13_8 -> m13_16  [key=0, style=solid];
m13_8 -> m13_17  [key=2, style=dotted];
m13_8 -> m13_9  [key=0, style=solid, color=green];
m13_8 -> m13_13  [key=2, style=dotted];
m13_8 -> m13_14  [key=2, style=dotted];
m13_10 -> m13_16  [key=0, style=solid];
m13_10 -> m13_17  [key=2, style=dotted];
m13_10 -> m13_4  [key=0, style=bold, color=blue];
m13_16 -> m13_6  [key=0, style=bold, color=blue];
m13_16 -> m13_17  [key=0, style=solid];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_22  [key=0, style=solid];
m13_20 -> m13_9  [key=1, style=dashed, color=green, label="Hangfire.Server.ServerWatchdog"];
m13_20 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdog"];
m13_20 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdog"];
m13_20 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdog"];
m13_20 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdog"];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_24  [key=0, style=solid];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_30  [key=2, style=dotted];
m13_24 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label=context];
m13_21 -> m13_29  [key=0, style=solid];
m13_21 -> m13_17  [key=2, style=dotted];
m13_23 -> m13_29  [key=0, style=solid];
m13_23 -> m13_17  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_31  [key=2, style=dotted];
m13_26 -> m13_29  [key=0, style=solid];
m13_27 -> m13_28  [key=0, style=solid];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_32  [key=2, style=dotted];
m13_29 -> m13_19  [key=0, style=bold, color=blue];
m13_18 -> m13_16  [key=0, style=bold, color=blue];
m13_33 -> m13_34  [key=0, style=solid];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_36  [key=2, style=dotted];
m13_35 -> m13_33  [key=0, style=bold, color=blue];
m13_37 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m13_37 -> m13_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m13_37 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m13_37 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m13_37 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m13_37 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m14_67 -> m14_68  [key=0, style=solid];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_43  [key=2, style=dotted];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_22  [key=2, style=dotted];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_30  [key=2, style=dotted];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_66  [key=2, style=dotted];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_35  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_44  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_26  [key=2, style=dotted];
m14_75 -> m14_67  [key=0, style=bold, color=blue];
m14_14 -> m14_15  [key=0, style=solid, color=red];
m14_15 -> m14_16  [key=0, style=solid, color=red];
m14_15 -> m14_17  [key=0, style=solid, color=red];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_0  [key=2, style=dotted];
m14_17 -> m14_14  [key=0, style=bold, color=blue];
m14_18 -> m14_19  [key=0, style=solid];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_21  [key=2, style=dotted];
m14_20 -> m14_18  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_5  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_6  [key=2, style=dotted];
m14_2 -> m14_7  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_8  [key=2, style=dotted];
m14_4 -> m14_0  [key=0, style=bold, color=blue];
m14_36 -> m14_37  [key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_43  [key=2, style=dotted];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_22  [key=2, style=dotted];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_30  [key=2, style=dotted];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_44  [key=2, style=dotted];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_26  [key=2, style=dotted];
m14_42 -> m14_36  [key=0, style=bold, color=blue];
m14_57 -> m14_58  [key=0, style=solid];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_43  [key=2, style=dotted];
m14_59 -> m14_60  [key=0, style=solid];
m14_59 -> m14_22  [key=2, style=dotted];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_30  [key=2, style=dotted];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_66  [key=2, style=dotted];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_44  [key=2, style=dotted];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_35  [key=2, style=dotted];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_26  [key=2, style=dotted];
m14_64 -> m14_61  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.Common.Job job"];
m14_65 -> m14_57  [key=0, style=bold, color=blue];
m14_26 -> m14_27  [key=0, style=solid];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_29  [key=2, style=dotted];
m14_28 -> m14_26  [key=0, style=bold, color=blue];
m14_45 -> m14_46  [key=0, style=solid];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_43  [key=2, style=dotted];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_22  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_30  [key=2, style=dotted];
m14_49 -> m14_50  [key=0, style=solid, color=red];
m14_49 -> m14_55  [key=2, style=dotted];
m14_49 -> m14_51  [key=1, style=dashed, color=red, label=table1];
m14_49 -> m14_52  [key=1, style=dashed, color=darkseagreen4, label=table1];
m14_50 -> m14_51  [key=0, style=solid, color=red];
m14_50 -> m14_56  [key=2, style=dotted, color=red];
m14_50 -> m14_50  [key=3, color=red, style=bold, label="Local variable string insertParameterSql"];
m14_51 -> m14_52  [key=0, style=solid, color=red];
m14_51 -> m14_56  [key=2, style=dotted, color=red];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_44  [key=2, style=dotted];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_26  [key=2, style=dotted];
m14_54 -> m14_45  [key=0, style=bold, color=blue];
m14_22 -> m14_23  [key=0, style=solid];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_25  [key=2, style=dotted];
m14_24 -> m14_22  [key=0, style=bold, color=blue];
m14_30 -> m14_31  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_34  [key=2, style=dotted];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_35  [key=2, style=dotted];
m14_33 -> m14_30  [key=0, style=bold, color=blue];
m14_9 -> m14_10  [key=0, style=solid];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_13  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_12 -> m14_9  [key=0, style=bold, color=blue];
m14_76 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m14_76 -> m14_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ProcessingStateFeature"];
m15_8 -> m15_9  [key=0, style=solid];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_42  [key=2, style=dotted];
m15_21 -> m15_32  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_26  [key=0, style=solid];
m15_21 -> m15_39  [key=2, style=dotted];
m15_21 -> m15_40  [key=2, style=dotted];
m15_21 -> m15_41  [key=2, style=dotted];
m15_21 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m15_22 -> m15_23  [key=0, style=solid];
m15_19 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label=connection];
m15_19 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label=connection];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_37  [key=2, style=dotted];
m15_19 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label=connection];
m15_19 -> m15_29  [key=1, style=dashed, color=darkseagreen4, label=connection];
m15_3 -> m15_5  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_0 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m15_0 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_7  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_4  [key=0, style=bold, color=blue];
m15_1 -> m15_3  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_4 -> m15_7  [key=0, style=solid];
m15_4 -> m15_8  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_2 -> m15_7  [key=0, style=solid];
m15_2 -> m15_8  [key=2, style=dotted];
m15_2 -> m15_0  [key=0, style=bold, color=blue];
m15_7 -> m15_0  [key=0, style=bold, color=blue];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_30  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_30 -> m15_45  [key=2, style=dotted];
m15_31 -> m15_30  [key=0, style=bold, color=blue];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_31  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_31 -> m15_36  [key=2, style=dotted];
m15_48 -> m15_49  [key=0, style=solid, color=green];
m15_48 -> m15_50  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m15_49 -> m15_49  [key=3, color=green, style=bold, label="Local variable string enqueueJobSql"];
m15_49 -> m15_50  [key=0, style=solid, color=green];
m15_50 -> m15_51  [key=0, style=solid];
m15_50 -> m15_52  [key=2, style=dotted];
m15_51 -> m15_48  [key=0, style=bold, color=blue];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_19  [key=2, style=dotted];
m15_9 -> m15_14  [key=1, style=dashed, color=darkseagreen4, label=connection];
m15_9 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_9 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m15_9 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_20  [key=2, style=dotted];
m15_10 -> m15_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_10 -> m15_14  [key=1, style=dashed, color=darkseagreen4, label=job];
m15_10 -> m15_12  [key=0, style=solid];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_24  [key=2, style=dotted];
m15_14 -> m15_14  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.SqlServer.SqlServerJobQueue.FetchedJob fetchedJob"];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_21  [key=2, style=dotted];
m15_11 -> m15_14  [key=1, style=dashed, color=darkseagreen4, label=state];
m15_11 -> m15_34  [key=0, style=solid];
m15_11 -> m15_8  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_22  [key=2, style=dotted];
m15_12 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label=exception];
m15_12 -> m15_17  [key=1, style=dashed, color=darkseagreen4, label=exception];
m15_12 -> m15_14  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_23  [key=2, style=dotted];
m15_13 -> m15_34  [key=0, style=solid];
m15_13 -> m15_35  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_7  [key=2, style=dotted];
m15_15 -> m15_17  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_15 -> m15_14  [key=3, color=darkorchid, style=bold, label="Local variable SqlConnection connection"];
m15_17 -> m15_18  [key=0, style=solid, color=green];
m15_17 -> n118  [key=2, style=dotted];
m15_17 -> m15_17  [key=3, color=green, style=bold, label="Local variable string fetchJobSqlTemplate"];
m15_17 -> m15_21  [key=1, style=dashed, color=green, label=fetchJobSqlTemplate];
m15_16 -> m15_17  [key=0, style=solid, color=green];
m15_16 -> m15_25  [key=2, style=dotted];
m15_16 -> m15_14  [key=3, color=darkorchid, style=bold, label="Local variable SqlTransaction transaction"];
m15_18 -> m15_8  [key=0, style=bold, color=blue];
m15_18 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_36  [key=2, style=dotted];
m15_18 -> m15_30  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_44  [key=2, style=dotted];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_30  [key=2, style=dotted];
m15_28 -> m15_42  [key=2, style=dotted];
m15_29 -> m15_27  [key=0, style=bold, color=blue];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_43  [key=2, style=dotted];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_43  [key=2, style=dotted];
m15_25 -> m15_34  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_20 -> m15_38  [key=2, style=dotted];
m15_20 -> m15_23  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_20 -> m15_27  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_20 -> m15_28  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_32 -> m15_17  [key=0, style=solid, color=green];
m15_32 -> m15_33  [key=0, style=solid];
m15_26 -> m15_32  [key=0, style=solid];
m15_26 -> m15_27  [key=0, style=solid];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_46  [key=2, style=dotted];
m15_33 -> m15_47  [key=2, style=dotted];
m15_34 -> m15_9  [key=0, style=bold, color=blue];
m15_53 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m15_53 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m15_53 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m15_53 -> m15_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m15_53 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m15_53 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m15_53 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m15_53 -> m15_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_54  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m16_18 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m16_18 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString SidebarMenu"];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_21  [key=0, style=solid];
m16_19 -> m16_22  [key=2, style=dotted];
m16_19 -> m16_23  [key=2, style=dotted];
m16_19 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_20 -> m16_22  [key=0, style=solid];
m16_20 -> m16_5  [key=2, style=dotted];
m16_20 -> m16_6  [key=2, style=dotted];
m16_20 -> m16_18  [key=0, style=bold, color=blue];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_17  [key=2, style=dotted];
m16_21 -> m16_13  [key=2, style=dotted];
m16_22 -> m16_18  [key=0, style=bold, color=blue];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_56 -> m16_75  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m16_56 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_51  [key=2, style=dotted];
m16_58 -> m16_60  [key=2, style=dotted];
m16_58 -> m16_61  [key=2, style=dotted];
m16_58 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_59 -> m16_56  [key=0, style=bold, color=blue];
m16_59 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_130 -> m16_131  [key=0, style=solid];
m16_131 -> m16_132  [key=0, style=solid];
m16_131 -> m16_134  [key=2, style=dotted];
m16_132 -> m16_133  [key=0, style=solid];
m16_132 -> m16_51  [key=2, style=dotted];
m16_133 -> m16_130  [key=0, style=bold, color=blue];
m16_6 -> m16_7  [key=0, style=solid, color=green];
m16_7 -> m16_7  [key=3, color=green, style=bold, label="Local variable string sqlQuery"];
m16_7 -> m16_8  [key=0, style=solid, color=green];
m16_7 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_7 -> m16_19  [key=1, style=dashed, color=green, label=sqlQuery];
m16_7 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m16_7 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Breadcrumbs"];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_10  [key=0, style=solid];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_16  [key=2, style=dotted];
m16_10 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_10 -> m16_12  [key=2, style=dotted];
m16_10 -> m16_13  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_13  [key=0, style=solid];
m16_9 -> m16_15  [key=2, style=dotted];
m16_9 -> m16_11  [key=0, style=solid];
m16_9 -> m16_5  [key=2, style=dotted];
m16_9 -> m16_6  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_7  [key=0, style=bold, color=blue];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_17  [key=2, style=dotted];
m16_13 -> m16_47  [key=0, style=solid];
m16_13 -> m16_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m16_12 -> m16_13  [key=0, style=solid];
m16_14 -> m16_6  [key=0, style=bold, color=blue];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobsSidebar"];
m16_27 -> m16_28  [key=0, style=solid, color=green];
m16_27 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_27 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_27 -> m16_16  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<int> GetEnqueuedJobIds"];
m16_27 -> m16_23  [key=0, style=bold, color=blue];
m16_28 -> m16_28  [key=3, color=green, style=bold, label="Local variable string sqlQuery"];
m16_28 -> m16_29  [key=0, style=solid, color=green];
m16_28 -> m16_32  [key=1, style=dashed, color=green, label=sqlQuery];
m16_29 -> m16_30  [key=0, style=solid, color=red];
m16_29 -> m16_16  [key=2, style=dotted];
m16_29 -> m16_31  [key=1, style=dashed, color=red, label="Hangfire.Dashboard.DashboardMetric"];
m16_29 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m16_29 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString InlineMetric"];
m16_30 -> m16_27  [key=0, style=bold, color=blue];
m16_30 -> m16_31  [key=0, style=solid, color=red];
m16_30 -> m16_32  [key=0, style=solid, color=red];
m16_30 -> m16_30  [key=3, color=red, style=bold, label="Local variable string sqlQuery"];
m16_16 -> m16_10  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m16_16 -> m16_29  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m16_16 -> m16_44  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m16_16 -> m16_52  [key=0, style=solid];
m16_16 -> m16_14  [key=0, style=bold, color=blue];
m16_53 -> m16_16  [key=0, style=bold, color=blue];
m16_53 -> m16_54  [key=0, style=solid];
m16_35 -> m16_36  [key=0, style=solid, color=red];
m16_35 -> m16_37  [key=1, style=dashed, color=red, label="Hangfire.Dashboard.Pager"];
m16_35 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m16_35 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Paginator"];
m16_36 -> m16_37  [key=0, style=solid, color=red];
m16_36 -> m16_38  [key=0, style=solid, color=red];
m16_37 -> m16_39  [key=0, style=solid, color=red];
m16_37 -> m16_5  [key=2, style=dotted, color=red];
m16_37 -> m16_6  [key=2, style=dotted, color=red];
m16_37 -> m16_35  [key=0, style=bold, color=blue];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_40  [key=2, style=dotted];
m16_38 -> m16_13  [key=2, style=dotted];
m16_39 -> m16_35  [key=0, style=bold, color=blue];
m16_122 -> m16_123  [key=0, style=solid];
m16_123 -> m16_124  [key=0, style=solid];
m16_123 -> m16_125  [key=2, style=dotted];
m16_123 -> m16_126  [key=2, style=dotted];
m16_123 -> m16_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_124 -> m16_122  [key=0, style=bold, color=blue];
m16_42 -> m16_43  [key=0, style=solid, color=green];
m16_42 -> m16_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_42 -> m16_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_42 -> m16_16  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.SqlServer.EnqueuedAndFetchedCountDto GetEnqueuedAndFetchedCount"];
m16_43 -> m16_43  [key=3, color=green, style=bold, label="Local variable string sqlQuery"];
m16_43 -> m16_44  [key=0, style=solid, color=green];
m16_43 -> m16_47  [key=1, style=dashed, color=green, label=sqlQuery];
m16_43 -> m16_45  [key=0, style=solid];
m16_43 -> m16_5  [key=2, style=dotted];
m16_43 -> m16_6  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_16  [key=2, style=dotted];
m16_44 -> m16_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_44 -> m16_13  [key=2, style=dotted];
m16_45 -> m16_42  [key=0, style=bold, color=blue];
m16_45 -> m16_41  [key=0, style=bold, color=blue];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_17  [key=2, style=dotted];
m16_15 -> m16_13  [key=2, style=dotted];
m16_143 -> m16_144  [key=0, style=solid];
m16_144 -> m16_145  [key=0, style=solid];
m16_144 -> m16_51  [key=2, style=dotted];
m16_144 -> m16_146  [key=2, style=dotted];
m16_145 -> m16_143  [key=0, style=bold, color=blue];
m16_82 -> m16_147  [key=0, style=solid];
m16_82 -> m16_62  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m16_147 -> m16_148  [key=0, style=solid];
m16_147 -> m16_149  [key=2, style=dotted];
m16_148 -> m16_82  [key=0, style=bold, color=blue];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_51  [key=2, style=dotted];
m16_55 -> m16_53  [key=0, style=bold, color=blue];
m16_55 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_55 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_55 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_55 -> m16_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_55 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_55 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_55 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_55 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_55 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_55 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m16_0 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=0, style=solid];
m16_2 -> m16_4  [key=0, style=solid];
m16_2 -> m16_5  [key=2, style=dotted];
m16_2 -> m16_6  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_0  [key=0, style=bold, color=blue];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m16_23 -> m16_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m16_23 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString BlockMetric"];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_26  [key=0, style=solid];
m16_25 -> m16_27  [key=0, style=solid];
m16_25 -> m16_5  [key=2, style=dotted];
m16_25 -> m16_6  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_28  [key=2, style=dotted];
m16_26 -> m16_13  [key=2, style=dotted];
m16_26 -> m16_24  [key=0, style=bold, color=blue];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString MomentTitle"];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_86  [key=2, style=dotted];
m16_88 -> m16_53  [key=2, style=dotted];
m16_89 -> m16_87  [key=0, style=bold, color=blue];
m16_61 -> m16_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_135 -> m16_136  [key=0, style=solid];
m16_135 -> m16_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_135 -> m16_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_136 -> m16_137  [key=0, style=solid];
m16_136 -> m16_140  [key=2, style=dotted];
m16_137 -> m16_138  [key=0, style=solid];
m16_137 -> m16_141  [key=2, style=dotted];
m16_137 -> m16_142  [key=2, style=dotted];
m16_138 -> m16_139  [key=0, style=solid];
m16_138 -> m16_51  [key=2, style=dotted];
m16_139 -> m16_135  [key=0, style=bold, color=blue];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m16_62 -> m16_79  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Common.Job job"];
m16_62 -> m16_47  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_65  [key=0, style=solid];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_67  [key=2, style=dotted];
m16_64 -> m16_66  [key=0, style=solid];
m16_66 -> m16_62  [key=0, style=bold, color=blue];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label=bool];
m16_90 -> m16_95  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_90 -> m16_96  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_93  [key=0, style=solid];
m16_94 -> m16_95  [key=0, style=solid];
m16_94 -> m16_96  [key=0, style=solid];
m16_95 -> m16_96  [key=0, style=solid];
m16_95 -> m16_117  [key=2, style=dotted];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_118  [key=2, style=dotted];
m16_96 -> m16_96  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_98  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_99  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_100  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_101  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_102  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_103  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_104  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_105  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_106  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_107  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_109  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_96 -> m16_110  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m16_92 -> m16_115  [key=0, style=solid];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_116  [key=2, style=dotted];
m16_93 -> m16_95  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_98  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_100  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_102  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_105  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_107  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_108  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_110  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_111  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_112  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_113  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_93 -> m16_114  [key=1, style=dashed, color=darkseagreen4, label=builder];
m16_98 -> m16_99  [key=0, style=solid];
m16_98 -> m16_117  [key=2, style=dotted];
m16_100 -> m16_101  [key=0, style=solid];
m16_100 -> m16_117  [key=2, style=dotted];
m16_102 -> m16_103  [key=0, style=solid];
m16_102 -> m16_117  [key=2, style=dotted];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_119  [key=2, style=dotted];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_117  [key=2, style=dotted];
m16_108 -> m16_111  [key=0, style=solid];
m16_108 -> m16_117  [key=2, style=dotted];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_117  [key=2, style=dotted];
m16_111 -> m16_112  [key=0, style=solid];
m16_111 -> m16_113  [key=0, style=solid];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_117  [key=2, style=dotted];
m16_113 -> m16_114  [key=0, style=solid];
m16_113 -> m16_120  [key=2, style=dotted];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_121  [key=2, style=dotted];
m16_97 -> m16_98  [key=0, style=solid];
m16_97 -> m16_99  [key=0, style=solid];
m16_99 -> m16_100  [key=0, style=solid];
m16_99 -> m16_101  [key=0, style=solid];
m16_101 -> m16_102  [key=0, style=solid];
m16_101 -> m16_103  [key=0, style=solid];
m16_103 -> m16_104  [key=0, style=solid];
m16_103 -> m16_111  [key=0, style=solid];
m16_104 -> m16_105  [key=0, style=solid];
m16_104 -> m16_109  [key=0, style=solid];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_108  [key=0, style=solid];
m16_109 -> m16_110  [key=0, style=solid];
m16_109 -> m16_111  [key=0, style=solid];
m16_115 -> m16_90  [key=0, style=bold, color=blue];
m16_60 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m16_31 -> m16_33  [key=0, style=solid, color=red];
m16_31 -> m16_5  [key=2, style=dotted, color=red];
m16_31 -> m16_6  [key=2, style=dotted, color=red];
m16_31 -> m16_32  [key=0, style=solid];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_34  [key=2, style=dotted];
m16_32 -> m16_13  [key=2, style=dotted];
m16_32 -> n10  [key=2, style=dotted];
m16_32 -> m16_23  [key=2, style=dotted];
m16_32 -> m16_22  [key=2, style=dotted];
m16_32 -> m16_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_33 -> m16_29  [key=0, style=bold, color=blue];
m16_33 -> m16_31  [key=0, style=bold, color=blue];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString RelativeTime"];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_86  [key=2, style=dotted];
m16_84 -> m16_53  [key=2, style=dotted];
m16_85 -> m16_83  [key=0, style=bold, color=blue];
m16_46 -> m16_47  [key=0, style=solid];
m16_127 -> m16_128  [key=0, style=solid];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_128  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m16_129 -> m16_127  [key=0, style=bold, color=blue];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> n10  [key=2, style=dotted];
m16_47 -> m16_50  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_51  [key=2, style=dotted];
m16_48 -> m16_52  [key=2, style=dotted];
m16_49 -> m16_46  [key=0, style=bold, color=blue];
m16_49 -> m16_13  [key=0, style=bold, color=blue];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_68 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString StateLabel"];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_71  [key=0, style=solid];
m16_69 -> m16_73  [key=2, style=dotted];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_74  [key=2, style=dotted];
m16_71 -> m16_53  [key=2, style=dotted];
m16_70 -> m16_72  [key=0, style=solid];
m16_70 -> m16_53  [key=2, style=dotted];
m16_72 -> m16_68  [key=0, style=bold, color=blue];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m16_41 -> m16_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m16_41 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString PerPageSelector"];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobIdLink"];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_78  [key=2, style=dotted];
m16_76 -> m16_56  [key=2, style=dotted];
m16_76 -> m16_53  [key=2, style=dotted];
m16_77 -> m16_75  [key=0, style=bold, color=blue];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobNameLink"];
m16_80 -> m16_81  [key=0, style=solid];
m16_80 -> m16_78  [key=2, style=dotted];
m16_80 -> m16_62  [key=2, style=dotted];
m16_80 -> m16_82  [key=2, style=dotted];
m16_80 -> m16_53  [key=2, style=dotted];
m16_81 -> m16_79  [key=0, style=bold, color=blue];
m16_150 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m17_45 -> m17_352  [key=0, style=solid, color=green];
m17_45 -> m17_353  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m17_45 -> m17_354  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m17_352 -> m17_353  [key=0, style=solid, color=green];
m17_352 -> m17_352  [key=3, color=green, style=bold, label="Local variable string jobsSql"];
m17_353 -> m17_354  [key=0, style=solid];
m17_353 -> m17_78  [key=2, style=dotted];
m17_353 -> m17_87  [key=2, style=dotted];
m17_354 -> m17_355  [key=0, style=solid];
m17_354 -> m17_334  [key=2, style=dotted];
m17_355 -> m17_45  [key=0, style=bold, color=blue];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long FailedCount"];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_10  [key=2, style=dotted];
m17_28 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_29 -> m17_27  [key=0, style=bold, color=blue];
m17_356 -> m17_357  [key=0, style=solid];
m17_356 -> m17_358  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>"];
m17_356 -> m17_361  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m17_357 -> m17_358  [key=0, style=solid];
m17_357 -> m17_365  [key=2, style=dotted];
m17_357 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_357 -> m17_363  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_358 -> m17_359  [key=0, style=solid];
m17_358 -> m17_363  [key=0, style=solid];
m17_358 -> m17_361  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_358 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_361 -> m17_362  [key=0, style=solid];
m17_361 -> m17_343  [key=2, style=dotted];
m17_361 -> m17_366  [key=2, style=dotted];
m17_362 -> m17_358  [key=0, style=solid];
m17_362 -> m17_367  [key=2, style=dotted];
m17_362 -> m17_368  [key=2, style=dotted];
m17_362 -> m17_90  [key=2, style=dotted];
m17_363 -> m17_364  [key=0, style=solid];
m17_363 -> m17_369  [key=2, style=dotted];
m17_359 -> m17_360  [key=0, style=solid];
m17_359 -> m17_350  [key=2, style=dotted];
m17_360 -> m17_361  [key=0, style=solid];
m17_360 -> m17_220  [key=2, style=dotted];
m17_364 -> m17_356  [key=0, style=bold, color=blue];
m17_14 -> m17_339  [key=0, style=solid, color=green];
m17_14 -> m17_340  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m17_14 -> m17_8  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m17_14 -> m17_28  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m17_14 -> m17_34  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m17_14 -> m17_222  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m17_14 -> m17_228  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m17_339 -> m17_340  [key=0, style=solid, color=green];
m17_340 -> m17_341  [key=0, style=solid];
m17_340 -> m17_78  [key=2, style=dotted];
m17_340 -> m17_255  [key=2, style=dotted];
m17_341 -> m17_342  [key=0, style=solid];
m17_342 -> m17_14  [key=0, style=bold, color=blue];
m17_227 -> m17_228  [key=0, style=solid];
m17_227 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long DeletedListCount"];
m17_228 -> m17_229  [key=0, style=solid];
m17_228 -> m17_10  [key=2, style=dotted];
m17_228 -> m17_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_229 -> m17_227  [key=0, style=bold, color=blue];
m17_10 -> m17_327  [key=0, style=solid];
m17_10 -> m17_8  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_28  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_34  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_40  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_63  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_70  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_92  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_103  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_114  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_129  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_162  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_172  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_180  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_187  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_193  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_222  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_228  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_10 -> m17_235  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m17_327 -> m17_328  [key=0, style=solid];
m17_327 -> m17_329  [key=2, style=dotted];
m17_328 -> m17_10  [key=0, style=bold, color=blue];
m17_186 -> m17_187  [key=0, style=solid];
m17_186 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs"];
m17_187 -> m17_188  [key=0, style=solid];
m17_187 -> m17_10  [key=2, style=dotted];
m17_187 -> m17_189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_188 -> m17_186  [key=0, style=bold, color=blue];
m17_233 -> m17_234  [key=0, style=solid, color=green];
m17_233 -> m17_235  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.StatisticsDto GetStatistics"];
m17_234 -> m17_235  [key=0, style=solid, color=green];
m17_234 -> m17_243  [key=1, style=dashed, color=green, label=sql];
m17_234 -> m17_234  [key=3, color=green, style=bold, label="Local variable string sql"];
m17_235 -> m17_236  [key=0, style=solid];
m17_235 -> m17_10  [key=2, style=dotted];
m17_235 -> m17_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_235 -> m17_237  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m17_235 -> m17_235  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.StatisticsDto "];
m17_236 -> m17_237  [key=0, style=solid];
m17_236 -> m17_239  [key=2, style=dotted];
m17_236 -> m17_240  [key=2, style=dotted];
m17_236 -> m17_256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_237 -> m17_238  [key=0, style=solid];
m17_238 -> m17_233  [key=0, style=bold, color=blue];
m17_169 -> m17_170  [key=0, style=solid];
m17_169 -> m17_171  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_169 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.FetchedJobDto> FetchedJobs"];
m17_170 -> m17_171  [key=0, style=solid];
m17_170 -> m17_20  [key=2, style=dotted];
m17_171 -> m17_172  [key=0, style=solid];
m17_171 -> m17_174  [key=2, style=dotted];
m17_171 -> m17_176  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m17_172 -> m17_173  [key=0, style=solid];
m17_172 -> m17_10  [key=2, style=dotted];
m17_172 -> m17_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_173 -> m17_169  [key=0, style=bold, color=blue];
m17_185 -> m17_260  [key=0, style=solid];
m17_185 -> m17_267  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_185 -> m17_273  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_185 -> m17_268  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m17_260 -> m17_261  [key=0, style=solid];
m17_260 -> m17_264  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_260 -> m17_265  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_267 -> m17_268  [key=0, style=solid];
m17_267 -> m17_207  [key=2, style=dotted];
m17_267 -> m17_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_267 -> m17_277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_268 -> m17_269  [key=0, style=solid];
m17_268 -> m17_271  [key=2, style=dotted];
m17_261 -> m17_262  [key=0, style=solid];
m17_261 -> n6  [key=2, style=dotted];
m17_261 -> m17_264  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_261 -> m17_267  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_264 -> m17_265  [key=0, style=solid];
m17_264 -> m17_90  [key=2, style=dotted];
m17_265 -> m17_266  [key=0, style=solid];
m17_265 -> m17_270  [key=2, style=dotted];
m17_265 -> m17_265  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_262 -> m17_263  [key=0, style=solid];
m17_262 -> m17_266  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_262 -> m17_262  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m17_263 -> m17_264  [key=0, style=solid];
m17_263 -> m17_267  [key=0, style=solid];
m17_266 -> m17_263  [key=0, style=solid];
m17_266 -> m17_266  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_269 -> m17_185  [key=0, style=bold, color=blue];
m17_123 -> m17_124  [key=0, style=solid];
m17_123 -> m17_125  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> Queues"];
m17_124 -> m17_125  [key=0, style=solid];
m17_124 -> m17_133  [key=2, style=dotted];
m17_124 -> m17_134  [key=2, style=dotted];
m17_124 -> m17_135  [key=2, style=dotted];
m17_124 -> m17_136  [key=2, style=dotted];
m17_124 -> m17_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_124 -> m17_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_124 -> m17_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_124 -> m17_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_124 -> m17_126  [key=1, style=dashed, color=darkseagreen4, label=tuples];
m17_125 -> m17_126  [key=0, style=solid];
m17_125 -> m17_137  [key=2, style=dotted];
m17_125 -> m17_130  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_125 -> m17_131  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_126 -> m17_127  [key=0, style=solid];
m17_126 -> m17_131  [key=0, style=solid];
m17_126 -> m17_128  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m17_126 -> m17_130  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m17_130 -> m17_126  [key=0, style=solid];
m17_130 -> m17_140  [key=2, style=dotted];
m17_130 -> m17_90  [key=2, style=dotted];
m17_131 -> m17_132  [key=0, style=solid];
m17_127 -> m17_128  [key=0, style=solid];
m17_127 -> m17_138  [key=2, style=dotted];
m17_127 -> m17_129  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m17_127 -> m17_156  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m17_128 -> m17_129  [key=0, style=solid];
m17_128 -> m17_139  [key=2, style=dotted];
m17_128 -> m17_130  [key=1, style=dashed, color=darkseagreen4, label=counters];
m17_129 -> m17_130  [key=0, style=solid];
m17_129 -> m17_10  [key=2, style=dotted];
m17_129 -> m17_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_132 -> m17_123  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m17_0 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="int?"];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_4 -> m17_5  [key=0, style=solid];
m17_2 -> m17_5  [key=0, style=solid];
m17_2 -> m17_6  [key=2, style=dotted];
m17_5 -> m17_0  [key=0, style=bold, color=blue];
m17_113 -> m17_114  [key=0, style=solid];
m17_113 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_113 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.DeletedJobDto> DeletedJobs"];
m17_114 -> m17_115  [key=0, style=solid];
m17_114 -> m17_10  [key=2, style=dotted];
m17_114 -> m17_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_115 -> m17_113  [key=0, style=bold, color=blue];
m17_335 -> m17_336  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_14  [key=2, style=dotted];
m17_13 -> m17_11  [key=0, style=bold, color=blue];
m17_30 -> m17_31  [key=0, style=solid];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_14  [key=2, style=dotted];
m17_32 -> m17_30  [key=0, style=bold, color=blue];
m17_36 -> m17_37  [key=0, style=solid];
m17_37 -> m17_38  [key=0, style=solid];
m17_37 -> m17_14  [key=2, style=dotted];
m17_38 -> m17_36  [key=0, style=bold, color=blue];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_45  [key=2, style=dotted];
m17_43 -> m17_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_42 -> m17_43  [key=0, style=solid];
m17_44 -> m17_42  [key=0, style=bold, color=blue];
m17_46 -> m17_47  [key=0, style=solid];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> m17_49  [key=2, style=dotted];
m17_47 -> m17_50  [key=2, style=dotted];
m17_47 -> m17_51  [key=2, style=dotted];
m17_48 -> m17_46  [key=0, style=bold, color=blue];
m17_56 -> m17_57  [key=0, style=solid];
m17_56 -> m17_45  [key=2, style=dotted];
m17_56 -> m17_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_55 -> m17_56  [key=0, style=solid];
m17_57 -> m17_55  [key=0, style=bold, color=blue];
m17_58 -> m17_59  [key=0, style=solid];
m17_59 -> m17_60  [key=0, style=solid];
m17_59 -> m17_61  [key=2, style=dotted];
m17_59 -> m17_51  [key=2, style=dotted];
m17_60 -> m17_58  [key=0, style=bold, color=blue];
m17_65 -> m17_66  [key=0, style=solid];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_68  [key=2, style=dotted];
m17_67 -> m17_65  [key=0, style=bold, color=blue];
m17_72 -> m17_73  [key=0, style=solid];
m17_73 -> m17_74  [key=0, style=solid];
m17_73 -> m17_68  [key=2, style=dotted];
m17_74 -> m17_72  [key=0, style=bold, color=blue];
m17_79 -> m17_80  [key=0, style=solid, color=green];
m17_80 -> m17_81  [key=0, style=solid, color=green];
m17_80 -> m17_78  [key=2, style=dotted, color=green];
m17_80 -> m17_87  [key=2, style=dotted, color=green];
m17_80 -> m17_82  [key=1, style=dashed, color=green, label=servers];
m17_81 -> m17_82  [key=0, style=solid];
m17_81 -> n6  [key=2, style=dotted];
m17_81 -> m17_84  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_81 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_82 -> m17_83  [key=0, style=solid];
m17_82 -> m17_85  [key=0, style=solid];
m17_82 -> m17_84  [key=1, style=dashed, color=darkseagreen4, label=server];
m17_84 -> m17_82  [key=0, style=solid];
m17_84 -> m17_89  [key=2, style=dotted];
m17_84 -> m17_90  [key=2, style=dotted];
m17_85 -> m17_86  [key=0, style=solid];
m17_83 -> m17_84  [key=0, style=solid];
m17_83 -> m17_78  [key=2, style=dotted];
m17_86 -> m17_79  [key=0, style=bold, color=blue];
m17_95 -> m17_96  [key=0, style=solid];
m17_95 -> m17_45  [key=2, style=dotted];
m17_95 -> m17_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_94 -> m17_95  [key=0, style=solid];
m17_96 -> m17_94  [key=0, style=bold, color=blue];
m17_97 -> m17_98  [key=0, style=solid];
m17_98 -> m17_99  [key=0, style=solid];
m17_98 -> m17_100  [key=2, style=dotted];
m17_98 -> m17_101  [key=2, style=dotted];
m17_99 -> m17_97  [key=0, style=bold, color=blue];
m17_106 -> m17_107  [key=0, style=solid];
m17_106 -> m17_45  [key=2, style=dotted];
m17_106 -> m17_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_105 -> m17_106  [key=0, style=solid];
m17_107 -> m17_105  [key=0, style=bold, color=blue];
m17_108 -> m17_109  [key=0, style=solid];
m17_109 -> m17_110  [key=0, style=solid];
m17_109 -> m17_111  [key=2, style=dotted];
m17_109 -> m17_50  [key=2, style=dotted];
m17_109 -> m17_112  [key=2, style=dotted];
m17_109 -> m17_101  [key=2, style=dotted];
m17_110 -> m17_108  [key=0, style=bold, color=blue];
m17_117 -> m17_118  [key=0, style=solid];
m17_117 -> m17_45  [key=2, style=dotted];
m17_117 -> m17_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_116 -> m17_117  [key=0, style=solid];
m17_118 -> m17_116  [key=0, style=bold, color=blue];
m17_119 -> m17_120  [key=0, style=solid];
m17_120 -> m17_121  [key=0, style=solid];
m17_120 -> m17_122  [key=2, style=dotted];
m17_120 -> m17_101  [key=2, style=dotted];
m17_121 -> m17_119  [key=0, style=bold, color=blue];
m17_141 -> m17_142  [key=0, style=solid];
m17_145 -> m17_146  [key=0, style=solid];
m17_149 -> m17_150  [key=0, style=solid];
m17_152 -> m17_153  [key=0, style=solid];
m17_156 -> m17_157  [key=0, style=solid];
m17_156 -> m17_158  [key=2, style=dotted];
m17_155 -> m17_156  [key=0, style=solid];
m17_142 -> m17_143  [key=0, style=solid];
m17_142 -> m17_144  [key=2, style=dotted];
m17_143 -> m17_141  [key=0, style=bold, color=blue];
m17_146 -> m17_147  [key=0, style=solid];
m17_146 -> m17_148  [key=2, style=dotted];
m17_147 -> m17_145  [key=0, style=bold, color=blue];
m17_150 -> m17_151  [key=0, style=solid];
m17_151 -> m17_149  [key=0, style=bold, color=blue];
m17_153 -> m17_154  [key=0, style=solid];
m17_154 -> m17_152  [key=0, style=bold, color=blue];
m17_157 -> m17_155  [key=0, style=bold, color=blue];
m17_166 -> m17_167  [key=0, style=solid];
m17_166 -> m17_168  [key=2, style=dotted];
m17_165 -> m17_166  [key=0, style=solid];
m17_167 -> m17_165  [key=0, style=bold, color=blue];
m17_176 -> m17_177  [key=0, style=solid];
m17_176 -> m17_178  [key=2, style=dotted];
m17_175 -> m17_176  [key=0, style=solid];
m17_177 -> m17_175  [key=0, style=bold, color=blue];
m17_182 -> m17_183  [key=0, style=solid];
m17_183 -> m17_184  [key=0, style=solid];
m17_183 -> m17_185  [key=2, style=dotted];
m17_184 -> m17_182  [key=0, style=bold, color=blue];
m17_189 -> m17_190  [key=0, style=solid];
m17_190 -> m17_191  [key=0, style=solid];
m17_190 -> m17_185  [key=2, style=dotted];
m17_191 -> m17_189  [key=0, style=bold, color=blue];
m17_197 -> m17_198  [key=0, style=solid];
m17_197 -> m17_205  [key=2, style=dotted];
m17_197 -> m17_201  [key=1, style=dashed, color=darkseagreen4, label=multi];
m17_197 -> m17_202  [key=1, style=dashed, color=darkseagreen4, label=multi];
m17_195 -> m17_196  [key=0, style=solid, color=green];
m17_195 -> m17_197  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m17_196 -> m17_197  [key=0, style=solid, color=green];
m17_198 -> m17_199  [key=0, style=solid];
m17_198 -> m17_78  [key=2, style=dotted];
m17_198 -> m17_206  [key=2, style=dotted];
m17_198 -> m17_203  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_201 -> m17_202  [key=0, style=solid];
m17_201 -> m17_78  [key=2, style=dotted];
m17_201 -> m17_207  [key=2, style=dotted];
m17_201 -> m17_210  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_201 -> m17_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_201 -> m17_203  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m17_202 -> m17_203  [key=0, style=solid];
m17_202 -> m17_78  [key=2, style=dotted];
m17_202 -> m17_87  [key=2, style=dotted];
m17_202 -> m17_133  [key=2, style=dotted];
m17_202 -> m17_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_199 -> m17_200  [key=0, style=solid];
m17_199 -> m17_201  [key=0, style=solid];
m17_203 -> m17_204  [key=0, style=solid];
m17_203 -> m17_208  [key=2, style=dotted];
m17_203 -> m17_209  [key=2, style=dotted];
m17_200 -> m17_204  [key=0, style=solid];
m17_210 -> m17_211  [key=0, style=solid];
m17_213 -> m17_214  [key=0, style=solid];
m17_216 -> m17_217  [key=0, style=solid];
m17_204 -> m17_195  [key=0, style=bold, color=blue];
m17_211 -> m17_212  [key=0, style=solid];
m17_212 -> m17_210  [key=0, style=bold, color=blue];
m17_214 -> m17_215  [key=0, style=solid];
m17_215 -> m17_213  [key=0, style=bold, color=blue];
m17_217 -> m17_218  [key=0, style=solid];
m17_217 -> m17_219  [key=2, style=dotted];
m17_217 -> m17_220  [key=2, style=dotted];
m17_217 -> m17_78  [key=2, style=dotted];
m17_218 -> m17_216  [key=0, style=bold, color=blue];
m17_224 -> m17_225  [key=0, style=solid];
m17_225 -> m17_226  [key=0, style=solid];
m17_225 -> m17_14  [key=2, style=dotted];
m17_226 -> m17_224  [key=0, style=bold, color=blue];
m17_230 -> m17_231  [key=0, style=solid];
m17_231 -> m17_232  [key=0, style=solid];
m17_231 -> m17_14  [key=2, style=dotted];
m17_232 -> m17_230  [key=0, style=bold, color=blue];
m17_243 -> m17_244  [key=0, style=solid];
m17_243 -> m17_205  [key=2, style=dotted];
m17_243 -> m17_245  [key=1, style=dashed, color=darkseagreen4, label=multi];
m17_243 -> m17_246  [key=1, style=dashed, color=darkseagreen4, label=multi];
m17_243 -> m17_247  [key=1, style=dashed, color=darkseagreen4, label=multi];
m17_243 -> m17_248  [key=1, style=dashed, color=darkseagreen4, label=multi];
m17_243 -> m17_249  [key=1, style=dashed, color=darkseagreen4, label=multi];
m17_243 -> m17_250  [key=1, style=dashed, color=darkseagreen4, label=multi];
m17_243 -> m17_251  [key=1, style=dashed, color=darkseagreen4, label=multi];
m17_241 -> m17_242  [key=0, style=solid];
m17_241 -> m17_243  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m17_256 -> m17_257  [key=0, style=solid];
m17_242 -> m17_243  [key=0, style=solid];
m17_242 -> m17_254  [key=2, style=dotted];
m17_242 -> m17_244  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_242 -> m17_245  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_242 -> m17_246  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_242 -> m17_247  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_242 -> m17_248  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_242 -> m17_249  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_242 -> m17_250  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_242 -> m17_251  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_242 -> m17_252  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_244 -> m17_245  [key=0, style=solid];
m17_244 -> m17_78  [key=2, style=dotted];
m17_244 -> m17_255  [key=2, style=dotted];
m17_245 -> m17_246  [key=0, style=solid];
m17_245 -> m17_78  [key=2, style=dotted];
m17_245 -> m17_255  [key=2, style=dotted];
m17_246 -> m17_247  [key=0, style=solid];
m17_246 -> m17_78  [key=2, style=dotted];
m17_246 -> m17_255  [key=2, style=dotted];
m17_247 -> m17_248  [key=0, style=solid];
m17_247 -> m17_78  [key=2, style=dotted];
m17_247 -> m17_255  [key=2, style=dotted];
m17_248 -> m17_249  [key=0, style=solid];
m17_248 -> m17_78  [key=2, style=dotted];
m17_248 -> m17_255  [key=2, style=dotted];
m17_249 -> m17_250  [key=0, style=solid];
m17_249 -> m17_78  [key=2, style=dotted];
m17_249 -> m17_206  [key=2, style=dotted];
m17_250 -> m17_251  [key=0, style=solid];
m17_250 -> m17_78  [key=2, style=dotted];
m17_250 -> m17_206  [key=2, style=dotted];
m17_251 -> m17_252  [key=0, style=solid];
m17_251 -> m17_78  [key=2, style=dotted];
m17_251 -> m17_255  [key=2, style=dotted];
m17_252 -> m17_253  [key=0, style=solid];
m17_253 -> m17_241  [key=0, style=bold, color=blue];
m17_257 -> m17_258  [key=0, style=solid];
m17_257 -> m17_144  [key=2, style=dotted];
m17_257 -> m17_259  [key=2, style=dotted];
m17_258 -> m17_256  [key=0, style=bold, color=blue];
m17_273 -> m17_274  [key=0, style=solid];
m17_273 -> m17_275  [key=2, style=dotted];
m17_273 -> m17_276  [key=2, style=dotted];
m17_272 -> m17_273  [key=0, style=solid];
m17_277 -> m17_278  [key=0, style=solid];
m17_274 -> m17_272  [key=0, style=bold, color=blue];
m17_278 -> m17_279  [key=0, style=solid];
m17_279 -> m17_277  [key=0, style=bold, color=blue];
m17_292 -> m17_293  [key=0, style=solid];
m17_292 -> m17_275  [key=2, style=dotted];
m17_292 -> m17_276  [key=2, style=dotted];
m17_291 -> m17_292  [key=0, style=solid];
m17_294 -> m17_295  [key=0, style=solid];
m17_293 -> m17_291  [key=0, style=bold, color=blue];
m17_295 -> m17_296  [key=0, style=solid];
m17_296 -> m17_294  [key=0, style=bold, color=blue];
m17_316 -> m17_317  [key=0, style=solid];
m17_319 -> m17_320  [key=0, style=solid];
m17_317 -> m17_318  [key=0, style=solid];
m17_318 -> m17_316  [key=0, style=bold, color=blue];
m17_320 -> m17_321  [key=0, style=solid];
m17_321 -> m17_319  [key=0, style=bold, color=blue];
m17_336 -> m17_337  [key=0, style=solid];
m17_336 -> m17_338  [key=2, style=dotted];
m17_336 -> m17_101  [key=2, style=dotted];
m17_337 -> m17_335  [key=0, style=bold, color=blue];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_20  [key=2, style=dotted];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_21  [key=2, style=dotted];
m17_25 -> m17_26  [key=0, style=solid];
m17_26 -> m17_22  [key=0, style=bold, color=blue];
m17_102 -> m17_103  [key=0, style=solid];
m17_102 -> m17_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_102 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.SucceededJobDto> SucceededJobs"];
m17_103 -> m17_104  [key=0, style=solid];
m17_103 -> m17_10  [key=2, style=dotted];
m17_103 -> m17_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_104 -> m17_102  [key=0, style=bold, color=blue];
m17_178 -> m17_370  [key=0, style=solid, color=green];
m17_178 -> m17_371  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m17_370 -> m17_371  [key=0, style=solid, color=green];
m17_370 -> m17_330  [key=3, color=green, style=bold, label="Local variable string fetchedJobsSql"];
m17_371 -> m17_372  [key=0, style=solid];
m17_371 -> m17_78  [key=2, style=dotted];
m17_371 -> m17_87  [key=2, style=dotted];
m17_371 -> m17_373  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_372 -> m17_373  [key=0, style=solid];
m17_372 -> m17_377  [key=2, style=dotted];
m17_372 -> m17_374  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_372 -> m17_375  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_373 -> m17_374  [key=0, style=solid];
m17_373 -> m17_375  [key=0, style=solid];
m17_374 -> m17_373  [key=0, style=solid];
m17_374 -> m17_378  [key=2, style=dotted];
m17_374 -> m17_379  [key=2, style=dotted];
m17_374 -> m17_380  [key=2, style=dotted];
m17_374 -> m17_209  [key=2, style=dotted];
m17_374 -> m17_90  [key=2, style=dotted];
m17_375 -> m17_376  [key=0, style=solid];
m17_375 -> m17_369  [key=2, style=dotted];
m17_376 -> m17_178  [key=0, style=bold, color=blue];
m17_192 -> m17_193  [key=0, style=solid, color=green];
m17_192 -> m17_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_192 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobDetailsDto JobDetails"];
m17_193 -> m17_194  [key=0, style=solid, color=green];
m17_193 -> m17_10  [key=2, style=dotted, color=green];
m17_193 -> m17_195  [key=1, style=dashed, color=green, label="lambda expression"];
m17_193 -> m17_193  [key=3, color=green, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobDetailsDto "];
m17_194 -> m17_192  [key=0, style=bold, color=blue];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long ScheduledCount"];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [key=2, style=dotted];
m17_8 -> m17_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_9 -> m17_7  [key=0, style=bold, color=blue];
m17_168 -> m17_330  [key=0, style=solid, color=green];
m17_168 -> m17_331  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m17_330 -> m17_331  [key=0, style=solid, color=green];
m17_330 -> m17_330  [key=3, color=green, style=bold, label="Local variable string enqueuedJobsSql"];
m17_331 -> m17_332  [key=0, style=solid];
m17_331 -> m17_78  [key=2, style=dotted];
m17_331 -> m17_87  [key=2, style=dotted];
m17_332 -> m17_333  [key=0, style=solid];
m17_332 -> m17_334  [key=2, style=dotted];
m17_332 -> m17_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_333 -> m17_168  [key=0, style=bold, color=blue];
m17_221 -> m17_222  [key=0, style=solid];
m17_221 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long SucceededListCount"];
m17_222 -> m17_223  [key=0, style=solid];
m17_222 -> m17_10  [key=2, style=dotted];
m17_222 -> m17_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_223 -> m17_221  [key=0, style=bold, color=blue];
m17_91 -> m17_92  [key=0, style=solid];
m17_91 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_91 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.FailedJobDto> FailedJobs"];
m17_92 -> m17_93  [key=0, style=solid];
m17_92 -> m17_10  [key=2, style=dotted];
m17_92 -> m17_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_93 -> m17_91  [key=0, style=bold, color=blue];
m17_343 -> m17_344  [key=0, style=solid];
m17_343 -> m17_345  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_343 -> m17_193  [key=3, color=green, style=bold, label="method methodReturn Hangfire.Common.Job DeserializeJob"];
m17_344 -> m17_345  [key=0, style=solid];
m17_344 -> m17_350  [key=2, style=dotted];
m17_344 -> m17_346  [key=1, style=dashed, color=darkseagreen4, label=data];
m17_345 -> m17_346  [key=0, style=solid];
m17_346 -> m17_349  [key=0, style=solid];
m17_346 -> m17_351  [key=2, style=dotted];
m17_347 -> m17_348  [key=0, style=solid];
m17_348 -> m17_349  [key=0, style=solid];
m17_349 -> m17_343  [key=0, style=bold, color=blue];
m17_75 -> m17_76  [key=0, style=solid, color=green];
m17_76 -> m17_77  [key=0, style=solid, color=green];
m17_76 -> m17_78  [key=2, style=dotted, color=green];
m17_76 -> m17_79  [key=1, style=dashed, color=green, label="lambda expression"];
m17_76 -> m17_76  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.ServerDto> "];
m17_77 -> m17_75  [key=0, style=bold, color=blue];
m17_20 -> m17_322  [key=0, style=solid];
m17_20 -> m17_15  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m17_20 -> m17_22  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m17_20 -> m17_159  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m17_20 -> m17_169  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m17_20 -> m17_323  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.SqlServer.IPersistentJobQueueMonitoringApi GetQueueApi"];
m17_322 -> m17_323  [key=0, style=solid];
m17_322 -> m17_326  [key=2, style=dotted];
m17_323 -> m17_324  [key=0, style=solid];
m17_323 -> m17_144  [key=2, style=dotted];
m17_324 -> m17_325  [key=0, style=solid];
m17_325 -> m17_20  [key=0, style=bold, color=blue];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_43  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_39 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs"];
m17_40 -> m17_41  [key=0, style=solid];
m17_40 -> m17_10  [key=2, style=dotted];
m17_40 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_41 -> m17_39  [key=0, style=bold, color=blue];
m17_52 -> m17_53  [key=0, style=solid];
m17_52 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_52 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.ScheduledJobDto> ScheduledJobs"];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_10  [key=2, style=dotted];
m17_53 -> m17_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_54 -> m17_52  [key=0, style=bold, color=blue];
m17_69 -> m17_70  [key=0, style=solid];
m17_69 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount"];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_10  [key=2, style=dotted];
m17_70 -> m17_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_71 -> m17_69  [key=0, style=bold, color=blue];
m17_179 -> m17_180  [key=0, style=solid];
m17_179 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m17_180 -> m17_181  [key=0, style=solid];
m17_180 -> m17_10  [key=2, style=dotted];
m17_180 -> m17_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_181 -> m17_179  [key=0, style=bold, color=blue];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_20  [key=2, style=dotted];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_21  [key=2, style=dotted];
m17_18 -> m17_19  [key=0, style=solid];
m17_19 -> m17_15  [key=0, style=bold, color=blue];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_10  [key=2, style=dotted];
m17_63 -> m17_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_64 -> m17_62  [key=0, style=bold, color=blue];
m17_68 -> m17_280  [key=0, style=solid];
m17_68 -> m17_287  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_68 -> m17_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_68 -> m17_288  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m17_280 -> m17_281  [key=0, style=solid];
m17_280 -> m17_284  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_280 -> m17_285  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_287 -> m17_288  [key=0, style=solid];
m17_287 -> m17_207  [key=2, style=dotted];
m17_287 -> m17_291  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_287 -> m17_294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_288 -> m17_289  [key=0, style=solid];
m17_288 -> m17_271  [key=2, style=dotted];
m17_281 -> m17_282  [key=0, style=solid];
m17_281 -> n6  [key=2, style=dotted];
m17_281 -> m17_284  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_281 -> m17_287  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_284 -> m17_285  [key=0, style=solid];
m17_284 -> m17_90  [key=2, style=dotted];
m17_285 -> m17_286  [key=0, style=solid];
m17_285 -> m17_290  [key=2, style=dotted];
m17_285 -> m17_285  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_282 -> m17_283  [key=0, style=solid];
m17_282 -> m17_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_282 -> m17_262  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m17_283 -> m17_284  [key=0, style=solid];
m17_283 -> m17_287  [key=0, style=solid];
m17_286 -> m17_283  [key=0, style=solid];
m17_286 -> m17_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_289 -> m17_68  [key=0, style=bold, color=blue];
m17_297 -> m17_298  [key=0, style=solid, color=green];
m17_297 -> m17_299  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m17_297 -> m17_300  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m17_297 -> m17_305  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m17_297 -> m17_306  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m17_297 -> m17_307  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m17_297 -> m17_303  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m17_298 -> m17_299  [key=0, style=solid, color=green];
m17_298 -> m17_298  [key=3, color=green, style=bold, label="Local variable string sqlQuery"];
m17_299 -> m17_300  [key=0, style=solid];
m17_299 -> m17_311  [key=2, style=dotted];
m17_299 -> m17_207  [key=2, style=dotted];
m17_299 -> m17_316  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_299 -> m17_319  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_299 -> m17_301  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m17_299 -> m17_302  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m17_299 -> m17_306  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m17_300 -> m17_301  [key=0, style=solid];
m17_300 -> m17_303  [key=0, style=solid];
m17_300 -> m17_302  [key=1, style=dashed, color=darkseagreen4, label=key];
m17_305 -> m17_306  [key=0, style=solid];
m17_305 -> m17_309  [key=0, style=solid];
m17_305 -> m17_262  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m17_306 -> m17_307  [key=0, style=solid];
m17_306 -> m17_315  [key=2, style=dotted];
m17_307 -> m17_308  [key=0, style=solid];
m17_307 -> m17_315  [key=2, style=dotted];
m17_307 -> m17_313  [key=2, style=dotted];
m17_301 -> m17_302  [key=0, style=solid];
m17_301 -> m17_300  [key=0, style=solid];
m17_301 -> m17_312  [key=2, style=dotted];
m17_302 -> m17_300  [key=0, style=solid];
m17_302 -> m17_313  [key=2, style=dotted];
m17_303 -> m17_304  [key=0, style=solid];
m17_303 -> m17_314  [key=2, style=dotted];
m17_303 -> m17_307  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_303 -> m17_309  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_304 -> m17_305  [key=0, style=solid];
m17_304 -> m17_306  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_304 -> m17_307  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_304 -> m17_308  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_309 -> m17_310  [key=0, style=solid];
m17_308 -> m17_305  [key=0, style=solid];
m17_308 -> m17_308  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_310 -> m17_297  [key=0, style=bold, color=blue];
m17_159 -> m17_160  [key=0, style=solid];
m17_159 -> m17_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_159 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.EnqueuedJobDto> EnqueuedJobs"];
m17_160 -> m17_161  [key=0, style=solid];
m17_160 -> m17_20  [key=2, style=dotted];
m17_161 -> m17_162  [key=0, style=solid];
m17_161 -> m17_164  [key=2, style=dotted];
m17_161 -> m17_166  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m17_162 -> m17_163  [key=0, style=solid];
m17_162 -> m17_10  [key=2, style=dotted];
m17_162 -> m17_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_163 -> m17_159  [key=0, style=bold, color=blue];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long ProcessingCount"];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_10  [key=2, style=dotted];
m17_34 -> m17_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_35 -> m17_33  [key=0, style=bold, color=blue];
m17_381 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_76  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_193  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_222  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_231  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_268  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_288  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_322  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_327  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_332  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_339  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_354  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_381 -> m17_374  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m17_382 -> m17_43  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_383 -> m17_43  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_384 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_385 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_386 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_387 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_388 -> m17_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_389 -> m17_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_390 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_391 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_392 -> m17_156  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m17_393 -> m17_166  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m17_394 -> m17_176  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m17_395 -> m17_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_396 -> m17_243  [key=1, style=dashed, color=darkseagreen4, label=sql];
m17_397 -> m17_273  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_398 -> m17_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_18 -> m18_19  [key=0, style=solid];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_6  [key=3, color=darkorchid, style=bold, label="Parameter variable string resourceName"];
m18_22 -> m18_31  [key=0, style=solid];
m18_22 -> m18_33  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_25  [key=2, style=dotted];
m18_24 -> m18_22  [key=0, style=bold, color=blue];
m18_20 -> m18_0  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m18_20 -> m18_26  [key=0, style=solid];
m18_20 -> m18_18  [key=0, style=bold, color=blue];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> n10  [key=2, style=dotted];
m18_26 -> m18_30  [key=2, style=dotted];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_29  [key=2, style=dotted];
m18_28 -> m18_20  [key=0, style=bold, color=blue];
m18_28 -> m18_26  [key=0, style=bold, color=blue];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_30  [key=2, style=dotted];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_22  [key=0, style=bold, color=blue];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_43  [key=2, style=dotted];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_22  [key=2, style=dotted];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_44  [key=2, style=dotted];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_26  [key=2, style=dotted];
m18_42 -> m18_36  [key=0, style=bold, color=blue];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_41  [key=2, style=dotted];
m18_0 -> m18_1  [key=0, style=solid, color=green];
m18_0 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m18_0 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m18_1 -> m18_2  [key=0, style=solid, color=green];
m18_1 -> m18_5  [key=2, style=dotted];
m18_1 -> m18_3  [key=0, style=solid, color=green];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_6  [key=2, style=dotted];
m18_2 -> m18_7  [key=2, style=dotted];
m18_2 -> m18_17  [key=0, style=solid, color=green];
m18_2 -> m18_18  [key=2, style=dotted, color=green];
m18_3 -> m18_4  [key=0, style=solid, color=green];
m18_3 -> m18_8  [key=2, style=dotted];
m18_3 -> m18_19  [key=2, style=dotted, color=green];
m18_4 -> m18_0  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_6  [key=0, style=solid];
m18_4 -> m18_20  [key=2, style=dotted];
m18_5 -> m18_17  [key=0, style=solid];
m18_5 -> m18_21  [key=2, style=dotted];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_21  [key=2, style=dotted];
m18_13 -> m18_15  [key=0, style=solid];
m18_13 -> m18_25  [key=2, style=dotted];
m18_7 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label=script];
m18_7 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label=script];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_23  [key=2, style=dotted];
m18_59 -> m18_60  [key=0, style=solid];
m18_60 -> m18_61  [key=0, style=solid];
m18_60 -> m18_43  [key=2, style=dotted];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_22  [key=2, style=dotted];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_30  [key=2, style=dotted];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_67  [key=2, style=dotted];
m18_64 -> m18_65  [key=0, style=solid];
m18_64 -> m18_44  [key=2, style=dotted];
m18_65 -> m18_66  [key=0, style=solid];
m18_65 -> m18_26  [key=2, style=dotted];
m18_66 -> m18_59  [key=0, style=bold, color=blue];
m18_10 -> m18_16  [key=0, style=solid];
m18_10 -> m18_24  [key=2, style=dotted];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_13  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_19  [key=2, style=dotted];
m18_16 -> m18_0  [key=2, style=dotted];
m18_14 -> m18_17  [key=0, style=solid];
m18_14 -> m18_15  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_22  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_16  [key=0, style=solid];
m18_12 -> m18_14  [key=0, style=solid];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_9  [key=0, style=bold, color=blue];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m18_8 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_15 -> m18_9  [key=0, style=solid];
m18_15 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_17  [key=0, style=solid];
m18_11 -> m18_12  [key=0, style=solid];
m18_17 -> m18_0  [key=0, style=bold, color=blue];
m18_17 -> m18_14  [key=0, style=bold, color=blue];
m18_68 -> m18_69  [key=0, style=solid];
m18_69 -> m18_70  [key=0, style=solid];
m18_69 -> m18_43  [key=2, style=dotted];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_22  [key=2, style=dotted];
m18_71 -> m18_72  [key=0, style=solid];
m18_71 -> m18_30  [key=2, style=dotted];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_67  [key=2, style=dotted];
m18_73 -> m18_74  [key=0, style=solid];
m18_73 -> m18_35  [key=2, style=dotted];
m18_74 -> m18_75  [key=0, style=solid];
m18_74 -> m18_44  [key=2, style=dotted];
m18_75 -> m18_76  [key=0, style=solid];
m18_75 -> m18_26  [key=2, style=dotted];
m18_76 -> m18_68  [key=0, style=bold, color=blue];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_37  [key=2, style=dotted];
m18_31 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label=stream];
m18_33 -> m18_36  [key=0, style=solid];
m18_33 -> m18_38  [key=2, style=dotted];
m18_33 -> m18_39  [key=2, style=dotted];
m18_33 -> m18_30  [key=0, style=bold, color=blue];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_34  [key=0, style=solid];
m18_32 -> m18_35  [key=2, style=dotted];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_40  [key=2, style=dotted];
m18_45 -> m18_46  [key=0, style=solid];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_43  [key=2, style=dotted];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_22  [key=2, style=dotted];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_30  [key=2, style=dotted];
m18_49 -> m18_50  [key=0, style=solid];
m18_49 -> m18_57  [key=2, style=dotted];
m18_49 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label=table1];
m18_49 -> m18_52  [key=1, style=dashed, color=darkseagreen4, label=table1];
m18_49 -> m18_53  [key=1, style=dashed, color=darkseagreen4, label=table1];
m18_49 -> m18_54  [key=1, style=dashed, color=darkseagreen4, label=table1];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_58  [key=2, style=dotted];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_58  [key=2, style=dotted];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_58  [key=2, style=dotted];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_58  [key=2, style=dotted];
m18_54 -> m18_55  [key=0, style=solid];
m18_54 -> m18_44  [key=2, style=dotted];
m18_55 -> m18_56  [key=0, style=solid];
m18_55 -> m18_26  [key=2, style=dotted];
m18_56 -> m18_45  [key=0, style=bold, color=blue];
m18_30 -> m18_31  [key=0, style=solid];
m18_77 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m18_77 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label=enqueuedState];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_19  [key=2, style=dotted];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_15  [key=0, style=solid];
m20_14 -> m20_16  [key=0, style=solid];
m20_14 -> m20_17  [key=2, style=dotted];
m20_14 -> m20_18  [key=2, style=dotted];
m20_16 -> m20_11  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m20_20 -> m20_21  [key=0, style=solid];
m20_21 -> m20_20  [key=0, style=bold, color=blue];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_3 -> m20_4  [key=0, style=solid];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_2  [key=0, style=bold, color=blue];
m20_6 -> m20_7  [key=0, style=solid];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_9  [key=2, style=dotted];
m20_7 -> m20_10  [key=2, style=dotted];
m20_8 -> m20_6  [key=0, style=bold, color=blue];
m20_22 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m20_22 -> m20_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m20_22 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobActivator"];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_4 -> m21_6  [key=0, style=solid];
m21_4 -> m21_7  [key=2, style=dotted];
m21_6 -> m21_2  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [key=0, style=bold, color=blue];
m21_36 -> m21_40  [key=0, style=solid, color=red];
m21_40 -> m21_41  [key=0, style=solid, color=red];
m21_40 -> m21_42  [key=2, style=dotted, color=red];
m21_40 -> m21_43  [key=2, style=dotted, color=red];
m21_41 -> m21_36  [key=0, style=bold, color=blue];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_10  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m21_8 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_11  [key=0, style=solid];
m21_10 -> m21_11  [key=0, style=solid];
m21_11 -> m21_8  [key=0, style=bold, color=blue];
m21_38 -> m21_10  [key=3, color=darkorchid, style=bold, label="Field variable System.Func<Hangfire.Common.Job, System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>> _getFiltersThunk"];
m21_39 -> m21_97  [key=0, style=solid, color=red];
m21_39 -> m21_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerExceptionContext"];
m21_97 -> m21_98  [key=0, style=solid, color=red];
m21_97 -> m21_99  [key=0, style=solid, color=red];
m21_97 -> m21_52  [key=2, style=dotted, color=red];
m21_98 -> m21_97  [key=0, style=solid, color=red];
m21_98 -> m21_100  [key=2, style=dotted];
m21_99 -> m21_39  [key=0, style=bold, color=blue];
m21_63 -> m21_64  [key=0, style=solid];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_15  [key=2, style=dotted];
m21_13 -> m21_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_12 -> m21_13  [key=0, style=solid];
m21_14 -> m21_12  [key=0, style=bold, color=blue];
m21_16 -> m21_17  [key=0, style=solid];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_19  [key=2, style=dotted];
m21_18 -> m21_16  [key=0, style=bold, color=blue];
m21_56 -> m21_57  [key=0, style=solid];
m21_56 -> m21_59  [key=2, style=dotted];
m21_56 -> m21_46  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_56 -> m21_49  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_56 -> m21_58  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_57 -> m21_58  [key=0, style=solid];
m21_57 -> m21_60  [key=2, style=dotted];
m21_64 -> m21_65  [key=0, style=solid];
m21_64 -> m21_66  [key=2, style=dotted];
m21_61 -> m21_62  [key=0, style=solid];
m21_61 -> m21_47  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m21_61 -> m21_64  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m21_55 -> m21_56  [key=0, style=solid];
m21_58 -> m21_55  [key=0, style=bold, color=blue];
m21_62 -> m21_61  [key=0, style=bold, color=blue];
m21_65 -> m21_63  [key=0, style=bold, color=blue];
m21_66 -> m21_67  [key=0, style=solid];
m21_66 -> m21_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m21_66 -> m21_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m21_66 -> m21_76  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m21_66 -> m21_79  [key=1, style=dashed, color=red, label="Hangfire.Server.PerformingContext"];
m21_66 -> m21_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerFilter"];
m21_66 -> m21_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerFilter"];
m21_66 -> m21_75  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Server.PerformedContext InvokePerformFilter"];
m21_67 -> m21_68  [key=0, style=solid];
m21_67 -> m21_70  [key=0, style=solid];
m21_67 -> m21_72  [key=0, style=solid];
m21_67 -> m21_93  [key=2, style=dotted];
m21_72 -> m21_73  [key=0, style=solid];
m21_72 -> m21_74  [key=0, style=solid];
m21_73 -> m21_92  [key=0, style=solid];
m21_73 -> m21_60  [key=2, style=dotted];
m21_76 -> m21_77  [key=0, style=solid];
m21_76 -> m21_85  [key=0, style=solid];
m21_76 -> m21_95  [key=2, style=dotted];
m21_79 -> m21_80  [key=0, style=solid, color=red];
m21_79 -> m21_60  [key=2, style=dotted, color=red];
m21_79 -> m21_83  [key=1, style=dashed, color=red, label=postContext];
m21_79 -> m21_86  [key=1, style=dashed, color=red, label=postContext];
m21_79 -> m21_91  [key=1, style=dashed, color=red, label=postContext];
m21_80 -> m21_81  [key=0, style=solid, color=red];
m21_80 -> m21_83  [key=0, style=solid];
m21_80 -> m21_96  [key=2, style=dotted];
m21_86 -> m21_87  [key=0, style=solid];
m21_86 -> m21_89  [key=0, style=solid];
m21_86 -> m21_91  [key=0, style=solid];
m21_86 -> m21_96  [key=2, style=dotted];
m21_68 -> m21_69  [key=0, style=solid];
m21_70 -> m21_71  [key=0, style=solid];
m21_69 -> m21_92  [key=0, style=solid];
m21_71 -> m21_92  [key=0, style=solid];
m21_71 -> m21_94  [key=2, style=dotted];
m21_74 -> m21_75  [key=0, style=solid];
m21_74 -> m21_74  [key=3, color=darkorchid, style=bold, label="Local variable bool wasError"];
m21_75 -> m21_76  [key=0, style=solid];
m21_77 -> m21_78  [key=0, style=solid];
m21_85 -> m21_86  [key=0, style=solid];
m21_85 -> m21_91  [key=0, style=solid];
m21_78 -> m21_79  [key=0, style=solid, color=red];
m21_78 -> m21_85  [key=1, style=dashed, color=darkseagreen4, label=wasError];
m21_83 -> m21_84  [key=0, style=solid];
m21_83 -> m21_85  [key=0, style=solid];
m21_91 -> m21_92  [key=0, style=solid];
m21_81 -> m21_82  [key=0, style=solid, color=red];
m21_82 -> m21_92  [key=0, style=solid];
m21_82 -> m21_94  [key=2, style=dotted];
m21_84 -> m21_92  [key=0, style=solid];
m21_87 -> m21_88  [key=0, style=solid];
m21_89 -> m21_90  [key=0, style=solid, color=red];
m21_88 -> m21_92  [key=0, style=solid];
m21_90 -> m21_92  [key=0, style=solid, color=red];
m21_90 -> m21_94  [key=2, style=dotted, color=red];
m21_92 -> m21_66  [key=0, style=bold, color=blue];
m21_20 -> m21_21  [key=0, style=solid];
m21_20 -> m21_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IJobPerformer"];
m21_20 -> m21_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m21_20 -> m21_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m21_20 -> m21_30  [key=1, style=dashed, color=red, label="Hangfire.Server.PerformContext"];
m21_20 -> m21_37  [key=3, color=darkorchid, style=bold, label="method methodReturn object Run"];
m21_20 -> m21_34  [key=3, color=darkorchid, style=bold, label="method methodReturn object Run"];
m21_21 -> m21_22  [key=0, style=solid];
m21_21 -> m21_23  [key=0, style=solid];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_25  [key=0, style=solid];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_36  [key=2, style=dotted];
m21_25 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m21_26 -> m21_35  [key=0, style=solid];
m21_26 -> m21_37  [key=2, style=dotted];
m21_30 -> m21_31  [key=0, style=solid, color=red];
m21_30 -> m21_38  [key=2, style=dotted, color=red];
m21_30 -> m21_32  [key=1, style=dashed, color=red, label=exceptionContext];
m21_22 -> m21_35  [key=0, style=solid];
m21_22 -> m21_7  [key=2, style=dotted];
m21_24 -> m21_35  [key=0, style=solid];
m21_24 -> m21_7  [key=2, style=dotted];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_39  [key=2, style=dotted];
m21_27 -> m21_28  [key=0, style=solid];
m21_28 -> m21_35  [key=0, style=solid];
m21_29 -> m21_30  [key=0, style=solid, color=red];
m21_32 -> m21_33  [key=0, style=solid];
m21_32 -> m21_34  [key=0, style=solid];
m21_33 -> m21_35  [key=0, style=solid];
m21_34 -> m21_35  [key=0, style=solid];
m21_35 -> m21_20  [key=0, style=bold, color=blue];
m21_37 -> m21_44  [key=0, style=solid];
m21_37 -> m21_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m21_37 -> m21_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m21_37 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m21_37 -> m21_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m21_37 -> m21_47  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>"];
m21_44 -> m21_45  [key=0, style=solid];
m21_44 -> m21_46  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_44 -> m21_34  [key=3, color=darkorchid, style=bold, label="Local variable object result"];
m21_45 -> m21_46  [key=0, style=solid];
m21_45 -> m21_51  [key=2, style=dotted];
m21_45 -> m21_47  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m21_45 -> m21_64  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_46  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<Hangfire.Server.PerformedContext> continuation"];
m21_47 -> m21_48  [key=0, style=solid, color=red];
m21_47 -> m21_52  [key=2, style=dotted];
m21_47 -> m21_53  [key=2, style=dotted];
m21_47 -> m21_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_48 -> m21_49  [key=0, style=solid, color=red];
m21_48 -> m21_54  [key=2, style=dotted, color=red];
m21_49 -> m21_50  [key=0, style=solid];
m21_50 -> m21_37  [key=0, style=bold, color=blue];
m21_101 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m21_101 -> m21_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m21_101 -> m21_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m21_101 -> m21_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m21_101 -> m21_40  [key=1, style=dashed, color=red, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m21_101 -> m21_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m21_101 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m21_102 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m21_103 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m21_103 -> m21_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m21_104 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IJobPerformer"];
m21_105 -> m21_64  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m21_106 -> m21_64  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m21_107 -> m21_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerFilter"];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m22_10 -> m22_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_13  [key=0, style=solid];
m22_13 -> m22_14  [key=0, style=solid];
m22_13 -> m22_13  [key=3, color=darkorchid, style=bold, label="Field variable string StateName"];
m22_12 -> m22_14  [key=0, style=solid];
m22_12 -> m22_8  [key=2, style=dotted];
m22_14 -> m22_10  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>"];
m22_0 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m22_0 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>"];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_3  [key=0, style=solid];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_5  [key=0, style=solid];
m22_5 -> m22_6  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_9  [key=2, style=dotted];
m22_2 -> m22_7  [key=0, style=solid];
m22_2 -> m22_8  [key=2, style=dotted];
m22_4 -> m22_7  [key=0, style=solid];
m22_4 -> m22_8  [key=2, style=dotted];
m22_7 -> m22_0  [key=0, style=bold, color=blue];
m22_77 -> m22_91  [key=0, style=solid];
m22_91 -> m22_92  [key=0, style=solid];
m22_91 -> m22_93  [key=2, style=dotted];
m22_91 -> m22_94  [key=2, style=dotted];
m22_92 -> m22_77  [key=0, style=bold, color=blue];
m22_78 -> m22_81  [key=0, style=solid];
m22_78 -> m22_82  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>"];
m22_81 -> m22_82  [key=0, style=solid, color=red];
m22_81 -> m22_84  [key=2, style=dotted];
m22_82 -> m22_83  [key=0, style=solid, color=red];
m22_82 -> m22_85  [key=2, style=dotted, color=red];
m22_83 -> m22_78  [key=0, style=bold, color=blue];
m22_38 -> m22_68  [key=0, style=solid];
m22_38 -> m22_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateContext"];
m22_38 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateContext"];
m22_38 -> m22_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateContext"];
m22_68 -> m22_69  [key=0, style=solid];
m22_68 -> m22_77  [key=2, style=dotted];
m22_68 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m22_69 -> m22_70  [key=0, style=solid];
m22_69 -> m22_78  [key=2, style=dotted];
m22_70 -> m22_71  [key=0, style=solid];
m22_70 -> m22_79  [key=2, style=dotted];
m22_74 -> m22_75  [key=0, style=solid];
m22_74 -> m22_80  [key=2, style=dotted];
m22_74 -> m22_79  [key=2, style=dotted];
m22_71 -> m22_76  [key=0, style=solid];
m22_72 -> m22_73  [key=0, style=solid];
m22_73 -> m22_74  [key=0, style=solid];
m22_73 -> m22_66  [key=2, style=dotted];
m22_75 -> m22_76  [key=0, style=solid];
m22_76 -> m22_38  [key=0, style=bold, color=blue];
m22_19 -> m22_20  [key=0, style=solid];
m22_16 -> m22_17  [key=0, style=solid];
m22_16 -> m22_18  [key=2, style=dotted];
m22_16 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_15 -> m22_16  [key=0, style=solid];
m22_17 -> m22_15  [key=0, style=bold, color=blue];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_22  [key=2, style=dotted];
m22_21 -> m22_19  [key=0, style=bold, color=blue];
m22_79 -> m22_86  [key=0, style=solid];
m22_79 -> m22_87  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>"];
m22_86 -> m22_87  [key=0, style=solid];
m22_86 -> m22_89  [key=2, style=dotted];
m22_87 -> m22_88  [key=0, style=solid];
m22_87 -> m22_90  [key=2, style=dotted];
m22_88 -> m22_79  [key=0, style=bold, color=blue];
m22_9 -> m22_95  [key=0, style=solid];
m22_9 -> m22_96  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>"];
m22_95 -> m22_96  [key=0, style=solid];
m22_95 -> m22_100  [key=2, style=dotted];
m22_95 -> m22_97  [key=1, style=dashed, color=darkseagreen4, label=handlerCollection];
m22_95 -> m22_98  [key=1, style=dashed, color=darkseagreen4, label=handlerCollection];
m22_96 -> m22_97  [key=0, style=solid];
m22_96 -> m22_98  [key=0, style=solid];
m22_97 -> m22_96  [key=0, style=solid];
m22_97 -> m22_101  [key=2, style=dotted];
m22_98 -> m22_99  [key=0, style=solid];
m22_99 -> m22_9  [key=0, style=bold, color=blue];
m22_23 -> m22_24  [key=0, style=solid];
m22_23 -> m22_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m22_23 -> m22_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m22_23 -> m22_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m22_23 -> m22_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m22_23 -> m22_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m22_24 -> m22_25  [key=0, style=solid];
m22_24 -> m22_26  [key=0, style=solid];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_28  [key=0, style=solid];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_30  [key=0, style=solid];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_35  [key=2, style=dotted];
m22_30 -> m22_36  [key=2, style=dotted];
m22_30 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m22_31 -> m22_32  [key=0, style=solid];
m22_31 -> m22_37  [key=2, style=dotted];
m22_32 -> m22_33  [key=0, style=solid];
m22_32 -> m22_38  [key=2, style=dotted];
m22_25 -> m22_34  [key=0, style=solid];
m22_25 -> m22_8  [key=2, style=dotted];
m22_27 -> m22_34  [key=0, style=solid];
m22_27 -> m22_8  [key=2, style=dotted];
m22_29 -> m22_34  [key=0, style=solid];
m22_29 -> m22_8  [key=2, style=dotted];
m22_33 -> m22_34  [key=0, style=solid];
m22_34 -> m22_23  [key=0, style=bold, color=blue];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m22_39 -> m22_44  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m22_39 -> m22_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_39 -> m22_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_39 -> m22_51  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m22_39 -> m22_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_39 -> m22_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_42  [key=0, style=solid];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_44  [key=0, style=solid];
m22_44 -> m22_45  [key=0, style=solid];
m22_44 -> m22_46  [key=0, style=solid];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_62  [key=2, style=dotted];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_63  [key=2, style=dotted];
m22_48 -> m22_51  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m22_48 -> m22_53  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m22_48 -> m22_58  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m22_48 -> m22_59  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m22_51 -> m22_52  [key=0, style=solid];
m22_51 -> m22_53  [key=0, style=solid];
m22_51 -> m22_64  [key=2, style=dotted];
m22_51 -> m22_51  [key=3, color=darkorchid, style=bold, label="Property variable bool IsFinal"];
m22_56 -> m22_57  [key=0, style=solid];
m22_56 -> m22_66  [key=2, style=dotted];
m22_56 -> m22_67  [key=2, style=dotted];
m22_56 -> m22_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m22_56 -> m22_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m22_58 -> m22_59  [key=0, style=solid];
m22_58 -> m22_37  [key=2, style=dotted];
m22_41 -> m22_61  [key=0, style=solid];
m22_41 -> m22_8  [key=2, style=dotted];
m22_43 -> m22_61  [key=0, style=solid];
m22_43 -> m22_8  [key=2, style=dotted];
m22_45 -> m22_61  [key=0, style=solid];
m22_45 -> m22_8  [key=2, style=dotted];
m22_47 -> m22_48  [key=0, style=solid];
m22_47 -> m22_13  [key=3, color=darkorchid, style=bold, label="Property variable string Name"];
m22_49 -> m22_50  [key=0, style=solid];
m22_49 -> m22_51  [key=0, style=solid];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_65  [key=2, style=dotted];
m22_59 -> m22_60  [key=0, style=solid];
m22_59 -> m22_38  [key=2, style=dotted];
m22_50 -> m22_61  [key=0, style=solid];
m22_52 -> m22_61  [key=0, style=solid];
m22_54 -> m22_55  [key=0, style=solid];
m22_54 -> m22_58  [key=0, style=solid];
m22_55 -> m22_56  [key=0, style=solid];
m22_57 -> m22_58  [key=0, style=solid];
m22_57 -> m22_60  [key=1, style=dashed, color=darkseagreen4, label=loadSucceeded];
m22_60 -> m22_61  [key=0, style=solid];
m22_61 -> m22_39  [key=0, style=bold, color=blue];
m22_102 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_102 -> m22_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m22_103 -> m22_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m23_23 -> m23_19  [key=0, style=bold, color=blue];
m23_20 -> m23_24  [key=2, style=dotted];
m23_20 -> m23_21  [key=0, style=solid];
m23_21 -> m23_17  [key=2, style=dotted];
m23_21 -> m23_22  [key=0, style=solid];
m23_19 -> m23_20  [key=0, style=solid];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_25  [key=2, style=dotted];
m23_22 -> m23_26  [key=2, style=dotted];
m23_12 -> m23_13  [key=0, style=solid];
m23_12 -> n75  [key=2, style=dotted];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> n75  [key=2, style=dotted];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_10  [key=2, style=dotted];
m23_1 -> n75  [key=2, style=dotted];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_10  [key=2, style=dotted];
m23_2 -> m23_0  [key=0, style=bold, color=blue];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_11  [key=2, style=dotted];
m23_3 -> m23_12  [key=2, style=dotted];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_10  [key=2, style=dotted];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_12  [key=2, style=dotted];
m23_5 -> m23_8  [key=2, style=dotted];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_10  [key=2, style=dotted];
m23_6 -> n75  [key=2, style=dotted];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_13  [key=2, style=dotted];
m23_7 -> m23_14  [key=2, style=dotted];
m23_7 -> m23_15  [key=2, style=dotted];
m23_7 -> m23_4  [key=0, style=bold, color=blue];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_10  [key=2, style=dotted];
m23_8 -> m23_44  [key=0, style=solid];
m23_9 -> m23_0  [key=0, style=bold, color=blue];
m23_9 -> m23_10  [key=0, style=solid];
m23_44 -> m23_24  [key=2, style=dotted];
m23_44 -> m23_45  [key=0, style=solid];
m23_45 -> m23_8  [key=0, style=bold, color=blue];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_8  [key=2, style=dotted];
m23_10 -> m23_13  [key=1, style=dashed, color=darkseagreen4, label=state];
m23_11 -> m23_17  [key=2, style=dotted];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_13  [key=1, style=dashed, color=darkseagreen4, label=data];
m23_11 -> m23_14  [key=1, style=dashed, color=darkseagreen4, label=data];
m23_11 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label=data];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_18  [key=2, style=dotted];
m23_13 -> n75  [key=2, style=dotted];
m23_15 -> m23_16  [key=0, style=solid];
m23_15 -> n75  [key=2, style=dotted];
m23_16 -> m23_9  [key=0, style=bold, color=blue];
m23_16 -> m23_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ErrorPage"];
m23_16 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ErrorPage"];
m23_16 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ErrorPage"];
m23_16 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ErrorPage"];
m23_16 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ErrorPage"];
m23_16 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ErrorPage"];
m23_16 -> m23_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ErrorPage"];
m23_16 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ErrorPage"];
m23_40 -> m23_41  [key=0, style=solid];
m23_41 -> m23_8  [key=2, style=dotted];
m23_41 -> m23_42  [key=0, style=solid];
m23_42 -> m23_26  [key=2, style=dotted];
m23_42 -> m23_43  [key=0, style=solid];
m23_43 -> m23_40  [key=0, style=bold, color=blue];
m23_27 -> m23_28  [key=0, style=solid, color=green];
m23_28 -> m23_29  [key=0, style=solid, color=green];
m23_28 -> m23_33  [key=2, style=dotted, color=green];
m23_29 -> m23_30  [key=0, style=solid, color=green];
m23_29 -> m23_24  [key=2, style=dotted, color=green];
m23_30 -> m23_31  [key=0, style=solid, color=green];
m23_30 -> m23_17  [key=2, style=dotted, color=green];
m23_31 -> m23_32  [key=0, style=solid, color=green];
m23_31 -> m23_34  [key=2, style=dotted, color=green];
m23_32 -> m23_27  [key=0, style=bold, color=blue];
m23_35 -> m23_36  [key=0, style=solid];
m23_36 -> m23_8  [key=2, style=dotted];
m23_36 -> m23_37  [key=0, style=solid];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_39  [key=2, style=dotted];
m23_38 -> m23_35  [key=0, style=bold, color=blue];
}
