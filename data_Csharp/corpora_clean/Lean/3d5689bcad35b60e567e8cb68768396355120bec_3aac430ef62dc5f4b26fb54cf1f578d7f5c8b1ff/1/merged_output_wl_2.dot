digraph  {
n24 [label="QuantConnect.Indicators.MeanAbsoluteDeviation", span=""];
n25 [label=mean, span=""];
n0 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", span="31-31"];
n1 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", label="Exit QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", span="31-31"];
n2 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="42-42"];
n3 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", label="Exit QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="42-42"];
n4 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="59-59"];
n5 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", label="Samples < 2", span="60-60"];
n7 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", label="IEnumerable<double> doubleValues = window.Select(i => Convert.ToDouble(i.Value))", span="63-63"];
n6 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", label="return 0m;", span="61-61"];
n8 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", color=red, community=0, label="0: double mean = doubleValues.Average()", span="64-64"];
n12 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n16 [cluster="lambda expression", label="Entry lambda expression", span="63-63"];
n9 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", color=red, community=0, label="0: double mad = doubleValues.Average(v => Math.Abs(v - mean))", span="65-65"];
n13 [cluster="System.Collections.Generic.IEnumerable<double>.Average()", label="Entry System.Collections.Generic.IEnumerable<double>.Average()", span="0-0"];
n21 [cluster="lambda expression", color=red, community=0, label="0: Math.Abs(v - mean)", span="65-65"];
n10 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", color=red, community=0, label="0: return Convert.ToDecimal(mad);", span="66-66"];
n14 [cluster="System.Collections.Generic.IEnumerable<TSource>.Average<TSource>(System.Func<TSource, double>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Average<TSource>(System.Func<TSource, double>)", span="0-0"];
n20 [cluster="lambda expression", label="Entry lambda expression", span="65-65"];
n11 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", label="Exit QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="59-59"];
n15 [cluster="System.Convert.ToDecimal(double)", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
n17 [cluster="lambda expression", label="Convert.ToDouble(i.Value)", span="63-63"];
n18 [cluster="lambda expression", label="Exit lambda expression", span="63-63"];
n19 [cluster="System.Convert.ToDouble(decimal)", label="Entry System.Convert.ToDouble(decimal)", span="0-0"];
n22 [cluster="lambda expression", label="Exit lambda expression", span="65-65"];
n23 [cluster="System.Math.Abs(double)", label="Entry System.Math.Abs(double)", span="0-0"];
d11 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", color=green, community=0, label="0: return window.Average(v => Math.Abs(v - _mean.Current.Value));", span="66-66"];
d7 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="61-61"];
d9 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", label="Samples < 2", span="63-63"];
d12 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", label="Exit QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="61-61"];
d14 [cluster="System.Collections.Generic.IEnumerable<TSource>.Average<TSource>(System.Func<TSource, decimal>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Average<TSource>(System.Func<TSource, decimal>)", span="0-0"];
d10 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", color=green, community=0, label="1: return 0m;", span="64-64"];
d16 [cluster="lambda expression", color=green, community=0, label="0: Math.Abs(v - _mean.Current.Value)", span="66-66"];
d18 [cluster="System.Math.Abs(decimal)", label="Entry System.Math.Abs(decimal)", span="0-0"];
d8 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", label="_mean.Update(window[0])", span="62-62"];
d13 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="66-66"];
n24 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MeanAbsoluteDeviation", style=dashed];
n24 -> d11  [color=green, key=1, label="QuantConnect.Indicators.MeanAbsoluteDeviation", style=dashed];
n24 -> d16  [color=green, key=1, label="QuantConnect.Indicators.MeanAbsoluteDeviation", style=dashed];
n24 -> d9  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MeanAbsoluteDeviation", style=dashed];
n24 -> d8  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.MeanAbsoluteDeviation", style=dashed];
n25 -> n21  [color=red, key=1, label=mean, style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [color=red, key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n7  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
n4 -> n6  [color=darkorchid, key=3, label="method methodReturn decimal ComputeNextValue", style=bold];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=0, style=solid];
n7 -> n8  [color=red, key=0, style=solid];
n7 -> n12  [key=2, style=dotted];
n7 -> n16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n7 -> n9  [color=red, key=1, label=doubleValues, style=dashed];
n6 -> n11  [key=0, style=solid];
n8 -> n9  [color=red, key=0, style=solid];
n8 -> n13  [color=red, key=2, style=dotted];
n8 -> n21  [color=red, key=1, label=mean, style=dashed];
n16 -> n17  [key=0, style=solid];
n9 -> n10  [color=red, key=0, style=solid];
n9 -> n14  [color=red, key=2, style=dotted];
n9 -> n20  [color=red, key=1, label="lambda expression", style=dashed];
n21 -> n22  [color=red, key=0, style=solid];
n21 -> n23  [color=red, key=2, style=dotted];
n10 -> n11  [color=red, key=0, style=solid];
n10 -> n15  [color=red, key=2, style=dotted];
n20 -> n21  [color=red, key=0, style=solid];
n20 -> d16  [color=green, key=0, style=solid];
n11 -> n4  [color=blue, key=0, style=bold];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=2, style=dotted];
n18 -> n16  [color=blue, key=0, style=bold];
n22 -> n20  [color=blue, key=0, style=bold];
d11 -> d12  [color=green, key=0, style=solid];
d11 -> d14  [color=green, key=2, style=dotted];
d11 -> n20  [color=green, key=1, label="lambda expression", style=dashed];
d7 -> d11  [color=green, key=1, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
d7 -> d10  [color=green, key=3, label="method methodReturn decimal ComputeNextValue", style=bold];
d7 -> d8  [key=0, style=solid];
d9 -> d11  [color=green, key=0, style=solid];
d9 -> d10  [color=green, key=0, style=solid];
d12 -> d7  [color=blue, key=0, style=bold];
d10 -> d12  [color=green, key=0, style=solid];
d16 -> n22  [color=green, key=0, style=solid];
d16 -> d18  [color=green, key=2, style=dotted];
d8 -> d9  [key=0, style=solid];
d8 -> d13  [key=2, style=dotted];
}
