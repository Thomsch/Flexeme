digraph  {
n0 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)", label="Entry QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)", span="32-32"];
n1 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)", label="return \r\n                exception?.GetType() == typeof(PythonException) &&\r\n                exception.Message.Contains(''KeyError'');", span="34-36"];
n2 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)", label="Exit QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)", span="32-32"];
n3 [cluster="System.Exception.GetType()", label="Entry System.Exception.GetType()", span="0-0"];
n4 [cluster="string.Contains(string)", label="Entry string.Contains(string)", span="0-0"];
n5 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="Entry QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="44-44"];
n6 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="var pe = (PythonException)exception", span="46-46"];
n7 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="var key = string.Empty", span="48-48"];
n8 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="pe.Message.Contains(''['')", span="49-49"];
n9 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="key = pe.Message.GetStringBetweenChars('[', ']')", span="51-51"];
n10 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="pe.Message.Contains(''\''')", span="53-53"];
n11 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="key = pe.Message.GetStringBetweenChars('\'', '\'')", span="55-55"];
n13 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="message += PythonUtil.PythonExceptionStackParser(pe.StackTrace)", span="59-59"];
n14 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="return new KeyNotFoundException(message, pe);", span="61-61"];
n12 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="var message = $''Trying to retrieve an element from a collection using a key that does not exist in that collection throws a KeyError exception. To prevent the exception, ensure that the {key} key exist in the collection and/or that collection is not empty.''", span="57-57"];
n16 [cluster="Unk.Contains", label="Entry Unk.Contains", span=""];
n17 [cluster="Unk.GetStringBetweenChars", label="Entry Unk.GetStringBetweenChars", span=""];
n18 [cluster="Unk.PythonExceptionStackParser", label="Entry Unk.PythonExceptionStackParser", span=""];
n15 [cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", label="Exit QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="44-44"];
n19 [cluster="KeyNotFoundException.cstr", label="Entry KeyNotFoundException.cstr", span=""];
m1_3 [cluster="System.NotSupportedException.NotSupportedException(string)", file="DefaultOptionChainProvider.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m1_0 [cluster="QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="DefaultOptionChainProvider.cs", label="Entry QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m1_1 [cluster="QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", color=green, community=0, file="DefaultOptionChainProvider.cs", label="3: throw new NotSupportedException(''GetOptionContractList is not supposed to be called on the DefaultOptionChainProvider.'');", span="33-33"];
m1_2 [cluster="QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="DefaultOptionChainProvider.cs", label="Exit QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [color=darkseagreen4, key=1, label=pe, style=dashed];
n6 -> n9  [color=darkseagreen4, key=1, label=pe, style=dashed];
n6 -> n10  [color=darkseagreen4, key=1, label=pe, style=dashed];
n6 -> n11  [color=darkseagreen4, key=1, label=pe, style=dashed];
n6 -> n13  [color=darkseagreen4, key=1, label=pe, style=dashed];
n6 -> n14  [color=darkseagreen4, key=1, label=pe, style=dashed];
n7 -> n8  [key=0, style=solid];
n7 -> n12  [color=darkseagreen4, key=1, label=key, style=dashed];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=0, style=solid];
n8 -> n16  [key=2, style=dotted];
n9 -> n12  [key=0, style=solid];
n9 -> n17  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n10 -> n16  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n17  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n18  [key=2, style=dotted];
n13 -> n13  [color=darkseagreen4, key=1, label=message, style=dashed];
n14 -> n15  [key=0, style=solid];
n14 -> n19  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n15 -> n5  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_3  [color=green, key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
}
