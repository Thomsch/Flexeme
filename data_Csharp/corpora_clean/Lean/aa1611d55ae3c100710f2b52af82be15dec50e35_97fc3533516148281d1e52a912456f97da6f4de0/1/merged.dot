digraph  {
n0 [label="Entry QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)", span="32-32", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)"];
n1 [label="return \r\n                exception?.GetType() == typeof(PythonException) &&\r\n                exception.Message.Contains(''KeyError'');", span="34-36", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)"];
n2 [label="Exit QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)", span="32-32", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.CanInterpret(System.Exception)"];
n3 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()"];
n4 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)"];
n5 [label="Entry QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="44-44", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n6 [label="var pe = (PythonException)exception", span="46-46", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n7 [label="var key = string.Empty", span="48-48", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n8 [label="pe.Message.Contains(''['')", span="49-49", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n9 [label="key = pe.Message.GetStringBetweenChars('[', ']')", span="51-51", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n10 [label="pe.Message.Contains(''\''')", span="53-53", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n11 [label="key = pe.Message.GetStringBetweenChars('\'', '\'')", span="55-55", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n13 [label="message += PythonUtil.PythonExceptionStackParser(pe.StackTrace)", span="59-59", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n14 [label="return new KeyNotFoundException(message, pe);", span="61-61", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n12 [label="var message = $''Trying to retrieve an element from a collection using a key that does not exist in that collection throws a KeyError exception. To prevent the exception, ensure that the {key} key exist in the collection and/or that collection is not empty.''", span="57-57", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n16 [label="Entry Unk.Contains", span="", cluster="Unk.Contains"];
n17 [label="Entry Unk.GetStringBetweenChars", span="", cluster="Unk.GetStringBetweenChars"];
n18 [label="Entry Unk.PythonExceptionStackParser", span="", cluster="Unk.PythonExceptionStackParser"];
n15 [label="Exit QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="44-44", cluster="QuantConnect.Exceptions.KeyErrorPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)"];
n19 [label="Entry KeyNotFoundException.cstr", span="", cluster="KeyNotFoundException.cstr"];
m1_3 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)", file="DefaultOptionChainProvider.cs"];
m1_0 [label="Entry QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31", cluster="QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="DefaultOptionChainProvider.cs"];
m1_1 [label="throw new NotSupportedException(''GetOptionContractList is not supposed to be called on the DefaultOptionChainProvider.'');", span="33-33", cluster="QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", color=green, community=0, file="DefaultOptionChainProvider.cs"];
m1_2 [label="Exit QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31", cluster="QuantConnect.Securities.Option.DefaultOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="DefaultOptionChainProvider.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=1, style=dashed, color=darkseagreen4, label=pe];
n6 -> n9  [key=1, style=dashed, color=darkseagreen4, label=pe];
n6 -> n10  [key=1, style=dashed, color=darkseagreen4, label=pe];
n6 -> n11  [key=1, style=dashed, color=darkseagreen4, label=pe];
n6 -> n13  [key=1, style=dashed, color=darkseagreen4, label=pe];
n6 -> n14  [key=1, style=dashed, color=darkseagreen4, label=pe];
n7 -> n8  [key=0, style=solid];
n7 -> n12  [key=1, style=dashed, color=darkseagreen4, label=key];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=0, style=solid];
n8 -> n16  [key=2, style=dotted];
n9 -> n12  [key=0, style=solid];
n9 -> n17  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n10 -> n16  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n17  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n18  [key=2, style=dotted];
n13 -> n13  [key=1, style=dashed, color=darkseagreen4, label=message];
n14 -> n15  [key=0, style=solid];
n14 -> n19  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n15 -> n5  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_3  [key=2, style=dotted, color=green];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
}
