digraph  {
n409 [label=V, span=""];
n410 [label=TKey, span=""];
n411 [label="System.Func<TKey, TValue>", span=""];
n412 [label="System.Func<TKey, TValue, TValue>", span=""];
n413 [label=TKey, span=""];
n414 [label="System.Lazy<TValue>", span=""];
n0 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", label="Entry QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="44-44"];
n1 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", label="var oItem = list[oldIndex]", span="46-46"];
n2 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", label="list.RemoveAt(oldIndex)", span="47-47"];
n3 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", label="newIndex > oldIndex", span="48-48"];
n4 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", label="newIndex--", span="48-48"];
n5 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", label="list.Insert(newIndex, oItem)", span="49-49"];
n7 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
n6 [cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", label="Exit QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="44-44"];
n8 [cluster="System.Collections.Generic.List<T>.Insert(int, T)", label="Entry System.Collections.Generic.List<T>.Insert(int, T)", span="0-0"];
n9 [cluster="QuantConnect.Extensions.GetBytes(string)", label="Entry QuantConnect.Extensions.GetBytes(string)", span="57-57"];
n10 [cluster="QuantConnect.Extensions.GetBytes(string)", label="var bytes = new byte[str.Length * sizeof(char)]", span="59-59"];
n11 [cluster="QuantConnect.Extensions.GetBytes(string)", label="Buffer.BlockCopy(str.ToCharArray(), 0, bytes, 0, bytes.Length)", span="60-60"];
n12 [cluster="QuantConnect.Extensions.GetBytes(string)", label="return bytes;", span="61-61"];
n14 [cluster="string.ToCharArray()", label="Entry string.ToCharArray()", span="0-0"];
n15 [cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0"];
n13 [cluster="QuantConnect.Extensions.GetBytes(string)", label="Exit QuantConnect.Extensions.GetBytes(string)", span="57-57"];
n16 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", label="Entry QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="70-70"];
n17 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", label="T item", span="72-72"];
n18 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", label="queue.TryDequeue(out item)", span="73-73"];
n19 [cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", label="Exit QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="70-70"];
n20 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
n21 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", label="Entry QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="84-84"];
n22 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", label="encoding == null", span="86-86"];
n24 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", label="return encoding.GetString(bytes);", span="88-88"];
n23 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", label="encoding = Encoding.ASCII", span="86-86"];
n25 [cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", label="Exit QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="84-84"];
n26 [cluster="System.Text.Encoding.GetString(byte[])", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
n27 [cluster="QuantConnect.Extensions.ToMD5(string)", label="Entry QuantConnect.Extensions.ToMD5(string)", span="96-96"];
n28 [cluster="QuantConnect.Extensions.ToMD5(string)", label="var builder = new StringBuilder()", span="98-98"];
n30 [cluster="QuantConnect.Extensions.ToMD5(string)", label="var data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(str))", span="101-101"];
n29 [cluster="QuantConnect.Extensions.ToMD5(string)", label="var md5Hash = MD5.Create()", span="99-99"];
n35 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
n32 [cluster="QuantConnect.Extensions.ToMD5(string)", label="builder.Append(t.ToString(''x2''))", span="102-102"];
n33 [cluster="QuantConnect.Extensions.ToMD5(string)", label="return builder.ToString();", span="104-104"];
n36 [cluster="System.Security.Cryptography.MD5.Create()", label="Entry System.Security.Cryptography.MD5.Create()", span="0-0"];
n31 [cluster="QuantConnect.Extensions.ToMD5(string)", label=data, span="102-102"];
n37 [cluster="System.Text.Encoding.GetBytes(string)", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
n38 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0"];
n39 [cluster="byte.ToString(string)", label="Entry byte.ToString(string)", span="0-0"];
n40 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n34 [cluster="QuantConnect.Extensions.ToMD5(string)", label="Exit QuantConnect.Extensions.ToMD5(string)", span="96-96"];
n41 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n42 [cluster="QuantConnect.Extensions.ToSHA256(string)", label="Entry QuantConnect.Extensions.ToSHA256(string)", span="112-112"];
n43 [cluster="QuantConnect.Extensions.ToSHA256(string)", label="var crypt = new SHA256Managed()", span="114-114"];
n45 [cluster="QuantConnect.Extensions.ToSHA256(string)", label="var crypto = crypt.ComputeHash(Encoding.UTF8.GetBytes(data), 0, Encoding.UTF8.GetByteCount(data))", span="116-116"];
n44 [cluster="QuantConnect.Extensions.ToSHA256(string)", label="var hash = new StringBuilder()", span="115-115"];
n50 [cluster="System.Security.Cryptography.SHA256Managed.SHA256Managed()", label="Entry System.Security.Cryptography.SHA256Managed.SHA256Managed()", span="0-0"];
n47 [cluster="QuantConnect.Extensions.ToSHA256(string)", label="hash.Append(theByte.ToString(''x2''))", span="119-119"];
n48 [cluster="QuantConnect.Extensions.ToSHA256(string)", label="return hash.ToString();", span="121-121"];
n46 [cluster="QuantConnect.Extensions.ToSHA256(string)", label=crypto, span="117-117"];
n51 [cluster="System.Text.Encoding.GetByteCount(string)", label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0"];
n52 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", span="0-0"];
n49 [cluster="QuantConnect.Extensions.ToSHA256(string)", label="Exit QuantConnect.Extensions.ToSHA256(string)", span="112-112"];
n53 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", label="Entry QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="133-133"];
n54 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", label="dictionary.AddOrUpdate(key, value, (oldkey, oldvalue) => value)", span="135-135"];
n58 [cluster="lambda expression", label=value, span="135-135"];
n55 [cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", label="Exit QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="133-133"];
n56 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
n57 [cluster="lambda expression", label="Entry lambda expression", span="135-135"];
n59 [cluster="lambda expression", label="Exit lambda expression", span="135-135"];
n60 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", label="Entry QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="147-147"];
n61 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", label="var result = dictionary.AddOrUpdate(key, new Lazy<TValue>(() => addValueFactory(key)), (key2, old) => new Lazy<TValue>(() => updateValueFactory(key2, old.Value)))", span="149-149"];
n66 [cluster="lambda expression", label="addValueFactory(key)", span="149-149"];
n70 [cluster="lambda expression", label="new Lazy<TValue>(() => updateValueFactory(key2, old.Value))", span="149-149"];
n73 [cluster="lambda expression", label="updateValueFactory(key2, old.Value)", span="149-149"];
n62 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", label="return result.Value;", span="150-150"];
n64 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
n69 [cluster="lambda expression", label="Entry lambda expression", span="149-149"];
n63 [cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", label="Exit QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="147-147"];
n65 [cluster="lambda expression", label="Entry lambda expression", span="149-149"];
n67 [cluster="lambda expression", label="Exit lambda expression", span="149-149"];
n68 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n71 [cluster="lambda expression", label="Exit lambda expression", span="149-149"];
n72 [cluster="lambda expression", label="Entry lambda expression", span="149-149"];
n74 [cluster="lambda expression", label="Exit lambda expression", span="149-149"];
n75 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
n76 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", label="Entry QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="163-163"];
n77 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", label="TCollection list", span="166-166"];
n78 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", label="!dictionary.TryGetValue(key, out list)", span="167-167"];
n80 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", label="dictionary.Add(key, list)", span="170-170"];
n81 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", label="list.Add(element)", span="172-172"];
n79 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", label="list = new TCollection()", span="169-169"];
n83 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n84 [cluster="TCollection.cstr", label="Entry TCollection.cstr", span=""];
n85 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n82 [cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", label="Exit QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="163-163"];
n86 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n87 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", label="Entry QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="181-181"];
n88 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", label="d == 0", span="183-183"];
n90 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", label="var scale = Math.Pow(10, Math.Floor(Math.Log10(Math.Abs(d))) + 1)", span="184-184"];
n91 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", label="return scale * Math.Round(d / scale, digits);", span="185-185"];
n89 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", label="return 0;", span="183-183"];
n93 [cluster="System.Math.Abs(double)", label="Entry System.Math.Abs(double)", span="0-0"];
n94 [cluster="System.Math.Log10(double)", label="Entry System.Math.Log10(double)", span="0-0"];
n95 [cluster="System.Math.Floor(double)", label="Entry System.Math.Floor(double)", span="0-0"];
n96 [cluster="System.Math.Pow(double, double)", label="Entry System.Math.Pow(double, double)", span="0-0"];
n92 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", label="Exit QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="181-181"];
n97 [cluster="System.Math.Round(double, int)", label="Entry System.Math.Round(double, int)", span="0-0"];
n98 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", label="Entry QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="194-194"];
n99 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", label="d == 0", span="196-196"];
n101 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", label="var scale = (decimal)Math.Pow(10, Math.Floor(Math.Log10((double) Math.Abs(d))) + 1)", span="197-197"];
n102 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", label="return scale * Math.Round(d / scale, digits);", span="198-198"];
n100 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", label="return 0;", span="196-196"];
n104 [cluster="System.Math.Abs(decimal)", label="Entry System.Math.Abs(decimal)", span="0-0"];
n103 [cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", label="Exit QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="194-194"];
n105 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
n106 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", label="Entry QuantConnect.Extensions.SmartRounding(decimal)", span="205-205"];
n107 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", label="input = Normalize(input)", span="207-207"];
n108 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", label="input > 1000", span="210-210"];
n113 [cluster="QuantConnect.Extensions.Normalize(decimal)", label="Entry QuantConnect.Extensions.Normalize(decimal)", span="233-233"];
n109 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", label="return Math.Round(input, 4);", span="212-212"];
n110 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", label="var d = (double)input", span="216-216"];
n111 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", label="return (decimal)d.RoundToSignificantDigits(7);", span="217-217"];
n112 [cluster="QuantConnect.Extensions.SmartRounding(decimal)", label="Exit QuantConnect.Extensions.SmartRounding(decimal)", span="205-205"];
n114 [cluster="double.RoundToSignificantDigits(int)", label="Entry double.RoundToSignificantDigits(int)", span="181-181"];
n115 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", label="Entry QuantConnect.Extensions.SafeDecimalCast(double)", span="226-226"];
n116 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", label="input <= (double) decimal.MinValue", span="228-228"];
n118 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", label="input >= (double) decimal.MaxValue", span="229-229"];
n120 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", label="return (decimal) input;", span="230-230"];
n117 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", label="return decimal.MinValue;", span="228-228"];
n119 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", label="return decimal.MaxValue;", span="229-229"];
n121 [cluster="QuantConnect.Extensions.SafeDecimalCast(double)", label="Exit QuantConnect.Extensions.SafeDecimalCast(double)", span="226-226"];
n122 [cluster="QuantConnect.Extensions.Normalize(decimal)", label="return input / 1.000000000000000000000000000000000m;", span="236-236"];
n123 [cluster="QuantConnect.Extensions.Normalize(decimal)", label="Exit QuantConnect.Extensions.Normalize(decimal)", span="233-233"];
n124 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="Entry QuantConnect.Extensions.ToDecimal(string)", span="248-248"];
n125 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="long value = 0", span="250-250"];
n129 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="var length = str.Length", span="254-254"];
n130 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="index < length && char.IsWhiteSpace(str[index])", span="256-256"];
n133 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="var ch = str[index++]", span="263-263"];
n126 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="var decimalPlaces = 0", span="251-251"];
n138 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="value = value * 10 + (ch - '0')", span="275-275"];
n140 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="var lo = (int)value", span="280-280"];
n141 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="var mid = (int)(value >> 32)", span="281-281"];
n127 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="var hasDecimals = false", span="252-252"];
n139 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="decimalPlaces++", span="276-276"];
n142 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="return new decimal(lo, mid, 0, false, (byte)(hasDecimals ? decimalPlaces : 0));", span="282-282"];
n128 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="var index = 0", span="253-253"];
n131 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="index++", span="258-258"];
n132 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="index < length", span="261-261"];
n144 [cluster="char.IsWhiteSpace(char)", label="Entry char.IsWhiteSpace(char)", span="0-0"];
n134 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="ch == '.'", span="264-264"];
n137 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="char.IsWhiteSpace(ch)", span="269-269"];
n135 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="hasDecimals = true", span="266-266"];
n136 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="decimalPlaces = 0", span="267-267"];
n143 [cluster="QuantConnect.Extensions.ToDecimal(string)", label="Exit QuantConnect.Extensions.ToDecimal(string)", span="248-248"];
n145 [cluster="decimal.Decimal(int, int, int, bool, byte)", label="Entry decimal.Decimal(int, int, int, bool, byte)", span="0-0"];
n146 [cluster="QuantConnect.Extensions.ToInt32(string)", label="Entry QuantConnect.Extensions.ToInt32(string)", span="291-291"];
n147 [cluster="QuantConnect.Extensions.ToInt32(string)", label="int value = 0", span="293-293"];
n149 [cluster="QuantConnect.Extensions.ToInt32(string)", label="i < str.Length", span="294-294"];
n150 [cluster="QuantConnect.Extensions.ToInt32(string)", label="value = value * 10 + (str[i] - '0')", span="296-296"];
n148 [cluster="QuantConnect.Extensions.ToInt32(string)", label="var i = 0", span="294-294"];
n152 [cluster="QuantConnect.Extensions.ToInt32(string)", label="return value;", span="298-298"];
n151 [cluster="QuantConnect.Extensions.ToInt32(string)", label="i++", span="294-294"];
n153 [cluster="QuantConnect.Extensions.ToInt32(string)", label="Exit QuantConnect.Extensions.ToInt32(string)", span="291-291"];
n154 [cluster="QuantConnect.Extensions.ToInt64(string)", label="Entry QuantConnect.Extensions.ToInt64(string)", span="307-307"];
n155 [cluster="QuantConnect.Extensions.ToInt64(string)", label="long value = 0", span="309-309"];
n157 [cluster="QuantConnect.Extensions.ToInt64(string)", label="i < str.Length", span="310-310"];
n158 [cluster="QuantConnect.Extensions.ToInt64(string)", label="value = value * 10 + (str[i] - '0')", span="312-312"];
n156 [cluster="QuantConnect.Extensions.ToInt64(string)", label="var i = 0", span="310-310"];
n160 [cluster="QuantConnect.Extensions.ToInt64(string)", label="return value;", span="314-314"];
n159 [cluster="QuantConnect.Extensions.ToInt64(string)", label="i++", span="310-310"];
n161 [cluster="QuantConnect.Extensions.ToInt64(string)", label="Exit QuantConnect.Extensions.ToInt64(string)", span="307-307"];
n162 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="Entry QuantConnect.Extensions.ToCsv(string, int)", span="323-323"];
n163 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="int last = 0", span="325-325"];
n164 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="var csv = new List<string>(size)", span="326-326"];
n166 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="i < str.Length", span="327-327"];
n167 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="str[i] == ','", span="329-329"];
n170 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="csv.Add(str.Substring(last, i - last))", span="332-332"];
n175 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="csv.Add(str.Substring(last))", span="337-337"];
n168 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="last != 0", span="331-331"];
n169 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="last = last + 1", span="331-331"];
n173 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="last != 0", span="336-336"];
n174 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="last = last + 1", span="336-336"];
n165 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="int i = 0", span="327-327"];
n178 [cluster="System.Collections.Generic.List<T>.List(int)", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
n176 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="return csv;", span="338-338"];
n171 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="last = i", span="333-333"];
n172 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="i++", span="327-327"];
n179 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n180 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n181 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n177 [cluster="QuantConnect.Extensions.ToCsv(string, int)", label="Exit QuantConnect.Extensions.ToCsv(string, int)", span="323-323"];
n182 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="Entry QuantConnect.Extensions.ToCsvData(string, int)", span="347-347"];
n183 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="var csv = new List<string>(size)", span="349-349"];
n187 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="i < str.Length", span="354-354"];
n188 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="str[i]", span="356-356"];
n193 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="csv.Add(str.Substring(last + 1, (i - last)).Trim(' ', ','))", span="364-364"];
n196 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="last != str.Length - 1", span="373-373"];
n197 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="csv.Add(str.Substring(last + 1).Trim())", span="375-375"];
n184 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="int last = -1", span="351-351"];
n198 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="return csv;", span="378-378"];
n185 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="bool textDataField = false", span="352-352"];
n186 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="var i = 0", span="354-354"];
n190 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="textDataField = !textDataField", span="359-359"];
n194 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="last = i", span="365-365"];
n195 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="i++", span="354-354"];
n189 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="''''", span="358-358"];
n191 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="','", span="361-361"];
n192 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="!textDataField", span="362-362"];
n200 [cluster="string.Trim(params char[])", label="Entry string.Trim(params char[])", span="0-0"];
n201 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
n199 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", label="Exit QuantConnect.Extensions.ToCsvData(string, int)", span="347-347"];
n202 [cluster="QuantConnect.Extensions.IsNaNOrZero(double)", label="Entry QuantConnect.Extensions.IsNaNOrZero(double)", span="385-385"];
n203 [cluster="QuantConnect.Extensions.IsNaNOrZero(double)", label="return double.IsNaN(value) || Math.Abs(value) < double.Epsilon;", span="387-387"];
n204 [cluster="QuantConnect.Extensions.IsNaNOrZero(double)", label="Exit QuantConnect.Extensions.IsNaNOrZero(double)", span="385-385"];
n205 [cluster="double.IsNaN(double)", label="Entry double.IsNaN(double)", span="0-0"];
n206 [cluster="QuantConnect.Extensions.GetDecimalEpsilon()", label="Entry QuantConnect.Extensions.GetDecimalEpsilon()", span="394-394"];
n207 [cluster="QuantConnect.Extensions.GetDecimalEpsilon()", label="return new decimal(1, 0, 0, false, 27);", span="396-396"];
n208 [cluster="QuantConnect.Extensions.GetDecimalEpsilon()", label="Exit QuantConnect.Extensions.GetDecimalEpsilon()", span="394-394"];
n209 [cluster="QuantConnect.Extensions.GetExtension(string)", label="Entry QuantConnect.Extensions.GetExtension(string)", span="404-404"];
n210 [cluster="QuantConnect.Extensions.GetExtension(string)", label="var ext = str.Substring(Math.Max(0, str.Length - 4))", span="405-405"];
n211 [cluster="QuantConnect.Extensions.GetExtension(string)", label="var allowedExt = new List<string>() { ''.zip'', ''.csv'', ''.json'' }", span="406-406"];
n216 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
n212 [cluster="QuantConnect.Extensions.GetExtension(string)", label="!allowedExt.Contains(ext)", span="407-407"];
n214 [cluster="QuantConnect.Extensions.GetExtension(string)", label="return ext;", span="411-411"];
n217 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n213 [cluster="QuantConnect.Extensions.GetExtension(string)", label="ext = ''.custom''", span="409-409"];
n218 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n215 [cluster="QuantConnect.Extensions.GetExtension(string)", label="Exit QuantConnect.Extensions.GetExtension(string)", span="404-404"];
n219 [cluster="QuantConnect.Extensions.ToStream(string)", label="Entry QuantConnect.Extensions.ToStream(string)", span="419-419"];
n220 [cluster="QuantConnect.Extensions.ToStream(string)", label="var stream = new MemoryStream()", span="421-421"];
n222 [cluster="QuantConnect.Extensions.ToStream(string)", label="writer.Write(str)", span="423-423"];
n221 [cluster="QuantConnect.Extensions.ToStream(string)", label="var writer = new StreamWriter(stream)", span="422-422"];
n227 [cluster="System.IO.MemoryStream.MemoryStream()", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
n224 [cluster="QuantConnect.Extensions.ToStream(string)", label="stream.Position = 0", span="425-425"];
n225 [cluster="QuantConnect.Extensions.ToStream(string)", label="return stream;", span="426-426"];
n228 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
n223 [cluster="QuantConnect.Extensions.ToStream(string)", label="writer.Flush()", span="424-424"];
n229 [cluster="System.IO.StreamWriter.Write(string)", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
n230 [cluster="System.IO.StreamWriter.Flush()", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
n226 [cluster="QuantConnect.Extensions.ToStream(string)", label="Exit QuantConnect.Extensions.ToStream(string)", span="419-419"];
n231 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="436-436"];
n232 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", label="roundingInterval == TimeSpan.Zero", span="438-438"];
n233 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", label="return time;", span="441-441"];
n234 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", label="return new TimeSpan(\r\n                Convert.ToInt64(Math.Round(\r\n                    time.Ticks / (decimal)roundingInterval.Ticks,\r\n                    roundingType\r\n                )) * roundingInterval.Ticks\r\n            );", span="444-449"];
n235 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="436-436"];
n236 [cluster="System.TimeSpan.TimeSpan(long)", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
n237 [cluster="System.Math.Round(decimal, System.MidpointRounding)", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
n238 [cluster="System.Convert.ToInt64(decimal)", label="Entry System.Convert.ToInt64(decimal)", span="0-0"];
n239 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="459-459"];
n240 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", label="return Round(time, roundingInterval, MidpointRounding.ToEven);", span="461-461"];
n241 [cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="459-459"];
n242 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", label="Entry QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="470-470"];
n243 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", label="interval == TimeSpan.Zero", span="472-472"];
n244 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", label="return dateTime;", span="475-475"];
n245 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", label="return dateTime.AddTicks(-(dateTime.Ticks % interval.Ticks));", span="477-477"];
n246 [cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", label="Exit QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="470-470"];
n247 [cluster="System.DateTime.AddTicks(long)", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
n248 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", label="Entry QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="492-492"];
n249 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", label="interval == TimeSpan.Zero", span="495-495"];
n250 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", label="return dateTime;", span="495-495"];
n251 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", label="var rounded = dateTime.RoundDown(interval)", span="497-497"];
n252 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", label="!exchangeHours.IsOpen(rounded, rounded + interval, extendedMarket)", span="498-498"];
n253 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", label="rounded -= interval", span="500-500"];
n256 [cluster="System.DateTime.RoundDown(System.TimeSpan)", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="470-470"];
n254 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", label="return rounded;", span="502-502"];
n257 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="141-141"];
n255 [cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", label="Exit QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="492-492"];
n258 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", label="Entry QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="511-511"];
n259 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", label="return new DateTime((datetime - DateTime.MinValue).Round(roundingInterval).Ticks);", span="513-513"];
n260 [cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", label="Exit QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="511-511"];
n261 [cluster="System.DateTime.DateTime(long)", label="Entry System.DateTime.DateTime(long)", span="0-0"];
n262 [cluster="System.TimeSpan.Round(System.TimeSpan)", label="Entry System.TimeSpan.Round(System.TimeSpan)", span="459-459"];
n263 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", label="Entry QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="522-522"];
n264 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", label="d == TimeSpan.Zero", span="524-524"];
n265 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", label="return time;", span="527-527"];
n266 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", label="return new DateTime(((time.Ticks + d.Ticks - 1) / d.Ticks) * d.Ticks);", span="529-529"];
n267 [cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", label="Exit QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="522-522"];
n268 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", label="Entry QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="540-540"];
n269 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", label="ReferenceEquals(from, to)", span="542-542"];
n270 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", label="return time;", span="542-542"];
n271 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", label=strict, span="544-544"];
n272 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="546-546"];
n273 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="549-549"];
n275 [cluster="Unk.ReferenceEquals", label="Entry Unk.ReferenceEquals", span=""];
n274 [cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", label="Exit QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="540-540"];
n276 [cluster="Unk.FromDateTime", label="Entry Unk.FromDateTime", span=""];
n277 [cluster="Unk.AtStrictly", label="Entry Unk.AtStrictly", span=""];
n278 [cluster="Unk.WithZone", label="Entry Unk.WithZone", span=""];
n279 [cluster="Unk.ToDateTimeUnspecified", label="Entry Unk.ToDateTimeUnspecified", span=""];
n280 [cluster="Unk.AtLeniently", label="Entry Unk.AtLeniently", span=""];
n281 [cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", label="Entry QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="559-559"];
n282 [cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", label="return time.ConvertTo(TimeZones.Utc, to, strict);", span="561-561"];
n283 [cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", label="Exit QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="559-559"];
n284 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="540-540"];
n285 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", label="Entry QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="571-571"];
n286 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", label=strict, span="573-573"];
n287 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="575-575"];
n288 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="578-578"];
n289 [cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", label="Exit QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="571-571"];
n290 [cluster="Unk.ToDateTimeUtc", label="Entry Unk.ToDateTimeUtc", span=""];
n291 [cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", label="Entry QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", span="586-586"];
n292 [cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", label="return (date.DayOfWeek != DayOfWeek.Saturday && date.DayOfWeek != DayOfWeek.Sunday);", span="588-588"];
n293 [cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", label="Exit QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", span="586-586"];
n294 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", label="Entry QuantConnect.Extensions.Reset(System.Timers.Timer)", span="595-595"];
n295 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", label="timer.Stop()", span="597-597"];
n296 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", label="timer.Start()", span="598-598"];
n298 [cluster="System.Timers.Timer.Stop()", label="Entry System.Timers.Timer.Stop()", span="0-0"];
n297 [cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", label="Exit QuantConnect.Extensions.Reset(System.Timers.Timer)", span="595-595"];
n299 [cluster="System.Timers.Timer.Start()", label="Entry System.Timers.Timer.Start()", span="0-0"];
n300 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", label="Entry QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="608-608"];
n301 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", label="type.AssemblyQualifiedName == typeName", span="610-610"];
n303 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", label="type.FullName == typeName", span="614-614"];
n305 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", label="type.Name == typeName", span="618-618"];
n302 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", label="return true;", span="612-612"];
n304 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", label="return true;", span="616-616"];
n306 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", label="return true;", span="620-620"];
n307 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", label="return false;", span="622-622"];
n308 [cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", label="Exit QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="608-608"];
n309 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="Entry QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="632-632"];
n310 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="type != null && type != typeof(object)", span="634-634"];
n312 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="type.IsGenericType && possibleSuperType.IsGenericTypeDefinition", span="637-637"];
n313 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="cur = type.GetGenericTypeDefinition()", span="639-639"];
n314 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="cur = type", span="643-643"];
n315 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="possibleSuperType == cur", span="645-645"];
n317 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="type = type.BaseType", span="649-649"];
n311 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="Type cur", span="636-636"];
n318 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="return false;", span="651-651"];
n320 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n316 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="return true;", span="647-647"];
n319 [cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", label="Exit QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="632-632"];
n321 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", label="Entry QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="660-660"];
n322 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", label="string name = type.Name", span="662-662"];
n323 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", label="type.IsGenericType", span="663-663"];
n324 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", label="var genericArguments = type.GetGenericArguments()", span="665-665"];
n326 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", label="name = name.Replace(toBeReplaced, ''<'' + string.Join('', '', genericArguments.Select(x => x.GetBetterTypeName())) + ''>'')", span="667-667"];
n327 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", label="return name;", span="669-669"];
n325 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", label="var toBeReplaced = ''`'' + (genericArguments.Length)", span="666-666"];
n329 [cluster="System.Type.GetGenericArguments()", label="Entry System.Type.GetGenericArguments()", span="0-0"];
n330 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n331 [cluster="Unk.Join", label="Entry Unk.Join", span=""];
n332 [cluster="Unk.Replace", label="Entry Unk.Replace", span=""];
n333 [cluster="lambda expression", label="Entry lambda expression", span="667-667"];
n328 [cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", label="Exit QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="660-660"];
n334 [cluster="lambda expression", label="x.GetBetterTypeName()", span="667-667"];
n335 [cluster="lambda expression", label="Exit lambda expression", span="667-667"];
n336 [cluster="System.Type.GetBetterTypeName()", label="Entry System.Type.GetBetterTypeName()", span="660-660"];
n337 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="Entry QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="677-677"];
n338 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label=resolution, span="679-679"];
n339 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="Resolution.Tick", span="681-681"];
n341 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="Resolution.Second", span="684-684"];
n343 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="Resolution.Minute", span="686-686"];
n345 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="Resolution.Hour", span="688-688"];
n347 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="Resolution.Daily", span="690-690"];
n349 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="throw new ArgumentOutOfRangeException(''resolution'');", span="693-693"];
n340 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="return TimeSpan.FromTicks(0);", span="683-683"];
n342 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="return TimeSpan.FromSeconds(1);", span="685-685"];
n344 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="return TimeSpan.FromMinutes(1);", span="687-687"];
n346 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="return TimeSpan.FromHours(1);", span="689-689"];
n348 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="return TimeSpan.FromDays(1);", span="691-691"];
n350 [cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", label="Exit QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="677-677"];
n355 [cluster="System.TimeSpan.FromDays(double)", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
n353 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
n354 [cluster="System.TimeSpan.FromHours(double)", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
n351 [cluster="System.TimeSpan.FromTicks(long)", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
n356 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n352 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
n357 [cluster="QuantConnect.Extensions.ConvertTo<T>(string)", label="Entry QuantConnect.Extensions.ConvertTo<T>(string)", span="703-703"];
n358 [cluster="QuantConnect.Extensions.ConvertTo<T>(string)", label="return (T) value.ConvertTo(typeof (T));", span="705-705"];
n359 [cluster="QuantConnect.Extensions.ConvertTo<T>(string)", label="Exit QuantConnect.Extensions.ConvertTo<T>(string)", span="703-703"];
n360 [cluster="string.ConvertTo(System.Type)", label="Entry string.ConvertTo(System.Type)", span="714-714"];
n361 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="Entry QuantConnect.Extensions.ConvertTo(string, System.Type)", span="714-714"];
n362 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="type.IsEnum", span="716-716"];
n363 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="return Enum.Parse(type, value);", span="718-718"];
n364 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="typeof (IConvertible).IsAssignableFrom(type)", span="721-721"];
n365 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="return Convert.ChangeType(value, type, CultureInfo.InvariantCulture);", span="723-723"];
n366 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="var parse = type.GetMethod(''Parse'', new[] {typeof (string)})", span="727-727"];
n368 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="var result = parse.Invoke(null, new object[] {value})", span="730-730"];
n370 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="return JsonConvert.DeserializeObject(value, type);", span="734-734"];
n373 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n367 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="parse != null", span="728-728"];
n375 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n369 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="return result;", span="731-731"];
n376 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
n371 [cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", label="Exit QuantConnect.Extensions.ConvertTo(string, System.Type)", span="714-714"];
n372 [cluster="System.Enum.Parse(System.Type, string)", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
n377 [cluster="Unk.DeserializeObject", label="Entry Unk.DeserializeObject", span=""];
n374 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n378 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="745-745"];
n379 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", label="return waitHandle.WaitOne(Timeout.Infinite, cancellationToken);", span="747-747"];
n380 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="745-745"];
n381 [cluster="System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", label="Entry System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", span="782-782"];
n382 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="763-763"];
n383 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", label="return waitHandle.WaitOne((int) timeout.TotalMilliseconds, cancellationToken);", span="765-765"];
n384 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="763-763"];
n385 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="782-782"];
n386 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", label="return WaitHandle.WaitAny(new[] { waitHandle, cancellationToken.WaitHandle }, millisecondsTimeout) == 0;", span="784-784"];
n387 [cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="782-782"];
n388 [cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0"];
n389 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", label="Entry QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="792-792"];
n390 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", label="var md5 = MD5.Create()", span="794-794"];
n391 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", label="return md5.ComputeHash(stream);", span="796-796"];
n392 [cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", label="Exit QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="792-792"];
n393 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", span="0-0"];
n394 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", label="Entry QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="805-805"];
n395 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", label="var regx = new Regex(''http(s)?://([\\w+?\\.\\w+])+([a-zA-Z0-9\\~\\!\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)_\\-\\=\\+\\\\\\/\\?\\.\\:\\;\\'\\,]*([a-zA-Z0-9\\?\\#\\=\\/]){1})?'', RegexOptions.IgnoreCase)", span="807-807"];
n396 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", label="var matches = regx.Matches(source)", span="808-808"];
n398 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", label="source = source.Replace(match.Value, ''<a href=''' + match.Value + ''' target='blank'>'' + match.Value + ''</a>'')", span="811-811"];
n399 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", label="return source;", span="813-813"];
n401 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
n397 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", label=matches, span="809-809"];
n402 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
n403 [cluster="string.Replace(string, string)", label="Entry string.Replace(string, string)", span="0-0"];
n400 [cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", label="Exit QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="805-805"];
n404 [cluster="QuantConnect.Extensions.ToLower(System.Enum)", label="Entry QuantConnect.Extensions.ToLower(System.Enum)", span="821-821"];
n405 [cluster="QuantConnect.Extensions.ToLower(System.Enum)", label="return @enum.ToString().ToLower();", span="823-823"];
n406 [cluster="QuantConnect.Extensions.ToLower(System.Enum)", label="Exit QuantConnect.Extensions.ToLower(System.Enum)", span="821-821"];
n407 [cluster="System.Enum.ToString()", label="Entry System.Enum.ToString()", span="0-0"];
n408 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
m0_25 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="throw new Exception(''Regression test failed: current open interest was not correctly loaded and is not equal to 50'');", span="69-69"];
m0_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="126-126"];
m0_16 [cluster="System.TimeSpan.FromDays(double)", file="FileSystemDataFeed.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m0_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="976-976"];
m0_19 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="55-55"];
m0_20 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="!Portfolio.Invested", span="57-57"];
m0_21 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="slice.OptionChains", span="59-59"];
m0_22 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="chain.Value", span="61-61"];
m0_17 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m0_23 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="contract.Symbol.ID.StrikePrice == 72.5m &&\r\n                            contract.Symbol.ID.OptionRight == OptionRight.Call &&\r\n                            contract.Symbol.ID.Date == new DateTime(2016, 01, 15)", span="63-65"];
m0_24 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="slice.Time.Date == new DateTime(2014, 06, 05) && contract.OpenInterest != 50", span="67-67"];
m0_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="126-126"];
m0_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="Subscriptions = algorithm.SubscriptionManager.Subscriptions", span="128-128"];
m0_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="_subscriptions = Subscriptions.Count", span="129-129"];
m0_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="DataFeed = DataFeedEndpoint.FileSystem", span="132-132"];
m0_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="IsActive = true", span="133-133"];
m0_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="Bridge = new ConcurrentQueue<List<BaseData>>[_subscriptions]", span="134-134"];
m0_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="EndOfBridge = new bool[_subscriptions]", span="135-135"];
m0_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="FillForwardFrontiers = new DateTime[_subscriptions]", span="137-137"];
m0_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="SubscriptionReaderManagers = new SubscriptionDataReader[_subscriptions]", span="136-136"];
m0_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="RealtimePrices = new List<decimal>(_subscriptions)", span="138-138"];
m0_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="var increment = TimeSpan.FromDays(1)", span="187-187"];
m0_139 [cluster="System.Collections.Generic.List<T>.List()", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m0_143 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", span="414-414"];
m0_148 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="!Subscriptions[i].FillDataForward || manager.Previous == null", span="417-417"];
m0_152 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="FillForwardFrontiers[i].Ticks == 0", span="424-424"];
m0_153 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="FillForwardFrontiers[i] = previous.Time", span="424-424"];
m0_155 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="var date = FillForwardFrontiers[i] + increment", span="430-430"];
m0_160 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="FillForwardFrontiers[i] = date", span="435-435"];
m0_162 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="Bridge[i].Enqueue(cache)", span="437-437"];
m0_165 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="var date = FillForwardFrontiers[i] + increment", span="445-445"];
m0_167 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="!Subscriptions[i].ExtendedMarketHours", span="448-448"];
m0_176 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="FillForwardFrontiers[i] = date", span="476-476"];
m0_178 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="Bridge[i].Enqueue(cache)", span="478-478"];
m0_149 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="return;", span="417-417"];
m0_150 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="var previous = manager.Previous", span="420-420"];
m0_151 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="var current = manager.Current", span="421-421"];
m0_154 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="manager.EndOfStream && manager.MarketOpen(current.Time)", span="427-427"];
m0_156 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="manager.MarketOpen(date)", span="430-430"];
m0_159 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="fillforward.Time = date", span="434-434"];
m0_163 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="date = date + increment", span="430-430"];
m0_161 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="cache.Add(fillforward)", span="436-436"];
m0_157 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="var cache = new List<BaseData>(1)", span="432-432"];
m0_166 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="(date < current.Time)", span="445-445"];
m0_168 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="!manager.MarketOpen(date)", span="450-450"];
m0_172 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="!manager.ExtendedMarketOpen(date)", span="467-467"];
m0_175 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="fillforward.Time = date", span="475-475"];
m0_179 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="date = date + increment", span="445-445"];
m0_170 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="date = date - increment", span="459-459"];
m0_177 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="cache.Add(fillforward)", span="477-477"];
m0_173 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="var cache = new List<BaseData>(1)", span="473-473"];
m0_171 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="manager.MarketOpen(date)", span="460-460"];
m0_174 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="var fillforward = previous.Clone(true)", span="474-474"];
m0_158 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="var fillforward = current.Clone(true)", span="433-433"];
m0_169 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="date = current.Time", span="456-456"];
m0_164 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="return;", span="439-439"];
m0_180 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", span="414-414"];
m0_144 [cluster="System.DateTime.DateTime(long)", file="FileSystemDataFeed.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m0_28 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="slice.Time.Date == new DateTime(2014, 06, 06)", span="75-75"];
m0_29 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="MarketOrder(contract.Symbol, 1)", span="77-77"];
m0_30 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="MarketOnCloseOrder(contract.Symbol, -1)", span="78-78"];
m0_31 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="55-55"];
m0_147 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", span="641-641"];
m0_192 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="FileSystemDataFeed.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="83-83"];
m0_141 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", span="241-241"];
m0_184 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", span="486-486"];
m0_185 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", file="FileSystemDataFeed.cs", label="_exitTriggered = true", span="488-488"];
m0_186 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", file="FileSystemDataFeed.cs", label="PurgeData()", span="489-489"];
m0_187 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", span="486-486"];
m0_53 [cluster="System.TimeSpan.FromMinutes(double)", file="FileSystemDataFeed.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m0_26 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", span="165-165"];
m0_27 [cluster="System.DateTime.DateTime()", file="FileSystemDataFeed.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m0_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", span="185-185"];
m0_32 [cluster="Unk.Count", file="FileSystemDataFeed.cs", label="Entry Unk.Count", span=""];
m0_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="_bridgeMax = _bridgeMax / _subscriptions", span="144-144"];
m0_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", span="234-234"];
m0_124 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", color=green, community=0, file="FileSystemDataFeed.cs", label="GetActiveStreams() == 0", prediction=0, span="392-392"];
m0_120 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i < subscriptions", span="384-384"];
m0_125 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", color=green, community=0, file="FileSystemDataFeed.cs", label="_endOfStreams = true", prediction=1, span="392-392"];
m0_126 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="Thread.Sleep(100)", span="393-393"];
m0_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var subscriptions = SubscriptionReaderManagers.Length", span="238-238"];
m0_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="ResetActivators()", span="246-246"];
m0_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="tradeBarIncrements = CalculateIncrement(includeTick: false)", span="249-249"];
m0_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="increment = CalculateIncrement(includeTick: true)", span="250-250"];
m0_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="Time.EachTradeableDay(_algorithm.Securities, _job.PeriodStart, _job.PeriodFinish)", span="253-253"];
m0_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var success = SubscriptionReaderManagers[i].RefreshSource(date)", span="265-265"];
m0_74 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="EndOfBridge[i] = false", span="269-269"];
m0_75 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="EndOfBridge[i] = true", span="271-271"];
m0_79 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var active = GetActiveStreams()", span="278-278"];
m0_80 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="bridgeFullCount > 0 && ((subscriptions - active) == bridgeZeroCount) && !_exitTriggered", span="282-282"];
m0_81 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="bridgeFullCount = (from bridge in Bridge where bridge.Count >= _bridgeMax select bridge).Count()", span="284-284"];
m0_82 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="bridgeZeroCount = (from bridge in Bridge where bridge.Count == 0 select bridge).Count()", span="285-285"];
m0_84 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label=_exitTriggered, span="289-289"];
m0_85 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="(frontier.Date == date.Date || frontier == date.Date.AddDays(1)) && !_exitTriggered", span="292-292"];
m0_90 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var manager = SubscriptionReaderManagers[i]", span="303-303"];
m0_91 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="manager.EndOfStream || EndOfBridge[i]", span="306-306"];
m0_92 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="EndOfBridge[i] = true", span="308-308"];
m0_93 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="activeStreams = GetActiveStreams()", span="309-309"];
m0_108 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="FillForwardFrontiers[i] = cache[i][0].Time", span="353-353"];
m0_109 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="Bridge[i].Enqueue(cache[i])", span="354-354"];
m0_110 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="ProcessFillForward(SubscriptionReaderManagers[i], i, tradeBarIncrements)", span="356-356"];
m0_112 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="LoadedDataFrontier = frontier", span="361-361"];
m0_116 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label=_exitTriggered, span="375-375"];
m0_117 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="Log.Trace(DataFeed + ''.Run(): Data Feed Completed.'')", span="379-379"];
m0_118 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="!EndOfBridges && !_exitTriggered", span="382-382"];
m0_121 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="Bridge[i].Count == 0 && SubscriptionReaderManagers[i].EndOfStream", span="386-386"];
m0_122 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="EndOfBridge[i] = true", span="388-388"];
m0_128 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i < Subscriptions.Count", span="397-397"];
m0_129 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="SubscriptionReaderManagers[i].Dispose()", span="399-399"];
m0_131 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="Log.Trace(DataFeed + ''.Run(): Ending Thread... '')", span="402-402"];
m0_132 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="IsActive = false", span="403-403"];
m0_119 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var i = 0", span="384-384"];
m0_123 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i++", span="384-384"];
m0_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var activeStreams = subscriptions", span="243-243"];
m0_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="long earlyBirdTicks = 0", span="237-237"];
m0_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var frontier = new DateTime()", span="240-240"];
m0_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="activeStreams = subscriptions", span="257-257"];
m0_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i < subscriptions", span="261-261"];
m0_86 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var cache = new List<BaseData>[subscriptions]", span="294-294"];
m0_89 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i < subscriptions", span="300-300"];
m0_106 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i < subscriptions", span="349-349"];
m0_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="frontier = date.Add(increment)", span="256-256"];
m0_114 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="frontier = (new DateTime(earlyBirdTicks)).RoundDown(increment) + increment", span="365-365"];
m0_115 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="frontier += increment", span="370-370"];
m0_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var i = 0", span="261-261"];
m0_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label=success, span="268-268"];
m0_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i++", span="261-261"];
m0_78 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var bridgeZeroCount = 0", span="277-277"];
m0_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var bridgeFullCount = 1", span="276-276"];
m0_83 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="Thread.Sleep(5)", span="286-286"];
m0_88 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var i = 0", span="300-300"];
m0_97 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="manager.Current.Time < frontier", span="324-324"];
m0_98 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="cache[i].Add(manager.Current)", span="326-326"];
m0_99 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="!manager.MoveNext()", span="328-328"];
m0_100 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="manager.Current != null", span="332-332"];
m0_101 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="earlyBirdTicks == 0 || manager.Current.Time.Ticks < earlyBirdTicks", span="334-334"];
m0_102 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="earlyBirdTicks = manager.Current.Time.Ticks", span="336-336"];
m0_96 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="cache[i] = new List<BaseData>()", span="320-320"];
m0_94 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="activeStreams == 0", span="310-310"];
m0_104 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="activeStreams == 0", span="341-341"];
m0_107 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="cache[i] != null && cache[i].Count > 0", span="351-351"];
m0_105 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var i = 0", span="349-349"];
m0_111 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i++", span="349-349"];
m0_95 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="frontier = frontier.Date + TimeSpan.FromDays(1)", span="312-312"];
m0_113 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="earlyBirdTicks > 0 && earlyBirdTicks > frontier.Ticks", span="363-363"];
m0_127 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var i = 0", span="397-397"];
m0_130 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i++", span="397-397"];
m0_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var increment = TimeSpan.FromDays(1)", span="242-242"];
m0_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="var tradeBarIncrements = TimeSpan.FromDays(1)", span="241-241"];
m0_87 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="earlyBirdTicks = 0", span="297-297"];
m0_103 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="i++", span="300-300"];
m0_133 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", span="234-234"];
m0_135 [cluster="System.DateTime.Add(System.TimeSpan)", file="FileSystemDataFeed.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m0_145 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="FileSystemDataFeed.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="271-271"];
m0_136 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", span="439-439"];
m0_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="_job = job", span="141-141"];
m0_188 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", span="496-496"];
m0_189 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", file="FileSystemDataFeed.cs", label=Bridge, span="498-498"];
m0_190 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", file="FileSystemDataFeed.cs", label="t.Clear()", span="500-500"];
m0_191 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", span="496-496"];
m0_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m0_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="increment > TimeSpan.FromMilliseconds(1) && includeTick", span="218-218"];
m0_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", span=""];
m0_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="increment > TimeSpan.FromMinutes(1)", span="202-202"];
m0_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="increment > TimeSpan.FromSeconds(1)", span="210-210"];
m0_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="increment = TimeSpan.FromHours(1)", span="196-196"];
m0_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="increment = TimeSpan.FromMinutes(1)", span="204-204"];
m0_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="increment = TimeSpan.FromSeconds(1)", span="212-212"];
m0_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="increment = new TimeSpan(0, 0, 0, 0, 1)", span="220-220"];
m0_36 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="91-91"];
m0_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="return increment;", span="225-225"];
m0_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="Resolution.Tick", span="217-217"];
m0_37 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="91-91"];
m0_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="Resolution.Minute", span="201-201"];
m0_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="Resolution.Second", span="209-209"];
m0_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", span="185-185"];
m0_51 [cluster="System.TimeSpan.FromDays(double)", file="FileSystemDataFeed.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m0_182 [cluster="QuantConnect.Data.BaseData.Clone(bool)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="189-189"];
m0_137 [cluster="System.Threading.Thread.Sleep(int)", file="FileSystemDataFeed.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="_algorithm = algorithm", span="142-142"];
m0_183 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", span="420-420"];
m0_55 [cluster="System.TimeSpan.FromMilliseconds(double)", file="FileSystemDataFeed.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m0_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FileSystemDataFeed.cs", label="_endOfStreams = false", span="143-143"];
m0_134 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", span="174-174"];
m0_142 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="FileSystemDataFeed.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m0_140 [cluster="System.Collections.Generic.List<T>.Add(T)", file="FileSystemDataFeed.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_181 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", span="409-409"];
m0_56 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="FileSystemDataFeed.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m0_146 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="122-122"];
m0_138 [cluster="System.DateTime.AddDays(double)", file="FileSystemDataFeed.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m0_54 [cluster="System.TimeSpan.FromSeconds(double)", file="FileSystemDataFeed.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m0_193 [file="FileSystemDataFeed.cs", label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", span=""];
m1_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="109-109"];
m1_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="109-109"];
m1_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="121-121"];
m1_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="121-121"];
m1_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="115-115"];
m1_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="115-115"];
m4_50 [cluster="string.Contains(string)", file="SubscriptionDataReader.cs", label="Entry string.Contains(string)", span="0-0"];
m4_57 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="147-147"];
m4_68 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="var writer = new LeanDataWriter(resolution, symbol, Globals.DataFolder, tickType)", span="149-149"];
m4_69 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="writer.Write(bars)", span="150-150"];
m4_70 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="147-147"];
m4_151 [cluster="Unk.Where", file="SubscriptionDataReader.cs", label="Entry Unk.Where", span=""];
m4_122 [cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", span="148-148"];
m4_32 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="73-73"];
m4_124 [cluster="System.Collections.Generic.List<T>.Clear()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m4_29 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Compression.UnGZip(string, string)", span="262-262"];
m4_53 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.LeanDataReader.Parse()", span="54-54"];
m4_81 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", span="177-177"];
m4_82 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var sr = new StreamReader(unzippedFile)", span="179-179"];
m4_106 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="yield return quoteTick;", span="228-228"];
m4_101 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="Log.Error($''KaikoDataConverter.ParseKaikoQuoteFile(): Data corrupted in file {unzippedFile}. Line {string.Join('' '', lineParts)}, Exception {ex}'')", span="211-211"];
m4_104 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var quoteTick = CreateQuoteTick(symbol, Time.UnixMillisecondTimeStampToDateTime(currentEpoch), currentEpochTicks)", span="226-226"];
m4_83 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var headerLine = sr.ReadLine()", span="181-181"];
m4_91 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="sr.Peek() >= 0", span="191-191"];
m4_92 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var line = sr.ReadLine()", span="194-194"];
m4_84 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var headerCsv = headerLine.ToCsv()", span="182-182"];
m4_85 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var typeColumn = headerCsv.FindIndex(x => x == ''type'')", span="183-183"];
m4_86 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var dateColumn = headerCsv.FindIndex(x => x == ''date'')", span="184-184"];
m4_87 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var priceColumn = headerCsv.FindIndex(x => x == ''price'')", span="185-185"];
m4_88 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var quantityColumn = headerCsv.FindIndex(x => x == ''amount'')", span="186-186"];
m4_102 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var currentTick = new KaikoTick\r\n                    {\r\n                        TickType = TickType.Quote,\r\n                        Time = Time.UnixMillisecondTimeStampToDateTime(tickEpoch),\r\n                        Quantity = quantity,\r\n                        Value = price,\r\n                        OrderDirection = lineParts[typeColumn]\r\n                    }", span="215-222"];
m4_95 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var tickEpoch = Convert.ToInt64(lineParts[dateColumn])", span="199-199"];
m4_99 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="price = ParseScientificNotationToDecimal(lineParts, priceColumn)", span="207-207"];
m4_89 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="long currentEpoch = 0", span="188-188"];
m4_98 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="quantity = ParseScientificNotationToDecimal(lineParts, quantityColumn)", span="206-206"];
m4_90 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var currentEpochTicks = new List<KaikoTick>()", span="189-189"];
m4_103 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="currentEpoch != tickEpoch", span="224-224"];
m4_107 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="currentEpochTicks.Clear()", span="230-230"];
m4_109 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="currentEpochTicks.Add(currentTick)", span="234-234"];
m4_93 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="line == null", span="195-195"];
m4_94 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var lineParts = line.Split(',')", span="197-197"];
m4_96 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="decimal quantity", span="201-201"];
m4_108 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="currentEpoch = tickEpoch", span="231-231"];
m4_97 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="decimal price", span="202-202"];
m4_100 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label=Exception, span="209-209"];
m4_105 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="quoteTick != null", span="228-228"];
m4_110 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", span="177-177"];
m4_116 [cluster="string.Split(params char[])", file="SubscriptionDataReader.cs", label="Entry string.Split(params char[])", span="0-0"];
m4_118 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", span="341-341"];
m4_196 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="SubscriptionDataReader.cs", label="var value = lineParts[column]", span="343-343"];
m4_199 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="SubscriptionDataReader.cs", label="return Convert.ToDecimal(lineParts[column], CultureInfo.InvariantCulture);", span="349-349"];
m4_197 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="SubscriptionDataReader.cs", label="value.Contains(''e'')", span="344-344"];
m4_198 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="SubscriptionDataReader.cs", label="return Decimal.Parse(value, NumberStyles.Float, CultureInfo.InvariantCulture);", span="346-346"];
m4_200 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", span="341-341"];
m4_56 [cluster="QuantConnect.ToolBox.TickAggregator.Flush()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.TickAggregator.Flush()", span="37-37"];
m4_193 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="300-300"];
m4_58 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="97-97"];
m4_59 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x as Tick", span="97-97"];
m4_60 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="97-97"];
m4_126 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="183-183"];
m4_129 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="184-184"];
m4_132 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="185-185"];
m4_135 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="186-186"];
m4_127 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x == ''type''", span="183-183"];
m4_128 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="183-183"];
m4_130 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x == ''date''", span="184-184"];
m4_131 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="184-184"];
m4_133 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x == ''price''", span="185-185"];
m4_134 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="185-185"];
m4_136 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x == ''amount''", span="186-186"];
m4_137 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="186-186"];
m4_156 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="249-249"];
m4_159 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="250-250"];
m4_162 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="254-254"];
m4_165 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="255-255"];
m4_157 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x.OrderDirection == ''a''", span="249-249"];
m4_158 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="249-249"];
m4_160 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x.Value", span="250-250"];
m4_161 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="250-250"];
m4_163 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x.OrderDirection == ''b''", span="254-254"];
m4_164 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="254-254"];
m4_166 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x.Value", span="255-255"];
m4_167 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="255-255"];
m4_187 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="298-298"];
m4_190 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="299-299"];
m4_188 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x == ''date''", span="298-298"];
m4_189 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="298-298"];
m4_191 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x == ''price''", span="299-299"];
m4_192 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="299-299"];
m4_194 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x == ''amount''", span="300-300"];
m4_195 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="300-300"];
m4_80 [cluster="QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", span="42-42"];
m4_120 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m4_123 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", span="246-246"];
m4_138 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="var bestAsk = currentEpcohTicks.Where(x => x.OrderDirection == ''a'')\r\n                                        .OrderBy(x => x.Value)\r\n                                        .FirstOrDefault()", span="249-251"];
m4_139 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="var bestBid = currentEpcohTicks.Where(x => x.OrderDirection == ''b'')\r\n                                        .OrderByDescending(x => x.Value)\r\n                                        .FirstOrDefault()", span="254-256"];
m4_140 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="bestAsk == null && bestBid == null", span="258-258"];
m4_146 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="bestAsk != null", span="277-277"];
m4_147 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="tick.AskPrice = bestAsk.Price", span="279-279"];
m4_148 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="tick.AskSize = bestAsk.Quantity", span="280-280"];
m4_143 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="bestBid != null", span="271-271"];
m4_144 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="tick.BidPrice = bestBid.Price", span="273-273"];
m4_145 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="tick.BidSize = bestBid.Quantity", span="274-274"];
m4_141 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="return null;", span="261-261"];
m4_149 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="return tick;", span="283-283"];
m4_150 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", span="246-246"];
m4_121 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick.KaikoTick()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick.KaikoTick()", span="357-357"];
m4_0 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", span="18-18"];
m4_1 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="args.Length != 3", span="20-20"];
m4_3 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="var market = args[0]", span="25-25"];
m4_4 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="var tickType = args[1] == ''quote'' ? TickType.Quote : TickType.Trade", span="26-26"];
m4_5 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="var fileLocation = args[2]", span="27-27"];
m4_2 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="throw new ArgumentException(''The arguments must be specified as [market] [tickType (quote/trade)] [kaiko raw data directory path]'');", span="22-22"];
m4_7 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="CreateCryptoTicks(fileLocation, market, tickType, ParseKaikoQuoteFile)", span="31-31"];
m4_8 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="AggregateTicksInAllResolutions(market, tickType)", span="32-32"];
m4_9 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="CreateCryptoTicks(fileLocation, market, tickType, ParseKaikoTradeFile)", span="36-36"];
m4_10 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="AggregateTicksInAllResolutions(market, tickType)", span="37-37"];
m4_6 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="tickType == TickType.Quote", span="29-29"];
m4_11 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.Main(string[])", span="18-18"];
m4_112 [cluster="System.IO.StreamReader.ReadLine()", file="SubscriptionDataReader.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m4_79 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="786-786"];
m4_25 [cluster="System.IO.Directory.EnumerateDirectories(string)", file="SubscriptionDataReader.cs", label="Entry System.IO.Directory.EnumerateDirectories(string)", span="0-0"];
m4_14 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", span="80-80"];
m4_34 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="var tickBasePath = Path.Combine(Globals.DataFolder, ''crypto'', market, ''tick'')", span="82-82"];
m4_37 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="var symbol = Symbol.Create(symbolDirectoryInfo.Name, SecurityType.Crypto, market)", span="87-87"];
m4_39 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="!tickDateFile.Contains(tickType.ToLower())", span="92-92"];
m4_40 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="var consolidators = GetDataAggregatorsForTickType(tickType)", span="94-94"];
m4_41 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="var reader = GetLeanDataTickReader(symbol, tickType, tickDateFile)", span="95-95"];
m4_46 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="WriteTradeTicksForResolution(symbol, consolidator.Resolution, tickType, consolidator.Flush())", span="107-107"];
m4_35 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Directory.EnumerateDirectories(tickBasePath)", span="84-84"];
m4_36 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="var symbolDirectoryInfo = new DirectoryInfo(tickDirectory)", span="86-86"];
m4_38 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Directory.EnumerateFiles(symbolDirectoryInfo.FullName)", span="89-89"];
m4_43 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label=consolidators, span="99-99"];
m4_45 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label=consolidators, span="105-105"];
m4_42 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="reader.Parse().Select(x => x as Tick)", span="97-97"];
m4_44 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="consolidator.Consolidator.Update(tickBar)", span="101-101"];
m4_47 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", span="80-80"];
m4_48 [cluster="System.IO.Path.Combine(string, string, string, string)", file="SubscriptionDataReader.cs", label="Entry System.IO.Path.Combine(string, string, string, string)", span="0-0"];
m4_152 [cluster="Unk.OrderBy", file="SubscriptionDataReader.cs", label="Entry Unk.OrderBy", span=""];
m4_201 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="SubscriptionDataReader.cs", label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m4_27 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m4_49 [cluster="System.Enum.ToLower()", file="SubscriptionDataReader.cs", label="Entry System.Enum.ToLower()", span="929-929"];
m4_26 [cluster="System.IO.DirectoryInfo.DirectoryInfo(string)", file="SubscriptionDataReader.cs", label="Entry System.IO.DirectoryInfo.DirectoryInfo(string)", span="0-0"];
m4_55 [cluster="Unk.Update", file="SubscriptionDataReader.cs", label="Entry Unk.Update", span=""];
m4_12 [cluster="System.ArgumentException.ArgumentException(string)", file="SubscriptionDataReader.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_31 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="SubscriptionDataReader.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m4_30 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m4_33 [cluster="System.IO.File.Delete(string)", file="SubscriptionDataReader.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m4_67 [cluster="QuantConnect.ToolBox.TradeTickAggregator.TradeTickAggregator(QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.TradeTickAggregator.TradeTickAggregator(QuantConnect.Resolution)", span="65-65"];
m4_154 [cluster="Unk.OrderByDescending", file="SubscriptionDataReader.cs", label="Entry Unk.OrderByDescending", span=""];
m4_153 [cluster="Unk.FirstOrDefault", file="SubscriptionDataReader.cs", label="Entry Unk.FirstOrDefault", span=""];
m4_111 [cluster="System.IO.StreamReader.StreamReader(string)", file="SubscriptionDataReader.cs", label="Entry System.IO.StreamReader.StreamReader(string)", span="0-0"];
m4_119 [cluster="string.Join(string, params string[])", file="SubscriptionDataReader.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m4_78 [cluster="SubscriptionDataConfig.cstr", file="SubscriptionDataReader.cs", label="Entry SubscriptionDataConfig.cstr", span=""];
m4_52 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", span="160-160"];
m4_71 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="SubscriptionDataReader.cs", label="Symbol sym", span="162-162"];
m4_74 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="SubscriptionDataReader.cs", label="var subscription = new SubscriptionDataConfig(typeof(Tick), symbol, Resolution.Tick,\r\n                DateTimeZone.Utc, DateTimeZone.Utc, false, false, false, false, type)", span="165-166"];
m4_75 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="SubscriptionDataReader.cs", label="LeanData.TryParsePath(tickDateFile, out sym, out date, out res)", span="167-167"];
m4_76 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="SubscriptionDataReader.cs", label="return new LeanDataReader(subscription, symbol, Resolution.Tick, date, Globals.DataFolder);", span="168-168"];
m4_72 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="SubscriptionDataReader.cs", label="DateTime date", span="163-163"];
m4_73 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="SubscriptionDataReader.cs", label="Resolution res", span="164-164"];
m4_77 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", span="160-160"];
m4_117 [cluster="System.Convert.ToInt64(string)", file="SubscriptionDataReader.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m4_125 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_13 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", span="48-48"];
m4_15 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="Directory.EnumerateDirectories(fileLocation)", span="50-50"];
m4_17 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="var symbol = Symbol.Create(symbolDirectoryInfo.Name, SecurityType.Crypto, market)", span="55-55"];
m4_21 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="var writer = new LeanDataWriter(Resolution.Tick, symbol, Globals.DataFolder, tickType)", span="65-65"];
m4_22 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="writer.Write(aggregateFunction(symbol, unzippedFile))", span="66-66"];
m4_16 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="var symbolDirectoryInfo = new DirectoryInfo(symbolFolder)", span="52-52"];
m4_18 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="Directory.EnumerateDirectories(symbolDirectoryInfo.FullName)", span="57-57"];
m4_19 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="Directory.EnumerateFiles(symbolMonthDirectory)", span="59-59"];
m4_20 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="var unzippedFile = Compression.UnGZip(tradeFile, symbolMonthDirectory)", span="62-62"];
m4_23 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="File.Delete(unzippedFile)", span="69-69"];
m4_24 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", span="48-48"];
m4_114 [cluster="System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", span="0-0"];
m4_28 [cluster="System.IO.Directory.EnumerateFiles(string)", file="SubscriptionDataReader.cs", label="Entry System.IO.Directory.EnumerateFiles(string)", span="0-0"];
m4_66 [cluster="QuantConnect.ToolBox.QuoteTickAggregator.QuoteTickAggregator(QuantConnect.Resolution)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.QuoteTickAggregator.QuoteTickAggregator(QuantConnect.Resolution)", span="48-48"];
m4_113 [cluster="string.ToCsv(int)", file="SubscriptionDataReader.cs", label="Entry string.ToCsv(int)", span="330-330"];
m4_51 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", span="118-118"];
m4_61 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="tickType == TickType.Quote", span="120-120"];
m4_62 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return new List<TickAggregator>\r\n                {\r\n                    new QuoteTickAggregator(Resolution.Second),\r\n                    new QuoteTickAggregator(Resolution.Minute),\r\n                    new QuoteTickAggregator(Resolution.Hour),\r\n                    new QuoteTickAggregator(Resolution.Daily),\r\n                };", span="122-128"];
m4_63 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="return new List<TickAggregator>\r\n            {\r\n                new TradeTickAggregator(Resolution.Second),\r\n                new TradeTickAggregator(Resolution.Minute),\r\n                new TradeTickAggregator(Resolution.Hour),\r\n                new TradeTickAggregator(Resolution.Daily),\r\n            };", span="131-137"];
m4_64 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", span="118-118"];
m4_155 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m4_168 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", span="292-292"];
m4_169 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var sr = new StreamReader(unzippedFile)", span="294-294"];
m4_185 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="yield return new Tick\r\n                    {\r\n                        Symbol = symbol,\r\n                        TickType = TickType.Trade,\r\n                        Time = Time.UnixMillisecondTimeStampToDateTime(Convert.ToInt64(lineParts[dateColumn])),\r\n                        Quantity = quantity,\r\n                        Value = price\r\n                    };", span="323-330"];
m4_184 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="Log.Error($''KaikoDataConverter.ParseKaikoTradeFile(): Data corrupted in file {unzippedFile}. Line {string.Join('' '', lineParts)}, Exception {ex}'')", span="319-319"];
m4_170 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var headerLine = sr.ReadLine()", span="296-296"];
m4_175 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="sr.Peek() >= 0", span="302-302"];
m4_176 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var line = sr.ReadLine()", span="304-304"];
m4_171 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var headerCsv = headerLine.ToCsv()", span="297-297"];
m4_172 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var dateColumn = headerCsv.FindIndex(x => x == ''date'')", span="298-298"];
m4_173 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var priceColumn = headerCsv.FindIndex(x => x == ''price'')", span="299-299"];
m4_174 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var quantityColumn = headerCsv.FindIndex(x => x == ''amount'')", span="300-300"];
m4_182 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="price = ParseScientificNotationToDecimal(lineParts, priceColumn)", span="315-315"];
m4_181 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="quantity = ParseScientificNotationToDecimal(lineParts, quantityColumn)", span="314-314"];
m4_177 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="line == null", span="305-305"];
m4_178 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="var lineParts = line.Split(',')", span="307-307"];
m4_179 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="decimal quantity", span="309-309"];
m4_180 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="decimal price", span="310-310"];
m4_183 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label=Exception, span="317-317"];
m4_186 [cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", span="292-292"];
m4_54 [cluster="Unk.Select", file="SubscriptionDataReader.cs", label="Entry Unk.Select", span=""];
m4_115 [cluster="System.IO.StreamReader.Peek()", file="SubscriptionDataReader.cs", label="Entry System.IO.StreamReader.Peek()", span="0-0"];
m4_202 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="SubscriptionDataReader.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
n409 -> n58  [color=darkseagreen4, key=1, label=V, style=dashed];
n410 -> n66  [color=darkseagreen4, key=1, label=TKey, style=dashed];
n411 -> n66  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue>", style=dashed];
n412 -> n70  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
n412 -> n73  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
n413 -> n73  [color=darkseagreen4, key=1, label=TKey, style=dashed];
n414 -> n73  [color=darkseagreen4, key=1, label="System.Lazy<TValue>", style=dashed];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<T>", style=dashed];
n1 -> n5  [color=darkseagreen4, key=1, label=oItem, style=dashed];
n4 -> n4  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n11  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n12  [color=darkseagreen4, key=1, label=bytes, style=dashed];
n16 -> n18  [color=darkseagreen4, key=1, label="System.Collections.Concurrent.ConcurrentQueue<T>", style=dashed];
n21 -> n24  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
n28 -> n32  [color=darkseagreen4, key=1, label=builder, style=dashed];
n28 -> n33  [color=darkseagreen4, key=1, label=builder, style=dashed];
n44 -> n47  [color=darkseagreen4, key=1, label=hash, style=dashed];
n44 -> n48  [color=darkseagreen4, key=1, label=hash, style=dashed];
n53 -> n58  [color=darkseagreen4, key=1, label=V, style=dashed];
n54 -> n57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n60 -> n66  [color=darkseagreen4, key=1, label=TKey, style=dashed];
n60 -> n70  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
n60 -> n73  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue, TValue>", style=dashed];
n61 -> n69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n69 -> n73  [color=darkseagreen4, key=1, label=TKey, style=dashed];
n76 -> n78  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<TKey, TCollection>", style=dashed];
n76 -> n80  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<TKey, TCollection>", style=dashed];
n76 -> n81  [color=darkseagreen4, key=1, label=TElement, style=dashed];
n79 -> n81  [color=darkseagreen4, key=1, label=list, style=dashed];
n87 -> n91  [color=darkseagreen4, key=1, label=double, style=dashed];
n98 -> n102  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n107 -> n109  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n115 -> n118  [color=darkseagreen4, key=1, label=double, style=dashed];
n115 -> n120  [color=darkseagreen4, key=1, label=double, style=dashed];
n124 -> n130  [color=darkseagreen4, key=1, label=string, style=dashed];
n129 -> n132  [color=darkseagreen4, key=1, label=length, style=dashed];
n133 -> n137  [color=darkseagreen4, key=1, label=ch, style=dashed];
n126 -> n139  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
n126 -> n142  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
n140 -> n142  [color=darkseagreen4, key=1, label=lo, style=dashed];
n127 -> n142  [color=darkseagreen4, key=1, label=hasDecimals, style=dashed];
n139 -> n139  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
n139 -> n142  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
n128 -> n130  [color=darkseagreen4, key=1, label=index, style=dashed];
n128 -> n131  [color=darkseagreen4, key=1, label=index, style=dashed];
n128 -> n132  [color=darkseagreen4, key=1, label=index, style=dashed];
n131 -> n131  [color=darkseagreen4, key=1, label=index, style=dashed];
n131 -> n132  [color=darkseagreen4, key=1, label=index, style=dashed];
n135 -> n142  [color=darkseagreen4, key=1, label=hasDecimals, style=dashed];
n136 -> n142  [color=darkseagreen4, key=1, label=decimalPlaces, style=dashed];
n146 -> n149  [color=darkseagreen4, key=1, label=string, style=dashed];
n147 -> n152  [color=darkseagreen4, key=1, label=value, style=dashed];
n150 -> n152  [color=darkseagreen4, key=1, label=value, style=dashed];
n148 -> n151  [color=darkseagreen4, key=1, label=i, style=dashed];
n151 -> n151  [color=darkseagreen4, key=1, label=i, style=dashed];
n154 -> n157  [color=darkseagreen4, key=1, label=string, style=dashed];
n155 -> n160  [color=darkseagreen4, key=1, label=value, style=dashed];
n158 -> n160  [color=darkseagreen4, key=1, label=value, style=dashed];
n156 -> n159  [color=darkseagreen4, key=1, label=i, style=dashed];
n159 -> n159  [color=darkseagreen4, key=1, label=i, style=dashed];
n162 -> n166  [color=darkseagreen4, key=1, label=string, style=dashed];
n162 -> n167  [color=darkseagreen4, key=1, label=string, style=dashed];
n162 -> n170  [color=darkseagreen4, key=1, label=string, style=dashed];
n162 -> n175  [color=darkseagreen4, key=1, label=string, style=dashed];
n163 -> n168  [color=darkseagreen4, key=1, label=last, style=dashed];
n163 -> n170  [color=darkseagreen4, key=1, label=last, style=dashed];
n163 -> n173  [color=darkseagreen4, key=1, label=last, style=dashed];
n163 -> n175  [color=darkseagreen4, key=1, label=last, style=dashed];
n164 -> n170  [color=darkseagreen4, key=1, label=csv, style=dashed];
n164 -> n175  [color=darkseagreen4, key=1, label=csv, style=dashed];
n164 -> n176  [color=darkseagreen4, key=1, label=csv, style=dashed];
n165 -> n167  [color=darkseagreen4, key=1, label=i, style=dashed];
n165 -> n170  [color=darkseagreen4, key=1, label=i, style=dashed];
n165 -> n172  [color=darkseagreen4, key=1, label=i, style=dashed];
n171 -> n173  [color=darkseagreen4, key=1, label=last, style=dashed];
n171 -> n175  [color=darkseagreen4, key=1, label=last, style=dashed];
n172 -> n172  [color=darkseagreen4, key=1, label=i, style=dashed];
n182 -> n187  [color=darkseagreen4, key=1, label=string, style=dashed];
n182 -> n188  [color=darkseagreen4, key=1, label=string, style=dashed];
n182 -> n193  [color=darkseagreen4, key=1, label=string, style=dashed];
n182 -> n196  [color=darkseagreen4, key=1, label=string, style=dashed];
n182 -> n197  [color=darkseagreen4, key=1, label=string, style=dashed];
n183 -> n193  [color=darkseagreen4, key=1, label=csv, style=dashed];
n183 -> n197  [color=darkseagreen4, key=1, label=csv, style=dashed];
n183 -> n198  [color=darkseagreen4, key=1, label=csv, style=dashed];
n184 -> n193  [color=darkseagreen4, key=1, label=last, style=dashed];
n184 -> n196  [color=darkseagreen4, key=1, label=last, style=dashed];
n184 -> n197  [color=darkseagreen4, key=1, label=last, style=dashed];
n186 -> n188  [color=darkseagreen4, key=1, label=i, style=dashed];
n186 -> n193  [color=darkseagreen4, key=1, label=i, style=dashed];
n186 -> n195  [color=darkseagreen4, key=1, label=i, style=dashed];
n190 -> n192  [color=darkseagreen4, key=1, label=textDataField, style=dashed];
n194 -> n196  [color=darkseagreen4, key=1, label=last, style=dashed];
n194 -> n197  [color=darkseagreen4, key=1, label=last, style=dashed];
n195 -> n195  [color=darkseagreen4, key=1, label=i, style=dashed];
n210 -> n212  [color=darkseagreen4, key=1, label=ext, style=dashed];
n210 -> n214  [color=darkseagreen4, key=1, label=ext, style=dashed];
n219 -> n222  [color=darkseagreen4, key=1, label=string, style=dashed];
n220 -> n225  [color=darkseagreen4, key=1, label=stream, style=dashed];
n221 -> n223  [color=darkseagreen4, key=1, label=writer, style=dashed];
n231 -> n233  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n231 -> n234  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n234 -> n234  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n242 -> n244  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n242 -> n245  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n245 -> n245  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n248 -> n250  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n248 -> n252  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n251 -> n254  [color=darkseagreen4, key=1, label=rounded, style=dashed];
n253 -> n254  [color=darkseagreen4, key=1, label=rounded, style=dashed];
n263 -> n265  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n263 -> n266  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n266 -> n266  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n268 -> n270  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n268 -> n271  [color=darkseagreen4, key=1, label=bool, style=dashed];
n268 -> n272  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n268 -> n273  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n285 -> n287  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n285 -> n288  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n294 -> n296  [color=darkseagreen4, key=1, label="System.Timers.Timer", style=dashed];
n300 -> n303  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n300 -> n305  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n309 -> n312  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n309 -> n315  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n321 -> n323  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n322 -> n327  [color=darkseagreen4, key=1, label=name, style=dashed];
n326 -> n333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n361 -> n363  [color=darkseagreen4, key=1, label=string, style=dashed];
n361 -> n364  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n361 -> n365  [color=darkseagreen4, key=1, label=string, style=dashed];
n361 -> n370  [color=darkseagreen4, key=1, label=string, style=dashed];
n383 -> n383  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n386 -> n386  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n389 -> n391  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
n394 -> n399  [color=darkseagreen4, key=1, label=string, style=dashed];
n398 -> n399  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_19 -> m0_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m0_19 -> m0_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m0_19 -> m0_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m0_19 -> m0_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m0_22 -> m0_22  [color=darkseagreen4, key=1, label=chain, style=dashed];
m0_22 -> m0_24  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_22 -> m0_26  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_22 -> m0_29  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_22 -> m0_30  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_17 -> m0_20  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_17 -> m0_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_17 -> m0_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_17 -> m0_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_23 -> m0_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_34 -> m0_38  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_34 -> m0_41  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_34 -> m0_44  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_34 -> m0_47  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_34 -> m0_49  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_143 -> m0_152  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_143 -> m0_162  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_143 -> m0_167  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_143 -> m0_178  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_143 -> m0_154  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m0_143 -> m0_156  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m0_143 -> m0_168  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m0_143 -> m0_171  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m0_143 -> m0_172  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m0_165 -> m0_168  [color=darkseagreen4, key=1, label=date, style=dashed];
m0_165 -> m0_172  [color=darkseagreen4, key=1, label=date, style=dashed];
m0_151 -> m0_154  [color=darkseagreen4, key=1, label=current, style=dashed];
m0_151 -> m0_166  [color=darkseagreen4, key=1, label=current, style=dashed];
m0_157 -> m0_162  [color=darkseagreen4, key=1, label=cache, style=dashed];
m0_157 -> m0_161  [color=darkseagreen4, key=1, label=cache, style=dashed];
m0_173 -> m0_178  [color=darkseagreen4, key=1, label=cache, style=dashed];
m0_173 -> m0_177  [color=darkseagreen4, key=1, label=cache, style=dashed];
m0_174 -> m0_177  [color=darkseagreen4, key=1, label=fillforward, style=dashed];
m0_158 -> m0_161  [color=darkseagreen4, key=1, label=fillforward, style=dashed];
m0_29 -> m0_29  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_33 -> m0_47  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_59 -> m0_120  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m0_59 -> m0_71  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m0_59 -> m0_80  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m0_59 -> m0_89  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m0_59 -> m0_106  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m0_65 -> m0_110  [color=darkseagreen4, key=1, label=tradeBarIncrements, style=dashed];
m0_67 -> m0_85  [color=darkseagreen4, key=1, label=date, style=dashed];
m0_90 -> m0_97  [color=darkseagreen4, key=1, label=manager, style=dashed];
m0_90 -> m0_98  [color=darkseagreen4, key=1, label=manager, style=dashed];
m0_90 -> m0_99  [color=darkseagreen4, key=1, label=manager, style=dashed];
m0_90 -> m0_100  [color=darkseagreen4, key=1, label=manager, style=dashed];
m0_90 -> m0_101  [color=darkseagreen4, key=1, label=manager, style=dashed];
m0_93 -> m0_104  [color=darkseagreen4, key=1, label=activeStreams, style=dashed];
m0_119 -> m0_121  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_119 -> m0_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_123 -> m0_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_104  [color=darkseagreen4, key=1, label=activeStreams, style=dashed];
m0_86 -> m0_109  [color=darkseagreen4, key=1, label=cache, style=dashed];
m0_86 -> m0_98  [color=darkseagreen4, key=1, label=cache, style=dashed];
m0_86 -> m0_107  [color=darkseagreen4, key=1, label=cache, style=dashed];
m0_68 -> m0_85  [color=darkseagreen4, key=1, label=frontier, style=dashed];
m0_68 -> m0_97  [color=darkseagreen4, key=1, label=frontier, style=dashed];
m0_68 -> m0_113  [color=darkseagreen4, key=1, label=frontier, style=dashed];
m0_70 -> m0_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_76 -> m0_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label=bridgeZeroCount, style=dashed];
m0_77 -> m0_80  [color=darkseagreen4, key=1, label=bridgeFullCount, style=dashed];
m0_88 -> m0_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_88 -> m0_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_88 -> m0_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_102 -> m0_113  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m0_105 -> m0_109  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_105 -> m0_110  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_105 -> m0_107  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_105 -> m0_111  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_111 -> m0_111  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_95 -> m0_97  [color=darkseagreen4, key=1, label=frontier, style=dashed];
m0_95 -> m0_113  [color=darkseagreen4, key=1, label=frontier, style=dashed];
m0_127 -> m0_129  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_127 -> m0_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_130 -> m0_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_87 -> m0_101  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m0_87 -> m0_113  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m0_103 -> m0_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_38 -> m0_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m0_38 -> m0_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m0_38 -> m0_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m0_39 -> m0_47  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_39 -> m0_44  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_39 -> m0_49  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_42 -> m0_47  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_42 -> m0_49  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_45 -> m0_49  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_48 -> m0_49  [color=darkseagreen4, key=1, label=increment, style=dashed];
m0_193 -> m0_124  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_109  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_116  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_117  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_129  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_131  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_152  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_162  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_167  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_178  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_186  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m0_193 -> m0_189  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", style=dashed];
m4_57 -> m4_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.BaseData>", style=dashed];
m4_81 -> m4_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_82 -> m4_91  [color=darkseagreen4, key=1, label=sr, style=dashed];
m4_104 -> m4_106  [color=darkseagreen4, key=1, label=quoteTick, style=dashed];
m4_85 -> m4_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_86 -> m4_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_87 -> m4_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_88 -> m4_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_102 -> m4_109  [color=darkseagreen4, key=1, label=currentTick, style=dashed];
m4_95 -> m4_103  [color=darkseagreen4, key=1, label=tickEpoch, style=dashed];
m4_89 -> m4_103  [color=darkseagreen4, key=1, label=currentEpoch, style=dashed];
m4_90 -> m4_107  [color=darkseagreen4, key=1, label=currentEpochTicks, style=dashed];
m4_90 -> m4_109  [color=darkseagreen4, key=1, label=currentEpochTicks, style=dashed];
m4_94 -> m4_101  [color=darkseagreen4, key=1, label=lineParts, style=dashed];
m4_118 -> m4_199  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_196 -> m4_198  [color=darkseagreen4, key=1, label=value, style=dashed];
m4_138 -> m4_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_138 -> m4_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_138 -> m4_140  [color=darkseagreen4, key=1, label=bestAsk, style=dashed];
m4_138 -> m4_146  [color=darkseagreen4, key=1, label=bestAsk, style=dashed];
m4_139 -> m4_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_139 -> m4_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_139 -> m4_143  [color=darkseagreen4, key=1, label=bestBid, style=dashed];
m4_3 -> m4_7  [color=darkseagreen4, key=1, label=market, style=dashed];
m4_3 -> m4_8  [color=darkseagreen4, key=1, label=market, style=dashed];
m4_3 -> m4_9  [color=darkseagreen4, key=1, label=market, style=dashed];
m4_3 -> m4_10  [color=darkseagreen4, key=1, label=market, style=dashed];
m4_4 -> m4_6  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m4_4 -> m4_7  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m4_4 -> m4_8  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m4_4 -> m4_9  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m4_4 -> m4_10  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m4_5 -> m4_7  [color=darkseagreen4, key=1, label=fileLocation, style=dashed];
m4_5 -> m4_9  [color=darkseagreen4, key=1, label=fileLocation, style=dashed];
m4_14 -> m4_39  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m4_14 -> m4_46  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m4_37 -> m4_46  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_40 -> m4_43  [color=darkseagreen4, key=1, label=consolidators, style=dashed];
m4_40 -> m4_45  [color=darkseagreen4, key=1, label=consolidators, style=dashed];
m4_36 -> m4_38  [color=darkseagreen4, key=1, label=symbolDirectoryInfo, style=dashed];
m4_42 -> m4_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_44  [color=darkseagreen4, key=1, label=tickBar, style=dashed];
m4_52 -> m4_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_52 -> m4_76  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_74 -> m4_76  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m4_13 -> m4_22  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>", style=dashed];
m4_17 -> m4_22  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_16 -> m4_18  [color=darkseagreen4, key=1, label=symbolDirectoryInfo, style=dashed];
m4_20 -> m4_22  [color=darkseagreen4, key=1, label=unzippedFile, style=dashed];
m4_20 -> m4_23  [color=darkseagreen4, key=1, label=unzippedFile, style=dashed];
m4_168 -> m4_184  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_169 -> m4_175  [color=darkseagreen4, key=1, label=sr, style=dashed];
m4_172 -> m4_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_173 -> m4_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_174 -> m4_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_178 -> m4_184  [color=darkseagreen4, key=1, label=lineParts, style=dashed];
}
