digraph  {
n17 [label="QuantConnect.Indicators.CommodityChannelIndex", span=""];
n0 [label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)"];
n1 [label="_period = period", span="58-58", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)"];
n2 [label="MovingAverageType = movingAverageType", span="59-59", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)"];
n3 [label="_typicalPriceAverage = movingAverageType.AsIndicator(name + ''_TypicalPriceAvg'', period)", span="60-60", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)"];
n4 [label="_typicalPriceMeanDeviation = new MeanAbsoluteDeviation(name + ''_TypicalPriceMAD'', period)", span="61-61", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)"];
n6 [label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="54-54", cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)"];
n5 [label="Exit QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)"];
n7 [label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="42-42", cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)"];
n8 [label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", span="64-64", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)"];
n9 [label="Exit QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", span="64-64", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)"];
n10 [label="Entry QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="81-81", cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n11 [label="decimal typicalPrice = (input.High + input.Low + input.Close) / 3.0m", span="82-82", cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n12 [label="_typicalPriceAverage.Update(input.Time, typicalPrice)", span="84-84", cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n13 [label="_typicalPriceMeanDeviation.Update(input.Time, typicalPrice)", span="85-85", cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n14 [label="return (typicalPrice - _typicalPriceAverage.Current) / (_k * _typicalPriceMeanDeviation.Current);", span="87-87", cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
n16 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="33-33", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)"];
n15 [label="Exit QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="81-81", cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)"];
m1_10 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="MeanAbsoluteDeviation.cs"];
m1_5 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="MeanAbsoluteDeviation.cs"];
m1_8 [label="return new SubscriptionDataConfig(typeof(TradeBar), Symbol.Create(''BTCUSD'', SecurityType.Crypto, Market.GDAX), Resolution.Minute, TimeZones.Utc, TimeZones.Utc, \r\n                false, true, false);", span="21-22", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="MeanAbsoluteDeviation.cs"];
m1_9 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="MeanAbsoluteDeviation.cs"];
m1_20 [label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49", cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="MeanAbsoluteDeviation.cs"];
m1_21 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="MeanAbsoluteDeviation.cs"];
m1_22 [label="MessageReceivedEventArgs args = new MessageReceivedEventArgs(json)", span="34-34", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="MeanAbsoluteDeviation.cs"];
m1_23 [label="return args;", span="36-36", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="MeanAbsoluteDeviation.cs"];
m1_24 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="MeanAbsoluteDeviation.cs"];
m1_4 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="MeanAbsoluteDeviation.cs"];
m1_25 [label="Entry MessageReceivedEventArgs.cstr", span="", cluster="MessageReceivedEventArgs.cstr", file="MeanAbsoluteDeviation.cs"];
m1_7 [label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70", cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="MeanAbsoluteDeviation.cs"];
m1_12 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs"];
m1_13 [label="var order = new Orders.MarketOrder { BrokerId = new List<string> { brokerId }, Quantity = quantity, Id = id }", span="27-27", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs"];
m1_14 [label="unit.CachedOrderIDs.TryAdd(1, order)", span="28-28", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs"];
m1_15 [label="unit.FillSplit.TryAdd(id, new GDAXFill(order))", span="29-29", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs"];
m1_16 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs"];
m1_6 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="MeanAbsoluteDeviation.cs"];
m1_0 [label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="13-13", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="MeanAbsoluteDeviation.cs"];
m1_1 [label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.Utc), CreateConfig(), new Cash(CashBook.AccountCurrency, 1000, price), \r\n                new SymbolProperties(''BTCUSD'', CashBook.AccountCurrency, 1, 1, 0.01m));", span="15-16", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="MeanAbsoluteDeviation.cs"];
m1_2 [label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="13-13", cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="MeanAbsoluteDeviation.cs"];
m1_3 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="MeanAbsoluteDeviation.cs"];
m1_18 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MeanAbsoluteDeviation.cs"];
m1_19 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="MeanAbsoluteDeviation.cs"];
m1_11 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="MeanAbsoluteDeviation.cs"];
m1_17 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28", cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MeanAbsoluteDeviation.cs"];
m2_17 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="MeanAbsoluteDeviationTests.cs"];
m2_0 [label="Entry QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", span="23-23", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_1 [label="var std = new MeanAbsoluteDeviation(3)", span="26-26", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_2 [label="var reference = DateTime.MinValue", span="27-27", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_3 [label="std.Update(reference.AddDays(1), 1m)", span="29-29", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_4 [label="Assert.AreEqual(0m, std.Current.Value)", span="30-30", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_5 [label="std.Update(reference.AddDays(2), -1m)", span="32-32", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_6 [label="Assert.AreEqual(1m, std.Current.Value)", span="33-33", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_7 [label="std.Update(reference.AddDays(3), 1m)", span="35-35", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_8 [label="Assert.AreEqual(0.888888888888889m, std.Current.Value)", span="36-36", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", color=red, community=0, file="MeanAbsoluteDeviationTests.cs"];
m2_9 [label="std.Update(reference.AddDays(4), -2m)", span="38-38", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_10 [label="Assert.AreEqual(1.11111111111111m, std.Current.Value)", span="39-39", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", color=red, community=0, file="MeanAbsoluteDeviationTests.cs"];
m2_11 [label="std.Update(reference.AddDays(5), 3m)", span="41-41", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_12 [label="Assert.AreEqual(1.77777777777778m, std.Current.Value)", span="42-42", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", color=red, community=0, file="MeanAbsoluteDeviationTests.cs"];
m2_13 [label="Exit QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", span="23-23", cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs"];
m2_14 [label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", span="31-31", cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", file="MeanAbsoluteDeviationTests.cs"];
m2_15 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="MeanAbsoluteDeviationTests.cs"];
n17 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.CommodityChannelIndex"];
n17 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.CommodityChannelIndex"];
n17 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.CommodityChannelIndex"];
n17 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.CommodityChannelIndex"];
n17 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.CommodityChannelIndex"];
n17 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.CommodityChannelIndex"];
n17 -> n14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.CommodityChannelIndex"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.MovingAverageType"];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=string];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n6  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n7  [key=2, style=dotted];
n5 -> n0  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n9 -> n8  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
n10 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=1, style=dashed, color=darkseagreen4, label=typicalPrice];
n11 -> n14  [key=1, style=dashed, color=darkseagreen4, label=typicalPrice];
n12 -> n13  [key=0, style=solid];
n12 -> n16  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n16  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n15 -> n10  [key=0, style=bold, color=blue];
m1_5 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=2, style=dotted];
m1_8 -> m1_11  [key=2, style=dotted];
m1_9 -> m1_5  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_21  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m1_12 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage"];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_17  [key=2, style=dotted];
m1_13 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=order];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_19  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_12  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_14  [key=2, style=dotted];
m2_1 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=std];
m2_1 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=std];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=std];
m2_1 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=std];
m2_1 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=std];
m2_1 -> m2_8  [key=1, style=dashed, color=red, label=std];
m2_1 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=std];
m2_1 -> m2_10  [key=1, style=dashed, color=red, label=std];
m2_1 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=std];
m2_1 -> m2_12  [key=1, style=dashed, color=red, label=std];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_15  [key=2, style=dotted];
m2_3 -> n16  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_17  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_15  [key=2, style=dotted];
m2_5 -> n16  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_17  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid, color=red];
m2_7 -> m2_15  [key=2, style=dotted];
m2_7 -> n16  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid, color=red];
m2_8 -> m2_17  [key=2, style=dotted, color=red];
m2_9 -> m2_10  [key=0, style=solid, color=red];
m2_9 -> m2_15  [key=2, style=dotted];
m2_9 -> n16  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid, color=red];
m2_10 -> m2_17  [key=2, style=dotted, color=red];
m2_11 -> m2_12  [key=0, style=solid, color=red];
m2_11 -> m2_15  [key=2, style=dotted];
m2_11 -> n16  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid, color=red];
m2_12 -> m2_17  [key=2, style=dotted, color=red];
m2_13 -> m2_0  [key=0, style=bold, color=blue];
}
