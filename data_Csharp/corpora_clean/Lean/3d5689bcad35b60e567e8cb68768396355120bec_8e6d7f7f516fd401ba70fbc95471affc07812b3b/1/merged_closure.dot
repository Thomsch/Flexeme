digraph  {
n17 [label="QuantConnect.Indicators.CommodityChannelIndex", span=""];
n0 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55"];
n1 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", label="_period = period", span="58-58"];
n2 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", label="MovingAverageType = movingAverageType", span="59-59"];
n3 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", label="_typicalPriceAverage = movingAverageType.AsIndicator(name + ''_TypicalPriceAvg'', period)", span="60-60"];
n4 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", label="_typicalPriceMeanDeviation = new MeanAbsoluteDeviation(name + ''_TypicalPriceMAD'', period)", span="61-61"];
n6 [cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="54-54"];
n5 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", label="Exit QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55"];
n7 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="42-42"];
n8 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", span="64-64"];
n9 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", label="Exit QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(int, QuantConnect.Indicators.MovingAverageType)", span="64-64"];
n10 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="Entry QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="81-81"];
n11 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="decimal typicalPrice = (input.High + input.Low + input.Close) / 3.0m", span="82-82"];
n12 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="_typicalPriceAverage.Update(input.Time, typicalPrice)", span="84-84"];
n13 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="_typicalPriceMeanDeviation.Update(input.Time, typicalPrice)", span="85-85"];
n14 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="return (typicalPrice - _typicalPriceAverage.Current) / (_k * _typicalPriceMeanDeviation.Current);", span="87-87"];
n16 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="33-33"];
n15 [cluster="QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", label="Exit QuantConnect.Indicators.CommodityChannelIndex.ComputeNextValue(QuantConnect.Data.Market.TradeBar)", span="81-81"];
m1_10 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m1_5 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19"];
m1_8 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="MeanAbsoluteDeviation.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbol.Create(''BTCUSD'', SecurityType.Crypto, Market.GDAX), Resolution.Minute, TimeZones.Utc, TimeZones.Utc, \r\n                false, true, false);", span="21-22"];
m1_9 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", file="MeanAbsoluteDeviation.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig()", span="19-19"];
m1_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m1_21 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32"];
m1_22 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="MeanAbsoluteDeviation.cs", label="MessageReceivedEventArgs args = new MessageReceivedEventArgs(json)", span="34-34"];
m1_23 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="MeanAbsoluteDeviation.cs", label="return args;", span="36-36"];
m1_24 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="MeanAbsoluteDeviation.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="32-32"];
m1_4 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m1_25 [cluster="MessageReceivedEventArgs.cstr", file="MeanAbsoluteDeviation.cs", label="Entry MessageReceivedEventArgs.cstr", span=""];
m1_7 [cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70"];
m1_12 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25"];
m1_13 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs", label="var order = new Orders.MarketOrder { BrokerId = new List<string> { brokerId }, Quantity = quantity, Id = id }", span="27-27"];
m1_14 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs", label="unit.CachedOrderIDs.TryAdd(1, order)", span="28-28"];
m1_15 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs", label="unit.FillSplit.TryAdd(id, new GDAXFill(order))", span="29-29"];
m1_16 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="MeanAbsoluteDeviation.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="25-25"];
m1_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m1_0 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="13-13"];
m1_1 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="MeanAbsoluteDeviation.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.Utc), CreateConfig(), new Cash(CashBook.AccountCurrency, 1000, price), \r\n                new SymbolProperties(''BTCUSD'', CashBook.AccountCurrency, 1, 1, 0.01m));", span="15-16"];
m1_2 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", file="MeanAbsoluteDeviation.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal)", span="13-13"];
m1_3 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317"];
m1_18 [cluster="System.Collections.Generic.List<T>.List()", file="MeanAbsoluteDeviation.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_19 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="MeanAbsoluteDeviation.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m1_11 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m1_17 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MeanAbsoluteDeviation.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m2_17 [cluster="Unk.AreEqual", file="MeanAbsoluteDeviationTests.cs", label="Entry Unk.AreEqual", span=""];
m2_0 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="Entry QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", span="23-23"];
m2_1 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="var std = new MeanAbsoluteDeviation(3)", span="26-26"];
m2_2 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="var reference = DateTime.MinValue", span="27-27"];
m2_3 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="std.Update(reference.AddDays(1), 1m)", span="29-29"];
m2_4 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="Assert.AreEqual(0m, std.Current.Value)", span="30-30"];
m2_5 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="std.Update(reference.AddDays(2), -1m)", span="32-32"];
m2_6 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="Assert.AreEqual(1m, std.Current.Value)", span="33-33"];
m2_7 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="std.Update(reference.AddDays(3), 1m)", span="35-35"];
m2_9 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="std.Update(reference.AddDays(4), -2m)", span="38-38"];
m2_11 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="std.Update(reference.AddDays(5), 3m)", span="41-41"];
m2_13 [cluster="QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", file="MeanAbsoluteDeviationTests.cs", label="Exit QuantConnect.Tests.Indicators.MeanAbsoluteDeviationTests.ComputesCorrectly()", span="23-23"];
m2_14 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", file="MeanAbsoluteDeviationTests.cs", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(int)", span="31-31"];
m2_15 [cluster="System.DateTime.AddDays(double)", file="MeanAbsoluteDeviationTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
n17 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
n17 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
n17 -> n14  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CommodityChannelIndex", style=dashed];
n10 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
n10 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
n11 -> n13  [color=darkseagreen4, key=1, label=typicalPrice, style=dashed];
n11 -> n14  [color=darkseagreen4, key=1, label=typicalPrice, style=dashed];
m1_12 -> m1_14  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_12 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=std, style=dashed];
m2_1 -> m2_4  [color=darkseagreen4, key=1, label=std, style=dashed];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=std, style=dashed];
m2_1 -> m2_6  [color=darkseagreen4, key=1, label=std, style=dashed];
m2_1 -> m2_7  [color=darkseagreen4, key=1, label=std, style=dashed];
m2_1 -> m2_9  [color=darkseagreen4, key=1, label=std, style=dashed];
m2_1 -> m2_11  [color=darkseagreen4, key=1, label=std, style=dashed];
m2_2 -> m2_5  [color=darkseagreen4, key=1, label=reference, style=dashed];
m2_2 -> m2_7  [color=darkseagreen4, key=1, label=reference, style=dashed];
m2_2 -> m2_9  [color=darkseagreen4, key=1, label=reference, style=dashed];
m2_2 -> m2_11  [color=darkseagreen4, key=1, label=reference, style=dashed];
}
