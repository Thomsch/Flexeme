digraph  {
n78 [label="QuantConnect.Algorithm.Framework.Alphas.Alpha", span=""];
n0 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha()", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha()", span="100-100"];
n1 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha()", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha()", span="100-100"];
n2 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan)", span="111-111"];
n3 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan)", span="111-111"];
n4 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", span="125-125"];
n5 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Id = Guid.NewGuid()", span="127-127"];
n7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Symbol = symbol", span="130-130"];
n8 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Type = type", span="131-131"];
n9 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Direction = direction", span="132-132"];
n10 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Period = period", span="133-133"];
n11 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Magnitude = magnitude", span="136-136"];
n12 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Confidence = confidence", span="137-137"];
n6 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Score = new AlphaScore()", span="128-128"];
n14 [cluster="System.Guid.NewGuid()", label="Entry System.Guid.NewGuid()", span="0-0"];
n15 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", span="53-53"];
n13 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", span="125-125"];
n16 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", span="152-152"];
n17 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="GeneratedTimeUtc = generatedTimeUtc", span="155-155"];
n18 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="CloseTimeUtc = generatedTimeUtc + period", span="156-156"];
n19 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.Alpha(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.AlphaType, QuantConnect.Algorithm.Framework.Alphas.AlphaDirection, System.TimeSpan, double?, double?)", span="152-152"];
n20 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Clone()", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Clone()", span="163-163"];
n21 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Clone()", label="return new Alpha(Symbol, Type, Direction, Period, Magnitude, Confidence)\r\n            {\r\n                GeneratedTimeUtc = GeneratedTimeUtc,\r\n                CloseTimeUtc = CloseTimeUtc,\r\n                Score = Score,\r\n                Id = Id,\r\n                EstimatedValue = EstimatedValue\r\n            };", span="165-172"];
n22 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Clone()", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.Clone()", span="163-163"];
n23 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", span="183-183"];
n24 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", label="var direction = (AlphaDirection) Math.Sign(magnitude)", span="185-185"];
n25 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", label="return new Alpha(symbol, AlphaType.Price, direction, period, magnitude, confidence);", span="186-186"];
n27 [cluster="System.Math.Sign(double)", label="Entry System.Math.Sign(double)", span="0-0"];
n26 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.PriceMagnitude(QuantConnect.Symbol, double, System.TimeSpan, double?)", span="183-183"];
n28 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", span="192-192"];
n29 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", label="var str = $''{Id}: {Symbol} {Type} {Direction} within {Period}''", span="194-194"];
n30 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", label="Magnitude.HasValue", span="195-195"];
n31 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", label="str += $'' by {Magnitude.Value}%''", span="197-197"];
n33 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", label="str += $'' with {Math.Round(100 * Confidence.Value, 1)}% confidence''", span="201-201"];
n34 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", label="return str;", span="204-204"];
n32 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", label="Confidence.HasValue", span="199-199"];
n36 [cluster="System.Math.Round(double, int)", label="Entry System.Math.Round(double, int)", span="0-0"];
n35 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.ToString()", span="192-192"];
n37 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", span="210-210"];
n38 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="ReferenceEquals(null, other)", span="212-212"];
n40 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="ReferenceEquals(this, other)", span="213-213"];
n42 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="Id == other.Id", span="215-215"];
n44 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="return Equals(Symbol, other.Symbol) &&\r\n                Direction == other.Direction &&\r\n                Type == other.Type &&\r\n                Confidence.Equals(other.Confidence) &&\r\n                Magnitude.Equals(other.Magnitude) &&\r\n                Period.Equals(other.Period);", span="217-222"];
n39 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="return false;", span="212-212"];
n46 [cluster="object.ReferenceEquals(object, object)", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
n41 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="return true;", span="213-213"];
n43 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="return true;", span="215-215"];
n45 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(QuantConnect.Algorithm.Framework.Alphas.Alpha)", span="210-210"];
n47 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
n48 [cluster="System.Nullable<T>.Equals(object)", label="Entry System.Nullable<T>.Equals(object)", span="0-0"];
n49 [cluster="System.TimeSpan.Equals(System.TimeSpan)", label="Entry System.TimeSpan.Equals(System.TimeSpan)", span="0-0"];
n50 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", span="229-229"];
n51 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", label="ReferenceEquals(null, obj)", span="231-231"];
n53 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", label="ReferenceEquals(this, obj)", span="232-232"];
n55 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", label="obj.GetType() != GetType()", span="233-233"];
n57 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", label="return Equals((Alpha)obj);", span="234-234"];
n52 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", label="return false;", span="231-231"];
n54 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", label="return true;", span="232-232"];
n56 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", label="return false;", span="233-233"];
n59 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n58 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.Equals(object)", span="229-229"];
n60 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", span="240-240"];
n61 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", label="var hashCode = (Symbol != null ? Symbol.GetHashCode() : 0)", span="244-244"];
n62 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", label="hashCode = (hashCode * 397) ^ (int)Type", span="245-245"];
n69 [cluster="QuantConnect.Symbol.GetHashCode()", label="Entry QuantConnect.Symbol.GetHashCode()", span="318-318"];
n63 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", label="hashCode = (hashCode * 397) ^ (int)Direction", span="246-246"];
n64 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", label="hashCode = (hashCode * 397) ^ Magnitude.GetHashCode()", span="247-247"];
n65 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", label="hashCode = (hashCode * 397) ^ Confidence.GetHashCode()", span="248-248"];
n70 [cluster="System.Nullable<T>.GetHashCode()", label="Entry System.Nullable<T>.GetHashCode()", span="0-0"];
n66 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", label="hashCode = (hashCode * 397) ^ Period.GetHashCode()", span="249-249"];
n67 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", label="return hashCode;", span="250-250"];
n71 [cluster="System.TimeSpan.GetHashCode()", label="Entry System.TimeSpan.GetHashCode()", span="0-0"];
n68 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.GetHashCode()", span="240-240"];
n72 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.operator ==(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.operator ==(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", span="257-257"];
n73 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.operator ==(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="return Equals(left, right);", span="259-259"];
n74 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.operator ==(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.operator ==(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", span="257-257"];
n75 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.operator !=(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Alpha.operator !=(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", span="265-265"];
n76 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.operator !=(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="return !Equals(left, right);", span="267-267"];
n77 [cluster="QuantConnect.Algorithm.Framework.Alphas.Alpha.operator !=(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Alpha.operator !=(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Alpha)", span="265-265"];
m0_0 [cluster="QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="CurrentPriceOptionPriceModel.cs", label="Entry QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="38-38"];
m0_1 [cluster="QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="CurrentPriceOptionPriceModel.cs", label="return new OptionPriceModelResult(security.Price, new Greeks());", span="40-40"];
m0_2 [cluster="QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="CurrentPriceOptionPriceModel.cs", label="Exit QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="38-38"];
m0_4 [cluster="QuantConnect.Data.Market.Greeks.Greeks()", file="CurrentPriceOptionPriceModel.cs", label="Entry QuantConnect.Data.Market.Greeks.Greeks()", span="153-153"];
m0_3 [cluster="QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.Greeks)", file="CurrentPriceOptionPriceModel.cs", label="Entry QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.Greeks)", span="63-63"];
m2_0 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="FactorFileTests.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="38-38"];
m2_1 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="FactorFileTests.cs", label="Exit QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="38-38"];
m3_26 [cluster="string.Format(string, params object[])", file="FutureMarginModel.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m3_25 [cluster="string.Format(string, object, object, object)", file="FutureMarginModel.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m3_0 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", span="95-95"];
m3_1 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="OrderId = orderId", span="97-97"];
m3_2 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="Symbol = symbol", span="98-98"];
m3_3 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="UtcTime = utcTime", span="99-99"];
m3_4 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="Status = status", span="100-100"];
m3_5 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="Direction = direction", span="101-101"];
m3_6 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="FillPrice = fillPrice", span="102-102"];
m3_7 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="FillQuantity = fillQuantity", span="103-103"];
m3_8 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="OrderFee = orderFee", span="104-104"];
m3_9 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="Message = message", span="105-105"];
m3_10 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="FutureMarginModel.cs", label="Exit QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", span="95-95"];
m3_30 [cluster="object.MemberwiseClone()", file="FutureMarginModel.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m3_22 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="FutureMarginModel.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="138-138"];
m3_23 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="FutureMarginModel.cs", label="return FillQuantity == 0 \r\n                ? string.Format(''OrderID: {0} Symbol: {1} Status: {2}'', OrderId, Symbol, Status) \r\n                : string.Format(''OrderID: {0} Symbol: {1} Status: {2} Quantity: {3} FillPrice: {4}'', OrderId, Symbol, Status, FillQuantity, FillPrice);", span="140-142"];
m3_24 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="FutureMarginModel.cs", label="Exit QuantConnect.Orders.OrderEvent.ToString()", span="138-138"];
m3_11 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="115-115"];
m3_12 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="OrderId = order.Id", span="117-117"];
m3_13 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="Symbol = order.Symbol", span="118-118"];
m3_14 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="Status = order.Status", span="119-119"];
m3_15 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="Direction = order.Direction", span="120-120"];
m3_18 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="UtcTime = utcTime", span="126-126"];
m3_19 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="OrderFee = orderFee", span="127-127"];
m3_20 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="Message = message", span="128-128"];
m3_16 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="FillQuantity = 0", span="123-123"];
m3_17 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="FillPrice = 0", span="124-124"];
m3_21 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="FutureMarginModel.cs", label="Exit QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="115-115"];
m3_27 [cluster="QuantConnect.Orders.OrderEvent.Clone()", file="FutureMarginModel.cs", label="Entry QuantConnect.Orders.OrderEvent.Clone()", span="149-149"];
m3_28 [cluster="QuantConnect.Orders.OrderEvent.Clone()", file="FutureMarginModel.cs", label="return (OrderEvent)MemberwiseClone();", span="151-151"];
m3_29 [cluster="QuantConnect.Orders.OrderEvent.Clone()", file="FutureMarginModel.cs", label="Exit QuantConnect.Orders.OrderEvent.Clone()", span="149-149"];
m3_31 [file="FutureMarginModel.cs", label="QuantConnect.Orders.OrderEvent", span=""];
m5_63 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="FuturesChain.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m5_104 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", span="292-292"];
m5_105 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="var type = baseData.GetType()", span="294-294"];
m5_111 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="!dictionary.TryGetValue(baseData.Symbol, out list)", span="303-303"];
m5_113 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="dictionary[baseData.Symbol] = list", span="306-306"];
m5_114 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="list.Add(baseData)", span="308-308"];
m5_106 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="Dictionary<Symbol, List<BaseData>> dictionary", span="295-295"];
m5_107 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="!_auxiliaryData.TryGetValue(type, out dictionary)", span="296-296"];
m5_109 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="_auxiliaryData[type] = dictionary", span="299-299"];
m5_108 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="dictionary = new Dictionary<Symbol, List<BaseData>>()", span="298-298"];
m5_110 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="List<BaseData> list", span="302-302"];
m5_112 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="list = new List<BaseData>()", span="305-305"];
m5_115 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", span="292-292"];
m5_94 [cluster="QuantConnect.Data.Market.FuturesChain.GetEnumerator()", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.GetEnumerator()", span="252-252"];
m5_95 [cluster="QuantConnect.Data.Market.FuturesChain.GetEnumerator()", file="FuturesChain.cs", label="return Contracts.Values.GetEnumerator();", span="254-254"];
m5_96 [cluster="QuantConnect.Data.Market.FuturesChain.GetEnumerator()", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.GetEnumerator()", span="252-252"];
m5_78 [cluster="QuantConnect.Data.Market.DataDictionary<T>.Add(QuantConnect.Symbol, T)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.Add(QuantConnect.Symbol, T)", span="165-165"];
m5_54 [cluster="System.Collections.Generic.List<T>.List()", file="FuturesChain.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_18 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="113-113"];
m5_19 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="Time = time", span="115-115"];
m5_20 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="Symbol = canonicalFutureSymbol", span="116-116"];
m5_22 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="FilteredContracts = filteredContracts.ToHashSet()", span="118-118"];
m5_23 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="Ticks = new Ticks(time)", span="120-120"];
m5_24 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="TradeBars = new TradeBars(time)", span="121-121"];
m5_25 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="QuoteBars = new QuoteBars(time)", span="122-122"];
m5_26 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="Contracts = new FuturesContracts(time)", span="123-123"];
m5_27 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label=trades, span="125-125"];
m5_38 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label=quotes, span="146-146"];
m5_49 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label=contracts, span="167-167"];
m5_21 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="DataType = MarketDataType.FuturesChain", span="117-117"];
m5_28 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="var tick = trade as Tick", span="127-127"];
m5_35 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="var bar = trade as TradeBar", span="139-139"];
m5_37 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="TradeBars[trade.Symbol] = bar", span="142-142"];
m5_29 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="tick != null", span="128-128"];
m5_31 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="!Ticks.TryGetValue(tick.Symbol, out ticks)", span="131-131"];
m5_33 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="Ticks[tick.Symbol] = ticks", span="134-134"];
m5_34 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="ticks.Add(tick)", span="136-136"];
m5_30 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="List<Tick> ticks", span="130-130"];
m5_32 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="ticks = new List<Tick>()", span="133-133"];
m5_36 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="bar != null", span="140-140"];
m5_39 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="var tick = quote as Tick", span="148-148"];
m5_46 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="var bar = quote as QuoteBar", span="160-160"];
m5_48 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="QuoteBars[quote.Symbol] = bar", span="163-163"];
m5_40 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="tick != null", span="149-149"];
m5_42 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="!Ticks.TryGetValue(tick.Symbol, out ticks)", span="152-152"];
m5_44 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="Ticks[tick.Symbol] = ticks", span="155-155"];
m5_45 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="ticks.Add(tick)", span="157-157"];
m5_41 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="List<Tick> ticks", span="151-151"];
m5_43 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="ticks = new List<Tick>()", span="154-154"];
m5_47 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="bar != null", span="161-161"];
m5_50 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="Contracts[contract.Symbol] = contract", span="169-169"];
m5_51 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="113-113"];
m5_101 [cluster="QuantConnect.Data.Market.FuturesChain.Clone()", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.Clone()", span="272-272"];
m5_102 [cluster="QuantConnect.Data.Market.FuturesChain.Clone()", file="FuturesChain.cs", label="return new FuturesChain\r\n            {\r\n                Ticks = Ticks,\r\n                Contracts = Contracts,\r\n                QuoteBars = QuoteBars,\r\n                TradeBars = TradeBars,\r\n                FilteredContracts = FilteredContracts,\r\n                Symbol = Symbol,\r\n                Time = Time,\r\n                DataType = DataType,\r\n                Value = Value\r\n            };", span="274-285"];
m5_103 [cluster="QuantConnect.Data.Market.FuturesChain.Clone()", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.Clone()", span="272-272"];
m5_65 [cluster="System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", file="FuturesChain.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", span="0-0"];
m5_17 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="FuturesChain.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m5_14 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="35-35"];
m5_66 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.GetAux<T>()", span="195-195"];
m5_67 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="Dictionary<Symbol, List<BaseData>> d", span="197-197"];
m5_68 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="!_auxiliaryData.TryGetValue(typeof(T), out d)", span="198-198"];
m5_69 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="return new DataDictionary<T>();", span="200-200"];
m5_70 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="var dictionary = new DataDictionary<T>()", span="202-202"];
m5_71 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label=d, span="203-203"];
m5_74 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="dictionary.Add(kvp.Key, item)", span="208-208"];
m5_75 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="return dictionary;", span="211-211"];
m5_72 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="var item = kvp.Value.OfType<T>().LastOrDefault()", span="205-205"];
m5_73 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="item != null", span="206-206"];
m5_76 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>()", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.GetAux<T>()", span="195-195"];
m5_56 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.GetAux<T>(QuantConnect.Symbol)", span="179-179"];
m5_57 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="List<BaseData> list", span="181-181"];
m5_59 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="!_auxiliaryData.TryGetValue(typeof(T), out dictionary) || !dictionary.TryGetValue(symbol, out list)", span="183-183"];
m5_58 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="Dictionary<Symbol, List<BaseData>> dictionary", span="182-182"];
m5_60 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="return default(T);", span="185-185"];
m5_61 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="return list.OfType<T>().LastOrDefault();", span="187-187"];
m5_62 [cluster="QuantConnect.Data.Market.FuturesChain.GetAux<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.GetAux<T>(QuantConnect.Symbol)", span="179-179"];
m5_64 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="FuturesChain.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m5_77 [cluster="QuantConnect.Data.Market.DataDictionary<T>.DataDictionary()", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.DataDictionary()", span="17-17"];
m5_13 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
m5_79 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>()", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.GetAuxList<T>()", span="219-219"];
m5_80 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>()", file="FuturesChain.cs", label="Dictionary<Symbol, List<BaseData>> dictionary", span="221-221"];
m5_81 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>()", file="FuturesChain.cs", label="!_auxiliaryData.TryGetValue(typeof(T), out dictionary)", span="222-222"];
m5_82 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>()", file="FuturesChain.cs", label="return new Dictionary<Symbol, List<BaseData>>();", span="224-224"];
m5_83 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>()", file="FuturesChain.cs", label="return dictionary;", span="226-226"];
m5_84 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>()", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.GetAuxList<T>()", span="219-219"];
m5_3 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", span="93-93"];
m5_4 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="Time = time", span="95-95"];
m5_5 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="Symbol = canonicalFutureSymbol", span="96-96"];
m5_7 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="Ticks = new Ticks(time)", span="98-98"];
m5_8 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="TradeBars = new TradeBars(time)", span="99-99"];
m5_9 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="QuoteBars = new QuoteBars(time)", span="100-100"];
m5_10 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="Contracts = new FuturesContracts(time)", span="101-101"];
m5_6 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="DataType = MarketDataType.FuturesChain", span="97-97"];
m5_11 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="FilteredContracts = new HashSet<Symbol>()", span="102-102"];
m5_12 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", span="93-93"];
m5_93 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="FuturesChain.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m5_97 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="FuturesChain.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m5_53 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m5_85 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FuturesChain.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_0 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain()", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.FuturesChain()", span="83-83"];
m5_1 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain()", file="FuturesChain.cs", label="DataType = MarketDataType.FuturesChain", span="85-85"];
m5_2 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain()", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.FuturesChain()", span="83-83"];
m5_16 [cluster="QuantConnect.Data.Market.FuturesContracts.FuturesContracts(System.DateTime)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesContracts.FuturesContracts(System.DateTime)", span="34-34"];
m5_55 [cluster="System.Collections.Generic.List<T>.Add(T)", file="FuturesChain.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_15 [cluster="QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", span="34-34"];
m5_98 [cluster="QuantConnect.Data.Market.FuturesChain.System.Collections.IEnumerable.GetEnumerator()", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.System.Collections.IEnumerable.GetEnumerator()", span="263-263"];
m5_99 [cluster="QuantConnect.Data.Market.FuturesChain.System.Collections.IEnumerable.GetEnumerator()", file="FuturesChain.cs", label="return GetEnumerator();", span="265-265"];
m5_100 [cluster="QuantConnect.Data.Market.FuturesChain.System.Collections.IEnumerable.GetEnumerator()", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.System.Collections.IEnumerable.GetEnumerator()", span="263-263"];
m5_52 [cluster="Unk.ToHashSet", file="FuturesChain.cs", label="Entry Unk.ToHashSet", span=""];
m5_86 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="Entry QuantConnect.Data.Market.FuturesChain.GetAuxList<T>(QuantConnect.Symbol)", span="235-235"];
m5_87 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="List<BaseData> list", span="237-237"];
m5_89 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="!_auxiliaryData.TryGetValue(typeof(T), out dictionary) || !dictionary.TryGetValue(symbol, out list)", span="239-239"];
m5_88 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="Dictionary<Symbol, List<BaseData>> dictionary", span="238-238"];
m5_90 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="return new List<T>();", span="241-241"];
m5_91 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="return list.OfType<T>().ToList();", span="243-243"];
m5_92 [cluster="QuantConnect.Data.Market.FuturesChain.GetAuxList<T>(QuantConnect.Symbol)", file="FuturesChain.cs", label="Exit QuantConnect.Data.Market.FuturesChain.GetAuxList<T>(QuantConnect.Symbol)", span="235-235"];
m5_117 [file="FuturesChain.cs", label="QuantConnect.Data.Market.FuturesChain", span=""];
m6_57 [cluster="System.Convert.ToDecimal(int)", file="FuturesExpiryFunctionsTests.cs", label="Entry System.Convert.ToDecimal(int)", span="0-0"];
m6_67 [cluster="System.Convert.ToInt32(decimal)", file="FuturesExpiryFunctionsTests.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m6_64 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="665-665"];
m6_66 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m6_61 [cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="317-317"];
m6_65 [cluster="QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", span="32-32"];
m6_0 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33"];
m6_1 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="var isLong = security.Holdings.IsLong", prediction=0, span="36-36"];
m6_2 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="var isShort = security.Holdings.IsShort", prediction=1, span="37-37"];
m6_12 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="isLong && fill.Direction == OrderDirection.Sell", span="58-58"];
m6_31 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label=isLong, span="110-110"];
m6_3 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="var closedPosition = false", span="38-38"];
m6_17 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="isShort && fill.Direction == OrderDirection.Buy", prediction=1, span="73-73"];
m6_42 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label=isShort, span="137-137"];
m6_4 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="var quantityHoldings = (decimal)security.Holdings.Quantity", prediction=1, span="40-40"];
m6_5 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="var absoluteHoldingsQuantity = security.Holdings.AbsoluteQuantity", prediction=4, span="41-41"];
m6_13 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings >= fill.AbsoluteFillQuantity", prediction=1, span="61-61"];
m6_15 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * quantityHoldings", prediction=6, span="69-69"];
m6_28 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings == 0", span="104-104"];
m6_34 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (fill.FillQuantity * fill.FillPrice)) / (quantityHoldings + (decimal)fill.FillQuantity)", span="117-117"];
m6_35 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings += fill.FillQuantity", span="119-119"];
m6_45 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings += fill.FillQuantity", span="144-144"];
m6_55 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="security.Holdings.SetHoldings(averageHoldingsPrice, Convert.ToInt32(quantityHoldings))", span="172-172"];
m6_6 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="var averageHoldingsPrice = security.Holdings.AveragePrice", span="42-42"];
m6_18 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="absoluteHoldingsQuantity >= fill.FillQuantity", span="76-76"];
m6_20 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * absoluteHoldingsQuantity", span="84-84"];
m6_8 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="security.Holdings.AddNewSale(fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity))", prediction=1, span="49-49"];
m6_7 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="var lastTradeProfit = 0m", prediction=8, span="44-44"];
m6_9 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="var feeThisOrder = fill.OrderFee", prediction=9, span="52-52"];
m6_10 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="security.Holdings.AddNewFee(feeThisOrder)", prediction=1, span="53-53"];
m6_11 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="portfolio.CashBook[CashBook.AccountCurrency].AddAmount(-feeThisOrder)", span="54-54"];
m6_25 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="portfolio.AddTransactionRecord(security.LocalTime.ConvertToUtc(security.Exchange.TimeZone), lastTradeProfit - 2 * feeThisOrder)", span="95-95"];
m6_14 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * fill.AbsoluteFillQuantity", prediction=11, span="64-64"];
m6_16 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="FuturesExpiryFunctionsTests.cs", label="closedPosition = true", prediction=12, span="71-71"];
m6_23 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="security.Holdings.AddNewProfit(lastTradeProfit)", span="93-93"];
m6_24 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="security.Holdings.SetLastTradeProfit(lastTradeProfit)", span="94-94"];
m6_22 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label=closedPosition, span="90-90"];
m6_19 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * fill.AbsoluteFillQuantity", span="79-79"];
m6_26 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="var amount = fill.FillPrice * Convert.ToDecimal(fill.FillQuantity)", span="99-99"];
m6_27 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="security.SettlementModel.ApplyFunds(portfolio, security, fill.UtcTime, CashBook.AccountCurrency, -amount)", span="100-100"];
m6_29 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="averageHoldingsPrice = fill.FillPrice", span="107-107"];
m6_30 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings = fill.FillQuantity", span="108-108"];
m6_32 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="fill.Direction", span="113-113"];
m6_37 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings += fill.FillQuantity", span="124-124"];
m6_39 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="averageHoldingsPrice = fill.FillPrice", span="128-128"];
m6_43 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="fill.Direction", span="140-140"];
m6_47 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="averageHoldingsPrice = fill.FillPrice", span="148-148"];
m6_51 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (Convert.ToDecimal(fill.FillQuantity) * fill.FillPrice)) / (quantityHoldings + (decimal)fill.FillQuantity)", span="160-160"];
m6_52 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings += fill.FillQuantity", span="161-161"];
m6_53 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label=Exception, span="166-166"];
m6_33 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="OrderDirection.Buy", span="115-115"];
m6_44 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="OrderDirection.Buy", span="142-142"];
m6_46 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings > 0", span="145-145"];
m6_48 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings == 0", span="150-150"];
m6_40 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings == 0", span="130-130"];
m6_41 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="averageHoldingsPrice = 0", span="132-132"];
m6_49 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="averageHoldingsPrice = 0", span="152-152"];
m6_54 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="Log.Error(err)", span="168-168"];
m6_21 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="closedPosition = true", span="86-86"];
m6_36 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="OrderDirection.Sell", span="123-123"];
m6_38 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="quantityHoldings < 0", span="125-125"];
m6_50 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="OrderDirection.Sell", span="156-156"];
m6_56 [cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="FuturesExpiryFunctionsTests.cs", label="Exit QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33"];
m6_68 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343"];
m6_62 [cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="335-335"];
m6_60 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="100-100"];
m6_59 [cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="308-308"];
m6_58 [cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="FuturesExpiryFunctionsTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="326-326"];
m6_63 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="FuturesExpiryFunctionsTests.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="449-449"];
m7_45 [cluster="TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", file="FuturesExpiryUtilityFunctions.cs", label="Entry TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", span="48-48"];
m7_26 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Group(params QuantConnect.Algorithm.Framework.Alphas.Insight[])", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Group(params QuantConnect.Algorithm.Framework.Alphas.Insight[])", span="204-204"];
m7_24 [cluster="System.TimeSpan.FromMinutes(double)", file="FuturesExpiryUtilityFunctions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m7_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.PairsTradingAlphaModel(QuantConnect.Symbol, QuantConnect.Symbol, decimal)", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.PairsTradingAlphaModel(QuantConnect.Symbol, QuantConnect.Symbol, decimal)", span="40-40"];
m7_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.PairsTradingAlphaModel(QuantConnect.Symbol, QuantConnect.Symbol, decimal)", file="FuturesExpiryUtilityFunctions.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.PairsTradingAlphaModel(QuantConnect.Symbol, QuantConnect.Symbol, decimal)", span="40-40"];
m7_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="55-55"];
m7_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="FuturesExpiryUtilityFunctions.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="55-55"];
m7_47 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="273-273"];
m7_43 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="214-214"];
m7_44 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", span="53-53"];
m7_23 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="FuturesExpiryUtilityFunctions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m7_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="96-96"];
m7_41 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="FuturesExpiryUtilityFunctions.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="96-96"];
m7_7 [cluster="decimal.Normalize()", file="FuturesExpiryUtilityFunctions.cs", label="Entry decimal.Normalize()", span="237-237"];
m7_6 [cluster="Unk.nameof", file="FuturesExpiryUtilityFunctions.cs", label="Entry Unk.nameof", span=""];
m7_46 [cluster="QuantConnect.Indicators.ConstantIndicator<T>.ConstantIndicator(string, decimal)", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Indicators.ConstantIndicator<T>.ConstantIndicator(string, decimal)", span="42-42"];
m7_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="497-497"];
m7_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="FuturesExpiryUtilityFunctions.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="195-195"];
m7_48 [file="FuturesExpiryUtilityFunctions.cs", label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", span=""];
m8_41 [cluster="Unk.Where", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry Unk.Where", span=""];
m8_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1467-1467"];
m8_13 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="348-348"];
m8_55 [cluster="lambda expression", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry lambda expression", span="90-90"];
m8_15 [cluster="lambda expression", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry lambda expression", span="46-48"];
m8_17 [cluster="lambda expression", file="FuturesExpiryUtilityFunctionsTests.cs", label="Exit lambda expression", span="46-48"];
m8_49 [cluster="lambda expression", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry lambda expression", span="68-68"];
m8_52 [cluster="lambda expression", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry lambda expression", span="69-69"];
m8_51 [cluster="lambda expression", file="FuturesExpiryUtilityFunctionsTests.cs", label="Exit lambda expression", span="68-68"];
m8_54 [cluster="lambda expression", file="FuturesExpiryUtilityFunctionsTests.cs", label="Exit lambda expression", span="69-69"];
m8_57 [cluster="lambda expression", file="FuturesExpiryUtilityFunctionsTests.cs", label="Exit lambda expression", span="90-90"];
m8_47 [cluster="System.Exception.Exception(string)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m8_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1172-1172"];
m8_21 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="303-303"];
m8_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="1057-1057"];
m8_19 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="197-197"];
m8_58 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="108-108"];
m8_60 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="108-108"];
m8_42 [cluster="Unk.Skip", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry Unk.Skip", span=""];
m8_20 [cluster="System.TimeSpan.FromDays(double)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m8_43 [cluster="Unk.FirstOrDefault", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m8_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1837-1837"];
m8_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197"];
m8_39 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m8_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m8_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
m8_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1121-1121"];
m8_0 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", span="35-35"];
m8_8 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", file="FuturesExpiryUtilityFunctionsTests.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.Initialize()", span="35-35"];
m8_44 [cluster="Unk.Buy", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry Unk.Buy", span=""];
m8_48 [cluster="Unk.Format", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry Unk.Format", span=""];
m8_46 [cluster="Unk.First", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry Unk.First", span=""];
m8_22 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58"];
m8_38 [cluster="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="FuturesExpiryUtilityFunctionsTests.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58"];
m8_61 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="169-169"];
m8_18 [cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="FuturesExpiryUtilityFunctionsTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98"];
m8_63 [file="FuturesExpiryUtilityFunctionsTests.cs", label="QuantConnect.Algorithm.CSharp.OptionSplitRegressionAlgorithm", span=""];
m9_78 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Global.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m9_28 [cluster="Unk.Single", file="Global.cs", label="Entry Unk.Single", span=""];
m9_22 [cluster="System.TimeSpan.FromHours(double)", file="Global.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m9_9 [cluster="System.Collections.Generic.List<T>.List()", file="Global.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_67 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="Global.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m9_71 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="483-483"];
m9_76 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="Global.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="115-115"];
m9_82 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="290-290"];
m9_29 [cluster="lambda expression", file="Global.cs", label="Entry lambda expression", span="90-90"];
m9_26 [cluster="lambda expression", file="Global.cs", label="names.Single(name => MatchTypeName(name, algorithmName))", span="90-90"];
m9_30 [cluster="lambda expression", file="Global.cs", label="MatchTypeName(name, algorithmName)", span="90-90"];
m9_25 [cluster="lambda expression", file="Global.cs", label="Entry lambda expression", span="90-90"];
m9_27 [cluster="lambda expression", file="Global.cs", label="Exit lambda expression", span="90-90"];
m9_31 [cluster="lambda expression", file="Global.cs", label="Exit lambda expression", span="90-90"];
m9_88 [cluster="string.LastIndexOf(char)", file="Global.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m9_24 [cluster="System.Exception.Exception(string)", file="Global.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m9_7 [cluster="System.DateTime.DateTime(int, int, int)", file="Global.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m9_70 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="304-304"];
m9_23 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Global.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="376-376"];
m9_69 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="500-500"];
m9_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Global.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="89-89"];
m9_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Global.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="45-45"];
m9_75 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="421-421"];
m9_8 [cluster="System.TimeSpan.FromDays(double)", file="Global.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m9_81 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="Global.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="313-313"];
m9_89 [cluster="string.Substring(int)", file="Global.cs", label="Entry string.Substring(int)", span="0-0"];
m9_77 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Global.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", span="74-74"];
m9_37 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="118-118"];
m9_38 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="var initializeComplete = false", span="120-120"];
m9_39 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="baseJob.Type == PacketType.BacktestNode", span="126-126"];
m9_40 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="var backtestJob = baseJob as BacktestNodePacket", span="128-128"];
m9_41 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.SetDefaultMarkets(BacktestingBrokerageFactory.DefaultMarketMap.ToDictionary())", span="131-131"];
m9_42 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.SetMaximumOrders(int.MaxValue)", span="132-132"];
m9_43 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.SetParameters(baseJob.Parameters)", span="134-134"];
m9_44 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.SetLiveMode(false)", span="135-135"];
m9_45 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="137-137"];
m9_46 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.Initialize()", span="139-139"];
m9_47 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.SetDateTime(algorithm.StartDate.ConvertToUtc(algorithm.TimeZone))", span="141-141"];
m9_48 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.Securities, algorithm.SubscriptionManager, MarketHoursDatabase.FromDataFolder())", span="143-143"];
m9_49 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="backtestJob.PeriodStart = algorithm.StartDate", span="146-146"];
m9_50 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="backtestJob.PeriodFinish = algorithm.EndDate", span="147-147"];
m9_55 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="StartingPortfolioValue = algorithm.Portfolio.Cash", span="154-154"];
m9_62 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="SetupHandler.UpdateModels(algorithm, algorithm.BrokerageModel)", span="173-173"];
m9_63 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.Transactions.SetOrderProcessor(transactionHandler)", span="174-174"];
m9_64 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="algorithm.PostInitialize()", span="175-175"];
m9_65 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="return initializeComplete;", span="177-177"];
m9_56 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="throw new Exception(''The ConsoleSetupHandler is for backtests only. Use the BrokerageSetupHandler.'');", span="158-158"];
m9_51 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="backtestJob.BacktestId = ''LOCALHOST''", span="148-148"];
m9_52 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="backtestJob.UserId = 1001", span="149-149"];
m9_53 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="backtestJob.Type = PacketType.BacktestNode", span="150-150"];
m9_54 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="StartingDate = backtestJob.PeriodStart", span="153-153"];
m9_57 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label=Exception, span="161-161"];
m9_60 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="Errors.Count == 0", span="167-167"];
m9_58 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="Log.Error(err)", span="163-163"];
m9_59 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err.Message)", span="164-164"];
m9_61 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="initializeComplete = true", span="169-169"];
m9_66 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="118-118"];
m9_74 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="Global.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="449-449"];
m9_10 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="82-82"];
m9_11 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="string error", span="84-84"];
m9_14 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="var loader = new Loader(language, TimeSpan.FromHours(1), names => names.Single(name => MatchTypeName(name, algorithmName)))", span="90-90"];
m9_15 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="91-91"];
m9_12 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="IAlgorithm algorithm", span="85-85"];
m9_13 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="var algorithmName = Config.Get(''algorithm-type-name'')", span="86-86"];
m9_16 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="!complete", span="92-92"];
m9_17 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="throw new Exception(error + '': try re-building algorithm.'');", span="92-92"];
m9_18 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="return algorithm;", span="94-94"];
m9_19 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(string, QuantConnect.Language)", span="82-82"];
m9_32 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="187-187"];
m9_83 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="Global.cs", label="string.IsNullOrEmpty(expectedTypeName)", span="189-189"];
m9_85 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="Global.cs", label="return currentTypeFullName == expectedTypeName\r\n                || currentTypeFullName.Substring(currentTypeFullName.LastIndexOf('.') + 1) == expectedTypeName;", span="193-194"];
m9_84 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="Global.cs", label="return true;", span="191-191"];
m9_86 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="187-187"];
m9_21 [cluster="Loader.cstr", file="Global.cs", label="Entry Loader.cstr", span=""];
m9_79 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Global.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_72 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="Global.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="63-63"];
m9_80 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", span="28-28"];
m9_90 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="201-201"];
m9_91 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="201-201"];
m9_87 [cluster="string.IsNullOrEmpty(string)", file="Global.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_68 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDefaultMarkets(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>)", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDefaultMarkets(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>)", span="310-310"];
m9_0 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66"];
m9_1 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Global.cs", label="MaxOrders = int.MaxValue", span="68-68"];
m9_2 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Global.cs", label="StartingPortfolioValue = 0", span="69-69"];
m9_3 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Global.cs", label="StartingDate = new DateTime(1998, 01, 01)", span="70-70"];
m9_4 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Global.cs", label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="71-71"];
m9_5 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Global.cs", label="Errors = new List<string>()", span="72-72"];
m9_6 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66"];
m9_33 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="103-103"];
m9_34 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Global.cs", label="return new BacktestingBrokerage(uninitializedAlgorithm);", span="105-105"];
m9_35 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="103-103"];
m9_73 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="284-284"];
m9_92 [file="Global.cs", label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", span=""];
m9_93 [file="Global.cs", label=algorithmName, span=""];
m11_40 [cluster="System.Math.Abs(decimal)", file="OptionChain.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m11_48 [cluster="Unk.Variance", file="OptionChain.cs", label="Entry Unk.Variance", span=""];
m11_52 [cluster="Unk.Sqrt", file="OptionChain.cs", label="Entry Unk.Sqrt", span=""];
m11_47 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", file="OptionChain.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", span="251-251"];
m11_76 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", file="OptionChain.cs", label="return (decimal)performance.Average() * tradingDaysPerYear;", span="253-253"];
m11_77 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", file="OptionChain.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List<double>, int)", span="251-251"];
m11_50 [cluster="Unk.Covariance", file="OptionChain.cs", label="Entry Unk.Covariance", span=""];
m11_0 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", span="131-131"];
m11_1 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="startingCapital == 0", span="139-139"];
m11_3 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var runningCapital = startingCapital", span="141-141"];
m11_8 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label=profitLoss, span="146-146"];
m11_19 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="WinRate = profitLoss.Count == 0 ? 0 : (decimal)totalWins / profitLoss.Count", span="168-168"];
m11_20 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="LossRate = profitLoss.Count == 0 ? 0 : (decimal)totalLosses / profitLoss.Count", span="169-169"];
m11_22 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="profitLoss.Count > 0", span="172-172"];
m11_23 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="TotalNetProfit = (equity.Values.LastOrDefault() / startingCapital) - 1", span="174-174"];
m11_24 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var fractionOfYears = (decimal)(equity.Keys.LastOrDefault() - equity.Keys.FirstOrDefault()).TotalDays / 365", span="177-177"];
m11_25 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="CompoundingAnnualReturn = CompoundingAnnualPerformance(startingCapital, equity.Values.LastOrDefault(), fractionOfYears)", span="178-178"];
m11_26 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="Drawdown = DrawdownPercent(equity, 3)", span="180-180"];
m11_27 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="AnnualVariance = GetAnnualVariance(listPerformance, tradingDaysPerYear)", span="182-182"];
m11_29 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var annualPerformance = GetAnnualPerformance(listPerformance, tradingDaysPerYear)", span="185-185"];
m11_31 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var benchmarkVariance = listBenchmark.Variance()", span="188-188"];
m11_32 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="Beta = benchmarkVariance.IsNaNOrZero() ? 0 : (decimal)(listPerformance.Covariance(listBenchmark) / benchmarkVariance)", span="189-189"];
m11_33 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="Alpha = Beta == 0 ? 0 : annualPerformance - (RiskFreeRate + Beta * (GetAnnualPerformance(listBenchmark, tradingDaysPerYear) - RiskFreeRate))", span="191-191"];
m11_34 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var correlation = Correlation.Pearson(listPerformance, listBenchmark)", span="193-193"];
m11_35 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var benchmarkAnnualVariance = benchmarkVariance * tradingDaysPerYear", span="194-194"];
m11_37 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="InformationRatio = TrackingError == 0 ? 0 : (annualPerformance - GetAnnualPerformance(listBenchmark, tradingDaysPerYear)) / TrackingError", span="198-198"];
m11_2 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="return;", span="139-139"];
m11_4 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var totalProfit = 0m", span="142-142"];
m11_11 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="totalProfit += tradeProfitLoss / runningCapital", span="152-152"];
m11_13 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="totalLoss += tradeProfitLoss / runningCapital", span="157-157"];
m11_15 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="runningCapital += tradeProfitLoss", span="161-161"];
m11_5 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var totalLoss = 0m", span="143-143"];
m11_16 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="AverageWinRate = totalWins == 0 ? 0 : totalProfit / totalWins", span="164-164"];
m11_6 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var totalWins = 0", span="144-144"];
m11_17 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="AverageLossRate = totalLosses == 0 ? 0 : totalLoss / totalLosses", span="165-165"];
m11_7 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var totalLosses = 0", span="145-145"];
m11_12 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="totalWins++", span="153-153"];
m11_14 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="totalLosses++", span="158-158"];
m11_9 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="var tradeProfitLoss = pair.Value", span="148-148"];
m11_10 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="tradeProfitLoss > 0", span="150-150"];
m11_18 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="ProfitLossRatio = AverageLossRate == 0 ? 0 : AverageWinRate / Math.Abs(AverageLossRate)", span="166-166"];
m11_21 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="Expectancy = WinRate * ProfitLossRatio - LossRate", span="170-170"];
m11_28 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="AnnualStandardDeviation = (decimal)Math.Sqrt((double)AnnualVariance)", span="183-183"];
m11_30 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="SharpeRatio = AnnualStandardDeviation == 0 ? 0 : (annualPerformance - RiskFreeRate) / AnnualStandardDeviation", span="186-186"];
m11_38 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="TreynorRatio = Beta == 0 ? 0 : (annualPerformance - RiskFreeRate) / Beta", span="200-200"];
m11_36 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="TrackingError = correlation.IsNaNOrZero() || benchmarkAnnualVariance.IsNaNOrZero() ? 0 :\r\n                (decimal)Math.Sqrt((double)AnnualVariance - 2 * correlation * (double)AnnualStandardDeviation * Math.Sqrt(benchmarkAnnualVariance) + benchmarkAnnualVariance)", span="195-196"];
m11_39 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", file="OptionChain.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, decimal, int)", span="131-131"];
m11_72 [cluster="System.Collections.Generic.List<T>.List()", file="OptionChain.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", file="OptionChain.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", span="0-0"];
m11_53 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics()", file="OptionChain.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics()", span="206-206"];
m11_54 [cluster="QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics()", file="OptionChain.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.PortfolioStatistics()", span="206-206"];
m11_57 [cluster="System.Math.Pow(double, double)", file="OptionChain.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m11_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="OptionChain.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m11_74 [cluster="System.Collections.Generic.IEnumerable<decimal>.Min()", file="OptionChain.cs", label="Entry System.Collections.Generic.IEnumerable<decimal>.Min()", span="0-0"];
m11_45 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", file="OptionChain.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", span="263-263"];
m11_79 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", file="OptionChain.cs", label="var variance = performance.Variance()", span="265-265"];
m11_80 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", file="OptionChain.cs", label="return variance.IsNaNOrZero() ? 0 : (decimal)variance * tradingDaysPerYear;", span="266-266"];
m11_81 [cluster="QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", file="OptionChain.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List<double>, int)", span="263-263"];
m11_58 [cluster="double.SafeDecimalCast()", file="OptionChain.cs", label="Entry double.SafeDecimalCast()", span="227-227"];
m11_46 [cluster="System.Math.Sqrt(double)", file="OptionChain.cs", label="Entry System.Math.Sqrt(double)", span="0-0"];
m11_51 [cluster="Unk.Pearson", file="OptionChain.cs", label="Entry Unk.Pearson", span=""];
m11_71 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="OptionChain.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m11_78 [cluster="System.Collections.Generic.IEnumerable<double>.Average()", file="OptionChain.cs", label="Entry System.Collections.Generic.IEnumerable<double>.Average()", span="0-0"];
m11_75 [cluster="System.Math.Round(decimal, int)", file="OptionChain.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m11_44 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", span="228-228"];
m11_59 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="var prices = equityOverTime.Values.ToList()", span="230-230"];
m11_69 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="return Math.Round(Math.Abs(drawdowns.Min()), rounding);", span="241-241"];
m11_60 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="prices.Count == 0", span="231-231"];
m11_63 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="var high = prices[0]", span="234-234"];
m11_64 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label=prices, span="235-235"];
m11_61 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="return 0;", span="231-231"];
m11_62 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="var drawdowns = new List<decimal>()", span="233-233"];
m11_68 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="drawdowns.Add(price / high - 1)", span="238-238"];
m11_65 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="price > high", span="237-237"];
m11_67 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="high > 0", span="238-238"];
m11_66 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="high = price", span="237-237"];
m11_70 [cluster="QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", file="OptionChain.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", span="228-228"];
m11_73 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionChain.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_49 [cluster="Unk.IsNaNOrZero", file="OptionChain.cs", label="Entry Unk.IsNaNOrZero", span=""];
m11_43 [cluster="QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", file="OptionChain.cs", label="Entry QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", span="217-217"];
m11_55 [cluster="QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", file="OptionChain.cs", label="return (years == 0 ? 0d : Math.Pow((double)finalCapital / (double)startingCapital, 1 / (double)years) - 1).SafeDecimalCast();", span="219-219"];
m11_56 [cluster="QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", file="OptionChain.cs", label="Exit QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", span="217-217"];
m11_82 [file="OptionChain.cs", label="QuantConnect.Statistics.PortfolioStatistics", span=""];
m13_21 [cluster="Unk.AlwaysOpen", file="QCAlgorithm.cs", label="Entry Unk.AlwaysOpen", span=""];
m13_24 [cluster="TimeZoneOffsetProvider.cstr", file="QCAlgorithm.cs", label="Entry TimeZoneOffsetProvider.cstr", span=""];
m13_30 [cluster="System.Threading.Tasks.Task.WaitAll(params System.Threading.Tasks.Task[])", file="QCAlgorithm.cs", label="Entry System.Threading.Tasks.Task.WaitAll(params System.Threading.Tasks.Task[])", span="0-0"];
m13_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.Subscription.Subscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.IEnumerator<QuantConnect.Lean.Engine.DataFeeds.SubscriptionData>, QuantConnect.TimeZoneOffsetProvider, System.DateTime, System.DateTime, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Subscription.Subscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.IEnumerator<QuantConnect.Lean.Engine.DataFeeds.SubscriptionData>, QuantConnect.TimeZoneOffsetProvider, System.DateTime, System.DateTime, bool)", span="103-103"];
m13_52 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="79-91"];
m13_34 [cluster="lambda expression", file="QCAlgorithm.cs", label="!subscriptions.Contains(config)", span="53-53"];
m13_35 [cluster="lambda expression", file="QCAlgorithm.cs", label="subscriptions.TryAdd(subscription)", span="55-55"];
m13_47 [cluster="lambda expression", file="QCAlgorithm.cs", label="subscriptions.TryRemove(config, out removed)", span="71-71"];
m13_55 [cluster="lambda expression", file="QCAlgorithm.cs", label=subscriptions, span="85-85"];
m13_33 [cluster="lambda expression", file="QCAlgorithm.cs", label="DateTime.UtcNow < end", span="51-51"];
m13_45 [cluster="lambda expression", file="QCAlgorithm.cs", label="DateTime.UtcNow < end", span="68-68"];
m13_54 [cluster="lambda expression", file="QCAlgorithm.cs", label="DateTime.UtcNow < end", span="83-83"];
m13_31 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="47-62"];
m13_43 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="64-77"];
m13_32 [cluster="lambda expression", file="QCAlgorithm.cs", label="Console.WriteLine(''Add task started'')", span="49-49"];
m13_37 [cluster="lambda expression", file="QCAlgorithm.cs", label="Console.WriteLine(''Add task ended'')", span="61-61"];
m13_36 [cluster="lambda expression", file="QCAlgorithm.cs", label="Thread.Sleep(1)", span="58-58"];
m13_38 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="47-62"];
m13_44 [cluster="lambda expression", file="QCAlgorithm.cs", label="Console.WriteLine(''Remove task started'')", span="66-66"];
m13_46 [cluster="lambda expression", file="QCAlgorithm.cs", label="Subscription removed", span="70-70"];
m13_49 [cluster="lambda expression", file="QCAlgorithm.cs", label="Console.WriteLine(''Remove task ended'')", span="76-76"];
m13_48 [cluster="lambda expression", file="QCAlgorithm.cs", label="Thread.Sleep(1)", span="73-73"];
m13_50 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="64-77"];
m13_53 [cluster="lambda expression", file="QCAlgorithm.cs", label="Console.WriteLine(''Read task started'')", span="81-81"];
m13_57 [cluster="lambda expression", file="QCAlgorithm.cs", label="Console.WriteLine(''Read task ended'')", span="90-90"];
m13_56 [cluster="lambda expression", file="QCAlgorithm.cs", label="Thread.Sleep(1)", span="87-87"];
m13_58 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="79-91"];
m13_39 [cluster="System.Console.WriteLine(string)", file="QCAlgorithm.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m13_29 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken)", file="QCAlgorithm.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken)", span="0-0"];
m13_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="QCAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", span="38-38"];
m13_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionData.Enumerator(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.TimeZoneOffsetProvider, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionData.Enumerator(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.TimeZoneOffsetProvider, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>)", span="77-77"];
m13_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="QCAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", span="49-49"];
m13_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.EnqueueableEnumerator<T>.EnqueueableEnumerator(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.EnqueueableEnumerator<T>.EnqueueableEnumerator(bool)", span="77-77"];
m13_16 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="QCAlgorithm.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m13_42 [cluster="System.Threading.Thread.Sleep(int)", file="QCAlgorithm.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m13_18 [cluster="System.DateTime.AddSeconds(double)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m13_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="QCAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="87-87"];
m13_19 [cluster="SubscriptionDataConfig.cstr", file="QCAlgorithm.cs", label="Entry SubscriptionDataConfig.cstr", span=""];
m13_23 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m13_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", span="34-34"];
m13_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var cts = new CancellationTokenSource()", span="36-36"];
m13_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var subscriptions = new SubscriptionCollection()", span="37-37"];
m13_11 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var addTask = new TaskFactory().StartNew(() =>\r\n            {\r\n                Console.WriteLine(''Add task started'');\r\n\r\n                while (DateTime.UtcNow < end)\r\n                {\r\n                    if (!subscriptions.Contains(config))\r\n                    {\r\n                        subscriptions.TryAdd(subscription);\r\n                    }\r\n\r\n                    Thread.Sleep(1);\r\n                }\r\n\r\n                Console.WriteLine(''Add task ended'');\r\n            }, cts.Token)", span="47-62"];
m13_12 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var removeTask = new TaskFactory().StartNew(() =>\r\n            {\r\n                Console.WriteLine(''Remove task started'');\r\n\r\n                while (DateTime.UtcNow < end)\r\n                {\r\n                    Subscription removed;\r\n                    subscriptions.TryRemove(config, out removed);\r\n\r\n                    Thread.Sleep(1);\r\n                }\r\n\r\n                Console.WriteLine(''Remove task ended'');\r\n            }, cts.Token)", span="64-77"];
m13_13 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var readTask = new TaskFactory().StartNew(() =>\r\n            {\r\n                Console.WriteLine(''Read task started'');\r\n\r\n                while (DateTime.UtcNow < end)\r\n                {\r\n                    foreach (var sub in subscriptions) { }\r\n\r\n                    Thread.Sleep(1);\r\n                }\r\n\r\n                Console.WriteLine(''Read task ended'');\r\n            }, cts.Token)", span="79-91"];
m13_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var start = DateTime.UtcNow", span="38-38"];
m13_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var end = start.AddSeconds(10)", span="39-39"];
m13_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var timeZoneOffsetProvider = new TimeZoneOffsetProvider(DateTimeZone.Utc, start, end)", span="42-42"];
m13_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var subscription = new Subscription(null, security, config, subscriptionDataEnumerator, timeZoneOffsetProvider, start, end, false)", span="45-45"];
m13_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false)", span="40-40"];
m13_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var security = new Equity(Symbols.SPY, SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new Cash(''USD'', 0, 1), SymbolProperties.GetDefault(''USD''))", span="41-41"];
m13_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var subscriptionDataEnumerator = SubscriptionData.Enumerator(config, security, timeZoneOffsetProvider, enumerator)", span="44-44"];
m13_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="var enumerator = new EnqueueableEnumerator<BaseData>()", span="43-43"];
m13_14 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="Task.WaitAll(addTask, removeTask, readTask)", span="93-93"];
m13_15 [cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", file="QCAlgorithm.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.SubscriptionCollectionTests.EnumerationWhileUpdatingDoesNotThrow()", span="34-34"];
m13_22 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="80-80"];
m13_28 [cluster="System.Threading.Tasks.TaskFactory.TaskFactory()", file="QCAlgorithm.cs", label="Entry System.Threading.Tasks.TaskFactory.TaskFactory()", span="0-0"];
m13_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="QCAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="60-60"];
m13_20 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m13_59 [file="QCAlgorithm.cs", label=end, span=""];
m13_60 [file="QCAlgorithm.cs", label=subscriptions, span=""];
m13_61 [file="QCAlgorithm.cs", label=config, span=""];
m13_62 [file="QCAlgorithm.cs", label=subscription, span=""];
m14_0 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="RenkoBar.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="41-41"];
m14_1 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="RenkoBar.cs", label="Exit QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="41-41"];
n78 -> n30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n78 -> n32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n78 -> n40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n78 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n78 -> n44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n78 -> n53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n78 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n78 -> n57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n23 -> n25  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
n29 -> n34  [color=darkseagreen4, key=1, label=str, style=dashed];
n31 -> n34  [color=darkseagreen4, key=1, label=str, style=dashed];
n37 -> n40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n37 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n37 -> n44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Alpha", style=dashed];
n50 -> n53  [color=darkseagreen4, key=1, label=object, style=dashed];
n50 -> n55  [color=darkseagreen4, key=1, label=object, style=dashed];
n50 -> n57  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_31 -> m3_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m3_31 -> m3_28  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m5_104 -> m5_111  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m5_104 -> m5_114  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m5_105 -> m5_107  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_107 -> m5_111  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_108 -> m5_111  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_112 -> m5_114  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_18 -> m5_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m5_18 -> m5_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m5_18 -> m5_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.FuturesContract>", style=dashed];
m5_28 -> m5_31  [color=darkseagreen4, key=1, label=tick, style=dashed];
m5_28 -> m5_34  [color=darkseagreen4, key=1, label=tick, style=dashed];
m5_32 -> m5_34  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m5_39 -> m5_42  [color=darkseagreen4, key=1, label=tick, style=dashed];
m5_39 -> m5_45  [color=darkseagreen4, key=1, label=tick, style=dashed];
m5_43 -> m5_45  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m5_68 -> m5_71  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_70 -> m5_74  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_70 -> m5_75  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_74 -> m5_74  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m5_72 -> m5_74  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m5_56 -> m5_59  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m5_59 -> m5_59  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_86 -> m5_89  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m5_89 -> m5_89  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m5_117 -> m5_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChain", style=dashed];
m5_117 -> m5_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChain", style=dashed];
m5_117 -> m5_59  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChain", style=dashed];
m5_117 -> m5_68  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChain", style=dashed];
m5_117 -> m5_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChain", style=dashed];
m5_117 -> m5_89  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChain", style=dashed];
m5_117 -> m5_95  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChain", style=dashed];
m5_117 -> m5_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChain", style=dashed];
m5_117 -> m5_107  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChain", style=dashed];
m6_0 -> m6_8  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_0 -> m6_10  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_0 -> m6_13  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m6_0 -> m6_17  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m6_0 -> m6_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m6_0 -> m6_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m6_0 -> m6_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m6_0 -> m6_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_0 -> m6_24  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_0 -> m6_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m6_0 -> m6_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m6_0 -> m6_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m6_0 -> m6_43  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m6_0 -> m6_55  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_1 -> m6_12  [color=green, key=1, label=isLong, style=dashed];
m6_1 -> m6_31  [color=green, key=1, label=isLong, style=dashed];
m6_2 -> m6_17  [color=green, key=1, label=isShort, style=dashed];
m6_2 -> m6_42  [color=green, key=1, label=isShort, style=dashed];
m6_3 -> m6_22  [color=darkseagreen4, key=1, label=closedPosition, style=dashed];
m6_4 -> m6_13  [color=green, key=1, label=quantityHoldings, style=dashed];
m6_4 -> m6_28  [color=green, key=1, label=quantityHoldings, style=dashed];
m6_4 -> m6_55  [color=green, key=1, label=quantityHoldings, style=dashed];
m6_5 -> m6_18  [color=green, key=1, label=absoluteHoldingsQuantity, style=dashed];
m6_15 -> m6_23  [color=green, key=1, label=lastTradeProfit, style=dashed];
m6_15 -> m6_24  [color=green, key=1, label=lastTradeProfit, style=dashed];
m6_15 -> m6_25  [color=green, key=1, label=lastTradeProfit, style=dashed];
m6_34 -> m6_55  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m6_45 -> m6_48  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m6_6 -> m6_55  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m6_20 -> m6_23  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m6_20 -> m6_24  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m6_20 -> m6_25  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m6_7 -> m6_23  [color=green, key=1, label=lastTradeProfit, style=dashed];
m6_7 -> m6_24  [color=green, key=1, label=lastTradeProfit, style=dashed];
m6_7 -> m6_25  [color=green, key=1, label=lastTradeProfit, style=dashed];
m6_9 -> m6_11  [color=green, key=1, label=feeThisOrder, style=dashed];
m6_9 -> m6_25  [color=green, key=1, label=feeThisOrder, style=dashed];
m6_14 -> m6_23  [color=green, key=1, label=lastTradeProfit, style=dashed];
m6_14 -> m6_24  [color=green, key=1, label=lastTradeProfit, style=dashed];
m6_14 -> m6_25  [color=green, key=1, label=lastTradeProfit, style=dashed];
m6_19 -> m6_25  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m6_19 -> m6_23  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m6_19 -> m6_24  [color=darkseagreen4, key=1, label=lastTradeProfit, style=dashed];
m6_29 -> m6_55  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m6_37 -> m6_55  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m6_37 -> m6_40  [color=darkseagreen4, key=1, label=quantityHoldings, style=dashed];
m6_51 -> m6_55  [color=darkseagreen4, key=1, label=averageHoldingsPrice, style=dashed];
m9_26 -> m9_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_37 -> m9_39  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m9_37 -> m9_41  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_43  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_44  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_45  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_46  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_47  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_48  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_63  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_37 -> m9_64  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m9_38 -> m9_65  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m9_61 -> m9_65  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m9_14 -> m9_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m9_15 -> m9_17  [color=darkseagreen4, key=1, label=error, style=dashed];
m9_15 -> m9_18  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m9_13 -> m9_26  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m9_13 -> m9_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m9_32 -> m9_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_92 -> m9_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m9_92 -> m9_60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m9_93 -> m9_26  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m9_93 -> m9_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m11_0 -> m11_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
m11_0 -> m11_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
m11_6 -> m11_12  [color=darkseagreen4, key=1, label=totalWins, style=dashed];
m11_7 -> m11_14  [color=darkseagreen4, key=1, label=totalLosses, style=dashed];
m11_12 -> m11_12  [color=darkseagreen4, key=1, label=totalWins, style=dashed];
m11_14 -> m11_14  [color=darkseagreen4, key=1, label=totalLosses, style=dashed];
m11_45 -> m11_80  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_44 -> m11_69  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_59 -> m11_64  [color=darkseagreen4, key=1, label=prices, style=dashed];
m11_63 -> m11_65  [color=darkseagreen4, key=1, label=high, style=dashed];
m11_63 -> m11_67  [color=darkseagreen4, key=1, label=high, style=dashed];
m11_63 -> m11_68  [color=darkseagreen4, key=1, label=high, style=dashed];
m11_64 -> m11_68  [color=darkseagreen4, key=1, label=price, style=dashed];
m11_62 -> m11_68  [color=darkseagreen4, key=1, label=drawdowns, style=dashed];
m11_62 -> m11_69  [color=darkseagreen4, key=1, label=drawdowns, style=dashed];
m11_66 -> m11_68  [color=darkseagreen4, key=1, label=high, style=dashed];
m13_2 -> m13_34  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m13_2 -> m13_35  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m13_2 -> m13_47  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m13_2 -> m13_55  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m13_11 -> m13_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_11 -> m13_14  [color=darkseagreen4, key=1, label=addTask, style=dashed];
m13_12 -> m13_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_12 -> m13_14  [color=darkseagreen4, key=1, label=removeTask, style=dashed];
m13_13 -> m13_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_4 -> m13_33  [color=darkseagreen4, key=1, label=end, style=dashed];
m13_4 -> m13_45  [color=darkseagreen4, key=1, label=end, style=dashed];
m13_4 -> m13_54  [color=darkseagreen4, key=1, label=end, style=dashed];
m13_10 -> m13_35  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m13_5 -> m13_34  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_5 -> m13_47  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_59 -> m13_33  [color=darkseagreen4, key=1, label=end, style=dashed];
m13_59 -> m13_45  [color=darkseagreen4, key=1, label=end, style=dashed];
m13_59 -> m13_54  [color=darkseagreen4, key=1, label=end, style=dashed];
m13_60 -> m13_34  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m13_60 -> m13_35  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m13_60 -> m13_47  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m13_60 -> m13_55  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m13_61 -> m13_34  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_61 -> m13_47  [color=darkseagreen4, key=1, label=config, style=dashed];
m13_62 -> m13_35  [color=darkseagreen4, key=1, label=subscription, style=dashed];
}
