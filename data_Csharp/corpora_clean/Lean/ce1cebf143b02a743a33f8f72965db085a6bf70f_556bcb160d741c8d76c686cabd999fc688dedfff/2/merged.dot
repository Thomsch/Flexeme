digraph  {
n269 [label="QuantConnect.Lean.Engine.Engine", span=""];
n270 [label=algorithm, span=""];
n271 [label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
n272 [label=algorithmManager, span=""];
n273 [label=isolator, span=""];
n0 [label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)"];
n1 [label="_liveMode = liveMode", span="72-72", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)"];
n2 [label="_systemHandlers = systemHandlers", span="73-73", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)"];
n3 [label="_algorithmHandlers = algorithmHandlers", span="74-74", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)"];
n4 [label="Exit QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)"];
n5 [label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n6 [label="var algorithm = default(IAlgorithm)", span="85-85", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n7 [label="var algorithmManager = manager", span="86-86", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n13 [label="_systemHandlers.Notify.SetAuthentication(job)", span="98-98", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n14 [label="_algorithmHandlers.Results.Initialize(job, _systemHandlers.Notify, _systemHandlers.Api, _algorithmHandlers.DataFeed, _algorithmHandlers.Setup, _algorithmHandlers.Transactions)", span="101-101", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n18 [label="algorithm = _algorithmHandlers.Setup.CreateAlgorithmInstance(job, assemblyPath)", span="110-110", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n21 [label="brokerage = _algorithmHandlers.Setup.CreateBrokerage(job, algorithm, out factory)", span="117-117", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n22 [label="_algorithmHandlers.DataFeed.Initialize(algorithm, job, _algorithmHandlers.Results, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, _algorithmHandlers.DataProvider)", span="120-120", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n24 [label="var historyProvider = GetHistoryProvider(job.HistoryProvider)", span="126-126", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n28 [label="historyProvider.Initialize(job, _algorithmHandlers.DataProvider, historyDataCacheProvider, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, progress =>\r\n                    {\r\n                        // send progress updates to the result handler only during initialization\r\n                        if (!algorithm.GetLocked() || algorithm.IsWarmingUp)\r\n                        {\r\n                            _algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress));\r\n                        }\r\n                    })", span="133-141", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n30 [label="algorithm.BrokerageMessageHandler = factory.CreateBrokerageMessageHandler(algorithm, job, _systemHandlers.Api)", span="146-146", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n31 [label="initializeComplete = _algorithmHandlers.Setup.Setup(algorithm, brokerage, job, _algorithmHandlers.Results, _algorithmHandlers.Transactions, _algorithmHandlers.RealTime)", span="149-149", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n39 [label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, errorMessage)", span="163-163", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n44 [label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="171-171", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n53 [label="job is LiveNodePacket", span="186-186", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n57 [label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="195-195", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n60 [label="_algorithmHandlers.RealTime.Setup(algorithm, job, _algorithmHandlers.Results, _systemHandlers.Api)", span="200-200", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n69 [label="_algorithmHandlers.Results.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Globals.Version))", span="234-234", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n71 [label="var complete = isolator.ExecuteWithTimeLimit(_algorithmHandlers.Setup.MaximumRuntime, algorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManagement, isolator.CancellationToken);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(err);\r\n                                algorithm.RunTimeError = err;\r\n                                algorithmManager.SetStatus(AlgorithmStatus.RuntimeError);\r\n                                return;\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n                        }, job.Controls.RamAllocation)", span="242-262", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n219 [label="algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManagement, isolator.CancellationToken)", span="250-250", cluster="lambda expression"];
n76 [label="HandleAlgorithmError(job, algorithm.RunTimeError)", span="274-274", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n78 [label="HandleAlgorithmError(job, err)", span="280-280", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n109 [label="_algorithmHandlers.Results.DebugMessage(\r\n                            string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                                job.AlgorithmId, totalSeconds.ToString(''F2''), ((dataPoints/(double) 1000)/totalSeconds).ToString(''F0''),\r\n                                dataPoints.ToString(''N0'')))", span="344-347", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n110 [label="_algorithmHandlers.Results.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statisticsResults, banner)", span="349-349", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n8 [label="var initializeComplete = false", span="91-91", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n223 [label="algorithmManager.SetStatus(AlgorithmStatus.RuntimeError)", span="257-257", cluster="lambda expression"];
n108 [label="var dataPoints = algorithmManager.DataPoints + algorithm.HistoryProvider.DataPointCount", span="343-343", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n9 [label="Thread threadFeed = null", span="92-92", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n10 [label="Thread threadTransactions = null", span="93-93", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n121 [label="threadFeed != null && threadFeed.IsAlive", span="378-378", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n122 [label="threadFeed.Abort()", span="378-378", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n11 [label="Thread threadResults = null", span="94-94", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n123 [label="threadTransactions != null && threadTransactions.IsAlive", span="379-379", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n124 [label="threadTransactions.Abort()", span="379-379", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n12 [label="Thread threadRealTime = null", span="95-95", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n137 [label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44", cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)"];
n15 [label="threadResults = new Thread(_algorithmHandlers.Results.Run, 0) { IsBackground = true, Name = ''Result Thread'' }", span="103-103", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n138 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="91-91", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n16 [label="threadResults.Start()", span="104-104", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n139 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)"];
n125 [label="threadResults != null && threadResults.IsAlive", span="380-380", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n126 [label="threadResults.Abort()", span="380-380", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n17 [label="IBrokerage brokerage = null", span="106-106", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n140 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()"];
n19 [label="_systemHandlers.LeanManagement.SetAlgorithm(algorithm)", span="113-113", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n141 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="80-80", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)"];
n23 [label="algorithm.Transactions.SetOrderProcessor(_algorithmHandlers.Transactions)", span="123-123", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n200 [label="!algorithm.GetLocked() || algorithm.IsWarmingUp", span="136-136", cluster="lambda expression"];
n29 [label="algorithm.HistoryProvider = historyProvider", span="143-143", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n32 [label="_algorithmHandlers.Results.SetAlgorithm(algorithm)", span="152-152", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n33 [label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || _algorithmHandlers.Setup.Errors.Count > 0", span="155-155", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n35 [label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="159-159", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n51 [label="algorithm != null && algorithm.HistoryProvider != null", span="182-182", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n52 [label="Log.Trace(''         History Provider:     '' + algorithm.HistoryProvider.GetType().FullName)", span="184-184", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n58 [label="algorithm.SetLocked()", span="196-196", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n59 [label="_algorithmHandlers.Transactions.Initialize(algorithm, brokerage, _algorithmHandlers.Results)", span="199-199", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n61 [label="brokerage.Message += (sender, message) =>\r\n                    {\r\n                        algorithm.BrokerageMessageHandler.Handle(message);\r\n\r\n                        // fire brokerage message events\r\n                        algorithm.OnBrokerageMessage(message);\r\n                        switch (message.Type)\r\n                        {\r\n                            case BrokerageMessageType.Disconnect:\r\n                                algorithm.OnBrokerageDisconnect();\r\n                                break;\r\n                            case BrokerageMessageType.Reconnect:\r\n                                algorithm.OnBrokerageReconnect();\r\n                                break;\r\n                        }\r\n                    }", span="203-218", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n206 [label="algorithm.BrokerageMessageHandler.Handle(message)", span="205-205", cluster="lambda expression"];
n207 [label="algorithm.OnBrokerageMessage(message)", span="208-208", cluster="lambda expression"];
n210 [label="algorithm.OnBrokerageDisconnect()", span="212-212", cluster="lambda expression"];
n212 [label="algorithm.OnBrokerageReconnect()", span="215-215", cluster="lambda expression"];
n222 [label="algorithm.RunTimeError = err", span="256-256", cluster="lambda expression"];
n75 [label="algorithm.RunTimeError != null", span="272-272", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n79 [label="var trades = algorithm.TradeBuilder.ClosedTrades", span="285-285", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n95 [label="var profitLoss = new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="316-316", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n96 [label="var totalTransactions = algorithm.Transactions.GetOrders(x => x.Status.IsFill()).Count()", span="317-317", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n98 [label="statisticsResults = StatisticsBuilder.Generate(trades, profitLoss, equity, performance, benchmark,\r\n                                    _algorithmHandlers.Setup.StartingPortfolioValue, algorithm.Portfolio.TotalFees, totalTransactions)", span="320-321", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n99 [label="var netReturn = _algorithmHandlers.Setup.StartingPortfolioValue > 0 ?\r\n                                                (algorithm.Portfolio.TotalPortfolioValue - _algorithmHandlers.Setup.StartingPortfolioValue) / _algorithmHandlers.Setup.StartingPortfolioValue\r\n                                                : 0", span="324-326", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n100 [label="banner.Add(''Unrealized'', ''$'' + algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="329-329", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n101 [label="banner.Add(''Fees'', ''-$'' + algorithm.Portfolio.TotalFees.ToString(''N2''))", span="330-330", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n102 [label="banner.Add(''Net Profit'', ''$'' + algorithm.Portfolio.TotalProfit.ToString(''N2''))", span="331-331", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n104 [label="banner.Add(''Equity'', ''$'' + algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="333-333", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n20 [label="IBrokerageFactory factory", span="116-116", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n142 [label="Entry QuantConnect.Lean.Engine.Server.ILeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="41-41", cluster="QuantConnect.Lean.Engine.Server.ILeanManagement.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n143 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)"];
n26 [label="(historyProvider as BrokerageHistoryProvider).SetBrokerage(brokerage)", span="129-129", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n54 [label="Log.Trace(''         Brokerage:      '' + brokerage.GetType().FullName)", span="186-186", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n127 [label="brokerage != null", span="382-382", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n129 [label="brokerage.Disconnect()", span="385-385", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n144 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="53-53", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)"];
n145 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)"];
n25 [label="historyProvider is BrokerageHistoryProvider", span="127-127", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n146 [label="Entry QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="433-433", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)"];
n27 [label="var historyDataCacheProvider = new ZipDataCacheProvider(_algorithmHandlers.DataProvider)", span="132-132", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n147 [label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="42-42", cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)"];
n148 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="44-44", cluster="QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)"];
n149 [label="Entry QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="45-45", cluster="QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)"];
n199 [label="Entry lambda expression", span="133-141", cluster="lambda expression"];
n150 [label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", span="60-60", cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)"];
n151 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
n55 [label=initializeComplete, span="189-189", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n152 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="193-193", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n34 [label="initializeComplete = false", span="157-157", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n40 [label=Exception, span="166-166", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n45 [label="Log.Trace(''JOB HANDLERS: '')", span="176-176", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n36 [label="errorMessage += String.Join('','', _algorithmHandlers.Setup.Errors)", span="160-160", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n153 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)"];
n37 [label="Log.Error(''Engine.Run(): '' + errorMessage)", span="161-161", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n38 [label="_algorithmHandlers.Results.RuntimeError(errorMessage)", span="162-162", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n154 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)"];
n155 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)"];
n156 [label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265", cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)"];
n41 [label="Log.Error(err)", span="168-168", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n42 [label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="169-169", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n157 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)"];
n43 [label="_algorithmHandlers.Results.RuntimeError(runtimeMessage, err.StackTrace)", span="170-170", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n46 [label="Log.Trace(''         DataFeed:     '' + _algorithmHandlers.DataFeed.GetType().FullName)", span="177-177", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n158 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
n47 [label="Log.Trace(''         Setup:        '' + _algorithmHandlers.Setup.GetType().FullName)", span="178-178", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n159 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n48 [label="Log.Trace(''         RealTime:     '' + _algorithmHandlers.RealTime.GetType().FullName)", span="179-179", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n49 [label="Log.Trace(''         Results:      '' + _algorithmHandlers.Results.GetType().FullName)", span="180-180", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n50 [label="Log.Trace(''         Transactions: '' + _algorithmHandlers.Transactions.GetType().FullName)", span="181-181", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n56 [label="var startTime = DateTime.Now", span="192-192", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n116 [label="_algorithmHandlers.Results.Exit()", span="363-363", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n107 [label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="342-342", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n160 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="445-445", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)"];
n161 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="450-450", cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()"];
n162 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="52-52", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)"];
n163 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="42-42", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)"];
n62 [label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.Running)", span="221-221", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n208 [label="message.Type", span="209-209", cluster="lambda expression"];
n63 [label="threadFeed = new Thread(_algorithmHandlers.DataFeed.Run) { IsBackground = true, Name = ''DataFeed Thread'' }", span="224-224", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n164 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
n64 [label="threadTransactions = new Thread(_algorithmHandlers.Transactions.Run) { IsBackground = true, Name = ''Transaction Thread'' }", span="225-225", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n165 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)"];
n66 [label="threadFeed.Start()", span="229-229", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n65 [label="threadRealTime = new Thread(_algorithmHandlers.RealTime.Run) { IsBackground = true, Name = ''RealTime Thread'' }", span="226-226", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n67 [label="threadTransactions.Start()", span="230-230", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n68 [label="threadRealTime.Start()", span="231-231", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n70 [label="var isolator = new Isolator()", span="239-239", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n166 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n167 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)"];
n168 [label="Entry QuantConnect.Isolator.Isolator()", span="55-55", cluster="QuantConnect.Isolator.Isolator()"];
n72 [label="!complete", span="264-264", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n169 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="69-69", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)"];
n218 [label="Entry lambda expression", span="242-262", cluster="lambda expression"];
n73 [label="Log.Error(''Engine.Main(): Failed to complete in time: '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F''))", span="266-266", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n74 [label="throw new Exception(''Failed to complete algorithm within '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F'')\r\n                                + '' seconds. Please make it run faster.'');", span="267-268", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n170 [label="Entry System.TimeSpan.ToString(string)", span="0-0", cluster="System.TimeSpan.ToString(string)"];
n77 [label=Exception, span="277-277", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n172 [label="Entry QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="416-416", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n171 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
n80 [label="var charts = new Dictionary<string, Chart>(_algorithmHandlers.Results.Charts)", span="286-286", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n81 [label="var orders = new Dictionary<int, Order>(_algorithmHandlers.Transactions.Orders)", span="287-287", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n173 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)"];
n92 [label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey) &&\r\n                                charts.ContainsKey(benchmarkKey) &&\r\n                                charts[benchmarkKey].Series.ContainsKey(benchmarkKey)", span="307-311", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n93 [label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="314-314", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n94 [label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="315-315", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n97 [label="var benchmark = charts[benchmarkKey].Series[benchmarkKey].Values", span="318-318", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n82 [label="var holdings = new Dictionary<string, Holding>()", span="288-288", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n83 [label="var banner = new Dictionary<string, string>()", span="289-289", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n174 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n84 [label="var statisticsResults = new StatisticsResults()", span="290-290", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n103 [label="banner.Add(''Return'', netReturn.ToString(''P''))", span="332-332", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n85 [label="var csvTransactionsFileName = Config.Get(''transaction-log'')", span="292-292", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n175 [label="Entry QuantConnect.Statistics.StatisticsResults.StatisticsResults()", span="55-55", cluster="QuantConnect.Statistics.StatisticsResults.StatisticsResults()"];
n86 [label="!string.IsNullOrEmpty(csvTransactionsFileName)", span="293-293", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n176 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)"];
n87 [label="SaveListOfTrades(_algorithmHandlers.Transactions, csvTransactionsFileName)", span="295-295", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n88 [label="string strategyEquityKey = ''Strategy Equity''", span="301-301", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n177 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n178 [label="Entry QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="447-447", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n89 [label="string equityKey = ''Equity''", span="302-302", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n90 [label="string dailyPerformanceKey = ''Daily Performance''", span="303-303", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n91 [label="string benchmarkKey = ''Benchmark''", span="304-304", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n105 [label=Exception, span="336-336", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n179 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
n180 [label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)"];
n181 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)"];
n182 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()"];
n229 [label="Entry lambda expression", span="317-317", cluster="lambda expression"];
n183 [label="Entry QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", span="40-40", cluster="QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)"];
n184 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)"];
n185 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
n106 [label="Log.Error(err, ''Error generating statistics packet'')", span="338-338", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n186 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)"];
n187 [label="Entry long.ToString(string)", span="0-0", cluster="long.ToString(string)"];
n188 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])"];
n111 [label=Exception, span="351-351", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n113 [label="_algorithmHandlers.Transactions.Exit()", span="357-357", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n189 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="212-212", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n112 [label="Log.Error(err, ''Error sending analysis results'')", span="353-353", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n114 [label="_algorithmHandlers.DataFeed.Exit()", span="358-358", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n190 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="62-62", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()"];
n115 [label="_algorithmHandlers.RealTime.Exit()", span="359-359", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n191 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="77-77", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()"];
n192 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="64-64", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()"];
n117 [label="var ts = Stopwatch.StartNew()", span="366-366", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n193 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="243-243", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()"];
n118 [label="(_algorithmHandlers.Results.IsActive \r\n                    || (_algorithmHandlers.Transactions != null && _algorithmHandlers.Transactions.IsActive) \r\n                    || (_algorithmHandlers.DataFeed != null && _algorithmHandlers.DataFeed.IsActive)\r\n                    || (_algorithmHandlers.RealTime != null && _algorithmHandlers.RealTime.IsActive))\r\n                    && ts.ElapsedMilliseconds < 30*1000", span="367-371", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n194 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()"];
n119 [label="Thread.Sleep(100)", span="373-373", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n120 [label="Log.Trace(''Waiting for threads to exit...'')", span="374-374", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n195 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)"];
n196 [label="Entry System.Threading.Thread.Abort()", span="0-0", cluster="System.Threading.Thread.Abort()"];
n128 [label="Log.Trace(''Engine.Run(): Disconnecting from brokerage...'')", span="384-384", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n130 [label="_algorithmHandlers.Setup != null", span="387-387", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n197 [label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="108-108", cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()"];
n131 [label="Log.Trace(''Engine.Run(): Disposing of setup handler...'')", span="389-389", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n133 [label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="392-392", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n132 [label="_algorithmHandlers.Setup.Dispose()", span="390-390", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n198 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()"];
n134 [label=Exception, span="394-394", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n136 [label="Exit QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n135 [label="Log.Error(err, ''Error running algorithm'')", span="396-396", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)"];
n201 [label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress))", span="138-139", cluster="lambda expression"];
n202 [label="Exit lambda expression", span="133-141", cluster="lambda expression"];
n203 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="455-455", cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()"];
n204 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n205 [label="Entry lambda expression", span="203-218", cluster="lambda expression"];
n214 [label="Entry QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", span="27-27", cluster="QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)"];
n215 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="423-423", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)"];
n209 [label="BrokerageMessageType.Disconnect", span="211-211", cluster="lambda expression"];
n211 [label="BrokerageMessageType.Reconnect", span="214-214", cluster="lambda expression"];
n213 [label="Exit lambda expression", span="203-218", cluster="lambda expression"];
n217 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="433-433", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()"];
n216 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="428-428", cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()"];
n220 [label=Exception, span="252-252", cluster="lambda expression"];
n225 [label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="261-261", cluster="lambda expression"];
n227 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManagement, System.Threading.CancellationToken)", span="135-135", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManagement, System.Threading.CancellationToken)"];
n221 [label="Log.Error(err)", span="255-255", cluster="lambda expression"];
n224 [label="return;", span="258-258", cluster="lambda expression"];
n228 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="673-673", cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)"];
n226 [label="Exit lambda expression", span="242-262", cluster="lambda expression"];
n230 [label="x.Status.IsFill()", span="317-317", cluster="lambda expression"];
n231 [label="Exit lambda expression", span="317-317", cluster="lambda expression"];
n232 [label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50", cluster="QuantConnect.Orders.OrderStatus.IsFill()"];
n233 [label="Log.Error(err, ''Breaking out of parent try catch:'')", span="418-418", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n237 [label="var message = ''Runtime Error: '' + err", span="422-422", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n240 [label="_algorithmHandlers.Results.RuntimeError(message, err.StackTrace)", span="425-425", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n241 [label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err)", span="426-426", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n234 [label="_algorithmHandlers.DataFeed != null", span="419-419", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n235 [label="_algorithmHandlers.DataFeed.Exit()", span="419-419", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n236 [label="_algorithmHandlers.Results != null", span="420-420", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n242 [label="Exit QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="416-416", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n238 [label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="423-423", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n239 [label="_algorithmHandlers.Results.LogMessage(message)", span="424-424", cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)"];
n243 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="120-120", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)"];
n244 [label="historyProvider.IsNullOrEmpty()", span="435-435", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)"];
n246 [label="return Composer.Instance.GetExportedValueByTypeName<IHistoryProvider>(historyProvider);", span="439-439", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)"];
n245 [label="historyProvider = Config.Get(''history-provider'', ''SubscriptionDataReaderHistoryProvider'')", span="437-437", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)"];
n248 [label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105", cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()"];
n247 [label="Exit QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="433-433", cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)"];
n249 [label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101", cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)"];
n250 [label="var orders = transactions.GetOrders(x => x.Status.IsFill())", span="449-449", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n251 [label="var path = Path.GetDirectoryName(csvFileName)", span="451-451", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n254 [label="var writer = new StreamWriter(csvFileName)", span="455-455", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n259 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="65-65", cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)"];
n266 [label="Entry lambda expression", span="449-449", cluster="lambda expression"];
n255 [label=orders, span="457-457", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n252 [label="path != null && !Directory.Exists(path)", span="452-452", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n260 [label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0", cluster="System.IO.Path.GetDirectoryName(string)"];
n253 [label="Directory.CreateDirectory(path)", span="453-453", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n261 [label="Entry System.IO.Directory.Exists(string)", span="0-0", cluster="System.IO.Directory.Exists(string)"];
n262 [label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0", cluster="System.IO.Directory.CreateDirectory(string)"];
n263 [label="Entry System.IO.StreamWriter.StreamWriter(string)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(string)"];
n257 [label="writer.WriteLine(line)", span="465-465", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n256 [label="var line = string.Format(''{0},{1},{2},{3},{4}'',\r\n                        order.Time.ToString(''yyyy-MM-dd HH:mm:ss''),\r\n                        order.Symbol.Value,\r\n                        order.Direction,\r\n                        order.Quantity,\r\n                        order.Price)", span="459-464", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n258 [label="Exit QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="447-447", cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)"];
n264 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)"];
n265 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)"];
n267 [label="x.Status.IsFill()", span="449-449", cluster="lambda expression"];
n268 [label="Exit lambda expression", span="449-449", cluster="lambda expression"];
m2_80 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="BrokerageTransactionHandler.cs"];
m2_22 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="BrokerageTransactionHandler.cs"];
m2_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BrokerageTransactionHandler.cs"];
m2_86 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BrokerageTransactionHandler.cs"];
m2_73 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="589-589", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="BrokerageTransactionHandler.cs"];
m2_90 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="BrokerageTransactionHandler.cs"];
m2_33 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="103-103", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageTransactionHandler.cs"];
m2_34 [label="factory = new BacktestingBrokerageFactory()", span="105-105", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageTransactionHandler.cs"];
m2_36 [label="return new BacktestingBrokerage(uninitializedAlgorithm, optionMarketSimulation);", span="108-108", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageTransactionHandler.cs"];
m2_35 [label="var optionMarketSimulation = new BasicOptionAssignmentSimulation()", span="106-106", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageTransactionHandler.cs"];
m2_37 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="103-103", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BrokerageTransactionHandler.cs"];
m2_28 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="BrokerageTransactionHandler.cs"];
m2_82 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="651-651", cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="BrokerageTransactionHandler.cs"];
m2_29 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m2_26 [label="names.SingleOrDefault(name => MatchTypeName(name, algorithmName))", span="89-89", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m2_30 [label="MatchTypeName(name, algorithmName)", span="89-89", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m2_25 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m2_27 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m2_31 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m2_23 [label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="335-335", cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="BrokerageTransactionHandler.cs"];
m2_81 [label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.BacktestingFutureChainProvider()", span="27-27", cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.BacktestingFutureChainProvider()", file="BrokerageTransactionHandler.cs"];
m2_104 [label="Entry string.LastIndexOf(char)", span="0-0", cluster="string.LastIndexOf(char)", file="BrokerageTransactionHandler.cs"];
m2_75 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="639-639", cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="BrokerageTransactionHandler.cs"];
m2_24 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BrokerageTransactionHandler.cs"];
m2_7 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="BrokerageTransactionHandler.cs"];
m2_72 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="358-358", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="BrokerageTransactionHandler.cs"];
m2_71 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="606-606", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="BrokerageTransactionHandler.cs"];
m2_98 [label="Entry Unk.>", span="", cluster="Unk.>", file="BrokerageTransactionHandler.cs"];
m2_40 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BrokerageTransactionHandler.cs"];
m2_10 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="81-81", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_11 [label="string error", span="83-83", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_14 [label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromHours(1), names => names.SingleOrDefault(name => MatchTypeName(name, algorithmName)))", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_15 [label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="90-90", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_12 [label="IAlgorithm algorithm", span="84-84", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_13 [label="var algorithmName = Config.Get(''algorithm-type-name'')", span="85-85", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_16 [label="!complete", span="91-91", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_17 [label="throw new Exception(error + '': try re-building algorithm.'');", span="91-91", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_18 [label="return algorithm;", span="93-93", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_19 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="81-81", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BrokerageTransactionHandler.cs"];
m2_78 [label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", span="27-27", cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", file="BrokerageTransactionHandler.cs"];
m2_85 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="493-493", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BrokerageTransactionHandler.cs"];
m2_8 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="BrokerageTransactionHandler.cs"];
m2_105 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="BrokerageTransactionHandler.cs"];
m2_41 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="121-121", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_42 [label="var initializeComplete = false", span="123-123", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_43 [label="baseJob.Type == PacketType.BacktestNode", span="129-129", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_44 [label="var backtestJob = baseJob as BacktestNodePacket", span="131-131", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_45 [label="algorithm.SetMaximumOrders(int.MaxValue)", span="132-132", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_46 [label="algorithm.SetParameters(baseJob.Parameters)", span="135-135", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_47 [label="algorithm.SetLiveMode(false)", span="136-136", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_48 [label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="137-137", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_49 [label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="140-140", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_50 [label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()))", span="143-143", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_51 [label="algorithm.SetFutureChainProvider(new CachingFutureChainProvider(new BacktestingFutureChainProvider()))", span="146-146", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_52 [label="algorithm.Initialize()", span="149-149", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_53 [label="algorithm.SetDateTime(algorithm.StartDate.ConvertToUtc(algorithm.TimeZone))", span="152-152", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_54 [label="backtestJob.PeriodStart = algorithm.StartDate", span="155-155", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_55 [label="backtestJob.PeriodFinish = algorithm.EndDate", span="156-156", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_56 [label="backtestJob.BacktestId = algorithm.GetType().Name", span="157-157", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_58 [label="backtestJob.UserId = baseJob.UserId", span="159-159", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_59 [label="backtestJob.Channel = baseJob.Channel", span="160-160", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_61 [label="StartingPortfolioValue = algorithm.Portfolio.Cash", span="164-164", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_68 [label="algorithm.PostInitialize()", span="182-182", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs", color=green, community=0];
m2_69 [label="return initializeComplete;", span="184-184", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs", color=green, community=0];
m2_62 [label="throw new Exception(''The ConsoleSetupHandler is for backtests only. Use the BrokerageSetupHandler.'');", span="168-168", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_57 [label="backtestJob.Type = PacketType.BacktestNode", span="158-158", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_60 [label="StartingDate = backtestJob.PeriodStart", span="163-163", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_63 [label=Exception, span="171-171", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_66 [label="Errors.Count == 0", span="177-177", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_64 [label="Log.Error(err)", span="173-173", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_65 [label="Errors.Add(new AlgorithmSetupException(''During the algorithm initialization, the following exception has occurred: '', err))", span="174-174", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_67 [label="initializeComplete = true", span="179-179", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs", color=green, community=0];
m2_70 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="121-121", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageTransactionHandler.cs"];
m2_38 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", span="69-69", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", file="BrokerageTransactionHandler.cs"];
m2_84 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="BrokerageTransactionHandler.cs"];
m2_97 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BrokerageTransactionHandler.cs"];
m2_32 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="211-211", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="BrokerageTransactionHandler.cs"];
m2_99 [label="string.IsNullOrEmpty(expectedTypeName)", span="213-213", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="BrokerageTransactionHandler.cs"];
m2_101 [label="return currentTypeFullName == expectedTypeName\r\n                || currentTypeFullName.Substring(currentTypeFullName.LastIndexOf('.') + 1) == expectedTypeName;", span="217-218", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="BrokerageTransactionHandler.cs"];
m2_100 [label="return true;", span="215-215", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="BrokerageTransactionHandler.cs"];
m2_102 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="211-211", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="BrokerageTransactionHandler.cs"];
m2_21 [label="Entry Loader.cstr", span="", cluster="Loader.cstr", file="BrokerageTransactionHandler.cs"];
m2_77 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BrokerageTransactionHandler.cs"];
m2_88 [label="Entry QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string, System.Exception)", span="38-38", cluster="QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string, System.Exception)", file="BrokerageTransactionHandler.cs"];
m2_89 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BrokerageTransactionHandler.cs"];
m2_74 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="191-191", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="BrokerageTransactionHandler.cs"];
m2_91 [label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="193-193", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="BrokerageTransactionHandler.cs"];
m2_92 [label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="195-195", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="BrokerageTransactionHandler.cs"];
m2_93 [label="dataFeedsConfigString != string.Empty", span="196-196", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="BrokerageTransactionHandler.cs"];
m2_94 [label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="198-198", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="BrokerageTransactionHandler.cs"];
m2_95 [label="return dataFeeds;", span="201-201", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="BrokerageTransactionHandler.cs"];
m2_96 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="191-191", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="BrokerageTransactionHandler.cs"];
m2_79 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="645-645", cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BrokerageTransactionHandler.cs"];
m2_76 [label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65", cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="BrokerageTransactionHandler.cs"];
m2_106 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="225-225", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="BrokerageTransactionHandler.cs"];
m2_107 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="225-225", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="BrokerageTransactionHandler.cs"];
m2_103 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="BrokerageTransactionHandler.cs"];
m2_39 [label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", file="BrokerageTransactionHandler.cs"];
m2_0 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="BrokerageTransactionHandler.cs"];
m2_1 [label="MaxOrders = int.MaxValue", span="68-68", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="BrokerageTransactionHandler.cs"];
m2_2 [label="StartingPortfolioValue = 0", span="69-69", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="BrokerageTransactionHandler.cs"];
m2_3 [label="StartingDate = new DateTime(1998, 01, 01)", span="70-70", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="BrokerageTransactionHandler.cs"];
m2_4 [label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="71-71", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="BrokerageTransactionHandler.cs"];
m2_5 [label="Errors = new List<Exception>()", span="72-72", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="BrokerageTransactionHandler.cs"];
m2_6 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="BrokerageTransactionHandler.cs"];
m2_20 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="BrokerageTransactionHandler.cs"];
m2_83 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="333-333", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs"];
m2_108 [label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", span="", file="BrokerageTransactionHandler.cs"];
m2_109 [label=algorithmName, span="", file="BrokerageTransactionHandler.cs"];
m3_31 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="323-323", cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="IAlgorithm.cs"];
m3_46 [label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="386-386", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", file="IAlgorithm.cs"];
m3_47 [label="Exit QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="386-386", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", file="IAlgorithm.cs"];
m3_14 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs"];
m3_15 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs"];
m3_24 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", span="306-306", cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", file="IAlgorithm.cs"];
m3_25 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", span="306-306", cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", file="IAlgorithm.cs"];
m3_18 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", span="290-290", cluster="QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", file="IAlgorithm.cs"];
m3_19 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", span="290-290", cluster="QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", file="IAlgorithm.cs"];
m3_58 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", span="428-428", cluster="QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", file="IAlgorithm.cs"];
m3_59 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", span="428-428", cluster="QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", file="IAlgorithm.cs"];
m3_52 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="406-406", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs"];
m3_53 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="406-406", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs"];
m3_34 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="335-335", cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs"];
m3_35 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="335-335", cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs"];
m3_4 [label="Entry QuantConnect.Interfaces.IAlgorithm.Log(string)", span="249-249", cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs"];
m3_5 [label="Exit QuantConnect.Interfaces.IAlgorithm.Log(string)", span="249-249", cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs"];
m3_36 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="346-346", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="IAlgorithm.cs"];
m3_37 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="346-346", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="IAlgorithm.cs"];
m3_10 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="265-265", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="IAlgorithm.cs"];
m3_11 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="265-265", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="IAlgorithm.cs"];
m3_26 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", span="312-312", cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", file="IAlgorithm.cs"];
m3_27 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", span="312-312", cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", file="IAlgorithm.cs"];
m3_48 [label="Entry QuantConnect.Interfaces.IAlgorithm.Quit(string)", span="394-394", cluster="QuantConnect.Interfaces.IAlgorithm.Quit(string)", file="IAlgorithm.cs"];
m3_49 [label="Exit QuantConnect.Interfaces.IAlgorithm.Quit(string)", span="394-394", cluster="QuantConnect.Interfaces.IAlgorithm.Quit(string)", file="IAlgorithm.cs"];
m3_54 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="412-412", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs"];
m3_55 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="412-412", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs"];
m3_6 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="IAlgorithm.cs"];
m3_7 [label="Exit QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="IAlgorithm.cs"];
m3_42 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="369-369", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs"];
m3_43 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="369-369", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs"];
m3_12 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="270-270", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs"];
m3_13 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="270-270", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs"];
m3_16 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="283-283", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs"];
m3_17 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="283-283", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs"];
m3_44 [label="Entry QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", span="379-379", cluster="QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", file="IAlgorithm.cs"];
m3_45 [label="Exit QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", span="379-379", cluster="QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", file="IAlgorithm.cs"];
m3_50 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", span="400-400", cluster="QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", file="IAlgorithm.cs"];
m3_51 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", span="400-400", cluster="QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", file="IAlgorithm.cs"];
m3_22 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", span="301-301", cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", file="IAlgorithm.cs"];
m3_23 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", span="301-301", cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", file="IAlgorithm.cs"];
m3_28 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="318-318", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs"];
m3_29 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="318-318", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs"];
m3_2 [label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="243-243", cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs"];
m3_3 [label="Exit QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="243-243", cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs"];
m3_56 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="421-421", cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="IAlgorithm.cs"];
m3_57 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="421-421", cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="IAlgorithm.cs"];
m3_8 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="260-260", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs"];
m3_9 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="260-260", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs"];
m3_60 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="434-434", cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", file="IAlgorithm.cs"];
m3_61 [label="Exit QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="434-434", cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", file="IAlgorithm.cs"];
m3_32 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", span="329-329", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", file="IAlgorithm.cs"];
m3_33 [label="Exit QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", span="329-329", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", file="IAlgorithm.cs"];
m3_38 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", span="355-355", cluster="QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", file="IAlgorithm.cs"];
m3_39 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", span="355-355", cluster="QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", file="IAlgorithm.cs"];
m3_20 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", span="295-295", cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", file="IAlgorithm.cs"];
m3_21 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", span="295-295", cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", file="IAlgorithm.cs"];
m3_0 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="219-219", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs"];
m3_1 [label="Exit QuantConnect.Interfaces.IAlgorithm.Initialize()", span="219-219", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs"];
m3_40 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="361-361", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs"];
m3_41 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="361-361", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs"];
m4_4 [label="Entry QuantConnect.Logging.ILogHandler.Trace(string)", span="39-39", cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="ILogHandler.cs"];
m4_5 [label="Exit QuantConnect.Logging.ILogHandler.Trace(string)", span="39-39", cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="ILogHandler.cs"];
m4_0 [label="Entry QuantConnect.Logging.ILogHandler.Error(string)", span="27-27", cluster="QuantConnect.Logging.ILogHandler.Error(string)", file="ILogHandler.cs"];
m4_1 [label="Exit QuantConnect.Logging.ILogHandler.Error(string)", span="27-27", cluster="QuantConnect.Logging.ILogHandler.Error(string)", file="ILogHandler.cs"];
m4_2 [label="Entry QuantConnect.Logging.ILogHandler.Debug(string)", span="33-33", cluster="QuantConnect.Logging.ILogHandler.Debug(string)", file="ILogHandler.cs"];
m4_3 [label="Exit QuantConnect.Logging.ILogHandler.Debug(string)", span="33-33", cluster="QuantConnect.Logging.ILogHandler.Debug(string)", file="ILogHandler.cs"];
m5_57 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="LiveTradingRealTimeHandler.cs"];
m5_40 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm)", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_43 [label="Entry QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", span="100-100", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", file="LiveTradingRealTimeHandler.cs"];
m5_49 [label="var universe = algorithm.UniverseManager.Values.OfType<UserDefinedUniverse>()\r\n                .Single(u => u.SelectSymbols(default(DateTime), null).Contains(security.Symbol))", span="102-103", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", file="LiveTradingRealTimeHandler.cs"];
m5_50 [label="var config = security.Subscriptions.First()", span="105-105", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", file="LiveTradingRealTimeHandler.cs"];
m5_51 [label="var offsetProvider = new TimeZoneOffsetProvider(TimeZones.NewYork, startTimeUtc, endTimeUtc)", span="106-106", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", file="LiveTradingRealTimeHandler.cs"];
m5_52 [label="var data = LinqExtensions.Range(algorithm.StartDate, algorithm.EndDate, c => c + config.Increment).Select(time => new DataPoint\r\n            {\r\n                Time = time,\r\n                EndTime = time + config.Increment\r\n            })\r\n            .Select(d => SubscriptionData.Create(config, security.Exchange.Hours, offsetProvider, d))\r\n            .ToList()", span="107-113", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", file="LiveTradingRealTimeHandler.cs"];
m5_54 [label="return new Subscription(universe, security, config, data.GetEnumerator(), offsetProvider, endTimeUtc, endTimeUtc, false);", span="116-116", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", file="LiveTradingRealTimeHandler.cs"];
m5_53 [label="dataPointCount = data.Count", span="115-115", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", file="LiveTradingRealTimeHandler.cs"];
m5_55 [label="Exit QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", span="100-100", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.CreateSubscription(QuantConnect.Algorithm.QCAlgorithm, QuantConnect.Securities.Security, System.DateTime, System.DateTime, out int)", file="LiveTradingRealTimeHandler.cs"];
m5_42 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="LiveTradingRealTimeHandler.cs"];
m5_39 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.MockDataFeed()", span="79-79", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.MockDataFeed()", file="LiveTradingRealTimeHandler.cs"];
m5_45 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", span="64-64", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="LiveTradingRealTimeHandler.cs"];
m5_77 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_66 [label="u.SelectSymbols(default(DateTime), null).Contains(security.Symbol)", span="103-103", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_78 [label="SubscriptionData.Create(config, security.Exchange.Hours, offsetProvider, d)", span="112-112", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_65 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_71 [label="c + config.Increment", span="107-107", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_74 [label="new DataPoint\r\n            {\r\n                Time = time,\r\n                EndTime = time + config.Increment\r\n            }", span="107-111", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_70 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_73 [label="Entry lambda expression", span="107-111", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_67 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_72 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_75 [label="Exit lambda expression", span="107-111", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_79 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="LiveTradingRealTimeHandler.cs"];
m5_48 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="LiveTradingRealTimeHandler.cs"];
m5_46 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="LiveTradingRealTimeHandler.cs"];
m5_64 [label="Entry Unk.GetEnumerator", span="", cluster="Unk.GetEnumerator", file="LiveTradingRealTimeHandler.cs"];
m5_80 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="LiveTradingRealTimeHandler.cs"];
m5_56 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="LiveTradingRealTimeHandler.cs"];
m5_4 [label="Entry QuantConnect.Tests.Engine.PerformanceBenchmarkAlgorithms.CreateBenchmarkAlgorithm(int, QuantConnect.Resolution)", span="27-27", cluster="QuantConnect.Tests.Engine.PerformanceBenchmarkAlgorithms.CreateBenchmarkAlgorithm(int, QuantConnect.Resolution)", file="LiveTradingRealTimeHandler.cs"];
m5_62 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="LiveTradingRealTimeHandler.cs"];
m5_5 [label="Entry QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", span="49-49", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_6 [label="algorithm.Initialize()", span="51-51", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_7 [label="algorithm.Securities", span="54-54", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_10 [label="var endTimeUtc = algorithm.EndDate.ConvertToUtc(TimeZones.NewYork)", span="60-60", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_11 [label="var startTimeUtc = algorithm.StartDate.ConvertToUtc(TimeZones.NewYork)", span="61-61", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_13 [label="var universeSelection = new UniverseSelection(feed, algorithm)", span="64-64", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_14 [label="var synchronizer = new SubscriptionSynchronizer(universeSelection, algorithm.TimeZone, algorithm.Portfolio.CashBook, startTimeUtc)", span="65-65", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_17 [label="algorithm.Securities", span="69-69", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_19 [label="subscriptions.Add(CreateSubscription(algorithm, kvp.Value, startTimeUtc, endTimeUtc, out dataPointCount))", span="72-72", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_22 [label="Console.WriteLine($''Running {subscriptions.Count} subscriptions with a total of {totalDataPoints} data points. Start: {algorithm.StartDate:yyyy-MM-dd} End: {algorithm.EndDate:yyyy-MM-dd}'')", span="80-80", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_8 [label="var security = kvp.Value", span="56-56", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_9 [label="security.Exchange = new SecurityExchange(SecurityExchangeHours.AlwaysOpen(security.Exchange.TimeZone))", span="57-57", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_12 [label="var feed = new AlgorithmManagerTests.MockDataFeed()", span="63-63", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_15 [label="var totalDataPoints = 0", span="67-67", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_21 [label="synchronizer.Sync(subscriptions)", span="77-77", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_27 [label="var timeSlice = synchronizer.Sync(subscriptions)", span="88-88", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_16 [label="var subscriptions = new List<Subscription>()", span="68-68", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_20 [label="totalDataPoints += dataPointCount", span="73-73", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_18 [label="int dataPointCount", span="71-71", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_23 [label="var count = 0", span="82-82", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_24 [label="DateTime currentTime", span="83-83", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_29 [label="count += timeSlice.DataPointCount", span="90-90", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_25 [label="var dateTimeMaxValue = DateTime.MaxValue", span="84-84", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_26 [label="var stopwatch = Stopwatch.StartNew()", span="85-85", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_30 [label="currentTime != dateTimeMaxValue", span="92-92", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_31 [label="stopwatch.Stop()", span="94-94", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_32 [label="var kps = count / 1000d / stopwatch.Elapsed.TotalSeconds", span="96-96", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_33 [label="Console.WriteLine($''Current Time: {currentTime:u}  Elapsed time: {(int)stopwatch.Elapsed.TotalSeconds,4}s  KPS: {kps,7:.00}  COUNT: {count,10}'')", span="97-97", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_28 [label="currentTime = timeSlice.Time", span="89-89", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_34 [label="Exit QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", span="49-49", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.TestSubscriptionSynchronizerSpeed(QuantConnect.Algorithm.QCAlgorithm)", file="LiveTradingRealTimeHandler.cs"];
m5_76 [label="Entry QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.DataPoint.DataPoint()", span="119-119", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.DataPoint.DataPoint()", file="LiveTradingRealTimeHandler.cs"];
m5_41 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.SubscriptionSynchronizer(QuantConnect.Lean.Engine.DataFeeds.UniverseSelection, DateTimeZone, QuantConnect.Securities.CashBook, System.DateTime)", span="51-51", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.SubscriptionSynchronizer(QuantConnect.Lean.Engine.DataFeeds.UniverseSelection, DateTimeZone, QuantConnect.Securities.CashBook, System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m5_37 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="LiveTradingRealTimeHandler.cs"];
m5_68 [label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="184-184", cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="LiveTradingRealTimeHandler.cs"];
m5_38 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs"];
m5_0 [label="Entry QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.SubscriptionSynchronizerPerformance(int, QuantConnect.Resolution)", span="41-41", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.SubscriptionSynchronizerPerformance(int, QuantConnect.Resolution)", file="LiveTradingRealTimeHandler.cs"];
m5_1 [label="var algorithm = PerformanceBenchmarkAlgorithms.CreateBenchmarkAlgorithm(securityCount, resolution)", span="45-45", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.SubscriptionSynchronizerPerformance(int, QuantConnect.Resolution)", file="LiveTradingRealTimeHandler.cs"];
m5_2 [label="TestSubscriptionSynchronizerSpeed(algorithm)", span="46-46", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.SubscriptionSynchronizerPerformance(int, QuantConnect.Resolution)", file="LiveTradingRealTimeHandler.cs"];
m5_3 [label="Exit QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.SubscriptionSynchronizerPerformance(int, QuantConnect.Resolution)", span="41-41", cluster="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests.SubscriptionSynchronizerPerformance(int, QuantConnect.Resolution)", file="LiveTradingRealTimeHandler.cs"];
m5_60 [label="Entry QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="234-234", cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="LiveTradingRealTimeHandler.cs"];
m5_35 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="491-491", cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="LiveTradingRealTimeHandler.cs"];
m5_36 [label="Entry QuantConnect.Securities.SecurityExchange.SecurityExchange(QuantConnect.Securities.SecurityExchangeHours)", span="77-77", cluster="QuantConnect.Securities.SecurityExchange.SecurityExchange(QuantConnect.Securities.SecurityExchangeHours)", file="LiveTradingRealTimeHandler.cs"];
m5_44 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="LiveTradingRealTimeHandler.cs"];
m5_69 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="LiveTradingRealTimeHandler.cs"];
m5_58 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="LiveTradingRealTimeHandler.cs"];
m5_61 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="LiveTradingRealTimeHandler.cs"];
m5_63 [label="Entry Subscription.cstr", span="", cluster="Subscription.cstr", file="LiveTradingRealTimeHandler.cs"];
m5_59 [label="Entry QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", span="51-51", cluster="QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", file="LiveTradingRealTimeHandler.cs"];
m5_81 [label="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests", span="", file="LiveTradingRealTimeHandler.cs"];
m5_82 [label="QuantConnect.Securities.Security", span="", file="LiveTradingRealTimeHandler.cs"];
m5_83 [label=config, span="", file="LiveTradingRealTimeHandler.cs"];
m5_84 [label=offsetProvider, span="", file="LiveTradingRealTimeHandler.cs"];
m7_0 [label="Entry QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", span="25-25", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", file="OSTests.cs"];
m7_1 [label="var serverStatistics = OS.GetServerStatistics()", span="27-27", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", file="OSTests.cs"];
m7_2 [label="var maxKeyLength = serverStatistics.Keys.Max(x => x.Length)", span="28-28", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", color=red, community=0, file="OSTests.cs"];
m7_3 [label=serverStatistics, span="29-29", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", color=red, community=1, file="OSTests.cs"];
m7_4 [label="Console.WriteLine(''{0, -'' + maxKeyLength + ''} - {1}'', statistic.Key, statistic.Value)", span="31-31", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", color=red, community=0, file="OSTests.cs"];
m7_5 [label="Exit QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", span="25-25", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", file="OSTests.cs"];
m7_6 [label="Entry QuantConnect.OS.GetServerStatistics()", span="228-228", cluster="QuantConnect.OS.GetServerStatistics()", file="OSTests.cs"];
m7_8 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="OSTests.cs"];
m7_7 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="OSTests.cs"];
m7_9 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="OSTests.cs"];
m7_10 [label="x.Length", span="28-28", cluster="lambda expression", color=red, community=0, file="OSTests.cs"];
m7_11 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="OSTests.cs"];
m9_97 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_19 [label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="267-267", cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="SecurityPortfolioManagerTests.cs"];
m9_0 [label="Entry QuantConnect.Holding.Holding()", span="83-83", cluster="QuantConnect.Holding.Holding()", file="SecurityPortfolioManagerTests.cs"];
m9_1 [label="CurrencySymbol = ''$''", span="85-85", cluster="QuantConnect.Holding.Holding()", file="SecurityPortfolioManagerTests.cs"];
m9_2 [label="ConversionRate = 1m", span="86-86", cluster="QuantConnect.Holding.Holding()", file="SecurityPortfolioManagerTests.cs"];
m9_3 [label="Exit QuantConnect.Holding.Holding()", span="83-83", cluster="QuantConnect.Holding.Holding()", file="SecurityPortfolioManagerTests.cs"];
m9_21 [label="Entry QuantConnect.Holding.Clone()", span="120-120", cluster="QuantConnect.Holding.Clone()", file="SecurityPortfolioManagerTests.cs"];
m9_22 [label="return new Holding\r\n            {\r\n                AveragePrice = AveragePrice,\r\n                Symbol = Symbol,\r\n                Type = Type,\r\n                Quantity = Quantity,\r\n                MarketPrice = MarketPrice,\r\n                MarketValue = MarketValue,\r\n                UnrealizedPnL = UnrealizedPnL,\r\n                ConversionRate  = ConversionRate,\r\n                CurrencySymbol = CurrencySymbol\r\n            };", span="122-133", cluster="QuantConnect.Holding.Clone()", file="SecurityPortfolioManagerTests.cs"];
m9_23 [label="Exit QuantConnect.Holding.Clone()", span="120-120", cluster="QuantConnect.Holding.Clone()", file="SecurityPortfolioManagerTests.cs"];
m9_31 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SecurityPortfolioManagerTests.cs"];
m9_24 [label="Entry QuantConnect.Holding.ToString()", span="139-139", cluster="QuantConnect.Holding.ToString()", file="SecurityPortfolioManagerTests.cs"];
m9_25 [label="var value = string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4}'', Symbol.Value, Quantity, CurrencySymbol, AveragePrice, MarketPrice)", span="141-141", cluster="QuantConnect.Holding.ToString()", file="SecurityPortfolioManagerTests.cs"];
m9_26 [label="ConversionRate != 1m", span="143-143", cluster="QuantConnect.Holding.ToString()", file="SecurityPortfolioManagerTests.cs"];
m9_27 [label="value += string.Format('' - Conversion: {0}'', ConversionRate)", span="145-145", cluster="QuantConnect.Holding.ToString()", file="SecurityPortfolioManagerTests.cs"];
m9_28 [label="return value;", span="148-148", cluster="QuantConnect.Holding.ToString()", file="SecurityPortfolioManagerTests.cs"];
m9_29 [label="Exit QuantConnect.Holding.ToString()", span="139-139", cluster="QuantConnect.Holding.ToString()", file="SecurityPortfolioManagerTests.cs"];
m9_32 [label="Entry QuantConnect.AlgorithmControl.AlgorithmControl()", span="471-471", cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="SecurityPortfolioManagerTests.cs"];
m9_33 [label="HasSubscribers = true", span="474-474", cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="SecurityPortfolioManagerTests.cs"];
m9_34 [label="Status = AlgorithmStatus.Running", span="475-475", cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="SecurityPortfolioManagerTests.cs"];
m9_35 [label="ChartSubscription = ''Strategy Equity''", span="476-476", cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="SecurityPortfolioManagerTests.cs"];
m9_36 [label="Exit QuantConnect.AlgorithmControl.AlgorithmControl()", span="471-471", cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="SecurityPortfolioManagerTests.cs"];
m9_4 [label="Entry QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="93-93", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_5 [label="var holding = security.Holdings", span="96-96", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_10 [label="CurrencySymbol = Currencies.GetCurrencySymbol(security.QuoteCurrency.Symbol)", span="102-102", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_11 [label="ConversionRate = security.QuoteCurrency.ConversionRate", span="103-103", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_6 [label="Symbol = holding.Symbol", span="98-98", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_7 [label="Type = holding.Type", span="99-99", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_8 [label="Quantity = holding.Quantity", span="100-100", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_9 [label="MarketValue = holding.HoldingsValue", span="101-101", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_13 [label="holding.Type == SecurityType.Forex || holding.Type == SecurityType.Cfd", span="106-106", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_15 [label="AveragePrice = Math.Round(holding.AveragePrice, rounding)", span="111-111", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_16 [label="MarketPrice = Math.Round(holding.Price, rounding)", span="112-112", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_17 [label="UnrealizedPnL = Math.Round(holding.UnrealizedProfit, 2)", span="113-113", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_12 [label="var rounding = 2", span="105-105", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_14 [label="rounding = 5", span="108-108", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_18 [label="Exit QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="93-93", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs"];
m9_84 [label="Entry QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", span="257-257", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_94 [label="tradeFee = 0.005m * tradeValue", span="281-281", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", color=green, community=0, file="SecurityPortfolioManagerTests.cs"];
m9_87 [label="var tradeValue = (price * quantity)", span="261-261", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_93 [label="tradeFee > (0.005m * tradeValue)", span="279-279", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_95 [label="return Math.Abs(tradeFee);", span="285-285", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", color=green, community=0, file="SecurityPortfolioManagerTests.cs"];
m9_89 [label="tradeFee = quantity * 0.013m", span="266-266", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_90 [label="tradeFee = quantity * 0.008m", span="270-270", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_92 [label="tradeFee = 1", span="277-277", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_86 [label="quantity = Math.Abs(quantity)", span="260-260", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_88 [label="quantity < 500", span="264-264", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_91 [label="tradeFee < 1", span="275-275", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_85 [label="decimal tradeFee", span="259-259", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_96 [label="Exit QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", span="257-257", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioManagerTests.cs"];
m9_20 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="SecurityPortfolioManagerTests.cs"];
m9_37 [label="QuantConnect.Holding", span="", file="SecurityPortfolioManagerTests.cs"];
m9_38 [label="QuantConnect.AlgorithmControl", span="", file="SecurityPortfolioManagerTests.cs"];
m11_0 [label="Entry QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="29-29", cluster="QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionDataConfig.cs"];
m11_1 [label="algorithm.Liquidate()", span="31-31", cluster="QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionDataConfig.cs"];
m11_2 [label="return new CommandResultPacket(this, true);", span="32-32", cluster="QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionDataConfig.cs"];
m11_3 [label="Exit QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="29-29", cluster="QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionDataConfig.cs"];
m11_4 [label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="515-515", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SubscriptionDataConfig.cs"];
m11_5 [label="Entry QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", span="38-38", cluster="QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", file="SubscriptionDataConfig.cs"];
m11_6 [label="QuantConnect.Commands.LiquidateCommand", span="", file="SubscriptionDataConfig.cs"];
m12_6 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="TradeBarConsolidatorTests.cs"];
m12_0 [label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", span="33-33", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="TradeBarConsolidatorTests.cs"];
m12_1 [label="_user = user", span="35-35", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="TradeBarConsolidatorTests.cs"];
m12_2 [label="_password = password", span="36-36", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="TradeBarConsolidatorTests.cs"];
m12_3 [label="!IntrinioConfig.IsInitialized", span="38-38", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="TradeBarConsolidatorTests.cs"];
m12_4 [label="throw new InvalidOperationException(''Please set a valid Intrinio user and password.'');", span="40-40", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="TradeBarConsolidatorTests.cs"];
m12_5 [label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", span="33-33", cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="TradeBarConsolidatorTests.cs"];
n269 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n201  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n269 -> n241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Engine"];
n270 -> n200  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n270 -> n206  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n270 -> n207  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n270 -> n210  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n270 -> n212  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n270 -> n219  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n270 -> n222  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n271 -> n219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n272 -> n219  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
n272 -> n223  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
n273 -> n219  [key=1, style=dashed, color=darkseagreen4, label=isolator];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineSystemHandlers"];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers"];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n0  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.AlgorithmManager"];
n5 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n5 -> n110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n71  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
n7 -> n219  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
n7 -> n223  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
n7 -> n108  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
n13 -> n14  [key=0, style=solid];
n13 -> n137  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n138  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n141  [key=2, style=dotted];
n18 -> n21  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n22  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n23  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n28  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n200  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n29  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n30  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n31  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n32  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n33  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n35  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n51  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n52  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n57  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n58  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n59  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n60  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n61  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n206  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n207  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n210  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n212  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n71  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n219  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n222  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n75  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n76  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n79  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n95  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n96  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n98  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n99  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n100  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n101  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n102  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n104  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n108  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n18 -> n110  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
n21 -> n22  [key=0, style=solid];
n21 -> n143  [key=2, style=dotted];
n21 -> n26  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n21 -> n30  [key=1, style=dashed, color=darkseagreen4, label=factory];
n21 -> n31  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n21 -> n54  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n21 -> n59  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n21 -> n61  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n21 -> n127  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n21 -> n129  [key=1, style=dashed, color=darkseagreen4, label=brokerage];
n22 -> n23  [key=0, style=solid];
n22 -> n144  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n146  [key=2, style=dotted];
n24 -> n26  [key=1, style=dashed, color=darkseagreen4, label=historyProvider];
n24 -> n28  [key=1, style=dashed, color=darkseagreen4, label=historyProvider];
n24 -> n29  [key=1, style=dashed, color=darkseagreen4, label=historyProvider];
n28 -> n29  [key=0, style=solid];
n28 -> n149  [key=2, style=dotted];
n28 -> n199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n30 -> n31  [key=0, style=solid];
n30 -> n150  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n151  [key=2, style=dotted];
n31 -> n33  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
n31 -> n55  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
n39 -> n40  [key=0, style=solid];
n39 -> n45  [key=0, style=solid];
n39 -> n156  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n156  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n55  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n160  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n163  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n166  [key=2, style=dotted];
n69 -> n167  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n169  [key=2, style=dotted];
n71 -> n218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n219 -> n220  [key=0, style=solid];
n219 -> n225  [key=0, style=solid];
n219 -> n227  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n76 -> n79  [key=0, style=solid];
n76 -> n172  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n172  [key=2, style=dotted];
n109 -> n110  [key=0, style=solid];
n109 -> n186  [key=2, style=dotted];
n109 -> n187  [key=2, style=dotted];
n109 -> n188  [key=2, style=dotted];
n109 -> n167  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n113  [key=0, style=solid];
n110 -> n189  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n223 -> n224  [key=0, style=solid];
n223 -> n228  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n121  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
n9 -> n122  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
n10 -> n11  [key=0, style=solid];
n10 -> n123  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
n10 -> n124  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
n121 -> n122  [key=0, style=solid];
n121 -> n123  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n196  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n123 -> n124  [key=0, style=solid];
n123 -> n125  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n124 -> n196  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n139  [key=2, style=dotted];
n15 -> n125  [key=1, style=dashed, color=darkseagreen4, label=threadResults];
n15 -> n126  [key=1, style=dashed, color=darkseagreen4, label=threadResults];
n16 -> n17  [key=0, style=solid];
n16 -> n140  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n127  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n126 -> n196  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n142  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n145  [key=2, style=dotted];
n200 -> n201  [key=0, style=solid];
n200 -> n202  [key=0, style=solid];
n200 -> n203  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n152  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n40  [key=0, style=solid];
n33 -> n45  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n153  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n159  [key=2, style=dotted];
n52 -> n158  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n161  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n162  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
n61 -> n207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
n61 -> n208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
n206 -> n207  [key=0, style=solid];
n206 -> n214  [key=2, style=dotted];
n207 -> n208  [key=0, style=solid];
n207 -> n215  [key=2, style=dotted];
n210 -> n213  [key=0, style=solid];
n210 -> n216  [key=2, style=dotted];
n212 -> n213  [key=0, style=solid];
n212 -> n217  [key=2, style=dotted];
n222 -> n223  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n77  [key=0, style=solid];
n75 -> n79  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n79 -> n98  [key=1, style=dashed, color=darkseagreen4, label=trades];
n95 -> n96  [key=0, style=solid];
n95 -> n180  [key=2, style=dotted];
n95 -> n98  [key=1, style=dashed, color=darkseagreen4, label=profitLoss];
n96 -> n97  [key=0, style=solid];
n96 -> n181  [key=2, style=dotted];
n96 -> n182  [key=2, style=dotted];
n96 -> n229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n96 -> n98  [key=1, style=dashed, color=darkseagreen4, label=totalTransactions];
n98 -> n99  [key=0, style=solid];
n98 -> n183  [key=2, style=dotted];
n98 -> n110  [key=1, style=dashed, color=darkseagreen4, label=statisticsResults];
n99 -> n100  [key=0, style=solid];
n99 -> n103  [key=1, style=dashed, color=darkseagreen4, label=netReturn];
n100 -> n101  [key=0, style=solid];
n100 -> n184  [key=2, style=dotted];
n100 -> n185  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n101 -> n184  [key=2, style=dotted];
n101 -> n185  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n102 -> n184  [key=2, style=dotted];
n102 -> n185  [key=2, style=dotted];
n104 -> n105  [key=0, style=solid];
n104 -> n107  [key=0, style=solid];
n104 -> n184  [key=2, style=dotted];
n104 -> n185  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n147  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n159  [key=2, style=dotted];
n54 -> n158  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n130  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n129 -> n197  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=0, style=solid];
n146 -> n244  [key=0, style=solid];
n146 -> n246  [key=1, style=dashed, color=darkseagreen4, label=string];
n27 -> n28  [key=0, style=solid];
n27 -> n148  [key=2, style=dotted];
n199 -> n200  [key=0, style=solid];
n199 -> n201  [key=1, style=dashed, color=darkseagreen4, label=int];
n55 -> n56  [key=0, style=solid];
n55 -> n116  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n55  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
n40 -> n41  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n158  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n153  [key=2, style=dotted];
n36 -> n36  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
n36 -> n38  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
n36 -> n39  [key=1, style=dashed, color=darkseagreen4, label=errorMessage];
n37 -> n38  [key=0, style=solid];
n37 -> n154  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n155  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n157  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [key=1, style=dashed, color=darkseagreen4, label=runtimeMessage];
n43 -> n44  [key=0, style=solid];
n43 -> n155  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n159  [key=2, style=dotted];
n46 -> n158  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n159  [key=2, style=dotted];
n47 -> n158  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n159  [key=2, style=dotted];
n48 -> n158  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n159  [key=2, style=dotted];
n49 -> n158  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n159  [key=2, style=dotted];
n50 -> n158  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n107  [key=1, style=dashed, color=darkseagreen4, label=startTime];
n116 -> n117  [key=0, style=solid];
n116 -> n193  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n109  [key=1, style=dashed, color=darkseagreen4, label=totalSeconds];
n62 -> n63  [key=0, style=solid];
n62 -> n164  [key=2, style=dotted];
n208 -> n209  [key=0, style=solid];
n208 -> n211  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n165  [key=2, style=dotted];
n63 -> n66  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
n63 -> n121  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
n63 -> n122  [key=1, style=dashed, color=darkseagreen4, label=threadFeed];
n64 -> n65  [key=0, style=solid];
n64 -> n165  [key=2, style=dotted];
n64 -> n67  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
n64 -> n123  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
n64 -> n124  [key=1, style=dashed, color=darkseagreen4, label=threadTransactions];
n66 -> n67  [key=0, style=solid];
n66 -> n140  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n165  [key=2, style=dotted];
n65 -> n68  [key=1, style=dashed, color=darkseagreen4, label=threadRealTime];
n67 -> n68  [key=0, style=solid];
n67 -> n140  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n140  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n168  [key=2, style=dotted];
n70 -> n219  [key=1, style=dashed, color=darkseagreen4, label=isolator];
n72 -> n73  [key=0, style=solid];
n72 -> n75  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n73 -> n170  [key=2, style=dotted];
n73 -> n154  [key=2, style=dotted];
n74 -> n79  [key=0, style=solid];
n74 -> n171  [key=2, style=dotted];
n74 -> n170  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n172 -> n233  [key=0, style=solid];
n172 -> n237  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
n172 -> n240  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
n172 -> n241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n80 -> n81  [key=0, style=solid];
n80 -> n173  [key=2, style=dotted];
n80 -> n92  [key=1, style=dashed, color=darkseagreen4, label=charts];
n80 -> n93  [key=1, style=dashed, color=darkseagreen4, label=charts];
n80 -> n94  [key=1, style=dashed, color=darkseagreen4, label=charts];
n80 -> n97  [key=1, style=dashed, color=darkseagreen4, label=charts];
n81 -> n82  [key=0, style=solid];
n81 -> n173  [key=2, style=dotted];
n81 -> n110  [key=1, style=dashed, color=darkseagreen4, label=orders];
n92 -> n93  [key=0, style=solid];
n92 -> n105  [key=0, style=solid];
n92 -> n107  [key=0, style=solid];
n92 -> n179  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n98  [key=1, style=dashed, color=darkseagreen4, label=equity];
n94 -> n95  [key=0, style=solid];
n94 -> n98  [key=1, style=dashed, color=darkseagreen4, label=performance];
n97 -> n98  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n174  [key=2, style=dotted];
n82 -> n110  [key=1, style=dashed, color=darkseagreen4, label=holdings];
n83 -> n84  [key=0, style=solid];
n83 -> n174  [key=2, style=dotted];
n83 -> n100  [key=1, style=dashed, color=darkseagreen4, label=banner];
n83 -> n101  [key=1, style=dashed, color=darkseagreen4, label=banner];
n83 -> n102  [key=1, style=dashed, color=darkseagreen4, label=banner];
n83 -> n103  [key=1, style=dashed, color=darkseagreen4, label=banner];
n83 -> n104  [key=1, style=dashed, color=darkseagreen4, label=banner];
n83 -> n110  [key=1, style=dashed, color=darkseagreen4, label=banner];
n84 -> n85  [key=0, style=solid];
n84 -> n175  [key=2, style=dotted];
n84 -> n110  [key=1, style=dashed, color=darkseagreen4, label=statisticsResults];
n103 -> n104  [key=0, style=solid];
n103 -> n184  [key=2, style=dotted];
n103 -> n185  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n176  [key=2, style=dotted];
n85 -> n87  [key=1, style=dashed, color=darkseagreen4, label=csvTransactionsFileName];
n86 -> n87  [key=0, style=solid];
n86 -> n88  [key=0, style=solid];
n86 -> n177  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n178  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n92  [key=1, style=dashed, color=darkseagreen4, label=strategyEquityKey];
n88 -> n93  [key=1, style=dashed, color=darkseagreen4, label=strategyEquityKey];
n88 -> n94  [key=1, style=dashed, color=darkseagreen4, label=strategyEquityKey];
n178 -> n250  [key=0, style=solid];
n178 -> n251  [key=1, style=dashed, color=darkseagreen4, label=string];
n178 -> n254  [key=1, style=dashed, color=darkseagreen4, label=string];
n89 -> n90  [key=0, style=solid];
n89 -> n92  [key=1, style=dashed, color=darkseagreen4, label=equityKey];
n89 -> n93  [key=1, style=dashed, color=darkseagreen4, label=equityKey];
n90 -> n91  [key=0, style=solid];
n90 -> n92  [key=1, style=dashed, color=darkseagreen4, label=dailyPerformanceKey];
n90 -> n94  [key=1, style=dashed, color=darkseagreen4, label=dailyPerformanceKey];
n91 -> n92  [key=0, style=solid];
n91 -> n97  [key=1, style=dashed, color=darkseagreen4, label=benchmarkKey];
n105 -> n106  [key=0, style=solid];
n229 -> n230  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n106 -> n157  [key=2, style=dotted];
n111 -> n112  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n190  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n157  [key=2, style=dotted];
n114 -> n115  [key=0, style=solid];
n114 -> n191  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n192  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n194  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n121  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n195  [key=2, style=dotted];
n120 -> n118  [key=0, style=solid];
n120 -> n158  [key=2, style=dotted];
n128 -> n129  [key=0, style=solid];
n128 -> n158  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n133  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n158  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n136  [key=0, style=solid];
n133 -> n158  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n198  [key=2, style=dotted];
n134 -> n135  [key=0, style=solid];
n136 -> n5  [key=0, style=bold, color=blue];
n135 -> n136  [key=0, style=solid];
n135 -> n157  [key=2, style=dotted];
n201 -> n202  [key=0, style=solid];
n201 -> n204  [key=2, style=dotted];
n201 -> n164  [key=2, style=dotted];
n202 -> n199  [key=0, style=bold, color=blue];
n205 -> n206  [key=0, style=solid];
n205 -> n207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
n205 -> n208  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
n209 -> n210  [key=0, style=solid];
n211 -> n212  [key=0, style=solid];
n213 -> n205  [key=0, style=bold, color=blue];
n220 -> n221  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n225 -> n158  [key=2, style=dotted];
n221 -> n222  [key=0, style=solid];
n221 -> n157  [key=2, style=dotted];
n224 -> n226  [key=0, style=solid];
n226 -> n218  [key=0, style=bold, color=blue];
n230 -> n231  [key=0, style=solid];
n230 -> n232  [key=2, style=dotted];
n231 -> n229  [key=0, style=bold, color=blue];
n233 -> n234  [key=0, style=solid];
n233 -> n157  [key=2, style=dotted];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [key=1, style=dashed, color=darkseagreen4, label=message];
n237 -> n240  [key=1, style=dashed, color=darkseagreen4, label=message];
n237 -> n241  [key=1, style=dashed, color=darkseagreen4, label=message];
n240 -> n241  [key=0, style=solid];
n240 -> n155  [key=2, style=dotted];
n241 -> n242  [key=0, style=solid];
n241 -> n156  [key=2, style=dotted];
n234 -> n235  [key=0, style=solid];
n234 -> n236  [key=0, style=solid];
n235 -> n236  [key=0, style=solid];
n235 -> n191  [key=2, style=dotted];
n236 -> n237  [key=0, style=solid];
n236 -> n242  [key=0, style=solid];
n242 -> n172  [key=0, style=bold, color=blue];
n238 -> n239  [key=0, style=solid];
n238 -> n158  [key=2, style=dotted];
n239 -> n240  [key=0, style=solid];
n239 -> n243  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n244 -> n246  [key=0, style=solid];
n244 -> n248  [key=2, style=dotted];
n246 -> n247  [key=0, style=solid];
n246 -> n249  [key=2, style=dotted];
n245 -> n246  [key=0, style=solid];
n245 -> n176  [key=2, style=dotted];
n247 -> n146  [key=0, style=bold, color=blue];
n250 -> n251  [key=0, style=solid];
n250 -> n259  [key=2, style=dotted];
n250 -> n266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n250 -> n255  [key=1, style=dashed, color=darkseagreen4, label=orders];
n251 -> n252  [key=0, style=solid];
n251 -> n260  [key=2, style=dotted];
n251 -> n253  [key=1, style=dashed, color=darkseagreen4, label=path];
n254 -> n255  [key=0, style=solid];
n254 -> n263  [key=2, style=dotted];
n254 -> n257  [key=1, style=dashed, color=darkseagreen4, label=writer];
n266 -> n267  [key=0, style=solid];
n255 -> n256  [key=0, style=solid];
n255 -> n258  [key=0, style=solid];
n252 -> n253  [key=0, style=solid];
n252 -> n254  [key=0, style=solid];
n252 -> n261  [key=2, style=dotted];
n253 -> n254  [key=0, style=solid];
n253 -> n262  [key=2, style=dotted];
n257 -> n255  [key=0, style=solid];
n257 -> n265  [key=2, style=dotted];
n256 -> n257  [key=0, style=solid];
n256 -> n264  [key=2, style=dotted];
n256 -> n188  [key=2, style=dotted];
n258 -> n178  [key=0, style=bold, color=blue];
n267 -> n268  [key=0, style=solid];
n267 -> n232  [key=2, style=dotted];
n268 -> n266  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_38  [key=2, style=dotted];
m2_34 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerageFactory"];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_40  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_39  [key=2, style=dotted];
m2_37 -> m2_33  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=2, style=dotted];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_27 -> m2_25  [key=0, style=bold, color=blue];
m2_31 -> m2_29  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_10 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_11 -> m2_12  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_21  [key=2, style=dotted];
m2_14 -> m2_22  [key=2, style=dotted];
m2_14 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_23  [key=2, style=dotted];
m2_15 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=error];
m2_15 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_20  [key=2, style=dotted];
m2_13 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m2_13 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=0, style=solid];
m2_17 -> m2_24  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_10  [key=0, style=bold, color=blue];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_41 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_41 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_41 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m2_41 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m2_41 -> m2_68  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IAlgorithm"];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_69  [key=1, style=dashed, color=green, label=initializeComplete];
m2_42 -> m2_12  [key=3, color=darkorchid, style=bold, label="Parameter variable int value"];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_62  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m2_44 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m2_44 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m2_44 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m2_44 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m2_44 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m2_44 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_71  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_72  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_73  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_74  [key=2, style=dotted];
m2_48 -> m2_75  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_76  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_77  [key=2, style=dotted];
m2_50 -> m2_78  [key=2, style=dotted];
m2_50 -> m2_79  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_80  [key=2, style=dotted];
m2_51 -> m2_81  [key=2, style=dotted];
m2_51 -> m2_82  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_83  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_84  [key=2, style=dotted];
m2_53 -> m2_85  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_86  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_61 -> m2_63  [key=0, style=solid];
m2_61 -> m2_66  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid, color=green];
m2_68 -> m2_90  [key=2, style=dotted, color=green];
m2_69 -> m2_70  [key=0, style=solid, color=green];
m2_62 -> m2_66  [key=0, style=solid];
m2_62 -> m2_24  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_63 -> m2_64  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid, color=green];
m2_66 -> m2_68  [key=0, style=solid, color=green];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> n157  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_88  [key=2, style=dotted];
m2_65 -> m2_89  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid, color=green];
m2_67 -> m2_69  [key=1, style=dashed, color=green, label=initializeComplete];
m2_70 -> m2_41  [key=0, style=bold, color=blue];
m2_32 -> m2_99  [key=0, style=solid];
m2_32 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_101  [key=0, style=solid];
m2_99 -> m2_103  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_104  [key=2, style=dotted];
m2_101 -> m2_105  [key=2, style=dotted];
m2_100 -> m2_102  [key=0, style=solid];
m2_102 -> m2_32  [key=0, style=bold, color=blue];
m2_74 -> m2_91  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_20  [key=2, style=dotted];
m2_91 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m2_91 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_97  [key=2, style=dotted];
m2_92 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label=dataFeeds];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_95  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_98  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_96 -> m2_74  [key=0, style=bold, color=blue];
m2_106 -> m2_107  [key=0, style=solid];
m2_107 -> m2_106  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_9  [key=2, style=dotted];
m2_6 -> m2_0  [key=0, style=bold, color=blue];
m2_108 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m2_108 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m2_108 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m2_108 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m2_108 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m2_108 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m2_108 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m2_108 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m2_108 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m2_109 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m2_109 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m3_31 -> n161  [key=0, style=bold, color=blue];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_46  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_14  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_24  [key=0, style=bold, color=blue];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_18  [key=0, style=bold, color=blue];
m3_58 -> m3_59  [key=0, style=solid];
m3_59 -> m3_58  [key=0, style=bold, color=blue];
m3_52 -> m3_53  [key=0, style=solid];
m3_53 -> m3_52  [key=0, style=bold, color=blue];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_34  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_4  [key=0, style=bold, color=blue];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_36  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_10  [key=0, style=bold, color=blue];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_26  [key=0, style=bold, color=blue];
m3_48 -> m3_49  [key=0, style=solid];
m3_49 -> m3_48  [key=0, style=bold, color=blue];
m3_54 -> m3_55  [key=0, style=solid];
m3_55 -> m3_54  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_6  [key=0, style=bold, color=blue];
m3_42 -> m3_43  [key=0, style=solid];
m3_43 -> m3_42  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_12  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_16  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_44  [key=0, style=bold, color=blue];
m3_50 -> m3_51  [key=0, style=solid];
m3_51 -> m3_50  [key=0, style=bold, color=blue];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_22  [key=0, style=bold, color=blue];
m3_28 -> m3_29  [key=0, style=solid];
m3_29 -> m3_28  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [key=0, style=bold, color=blue];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_56  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_8  [key=0, style=bold, color=blue];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_60  [key=0, style=bold, color=blue];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_32  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_39 -> m3_38  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_20  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid];
m3_41 -> m3_40  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_4  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [key=0, style=bold, color=blue];
m5_43 -> m5_49  [key=0, style=solid];
m5_43 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m5_43 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m5_43 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m5_43 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m5_43 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m5_43 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_56  [key=2, style=dotted];
m5_49 -> m5_57  [key=2, style=dotted];
m5_49 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_49 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=universe];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_58  [key=2, style=dotted];
m5_50 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_50 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_50 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_50 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_50 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_59  [key=2, style=dotted];
m5_51 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label=offsetProvider];
m5_51 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=offsetProvider];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_60  [key=2, style=dotted];
m5_52 -> m5_61  [key=2, style=dotted];
m5_52 -> m5_62  [key=2, style=dotted];
m5_52 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_52 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_52 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_52 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_63  [key=2, style=dotted];
m5_54 -> m5_64  [key=2, style=dotted];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m5_55 -> m5_43  [key=0, style=bold, color=blue];
m5_77 -> m5_78  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_68  [key=2, style=dotted];
m5_66 -> m5_69  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_80  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_76  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_67 -> m5_65  [key=0, style=bold, color=blue];
m5_72 -> m5_70  [key=0, style=bold, color=blue];
m5_75 -> m5_73  [key=0, style=bold, color=blue];
m5_79 -> m5_77  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m5_5 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m5_5 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m5_5 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m5_5 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m5_5 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m5_5 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m5_5 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_35  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_38  [key=2, style=dotted];
m5_10 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=endTimeUtc];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_38  [key=2, style=dotted];
m5_11 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=startTimeUtc];
m5_11 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=startTimeUtc];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_40  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_41  [key=2, style=dotted];
m5_14 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=synchronizer];
m5_14 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label=synchronizer];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_21  [key=0, style=solid];
m5_17 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_43  [key=2, style=dotted];
m5_19 -> m5_44  [key=2, style=dotted];
m5_19 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_46  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m5_9 -> m5_7  [key=0, style=solid];
m5_9 -> m5_36  [key=2, style=dotted];
m5_9 -> m5_37  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_39  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=totalDataPoints];
m5_15 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=totalDataPoints];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_45  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_45  [key=2, style=dotted];
m5_27 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_42  [key=2, style=dotted];
m5_16 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m5_16 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m5_16 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m5_16 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m5_20 -> m5_17  [key=0, style=solid];
m5_20 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=totalDataPoints];
m5_20 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=totalDataPoints];
m5_18 -> m5_19  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=count];
m5_24 -> m5_25  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=count];
m5_29 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=count];
m5_29 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=count];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=dateTimeMaxValue];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> n194  [key=2, style=dotted];
m5_26 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=stopwatch];
m5_26 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=stopwatch];
m5_26 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=stopwatch];
m5_30 -> m5_26  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_48  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_46  [key=2, style=dotted];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=currentTime];
m5_28 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=currentTime];
m5_34 -> m5_5  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_81 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests"];
m5_81 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.DataFeeds.SubscriptionSynchronizerTests"];
m5_82 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m5_82 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m5_83 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_83 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_83 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label=config];
m5_84 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label=offsetProvider];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_6  [key=2, style=dotted];
m7_1 -> m7_3  [key=1, style=dashed, color=red, label=serverStatistics];
m7_2 -> m7_3  [key=0, style=solid, color=red];
m7_2 -> m7_7  [key=2, style=dotted, color=red];
m7_2 -> m7_9  [key=1, style=dashed, color=red, label="lambda expression"];
m7_2 -> m7_4  [key=1, style=dashed, color=red, label=maxKeyLength];
m7_3 -> m7_4  [key=0, style=solid, color=red];
m7_3 -> m7_5  [key=0, style=solid, color=red];
m7_4 -> m7_3  [key=0, style=solid, color=red];
m7_4 -> m7_8  [key=2, style=dotted, color=red];
m7_4 -> m7_4  [key=1, style=dashed, color=red, label=statistic];
m7_5 -> m7_0  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid, color=red];
m7_10 -> m7_11  [key=0, style=solid, color=red];
m7_11 -> m7_9  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_21 -> m9_22  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_0  [key=2, style=dotted];
m9_23 -> m9_21  [key=0, style=bold, color=blue];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> n188  [key=2, style=dotted];
m9_25 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label=value];
m9_25 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label=value];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [key=0, style=solid];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_31  [key=2, style=dotted];
m9_27 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label=value];
m9_28 -> m9_29  [key=0, style=solid];
m9_29 -> m9_24  [key=0, style=bold, color=blue];
m9_32 -> m9_33  [key=0, style=solid];
m9_33 -> m9_34  [key=0, style=solid];
m9_34 -> m9_35  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_36 -> m9_32  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_4 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label=holding];
m9_5 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=holding];
m9_5 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label=holding];
m9_5 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label=holding];
m9_5 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label=holding];
m9_5 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label=holding];
m9_5 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label=holding];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_19  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_20  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_20  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_20  [key=2, style=dotted];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label=rounding];
m9_12 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label=rounding];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label=rounding];
m9_18 -> m9_4  [key=0, style=bold, color=blue];
m9_84 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m9_94 -> m9_95  [key=0, style=solid, color=green];
m9_87 -> m9_94  [key=1, style=dashed, color=green, label=tradeValue];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label=tradeValue];
m9_93 -> m9_94  [key=0, style=solid, color=green];
m9_93 -> m9_95  [key=0, style=solid, color=green];
m9_95 -> m9_96  [key=0, style=solid, color=green];
m9_95 -> m9_97  [key=2, style=dotted, color=green];
m9_89 -> m9_95  [key=1, style=dashed, color=green, label=tradeFee];
m9_89 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label=tradeFee];
m9_89 -> m9_91  [key=0, style=solid];
m9_90 -> m9_95  [key=1, style=dashed, color=green, label=tradeFee];
m9_90 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label=tradeFee];
m9_90 -> m9_91  [key=0, style=solid];
m9_92 -> m9_95  [key=0, style=solid, color=green];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_89  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m9_86 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m9_86 -> m9_97  [key=2, style=dotted];
m9_86 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m9_86 -> m9_88  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_90  [key=0, style=solid];
m9_91 -> m9_93  [key=0, style=solid];
m9_91 -> m9_92  [key=0, style=solid];
m9_85 -> m9_86  [key=0, style=solid];
m9_96 -> m9_84  [key=0, style=bold, color=blue];
m9_37 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_37 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m9_38 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmControl"];
m9_38 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmControl"];
m9_38 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmControl"];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_4  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_5  [key=2, style=dotted];
m11_3 -> m11_0  [key=0, style=bold, color=blue];
m11_6 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Commands.LiquidateCommand"];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_6  [key=2, style=dotted];
m12_5 -> m12_0  [key=0, style=bold, color=blue];
}
