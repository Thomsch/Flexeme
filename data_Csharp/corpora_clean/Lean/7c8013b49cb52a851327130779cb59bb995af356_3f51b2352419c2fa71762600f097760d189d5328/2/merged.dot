digraph  {
n101 [label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", span=""];
n102 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
n103 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
n104 [label=deepITM, span=""];
n105 [label=backtestingBrokerage, span=""];
n0 [label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", span="57-57", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n1 [label="_lastUpdate == DateTime.MinValue ||\r\n                algorithm.UtcTime - _lastUpdate > _securitiesRescanPeriod", span="59-60", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n2 [label="var expirations = algorithm.Securities.Keys\r\n                            .Where(x => x.ID.SecurityType == SecurityType.Option &&\r\n                                        x.ID.Date > algorithm.UtcTime &&\r\n                                        x.ID.Date - algorithm.UtcTime <= _securitiesRescanPeriod)\r\n                            .Select(x => x.ID.Date)\r\n                            .OrderBy(x => x)\r\n                            .ToList()", span="62-68", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n34 [label="x.ID.SecurityType == SecurityType.Option &&\r\n                                        x.ID.Date > algorithm.UtcTime &&\r\n                                        x.ID.Date - algorithm.UtcTime <= _securitiesRescanPeriod", span="63-65", cluster="lambda expression"];
n11 [label="_lastUpdate = algorithm.UtcTime", span="91-91", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n13 [label="algorithm.UtcTime >= _assignmentScans.Peek()", span="98-98", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n14 [label="_assignmentScans.Count > 0 && \r\n                            algorithm.UtcTime >= _assignmentScans.Peek()", span="100-101", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n12 [label="_assignmentScans.Count > 0", span="94-94", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n3 [label="var scansCount = _priorExpiration.TotalMinutes / _assignmentScanPeriod.TotalMinutes", span="70-70", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n20 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n21 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n22 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy"];
n23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
n33 [label="Entry lambda expression", span="63-65", cluster="lambda expression"];
n36 [label="Entry lambda expression", span="66-66", cluster="lambda expression"];
n39 [label="Entry lambda expression", span="67-67", cluster="lambda expression"];
n5 [label=expirations, span="75-75", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n4 [label="var scans = new List<DateTime>()", span="73-73", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n7 [label="Enumerable.Range(0, (int)scansCount)", span="79-79", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n24 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n8 [label="scans.Add(startDate.AddMinutes(count * _assignmentScanPeriod.TotalMinutes))", span="81-81", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n9 [label="var randomizedScans = scans\r\n                                    .DistinctBy(x => new DateTime(x.Year, x.Month, x.Day, x.Hour, 0, 0)) // DistinctBy hour \r\n                                    .OrderBy(x => x)\r\n                                    .Select(x => x.AddMinutes(_rand.NextDouble() * _assignmentScanPeriod.TotalMinutes))", span="84-87", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n6 [label="var startDate = expirationDate - _priorExpiration", span="77-77", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n25 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)"];
n26 [label="Entry Unk.AddMinutes", span="", cluster="Unk.AddMinutes"];
n27 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
n10 [label="_assignmentScans = new Queue<DateTime>(randomizedScans)", span="89-89", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n28 [label="Entry System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", span="264-264", cluster="System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)"];
n29 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)"];
n42 [label="Entry lambda expression", span="85-85", cluster="lambda expression"];
n46 [label="Entry lambda expression", span="86-86", cluster="lambda expression"];
n49 [label="Entry lambda expression", span="87-87", cluster="lambda expression"];
n30 [label="Entry Queue<DateTime>.cstr", span="", cluster="Queue<DateTime>.cstr"];
n18 [label="return false;", span="112-112", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n17 [label="return false;", span="109-109", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n31 [label="Entry System.Collections.Generic.Queue<T>.Peek()", span="0-0", cluster="System.Collections.Generic.Queue<T>.Peek()"];
n15 [label="_assignmentScans.Dequeue()", span="103-103", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n16 [label="return true;", span="106-106", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n32 [label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0", cluster="System.Collections.Generic.Queue<T>.Dequeue()"];
n19 [label="Exit QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", span="57-57", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)"];
n35 [label="Exit lambda expression", span="63-65", cluster="lambda expression"];
n37 [label="x.ID.Date", span="66-66", cluster="lambda expression"];
n38 [label="Exit lambda expression", span="66-66", cluster="lambda expression"];
n40 [label=x, span="67-67", cluster="lambda expression"];
n41 [label="Exit lambda expression", span="67-67", cluster="lambda expression"];
n43 [label="new DateTime(x.Year, x.Month, x.Day, x.Hour, 0, 0)", span="85-85", cluster="lambda expression"];
n44 [label="Exit lambda expression", span="85-85", cluster="lambda expression"];
n45 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)"];
n47 [label=x, span="86-86", cluster="lambda expression"];
n48 [label="Exit lambda expression", span="86-86", cluster="lambda expression"];
n50 [label="x.AddMinutes(_rand.NextDouble() * _assignmentScanPeriod.TotalMinutes)", span="87-87", cluster="lambda expression"];
n51 [label="Exit lambda expression", span="87-87", cluster="lambda expression"];
n52 [label="Entry System.Random.NextDouble()", span="0-0", cluster="System.Random.NextDouble()"];
n53 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)"];
n54 [label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="119-119", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)"];
n55 [label="var backtestingBrokerage = (BacktestingBrokerage)brokerage", span="121-121", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)"];
n56 [label="Func<Symbol, bool> deepITM = symbol =>\r\n            {\r\n                var undelyingPrice = algorithm.Securities[symbol.Underlying].Close;\r\n\r\n                var result =\r\n                    symbol.ID.OptionRight == OptionRight.Call ?\r\n                        (undelyingPrice - symbol.ID.StrikePrice) / undelyingPrice > _deepITM :\r\n                        (symbol.ID.StrikePrice - undelyingPrice) / undelyingPrice > _deepITM;\r\n\r\n                return result;\r\n            }", span="123-133", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)"];
n61 [label="var undelyingPrice = algorithm.Securities[symbol.Underlying].Close", span="125-125", cluster="lambda expression"];
n57 [label="algorithm.Securities\r\n                // we take only options that expire soon\r\n                .Where(x => x.Key.ID.SecurityType == SecurityType.Option &&\r\n                            x.Key.ID.Date - algorithm.UtcTime <= _priorExpiration)\r\n                // we look into short positions only (short for user means long for us)\r\n                .Where(x => x.Value.Holdings.IsShort)\r\n                // we take only deep ITM strikes\r\n                .Where(x => deepITM(x.Key))\r\n                // we estimate P/L\r\n                .Where(x => EstimateArbitragePnL((Option)x.Value, (OptionHolding)x.Value.Holdings, algorithm.Securities[x.Value.Symbol.Underlying]) > 0.0m)\r\n                .ToList()\r\n                // we exercise options with positive expected P/L (over basic sale of option)\r\n                .ForEach(x => backtestingBrokerage.ActivateOptionAssignment((Option)x.Value, (int)((OptionHolding)x.Value.Holdings).AbsoluteQuantity))", span="135-147", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)"];
n66 [label="x.Key.ID.SecurityType == SecurityType.Option &&\r\n                            x.Key.ID.Date - algorithm.UtcTime <= _priorExpiration", span="137-138", cluster="lambda expression"];
n76 [label="EstimateArbitragePnL((Option)x.Value, (OptionHolding)x.Value.Holdings, algorithm.Securities[x.Value.Symbol.Underlying]) > 0.0m", span="144-144", cluster="lambda expression"];
n80 [label="backtestingBrokerage.ActivateOptionAssignment((Option)x.Value, (int)((OptionHolding)x.Value.Holdings).AbsoluteQuantity)", span="147-147", cluster="lambda expression"];
n62 [label="var result =\r\n                    symbol.ID.OptionRight == OptionRight.Call ?\r\n                        (undelyingPrice - symbol.ID.StrikePrice) / undelyingPrice > _deepITM :\r\n                        (symbol.ID.StrikePrice - undelyingPrice) / undelyingPrice > _deepITM", span="127-130", cluster="lambda expression"];
n72 [label="deepITM(x.Key)", span="142-142", cluster="lambda expression"];
n58 [label="Exit QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="119-119", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)"];
n59 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach"];
n65 [label="Entry lambda expression", span="137-138", cluster="lambda expression"];
n68 [label="Entry lambda expression", span="140-140", cluster="lambda expression"];
n71 [label="Entry lambda expression", span="142-142", cluster="lambda expression"];
n75 [label="Entry lambda expression", span="144-144", cluster="lambda expression"];
n79 [label="Entry lambda expression", span="147-147", cluster="lambda expression"];
n60 [label="Entry lambda expression", span="123-133", cluster="lambda expression"];
n63 [label="return result;", span="132-132", cluster="lambda expression"];
n64 [label="Exit lambda expression", span="123-133", cluster="lambda expression"];
n67 [label="Exit lambda expression", span="137-138", cluster="lambda expression"];
n69 [label="x.Value.Holdings.IsShort", span="140-140", cluster="lambda expression"];
n70 [label="Exit lambda expression", span="140-140", cluster="lambda expression"];
n73 [label="Exit lambda expression", span="142-142", cluster="lambda expression"];
n74 [label="Entry Unk.deepITM", span="", cluster="Unk.deepITM"];
n77 [label="Exit lambda expression", span="144-144", cluster="lambda expression"];
n78 [label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", span="151-151", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n81 [label="Exit lambda expression", span="147-147", cluster="lambda expression"];
n82 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="378-378", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)"];
n83 [label="var optionPrice = option.BidPrice", span="159-159", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n84 [label="var underlyingPrice = option.Symbol.ID.OptionRight == OptionRight.Call ?\r\n                                   underlying.BidPrice :\r\n                                    underlying.AskPrice", span="163-165", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n85 [label="var underlyingQuantity = option.Symbol.ID.OptionRight == OptionRight.Call ?\r\n                                        option.GetExerciseQuantity((int)holding.AbsoluteQuantity) :\r\n                                        -option.GetExerciseQuantity((int)holding.AbsoluteQuantity)", span="167-169", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n86 [label="var marketOrder1 = new MarketOrder(option.Symbol, -holding.Quantity, option.LocalTime.ConvertToUtc(option.Exchange.TimeZone))", span="172-172", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n87 [label="var orderFee1 = option.FeeModel.GetOrderFee(option, marketOrder1)", span="173-173", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n88 [label="var basePnL = (optionPrice - holding.AveragePrice) * -holding.Quantity * option.QuoteCurrency.ConversionRate * option.SymbolProperties.ContractMultiplier - orderFee1", span="175-175", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n89 [label="var optionExerciseOrder2 = new OptionExerciseOrder(option.Symbol, (int)holding.AbsoluteQuantity, option.LocalTime.ConvertToUtc(option.Exchange.TimeZone))", span="178-178", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n90 [label="var optionOrderFee2 = option.FeeModel.GetOrderFee(option, optionExerciseOrder2)", span="179-179", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n91 [label="var undelyingMarketOrder2 = new MarketOrder(underlying.Symbol, -underlyingQuantity, underlying.LocalTime.ConvertToUtc(underlying.Exchange.TimeZone))", span="181-181", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n92 [label="var undelyingOrderFee2 = underlying.FeeModel.GetOrderFee(underlying, undelyingMarketOrder2)", span="182-182", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n93 [label="var altPnL = (underlyingPrice - option.StrikePrice) * underlyingQuantity * underlying.QuoteCurrency.ConversionRate * option.ContractUnitOfTrade\r\n                        - undelyingOrderFee2 \r\n                        - holding.AveragePrice * holding.AbsoluteQuantity * option.SymbolProperties.ContractMultiplier * option.QuoteCurrency.ConversionRate\r\n                        - optionOrderFee2", span="185-188", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n96 [label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(int)", span="153-153", cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(int)"];
n97 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)"];
n98 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="486-486", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)"];
n99 [label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31", cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)"];
n94 [label="return altPnL - basePnL;", span="190-190", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
n100 [label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="41-41", cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, int, System.DateTime, string)"];
n95 [label="Exit QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", span="151-151", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)"];
m0_0 [label="Entry QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", span="38-38", cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", file="ExpiryFutureFilter.cs"];
m0_1 [label="_minExpiry = minExpiry", span="40-40", cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_2 [label="_maxExpiry = maxExpiry", span="41-41", cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_3 [label="maxExpiry < minExpiry", span="44-44", cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_4 [label="throw new ArgumentException(''maxExpiry must be greater than minExpiry'');", span="44-44", cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_5 [label="_maxExpiry > Time.MaxTimeSpan", span="47-47", cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_6 [label="_maxExpiry = Time.MaxTimeSpan", span="47-47", cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_7 [label="Exit QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", span="38-38", cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", file="ExpiryFutureFilter.cs"];
m0_8 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="ExpiryFutureFilter.cs"];
m0_9 [label="Entry QuantConnect.Securities.ExpiryFutureFilter.Filter(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", span="55-55", cluster="QuantConnect.Securities.ExpiryFutureFilter.Filter(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="ExpiryFutureFilter.cs"];
m0_10 [label="underlying == null", span="59-59", cluster="QuantConnect.Securities.ExpiryFutureFilter.Filter(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_11 [label="return symbols;", span="61-61", cluster="QuantConnect.Securities.ExpiryFutureFilter.Filter(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_12 [label="var minExpiry = underlying.Time.Date + _minExpiry", span="64-64", cluster="QuantConnect.Securities.ExpiryFutureFilter.Filter(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_13 [label="var maxExpiry = underlying.Time.Date + _maxExpiry", span="65-65", cluster="QuantConnect.Securities.ExpiryFutureFilter.Filter(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", color=red, community=0, file="ExpiryFutureFilter.cs"];
m0_14 [label="return from symbol in symbols\r\n                   let contract = symbol.ID\r\n                   where contract.Date >= minExpiry\r\n                      && contract.Date <= maxExpiry\r\n                   select symbol;", span="68-72", cluster="QuantConnect.Securities.ExpiryFutureFilter.Filter(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", color=red, community=1, file="ExpiryFutureFilter.cs"];
m0_15 [label="Exit QuantConnect.Securities.ExpiryFutureFilter.Filter(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", span="55-55", cluster="QuantConnect.Securities.ExpiryFutureFilter.Filter(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="ExpiryFutureFilter.cs"];
m0_16 [label="QuantConnect.Securities.ExpiryFutureFilter", span="", file="ExpiryFutureFilter.cs"];
m3_0 [label="Entry QuantConnect.Securities.Future.FutureExchange.FutureExchange(QuantConnect.Securities.SecurityExchangeHours)", span="37-37", cluster="QuantConnect.Securities.Future.FutureExchange.FutureExchange(QuantConnect.Securities.SecurityExchangeHours)", file="FutureExchange.cs"];
m3_1 [label="Exit QuantConnect.Securities.Future.FutureExchange.FutureExchange(QuantConnect.Securities.SecurityExchangeHours)", span="37-37", cluster="QuantConnect.Securities.Future.FutureExchange.FutureExchange(QuantConnect.Securities.SecurityExchangeHours)", file="FutureExchange.cs"];
m4_0 [label="Entry QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", span="29-29", cluster="QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", file="FutureHolding.cs"];
m4_1 [label="Exit QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", span="29-29", cluster="QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", file="FutureHolding.cs"];
m5_9 [label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", span="38-38", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", file="FuturesChain.cs"];
m5_10 [label="return new StopLimitOrder(Symbol, Math.Abs(quantity), _highLimit, _lowLimit, DateTime.Now);", span="40-40", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", color=red, community=0, file="FuturesChain.cs"];
m5_11 [label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", span="38-38", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateLongOrder(int)", file="FuturesChain.cs"];
m5_26 [label="Entry System.Math.Max(decimal, decimal)", span="0-0", cluster="System.Math.Max(decimal, decimal)", file="FuturesChain.cs"];
m5_4 [label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", span="33-33", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", file="FuturesChain.cs"];
m5_5 [label="return new StopLimitOrder(Symbol, -Math.Abs(quantity), _lowLimit, _highLimit, DateTime.Now);", span="35-35", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", color=red, community=0, file="FuturesChain.cs"];
m5_6 [label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", span="33-33", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.CreateShortOrder(int)", file="FuturesChain.cs"];
m5_27 [label="Entry System.Math.Min(decimal, decimal)", span="0-0", cluster="System.Math.Min(decimal, decimal)", file="FuturesChain.cs"];
m5_7 [label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="FuturesChain.cs"];
m5_12 [label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="FuturesChain.cs"];
m5_13 [label="var stop = (StopLimitOrder) order", span="45-45", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_15 [label="order.Quantity > 0", span="47-47", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_16 [label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice/2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="50-50", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_17 [label="order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="53-53", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_18 [label="stop.StopPrice = Math.Min(stop.StopPrice, Math.Max(stop.StopPrice / 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="55-55", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_19 [label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 2, MidpointRounding.AwayFromZero)))", span="61-61", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_20 [label="order.SecurityType == SecurityType.Forex || order.SecurityType == SecurityType.Crypto", span="65-65", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_21 [label="stop.StopPrice = Math.Max(stop.StopPrice, Math.Min(stop.StopPrice * 2, Math.Round(lastMarketPrice, 4, MidpointRounding.AwayFromZero)))", span="67-67", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_14 [label="var previousStop = stop.StopPrice", span="46-46", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_22 [label="stop.LimitPrice = stop.StopPrice", span="70-70", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_23 [label="return stop.StopPrice != previousStop;", span="71-71", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_24 [label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="FuturesChain.cs"];
m5_25 [label="Entry System.Math.Round(decimal, int, System.MidpointRounding)", span="0-0", cluster="System.Math.Round(decimal, int, System.MidpointRounding)", file="FuturesChain.cs"];
m5_0 [label="Entry QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="FuturesChain.cs"];
m5_1 [label="_highLimit = highLimit", span="29-29", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_2 [label="_lowLimit = lowLimit", span="30-30", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", color=red, community=0, file="FuturesChain.cs"];
m5_3 [label="Exit QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26", cluster="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters.StopLimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="FuturesChain.cs"];
m5_8 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="FuturesChain.cs"];
m5_28 [label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters", span="", file="FuturesChain.cs"];
m6_2 [label="Entry QuantConnect.Data.IBaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="100-100", cluster="QuantConnect.Data.IBaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChains.cs"];
m6_3 [label="Exit QuantConnect.Data.IBaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="100-100", cluster="QuantConnect.Data.IBaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChains.cs"];
m6_0 [label="Entry QuantConnect.Data.IBaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="91-91", cluster="QuantConnect.Data.IBaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChains.cs"];
m6_1 [label="Exit QuantConnect.Data.IBaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="91-91", cluster="QuantConnect.Data.IBaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChains.cs"];
m6_4 [label="Entry QuantConnect.Data.IBaseData.Clone()", span="106-106", cluster="QuantConnect.Data.IBaseData.Clone()", file="FuturesChains.cs"];
m6_5 [label="Exit QuantConnect.Data.IBaseData.Clone()", span="106-106", cluster="QuantConnect.Data.IBaseData.Clone()", file="FuturesChains.cs"];
m8_7 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="FuturesChainUniverseDataCollection.cs"];
m8_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="522-522", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="FuturesChainUniverseDataCollection.cs"];
m8_18 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="FuturesChainUniverseDataCollection.cs"];
m8_21 [label="Entry System.DateTime.ToLongDateString()", span="0-0", cluster="System.DateTime.ToLongDateString()", file="FuturesChainUniverseDataCollection.cs"];
m8_20 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="FuturesChainUniverseDataCollection.cs"];
m8_22 [label="Entry System.DateTime.ToLongTimeString()", span="0-0", cluster="System.DateTime.ToLongTimeString()", file="FuturesChainUniverseDataCollection.cs"];
m8_23 [label="Entry QuantConnect.Algorithm.Examples.Bitcoin.Bitcoin()", span="115-115", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Bitcoin()", file="FuturesChainUniverseDataCollection.cs"];
m8_24 [label="this.Symbol = ''BTC''", span="117-117", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Bitcoin()", file="FuturesChainUniverseDataCollection.cs"];
m8_25 [label="Exit QuantConnect.Algorithm.Examples.Bitcoin.Bitcoin()", span="115-115", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Bitcoin()", file="FuturesChainUniverseDataCollection.cs"];
m8_49 [label="Entry System.DateTime.Parse(string)", span="0-0", cluster="System.DateTime.Parse(string)", file="FuturesChainUniverseDataCollection.cs"];
m8_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", file="FuturesChainUniverseDataCollection.cs"];
m8_11 [label="Entry QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.OnData(QuantConnect.Algorithm.Examples.Bitcoin)", span="53-53", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.OnData(QuantConnect.Algorithm.Examples.Bitcoin)", file="FuturesChainUniverseDataCollection.cs"];
m8_12 [label="!Portfolio.Invested", span="56-56", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.OnData(QuantConnect.Algorithm.Examples.Bitcoin)", color=red, community=0, file="FuturesChainUniverseDataCollection.cs"];
m8_13 [label="data.Close != 0", span="59-59", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.OnData(QuantConnect.Algorithm.Examples.Bitcoin)", color=red, community=0, file="FuturesChainUniverseDataCollection.cs"];
m8_14 [label="Order(''BTC'', (Portfolio.Cash / Math.Abs(data.Close + 1)))", span="61-61", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.OnData(QuantConnect.Algorithm.Examples.Bitcoin)", color=red, community=0, file="FuturesChainUniverseDataCollection.cs"];
m8_15 [label="Console.WriteLine(''Buying BTC 'Shares': BTC: '' + data.Close)", span="63-63", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.OnData(QuantConnect.Algorithm.Examples.Bitcoin)", color=red, community=0, file="FuturesChainUniverseDataCollection.cs"];
m8_16 [label="Console.WriteLine(''Time: '' + Time.ToLongDateString() + '' '' + Time.ToLongTimeString() + data.Close)", span="65-65", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.OnData(QuantConnect.Algorithm.Examples.Bitcoin)", color=red, community=0, file="FuturesChainUniverseDataCollection.cs"];
m8_17 [label="Exit QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.OnData(QuantConnect.Algorithm.Examples.Bitcoin)", span="53-53", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.OnData(QuantConnect.Algorithm.Examples.Bitcoin)", file="FuturesChainUniverseDataCollection.cs"];
m8_26 [label="Entry QuantConnect.Algorithm.Examples.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="129-129", cluster="QuantConnect.Algorithm.Examples.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_27 [label=datafeed, span="131-131", cluster="QuantConnect.Algorithm.Examples.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_28 [label="DataFeedEndpoint.Backtesting", span="135-135", cluster="QuantConnect.Algorithm.Examples.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_30 [label="DataFeedEndpoint.LiveTrading", span="140-140", cluster="QuantConnect.Algorithm.Examples.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_29 [label="return ''http://www.quandl.com/api/v1/datasets/BITCOIN/BITSTAMPUSD.csv?sort_order=asc'';", span="138-138", cluster="QuantConnect.Algorithm.Examples.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_31 [label="return ''....'';", span="142-142", cluster="QuantConnect.Algorithm.Examples.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_32 [label="Exit QuantConnect.Algorithm.Examples.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="129-129", cluster="QuantConnect.Algorithm.Examples.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="655-655", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="FuturesChainUniverseDataCollection.cs"];
m8_33 [label="Entry QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="156-156", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_34 [label="Bitcoin coin = new Bitcoin()", span="159-159", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_35 [label="string[] data = line.Split(',')", span="166-166", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_36 [label="coin.Time = DateTime.Parse(data[0])", span="167-167", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_37 [label="coin.Open = Convert.ToDecimal(data[1], CultureInfo.InvariantCulture)", span="168-168", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_38 [label="coin.High = Convert.ToDecimal(data[2], CultureInfo.InvariantCulture)", span="169-169", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_39 [label="coin.Low = Convert.ToDecimal(data[3], CultureInfo.InvariantCulture)", span="170-170", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_40 [label="coin.Close = Convert.ToDecimal(data[4], CultureInfo.InvariantCulture)", span="171-171", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_41 [label="coin.VolumeBTC = Convert.ToDecimal(data[5], CultureInfo.InvariantCulture)", span="172-172", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_42 [label="coin.VolumeUSD = Convert.ToDecimal(data[6], CultureInfo.InvariantCulture)", span="173-173", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_43 [label="coin.WeightedPrice = Convert.ToDecimal(data[7], CultureInfo.InvariantCulture)", span="174-174", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_44 [label="coin.Symbol = ''BTC''", span="175-175", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_45 [label="coin.Value = coin.Close", span="176-176", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_46 [label="return coin;", span="180-180", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_47 [label="Exit QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="156-156", cluster="QuantConnect.Algorithm.Examples.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="FuturesChainUniverseDataCollection.cs"];
m8_48 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="FuturesChainUniverseDataCollection.cs"];
m8_6 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="429-429", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="FuturesChainUniverseDataCollection.cs"];
m8_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="396-396", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="FuturesChainUniverseDataCollection.cs"];
m8_0 [label="Entry QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.Initialize()", span="35-35", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.Initialize()", file="FuturesChainUniverseDataCollection.cs"];
m8_1 [label="SetStartDate(2011, 9, 13)", span="38-38", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.Initialize()", color=red, community=0, file="FuturesChainUniverseDataCollection.cs"];
m8_2 [label="SetEndDate(DateTime.Now.Date.AddDays(-1))", span="39-39", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.Initialize()", color=red, community=0, file="FuturesChainUniverseDataCollection.cs"];
m8_3 [label="SetCash(100000)", span="42-42", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.Initialize()", color=red, community=0, file="FuturesChainUniverseDataCollection.cs"];
m8_4 [label="AddData<Bitcoin>(''BTC'')", span="45-45", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.Initialize()", color=red, community=0, file="FuturesChainUniverseDataCollection.cs"];
m8_5 [label="Exit QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.Initialize()", span="35-35", cluster="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm.Initialize()", file="FuturesChainUniverseDataCollection.cs"];
m8_50 [label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="FuturesChainUniverseDataCollection.cs"];
m8_51 [label="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm", span="", file="FuturesChainUniverseDataCollection.cs"];
m8_52 [label="QuantConnect.Algorithm.Examples.Bitcoin", span="", file="FuturesChainUniverseDataCollection.cs"];
m10_42 [label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101", cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="FuturesContracts.cs"];
m10_47 [label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.Initialize()", span="101-101", cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.Initialize()", file="FuturesContracts.cs"];
m10_46 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="FuturesContracts.cs"];
m10_45 [label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="89-89", cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="FuturesContracts.cs"];
m10_41 [label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141", cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="FuturesContracts.cs"];
m10_44 [label="Entry System.DateTime.ToShortTimeString()", span="0-0", cluster="System.DateTime.ToShortTimeString()", file="FuturesContracts.cs"];
m10_57 [label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44", cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", file="FuturesContracts.cs"];
m10_55 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="FuturesContracts.cs"];
m10_49 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="FuturesContracts.cs"];
m10_50 [label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="192-192", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="FuturesContracts.cs"];
m10_56 [label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265", cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="FuturesContracts.cs"];
m10_51 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="FuturesContracts.cs"];
m10_62 [label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="82-82", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="FuturesContracts.cs"];
m10_59 [label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50", cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="FuturesContracts.cs"];
m10_54 [label="Entry QuantConnect.Util.VersionHelper.IsNotEqualVersion(string)", span="62-62", cluster="QuantConnect.Util.VersionHelper.IsNotEqualVersion(string)", file="FuturesContracts.cs"];
m10_52 [label="Entry System.Diagnostics.ProcessStartInfo.ProcessStartInfo()", span="0-0", cluster="System.Diagnostics.ProcessStartInfo.ProcessStartInfo()", file="FuturesContracts.cs"];
m10_58 [label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60", cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="FuturesContracts.cs"];
m10_53 [label="Entry System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", span="0-0", cluster="System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", file="FuturesContracts.cs"];
m10_48 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="36-36", cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="FuturesContracts.cs"];
m10_61 [label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="FuturesContracts.cs"];
m10_0 [label="Entry QuantConnect.Lean.Launcher.Program.Main(string[])", span="35-35", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_1 [label="var mode = ''RELEASE''", span="38-38", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", color=red, community=0, file="FuturesContracts.cs"];
m10_2 [label="OS.IsWindows", span="43-43", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_9 [label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + Globals.Version + '' Mode: '' + mode + '' ('' + (Environment.Is64BitProcess ? ''64'' : ''32'') + ''bit)'')", span="55-55", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_3 [label="Console.OutputEncoding = System.Text.Encoding.Unicode", span="45-45", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_4 [label="var environment = Config.Get(''environment'')", span="48-48", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_5 [label="var liveMode = Config.GetBool(''live-mode'')", span="49-49", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_27 [label="environment.EndsWith(''-desktop'')", span="94-94", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_6 [label="Log.DebuggingEnabled = Config.GetBool(''debug-mode'')", span="50-50", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_37 [label="var engine = new Engine.Engine(leanEngineSystemHandlers, leanEngineAlgorithmHandlers, liveMode)", span="121-121", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_7 [label="Log.LogHandler = Composer.Instance.GetExportedValueByTypeName<ILogHandler>(Config.Get(''log-handler'', ''CompositeLogHandler''))", span="51-51", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_8 [label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="54-54", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_10 [label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="56-56", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_11 [label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="57-57", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_12 [label="LeanEngineSystemHandlers leanEngineSystemHandlers", span="60-60", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_13 [label="leanEngineSystemHandlers = LeanEngineSystemHandlers.FromConfiguration(Composer.Instance)", span="63-63", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_14 [label=CompositionException, span="65-65", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_17 [label="leanEngineSystemHandlers.Initialize()", span="72-72", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_19 [label="var job = leanEngineSystemHandlers.JobQueue.NextJob(out assemblyPath)", span="76-76", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_32 [label="leanEngineSystemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="112-112", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_33 [label="leanEngineSystemHandlers.Notify.SetAuthentication(job)", span="113-113", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_34 [label="leanEngineSystemHandlers.Notify.Send(new RuntimeErrorPacket(job.UserId, job.AlgorithmId, _collapseMessage))", span="114-114", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_35 [label="leanEngineSystemHandlers.JobQueue.AcknowledgeJob(job)", span="115-115", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_15 [label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="67-67", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_16 [label="throw;", span="68-68", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_18 [label="string assemblyPath", span="75-75", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_20 [label="job == null", span="78-78", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_30 [label="VersionHelper.IsNotEqualVersion(job.Version) || job.Redelivered", span="107-107", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_31 [label="Log.Error(''Engine.Run(): Job Version: '' + job.Version + ''  Deployed Version: '' + Globals.Version + '' Redelivered: '' + job.Redelivered)", span="109-109", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_38 [label="engine.Run(job, assemblyPath)", span="122-122", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_21 [label="throw new Exception(''Engine.Main(): Job was null.'');", span="80-80", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_22 [label="LeanEngineAlgorithmHandlers leanEngineAlgorithmHandlers", span="83-83", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_23 [label="leanEngineAlgorithmHandlers = LeanEngineAlgorithmHandlers.FromConfiguration(Composer.Instance)", span="86-86", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_24 [label=CompositionException, span="88-88", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_25 [label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="90-90", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_26 [label="throw;", span="91-91", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_28 [label="var info = new ProcessStartInfo\r\n                {\r\n                    UseShellExecute = false,\r\n                    FileName  = Config.Get(''desktop-exe''),\r\n                    Arguments = Config.Get(''desktop-http-port'')\r\n                }", span="96-101", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_29 [label="Process.Start(info)", span="102-102", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_36 [label="return;", span="116-116", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_39 [label="Exit QuantConnect.Lean.Launcher.Program.Main(string[])", span="35-35", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="FuturesContracts.cs"];
m10_43 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FuturesContracts.cs"];
m10_40 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="FuturesContracts.cs"];
m10_60 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="42-42", cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="FuturesContracts.cs"];
m11_34 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="Global.cs"];
m11_36 [label="Entry QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", span="69-69", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_37 [label="var reference = DateTime.Today", span="71-71", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_38 [label="string symbol = ''n/a''", span="73-73", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_39 [label="var file = GetTestFactorFile(symbol, reference)", span="74-74", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_40 [label="Assert.IsFalse(file.HasSplitEventOnNextTradingDay(reference.AddDays(-20)))", span="75-75", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_41 [label="Assert.IsTrue (file.HasSplitEventOnNextTradingDay(reference.AddDays(-21)))", span="76-76", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_42 [label="Assert.IsFalse(file.HasSplitEventOnNextTradingDay(reference.AddDays(-22)))", span="77-77", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_43 [label="Assert.IsFalse(file.HasSplitEventOnNextTradingDay(reference.AddDays(-89)))", span="79-79", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_44 [label="Assert.IsTrue (file.HasSplitEventOnNextTradingDay(reference.AddDays(-90)))", span="80-80", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_45 [label="Assert.IsFalse(file.HasSplitEventOnNextTradingDay(reference.AddDays(-91)))", span="81-81", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_46 [label="Assert.IsFalse(file.HasSplitEventOnNextTradingDay(reference.AddDays(-364)))", span="83-83", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_47 [label="Assert.IsTrue (file.HasSplitEventOnNextTradingDay(reference.AddDays(-365)))", span="84-84", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_48 [label="Assert.IsFalse(file.HasSplitEventOnNextTradingDay(reference.AddDays(-366)))", span="85-85", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_49 [label="Exit QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", span="69-69", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasSplitEventOnNextTradingDay()", file="Global.cs"];
m11_56 [label="Entry QuantConnect.Lean.Engine.FactorFileRow.FactorFileRow(System.DateTime, decimal, decimal)", span="38-38", cluster="QuantConnect.Lean.Engine.FactorFileRow.FactorFileRow(System.DateTime, decimal, decimal)", file="Global.cs"];
m11_17 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="Global.cs"];
m11_19 [label="Entry QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", span="49-49", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_20 [label="var reference = DateTime.Today", span="51-51", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_21 [label="string symbol = ''n/a''", span="53-53", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_22 [label="var file = GetTestFactorFile(symbol, reference)", span="54-54", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_23 [label="Assert.IsFalse(file.HasDividendEventOnNextTradingDay(reference.AddDays(-6)))", span="55-55", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_24 [label="Assert.IsTrue (file.HasDividendEventOnNextTradingDay(reference.AddDays(-7)))", span="56-56", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_25 [label="Assert.IsFalse(file.HasDividendEventOnNextTradingDay(reference.AddDays(-8)))", span="57-57", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_26 [label="Assert.IsFalse(file.HasDividendEventOnNextTradingDay(reference.AddDays(-13)))", span="59-59", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_27 [label="Assert.IsTrue (file.HasDividendEventOnNextTradingDay(reference.AddDays(-14)))", span="60-60", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_28 [label="Assert.IsFalse(file.HasDividendEventOnNextTradingDay(reference.AddDays(-15)))", span="61-61", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_29 [label="Assert.IsFalse(file.HasDividendEventOnNextTradingDay(reference.AddDays(-364)))", span="63-63", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_30 [label="Assert.IsTrue (file.HasDividendEventOnNextTradingDay(reference.AddDays(-365)))", span="64-64", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_31 [label="Assert.IsFalse(file.HasDividendEventOnNextTradingDay(reference.AddDays(-366)))", span="65-65", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_32 [label="Exit QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", span="49-49", cluster="QuantConnect.Tests.Engine.FactorFileTests.HasDividendEventOnNextTradingDay()", file="Global.cs"];
m11_54 [label="Entry QuantConnect.Lean.Engine.FactorFile.FactorFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.FactorFileRow>)", span="38-38", cluster="QuantConnect.Lean.Engine.FactorFile.FactorFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.FactorFileRow>)", file="Global.cs"];
m11_35 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="Global.cs"];
m11_16 [label="Entry QuantConnect.Lean.Engine.FactorFile.GetTimePriceFactor(System.DateTime)", span="55-55", cluster="QuantConnect.Lean.Engine.FactorFile.GetTimePriceFactor(System.DateTime)", file="Global.cs"];
m11_50 [label="Entry QuantConnect.Lean.Engine.FactorFile.HasSplitEventOnNextTradingDay(System.DateTime)", span="144-144", cluster="QuantConnect.Lean.Engine.FactorFile.HasSplitEventOnNextTradingDay(System.DateTime)", file="Global.cs"];
m11_33 [label="Entry Unk.HasDividendEventOnNextTradingDay", span="", cluster="Unk.HasDividendEventOnNextTradingDay", file="Global.cs"];
m11_18 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="Global.cs"];
m11_15 [label="Entry QuantConnect.Tests.Engine.FactorFileTests.GetTestFactorFile(string, System.DateTime)", span="88-88", cluster="QuantConnect.Tests.Engine.FactorFileTests.GetTestFactorFile(string, System.DateTime)", file="Global.cs"];
m11_51 [label="var file = new FactorFile(symbol, new List<FactorFileRow>\r\n            {\r\n                new FactorFileRow(reference, 1, 1),\r\n                new FactorFileRow(reference.AddDays(-7), .9m, 1),       // dividend\r\n                new FactorFileRow(reference.AddDays(-14), .8m, 1),      // dividend\r\n                new FactorFileRow(reference.AddDays(-21), .8m, .5m),    // split\r\n                new FactorFileRow(reference.AddDays(-90), .8m, .25m),   // split\r\n                new FactorFileRow(reference.AddDays(-365), .7m, .0125m) // split+dividend\r\n            })", span="90-98", cluster="QuantConnect.Tests.Engine.FactorFileTests.GetTestFactorFile(string, System.DateTime)", file="Global.cs"];
m11_52 [label="return file;", span="99-99", cluster="QuantConnect.Tests.Engine.FactorFileTests.GetTestFactorFile(string, System.DateTime)", file="Global.cs"];
m11_53 [label="Exit QuantConnect.Tests.Engine.FactorFileTests.GetTestFactorFile(string, System.DateTime)", span="88-88", cluster="QuantConnect.Tests.Engine.FactorFileTests.GetTestFactorFile(string, System.DateTime)", file="Global.cs"];
m11_0 [label="Entry QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", span="27-27", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_1 [label="var reference = DateTime.Today", span="29-29", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_2 [label="string symbol = ''n/a''", span="31-31", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_3 [label="var file = GetTestFactorFile(symbol, reference)", span="32-32", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_4 [label="Assert.AreEqual(1, file.GetTimePriceFactor(reference))", span="36-36", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_5 [label="Assert.AreEqual(1, file.GetTimePriceFactor(reference.AddDays(-6)))", span="37-37", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_6 [label="Assert.AreEqual(.9, file.GetTimePriceFactor(reference.AddDays(-7)))", span="38-38", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_7 [label="Assert.AreEqual(.9, file.GetTimePriceFactor(reference.AddDays(-13)))", span="39-39", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_8 [label="Assert.AreEqual(.8, file.GetTimePriceFactor(reference.AddDays(-14)))", span="40-40", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_9 [label="Assert.AreEqual(.8, file.GetTimePriceFactor(reference.AddDays(-20)))", span="41-41", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_10 [label="Assert.AreEqual(.8m * .5m, file.GetTimePriceFactor(reference.AddDays(-21)))", span="42-42", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_11 [label="Assert.AreEqual(.8m * .5m, file.GetTimePriceFactor(reference.AddDays(-22)))", span="43-43", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_12 [label="Assert.AreEqual(.8m * .5m, file.GetTimePriceFactor(reference.AddDays(-89)))", span="44-44", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_13 [label="Assert.AreEqual(.8m * .25m, file.GetTimePriceFactor(reference.AddDays(-91)))", span="45-45", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m11_14 [label="Exit QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", span="27-27", cluster="QuantConnect.Tests.Engine.FactorFileTests.CorrectlyDeterminesTimePriceFactors()", file="Global.cs"];
m12_400 [label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33", cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="IQFeedDataQueueHandler.cs"];
m12_317 [label="!isEquity", span="686-686", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_318 [label="istartTime = istartTime.ConvertTo(TimeZones.NewYork, TimeZones.EasternStandard)", span="686-686", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_319 [label="return new TradeBar(istartTime, requestData.Symbol, (decimal) i.Open*scale, (decimal) i.High*scale, (decimal) i.Low*scale, (decimal) i.Close*scale, i.PeriodVolume);", span="687-687", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_320 [label="LookupType.REQ_HST_DWM", span="688-688", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_322 [label="d.DateTimeStamp == DateTime.MinValue", span="690-690", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_321 [label="var d = (LookupDayWeekMonthEventArgs) e", span="689-689", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_325 [label="!isEquity", span="692-692", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_324 [label="var dstartTime = d.DateTimeStamp - requestData.Resolution.ToTimeSpan()", span="691-691", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_323 [label="return null;", span="690-690", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_327 [label="return new TradeBar(dstartTime, requestData.Symbol, (decimal) d.Open*scale, (decimal) d.High*scale, (decimal) d.Low*scale, (decimal) d.Close*scale, d.PeriodVolume);", span="693-693", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_326 [label="dstartTime = dstartTime.ConvertTo(TimeZones.NewYork, TimeZones.EasternStandard)", span="692-692", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_328 [label="LookupType.REQ_SYM_SYM", span="696-696", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_486 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", span="711-711", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_488 [label="var securities = new SecurityManager(TimeKeeper)", span="714-714", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_489 [label="var transactions = new SecurityTransactionManager(securities)", span="715-715", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_491 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="717-717", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_496 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="726-726", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_497 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="727-727", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_495 [label="portfolio.SetCash(192 * 100)", span="724-724", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_506 [label="portfolio.ProcessFill(fill)", span="740-740", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_487 [label="var algorithm = new QCAlgorithm()", span="713-713", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_492 [label="algorithm.Securities = securities", span="719-719", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_498 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="728-728", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_499 [label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="729-729", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_500 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="731-731", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_501 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="732-732", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_503 [label="option.Underlying = securities[Symbols.SPY]", span="734-734", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_507 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="744-744", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_511 [label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="750-750", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_508 [label="Assert.AreEqual(0, portfolio.Cash)", span="745-745", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_509 [label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="746-746", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_510 [label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="747-747", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_490 [label="var transactionHandler = new BacktestingTransactionHandler()", span="716-716", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_494 [label="transactions.SetOrderProcessor(transactionHandler)", span="721-721", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_502 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="733-733", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_505 [label=fills, span="738-738", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_493 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="720-720", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_504 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="736-736", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_512 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", span="711-711", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_70 [label="portfolio.CashBook.Add(''MCH'', mchQuantity[0], 0)", span="154-154", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_71 [label="portfolio.CashBook.Add(''JWB'', jwbQuantity[0], 0)", span="155-155", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_73 [label="var mchCash = portfolio.CashBook[''MCH'']", span="158-158", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_72 [label="var jwbCash = portfolio.CashBook[''JWB'']", span="157-157", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_74 [label="var usdCash = portfolio.CashBook[''USD'']", span="159-159", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_401 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="IQFeedDataQueueHandler.cs"];
m12_108 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="IQFeedDataQueueHandler.cs"];
m12_137 [label="transactions.SetOrderProcessor(orderProcessor)", span="239-239", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_139 [label="portfolio.CashBook[''USD''].SetAmount(quantity)", span="241-241", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_140 [label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="243-243", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_138 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="240-240", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_141 [label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="244-244", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_142 [label="var security = securities[Symbols.AAPL]", span="245-245", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_143 [label="security.SetLeverage(leverage)", span="246-246", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_144 [label="var time = DateTime.Now", span="248-248", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_145 [label="decimal buyPrice = 1m", span="249-249", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_146 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="250-250", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_147 [label="var order = new MarketOrder(Symbols.AAPL, quantity, time) {Price = buyPrice}", span="252-252", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_148 [label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="253-253", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_149 [label="orderProcessor.AddOrder(order)", span="254-254", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_150 [label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="255-255", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_151 [label="request.SetOrderId(0)", span="256-256", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_152 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="257-257", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_513 [label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="89-89", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="IQFeedDataQueueHandler.cs"];
m12_0 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", span="66-66", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", file="IQFeedDataQueueHandler.cs"];
m12_7 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", span="66-66", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", file="IQFeedDataQueueHandler.cs"];
m12_11 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()", span="39-39", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.IQFeedDataQueueUniverseProvider()", file="IQFeedDataQueueHandler.cs"];
m12_12 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", span="219-219", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_8 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="IQFeedDataQueueHandler.cs"];
m12_10 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="IQFeedDataQueueHandler.cs"];
m12_6 [label="Connect()", span="73-73", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", file="IQFeedDataQueueHandler.cs"];
m12_5 [label="!IsConnected", span="73-73", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", file="IQFeedDataQueueHandler.cs"];
m12_21 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.GetConsumingEnumerable()", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.GetConsumingEnumerable()", file="IQFeedDataQueueHandler.cs"];
m12_13 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", span="80-80", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", file="IQFeedDataQueueHandler.cs"];
m12_20 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", span="80-80", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", file="IQFeedDataQueueHandler.cs"];
m12_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IQFeedDataQueueHandler.cs"];
m12_19 [label="yield return underlyingTick;", span="90-90", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", file="IQFeedDataQueueHandler.cs"];
m12_3 [label="_outputCollection = new BlockingCollection<BaseData>()", span="70-70", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", file="IQFeedDataQueueHandler.cs"];
m12_4 [label="_symbolUniverse = new IQFeedDataQueueUniverseProvider()", span="71-71", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", file="IQFeedDataQueueHandler.cs"];
m12_14 [label="_outputCollection.GetConsumingEnumerable()", span="82-82", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", file="IQFeedDataQueueHandler.cs"];
m12_22 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="IQFeedDataQueueHandler.cs"];
m12_16 [label="_underlyings.ContainsKey(tick.Symbol)", span="86-86", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", file="IQFeedDataQueueHandler.cs"];
m12_17 [label="var underlyingTick = tick.Clone()", span="88-88", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", file="IQFeedDataQueueHandler.cs"];
m12_18 [label="underlyingTick.Symbol = _underlyings[tick.Symbol]", span="89-89", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", file="IQFeedDataQueueHandler.cs"];
m12_1 [label="_symbols = new HashSet<Symbol>()", span="68-68", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", file="IQFeedDataQueueHandler.cs"];
m12_2 [label="_underlyings = new Dictionary<Symbol, Symbol>()", span="69-69", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.IQFeedDataQueueHandler()", file="IQFeedDataQueueHandler.cs"];
m12_15 [label="yield return tick;", span="84-84", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetNextTicks()", file="IQFeedDataQueueHandler.cs"];
m12_23 [label="Entry QuantConnect.Data.BaseData.Clone()", span="260-260", cluster="QuantConnect.Data.BaseData.Clone()", file="IQFeedDataQueueHandler.cs"];
m12_64 [label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="146-146", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_259 [label=_inProgress, span="585-585", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.ProcessHistoryRequests(QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_260 [label="_currentRequest.Keys", span="591-591", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.ProcessHistoryRequests(QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_261 [label="List<BaseData> tradeBars", span="593-593", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.ProcessHistoryRequests(QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_262 [label="_currentRequest.TryRemove(key, out tradeBars)", span="594-594", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.ProcessHistoryRequests(QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_264 [label="yield return new Slice(tradeBar.Time, new[] { tradeBar });", span="599-599", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.ProcessHistoryRequests(QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_263 [label=tradeBars, span="596-596", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.ProcessHistoryRequests(QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_266 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="474-474", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="IQFeedDataQueueHandler.cs"];
m12_270 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.CreateRequestID(QuantConnect.ToolBox.IQFeed.LookupType, int)", span="611-611", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.CreateRequestID(QuantConnect.ToolBox.IQFeed.LookupType, int)", file="IQFeedDataQueueHandler.cs"];
m12_265 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.ProcessHistoryRequests(QuantConnect.Data.HistoryRequest)", span="542-542", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.ProcessHistoryRequests(QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_269 [label="Entry QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.RequestTickData(string, System.DateTime, System.DateTime?, bool, QuantConnect.ToolBox.IQFeed.Time, QuantConnect.ToolBox.IQFeed.Time)", span="283-283", cluster="QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.RequestTickData(string, System.DateTime, System.DateTime?, bool, QuantConnect.ToolBox.IQFeed.Time, QuantConnect.ToolBox.IQFeed.Time)", file="IQFeedDataQueueHandler.cs"];
m12_268 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="IQFeedDataQueueHandler.cs"];
m12_272 [label="Entry QuantConnect.ToolBox.IQFeed.Interval.Interval(QuantConnect.ToolBox.IQFeed.PeriodType, int)", span="58-58", cluster="QuantConnect.ToolBox.IQFeed.Interval.Interval(QuantConnect.ToolBox.IQFeed.PeriodType, int)", file="IQFeedDataQueueHandler.cs"];
m12_267 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="IQFeedDataQueueHandler.cs"];
m12_271 [label="Entry QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.RequestDailyData(string, System.DateTime, System.DateTime?, bool)", span="356-356", cluster="QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.RequestDailyData(string, System.DateTime, System.DateTime?, bool)", file="IQFeedDataQueueHandler.cs"];
m12_273 [label="Entry QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.RequestIntervalData(string, QuantConnect.ToolBox.IQFeed.Interval, System.DateTime, System.DateTime?, bool, QuantConnect.ToolBox.IQFeed.Time, QuantConnect.ToolBox.IQFeed.Time)", span="326-326", cluster="QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.RequestIntervalData(string, QuantConnect.ToolBox.IQFeed.Interval, System.DateTime, System.DateTime?, bool, QuantConnect.ToolBox.IQFeed.Time, QuantConnect.ToolBox.IQFeed.Time)", file="IQFeedDataQueueHandler.cs"];
m12_115 [label="_adminPort != null", span="267-267", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Disconnect()", file="IQFeedDataQueueHandler.cs"];
m12_43 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="IQFeedDataQueueHandler.cs"];
m12_197 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", span="1507-1507", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", file="IQFeedDataQueueHandler.cs"];
m12_446 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", span="654-654", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_463 [label="var order = new MarketOrder(Symbols.AAPL, -quantity, time) { Price = sellPrice }", span="675-675", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_473 [label="newOrder = new MarketOrder(Symbols.AAPL, quantity, time.AddSeconds(1)) { Price = sellPrice }", span="690-690", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_479 [label="newOrder = new MarketOrder(Symbols.AAPL, quantity, time.AddSeconds(1)) { Price = highPrice }", span="700-700", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_482 [label="newOrder = new MarketOrder(Symbols.AAPL, quantity + 1, time.AddSeconds(1)) { Price = highPrice }", span="705-705", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_470 [label="var newOrder = new MarketOrder(Symbols.AAPL, -1, time.AddSeconds(1)) { Price = sellPrice }", span="685-685", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_450 [label="var securities = new SecurityManager(TimeKeeper)", span="659-659", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_451 [label="var transactions = new SecurityTransactionManager(securities)", span="660-660", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_454 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="663-663", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_456 [label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="666-666", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_457 [label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="667-667", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_469 [label="portfolio.ProcessFill(fill)", span="682-682", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_475 [label="Assert.IsTrue(sufficientCapital)", span="692-692", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_481 [label="Assert.IsTrue(sufficientCapital)", span="702-702", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_471 [label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="686-686", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_474 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="691-691", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_480 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="701-701", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_483 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="706-706", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_449 [label="int quantity = (int)(amount * leverage)", span="658-658", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_462 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, sellPrice, sellPrice, sellPrice, sellPrice, 1))", span="673-673", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_460 [label="var time = DateTime.Now", span="671-671", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_461 [label="decimal sellPrice = 1m", span="672-672", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_464 [label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = sellPrice, FillQuantity = -quantity }", span="676-676", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_465 [label="orderProcessor.AddOrder(order)", span="677-677", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_466 [label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="678-678", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_472 [label="Assert.IsFalse(sufficientCapital)", span="687-687", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_478 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="697-697", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_476 [label="time = time.AddDays(1)", span="695-695", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_477 [label="decimal highPrice = sellPrice * 2", span="696-696", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_458 [label="var security = securities[Symbols.AAPL]", span="668-668", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_452 [label="var orderProcessor = new OrderProcessor()", span="661-661", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_453 [label="transactions.SetOrderProcessor(orderProcessor)", span="662-662", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_455 [label="portfolio.CashBook[''USD''].SetAmount(amount)", span="664-664", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_468 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="680-680", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_484 [label="Assert.IsFalse(sufficientCapital)", span="707-707", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_447 [label="decimal leverage = 2m", span="656-656", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_448 [label="int amount = 1000", span="657-657", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_459 [label="security.SetLeverage(leverage)", span="669-669", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_467 [label="request.SetOrderId(0)", span="679-679", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_485 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", span="654-654", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="IQFeedDataQueueHandler.cs"];
m12_1053 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="IQFeedDataQueueHandler.cs"];
m12_118 [label="_level1Port.Disconnect()", span="268-268", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Disconnect()", file="IQFeedDataQueueHandler.cs"];
m12_36 [label="Log.Trace(''IQFeed.Subscribe(): Subscribe Processed: '' + symbol.ToString())", span="128-128", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="IQFeedDataQueueHandler.cs"];
m12_44 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="IQFeedDataQueueHandler.cs"];
m12_213 [label="Resolution.Second", span="477-477", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetPeriodType(QuantConnect.Resolution)", file="IQFeedDataQueueHandler.cs"];
m12_63 [label="var jwbQuantity = XDocument.Load(jwbQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="142-144", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_65 [label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="149-149", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_516 [label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="50-50", cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="IQFeedDataQueueHandler.cs"];
m12_680 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", span="969-969", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_682 [label="var securities = new SecurityManager(TimeKeeper)", span="972-972", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_683 [label="var transactions = new SecurityTransactionManager(securities)", span="973-973", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_685 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="975-975", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_690 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="984-984", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_691 [label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="985-985", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_689 [label="portfolio.SetCash(192 * 100)", span="982-982", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_681 [label="var algorithm = new QCAlgorithm()", span="971-971", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_686 [label="algorithm.Securities = securities", span="977-977", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_692 [label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="986-986", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_693 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="988-988", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_694 [label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="989-989", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_696 [label="option.Underlying = securities[Symbols.SPY]", span="991-991", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_701 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1004-1004", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_705 [label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1010-1010", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_702 [label="Assert.AreEqual(0, portfolio.Cash)", span="1005-1005", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_703 [label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="1006-1006", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_704 [label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="1007-1007", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_684 [label="var transactionHandler = new BacktestingTransactionHandler()", span="974-974", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_688 [label="transactions.SetOrderProcessor(transactionHandler)", span="979-979", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_695 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="990-990", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_700 [label="portfolioModel.ProcessFill(portfolio, option, fill)", span="999-999", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_687 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="978-978", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_697 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="993-993", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_698 [label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="996-996", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_699 [label=fills, span="997-997", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_706 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", span="969-969", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_114 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="IQFeedDataQueueHandler.cs"];
m12_116 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IQFeedDataQueueHandler.cs"];
m12_117 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="IQFeedDataQueueHandler.cs"];
m12_119 [label="Entry lambda expression", span="121-131", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_120 [label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)", span="121-131", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_121 [label="Exit lambda expression", span="121-131", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_38 [label="Log.Error(''IQFeed.Subscribe(): '' + err.Message)", span="136-136", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="IQFeedDataQueueHandler.cs"];
m12_202 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="IQFeedDataQueueHandler.cs"];
m12_203 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="IQFeedDataQueueHandler.cs"];
m12_204 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="1511-1511", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="IQFeedDataQueueHandler.cs"];
m12_196 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="232-232", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_294 [label="var securities = new SecurityManager(TimeKeeper)", span="453-453", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="IQFeedDataQueueHandler.cs"];
m12_522 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="IQFeedDataQueueHandler.cs"];
m12_109 [label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="IQFeedDataQueueHandler.cs"];
m12_111 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="IQFeedDataQueueHandler.cs"];
m12_228 [label="var usdCash = portfolio.CashBook[''USD'']", span="346-346", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_229 [label="var time = DateTime.Now", span="348-348", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_230 [label="var config1 = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="349-349", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_231 [label="securities.Add(new Security(SecurityExchangeHours, config1, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="350-350", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_402 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="IQFeedDataQueueHandler.cs"];
m12_154 [label="portfolio.ProcessFill(fill)", span="260-260", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_35 [label="_level1Port.Subscribe(ticker)", span="126-126", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="IQFeedDataQueueHandler.cs"];
m12_304 [label="Assert.AreEqual(2 * 100 * 100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.TotalSaleVolume)", span="468-468", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="IQFeedDataQueueHandler.cs"];
m12_274 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="IQFeedDataQueueHandler.cs"];
m12_216 [label="return PeriodType.Minute;", span="480-480", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetPeriodType(QuantConnect.Resolution)", file="IQFeedDataQueueHandler.cs"];
m12_37 [label=Exception, span="134-134", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="IQFeedDataQueueHandler.cs"];
m12_122 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_103 [label="Console.WriteLine(i + 1 + ''   '' + portfolio.TotalPortfolioValue.ToString(''C''))", span="221-221", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_136 [label="var orderProcessor = new OrderProcessor()", span="238-238", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_227 [label="var gbpCash = portfolio.CashBook[''GBP'']", span="345-345", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_523 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="IQFeedDataQueueHandler.cs"];
m12_110 [label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="37-37", cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="IQFeedDataQueueHandler.cs"];
m12_102 [label="portfolio.ProcessFill(fill)", span="210-210", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_205 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="IQFeedDataQueueHandler.cs"];
m12_206 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107", cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="IQFeedDataQueueHandler.cs"];
m12_207 [label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194", cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="IQFeedDataQueueHandler.cs"];
m12_297 [label="portfolio.SetCash(0)", span="456-456", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="IQFeedDataQueueHandler.cs"];
m12_211 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetPeriodType(QuantConnect.Resolution)", span="473-473", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.GetPeriodType(QuantConnect.Resolution)", file="IQFeedDataQueueHandler.cs"];
m12_1081 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="IQFeedDataQueueHandler.cs"];
m12_176 [label="bool issueMarginCallWarning", span="298-298", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_24 [label="Entry Unk.Load", span="", cluster="Unk.Load", file="IQFeedDataQueueHandler.cs"];
m12_25 [label="Entry Unk.Descendants", span="", cluster="Unk.Descendants", file="IQFeedDataQueueHandler.cs"];
m12_26 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="IQFeedDataQueueHandler.cs"];
m12_28 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="IQFeedDataQueueHandler.cs"];
m12_29 [label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57", cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="IQFeedDataQueueHandler.cs"];
m12_30 [label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55", cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="IQFeedDataQueueHandler.cs"];
m12_31 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="IQFeedDataQueueHandler.cs"];
m12_32 [label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91", cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="IQFeedDataQueueHandler.cs"];
m12_33 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="IQFeedDataQueueHandler.cs"];
m12_27 [label=_sync, span="110-110", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="IQFeedDataQueueHandler.cs"];
m12_34 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="IQFeedDataQueueHandler.cs"];
m12_39 [label="Entry Unk.SetCash", span="", cluster="Unk.SetCash", file="IQFeedDataQueueHandler.cs"];
m12_113 [label="Entry QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.SetClientName(string)", span="252-252", cluster="QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.SetClientName(string)", file="IQFeedDataQueueHandler.cs"];
m12_75 [label="var mchJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, jwbCash, subscriptions.Add(MCHJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(jwbCash.Symbol))", span="161-161", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_237 [label="securities[Symbols.EURUSD].SetLeverage(100m)", span="361-361", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_238 [label="securities[Symbols.EURUSD].Holdings.SetHoldings(1.1m, 1000)", span="362-362", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_240 [label="var config3 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURGBP)", span="369-369", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_241 [label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, gbpCash, config3, SymbolProperties.GetDefault(gbpCash.Symbol)))", span="370-370", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_242 [label="securities[Symbols.EURGBP].SetLeverage(100m)", span="371-371", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_243 [label="securities[Symbols.EURGBP].Holdings.SetHoldings(1m, 1000)", span="372-372", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_245 [label="var acceptedOrder = new MarketOrder(Symbols.AAPL, 101, DateTime.Now) { Price = 100 }", span="391-391", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_248 [label="request.SetOrderId(0)", span="394-394", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_255 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="333-333", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_258 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IQFeedDataQueueHandler.cs"];
m12_239 [label="securities[Symbols.EURUSD].SetMarketPrice(new TradeBar { Time = time, Value = 1.1m })", span="363-363", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_250 [label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, acceptedOrder)", span="396-396", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_253 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, rejectedOrder)", span="400-400", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_256 [label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="IQFeedDataQueueHandler.cs"];
m12_244 [label="securities[Symbols.EURGBP].SetMarketPrice(new TradeBar { Time = time, Value = 1m })", span="373-373", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_246 [label="orderProcessor.AddOrder(acceptedOrder)", span="392-392", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_247 [label="var request = new SubmitOrderRequest(OrderType.Market, acceptedOrder.SecurityType, acceptedOrder.Symbol, acceptedOrder.Quantity, 0, 0, acceptedOrder.Time, null)", span="393-393", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_249 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="395-395", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_252 [label="var rejectedOrder = new MarketOrder(Symbols.AAPL, 102, DateTime.Now) { Price = 100 }", span="399-399", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs", color=green, community=0];
m12_251 [label="Assert.IsTrue(sufficientCapital)", span="397-397", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_254 [label="Assert.IsFalse(sufficientCapital)", span="401-401", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_257 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="IQFeedDataQueueHandler.cs"];
m12_293 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", span="451-451", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="IQFeedDataQueueHandler.cs"];
m12_921 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", span="1306-1306", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_923 [label="var securities = new SecurityManager(TimeKeeper)", span="1309-1309", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_924 [label="var transactions = new SecurityTransactionManager(securities)", span="1310-1310", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_926 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1312-1312", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_931 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1321-1321", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_932 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1322-1322", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_930 [label="portfolio.SetCash((195 - 192) * 100)", span="1319-1319", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_922 [label="var algorithm = new QCAlgorithm()", span="1308-1308", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_927 [label="algorithm.Securities = securities", span="1314-1314", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_933 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1323-1323", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_934 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1324-1324", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_935 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1326-1326", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_936 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1327-1327", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_938 [label="option.Underlying = securities[Symbols.SPY]", span="1329-1329", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_944 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1342-1342", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_946 [label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1344-1344", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_947 [label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1347-1347", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_945 [label="Assert.AreEqual(0, portfolio.Cash)", span="1343-1343", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_925 [label="var transactionHandler = new BacktestingTransactionHandler()", span="1311-1311", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_929 [label="transactions.SetOrderProcessor(transactionHandler)", span="1316-1316", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_937 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1328-1328", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_943 [label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1338-1338", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_928 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1315-1315", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_939 [label="option.ExerciseSettlement = SettlementType.Cash", span="1330-1330", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_940 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1332-1332", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_941 [label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1335-1335", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_942 [label=fills, span="1336-1336", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_948 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", span="1306-1306", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1074 [label="Entry lambda expression", span="1530-1530", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_155 [label="Assert.AreEqual(0, portfolio.MarginRemaining)", span="262-262", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_156 [label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="263-263", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_157 [label="Assert.AreEqual(quantity, portfolio.TotalPortfolioValue)", span="264-264", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_158 [label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) {Price = buyPrice}", span="267-267", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_159 [label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="268-268", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_160 [label="Assert.IsFalse(sufficientCapital)", span="269-269", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_161 [label="time = time.AddDays(1)", span="273-273", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_525 [label="Entry lambda expression", span="733-733", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_555 [label="Entry lambda expression", span="775-775", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_586 [label="Entry lambda expression", span="816-816", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_615 [label="Entry lambda expression", span="857-857", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_645 [label="Entry lambda expression", span="901-901", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_677 [label="Entry lambda expression", span="942-942", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_707 [label="Entry lambda expression", span="990-990", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_737 [label="Entry lambda expression", span="1035-1035", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_766 [label="Entry lambda expression", span="1081-1081", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_795 [label="Entry lambda expression", span="1122-1122", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_824 [label="Entry lambda expression", span="1162-1162", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_918 [label="Entry lambda expression", span="1286-1286", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_949 [label="Entry lambda expression", span="1328-1328", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_980 [label="Entry lambda expression", span="1372-1372", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_1011 [label="Entry lambda expression", span="1418-1418", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_1042 [label="Entry lambda expression", span="1464-1464", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_46 [label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", span="670-670", cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="IQFeedDataQueueHandler.cs"];
m12_51 [label="Log.Trace(''IQFeed.Unsubscribe(): '' + symbol.ToString())", span="153-153", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="IQFeedDataQueueHandler.cs"];
m12_128 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnConnectedEvent(object, QuantConnect.ToolBox.IQFeed.ConnectedEventArgs)", span="292-292", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnConnectedEvent(object, QuantConnect.ToolBox.IQFeed.ConnectedEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_125 [label="var securityType = symbol.ID.SecurityType", span="282-282", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.CanSubscribe(QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_527 [label="Exit lambda expression", span="733-733", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_526 [label=true, span="733-733", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_557 [label="Exit lambda expression", span="775-775", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_556 [label=true, span="775-775", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_588 [label="Exit lambda expression", span="816-816", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_587 [label=true, span="816-816", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_617 [label="Exit lambda expression", span="857-857", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_616 [label=true, span="857-857", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_647 [label="Exit lambda expression", span="901-901", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_646 [label=true, span="901-901", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_679 [label="Exit lambda expression", span="942-942", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_678 [label=true, span="942-942", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_709 [label="Exit lambda expression", span="990-990", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_708 [label=true, span="990-990", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_739 [label="Exit lambda expression", span="1035-1035", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_738 [label=true, span="1035-1035", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_768 [label="Exit lambda expression", span="1081-1081", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_767 [label=true, span="1081-1081", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_797 [label="Exit lambda expression", span="1122-1122", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_796 [label=true, span="1122-1122", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_826 [label="Exit lambda expression", span="1162-1162", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_825 [label=true, span="1162-1162", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_920 [label="Exit lambda expression", span="1286-1286", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_919 [label=true, span="1286-1286", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_951 [label="Exit lambda expression", span="1328-1328", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_950 [label=true, span="1328-1328", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_982 [label="Exit lambda expression", span="1372-1372", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_981 [label=true, span="1372-1372", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_1013 [label="Exit lambda expression", span="1418-1418", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_1012 [label=true, span="1418-1418", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_1044 [label="Exit lambda expression", span="1464-1464", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_1043 [label=true, span="1464-1464", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_48 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="145-145", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="IQFeedDataQueueHandler.cs"];
m12_47 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="IQFeedDataQueueHandler.cs"];
m12_53 [label="var subscribeSymbol = symbol", span="157-157", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="IQFeedDataQueueHandler.cs"];
m12_52 [label="_symbols.Remove(symbol)", span="155-155", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="IQFeedDataQueueHandler.cs"];
m12_124 [label="var market = symbol.ID.Market", span="281-281", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.CanSubscribe(QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_123 [label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Disconnect(int)", span="642-642", cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Disconnect(int)", file="IQFeedDataQueueHandler.cs"];
m12_130 [label="Log.Error(''IQFeed.AdminPortOnConnectedEvent(): ADMIN PORT CONNECTED!'')", span="295-295", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnConnectedEvent(object, QuantConnect.ToolBox.IQFeed.ConnectedEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_129 [label="_isConnected = true", span="294-294", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnConnectedEvent(object, QuantConnect.ToolBox.IQFeed.ConnectedEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_127 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.CanSubscribe(QuantConnect.Symbol)", span="279-279", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.CanSubscribe(QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_126 [label="return\r\n                (securityType == SecurityType.Equity && market == Market.USA) ||\r\n                (securityType == SecurityType.Forex && market == Market.FXCM) ||\r\n                (securityType == SecurityType.Option && market == Market.USA);", span="283-286", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.CanSubscribe(QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1075 [label="x.BrokerId.Contains(brokerageId)", span="1530-1530", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_1076 [label="Exit lambda expression", span="1530-1530", cluster="lambda expression", file="IQFeedDataQueueHandler.cs"];
m12_223 [label="portfolio.CashBook[''USD''].SetAmount(1000)", span="340-340", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_42 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="IQFeedDataQueueHandler.cs"];
m12_166 [label="Assert.AreEqual(quantity * 2, portfolio.TotalPortfolioValue)", span="279-279", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_167 [label="var anotherOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = highPrice }", span="282-282", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_169 [label="Assert.IsTrue(sufficientCapital)", span="284-284", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_170 [label="time = time.AddDays(1)", span="288-288", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", color=red, community=0, file="IQFeedDataQueueHandler.cs"];
m12_171 [label="decimal lowPrice = buyPrice/2", span="289-289", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_168 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, anotherOrder)", span="283-283", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_172 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="290-290", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_173 [label="Assert.AreEqual(-quantity/2m, portfolio.MarginRemaining)", span="292-292", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_329 [label="LookupType.REQ_SYM_SIC", span="697-697", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_330 [label="LookupType.REQ_SYM_NAC", span="698-698", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_331 [label="LookupType.REQ_TAB_MKT", span="699-699", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_332 [label="LookupType.REQ_TAB_SEC", span="700-700", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_334 [label="LookupType.REQ_TAB_SIC", span="702-702", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_333 [label="LookupType.REQ_TAB_MKC", span="701-701", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_338 [label="Log.Error(''Encountered error while processing request: '' + e.Id)", span="710-710", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_336 [label="return null;", span="705-705", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_335 [label="LookupType.REQ_TAB_NAC", span="703-703", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_337 [label=Exception, span="708-708", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_340 [label="return null;", span="712-712", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_339 [label="Log.Error(err)", span="711-711", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_341 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", span="670-670", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_49 [label="Entry OrderEvent.cstr", span="", cluster="OrderEvent.cstr", file="IQFeedDataQueueHandler.cs"];
m12_50 [label="Entry Unk.>", span="", cluster="Unk.>", file="IQFeedDataQueueHandler.cs"];
m12_60 [label="var fills = XDocument.Load(fillsFile).Descendants(''OrderEvent'').Select(x => new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)\r\n                ).ToList()", span="121-132", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_54 [label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0", cluster="decimal.Parse(string, System.IFormatProvider)", file="IQFeedDataQueueHandler.cs"];
m12_55 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="111-111", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_57 [label="string equityFile = ''TestData\\test_forex_equity.xml''", span="117-117", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_56 [label="string fillsFile = ''TestData\\test_forex_fills.xml''", span="116-116", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_58 [label="string mchQuantityFile = ''TestData\\test_forex_fills_mch_quantity.xml''", span="118-118", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_59 [label="string jwbQuantityFile = ''TestData\\test_forex_fills_jwb_quantity.xml''", span="119-119", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_61 [label="var equity = XDocument.Load(equityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="134-136", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_62 [label="var mchQuantity = XDocument.Load(mchQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="138-140", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="IQFeedDataQueueHandler.cs"];
m12_589 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", span="838-838", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_591 [label="var securities = new SecurityManager(TimeKeeper)", span="841-841", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_592 [label="var transactions = new SecurityTransactionManager(securities)", span="842-842", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_594 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="844-844", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_599 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="851-851", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_600 [label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="852-852", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_598 [label="portfolio.SetCash(0)", span="849-849", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_608 [label="portfolio.ProcessFill(fill)", span="864-864", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_590 [label="var algorithm = new QCAlgorithm()", span="840-840", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_595 [label="algorithm.Securities = securities", span="846-846", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_601 [label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="853-853", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_602 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="855-855", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_603 [label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="856-856", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_605 [label="option.Underlying = securities[Symbols.SPY]", span="858-858", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_609 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="869-869", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_613 [label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="875-875", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_610 [label="Assert.AreEqual(192 * 100, portfolio.Cash)", span="870-870", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_611 [label="Assert.AreEqual(-100, newUnderlyingHoldings.Quantity)", span="871-871", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_612 [label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="872-872", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_593 [label="var transactionHandler = new BacktestingTransactionHandler()", span="843-843", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_597 [label="transactions.SetOrderProcessor(transactionHandler)", span="848-848", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_604 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="857-857", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_607 [label=fills, span="862-862", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_596 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="847-847", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_606 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="860-860", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_614 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", span="838-838", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_212 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="IQFeedDataQueueHandler.cs"];
m12_221 [label="transactions.SetOrderProcessor(orderProcessor)", span="338-338", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_215 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="IQFeedDataQueueHandler.cs"];
m12_217 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="333-333", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_219 [label="var transactions = new SecurityTransactionManager(securities)", span="336-336", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_214 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="IQFeedDataQueueHandler.cs"];
m12_218 [label="var securities = new SecurityManager(TimeKeeper)", span="335-335", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_220 [label="var orderProcessor = new OrderProcessor()", span="337-337", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_222 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="339-339", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_1085 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="1538-1538", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="IQFeedDataQueueHandler.cs"];
m12_1087 [label="_tickets.TryGetValue(orderId, out ticket)", span="1541-1541", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="IQFeedDataQueueHandler.cs"];
m12_1086 [label="OrderTicket ticket", span="1540-1540", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="IQFeedDataQueueHandler.cs"];
m12_1088 [label="return ticket;", span="1542-1542", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="IQFeedDataQueueHandler.cs"];
m12_1089 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="1538-1538", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="IQFeedDataQueueHandler.cs"];
m12_66 [label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", span="688-688", cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", file="IQFeedDataQueueHandler.cs"];
m12_67 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="186-186", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="IQFeedDataQueueHandler.cs"];
m12_68 [label="return;", span="188-188", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="IQFeedDataQueueHandler.cs"];
m12_84 [label="_adminPort.SetClientName(''Admin'')", span="235-235", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_85 [label="_adminPort.DisconnectedEvent += AdminPortOnDisconnectedEvent", span="237-237", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_86 [label="_adminPort.ConnectedEvent += AdminPortOnConnectedEvent", span="238-238", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_87 [label="Log.Trace(''IQFeed.Connect(): Connecting to L1 data...'')", span="240-240", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_104 [label="Entry QuantConnect.ToolBox.IQFeed.IQAdminSocketClient.Connect(int, int, int)", span="91-91", cluster="QuantConnect.ToolBox.IQFeed.IQAdminSocketClient.Connect(int, int, int)", file="IQFeedDataQueueHandler.cs"];
m12_105 [label="Entry QuantConnect.ToolBox.IQFeed.IQAdminSocketClient.SetAutoconnect(bool)", span="154-154", cluster="QuantConnect.ToolBox.IQFeed.IQAdminSocketClient.SetAutoconnect(bool)", file="IQFeedDataQueueHandler.cs"];
m12_95 [label="_isConnected = true", span="250-250", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_69 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="186-186", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="IQFeedDataQueueHandler.cs"];
m12_77 [label="var connector = new IQConnect(Config.Get(''iqfeed-productName''), ''1.0'')", span="226-226", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_79 [label="Log.Trace(''IQFeed.Connect(): Connecting to admin...'')", span="230-230", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_83 [label="_adminPort.SetClientStats(false)", span="234-234", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_88 [label="_level1Port = new Level1Port(_outputCollection, _symbolUniverse)", span="241-241", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_106 [label="Entry QuantConnect.ToolBox.IQFeed.IQAdminSocketClient.SetClientStats(bool)", span="118-118", cluster="QuantConnect.ToolBox.IQFeed.IQAdminSocketClient.SetClientStats(bool)", file="IQFeedDataQueueHandler.cs"];
m12_92 [label="_historyPort = new HistoryPort(_symbolUniverse)", span="246-246", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_93 [label="_historyPort.Connect()", span="247-247", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_94 [label="_historyPort.SetClientName(''History'')", span="248-248", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_96 [label=Exception, span="252-252", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_98 [label="_isConnected = false", span="255-255", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_97 [label="Log.Error(''IQFeed.Connect(): Error Connecting to IQFeed: '' + err.Message)", span="254-254", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_90 [label="_level1Port.SetClientName(''Level1'')", span="243-243", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_100 [label="Entry QuantConnect.ToolBox.IQFeed.IQConnect.IQConnect(string, string)", span="26-26", cluster="QuantConnect.ToolBox.IQFeed.IQConnect.IQConnect(string, string)", file="IQFeedDataQueueHandler.cs"];
m12_101 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="IQFeedDataQueueHandler.cs"];
m12_91 [label="Log.Trace(''IQFeed.Connect(): Connecting to Historical data...'')", span="245-245", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_76 [label="Log.Trace(''IQFeed.Connect(): Launching client...'')", span="224-224", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_81 [label="_adminPort.Connect()", span="232-232", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_99 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", span="219-219", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_78 [label="connector.Launch()", span="227-227", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_82 [label="_adminPort.SetAutoconnect()", span="233-233", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_80 [label="_adminPort = new AdminPort()", span="231-231", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_89 [label="_level1Port.Connect()", span="242-242", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_107 [label="Entry QuantConnect.ToolBox.IQFeed.IQAdminSocketClient.SetClientName(string)", span="123-123", cluster="QuantConnect.ToolBox.IQFeed.IQAdminSocketClient.SetClientName(string)", file="IQFeedDataQueueHandler.cs"];
m12_676 [label="Entry QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33", cluster="QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="IQFeedDataQueueHandler.cs"];
m12_859 [label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="41-41", cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="IQFeedDataQueueHandler.cs"];
m12_209 [label="Log.Error(''IQFeed.OnUnknownEvent(): '' + e.TextLine)", span="469-469", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port.OnLevel1UnknownEvent(object, QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_1055 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="IQFeedDataQueueHandler.cs"];
m12_798 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", span="1142-1142", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_800 [label="var securities = new SecurityManager(TimeKeeper)", span="1145-1145", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_801 [label="var transactions = new SecurityTransactionManager(securities)", span="1146-1146", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_803 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1148-1148", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_808 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1155-1155", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_809 [label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1156-1156", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_807 [label="portfolio.SetCash(0)", span="1153-1153", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_819 [label="portfolio.ProcessFill(fill)", span="1170-1170", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_799 [label="var algorithm = new QCAlgorithm()", span="1144-1144", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_804 [label="algorithm.Securities = securities", span="1150-1150", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_810 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1157-1157", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_811 [label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="1158-1158", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_812 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1160-1160", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_813 [label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1161-1161", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_815 [label="option.Underlying = securities[Symbols.SPY]", span="1163-1163", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_821 [label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1175-1175", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_822 [label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1178-1178", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_820 [label="Assert.AreEqual((192 - 189) * 100, portfolio.Cash)", span="1174-1174", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_802 [label="var transactionHandler = new BacktestingTransactionHandler()", span="1147-1147", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_806 [label="transactions.SetOrderProcessor(transactionHandler)", span="1152-1152", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_814 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1162-1162", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_818 [label=fills, span="1168-1168", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_805 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1151-1151", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_816 [label="option.ExerciseSettlement = SettlementType.Cash", span="1164-1164", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_817 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1166-1166", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_823 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", span="1142-1142", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_514 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", span="25-25", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", file="IQFeedDataQueueHandler.cs"];
m12_41 [label="Entry QuantConnect.Symbol.ToString()", span="284-284", cluster="QuantConnect.Symbol.ToString()", file="IQFeedDataQueueHandler.cs"];
m12_178 [label="Assert.IsFalse(issueMarginCallWarning)", span="300-300", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_179 [label="Assert.AreEqual(0, marginCallOrders.Count)", span="301-301", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_180 [label="security.SetLeverage(leverage * 2)", span="304-304", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_181 [label="decimal newPrice = lowPrice + 0.01m", span="307-307", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_183 [label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="311-311", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_187 [label="order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="318-318", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_188 [label="fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="319-319", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_190 [label="Assert.AreEqual(0, portfolio.TotalPortfolioValue)", span="323-323", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", color=red, community=0, file="IQFeedDataQueueHandler.cs"];
m12_191 [label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="325-325", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_193 [label="Assert.AreNotEqual(0, marginCallOrders.Count)", span="327-327", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_182 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, newPrice, newPrice, newPrice, newPrice, 1))", span="308-308", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_184 [label="Assert.IsTrue(issueMarginCallWarning)", span="312-312", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_185 [label="Assert.AreEqual(0, marginCallOrders.Count)", span="313-313", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_186 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="316-316", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_189 [label="portfolio.ProcessFill(fill)", span="321-321", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", color=red, community=0, file="IQFeedDataQueueHandler.cs"];
m12_192 [label="Assert.IsTrue(issueMarginCallWarning)", span="326-326", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_194 [label="Assert.AreEqual(-security.Holdings.Quantity, marginCallOrders[0].Quantity)", span="328-328", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_276 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", span="428-428", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="IQFeedDataQueueHandler.cs"];
m12_277 [label="var securities = new SecurityManager(TimeKeeper)", span="430-430", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="IQFeedDataQueueHandler.cs", color=green, community=0];
m12_45 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetBrokerageSymbol(QuantConnect.Symbol)", span="51-51", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetBrokerageSymbol(QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_165 [label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="278-278", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_40 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.CanSubscribe(QuantConnect.Symbol)", span="279-279", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.CanSubscribe(QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_769 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", span="1101-1101", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_771 [label="var securities = new SecurityManager(TimeKeeper)", span="1104-1104", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_772 [label="var transactions = new SecurityTransactionManager(securities)", span="1105-1105", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_774 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1107-1107", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_779 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1115-1115", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_780 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1116-1116", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_778 [label="portfolio.SetCash(0)", span="1113-1113", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_790 [label="portfolio.ProcessFill(fill)", span="1130-1130", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_770 [label="var algorithm = new QCAlgorithm()", span="1103-1103", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_775 [label="algorithm.Securities = securities", span="1109-1109", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_781 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 190 })", span="1117-1117", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_782 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="1118-1118", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_783 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="1120-1120", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_784 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1121-1121", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_786 [label="option.Underlying = securities[Symbols.SPY]", span="1123-1123", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_792 [label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1135-1135", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_793 [label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1138-1138", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_791 [label="Assert.AreEqual(0, portfolio.Cash)", span="1134-1134", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_773 [label="var transactionHandler = new BacktestingTransactionHandler()", span="1106-1106", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_777 [label="transactions.SetOrderProcessor(transactionHandler)", span="1111-1111", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_785 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1122-1122", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_789 [label=fills, span="1128-1128", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_776 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1110-1110", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_787 [label="option.ExerciseSettlement = SettlementType.Cash", span="1124-1124", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_788 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1126-1126", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_794 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", span="1101-1101", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="IQFeedDataQueueHandler.cs"];
m12_983 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", span="1396-1396", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_985 [label="var securities = new SecurityManager(TimeKeeper)", span="1399-1399", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_986 [label="var transactions = new SecurityTransactionManager(securities)", span="1400-1400", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_988 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1402-1402", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_993 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1411-1411", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_994 [label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1412-1412", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_992 [label="portfolio.SetCash((192 - 189) * 100)", span="1409-1409", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_984 [label="var algorithm = new QCAlgorithm()", span="1398-1398", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_989 [label="algorithm.Securities = securities", span="1404-1404", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_995 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1413-1413", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_996 [label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1414-1414", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_997 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1416-1416", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_998 [label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1417-1417", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1000 [label="option.Underlying = securities[Symbols.SPY]", span="1419-1419", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1006 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1433-1433", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1008 [label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1435-1435", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1009 [label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1438-1438", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1007 [label="Assert.AreEqual(0, portfolio.Cash)", span="1434-1434", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_987 [label="var transactionHandler = new BacktestingTransactionHandler()", span="1401-1401", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_991 [label="transactions.SetOrderProcessor(transactionHandler)", span="1406-1406", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_999 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1418-1418", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1005 [label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1429-1429", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_990 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1405-1405", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1001 [label="option.ExerciseSettlement = SettlementType.Cash", span="1420-1420", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1002 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1422-1422", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1003 [label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1425-1425", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1004 [label=fills, span="1427-1427", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1010 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", span="1396-1396", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_201 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port.OnLevel1TimerEvent(object, QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", span="439-439", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port.OnLevel1TimerEvent(object, QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_892 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", span="1266-1266", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_894 [label="var securities = new SecurityManager(TimeKeeper)", span="1269-1269", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_895 [label="var transactions = new SecurityTransactionManager(securities)", span="1270-1270", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_897 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1272-1272", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_902 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1279-1279", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_903 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1280-1280", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_901 [label="portfolio.SetCash(0)", span="1277-1277", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_913 [label="portfolio.ProcessFill(fill)", span="1294-1294", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_893 [label="var algorithm = new QCAlgorithm()", span="1268-1268", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_898 [label="algorithm.Securities = securities", span="1274-1274", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_904 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1281-1281", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_905 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 2)", span="1282-1282", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_906 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1284-1284", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_907 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1285-1285", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_909 [label="option.Underlying = securities[Symbols.SPY]", span="1287-1287", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_915 [label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1299-1299", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_916 [label="Assert.AreEqual(1, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1302-1302", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_914 [label="Assert.AreEqual((195 - 192) * 100, portfolio.Cash)", span="1298-1298", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_896 [label="var transactionHandler = new BacktestingTransactionHandler()", span="1271-1271", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_900 [label="transactions.SetOrderProcessor(transactionHandler)", span="1276-1276", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_908 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1286-1286", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_912 [label=fills, span="1292-1292", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_899 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1275-1275", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_910 [label="option.ExerciseSettlement = SettlementType.Cash", span="1288-1288", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_911 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1290-1290", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_917 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", span="1266-1266", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_648 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", span="922-922", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_650 [label="var securities = new SecurityManager(TimeKeeper)", span="925-925", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_651 [label="var transactions = new SecurityTransactionManager(securities)", span="926-926", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_653 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="928-928", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_658 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="935-935", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_659 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="936-936", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_657 [label="portfolio.SetCash(0)", span="933-933", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_649 [label="var algorithm = new QCAlgorithm()", span="924-924", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_654 [label="algorithm.Securities = securities", span="930-930", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_660 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="937-937", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_661 [label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="938-938", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_662 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="940-940", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_663 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="941-941", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_665 [label="option.Underlying = securities[Symbols.SPY]", span="943-943", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_670 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="959-959", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_674 [label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="965-965", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_671 [label="Assert.AreEqual(192 * 100, portfolio.Cash)", span="960-960", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_672 [label="Assert.AreEqual(-100, newUnderlyingHoldings.Quantity)", span="961-961", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_673 [label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="962-962", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_652 [label="var transactionHandler = new BacktestingTransactionHandler()", span="927-927", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_656 [label="transactions.SetOrderProcessor(transactionHandler)", span="932-932", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_664 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="942-942", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_669 [label="portfolioModel.ProcessFill(portfolio, option, fill)", span="952-952", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_655 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="931-931", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_666 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="945-945", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_667 [label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="948-948", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_668 [label=fills, span="950-950", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_675 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", span="922-922", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_278 [label="var transactions = new SecurityTransactionManager(securities)", span="431-431", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="IQFeedDataQueueHandler.cs", color=green, community=0];
m12_1054 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="IQFeedDataQueueHandler.cs"];
m12_112 [label="Entry QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.Connect()", span="244-244", cluster="QuantConnect.ToolBox.IQFeed.IQLookupHistorySymbolClient.Connect()", file="IQFeedDataQueueHandler.cs"];
m12_208 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port.OnLevel1UnknownEvent(object, QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs)", span="467-467", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port.OnLevel1UnknownEvent(object, QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_1062 [label="_tickets[ticket.OrderId] = ticket", span="1518-1518", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="IQFeedDataQueueHandler.cs"];
m12_1063 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="1516-1516", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="IQFeedDataQueueHandler.cs"];
m12_1070 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="1528-1528", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="IQFeedDataQueueHandler.cs"];
m12_1071 [label="return _orders.Values.FirstOrDefault(x => x.BrokerId.Contains(brokerageId));", span="1530-1530", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="IQFeedDataQueueHandler.cs"];
m12_1072 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="1528-1528", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="IQFeedDataQueueHandler.cs"];
m12_558 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", span="795-795", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_560 [label="var securities = new SecurityManager(TimeKeeper)", span="798-798", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_561 [label="var transactions = new SecurityTransactionManager(securities)", span="799-799", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_563 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="801-801", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_568 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="809-809", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_569 [label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="810-810", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_567 [label="portfolio.SetCash(0)", span="807-807", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_579 [label="portfolio.ProcessFill(fill)", span="824-824", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_559 [label="var algorithm = new QCAlgorithm()", span="797-797", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_564 [label="algorithm.Securities = securities", span="803-803", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_570 [label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="811-811", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_571 [label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 2000 })", span="812-812", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_572 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="814-814", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_573 [label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="815-815", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_575 [label="option.Underlying = securities[Symbols.SPY]", span="817-817", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_580 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="828-828", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_584 [label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="834-834", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_581 [label="Assert.AreEqual(0, portfolio.Cash)", span="829-829", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_582 [label="Assert.AreEqual(0, newUnderlyingHoldings.Quantity)", span="830-830", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_583 [label="Assert.AreEqual(0, newUnderlyingHoldings.AveragePrice)", span="831-831", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_562 [label="var transactionHandler = new BacktestingTransactionHandler()", span="800-800", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_566 [label="transactions.SetOrderProcessor(transactionHandler)", span="805-805", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_574 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="816-816", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_578 [label=fills, span="822-822", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_565 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="804-804", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_576 [label="option.ExerciseSettlement = SettlementType.Cash", span="818-818", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_577 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="820-820", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_585 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", span="795-795", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_163 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="275-275", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_210 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="IQFeedDataQueueHandler.cs"];
m12_279 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", span="620-620", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", color=green, community=0, file="IQFeedDataQueueHandler.cs"];
m12_281 [label="LookupSequence.MessageStart", span="626-626", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", color=green, community=0, file="IQFeedDataQueueHandler.cs"];
m12_285 [label="_currentRequest.TryGetValue(e.Id, out current)", span="631-631", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_289 [label="throw new ArgumentOutOfRangeException();", span="640-640", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_280 [label="e.Sequence", span="624-624", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", color=green, community=0, file="IQFeedDataQueueHandler.cs"];
m12_283 [label="LookupSequence.MessageDetail", span="629-629", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", color=green, community=0, file="IQFeedDataQueueHandler.cs"];
m12_284 [label="List<BaseData> current", span="630-630", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_287 [label="LookupSequence.MessageEnd", span="636-636", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_288 [label="_inProgress = false", span="637-637", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_282 [label="_currentRequest.AddOrUpdate(e.Id, new List<BaseData>())", span="627-627", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", color=green, community=0, file="IQFeedDataQueueHandler.cs"];
m12_286 [label="HandleMessageDetail(e, current)", span="633-633", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_290 [label=Exception, span="643-643", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_517 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="36-36", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="IQFeedDataQueueHandler.cs"];
m12_1059 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="IQFeedDataQueueHandler.cs"];
m12_153 [label="Assert.AreEqual(portfolio.CashBook[''USD''].Amount, fill.FillPrice*fill.FillQuantity)", span="258-258", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_1073 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="IQFeedDataQueueHandler.cs"];
m12_198 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port.OnLevel1TimerEvent(object, QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", span="439-439", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port.OnLevel1TimerEvent(object, QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_618 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", span="879-879", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_620 [label="var securities = new SecurityManager(TimeKeeper)", span="882-882", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_621 [label="var transactions = new SecurityTransactionManager(securities)", span="883-883", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_623 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="885-885", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_628 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="894-894", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_629 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="895-895", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_627 [label="portfolio.SetCash(192 * 100)", span="892-892", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_638 [label="portfolio.ProcessFill(fill)", span="908-908", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_619 [label="var algorithm = new QCAlgorithm()", span="881-881", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_624 [label="algorithm.Securities = securities", span="887-887", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_630 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 2)", span="896-896", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_631 [label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="897-897", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_632 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="899-899", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_633 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="900-900", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_635 [label="option.Underlying = securities[Symbols.SPY]", span="902-902", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_639 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="912-912", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_643 [label="Assert.AreEqual(1, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="918-918", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_640 [label="Assert.AreEqual(0, portfolio.Cash)", span="913-913", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_641 [label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="914-914", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_642 [label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="915-915", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_622 [label="var transactionHandler = new BacktestingTransactionHandler()", span="884-884", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_626 [label="transactions.SetOrderProcessor(transactionHandler)", span="889-889", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_634 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="901-901", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_637 [label=fills, span="906-906", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_625 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="888-888", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_636 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="904-904", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_644 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", span="879-879", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="IQFeedDataQueueHandler.cs"];
m12_1077 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="IQFeedDataQueueHandler.cs"];
m12_164 [label="Assert.AreEqual(quantity, portfolio.MarginRemaining)", span="277-277", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="IQFeedDataQueueHandler.cs"];
m12_232 [label="securities[Symbols.AAPL].SetLeverage(2m)", span="351-351", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_233 [label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="352-352", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_234 [label="securities[Symbols.AAPL].SetMarketPrice(new TradeBar{Time = time, Value = 100})", span="353-353", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_235 [label="var config2 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD)", span="359-359", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_236 [label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, config2, SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="360-360", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_398 [label="Entry QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="258-258", cluster="QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", file="IQFeedDataQueueHandler.cs"];
m12_524 [label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33", cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="IQFeedDataQueueHandler.cs"];
m12_1078 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="1533-1533", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="IQFeedDataQueueHandler.cs"];
m12_1079 [label="return _tickets.Values.Where(filter ?? (x => true));", span="1535-1535", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="IQFeedDataQueueHandler.cs"];
m12_1080 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="1533-1533", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="IQFeedDataQueueHandler.cs"];
m12_224 [label="portfolio.CashBook.Add(''EUR'',  1000, 1.1m)", span="341-341", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_225 [label="portfolio.CashBook.Add(''GBP'', -1000, 2.0m)", span="342-342", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_226 [label="var eurCash = portfolio.CashBook[''EUR'']", span="344-344", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="IQFeedDataQueueHandler.cs"];
m12_343 [label="var securities = new SecurityManager(TimeKeeper)", span="528-528", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_740 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", span="1060-1060", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_742 [label="var securities = new SecurityManager(TimeKeeper)", span="1063-1063", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_743 [label="var transactions = new SecurityTransactionManager(securities)", span="1064-1064", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_745 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1066-1066", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_750 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1074-1074", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_751 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1075-1075", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_749 [label="portfolio.SetCash(0)", span="1072-1072", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_761 [label="portfolio.ProcessFill(fill)", span="1089-1089", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_741 [label="var algorithm = new QCAlgorithm()", span="1062-1062", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_746 [label="algorithm.Securities = securities", span="1068-1068", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_752 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1076-1076", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_753 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="1077-1077", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_754 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1079-1079", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_755 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1080-1080", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_757 [label="option.Underlying = securities[Symbols.SPY]", span="1082-1082", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_763 [label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1094-1094", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_764 [label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1097-1097", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_762 [label="Assert.AreEqual((195 - 192) * 100, portfolio.Cash)", span="1093-1093", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_744 [label="var transactionHandler = new BacktestingTransactionHandler()", span="1065-1065", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_748 [label="transactions.SetOrderProcessor(transactionHandler)", span="1070-1070", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_756 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1081-1081", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_760 [label=fills, span="1087-1087", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_747 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1069-1069", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_758 [label="option.ExerciseSettlement = SettlementType.Cash", span="1083-1083", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_759 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1085-1085", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_765 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", span="1060-1060", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="IQFeedDataQueueHandler.cs"];
m12_131 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnConnectedEvent(object, QuantConnect.ToolBox.IQFeed.ConnectedEventArgs)", span="292-292", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnConnectedEvent(object, QuantConnect.ToolBox.IQFeed.ConnectedEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_134 [label="Log.Error(''IQFeed.AdminPortOnDisconnectedEvent(): ADMIN PORT DISCONNECTED!'')", span="304-304", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnDisconnectedEvent(object, QuantConnect.ToolBox.IQFeed.DisconnectedEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_135 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnDisconnectedEvent(object, QuantConnect.ToolBox.IQFeed.DisconnectedEventArgs)", span="301-301", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnDisconnectedEvent(object, QuantConnect.ToolBox.IQFeed.DisconnectedEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_133 [label="_isConnected = false", span="303-303", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnDisconnectedEvent(object, QuantConnect.ToolBox.IQFeed.DisconnectedEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_162 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="IQFeedDataQueueHandler.cs"];
m12_174 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="IQFeedDataQueueHandler.cs"];
m12_175 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="66-66", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="IQFeedDataQueueHandler.cs"];
m12_177 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="IQFeedDataQueueHandler.cs"];
m12_195 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="46-46", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="IQFeedDataQueueHandler.cs"];
m12_132 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnDisconnectedEvent(object, QuantConnect.ToolBox.IQFeed.DisconnectedEventArgs)", span="301-301", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.AdminPortOnDisconnectedEvent(object, QuantConnect.ToolBox.IQFeed.DisconnectedEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_1058 [label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43", cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="IQFeedDataQueueHandler.cs"];
m12_200 [label="FeedTime = e.DateTimeStamp", span="444-444", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port.OnLevel1TimerEvent(object, QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_1045 [label="type == SecurityType.Equity", span="1488-1488", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1046 [label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1489-1489", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1047 [label="type == SecurityType.Forex", span="1490-1490", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1048 [label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1491-1491", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1049 [label="type == SecurityType.Future", span="1492-1492", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1050 [label="return new SubscriptionDataConfig(typeof(TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1493-1493", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1051 [label="throw new NotImplementedException(type.ToString());", span="1494-1494", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1052 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="1486-1486", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_296 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="455-455", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="IQFeedDataQueueHandler.cs"];
m12_291 [label="Log.Error(err)", span="645-645", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_518 [label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="47-47", cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="IQFeedDataQueueHandler.cs"];
m12_406 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", span="597-597", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_423 [label="var order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="618-618", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_433 [label="newOrder = new MarketOrder(Symbols.AAPL, -quantity, time.AddSeconds(1)) { Price = buyPrice }", span="633-633", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_439 [label="newOrder = new MarketOrder(Symbols.AAPL, -quantity, time.AddSeconds(1)) { Price = lowPrice }", span="643-643", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_442 [label="newOrder = new MarketOrder(Symbols.AAPL, -quantity - 1, time.AddSeconds(1)) { Price = lowPrice }", span="648-648", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_430 [label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = buyPrice }", span="628-628", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_410 [label="var securities = new SecurityManager(TimeKeeper)", span="602-602", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_411 [label="var transactions = new SecurityTransactionManager(securities)", span="603-603", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_414 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="606-606", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_416 [label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="609-609", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_417 [label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="610-610", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_429 [label="portfolio.ProcessFill(fill)", span="625-625", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_435 [label="Assert.IsTrue(sufficientCapital)", span="635-635", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_441 [label="Assert.IsTrue(sufficientCapital)", span="645-645", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_431 [label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="629-629", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_434 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="634-634", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_440 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="644-644", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_443 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="649-649", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_409 [label="int quantity = (int)(amount * leverage)", span="601-601", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_422 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="616-616", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_420 [label="var time = DateTime.Now", span="614-614", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_421 [label="decimal buyPrice = 1m", span="615-615", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_424 [label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="619-619", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_425 [label="orderProcessor.AddOrder(order)", span="620-620", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_426 [label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="621-621", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_432 [label="Assert.IsFalse(sufficientCapital)", span="630-630", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_438 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="640-640", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_436 [label="time = time.AddDays(1)", span="638-638", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_437 [label="decimal lowPrice = buyPrice / 2", span="639-639", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_418 [label="var security = securities[Symbols.AAPL]", span="611-611", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_412 [label="var orderProcessor = new OrderProcessor()", span="604-604", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_413 [label="transactions.SetOrderProcessor(orderProcessor)", span="605-605", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_415 [label="portfolio.CashBook[''USD''].SetAmount(amount)", span="607-607", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_428 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="623-623", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_444 [label="Assert.IsFalse(sufficientCapital)", span="650-650", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_407 [label="decimal leverage = 2m", span="599-599", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_408 [label="int amount = 1000", span="600-600", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_419 [label="security.SetLeverage(leverage)", span="612-612", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_427 [label="request.SetOrderId(0)", span="622-622", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_445 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", span="597-597", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="IQFeedDataQueueHandler.cs"];
m12_520 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="IQFeedDataQueueHandler.cs"];
m12_342 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="526-526", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_519 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", span="1497-1497", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1056 [label="return new OptionSymbolProperties(SymbolPropertiesDatabase.FromDataFolder().GetSymbolProperties(symbol.ID.Market, symbol, symbol.SecurityType, CashBook.AccountCurrency));", span="1499-1499", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1057 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", span="1497-1497", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="IQFeedDataQueueHandler.cs"];
m12_1014 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", span="1442-1442", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1016 [label="var securities = new SecurityManager(TimeKeeper)", span="1445-1445", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1017 [label="var transactions = new SecurityTransactionManager(securities)", span="1446-1446", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1019 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1448-1448", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1024 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1457-1457", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1025 [label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1458-1458", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1023 [label="portfolio.SetCash((192 - 189) * 100)", span="1455-1455", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1015 [label="var algorithm = new QCAlgorithm()", span="1444-1444", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1020 [label="algorithm.Securities = securities", span="1450-1450", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1026 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1459-1459", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1027 [label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -2)", span="1460-1460", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1028 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1462-1462", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1029 [label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1463-1463", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1031 [label="option.Underlying = securities[Symbols.SPY]", span="1465-1465", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1037 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1478-1478", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1039 [label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1480-1480", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1040 [label="Assert.AreEqual(-1, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1483-1483", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1038 [label="Assert.AreEqual(0, portfolio.Cash)", span="1479-1479", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1018 [label="var transactionHandler = new BacktestingTransactionHandler()", span="1447-1447", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1022 [label="transactions.SetOrderProcessor(transactionHandler)", span="1452-1452", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1030 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1464-1464", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1036 [label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1474-1474", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1021 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1451-1451", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1032 [label="option.ExerciseSettlement = SettlementType.Cash", span="1466-1466", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1033 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1468-1468", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1034 [label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1471-1471", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1035 [label=fills, span="1472-1472", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_1041 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", span="1442-1442", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="IQFeedDataQueueHandler.cs"];
m12_361 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="549-549", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_374 [label="var orderFee = security.FeeModel.GetOrderFee(security,new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="565-565", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_381 [label="orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="574-574", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_363 [label="var securities = new SecurityManager(TimeKeeper)", span="552-552", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_364 [label="var transactions = new SecurityTransactionManager(securities)", span="553-553", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_365 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="554-554", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_367 [label="securities.Add(Symbols.AAPL, new QuantConnect.Securities.Equity.Equity(securityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="556-556", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_366 [label="portfolio.SetCash(1000)", span="555-555", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_376 [label="portfolio.ProcessFill(fill)", span="567-567", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_383 [label="portfolio.ProcessFill(fill)", span="576-576", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_375 [label="var fill = new OrderEvent(1, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Buy, 100, 10, orderFee)", span="566-566", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_382 [label="fill = new OrderEvent(2, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Sell, 100, -10, orderFee)", span="575-575", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_392 [label="Assert.IsTrue(marketOpen.HasValue)", span="589-589", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_368 [label="var security = securities[Symbols.AAPL]", span="557-557", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_373 [label="var timeUtc = new DateTime(2015, 10, 26, 15, 30, 0)", span="564-564", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_380 [label="timeUtc = timeUtc.AddDays(1)", span="573-573", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_362 [label="var securityExchangeHours = SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="551-551", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_371 [label="Assert.AreEqual(1000, portfolio.Cash)", span="560-560", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_372 [label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="561-561", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_378 [label="Assert.AreEqual(-1, portfolio.Cash)", span="569-569", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_379 [label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="570-570", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_385 [label="Assert.AreEqual(-2, portfolio.Cash)", span="578-578", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_386 [label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="579-579", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_389 [label="Assert.AreEqual(-2, portfolio.Cash)", span="584-584", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_390 [label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="585-585", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_395 [label="Assert.AreEqual(998, portfolio.Cash)", span="592-592", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_396 [label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="593-593", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_370 [label="Assert.AreEqual(0, security.Holdings.Quantity)", span="559-559", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_377 [label="Assert.AreEqual(10, security.Holdings.Quantity)", span="568-568", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_384 [label="Assert.AreEqual(0, security.Holdings.Quantity)", span="577-577", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_388 [label="portfolio.ScanForCashSettlement(timeUtc)", span="583-583", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_394 [label="portfolio.ScanForCashSettlement(timeUtc)", span="591-591", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_391 [label="var marketOpen = securityExchangeHours.MarketHours[timeUtc.DayOfWeek].GetMarketOpen(TimeSpan.Zero, false)", span="588-588", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_393 [label="timeUtc = timeUtc.AddDays(1).Date.Add(marketOpen.Value).ConvertToUtc(securityExchangeHours.TimeZone)", span="590-590", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_369 [label="security.SettlementModel = new DelayedSettlementModel(3, TimeSpan.FromHours(8))", span="558-558", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_387 [label="timeUtc = timeUtc.AddDays(2)", span="582-582", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_397 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="549-549", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_295 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.HandleMessageDetail(QuantConnect.ToolBox.IQFeed.LookupEventArgs, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="654-654", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.HandleMessageDetail(QuantConnect.ToolBox.IQFeed.LookupEventArgs, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="IQFeedDataQueueHandler.cs"];
m12_298 [label="var requestData = _requestDataByRequestId[e.Id]", span="656-656", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.HandleMessageDetail(QuantConnect.ToolBox.IQFeed.LookupEventArgs, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="IQFeedDataQueueHandler.cs"];
m12_300 [label="data != null && data.Time != DateTime.MinValue", span="658-658", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.HandleMessageDetail(QuantConnect.ToolBox.IQFeed.LookupEventArgs, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="IQFeedDataQueueHandler.cs"];
m12_303 [label="Entry QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", span="670-670", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_299 [label="var data = GetData(e, requestData)", span="657-657", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.HandleMessageDetail(QuantConnect.ToolBox.IQFeed.LookupEventArgs, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="IQFeedDataQueueHandler.cs"];
m12_302 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.HandleMessageDetail(QuantConnect.ToolBox.IQFeed.LookupEventArgs, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="654-654", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.HandleMessageDetail(QuantConnect.ToolBox.IQFeed.LookupEventArgs, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="IQFeedDataQueueHandler.cs"];
m12_301 [label="current.Add(data)", span="660-660", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.HandleMessageDetail(QuantConnect.ToolBox.IQFeed.LookupEventArgs, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="IQFeedDataQueueHandler.cs"];
m12_305 [label="var isEquity = requestData.SecurityType == SecurityType.Equity", span="672-672", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_1090 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="1545-1545", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="IQFeedDataQueueHandler.cs"];
m12_1091 [label="return _orders.Values.Where(filter ?? (x => true));", span="1547-1547", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="IQFeedDataQueueHandler.cs"];
m12_1092 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="1545-1545", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="IQFeedDataQueueHandler.cs"];
m12_306 [label="var scale = isEquity ? 1000m : 1m", span="673-673", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_307 [label="e.Type", span="676-676", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_308 [label="LookupType.REQ_HST_TCK", span="678-678", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_309 [label="var t = (LookupTickEventArgs) e", span="679-679", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_311 [label="return new Tick(time, requestData.Symbol, (decimal) t.Last*scale, (decimal) t.Bid*scale, (decimal) t.Ask*scale);", span="681-681", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_310 [label="var time = isEquity ? t.DateTimeStamp : t.DateTimeStamp.ConvertTo(TimeZones.NewYork, TimeZones.EasternStandard)", span="680-680", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_313 [label="var i = (LookupIntervalEventArgs) e", span="683-683", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_312 [label="LookupType.REQ_HST_INT", span="682-682", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_315 [label="return null;", span="684-684", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_314 [label="i.DateTimeStamp == DateTime.MinValue", span="684-684", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_316 [label="var istartTime = i.DateTimeStamp - requestData.Resolution.ToTimeSpan()", span="685-685", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.GetData(QuantConnect.ToolBox.IQFeed.LookupEventArgs, QuantConnect.Data.HistoryRequest)", file="IQFeedDataQueueHandler.cs"];
m12_275 [label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="157-157", cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="IQFeedDataQueueHandler.cs"];
m12_405 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="IQFeedDataQueueHandler.cs"];
m12_199 [label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="IQFeedDataQueueHandler.cs"];
m12_1069 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="IQFeedDataQueueHandler.cs"];
m12_292 [label="Exit QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", span="620-620", cluster="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort.OnLookupEvent(QuantConnect.ToolBox.IQFeed.LookupEventArgs)", file="IQFeedDataQueueHandler.cs"];
m12_515 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="49-49", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="IQFeedDataQueueHandler.cs"];
m12_1060 [label="_orders[order.Id] = order", span="1513-1513", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="IQFeedDataQueueHandler.cs"];
m12_1061 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="1511-1511", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="IQFeedDataQueueHandler.cs"];
m12_1064 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="1521-1521", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="IQFeedDataQueueHandler.cs"];
m12_1066 [label="_orders.TryGetValue(orderId, out order)", span="1524-1524", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="IQFeedDataQueueHandler.cs"];
m12_1065 [label="Order order", span="1523-1523", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="IQFeedDataQueueHandler.cs"];
m12_1067 [label="return order;", span="1525-1525", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="IQFeedDataQueueHandler.cs"];
m12_1068 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="1521-1521", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="IQFeedDataQueueHandler.cs"];
m12_403 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="IQFeedDataQueueHandler.cs"];
m12_528 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", span="754-754", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_530 [label="var securities = new SecurityManager(TimeKeeper)", span="757-757", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_531 [label="var transactions = new SecurityTransactionManager(securities)", span="758-758", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_533 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="760-760", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_538 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="768-768", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_539 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="769-769", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_537 [label="portfolio.SetCash(0)", span="766-766", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_548 [label="portfolio.ProcessFill(fill)", span="782-782", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_529 [label="var algorithm = new QCAlgorithm()", span="756-756", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_534 [label="algorithm.Securities = securities", span="762-762", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_540 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="770-770", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_541 [label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 20 })", span="771-771", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_542 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="773-773", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_543 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="774-774", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_545 [label="option.Underlying = securities[Symbols.SPY]", span="776-776", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_549 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="785-785", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_553 [label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="791-791", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_550 [label="Assert.AreEqual(0, portfolio.Cash)", span="786-786", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_551 [label="Assert.AreEqual(0, newUnderlyingHoldings.Quantity)", span="787-787", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_552 [label="Assert.AreEqual(0, newUnderlyingHoldings.AveragePrice)", span="788-788", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_532 [label="var transactionHandler = new BacktestingTransactionHandler()", span="759-759", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_536 [label="transactions.SetOrderProcessor(transactionHandler)", span="764-764", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_544 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="775-775", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_547 [label=fills, span="780-780", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_535 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="763-763", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_546 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="778-778", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_554 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", span="754-754", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_352 [label="var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.EURUSD, 100, DateTime.MinValue))", span="539-539", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_344 [label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler", span="", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_345 [label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port", span="", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_348 [label="securities.Add(Symbols.EURUSD, new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, portfolio.CashBook[''USD''], CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="534-534", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_346 [label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort", span="", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_354 [label="portfolio.ProcessFill(fill)", span="541-541", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_353 [label="var fill = new OrderEvent(1, Symbols.EURUSD, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 1.1000m, 100, orderFee)", span="540-540", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_349 [label="var security = securities[Symbols.EURUSD]", span="535-535", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_351 [label="Assert.AreEqual(1000, portfolio.Cash)", span="537-537", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_356 [label="Assert.AreEqual(998, portfolio.Cash)", span="543-543", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_357 [label="Assert.AreEqual(100, portfolio.CashBook[''EUR''].Amount)", span="544-544", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_358 [label="Assert.AreEqual(888, portfolio.CashBook[''USD''].Amount)", span="545-545", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_350 [label="Assert.AreEqual(0, security.Holdings.Quantity)", span="536-536", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_355 [label="Assert.AreEqual(100, security.Holdings.Quantity)", span="542-542", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_347 [label="portfolio.CashBook.Add(''EUR'', 0, 1.1000m)", span="532-532", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_359 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="526-526", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="IQFeedDataQueueHandler.cs"];
m12_360 [label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31", cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="IQFeedDataQueueHandler.cs"];
m12_521 [label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="IQFeedDataQueueHandler.cs"];
m12_860 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", span="1224-1224", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_862 [label="var securities = new SecurityManager(TimeKeeper)", span="1227-1227", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_863 [label="var transactions = new SecurityTransactionManager(securities)", span="1228-1228", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_865 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1230-1230", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_870 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1238-1238", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_871 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1239-1239", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_869 [label="portfolio.SetCash(1000)", span="1236-1236", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_890 [label="Assert.IsTrue(sufficientCapital)", span="1262-1262", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_881 [label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1251-1251", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_889 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1261-1261", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_861 [label="var algorithm = new QCAlgorithm()", span="1226-1226", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_867 [label="algorithm.Securities = securities", span="1233-1233", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_872 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1240-1240", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_873 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -10)", span="1241-1241", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_874 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1243-1243", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_875 [label="option.Underlying = securities[Symbols.SPY]", span="1244-1244", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_883 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 150 })", span="1254-1254", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_864 [label="var orderProcessor = new OrderProcessor()", span="1229-1229", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_868 [label="transactions.SetOrderProcessor(orderProcessor)", span="1234-1234", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_866 [label="var time = DateTime.Now", span="1232-1232", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_882 [label="Assert.IsFalse(sufficientCapital)", span="1252-1252", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_880 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1250-1250", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_876 [label="var order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, -10, time.AddSeconds(1))", span="1246-1246", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_888 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1260-1260", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_884 [label="order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, -10, time.AddSeconds(1))", span="1256-1256", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_878 [label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1248-1248", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_886 [label="request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1258-1258", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_877 [label="orderProcessor.AddOrder(order)", span="1247-1247", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_885 [label="orderProcessor.AddOrder(order)", span="1257-1257", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_879 [label="request.SetOrderId(0)", span="1249-1249", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_887 [label="request.SetOrderId(0)", span="1259-1259", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_891 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", span="1224-1224", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="IQFeedDataQueueHandler.cs"];
m12_827 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", span="1182-1182", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_829 [label="var securities = new SecurityManager(TimeKeeper)", span="1185-1185", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_830 [label="var transactions = new SecurityTransactionManager(securities)", span="1186-1186", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_832 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1188-1188", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_837 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1196-1196", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_838 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1197-1197", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_836 [label="portfolio.SetCash(1000)", span="1194-1194", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_857 [label="Assert.IsTrue(sufficientCapital)", span="1220-1220", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_848 [label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1209-1209", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_856 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1219-1219", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_828 [label="var algorithm = new QCAlgorithm()", span="1184-1184", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_834 [label="algorithm.Securities = securities", span="1191-1191", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_839 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1198-1198", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_840 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 10)", span="1199-1199", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_841 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1201-1201", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_842 [label="option.Underlying = securities[Symbols.SPY]", span="1202-1202", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_850 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 150 })", span="1212-1212", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_831 [label="var orderProcessor = new OrderProcessor()", span="1187-1187", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_835 [label="transactions.SetOrderProcessor(orderProcessor)", span="1192-1192", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_833 [label="var time = DateTime.Now", span="1190-1190", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_849 [label="Assert.IsFalse(sufficientCapital)", span="1210-1210", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_847 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1208-1208", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_843 [label="var order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, 10, time.AddSeconds(1))", span="1204-1204", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_855 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1218-1218", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_851 [label="order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, 10, time.AddSeconds(1))", span="1214-1214", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_845 [label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1206-1206", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_853 [label="request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1216-1216", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_844 [label="orderProcessor.AddOrder(order)", span="1205-1205", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_852 [label="orderProcessor.AddOrder(order)", span="1215-1215", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_846 [label="request.SetOrderId(0)", span="1207-1207", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_854 [label="request.SetOrderId(0)", span="1217-1217", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_858 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", span="1182-1182", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="IQFeedDataQueueHandler.cs"];
m12_404 [label="Entry QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", span="172-172", cluster="QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", file="IQFeedDataQueueHandler.cs"];
m12_952 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", span="1351-1351", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_954 [label="var securities = new SecurityManager(TimeKeeper)", span="1354-1354", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_955 [label="var transactions = new SecurityTransactionManager(securities)", span="1355-1355", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_957 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1357-1357", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_962 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1365-1365", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_963 [label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1366-1366", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_961 [label="portfolio.SetCash(0)", span="1363-1363", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_953 [label="var algorithm = new QCAlgorithm()", span="1353-1353", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_958 [label="algorithm.Securities = securities", span="1359-1359", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_964 [label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 10 })", span="1367-1367", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_965 [label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -100)", span="1368-1368", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_966 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -100, 0, 0, securities.UtcTime, ''''))", span="1370-1370", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_967 [label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1371-1371", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_969 [label="option.Underlying = securities[Symbols.SPY]", span="1373-1373", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_975 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1387-1387", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_977 [label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1389-1389", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_978 [label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1392-1392", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_976 [label="Assert.AreEqual(0, portfolio.Cash)", span="1388-1388", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_956 [label="var transactionHandler = new BacktestingTransactionHandler()", span="1356-1356", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_960 [label="transactions.SetOrderProcessor(transactionHandler)", span="1361-1361", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_968 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1372-1372", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_974 [label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1383-1383", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_959 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1360-1360", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_970 [label="option.ExerciseSettlement = SettlementType.Cash", span="1374-1374", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_971 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1376-1376", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_972 [label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1379-1379", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_973 [label=fills, span="1381-1381", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_979 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", span="1351-1351", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="IQFeedDataQueueHandler.cs"];
m12_710 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", span="1014-1014", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_712 [label="var securities = new SecurityManager(TimeKeeper)", span="1017-1017", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_713 [label="var transactions = new SecurityTransactionManager(securities)", span="1018-1018", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_715 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1020-1020", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_720 [label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1029-1029", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_721 [label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1030-1030", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_719 [label="portfolio.SetCash(192 * 100)", span="1027-1027", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_711 [label="var algorithm = new QCAlgorithm()", span="1016-1016", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_716 [label="algorithm.Securities = securities", span="1022-1022", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_722 [label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -2)", span="1031-1031", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_723 [label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1033-1033", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_724 [label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1034-1034", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_726 [label="option.Underlying = securities[Symbols.SPY]", span="1036-1036", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_731 [label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1050-1050", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_735 [label="Assert.AreEqual(-1, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1056-1056", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_732 [label="Assert.AreEqual(0, portfolio.Cash)", span="1051-1051", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_733 [label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="1052-1052", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_734 [label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="1053-1053", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_714 [label="var transactionHandler = new BacktestingTransactionHandler()", span="1019-1019", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_718 [label="transactions.SetOrderProcessor(transactionHandler)", span="1024-1024", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_725 [label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1035-1035", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_730 [label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1045-1045", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_717 [label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1023-1023", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_727 [label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1038-1038", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_728 [label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1041-1041", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_729 [label=fills, span="1043-1043", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_736 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", span="1014-1014", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="IQFeedDataQueueHandler.cs"];
m12_399 [label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="IQFeedDataQueueHandler.cs"];
m12_1100 [label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", span="", file="IQFeedDataQueueHandler.cs"];
m12_1101 [label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", span="", file="IQFeedDataQueueHandler.cs"];
m12_1102 [label=string, span="", file="IQFeedDataQueueHandler.cs"];
m13_51 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="OptionStrategies.cs"];
m13_35 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="OptionStrategies.cs"];
m13_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="OptionStrategies.cs"];
m13_34 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="OptionStrategies.cs"];
m13_38 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="OptionStrategies.cs"];
m13_52 [label="Entry QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="133-133", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="OptionStrategies.cs"];
m13_53 [label="_changes = changes", span="136-136", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="OptionStrategies.cs"];
m13_54 [label="Exit QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="133-133", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="OptionStrategies.cs"];
m13_50 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="OptionStrategies.cs"];
m13_31 [label="Entry System.Net.WebClient.WebClient()", span="0-0", cluster="System.Net.WebClient.WebClient()", file="OptionStrategies.cs"];
m13_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="OptionStrategies.cs"];
m13_32 [label="Entry System.Net.WebClient.DownloadString(string)", span="0-0", cluster="System.Net.WebClient.DownloadString(string)", file="OptionStrategies.cs"];
m13_39 [label="Entry QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", span="111-111", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_42 [label="_changes == SecurityChanges.None", span="114-114", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_44 [label="Liquidate()", span="117-117", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_47 [label="SetHoldings(tradeBar.Symbol, percentage)", span="122-122", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_48 [label="_changes = SecurityChanges.None", span="126-126", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_40 [label="slice.Bars.Count == 0", span="113-113", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_43 [label="return;", span="114-114", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_45 [label="var percentage = 1m/slice.Bars.Count", span="119-119", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_46 [label="slice.Bars.Values", span="120-120", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_41 [label="return;", span="113-113", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_49 [label="Exit QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", span="111-111", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionStrategies.cs"];
m13_33 [label="Entry string.ToCsv(int)", span="329-329", cluster="string.ToCsv(int)", file="OptionStrategies.cs"];
m13_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="OptionStrategies.cs"];
m13_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="298-298", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="OptionStrategies.cs"];
m13_0 [label="Entry QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.Initialize()", span="42-42", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.Initialize()", file="OptionStrategies.cs"];
m13_4 [label="AddUniverse(''my-dropbox-universe'', Resolution.Daily, dateTime =>\r\n            {\r\n                const string liveUrl = @''https://www.dropbox.com/s/2az14r5xbx4w5j6/daily-stock-picker-live.csv?dl=1'';\r\n                const string backtestUrl = @''https://www.dropbox.com/s/rmiiktz0ntpff3a/daily-stock-picker-backtest.csv?dl=1'';\r\n                var url = LiveMode ? liveUrl : backtestUrl;\r\n                using (var client = new WebClient())\r\n                {\r\n                    // handle live mode file format\r\n                    if (LiveMode)\r\n                    {\r\n                        // fetch the file from dropbox\r\n                        var file = client.DownloadString(url);\r\n                        // if we have a file for today, break apart by commas and return symbols\r\n                        if (file.Length > 0) return file.ToCsv();\r\n                        // no symbol today, leave universe unchanged\r\n                        return Universe.Unchanged;\r\n                    }\r\n\r\n                    // backtest - first cache the entire file\r\n                    if (_backtestSymbolsPerDay.Count == 0)\r\n                    {\r\n                        // fetch the file from dropbox only if we haven't cached the result already\r\n                        var file = client.DownloadString(url);\r\n\r\n                        // split the file into lines and add to our cache\r\n                        foreach (var line in file.Split(new[] { '\n', '\r' }, StringSplitOptions.RemoveEmptyEntries))\r\n                        {\r\n                            var csv = line.ToCsv();\r\n                            var date = DateTime.ParseExact(csv[0], ''yyyyMMdd'', null);\r\n                            var symbols = csv.Skip(1).ToList();\r\n                            _backtestSymbolsPerDay[date] = symbols;\r\n                        }\r\n                    }\r\n\r\n                    // if we have symbols for this date return them, else specify Universe.Unchanged\r\n                    List<string> result;\r\n                    if (_backtestSymbolsPerDay.TryGetValue(dateTime.Date, out result))\r\n                    {\r\n                        return result;\r\n                    }\r\n                    return Universe.Unchanged;\r\n                }\r\n            })", span="52-94", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.Initialize()", color=green, community=0, file="OptionStrategies.cs"];
m13_3 [label="SetEndDate(2013, 12, 31)", span="49-49", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.Initialize()", file="OptionStrategies.cs"];
m13_1 [label="UniverseSettings.Resolution = Resolution.Daily", span="45-45", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.Initialize()", file="OptionStrategies.cs"];
m13_2 [label="SetStartDate(2013, 01, 01)", span="48-48", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.Initialize()", file="OptionStrategies.cs"];
m13_5 [label="Exit QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.Initialize()", span="42-42", cluster="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm.Initialize()", file="OptionStrategies.cs"];
m13_6 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OptionStrategies.cs"];
m13_9 [label="Entry lambda expression", span="52-94", cluster="lambda expression", file="OptionStrategies.cs"];
m13_12 [label="var url = LiveMode ? liveUrl : backtestUrl", span="56-56", cluster="lambda expression", file="OptionStrategies.cs"];
m13_14 [label=LiveMode, span="60-60", cluster="lambda expression", file="OptionStrategies.cs"];
m13_18 [label="return Universe.Unchanged;", span="67-67", cluster="lambda expression", file="OptionStrategies.cs"];
m13_19 [label="_backtestSymbolsPerDay.Count == 0", span="71-71", cluster="lambda expression", file="OptionStrategies.cs"];
m13_25 [label="_backtestSymbolsPerDay[date] = symbols", span="82-82", cluster="lambda expression", file="OptionStrategies.cs"];
m13_27 [label="_backtestSymbolsPerDay.TryGetValue(dateTime.Date, out result)", span="88-88", cluster="lambda expression", file="OptionStrategies.cs"];
m13_29 [label="return Universe.Unchanged;", span="92-92", cluster="lambda expression", file="OptionStrategies.cs"];
m13_10 [label="string liveUrl = @''https://www.dropbox.com/s/2az14r5xbx4w5j6/daily-stock-picker-live.csv?dl=1''", span="54-54", cluster="lambda expression", file="OptionStrategies.cs"];
m13_11 [label="string backtestUrl = @''https://www.dropbox.com/s/rmiiktz0ntpff3a/daily-stock-picker-backtest.csv?dl=1''", span="55-55", cluster="lambda expression", file="OptionStrategies.cs"];
m13_13 [label="var client = new WebClient()", span="57-57", cluster="lambda expression", file="OptionStrategies.cs"];
m13_15 [label="var file = client.DownloadString(url)", span="63-63", cluster="lambda expression", file="OptionStrategies.cs"];
m13_20 [label="var file = client.DownloadString(url)", span="74-74", cluster="lambda expression", file="OptionStrategies.cs"];
m13_16 [label="file.Length > 0", span="65-65", cluster="lambda expression", file="OptionStrategies.cs"];
m13_26 [label="List<string> result", span="87-87", cluster="lambda expression", file="OptionStrategies.cs"];
m13_23 [label="var date = DateTime.ParseExact(csv[0], ''yyyyMMdd'', null)", span="80-80", cluster="lambda expression", file="OptionStrategies.cs"];
m13_24 [label="var symbols = csv.Skip(1).ToList()", span="81-81", cluster="lambda expression", file="OptionStrategies.cs"];
m13_21 [label="file.Split(new[] { '\n', '\r' }, StringSplitOptions.RemoveEmptyEntries)", span="77-77", cluster="lambda expression", file="OptionStrategies.cs"];
m13_28 [label="return result;", span="90-90", cluster="lambda expression", file="OptionStrategies.cs"];
m13_17 [label="return file.ToCsv();", span="65-65", cluster="lambda expression", file="OptionStrategies.cs"];
m13_22 [label="var csv = line.ToCsv()", span="79-79", cluster="lambda expression", file="OptionStrategies.cs"];
m13_30 [label="Exit lambda expression", span="52-94", cluster="lambda expression", file="OptionStrategies.cs"];
m13_55 [label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm", span="", file="OptionStrategies.cs"];
m16_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="SecurityIdentifier.cs"];
m16_27 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="SecurityIdentifier.cs"];
m16_0 [label="Entry QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="SecurityIdentifier.cs"];
m16_1 [label="SetStartDate(2013, 10, 07)", span="35-35", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="SecurityIdentifier.cs"];
m16_2 [label="SetEndDate(2013, 10, 11)", span="36-36", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="SecurityIdentifier.cs"];
m16_3 [label="SetCash(100000)", span="37-37", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="SecurityIdentifier.cs"];
m16_4 [label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Second, fillDataForward: true, extendedMarketHours: true)", span="39-39", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="SecurityIdentifier.cs"];
m16_5 [label="security = Securities[''SPY'']", span="41-41", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="SecurityIdentifier.cs"];
m16_6 [label="Exit QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="SecurityIdentifier.cs"];
m16_11 [label="Entry QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="50-50", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SecurityIdentifier.cs"];
m16_12 [label="Time.Date != last.Date", span="52-52", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SecurityIdentifier.cs"];
m16_13 [label="submittedMarketOnCloseToday = false", span="54-54", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SecurityIdentifier.cs"];
m16_16 [label="!submittedMarketOnCloseToday && security.Exchange.ExchangeOpen", span="58-58", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SecurityIdentifier.cs"];
m16_14 [label="MarketOnOpenOrder(''SPY'', 100)", span="55-55", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SecurityIdentifier.cs"];
m16_15 [label="last = Time", span="56-56", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SecurityIdentifier.cs"];
m16_17 [label="submittedMarketOnCloseToday = true", span="60-60", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SecurityIdentifier.cs"];
m16_18 [label="MarketOnCloseOrder(''SPY'', -100)", span="61-61", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SecurityIdentifier.cs"];
m16_19 [label="Exit QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="50-50", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="SecurityIdentifier.cs"];
m16_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="SecurityIdentifier.cs"];
m16_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SecurityIdentifier.cs"];
m16_26 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="SecurityIdentifier.cs"];
m16_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1257-1257", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SecurityIdentifier.cs"];
m16_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SecurityIdentifier.cs"];
m16_22 [label="Entry QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="65-65", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityIdentifier.cs"];
m16_23 [label="var order = Transactions.GetOrderById(fill.OrderId)", span="67-67", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityIdentifier.cs"];
m16_24 [label="Console.WriteLine(Time + '' - '' + order.Type + '' - '' + fill.Status + '':: '' + fill)", span="68-68", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityIdentifier.cs"];
m16_25 [label="Exit QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="65-65", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityIdentifier.cs"];
m16_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SecurityIdentifier.cs"];
m16_28 [label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm", span="", file="SecurityIdentifier.cs"];
m17_59 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_82 [label="Order queued", span="257-257", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_83 [label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="258-258", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_84 [label="_orders[order.Id] = order", span="260-260", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_85 [label="!_brokerage.CancelOrder(order)", span="262-262", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_86 [label="order.Status = OrderStatus.Invalid", span="265-265", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_87 [label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="270-270", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_88 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_23 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="268-268", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityManager.cs"];
m17_53 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="SecurityManager.cs"];
m17_12 [label="Entry lambda expression", span="67-95", cluster="lambda expression", file="SecurityManager.cs"];
m17_13 [label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="75-75", cluster="lambda expression", file="SecurityManager.cs"];
m17_14 [label="_algorithm.Portfolio.ProcessFill(fill)", span="77-77", cluster="lambda expression", file="SecurityManager.cs"];
m17_15 [label="fill.Status != OrderStatus.None", span="81-81", cluster="lambda expression", file="SecurityManager.cs"];
m17_16 [label="Engine.ResultHandler.OrderEvent(fill)", span="84-84", cluster="lambda expression", file="SecurityManager.cs"];
m17_17 [label="_algorithm.OnOrderEvent(fill)", span="88-88", cluster="lambda expression", file="SecurityManager.cs"];
m17_19 [label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="92-92", cluster="lambda expression", file="SecurityManager.cs"];
m17_18 [label=Exception, span="90-90", cluster="lambda expression", file="SecurityManager.cs"];
m17_20 [label="Exit lambda expression", span="67-95", cluster="lambda expression", file="SecurityManager.cs"];
m17_55 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SecurityManager.cs"];
m17_25 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="127-127", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_26 [label="!_exitTriggered", span="129-129", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_27 [label="Order order", span="133-133", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_50 [label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="184-184", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_28 [label="!_orderQueue.TryDequeue(out order)", span="134-134", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_29 [label="_algorithm.ProcessingOrder = false", span="136-136", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_31 [label="_algorithm.ProcessingOrder = true", span="141-141", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_32 [label="order.Direction == OrderDirection.Hold", span="144-144", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_33 [label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="146-146", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_34 [label="!_orders.TryAdd(order.Id, order)", span="149-149", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_35 [label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="151-151", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_36 [label="order.Status", span="157-157", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_38 [label="HandleNewOrder(order)", span="160-160", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_40 [label="HandleUpdatedOrder(order)", span="164-164", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_42 [label="HandleCancelledOrder(order)", span="168-168", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_48 [label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="177-177", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_30 [label="Thread.Sleep(1)", span="137-137", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_37 [label="OrderStatus.New", span="159-159", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_39 [label="OrderStatus.Update", span="163-163", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_41 [label="OrderStatus.Canceled", span="167-167", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_43 [label="OrderStatus.None", span="172-172", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_44 [label="OrderStatus.Invalid", span="173-173", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_45 [label="OrderStatus.PartiallyFilled", span="174-174", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_46 [label="OrderStatus.Filled", span="175-175", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_47 [label="OrderStatus.Submitted", span="176-176", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_49 [label="ProcessSynchronousEvents()", span="181-181", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_51 [label="IsActive = false", span="185-185", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_52 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="127-127", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="SecurityManager.cs"];
m17_63 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="199-199", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="SecurityManager.cs"];
m17_64 [label="_exitTriggered = true", span="201-201", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="SecurityManager.cs"];
m17_65 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="199-199", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="SecurityManager.cs"];
m17_11 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SecurityManager.cs"];
m17_56 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="SecurityManager.cs"];
m17_58 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="233-233", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_73 [label="Order queued", span="235-235", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_74 [label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="236-236", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_75 [label="_orders[order.Id] = order", span="238-238", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_76 [label="!_brokerage.UpdateOrder(order)", span="239-239", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_77 [label="order.Status = OrderStatus.Invalid", span="242-242", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_78 [label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="247-247", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_79 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="233-233", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_60 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="191-191", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityManager.cs"];
m17_62 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="191-191", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="SecurityManager.cs"];
m17_72 [label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="46-46", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_24 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="246-246", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="SecurityManager.cs"];
m17_80 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityManager.cs"];
m17_57 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="208-208", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_66 [label="_orders.TryAdd(order.Id, order)", span="211-211", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_67 [label="_brokerage.PlaceOrder(order)", span="214-214", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_68 [label="order.Status = OrderStatus.Submitted", span="216-216", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_69 [label="order.Status = OrderStatus.Invalid", span="220-220", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_70 [label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="225-225", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_71 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="208-208", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_21 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="459-459", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityManager.cs"];
m17_54 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="SecurityManager.cs"];
m17_22 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="SecurityManager.cs"];
m17_89 [label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="60-60", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_61 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SecurityManager.cs"];
m17_81 [label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="53-53", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="SecurityManager.cs"];
m17_0 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_1 [label="brokerage == null", span="61-61", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_3 [label="_brokerage = brokerage", span="66-66", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_6 [label="_algorithm = algorithm", span="102-102", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_7 [label="_orders = algorithm.Transactions.Orders", span="105-105", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_8 [label="_orderEvents = algorithm.Transactions.OrderEvents", span="106-106", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_9 [label="_orderQueue = algorithm.Transactions.OrderQueue", span="107-107", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_2 [label="throw new ArgumentNullException(''brokerage'');", span="63-63", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_4 [label="_brokerage.OrderEvent += (sender, fill) =>\r\n            {\r\n                // save that the order event took place, we're initializing the list with a capacity of 2 to reduce number of mallocs\r\n                //these hog memory\r\n                //List<OrderEvent> orderEvents = _orderEvents.GetOrAdd(orderEvent.OrderId, i => new List<OrderEvent>(2));\r\n                //orderEvents.Add(orderEvent);\r\n\r\n                //Apply the filled order to our portfolio:\r\n                if (fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled)\r\n                {\r\n                    _algorithm.Portfolio.ProcessFill(fill);\r\n                }\r\n\r\n                //We have an event! :) Order filled, send it in to be handled by algorithm portfolio.\r\n                if (fill.Status != OrderStatus.None) //order.Status != OrderStatus.Submitted\r\n                {\r\n                    //Create new order event:\r\n                    Engine.ResultHandler.OrderEvent(fill);\r\n                    try\r\n                    {\r\n                        //Trigger our order event handler\r\n                        _algorithm.OnOrderEvent(fill);\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        _algorithm.Error(''Order Event Handler Error: '' + err.Message);\r\n                    }\r\n                }\r\n            }", span="67-95", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_5 [label="IsActive = true", span="100-100", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_10 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="SecurityManager.cs"];
m17_90 [label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span="", file="SecurityManager.cs"];
m18_0 [label="Entry QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="37-37", cluster="QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Symbol.cs"];
m18_1 [label="Exit QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="37-37", cluster="QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Symbol.cs"];
m19_2 [label="Entry QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", span="41-41", cluster="QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", file="Symbols.cs"];
m19_3 [label="Exit QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", span="41-41", cluster="QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", file="Symbols.cs"];
m19_8 [label="Entry QuantConnect.Interfaces.IQueueHandler.OpenDataQueue()", span="58-58", cluster="QuantConnect.Interfaces.IQueueHandler.OpenDataQueue()", file="Symbols.cs"];
m19_9 [label="Exit QuantConnect.Interfaces.IQueueHandler.OpenDataQueue()", span="58-58", cluster="QuantConnect.Interfaces.IQueueHandler.OpenDataQueue()", file="Symbols.cs"];
m19_4 [label="Entry QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="47-47", cluster="QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Symbols.cs"];
m19_5 [label="Exit QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="47-47", cluster="QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Symbols.cs"];
m19_14 [label="Entry QuantConnect.Interfaces.IQueueHandler.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="75-75", cluster="QuantConnect.Interfaces.IQueueHandler.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Symbols.cs"];
m19_15 [label="Exit QuantConnect.Interfaces.IQueueHandler.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="75-75", cluster="QuantConnect.Interfaces.IQueueHandler.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Symbols.cs"];
m19_0 [label="Entry QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", span="35-35", cluster="QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", file="Symbols.cs"];
m19_1 [label="Exit QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", span="35-35", cluster="QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", file="Symbols.cs"];
m19_6 [label="Entry QuantConnect.Interfaces.IQueueHandler.GetNextTicks()", span="53-53", cluster="QuantConnect.Interfaces.IQueueHandler.GetNextTicks()", file="Symbols.cs"];
m19_7 [label="Exit QuantConnect.Interfaces.IQueueHandler.GetNextTicks()", span="53-53", cluster="QuantConnect.Interfaces.IQueueHandler.GetNextTicks()", file="Symbols.cs"];
m19_12 [label="Entry QuantConnect.Interfaces.IQueueHandler.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="69-69", cluster="QuantConnect.Interfaces.IQueueHandler.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Symbols.cs"];
m19_13 [label="Exit QuantConnect.Interfaces.IQueueHandler.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="69-69", cluster="QuantConnect.Interfaces.IQueueHandler.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Symbols.cs"];
m19_10 [label="Entry QuantConnect.Interfaces.IQueueHandler.CloseDataQueue()", span="63-63", cluster="QuantConnect.Interfaces.IQueueHandler.CloseDataQueue()", file="Symbols.cs"];
m19_11 [label="Exit QuantConnect.Interfaces.IQueueHandler.CloseDataQueue()", span="63-63", cluster="QuantConnect.Interfaces.IQueueHandler.CloseDataQueue()", file="Symbols.cs"];
n101 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n101 -> n76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation"];
n102 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n103 -> n61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n103 -> n66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n103 -> n76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n104 -> n72  [key=1, style=dashed, color=darkseagreen4, label=deepITM];
n105 -> n80  [key=1, style=dashed, color=darkseagreen4, label=backtestingBrokerage];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n0 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n0 -> n11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n0 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n0 -> n14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n0 -> n16  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsReadyToSimulate"];
n0 -> n17  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsReadyToSimulate"];
n1 -> n2  [key=0, style=solid];
n1 -> n12  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n20  [key=2, style=dotted];
n2 -> n21  [key=2, style=dotted];
n2 -> n22  [key=2, style=dotted];
n2 -> n23  [key=2, style=dotted];
n2 -> n33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n2 -> n36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n2 -> n39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n2 -> n5  [key=1, style=dashed, color=darkseagreen4, label=expirations];
n34 -> n35  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n17  [key=0, style=solid];
n13 -> n31  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n14 -> n31  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n18  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n7  [key=1, style=dashed, color=darkseagreen4, label=scansCount];
n33 -> n34  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n9  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n24  [key=2, style=dotted];
n4 -> n8  [key=1, style=dashed, color=darkseagreen4, label=scans];
n4 -> n9  [key=1, style=dashed, color=darkseagreen4, label=scans];
n7 -> n8  [key=0, style=solid];
n7 -> n5  [key=0, style=solid];
n7 -> n25  [key=2, style=dotted];
n8 -> n7  [key=0, style=solid];
n8 -> n26  [key=2, style=dotted];
n8 -> n27  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n28  [key=2, style=dotted];
n9 -> n29  [key=2, style=dotted];
n9 -> n21  [key=2, style=dotted];
n9 -> n42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n9 -> n46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n9 -> n49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=1, style=dashed, color=darkseagreen4, label=startDate];
n10 -> n11  [key=0, style=solid];
n10 -> n30  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n17 -> n19  [key=0, style=solid];
n15 -> n14  [key=0, style=solid];
n15 -> n32  [key=2, style=dotted];
n16 -> n19  [key=0, style=solid];
n19 -> n0  [key=0, style=bold, color=blue];
n35 -> n33  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid];
n38 -> n36  [key=0, style=bold, color=blue];
n40 -> n41  [key=0, style=solid];
n41 -> n39  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [key=2, style=dotted];
n44 -> n42  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n48 -> n46  [key=0, style=bold, color=blue];
n50 -> n51  [key=0, style=solid];
n50 -> n52  [key=2, style=dotted];
n50 -> n53  [key=2, style=dotted];
n51 -> n49  [key=0, style=bold, color=blue];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n54 -> n61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n54 -> n57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n54 -> n66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n54 -> n76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n55 -> n56  [key=0, style=solid];
n55 -> n57  [key=1, style=dashed, color=darkseagreen4, label=backtestingBrokerage];
n55 -> n80  [key=1, style=dashed, color=darkseagreen4, label=backtestingBrokerage];
n56 -> n57  [key=0, style=solid];
n56 -> n61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n56 -> n62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n56 -> n72  [key=1, style=dashed, color=darkseagreen4, label=deepITM];
n56 -> n56  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<QuantConnect.Symbol, bool> deepITM"];
n61 -> n62  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n20  [key=2, style=dotted];
n57 -> n23  [key=2, style=dotted];
n57 -> n59  [key=2, style=dotted];
n57 -> n65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n57 -> n68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n57 -> n71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n57 -> n75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n57 -> n79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n66 -> n67  [key=0, style=solid];
n66 -> n66  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
n76 -> n77  [key=0, style=solid];
n76 -> n78  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n82  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n72 -> n74  [key=2, style=dotted];
n58 -> n54  [key=0, style=bold, color=blue];
n65 -> n66  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n63 -> n64  [key=0, style=solid];
n64 -> n60  [key=0, style=bold, color=blue];
n67 -> n65  [key=0, style=bold, color=blue];
n69 -> n70  [key=0, style=solid];
n70 -> n68  [key=0, style=bold, color=blue];
n73 -> n71  [key=0, style=bold, color=blue];
n77 -> n75  [key=0, style=bold, color=blue];
n78 -> n83  [key=0, style=solid];
n78 -> n84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n78 -> n85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n78 -> n86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n78 -> n87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n78 -> n88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n78 -> n89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n78 -> n90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n78 -> n91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n78 -> n92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
n78 -> n93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Option.Option"];
n81 -> n79  [key=0, style=bold, color=blue];
n83 -> n84  [key=0, style=solid];
n83 -> n88  [key=1, style=dashed, color=darkseagreen4, label=optionPrice];
n84 -> n85  [key=0, style=solid];
n84 -> n93  [key=1, style=dashed, color=darkseagreen4, label=underlyingPrice];
n85 -> n86  [key=0, style=solid];
n85 -> n96  [key=2, style=dotted];
n85 -> n91  [key=1, style=dashed, color=darkseagreen4, label=underlyingQuantity];
n85 -> n93  [key=1, style=dashed, color=darkseagreen4, label=underlyingQuantity];
n86 -> n87  [key=0, style=solid];
n86 -> n97  [key=2, style=dotted];
n86 -> n98  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n99  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n94  [key=1, style=dashed, color=darkseagreen4, label=basePnL];
n89 -> n90  [key=0, style=solid];
n89 -> n100  [key=2, style=dotted];
n89 -> n98  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n99  [key=2, style=dotted];
n90 -> n93  [key=1, style=dashed, color=darkseagreen4, label=optionOrderFee2];
n91 -> n92  [key=0, style=solid];
n91 -> n97  [key=2, style=dotted];
n91 -> n98  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n99  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n94 -> n95  [key=0, style=solid];
n95 -> n78  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=red];
m0_0 -> m0_2  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m0_0 -> m0_3  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_2 -> m0_3  [key=0, style=solid, color=red];
m0_3 -> m0_4  [key=0, style=solid, color=red];
m0_3 -> m0_5  [key=0, style=solid, color=red];
m0_4 -> m0_7  [key=0, style=solid, color=red];
m0_4 -> m0_8  [key=2, style=dotted, color=red];
m0_5 -> m0_6  [key=0, style=solid, color=red];
m0_5 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid, color=red];
m0_9 -> m0_11  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>"];
m0_9 -> m0_12  [key=1, style=dashed, color=red, label="QuantConnect.Data.BaseData"];
m0_9 -> m0_13  [key=1, style=dashed, color=red, label="QuantConnect.Data.BaseData"];
m0_9 -> m0_14  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>"];
m0_9 -> m0_9  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Symbol> Filter"];
m0_10 -> m0_11  [key=0, style=solid, color=red];
m0_10 -> m0_12  [key=0, style=solid, color=red];
m0_11 -> m0_15  [key=0, style=solid, color=red];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_12 -> m0_14  [key=1, style=dashed, color=red, label=minExpiry];
m0_13 -> m0_14  [key=0, style=solid, color=red];
m0_14 -> m0_15  [key=0, style=solid, color=red];
m0_14 -> m0_14  [key=1, style=dashed, color=red, label=symbol];
m0_15 -> m0_9  [key=0, style=bold, color=blue];
m0_16 -> m0_1  [key=1, style=dashed, color=red, label="QuantConnect.Securities.ExpiryFutureFilter"];
m0_16 -> m0_2  [key=1, style=dashed, color=red, label="QuantConnect.Securities.ExpiryFutureFilter"];
m0_16 -> m0_5  [key=1, style=dashed, color=red, label="QuantConnect.Securities.ExpiryFutureFilter"];
m0_16 -> m0_6  [key=1, style=dashed, color=red, label="QuantConnect.Securities.ExpiryFutureFilter"];
m0_16 -> m0_12  [key=1, style=dashed, color=red, label="QuantConnect.Securities.ExpiryFutureFilter"];
m0_16 -> m0_13  [key=1, style=dashed, color=red, label="QuantConnect.Securities.ExpiryFutureFilter"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid, color=red];
m5_10 -> m5_11  [key=0, style=solid, color=red];
m5_10 -> m5_7  [key=2, style=dotted, color=red];
m5_10 -> m5_8  [key=2, style=dotted, color=red];
m5_11 -> m5_9  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid, color=red];
m5_5 -> m5_6  [key=0, style=solid, color=red];
m5_5 -> m5_7  [key=2, style=dotted, color=red];
m5_5 -> m5_8  [key=2, style=dotted, color=red];
m5_6 -> m5_4  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_12 -> m5_15  [key=1, style=dashed, color=red, label="QuantConnect.Orders.Order"];
m5_12 -> m5_16  [key=1, style=dashed, color=red, label=decimal];
m5_12 -> m5_17  [key=1, style=dashed, color=red, label="QuantConnect.Orders.Order"];
m5_12 -> m5_18  [key=1, style=dashed, color=red, label=decimal];
m5_12 -> m5_19  [key=1, style=dashed, color=red, label=decimal];
m5_12 -> m5_20  [key=1, style=dashed, color=red, label="QuantConnect.Orders.Order"];
m5_12 -> m5_21  [key=1, style=dashed, color=red, label=decimal];
m5_13 -> m5_14  [key=0, style=solid, color=red];
m5_13 -> m5_16  [key=1, style=dashed, color=red, label=stop];
m5_13 -> m5_18  [key=1, style=dashed, color=red, label=stop];
m5_13 -> m5_19  [key=1, style=dashed, color=red, label=stop];
m5_13 -> m5_21  [key=1, style=dashed, color=red, label=stop];
m5_13 -> m5_22  [key=1, style=dashed, color=red, label=stop];
m5_13 -> m5_23  [key=1, style=dashed, color=red, label=stop];
m5_15 -> m5_16  [key=0, style=solid, color=red];
m5_15 -> m5_19  [key=0, style=solid, color=red];
m5_16 -> m5_17  [key=0, style=solid, color=red];
m5_16 -> m5_25  [key=2, style=dotted, color=red];
m5_16 -> m5_26  [key=2, style=dotted, color=red];
m5_16 -> m5_27  [key=2, style=dotted, color=red];
m5_17 -> m5_18  [key=0, style=solid, color=red];
m5_17 -> m5_22  [key=0, style=solid, color=red];
m5_18 -> m5_22  [key=0, style=solid, color=red];
m5_18 -> m5_25  [key=2, style=dotted, color=red];
m5_18 -> m5_26  [key=2, style=dotted, color=red];
m5_18 -> m5_27  [key=2, style=dotted, color=red];
m5_19 -> m5_20  [key=0, style=solid, color=red];
m5_19 -> m5_25  [key=2, style=dotted, color=red];
m5_19 -> m5_27  [key=2, style=dotted, color=red];
m5_19 -> m5_26  [key=2, style=dotted, color=red];
m5_20 -> m5_21  [key=0, style=solid, color=red];
m5_20 -> m5_22  [key=0, style=solid, color=red];
m5_21 -> m5_22  [key=0, style=solid, color=red];
m5_21 -> m5_25  [key=2, style=dotted, color=red];
m5_21 -> m5_27  [key=2, style=dotted, color=red];
m5_21 -> m5_26  [key=2, style=dotted, color=red];
m5_14 -> m5_15  [key=0, style=solid, color=red];
m5_14 -> m5_23  [key=1, style=dashed, color=red, label=previousStop];
m5_22 -> m5_23  [key=0, style=solid, color=red];
m5_23 -> m5_24  [key=0, style=solid, color=red];
m5_24 -> m5_12  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=red];
m5_0 -> m5_2  [key=1, style=dashed, color=red, label=decimal];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_2 -> m5_3  [key=0, style=solid, color=red];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_28 -> m5_1  [key=1, style=dashed, color=red, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters"];
m5_28 -> m5_2  [key=1, style=dashed, color=red, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters"];
m5_28 -> m5_5  [key=1, style=dashed, color=red, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters"];
m5_28 -> m5_10  [key=1, style=dashed, color=red, label="QuantConnect.Tests.Brokerages.StopLimitOrderTestParameters"];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_4  [key=0, style=bold, color=blue];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_23  [key=0, style=bold, color=blue];
m8_11 -> m8_12  [key=0, style=solid, color=red];
m8_11 -> m8_13  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.Bitcoin"];
m8_11 -> m8_14  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.Bitcoin"];
m8_11 -> m8_15  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.Bitcoin"];
m8_11 -> m8_16  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.Bitcoin"];
m8_12 -> m8_13  [key=0, style=solid, color=red];
m8_12 -> m8_16  [key=0, style=solid, color=red];
m8_13 -> m8_14  [key=0, style=solid, color=red];
m8_13 -> m8_15  [key=0, style=solid, color=red];
m8_14 -> m8_15  [key=0, style=solid, color=red];
m8_14 -> m8_18  [key=2, style=dotted, color=red];
m8_14 -> m8_19  [key=2, style=dotted, color=red];
m8_15 -> m8_16  [key=0, style=solid, color=red];
m8_15 -> m8_20  [key=2, style=dotted, color=red];
m8_16 -> m8_17  [key=0, style=solid, color=red];
m8_16 -> m8_21  [key=2, style=dotted, color=red];
m8_16 -> m8_22  [key=2, style=dotted, color=red];
m8_16 -> m8_20  [key=2, style=dotted, color=red];
m8_17 -> m8_11  [key=0, style=bold, color=blue];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetSource"];
m8_26 -> m8_31  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetSource"];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_30  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_29 -> m8_32  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_32 -> m8_26  [key=0, style=bold, color=blue];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_23  [key=2, style=dotted];
m8_34 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_34 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label=coin];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_48  [key=2, style=dotted];
m8_35 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_35 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_35 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_35 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_35 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_35 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_35 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_49  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_50  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_50  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_50  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_50  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_50  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_50  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_50  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_47 -> m8_33  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid, color=red];
m8_1 -> m8_2  [key=0, style=solid, color=red];
m8_1 -> m8_6  [key=2, style=dotted, color=red];
m8_2 -> m8_3  [key=0, style=solid, color=red];
m8_2 -> m8_7  [key=2, style=dotted, color=red];
m8_2 -> m8_8  [key=2, style=dotted, color=red];
m8_3 -> m8_4  [key=0, style=solid, color=red];
m8_3 -> m8_9  [key=2, style=dotted, color=red];
m8_4 -> m8_5  [key=0, style=solid, color=red];
m8_4 -> m8_10  [key=2, style=dotted, color=red];
m8_5 -> m8_0  [key=0, style=bold, color=blue];
m8_51 -> m8_1  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm"];
m8_51 -> m8_2  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm"];
m8_51 -> m8_3  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm"];
m8_51 -> m8_4  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm"];
m8_51 -> m8_12  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm"];
m8_51 -> m8_14  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm"];
m8_51 -> m8_16  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.CustomDataBitcoinAlgorithm"];
m8_52 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.Bitcoin"];
m10_0 -> m10_1  [key=0, style=solid, color=red];
m10_1 -> m10_2  [key=0, style=solid, color=red];
m10_1 -> m10_9  [key=1, style=dashed, color=red, label=mode];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_4  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_43  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_40  [key=2, style=dotted];
m10_4 -> m10_27  [key=1, style=dashed, color=darkseagreen4, label=environment];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_41  [key=2, style=dotted];
m10_5 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=liveMode];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_30  [key=0, style=solid];
m10_27 -> m10_51  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_41  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_61  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_40  [key=2, style=dotted];
m10_7 -> m10_42  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_44  [key=2, style=dotted];
m10_10 -> m10_43  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_43  [key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_17  [key=0, style=solid];
m10_13 -> m10_45  [key=2, style=dotted];
m10_13 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m10_13 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m10_13 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m10_13 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m10_13 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m10_13 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m10_14 -> m10_15  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_47  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_48  [key=2, style=dotted];
m10_19 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_19 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_19 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_19 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_19 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_19 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_19 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label=assemblyPath];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_56  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_57  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_58  [key=2, style=dotted];
m10_34 -> m10_59  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_60  [key=2, style=dotted];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_46  [key=2, style=dotted];
m10_16 -> m10_39  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_22  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_37  [key=0, style=solid];
m10_30 -> m10_54  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_55  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_62  [key=2, style=dotted];
m10_21 -> m10_39  [key=0, style=solid];
m10_21 -> m10_49  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_27  [key=0, style=solid];
m10_23 -> m10_50  [key=2, style=dotted];
m10_23 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=leanEngineAlgorithmHandlers];
m10_24 -> m10_25  [key=0, style=solid];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_46  [key=2, style=dotted];
m10_26 -> m10_39  [key=0, style=solid];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_52  [key=2, style=dotted];
m10_28 -> m10_40  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_53  [key=2, style=dotted];
m10_36 -> m10_39  [key=0, style=solid];
m10_39 -> m10_0  [key=0, style=bold, color=blue];
m11_36 -> m11_37  [key=0, style=solid];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_37 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_37 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_37 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_37 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_37 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_37 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_37 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_37 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_37 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_2  [key=3, color=darkorchid, style=bold, label="Local variable string symbol"];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_15  [key=2, style=dotted];
m11_39 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_39 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_39 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_39 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_39 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_39 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_39 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_39 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_18  [key=2, style=dotted];
m11_40 -> m11_50  [key=2, style=dotted];
m11_40 -> m11_34  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_18  [key=2, style=dotted];
m11_41 -> m11_50  [key=2, style=dotted];
m11_41 -> m11_35  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_18  [key=2, style=dotted];
m11_42 -> m11_50  [key=2, style=dotted];
m11_42 -> m11_34  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_18  [key=2, style=dotted];
m11_43 -> m11_50  [key=2, style=dotted];
m11_43 -> m11_34  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_18  [key=2, style=dotted];
m11_44 -> m11_50  [key=2, style=dotted];
m11_44 -> m11_35  [key=2, style=dotted];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_18  [key=2, style=dotted];
m11_45 -> m11_50  [key=2, style=dotted];
m11_45 -> m11_34  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_18  [key=2, style=dotted];
m11_46 -> m11_50  [key=2, style=dotted];
m11_46 -> m11_34  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_18  [key=2, style=dotted];
m11_47 -> m11_50  [key=2, style=dotted];
m11_47 -> m11_35  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_18  [key=2, style=dotted];
m11_48 -> m11_50  [key=2, style=dotted];
m11_48 -> m11_34  [key=2, style=dotted];
m11_49 -> m11_36  [key=0, style=bold, color=blue];
m11_19 -> m11_20  [key=0, style=solid];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_20 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_20 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_20 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_20 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_20 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_20 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_20 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_20 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_20 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_2  [key=3, color=darkorchid, style=bold, label="Local variable string symbol"];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_15  [key=2, style=dotted];
m11_22 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_22 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_22 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_22 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_22 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_22 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_22 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_22 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_18  [key=2, style=dotted];
m11_23 -> m11_33  [key=2, style=dotted];
m11_23 -> m11_34  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_18  [key=2, style=dotted];
m11_24 -> m11_33  [key=2, style=dotted];
m11_24 -> m11_35  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_18  [key=2, style=dotted];
m11_25 -> m11_33  [key=2, style=dotted];
m11_25 -> m11_34  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_18  [key=2, style=dotted];
m11_26 -> m11_33  [key=2, style=dotted];
m11_26 -> m11_34  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_18  [key=2, style=dotted];
m11_27 -> m11_33  [key=2, style=dotted];
m11_27 -> m11_35  [key=2, style=dotted];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_18  [key=2, style=dotted];
m11_28 -> m11_33  [key=2, style=dotted];
m11_28 -> m11_34  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_18  [key=2, style=dotted];
m11_29 -> m11_33  [key=2, style=dotted];
m11_29 -> m11_34  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_18  [key=2, style=dotted];
m11_30 -> m11_33  [key=2, style=dotted];
m11_30 -> m11_35  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_18  [key=2, style=dotted];
m11_31 -> m11_33  [key=2, style=dotted];
m11_31 -> m11_34  [key=2, style=dotted];
m11_32 -> m11_19  [key=0, style=bold, color=blue];
m11_15 -> m11_51  [key=0, style=solid];
m11_15 -> m11_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string symbol"];
m11_15 -> m11_21  [key=3, color=darkorchid, style=bold, label="Parameter variable string symbol"];
m11_15 -> m11_38  [key=3, color=darkorchid, style=bold, label="Parameter variable string symbol"];
m11_15 -> m11_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime reference"];
m11_15 -> m11_20  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime reference"];
m11_15 -> m11_37  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime reference"];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_54  [key=2, style=dotted];
m11_51 -> n24  [key=2, style=dotted];
m11_51 -> m11_56  [key=2, style=dotted];
m11_51 -> m11_18  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_53 -> m11_15  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_1 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label=reference];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_2  [key=3, color=darkorchid, style=bold, label="Local variable string symbol"];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_15  [key=2, style=dotted];
m11_3 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_3 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_3 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_3 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_3 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_3 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_3 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_3 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_3 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label=file];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_16  [key=2, style=dotted];
m11_4 -> m11_17  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_18  [key=2, style=dotted];
m11_5 -> m11_16  [key=2, style=dotted];
m11_5 -> m11_17  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_18  [key=2, style=dotted];
m11_6 -> m11_16  [key=2, style=dotted];
m11_6 -> m11_17  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_18  [key=2, style=dotted];
m11_7 -> m11_16  [key=2, style=dotted];
m11_7 -> m11_17  [key=2, style=dotted];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_18  [key=2, style=dotted];
m11_8 -> m11_16  [key=2, style=dotted];
m11_8 -> m11_17  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_18  [key=2, style=dotted];
m11_9 -> m11_16  [key=2, style=dotted];
m11_9 -> m11_17  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_18  [key=2, style=dotted];
m11_10 -> m11_16  [key=2, style=dotted];
m11_10 -> m11_17  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_18  [key=2, style=dotted];
m11_11 -> m11_16  [key=2, style=dotted];
m11_11 -> m11_17  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_18  [key=2, style=dotted];
m11_12 -> m11_16  [key=2, style=dotted];
m11_12 -> m11_17  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_18  [key=2, style=dotted];
m11_13 -> m11_16  [key=2, style=dotted];
m11_13 -> m11_17  [key=2, style=dotted];
m11_14 -> m11_0  [key=0, style=bold, color=blue];
m12_317 -> m12_318  [key=0, style=solid];
m12_317 -> m12_319  [key=0, style=solid];
m12_318 -> m12_30  [key=2, style=dotted];
m12_318 -> m12_319  [key=0, style=solid];
m12_318 -> m12_320  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_318 -> m12_322  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_318 -> m12_323  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_318 -> m12_327  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_318 -> m12_196  [key=2, style=dotted];
m12_318 -> m12_318  [key=1, style=dashed, color=darkseagreen4, label=istartTime];
m12_319 -> m12_37  [key=2, style=dotted];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_341  [key=0, style=solid];
m12_319 -> m12_343  [key=2, style=dotted];
m12_320 -> m12_38  [key=2, style=dotted];
m12_320 -> m12_321  [key=0, style=solid];
m12_320 -> m12_325  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_320 -> m12_326  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_322 -> m12_31  [key=2, style=dotted];
m12_322 -> m12_200  [key=2, style=dotted];
m12_322 -> m12_33  [key=2, style=dotted];
m12_322 -> m12_36  [key=2, style=dotted];
m12_322 -> m12_323  [key=0, style=solid];
m12_322 -> m12_34  [key=2, style=dotted];
m12_322 -> m12_324  [key=0, style=solid];
m12_321 -> m12_274  [key=2, style=dotted];
m12_321 -> m12_322  [key=0, style=solid];
m12_321 -> m12_324  [key=1, style=dashed, color=darkseagreen4, label=d];
m12_321 -> m12_327  [key=1, style=dashed, color=darkseagreen4, label=d];
m12_325 -> m12_209  [key=2, style=dotted];
m12_325 -> m12_326  [key=0, style=solid];
m12_325 -> m12_327  [key=0, style=solid];
m12_324 -> m12_275  [key=2, style=dotted];
m12_324 -> m12_325  [key=0, style=solid];
m12_324 -> m12_342  [key=2, style=dotted];
m12_324 -> m12_326  [key=1, style=dashed, color=darkseagreen4, label=dstartTime];
m12_324 -> m12_327  [key=1, style=dashed, color=darkseagreen4, label=dstartTime];
m12_323 -> m12_324  [key=0, style=solid];
m12_323 -> m12_257  [key=2, style=dotted];
m12_323 -> m12_341  [key=0, style=solid];
m12_327 -> m12_28  [key=2, style=dotted];
m12_327 -> m12_328  [key=0, style=solid];
m12_327 -> m12_341  [key=0, style=solid];
m12_327 -> m12_343  [key=2, style=dotted];
m12_326 -> m12_28  [key=2, style=dotted];
m12_326 -> m12_327  [key=0, style=solid];
m12_326 -> m12_196  [key=2, style=dotted];
m12_326 -> m12_326  [key=1, style=dashed, color=darkseagreen4, label=dstartTime];
m12_328 -> m12_317  [key=0, style=bold, color=blue];
m12_328 -> m12_329  [key=0, style=solid];
m12_486 -> m12_487  [key=0, style=solid];
m12_488 -> m12_30  [key=2, style=dotted];
m12_488 -> m12_489  [key=0, style=solid];
m12_488 -> m12_491  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_492  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_496  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_497  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_498  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_499  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_500  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_501  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_503  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_507  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_488 -> m12_511  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_489 -> m12_37  [key=2, style=dotted];
m12_489 -> m12_490  [key=0, style=solid];
m12_489 -> m12_491  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_489 -> m12_494  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_489 -> m12_500  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_489 -> m12_502  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_491 -> m12_38  [key=2, style=dotted];
m12_491 -> m12_492  [key=0, style=solid];
m12_491 -> m12_495  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_491 -> m12_506  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_491 -> m12_508  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_496 -> m12_31  [key=2, style=dotted];
m12_496 -> m12_200  [key=2, style=dotted];
m12_496 -> m12_33  [key=2, style=dotted];
m12_496 -> m12_36  [key=2, style=dotted];
m12_496 -> m12_497  [key=0, style=solid];
m12_496 -> m12_34  [key=2, style=dotted];
m12_497 -> m12_200  [key=2, style=dotted];
m12_497 -> m12_33  [key=2, style=dotted];
m12_497 -> m12_36  [key=2, style=dotted];
m12_497 -> m12_498  [key=0, style=solid];
m12_497 -> m12_518  [key=2, style=dotted];
m12_497 -> m12_519  [key=2, style=dotted];
m12_495 -> m12_274  [key=2, style=dotted];
m12_495 -> m12_496  [key=0, style=solid];
m12_506 -> m12_209  [key=2, style=dotted];
m12_506 -> m12_505  [key=0, style=solid];
m12_487 -> m12_488  [key=0, style=solid];
m12_487 -> m12_513  [key=2, style=dotted];
m12_487 -> m12_492  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_487 -> m12_493  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_492 -> m12_493  [key=0, style=solid];
m12_498 -> m12_499  [key=0, style=solid];
m12_498 -> m12_257  [key=2, style=dotted];
m12_499 -> m12_500  [key=0, style=solid];
m12_499 -> m12_520  [key=2, style=dotted];
m12_499 -> m12_44  [key=2, style=dotted];
m12_500 -> m12_501  [key=0, style=solid];
m12_500 -> m12_205  [key=2, style=dotted];
m12_500 -> m12_521  [key=2, style=dotted];
m12_501 -> m12_502  [key=0, style=solid];
m12_501 -> m12_503  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_501 -> m12_504  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_503 -> m12_504  [key=0, style=solid];
m12_507 -> m12_508  [key=0, style=solid];
m12_507 -> m12_509  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_507 -> m12_510  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_511 -> m12_28  [key=2, style=dotted];
m12_511 -> m12_512  [key=0, style=solid];
m12_508 -> m12_28  [key=2, style=dotted];
m12_508 -> m12_509  [key=0, style=solid];
m12_509 -> m12_28  [key=2, style=dotted];
m12_509 -> m12_510  [key=0, style=solid];
m12_510 -> m12_28  [key=2, style=dotted];
m12_510 -> m12_511  [key=0, style=solid];
m12_490 -> m12_491  [key=0, style=solid];
m12_490 -> m12_514  [key=2, style=dotted];
m12_490 -> m12_493  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_490 -> m12_494  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_494 -> m12_495  [key=0, style=solid];
m12_494 -> m12_198  [key=2, style=dotted];
m12_502 -> m12_503  [key=0, style=solid];
m12_502 -> m12_522  [key=2, style=dotted];
m12_502 -> m12_523  [key=2, style=dotted];
m12_502 -> m12_525  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_502 -> m12_504  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_505 -> m12_506  [key=0, style=solid];
m12_505 -> m12_507  [key=0, style=solid];
m12_493 -> m12_494  [key=0, style=solid];
m12_493 -> m12_515  [key=2, style=dotted];
m12_493 -> m12_516  [key=2, style=dotted];
m12_493 -> m12_517  [key=2, style=dotted];
m12_504 -> m12_505  [key=0, style=solid];
m12_504 -> m12_524  [key=2, style=dotted];
m12_512 -> m12_486  [key=0, style=bold, color=blue];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_73  [key=0, style=bold, color=crimson];
m12_70 -> m12_108  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_74  [key=0, style=solid];
m12_71 -> m12_108  [key=2, style=dotted];
m12_73 -> m12_72  [key=0, style=solid];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_79  [key=1, style=dashed, color=darkseagreen4, label=mchCash];
m12_73 -> m12_98  [key=1, style=dashed, color=darkseagreen4, label=mchCash];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_71  [key=0, style=solid];
m12_72 -> m12_75  [key=2, style=dotted];
m12_72 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label=jwbCash];
m12_74 -> m12_70  [key=0, style=bold, color=blue];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_77  [key=1, style=dashed, color=darkseagreen4, label=usdCash];
m12_74 -> m12_97  [key=1, style=dashed, color=darkseagreen4, label=usdCash];
m12_108 -> m12_137  [key=0, style=solid];
m12_108 -> m12_139  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Concurrent.BlockingCollection<QuantConnect.Data.BaseData>"];
m12_108 -> m12_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueUniverseProvider"];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_198  [key=2, style=dotted];
m12_139 -> m12_140  [key=0, style=solid];
m12_139 -> m12_199  [key=2, style=dotted];
m12_140 -> m12_141  [key=0, style=solid];
m12_140 -> m12_200  [key=2, style=dotted];
m12_138 -> m12_139  [key=0, style=solid];
m12_138 -> m12_153  [key=2, style=dotted];
m12_138 -> m12_38  [key=2, style=dotted];
m12_138 -> m12_154  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_155  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_156  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_157  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_159  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_164  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_165  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_168  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_173  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_174  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_175  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_177  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_183  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_189  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_190  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_191  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_138 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_31  [key=2, style=dotted];
m12_141 -> m12_33  [key=2, style=dotted];
m12_141 -> m12_34  [key=2, style=dotted];
m12_141 -> m12_111  [key=2, style=dotted];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_146  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_142 -> m12_150  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_142 -> m12_186  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_142 -> m12_163  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_142 -> m12_172  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_142 -> m12_180  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_142 -> m12_182  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_142 -> m12_194  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_142 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_35  [key=2, style=dotted];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_147  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_144 -> m12_158  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_144 -> m12_146  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_144 -> m12_161  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_145 -> m12_146  [key=0, style=solid];
m12_145 -> m12_147  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_145 -> m12_187  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_145 -> m12_158  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_145 -> m12_148  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_145 -> m12_162  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_145 -> m12_171  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_145 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_146 -> m12_147  [key=0, style=solid];
m12_146 -> m12_201  [key=2, style=dotted];
m12_146 -> m12_44  [key=2, style=dotted];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_154  [key=2, style=dotted];
m12_147 -> m12_202  [key=2, style=dotted];
m12_147 -> m12_149  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_147 -> m12_150  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_154  [key=1, style=dashed, color=darkseagreen4, label=fill];
m12_148 -> m12_203  [key=2, style=dotted];
m12_148 -> m12_153  [key=1, style=dashed, color=darkseagreen4, label=fill];
m12_149 -> m12_150  [key=0, style=solid];
m12_149 -> m12_204  [key=2, style=dotted];
m12_150 -> m12_151  [key=0, style=solid];
m12_150 -> m12_205  [key=2, style=dotted];
m12_150 -> m12_152  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_151 -> m12_152  [key=0, style=solid];
m12_151 -> m12_206  [key=2, style=dotted];
m12_152 -> m12_108  [key=0, style=bold, color=blue];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_207  [key=2, style=dotted];
m12_152 -> m12_208  [key=2, style=dotted];
m12_0 -> m12_1  [key=0, style=solid];
m12_7 -> m12_30  [key=2, style=dotted];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_7 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_7 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_7 -> m12_0  [key=0, style=bold, color=blue];
m12_11 -> m12_37  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_12 -> m12_38  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_12 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_12 -> m12_76  [key=0, style=solid];
m12_8 -> m12_31  [key=2, style=dotted];
m12_8 -> m12_33  [key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_32  [key=2, style=dotted];
m12_8 -> m12_34  [key=2, style=dotted];
m12_8 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_8 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_10 -> m12_36  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m12_6 -> m12_29  [key=2, style=dotted];
m12_6 -> m12_12  [key=2, style=dotted];
m12_5 -> m12_28  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_7  [key=0, style=solid];
m12_21 -> m12_28  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_39  [key=2, style=dotted];
m12_13 -> m12_15  [key=0, style=bold, color=crimson];
m12_13 -> m12_19  [key=0, style=bold, color=crimson];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_45  [key=2, style=dotted];
m12_20 -> m12_13  [key=0, style=bold, color=blue];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_35  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_43  [key=2, style=dotted];
m12_19 -> m12_44  [key=2, style=dotted];
m12_19 -> m12_14  [key=0, style=solid];
m12_3 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_24  [key=2, style=dotted];
m12_3 -> m12_25  [key=2, style=dotted];
m12_3 -> m12_26  [key=2, style=dotted];
m12_3 -> n23  [key=2, style=dotted];
m12_3 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_3 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_3 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_3 -> m12_10  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label=equity];
m12_4 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label=equity];
m12_4 -> m12_24  [key=2, style=dotted];
m12_4 -> m12_25  [key=2, style=dotted];
m12_4 -> m12_26  [key=2, style=dotted];
m12_4 -> n23  [key=2, style=dotted];
m12_4 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_4 -> m12_11  [key=2, style=dotted];
m12_14 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_14 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=tick];
m12_14 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label=tick];
m12_14 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_14 -> m12_20  [key=0, style=solid];
m12_14 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label=tick];
m12_22 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_22 -> m12_15  [key=0, style=solid];
m12_16 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label=fill];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_14  [key=0, style=solid];
m12_16 -> m12_22  [key=2, style=dotted];
m12_17 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label=underlyingTick];
m12_17 -> m12_40  [key=2, style=dotted];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_23  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_41  [key=2, style=dotted];
m12_18 -> m12_42  [key=2, style=dotted];
m12_1 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label=fillsFile];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_8  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=equityFile];
m12_2 -> m12_9  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_23  [key=0, style=solid];
m12_23 -> m12_0  [key=0, style=bold, color=blue];
m12_64 -> m12_28  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_259  [key=0, style=solid];
m12_260 -> m12_30  [key=2, style=dotted];
m12_260 -> m12_261  [key=0, style=solid];
m12_260 -> m12_262  [key=1, style=dashed, color=darkseagreen4, label=key];
m12_260 -> m12_264  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_260 -> m12_268  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_260 -> m12_272  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_260 -> m12_265  [key=0, style=solid];
m12_261 -> m12_37  [key=2, style=dotted];
m12_261 -> m12_262  [key=0, style=solid];
m12_262 -> m12_38  [key=2, style=dotted];
m12_262 -> m12_263  [key=0, style=solid];
m12_262 -> m12_266  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_262 -> m12_267  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_262 -> m12_270  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_262 -> m12_271  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_262 -> m12_260  [key=0, style=solid];
m12_262 -> m12_274  [key=2, style=dotted];
m12_264 -> m12_31  [key=2, style=dotted];
m12_264 -> m12_200  [key=2, style=dotted];
m12_264 -> m12_33  [key=2, style=dotted];
m12_264 -> m12_36  [key=2, style=dotted];
m12_264 -> m12_265  [key=0, style=solid];
m12_264 -> m12_34  [key=2, style=dotted];
m12_264 -> m12_263  [key=0, style=solid];
m12_264 -> m12_275  [key=2, style=dotted];
m12_263 -> m12_274  [key=2, style=dotted];
m12_263 -> m12_264  [key=0, style=solid];
m12_263 -> m12_260  [key=0, style=solid];
m12_266 -> m12_209  [key=2, style=dotted];
m12_266 -> m12_267  [key=0, style=solid];
m12_270 -> m12_209  [key=2, style=dotted];
m12_270 -> m12_271  [key=0, style=solid];
m12_270 -> m12_276  [key=0, style=solid];
m12_270 -> m12_214  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.ToolBox.IQFeed.LookupType lookupType"];
m12_270 -> m12_218  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.ToolBox.IQFeed.LookupType lookupType"];
m12_270 -> m12_187  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.ToolBox.IQFeed.LookupType lookupType"];
m12_270 -> m12_246  [key=3, color=darkorchid, style=bold, label="Parameter variable int id"];
m12_265 -> m12_275  [key=2, style=dotted];
m12_265 -> m12_266  [key=0, style=solid];
m12_265 -> m12_75  [key=0, style=bold, color=blue];
m12_269 -> m12_275  [key=2, style=dotted];
m12_269 -> m12_270  [key=0, style=solid];
m12_268 -> m12_28  [key=2, style=dotted];
m12_268 -> m12_269  [key=0, style=solid];
m12_272 -> m12_28  [key=2, style=dotted];
m12_272 -> m12_273  [key=0, style=solid];
m12_267 -> m12_28  [key=2, style=dotted];
m12_267 -> m12_268  [key=0, style=solid];
m12_271 -> m12_28  [key=2, style=dotted];
m12_271 -> m12_272  [key=0, style=solid];
m12_273 -> m12_259  [key=0, style=bold, color=blue];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_117  [key=0, style=solid];
m12_446 -> m12_447  [key=0, style=solid];
m12_463 -> m12_202  [key=2, style=dotted];
m12_463 -> m12_464  [key=0, style=solid];
m12_463 -> m12_465  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_463 -> m12_466  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_473 -> m12_202  [key=2, style=dotted];
m12_473 -> m12_474  [key=0, style=solid];
m12_473 -> m12_210  [key=2, style=dotted];
m12_479 -> m12_202  [key=2, style=dotted];
m12_479 -> m12_480  [key=0, style=solid];
m12_479 -> m12_210  [key=2, style=dotted];
m12_482 -> m12_202  [key=2, style=dotted];
m12_482 -> m12_483  [key=0, style=solid];
m12_482 -> m12_210  [key=2, style=dotted];
m12_470 -> m12_202  [key=2, style=dotted];
m12_470 -> m12_471  [key=0, style=solid];
m12_470 -> m12_210  [key=2, style=dotted];
m12_450 -> m12_30  [key=2, style=dotted];
m12_450 -> m12_451  [key=0, style=solid];
m12_450 -> m12_454  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_450 -> m12_457  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_450 -> m12_458  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_451 -> m12_37  [key=2, style=dotted];
m12_451 -> m12_452  [key=0, style=solid];
m12_451 -> m12_453  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_451 -> m12_454  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_451 -> m12_471  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_451 -> m12_474  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_451 -> m12_480  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_451 -> m12_483  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_454 -> m12_38  [key=2, style=dotted];
m12_454 -> m12_455  [key=0, style=solid];
m12_454 -> m12_469  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_454 -> m12_471  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_454 -> m12_474  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_454 -> m12_480  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_454 -> m12_483  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_456 -> m12_200  [key=2, style=dotted];
m12_456 -> m12_457  [key=0, style=solid];
m12_457 -> m12_31  [key=2, style=dotted];
m12_457 -> m12_33  [key=2, style=dotted];
m12_457 -> m12_458  [key=0, style=solid];
m12_457 -> m12_34  [key=2, style=dotted];
m12_457 -> m12_111  [key=2, style=dotted];
m12_469 -> m12_209  [key=2, style=dotted];
m12_469 -> m12_470  [key=0, style=solid];
m12_475 -> m12_213  [key=2, style=dotted];
m12_475 -> m12_476  [key=0, style=solid];
m12_481 -> m12_213  [key=2, style=dotted];
m12_481 -> m12_482  [key=0, style=solid];
m12_471 -> m12_211  [key=2, style=dotted];
m12_471 -> m12_472  [key=0, style=solid];
m12_474 -> m12_211  [key=2, style=dotted];
m12_474 -> m12_475  [key=0, style=solid];
m12_480 -> m12_211  [key=2, style=dotted];
m12_480 -> m12_481  [key=0, style=solid];
m12_483 -> m12_211  [key=2, style=dotted];
m12_483 -> m12_484  [key=0, style=solid];
m12_449 -> m12_463  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_449 -> m12_473  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_449 -> m12_479  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_449 -> m12_482  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_449 -> m12_450  [key=0, style=solid];
m12_449 -> m12_464  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_462 -> m12_463  [key=0, style=solid];
m12_462 -> m12_201  [key=2, style=dotted];
m12_462 -> m12_44  [key=2, style=dotted];
m12_460 -> m12_463  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_460 -> m12_473  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_460 -> m12_470  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_460 -> m12_462  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_460 -> m12_461  [key=0, style=solid];
m12_460 -> m12_476  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_461 -> m12_463  [key=1, style=dashed, color=darkseagreen4, label=sellPrice];
m12_461 -> m12_473  [key=1, style=dashed, color=darkseagreen4, label=sellPrice];
m12_461 -> m12_470  [key=1, style=dashed, color=darkseagreen4, label=sellPrice];
m12_461 -> m12_462  [key=0, style=solid];
m12_461 -> m12_464  [key=1, style=dashed, color=darkseagreen4, label=sellPrice];
m12_461 -> m12_477  [key=1, style=dashed, color=darkseagreen4, label=sellPrice];
m12_464 -> m12_469  [key=1, style=dashed, color=darkseagreen4, label=fill];
m12_464 -> m12_465  [key=0, style=solid];
m12_464 -> m12_203  [key=2, style=dotted];
m12_465 -> m12_466  [key=0, style=solid];
m12_465 -> m12_204  [key=2, style=dotted];
m12_466 -> m12_467  [key=0, style=solid];
m12_466 -> m12_205  [key=2, style=dotted];
m12_466 -> m12_468  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_472 -> m12_473  [key=0, style=solid];
m12_472 -> m12_212  [key=2, style=dotted];
m12_478 -> m12_479  [key=0, style=solid];
m12_478 -> m12_201  [key=2, style=dotted];
m12_478 -> m12_44  [key=2, style=dotted];
m12_476 -> m12_479  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_476 -> m12_482  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_476 -> m12_478  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_476 -> m12_476  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_476 -> m12_477  [key=0, style=solid];
m12_476 -> m12_40  [key=2, style=dotted];
m12_477 -> m12_479  [key=1, style=dashed, color=darkseagreen4, label=highPrice];
m12_477 -> m12_482  [key=1, style=dashed, color=darkseagreen4, label=highPrice];
m12_477 -> m12_478  [key=0, style=solid];
m12_458 -> m12_462  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_458 -> m12_466  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_458 -> m12_478  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_458 -> m12_459  [key=0, style=solid];
m12_452 -> m12_465  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_452 -> m12_453  [key=0, style=solid];
m12_452 -> m12_197  [key=2, style=dotted];
m12_452 -> m12_468  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_453 -> m12_454  [key=0, style=solid];
m12_453 -> m12_198  [key=2, style=dotted];
m12_455 -> m12_456  [key=0, style=solid];
m12_455 -> m12_199  [key=2, style=dotted];
m12_468 -> m12_469  [key=0, style=solid];
m12_468 -> m12_207  [key=2, style=dotted];
m12_468 -> m12_208  [key=2, style=dotted];
m12_484 -> m12_212  [key=2, style=dotted];
m12_484 -> m12_485  [key=0, style=solid];
m12_447 -> m12_449  [key=1, style=dashed, color=darkseagreen4, label=leverage];
m12_447 -> m12_448  [key=0, style=solid];
m12_447 -> m12_459  [key=1, style=dashed, color=darkseagreen4, label=leverage];
m12_448 -> m12_449  [key=0, style=solid];
m12_448 -> m12_455  [key=1, style=dashed, color=darkseagreen4, label=amount];
m12_459 -> m12_460  [key=0, style=solid];
m12_459 -> m12_35  [key=2, style=dotted];
m12_467 -> m12_468  [key=0, style=solid];
m12_467 -> m12_206  [key=2, style=dotted];
m12_485 -> m12_446  [key=0, style=bold, color=blue];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_123  [key=2, style=dotted];
m12_36 -> m12_25  [key=0, style=solid];
m12_36 -> m12_41  [key=2, style=dotted];
m12_36 -> m12_42  [key=2, style=dotted];
m12_213 -> m12_214  [key=0, style=solid];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_105  [key=1, style=dashed, color=darkseagreen4, label=jwbQuantity];
m12_63 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label=jwbQuantity];
m12_63 -> m12_24  [key=2, style=dotted];
m12_63 -> m12_25  [key=2, style=dotted];
m12_63 -> m12_26  [key=2, style=dotted];
m12_63 -> n23  [key=2, style=dotted];
m12_63 -> m12_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_29  [key=2, style=dotted];
m12_65 -> m12_75  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m12_65 -> m12_77  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m12_65 -> m12_79  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m12_65 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m12_680 -> m12_681  [key=0, style=solid];
m12_682 -> m12_30  [key=2, style=dotted];
m12_682 -> m12_683  [key=0, style=solid];
m12_682 -> m12_685  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_682 -> m12_686  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_682 -> m12_690  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_682 -> m12_691  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_682 -> m12_692  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_682 -> m12_693  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_682 -> m12_694  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_682 -> m12_696  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_682 -> m12_701  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_682 -> m12_705  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_683 -> m12_37  [key=2, style=dotted];
m12_683 -> m12_684  [key=0, style=solid];
m12_683 -> m12_685  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_683 -> m12_688  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_683 -> m12_693  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_683 -> m12_695  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_685 -> m12_38  [key=2, style=dotted];
m12_685 -> m12_686  [key=0, style=solid];
m12_685 -> m12_689  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_685 -> m12_700  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_685 -> m12_702  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_690 -> m12_31  [key=2, style=dotted];
m12_690 -> m12_200  [key=2, style=dotted];
m12_690 -> m12_33  [key=2, style=dotted];
m12_690 -> m12_36  [key=2, style=dotted];
m12_690 -> m12_691  [key=0, style=solid];
m12_690 -> m12_34  [key=2, style=dotted];
m12_691 -> m12_200  [key=2, style=dotted];
m12_691 -> m12_33  [key=2, style=dotted];
m12_691 -> m12_36  [key=2, style=dotted];
m12_691 -> m12_692  [key=0, style=solid];
m12_691 -> m12_518  [key=2, style=dotted];
m12_691 -> m12_519  [key=2, style=dotted];
m12_689 -> m12_274  [key=2, style=dotted];
m12_689 -> m12_690  [key=0, style=solid];
m12_681 -> m12_682  [key=0, style=solid];
m12_681 -> m12_513  [key=2, style=dotted];
m12_681 -> m12_686  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_681 -> m12_687  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_686 -> m12_687  [key=0, style=solid];
m12_692 -> m12_693  [key=0, style=solid];
m12_692 -> m12_257  [key=2, style=dotted];
m12_693 -> m12_694  [key=0, style=solid];
m12_693 -> m12_205  [key=2, style=dotted];
m12_693 -> m12_521  [key=2, style=dotted];
m12_694 -> m12_695  [key=0, style=solid];
m12_694 -> m12_696  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_694 -> m12_697  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_694 -> m12_698  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_694 -> m12_700  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_696 -> m12_697  [key=0, style=solid];
m12_701 -> m12_702  [key=0, style=solid];
m12_701 -> m12_703  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_701 -> m12_704  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_705 -> m12_28  [key=2, style=dotted];
m12_705 -> m12_706  [key=0, style=solid];
m12_702 -> m12_28  [key=2, style=dotted];
m12_702 -> m12_703  [key=0, style=solid];
m12_703 -> m12_28  [key=2, style=dotted];
m12_703 -> m12_704  [key=0, style=solid];
m12_704 -> m12_28  [key=2, style=dotted];
m12_704 -> m12_705  [key=0, style=solid];
m12_684 -> m12_685  [key=0, style=solid];
m12_684 -> m12_514  [key=2, style=dotted];
m12_684 -> m12_687  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_684 -> m12_688  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_688 -> m12_689  [key=0, style=solid];
m12_688 -> m12_198  [key=2, style=dotted];
m12_695 -> m12_696  [key=0, style=solid];
m12_695 -> m12_522  [key=2, style=dotted];
m12_695 -> m12_523  [key=2, style=dotted];
m12_695 -> m12_707  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_695 -> m12_697  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_700 -> m12_699  [key=0, style=solid];
m12_700 -> m12_676  [key=2, style=dotted];
m12_687 -> m12_688  [key=0, style=solid];
m12_687 -> m12_515  [key=2, style=dotted];
m12_687 -> m12_516  [key=2, style=dotted];
m12_687 -> m12_517  [key=2, style=dotted];
m12_697 -> m12_698  [key=0, style=solid];
m12_697 -> m12_524  [key=2, style=dotted];
m12_697 -> m12_699  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_698 -> m12_700  [key=1, style=dashed, color=darkseagreen4, label=portfolioModel];
m12_698 -> m12_699  [key=0, style=solid];
m12_699 -> m12_701  [key=0, style=solid];
m12_699 -> m12_700  [key=0, style=solid];
m12_706 -> m12_680  [key=0, style=bold, color=blue];
m12_114 -> m12_115  [key=0, style=solid];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_122  [key=2, style=dotted];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_119  [key=0, style=solid];
m12_119 -> m12_120  [key=0, style=solid];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_42  [key=2, style=dotted];
m12_120 -> m12_49  [key=2, style=dotted];
m12_120 -> m12_50  [key=2, style=dotted];
m12_121 -> m12_114  [key=0, style=bold, color=blue];
m12_121 -> m12_119  [key=0, style=bold, color=blue];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_47  [key=2, style=dotted];
m12_202 -> m12_203  [key=0, style=solid];
m12_203 -> m12_204  [key=0, style=solid];
m12_203 -> m12_47  [key=2, style=dotted];
m12_204 -> m12_202  [key=0, style=bold, color=blue];
m12_204 -> m12_1060  [key=0, style=solid];
m12_196 -> m12_131  [key=0, style=bold, color=blue];
m12_294 -> m12_30  [key=2, style=dotted];
m12_294 -> m12_295  [key=0, style=solid];
m12_294 -> m12_296  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_294 -> m12_298  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_294 -> m12_301  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_294 -> m12_304  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_111 -> m12_228  [key=0, style=solid];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> m12_236  [key=1, style=dashed, color=darkseagreen4, label=usdCash];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_153  [key=2, style=dotted];
m12_229 -> m12_244  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_229 -> m12_234  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_229 -> m12_239  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_153  [key=2, style=dotted];
m12_230 -> m12_200  [key=2, style=dotted];
m12_231 -> m12_111  [key=0, style=bold, color=blue];
m12_231 -> m12_31  [key=2, style=dotted];
m12_231 -> m12_33  [key=2, style=dotted];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_34  [key=2, style=dotted];
m12_154 -> m12_209  [key=2, style=dotted];
m12_154 -> m12_155  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_46  [key=2, style=dotted];
m12_304 -> m12_28  [key=2, style=dotted];
m12_304 -> m12_305  [key=0, style=solid];
m12_216 -> m12_222  [key=0, style=solid];
m12_37 -> m12_38  [key=0, style=solid];
m12_122 -> m12_123  [key=0, style=solid];
m12_103 -> m12_136  [key=0, style=solid];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_117  [key=2, style=dotted];
m12_103 -> m12_118  [key=2, style=dotted];
m12_136 -> m12_103  [key=0, style=bold, color=blue];
m12_136 -> m12_149  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_197  [key=2, style=dotted];
m12_136 -> m12_152  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_241  [key=1, style=dashed, color=darkseagreen4, label=gbpCash];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_45  [key=2, style=dotted];
m12_205 -> m12_206  [key=0, style=solid];
m12_206 -> m12_207  [key=0, style=solid];
m12_206 -> m12_47  [key=2, style=dotted];
m12_207 -> m12_205  [key=0, style=bold, color=blue];
m12_297 -> m12_274  [key=2, style=dotted];
m12_297 -> m12_298  [key=0, style=solid];
m12_211 -> m12_212  [key=0, style=solid];
m12_211 -> m12_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m12_211 -> m12_214  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.ToolBox.IQFeed.PeriodType GetPeriodType"];
m12_211 -> m12_187  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.ToolBox.IQFeed.PeriodType GetPeriodType"];
m12_211 -> m12_218  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.ToolBox.IQFeed.PeriodType GetPeriodType"];
m12_176 -> m12_177  [key=0, style=solid];
m12_24 -> m12_25  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_37  [key=0, style=solid];
m12_25 -> m12_39  [key=0, style=solid];
m12_25 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_25 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_25 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_25 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_25 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_25 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_25 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_25  [key=0, style=solid];
m12_26 -> m12_40  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_41  [key=2, style=dotted];
m12_28 -> m12_42  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_25  [key=0, style=solid];
m12_29 -> m12_43  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label=subscribeSymbol];
m12_30 -> m12_25  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Symbol subscribeSymbol"];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_34  [key=0, style=solid];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label=subscribeSymbol];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_44  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_45  [key=2, style=dotted];
m12_39 -> m12_24  [key=0, style=bold, color=blue];
m12_75 -> m12_237  [key=0, style=solid];
m12_75 -> m12_238  [key=0, style=bold, color=crimson];
m12_75 -> m12_264  [key=0, style=bold, color=crimson];
m12_75 -> m12_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_75 -> m12_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_75 -> m12_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_75 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_75 -> m12_245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_75 -> m12_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_75 -> m12_255  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_75 -> m12_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_75 -> m12_71  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.HistoryRequest request"];
m12_75 -> m12_84  [key=1, style=dashed, color=darkseagreen4, label=mchJwbSecurity];
m12_75 -> m12_34  [key=2, style=dotted];
m12_75 -> m12_109  [key=2, style=dotted];
m12_75 -> m12_32  [key=2, style=dotted];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label=mchJwbSecurity];
m12_75 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label=mchJwbSecurity];
m12_237 -> m12_238  [key=0, style=solid];
m12_237 -> m12_239  [key=0, style=solid];
m12_237 -> m12_232  [key=2, style=dotted];
m12_237 -> m12_35  [key=2, style=dotted];
m12_238 -> m12_239  [key=0, style=solid];
m12_238 -> m12_257  [key=2, style=dotted];
m12_240 -> m12_241  [key=0, style=solid];
m12_240 -> m12_45  [key=2, style=dotted];
m12_240 -> m12_245  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m12_240 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m12_240 -> m12_253  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m12_240 -> m12_256  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m12_240 -> m12_200  [key=2, style=dotted];
m12_241 -> m12_242  [key=0, style=solid];
m12_241 -> m12_266  [key=2, style=dotted];
m12_241 -> m12_245  [key=1, style=dashed, color=darkseagreen4, label=start];
m12_241 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=start];
m12_241 -> m12_253  [key=1, style=dashed, color=darkseagreen4, label=start];
m12_241 -> m12_256  [key=1, style=dashed, color=darkseagreen4, label=start];
m12_241 -> m12_109  [key=2, style=dotted];
m12_241 -> m12_34  [key=2, style=dotted];
m12_241 -> m12_111  [key=2, style=dotted];
m12_242 -> m12_243  [key=0, style=solid];
m12_242 -> m12_266  [key=2, style=dotted];
m12_242 -> m12_245  [key=1, style=dashed, color=darkseagreen4, label=end];
m12_242 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=end];
m12_242 -> m12_253  [key=1, style=dashed, color=darkseagreen4, label=end];
m12_242 -> m12_256  [key=1, style=dashed, color=darkseagreen4, label=end];
m12_242 -> m12_35  [key=2, style=dotted];
m12_243 -> m12_244  [key=0, style=solid];
m12_243 -> m12_245  [key=0, style=solid];
m12_243 -> m12_267  [key=2, style=dotted];
m12_243 -> m12_257  [key=2, style=dotted];
m12_245 -> m12_246  [key=0, style=solid];
m12_245 -> m12_267  [key=2, style=dotted];
m12_245 -> m12_268  [key=2, style=dotted];
m12_245 -> m12_42  [key=2, style=dotted];
m12_245 -> m12_202  [key=2, style=dotted];
m12_245 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=acceptedOrder];
m12_245 -> m12_247  [key=1, style=dashed, color=darkseagreen4, label=acceptedOrder];
m12_248 -> m12_249  [key=0, style=solid];
m12_248 -> m12_252  [key=0, style=solid];
m12_248 -> m12_255  [key=0, style=solid];
m12_248 -> m12_206  [key=2, style=dotted];
m12_255 -> m12_256  [key=0, style=solid];
m12_255 -> m12_272  [key=2, style=dotted];
m12_255 -> m12_211  [key=2, style=dotted];
m12_255 -> m12_217  [key=0, style=bold, color=blue];
m12_258 -> m12_259  [key=0, style=solid];
m12_239 -> m12_240  [key=0, style=solid];
m12_239 -> m12_258  [key=2, style=dotted];
m12_239 -> m12_44  [key=2, style=dotted];
m12_250 -> m12_251  [key=0, style=solid];
m12_250 -> m12_269  [key=2, style=dotted];
m12_250 -> m12_211  [key=2, style=dotted];
m12_253 -> m12_254  [key=0, style=solid];
m12_253 -> m12_271  [key=2, style=dotted];
m12_253 -> m12_211  [key=2, style=dotted];
m12_256 -> m12_257  [key=0, style=solid];
m12_256 -> m12_273  [key=2, style=dotted];
m12_244 -> m12_245  [key=0, style=solid];
m12_244 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=end];
m12_244 -> m12_253  [key=1, style=dashed, color=darkseagreen4, label=end];
m12_244 -> m12_256  [key=1, style=dashed, color=darkseagreen4, label=end];
m12_244 -> m12_258  [key=2, style=dotted];
m12_244 -> m12_44  [key=2, style=dotted];
m12_246 -> m12_247  [key=0, style=solid];
m12_246 -> m12_204  [key=2, style=dotted];
m12_247 -> m12_248  [key=0, style=solid];
m12_247 -> m12_270  [key=3, color=darkorchid, style=bold, label="Local variable string reqid"];
m12_247 -> m12_249  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_247 -> m12_205  [key=2, style=dotted];
m12_249 -> m12_250  [key=0, style=solid];
m12_249 -> m12_207  [key=2, style=dotted];
m12_249 -> m12_208  [key=2, style=dotted];
m12_252 -> m12_253  [key=0, style=solid, color=green];
m12_252 -> m12_202  [key=2, style=dotted, color=green];
m12_251 -> m12_258  [key=0, style=solid];
m12_251 -> m12_270  [key=2, style=dotted];
m12_251 -> m12_252  [key=0, style=solid, color=green];
m12_251 -> m12_213  [key=2, style=dotted];
m12_254 -> m12_258  [key=0, style=solid];
m12_254 -> m12_270  [key=2, style=dotted];
m12_254 -> m12_255  [key=0, style=solid];
m12_254 -> m12_212  [key=2, style=dotted];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_270  [key=2, style=dotted];
m12_293 -> m12_294  [key=0, style=solid];
m12_921 -> m12_922  [key=0, style=solid];
m12_923 -> m12_30  [key=2, style=dotted];
m12_923 -> m12_924  [key=0, style=solid];
m12_923 -> m12_926  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_927  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_931  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_932  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_933  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_934  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_935  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_936  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_938  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_944  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_946  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_923 -> m12_947  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_924 -> m12_37  [key=2, style=dotted];
m12_924 -> m12_925  [key=0, style=solid];
m12_924 -> m12_926  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_924 -> m12_929  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_924 -> m12_935  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_924 -> m12_937  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_926 -> m12_38  [key=2, style=dotted];
m12_926 -> m12_927  [key=0, style=solid];
m12_926 -> m12_930  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_926 -> m12_943  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_926 -> m12_945  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_931 -> m12_31  [key=2, style=dotted];
m12_931 -> m12_200  [key=2, style=dotted];
m12_931 -> m12_33  [key=2, style=dotted];
m12_931 -> m12_36  [key=2, style=dotted];
m12_931 -> m12_932  [key=0, style=solid];
m12_931 -> m12_34  [key=2, style=dotted];
m12_932 -> m12_200  [key=2, style=dotted];
m12_932 -> m12_33  [key=2, style=dotted];
m12_932 -> m12_36  [key=2, style=dotted];
m12_932 -> m12_933  [key=0, style=solid];
m12_932 -> m12_518  [key=2, style=dotted];
m12_932 -> m12_519  [key=2, style=dotted];
m12_930 -> m12_274  [key=2, style=dotted];
m12_930 -> m12_931  [key=0, style=solid];
m12_922 -> m12_923  [key=0, style=solid];
m12_922 -> m12_513  [key=2, style=dotted];
m12_922 -> m12_927  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_922 -> m12_928  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_927 -> m12_928  [key=0, style=solid];
m12_933 -> m12_934  [key=0, style=solid];
m12_933 -> m12_258  [key=2, style=dotted];
m12_933 -> m12_44  [key=2, style=dotted];
m12_934 -> m12_935  [key=0, style=solid];
m12_934 -> m12_257  [key=2, style=dotted];
m12_935 -> m12_936  [key=0, style=solid];
m12_935 -> m12_205  [key=2, style=dotted];
m12_935 -> m12_521  [key=2, style=dotted];
m12_936 -> m12_937  [key=0, style=solid];
m12_936 -> m12_938  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_936 -> m12_939  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_936 -> m12_940  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_936 -> m12_941  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_936 -> m12_943  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_938 -> m12_939  [key=0, style=solid];
m12_944 -> m12_945  [key=0, style=solid];
m12_946 -> m12_28  [key=2, style=dotted];
m12_946 -> m12_947  [key=0, style=solid];
m12_947 -> m12_28  [key=2, style=dotted];
m12_947 -> m12_948  [key=0, style=solid];
m12_945 -> m12_28  [key=2, style=dotted];
m12_945 -> m12_946  [key=0, style=solid];
m12_925 -> m12_926  [key=0, style=solid];
m12_925 -> m12_514  [key=2, style=dotted];
m12_925 -> m12_928  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_925 -> m12_929  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_929 -> m12_930  [key=0, style=solid];
m12_929 -> m12_198  [key=2, style=dotted];
m12_937 -> m12_938  [key=0, style=solid];
m12_937 -> m12_522  [key=2, style=dotted];
m12_937 -> m12_523  [key=2, style=dotted];
m12_937 -> m12_949  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_937 -> m12_940  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_943 -> m12_942  [key=0, style=solid];
m12_943 -> m12_676  [key=2, style=dotted];
m12_928 -> m12_929  [key=0, style=solid];
m12_928 -> m12_515  [key=2, style=dotted];
m12_928 -> m12_516  [key=2, style=dotted];
m12_928 -> m12_517  [key=2, style=dotted];
m12_939 -> m12_940  [key=0, style=solid];
m12_940 -> m12_941  [key=0, style=solid];
m12_940 -> m12_524  [key=2, style=dotted];
m12_940 -> m12_942  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_941 -> m12_943  [key=1, style=dashed, color=darkseagreen4, label=portfolioModel];
m12_941 -> m12_942  [key=0, style=solid];
m12_942 -> m12_944  [key=0, style=solid];
m12_942 -> m12_943  [key=0, style=solid];
m12_948 -> m12_921  [key=0, style=bold, color=blue];
m12_1074 -> m12_1075  [key=0, style=solid];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_28  [key=2, style=dotted];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_158  [key=1, style=dashed, color=darkseagreen4, label=ticksPerSecond];
m12_156 -> m12_28  [key=2, style=dotted];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_159  [key=0, style=solid];
m12_157 -> m12_28  [key=2, style=dotted];
m12_158 -> m12_159  [key=0, style=solid];
m12_158 -> m12_162  [key=2, style=dotted];
m12_158 -> m12_163  [key=2, style=dotted];
m12_158 -> m12_164  [key=2, style=dotted];
m12_158 -> m12_165  [key=2, style=dotted];
m12_158 -> m12_42  [key=2, style=dotted];
m12_158 -> m12_202  [key=2, style=dotted];
m12_158 -> m12_210  [key=2, style=dotted];
m12_159 -> m12_160  [key=0, style=solid];
m12_159 -> m12_211  [key=2, style=dotted];
m12_160 -> m12_161  [key=0, style=solid];
m12_160 -> m12_212  [key=2, style=dotted];
m12_161 -> m12_155  [key=0, style=bold, color=blue];
m12_161 -> m12_167  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_161 -> m12_170  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_161 -> m12_161  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_161 -> m12_162  [key=0, style=solid];
m12_161 -> m12_40  [key=2, style=dotted];
m12_161 -> m12_163  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_525 -> m12_526  [key=0, style=solid];
m12_555 -> m12_556  [key=0, style=solid];
m12_586 -> m12_587  [key=0, style=solid];
m12_615 -> m12_616  [key=0, style=solid];
m12_645 -> m12_646  [key=0, style=solid];
m12_677 -> m12_678  [key=0, style=solid];
m12_707 -> m12_708  [key=0, style=solid];
m12_737 -> m12_738  [key=0, style=solid];
m12_766 -> m12_767  [key=0, style=solid];
m12_795 -> m12_796  [key=0, style=solid];
m12_824 -> m12_825  [key=0, style=solid];
m12_918 -> m12_919  [key=0, style=solid];
m12_949 -> m12_950  [key=0, style=solid];
m12_980 -> m12_981  [key=0, style=solid];
m12_1011 -> m12_1012  [key=0, style=solid];
m12_1042 -> m12_1043  [key=0, style=solid];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_295  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.ToolBox.IQFeed.LookupEventArgs e"];
m12_46 -> m12_298  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.HistoryRequest requestData"];
m12_46 -> m12_314  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Data.BaseData GetData"];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_41  [key=2, style=dotted];
m12_51 -> m12_42  [key=2, style=dotted];
m12_128 -> m12_129  [key=0, style=solid];
m12_125 -> m12_126  [key=0, style=solid];
m12_527 -> m12_525  [key=0, style=bold, color=blue];
m12_526 -> m12_527  [key=0, style=solid];
m12_557 -> m12_555  [key=0, style=bold, color=blue];
m12_556 -> m12_557  [key=0, style=solid];
m12_588 -> m12_586  [key=0, style=bold, color=blue];
m12_587 -> m12_588  [key=0, style=solid];
m12_617 -> m12_615  [key=0, style=bold, color=blue];
m12_616 -> m12_617  [key=0, style=solid];
m12_647 -> m12_645  [key=0, style=bold, color=blue];
m12_646 -> m12_647  [key=0, style=solid];
m12_679 -> m12_677  [key=0, style=bold, color=blue];
m12_678 -> m12_679  [key=0, style=solid];
m12_709 -> m12_707  [key=0, style=bold, color=blue];
m12_708 -> m12_709  [key=0, style=solid];
m12_739 -> m12_737  [key=0, style=bold, color=blue];
m12_738 -> m12_739  [key=0, style=solid];
m12_768 -> m12_766  [key=0, style=bold, color=blue];
m12_767 -> m12_768  [key=0, style=solid];
m12_797 -> m12_795  [key=0, style=bold, color=blue];
m12_796 -> m12_797  [key=0, style=solid];
m12_826 -> m12_824  [key=0, style=bold, color=blue];
m12_825 -> m12_826  [key=0, style=solid];
m12_920 -> m12_918  [key=0, style=bold, color=blue];
m12_919 -> m12_920  [key=0, style=solid];
m12_951 -> m12_949  [key=0, style=bold, color=blue];
m12_950 -> m12_951  [key=0, style=solid];
m12_982 -> m12_980  [key=0, style=bold, color=blue];
m12_981 -> m12_982  [key=0, style=solid];
m12_1013 -> m12_1011  [key=0, style=bold, color=blue];
m12_1012 -> m12_1013  [key=0, style=solid];
m12_1044 -> m12_1042  [key=0, style=bold, color=blue];
m12_1043 -> m12_1044  [key=0, style=solid];
m12_48 -> m12_46  [key=0, style=bold, color=blue];
m12_48 -> m12_49  [key=0, style=solid];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_49  [key=2, style=dotted];
m12_47 -> m12_50  [key=2, style=dotted];
m12_53 -> m12_51  [key=0, style=bold, color=blue];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=subscribeSymbol];
m12_53 -> m12_49  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Symbol subscribeSymbol"];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_54  [key=2, style=dotted];
m12_52 -> m12_63  [key=2, style=dotted];
m12_124 -> m12_122  [key=0, style=bold, color=blue];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_126  [key=1, style=dashed, color=darkseagreen4, label=market];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_54  [key=2, style=dotted];
m12_130 -> m12_128  [key=0, style=bold, color=blue];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_47  [key=2, style=dotted];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_54  [key=2, style=dotted];
m12_127 -> m12_125  [key=0, style=bold, color=blue];
m12_127 -> m12_40  [key=0, style=bold, color=blue];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_54  [key=2, style=dotted];
m12_1075 -> m12_1076  [key=0, style=solid];
m12_1075 -> m12_1077  [key=2, style=dotted];
m12_1076 -> m12_1074  [key=0, style=bold, color=blue];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_199  [key=2, style=dotted];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs"];
m12_166 -> m12_170  [key=1, style=dashed, color=red, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs"];
m12_166 -> m12_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs"];
m12_166 -> m12_28  [key=2, style=dotted];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_173  [key=0, style=solid];
m12_167 -> m12_202  [key=2, style=dotted];
m12_167 -> m12_210  [key=2, style=dotted];
m12_169 -> m12_170  [key=0, style=solid, color=red];
m12_169 -> m12_174  [key=2, style=dotted];
m12_169 -> m12_171  [key=1, style=dashed, color=darkseagreen4, label=referencePrice];
m12_169 -> m12_213  [key=2, style=dotted];
m12_170 -> m12_171  [key=0, style=solid, color=red];
m12_170 -> m12_175  [key=2, style=dotted, color=red];
m12_170 -> m12_187  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_170 -> m12_186  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_170 -> m12_170  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_170 -> m12_40  [key=2, style=dotted];
m12_170 -> m12_172  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_170 -> m12_182  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_176  [key=2, style=dotted];
m12_171 -> m12_186  [key=1, style=dashed, color=darkseagreen4, label=lowPrice];
m12_171 -> m12_181  [key=1, style=dashed, color=darkseagreen4, label=lowPrice];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_211  [key=2, style=dotted];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_177  [key=2, style=dotted];
m12_172 -> m12_201  [key=2, style=dotted];
m12_172 -> m12_44  [key=2, style=dotted];
m12_173 -> m12_166  [key=0, style=bold, color=blue];
m12_173 -> m12_28  [key=2, style=dotted];
m12_173 -> m12_174  [key=0, style=solid];
m12_329 -> m12_330  [key=0, style=solid];
m12_330 -> m12_30  [key=2, style=dotted];
m12_330 -> m12_331  [key=0, style=solid];
m12_330 -> m12_332  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_330 -> m12_334  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_330 -> m12_335  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_330 -> m12_337  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_330 -> m12_340  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_331 -> m12_37  [key=2, style=dotted];
m12_331 -> m12_332  [key=0, style=solid];
m12_332 -> m12_38  [key=2, style=dotted];
m12_332 -> m12_333  [key=0, style=solid];
m12_332 -> m12_338  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_332 -> m12_339  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_334 -> m12_31  [key=2, style=dotted];
m12_334 -> m12_200  [key=2, style=dotted];
m12_334 -> m12_33  [key=2, style=dotted];
m12_334 -> m12_36  [key=2, style=dotted];
m12_334 -> m12_335  [key=0, style=solid];
m12_334 -> m12_34  [key=2, style=dotted];
m12_333 -> m12_274  [key=2, style=dotted];
m12_333 -> m12_334  [key=0, style=solid];
m12_338 -> m12_209  [key=2, style=dotted];
m12_338 -> m12_339  [key=0, style=solid];
m12_338 -> m12_47  [key=2, style=dotted];
m12_336 -> m12_275  [key=2, style=dotted];
m12_336 -> m12_338  [key=1, style=dashed, color=darkseagreen4, label=fill];
m12_336 -> m12_337  [key=0, style=solid];
m12_336 -> m12_341  [key=0, style=solid];
m12_335 -> m12_336  [key=0, style=solid];
m12_335 -> m12_257  [key=2, style=dotted];
m12_337 -> m12_28  [key=2, style=dotted];
m12_337 -> m12_338  [key=0, style=solid];
m12_340 -> m12_28  [key=2, style=dotted];
m12_340 -> m12_341  [key=0, style=solid];
m12_339 -> m12_28  [key=2, style=dotted];
m12_339 -> m12_340  [key=0, style=solid];
m12_339 -> m12_297  [key=2, style=dotted];
m12_341 -> m12_329  [key=0, style=bold, color=blue];
m12_341 -> m12_303  [key=0, style=bold, color=blue];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_60  [key=0, style=solid];
m12_49 -> m12_62  [key=0, style=solid];
m12_49 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_49 -> m12_52  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_49 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_49 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_49 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m12_50 -> m12_51  [key=0, style=solid];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_60 -> m12_24  [key=2, style=dotted];
m12_60 -> m12_25  [key=2, style=dotted];
m12_60 -> m12_26  [key=2, style=dotted];
m12_60 -> n23  [key=2, style=dotted];
m12_60 -> m12_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_60 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_60 -> m12_90  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_57  [key=0, style=solid];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=subscribeSymbol];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_45  [key=2, style=dotted];
m12_57 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label=ticker];
m12_57 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label=equityFile];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_64  [key=2, style=dotted];
m12_56 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label=fillsFile];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_49  [key=0, style=solid];
m12_58 -> m12_65  [key=2, style=dotted];
m12_58 -> m12_62  [key=1, style=dashed, color=darkseagreen4, label=mchQuantityFile];
m12_59 -> m12_49  [key=0, style=solid];
m12_59 -> m12_66  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_63  [key=1, style=dashed, color=darkseagreen4, label=jwbQuantityFile];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_47  [key=2, style=dotted];
m12_61 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label=equity];
m12_61 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label=equity];
m12_61 -> m12_24  [key=2, style=dotted];
m12_61 -> m12_25  [key=2, style=dotted];
m12_61 -> m12_26  [key=2, style=dotted];
m12_61 -> n23  [key=2, style=dotted];
m12_61 -> m12_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_62 -> m12_48  [key=0, style=bold, color=blue];
m12_62 -> m12_104  [key=1, style=dashed, color=darkseagreen4, label=mchQuantity];
m12_62 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=mchQuantity];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_24  [key=2, style=dotted];
m12_62 -> m12_25  [key=2, style=dotted];
m12_62 -> m12_26  [key=2, style=dotted];
m12_62 -> n23  [key=2, style=dotted];
m12_62 -> m12_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_589 -> m12_590  [key=0, style=solid];
m12_591 -> m12_30  [key=2, style=dotted];
m12_591 -> m12_592  [key=0, style=solid];
m12_591 -> m12_594  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_591 -> m12_595  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_591 -> m12_599  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_591 -> m12_600  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_591 -> m12_601  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_591 -> m12_602  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_591 -> m12_603  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_591 -> m12_605  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_591 -> m12_609  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_591 -> m12_613  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_592 -> m12_37  [key=2, style=dotted];
m12_592 -> m12_593  [key=0, style=solid];
m12_592 -> m12_594  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_592 -> m12_597  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_592 -> m12_602  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_592 -> m12_604  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_594 -> m12_38  [key=2, style=dotted];
m12_594 -> m12_595  [key=0, style=solid];
m12_594 -> m12_598  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_594 -> m12_608  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_594 -> m12_610  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_599 -> m12_31  [key=2, style=dotted];
m12_599 -> m12_200  [key=2, style=dotted];
m12_599 -> m12_33  [key=2, style=dotted];
m12_599 -> m12_36  [key=2, style=dotted];
m12_599 -> m12_600  [key=0, style=solid];
m12_599 -> m12_34  [key=2, style=dotted];
m12_600 -> m12_200  [key=2, style=dotted];
m12_600 -> m12_33  [key=2, style=dotted];
m12_600 -> m12_36  [key=2, style=dotted];
m12_600 -> m12_601  [key=0, style=solid];
m12_600 -> m12_518  [key=2, style=dotted];
m12_600 -> m12_519  [key=2, style=dotted];
m12_598 -> m12_274  [key=2, style=dotted];
m12_598 -> m12_599  [key=0, style=solid];
m12_608 -> m12_209  [key=2, style=dotted];
m12_608 -> m12_607  [key=0, style=solid];
m12_590 -> m12_591  [key=0, style=solid];
m12_590 -> m12_513  [key=2, style=dotted];
m12_590 -> m12_595  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_590 -> m12_596  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_595 -> m12_596  [key=0, style=solid];
m12_601 -> m12_602  [key=0, style=solid];
m12_601 -> m12_257  [key=2, style=dotted];
m12_602 -> m12_603  [key=0, style=solid];
m12_602 -> m12_205  [key=2, style=dotted];
m12_602 -> m12_521  [key=2, style=dotted];
m12_603 -> m12_604  [key=0, style=solid];
m12_603 -> m12_605  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_603 -> m12_606  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_605 -> m12_606  [key=0, style=solid];
m12_609 -> m12_610  [key=0, style=solid];
m12_609 -> m12_611  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_609 -> m12_612  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_613 -> m12_28  [key=2, style=dotted];
m12_613 -> m12_614  [key=0, style=solid];
m12_610 -> m12_28  [key=2, style=dotted];
m12_610 -> m12_611  [key=0, style=solid];
m12_611 -> m12_28  [key=2, style=dotted];
m12_611 -> m12_612  [key=0, style=solid];
m12_612 -> m12_28  [key=2, style=dotted];
m12_612 -> m12_613  [key=0, style=solid];
m12_593 -> m12_594  [key=0, style=solid];
m12_593 -> m12_514  [key=2, style=dotted];
m12_593 -> m12_596  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_593 -> m12_597  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_597 -> m12_598  [key=0, style=solid];
m12_597 -> m12_198  [key=2, style=dotted];
m12_604 -> m12_605  [key=0, style=solid];
m12_604 -> m12_522  [key=2, style=dotted];
m12_604 -> m12_523  [key=2, style=dotted];
m12_604 -> m12_615  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_604 -> m12_606  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_607 -> m12_608  [key=0, style=solid];
m12_607 -> m12_609  [key=0, style=solid];
m12_596 -> m12_597  [key=0, style=solid];
m12_596 -> m12_515  [key=2, style=dotted];
m12_596 -> m12_516  [key=2, style=dotted];
m12_596 -> m12_517  [key=2, style=dotted];
m12_606 -> m12_607  [key=0, style=solid];
m12_606 -> m12_524  [key=2, style=dotted];
m12_614 -> m12_589  [key=0, style=bold, color=blue];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_215  [key=0, style=solid];
m12_212 -> m12_217  [key=0, style=solid];
m12_212 -> m12_219  [key=0, style=solid];
m12_221 -> m12_222  [key=0, style=solid];
m12_221 -> m12_223  [key=2, style=dotted];
m12_221 -> m12_198  [key=2, style=dotted];
m12_215 -> m12_216  [key=0, style=solid];
m12_217 -> m12_218  [key=0, style=solid];
m12_219 -> m12_220  [key=0, style=solid];
m12_219 -> m12_253  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_219 -> m12_37  [key=2, style=dotted];
m12_219 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_219 -> m12_221  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_219 -> m12_222  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_214 -> m12_222  [key=0, style=solid];
m12_218 -> m12_222  [key=0, style=solid];
m12_218 -> m12_30  [key=2, style=dotted];
m12_218 -> m12_219  [key=0, style=solid];
m12_218 -> m12_231  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_232  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_233  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_234  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_236  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_237  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_238  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_239  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_241  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_242  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_218 -> m12_244  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_220 -> m12_221  [key=0, style=solid];
m12_220 -> m12_249  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_220 -> m12_197  [key=2, style=dotted];
m12_220 -> m12_246  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_222 -> m12_211  [key=0, style=bold, color=blue];
m12_222 -> m12_253  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_222 -> m12_38  [key=2, style=dotted];
m12_222 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_224  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_222 -> m12_225  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_222 -> m12_226  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_222 -> m12_227  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_222 -> m12_228  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_1085 -> m12_1087  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_1085 -> m12_1086  [key=0, style=solid];
m12_1087 -> m12_1088  [key=0, style=solid];
m12_1087 -> m12_1069  [key=2, style=dotted];
m12_1086 -> m12_1087  [key=0, style=solid];
m12_1088 -> m12_1089  [key=0, style=solid];
m12_1089 -> m12_1085  [key=0, style=bold, color=blue];
m12_66 -> m12_30  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_66 -> m12_84  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_66 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_66 -> m12_86  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_66 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_67 -> m12_37  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_68 -> m12_38  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_68 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_68 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_68 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_68 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_68 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_68 -> m12_102  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_68 -> m12_103  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_68 -> m12_104  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_68 -> m12_105  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_111  [key=2, style=dotted];
m12_84 -> m12_107  [key=2, style=dotted];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_111  [key=2, style=dotted];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_111  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_112  [key=2, style=dotted];
m12_87 -> m12_113  [key=2, style=dotted];
m12_87 -> m12_114  [key=2, style=dotted];
m12_87 -> m12_42  [key=2, style=dotted];
m12_104 -> m12_28  [key=2, style=dotted];
m12_104 -> m12_105  [key=0, style=solid];
m12_105 -> m12_28  [key=2, style=dotted];
m12_105 -> m12_106  [key=0, style=solid];
m12_95 -> m12_28  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_99  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_39  [key=2, style=dotted];
m12_69 -> m12_67  [key=0, style=bold, color=blue];
m12_77 -> m12_86  [key=1, style=dashed, color=darkseagreen4, label=mchUsdSecurity];
m12_77 -> m12_34  [key=2, style=dotted];
m12_77 -> m12_109  [key=2, style=dotted];
m12_77 -> m12_32  [key=2, style=dotted];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label=mchUsdSecurity];
m12_77 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label=mchUsdSecurity];
m12_77 -> m12_100  [key=2, style=dotted];
m12_77 -> m12_101  [key=2, style=dotted];
m12_79 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label=usdJwbSecurity];
m12_79 -> m12_34  [key=2, style=dotted];
m12_79 -> m12_109  [key=2, style=dotted];
m12_79 -> m12_32  [key=2, style=dotted];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_83  [key=1, style=dashed, color=darkseagreen4, label=usdJwbSecurity];
m12_79 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label=usdJwbSecurity];
m12_79 -> m12_42  [key=2, style=dotted];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_110  [key=2, style=dotted];
m12_83 -> m12_106  [key=2, style=dotted];
m12_88 -> m12_104  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_88 -> m12_105  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_88 -> m12_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_90  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_88 -> m12_91  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_88 -> m12_92  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_88 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_88 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_88 -> m12_106  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_88 -> m12_108  [key=2, style=dotted];
m12_106 -> m12_106  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_106 -> m12_89  [key=0, style=solid];
m12_92 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label=mchJwb];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label=mchJwb];
m12_92 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label=mchJwb];
m12_92 -> m12_111  [key=2, style=dotted];
m12_93 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label=mchUsd];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_97  [key=1, style=dashed, color=darkseagreen4, label=mchUsd];
m12_93 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label=mchUsd];
m12_93 -> m12_112  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_98  [key=1, style=dashed, color=darkseagreen4, label=usdJwb];
m12_94 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label=usdJwb];
m12_94 -> m12_113  [key=2, style=dotted];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_43  [key=2, style=dotted];
m12_96 -> m12_115  [key=2, style=dotted];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_43  [key=2, style=dotted];
m12_98 -> m12_115  [key=2, style=dotted];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_43  [key=2, style=dotted];
m12_97 -> m12_115  [key=2, style=dotted];
m12_97 -> m12_47  [key=2, style=dotted];
m12_90 -> m12_102  [key=1, style=dashed, color=darkseagreen4, label=fill];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_110  [key=2, style=dotted];
m12_100 -> m12_102  [key=0, style=solid];
m12_100 -> m12_101  [key=0, style=solid];
m12_101 -> m12_44  [key=2, style=dotted];
m12_101 -> m12_100  [key=0, style=solid];
m12_101 -> m12_101  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m12_91 -> m12_40  [key=2, style=dotted];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_91 -> m12_98  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_91 -> m12_97  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_91 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_91 -> m12_42  [key=2, style=dotted];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_35  [key=2, style=dotted];
m12_76 -> m12_42  [key=2, style=dotted];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_110  [key=2, style=dotted];
m12_81 -> m12_104  [key=2, style=dotted];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_43  [key=2, style=dotted];
m12_99 -> m12_116  [key=2, style=dotted];
m12_99 -> m12_12  [key=0, style=bold, color=blue];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_35  [key=2, style=dotted];
m12_78 -> m12_102  [key=2, style=dotted];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_110  [key=2, style=dotted];
m12_82 -> m12_105  [key=2, style=dotted];
m12_80 -> m12_35  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_103  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_107  [key=0, style=solid];
m12_89 -> m12_109  [key=2, style=dotted];
m12_107 -> m12_55  [key=0, style=bold, color=blue];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_47  [key=2, style=dotted];
m12_798 -> m12_799  [key=0, style=solid];
m12_800 -> m12_30  [key=2, style=dotted];
m12_800 -> m12_801  [key=0, style=solid];
m12_800 -> m12_803  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_804  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_808  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_809  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_810  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_811  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_812  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_813  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_815  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_821  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_800 -> m12_822  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_801 -> m12_37  [key=2, style=dotted];
m12_801 -> m12_802  [key=0, style=solid];
m12_801 -> m12_803  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_801 -> m12_806  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_801 -> m12_812  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_801 -> m12_814  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_803 -> m12_38  [key=2, style=dotted];
m12_803 -> m12_804  [key=0, style=solid];
m12_803 -> m12_807  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_803 -> m12_819  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_803 -> m12_820  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_808 -> m12_31  [key=2, style=dotted];
m12_808 -> m12_200  [key=2, style=dotted];
m12_808 -> m12_33  [key=2, style=dotted];
m12_808 -> m12_36  [key=2, style=dotted];
m12_808 -> m12_809  [key=0, style=solid];
m12_808 -> m12_34  [key=2, style=dotted];
m12_809 -> m12_200  [key=2, style=dotted];
m12_809 -> m12_33  [key=2, style=dotted];
m12_809 -> m12_36  [key=2, style=dotted];
m12_809 -> m12_810  [key=0, style=solid];
m12_809 -> m12_518  [key=2, style=dotted];
m12_809 -> m12_519  [key=2, style=dotted];
m12_807 -> m12_274  [key=2, style=dotted];
m12_807 -> m12_808  [key=0, style=solid];
m12_819 -> m12_209  [key=2, style=dotted];
m12_819 -> m12_818  [key=0, style=solid];
m12_799 -> m12_800  [key=0, style=solid];
m12_799 -> m12_513  [key=2, style=dotted];
m12_799 -> m12_804  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_799 -> m12_805  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_804 -> m12_805  [key=0, style=solid];
m12_810 -> m12_811  [key=0, style=solid];
m12_810 -> m12_258  [key=2, style=dotted];
m12_810 -> m12_44  [key=2, style=dotted];
m12_811 -> m12_812  [key=0, style=solid];
m12_811 -> m12_257  [key=2, style=dotted];
m12_812 -> m12_813  [key=0, style=solid];
m12_812 -> m12_205  [key=2, style=dotted];
m12_812 -> m12_521  [key=2, style=dotted];
m12_813 -> m12_814  [key=0, style=solid];
m12_813 -> m12_815  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_813 -> m12_816  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_813 -> m12_817  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_815 -> m12_816  [key=0, style=solid];
m12_821 -> m12_28  [key=2, style=dotted];
m12_821 -> m12_822  [key=0, style=solid];
m12_822 -> m12_28  [key=2, style=dotted];
m12_822 -> m12_823  [key=0, style=solid];
m12_820 -> m12_28  [key=2, style=dotted];
m12_820 -> m12_821  [key=0, style=solid];
m12_802 -> m12_803  [key=0, style=solid];
m12_802 -> m12_514  [key=2, style=dotted];
m12_802 -> m12_805  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_802 -> m12_806  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_806 -> m12_807  [key=0, style=solid];
m12_806 -> m12_198  [key=2, style=dotted];
m12_814 -> m12_815  [key=0, style=solid];
m12_814 -> m12_522  [key=2, style=dotted];
m12_814 -> m12_523  [key=2, style=dotted];
m12_814 -> m12_824  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_814 -> m12_817  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_818 -> m12_819  [key=0, style=solid];
m12_818 -> m12_820  [key=0, style=solid];
m12_805 -> m12_806  [key=0, style=solid];
m12_805 -> m12_515  [key=2, style=dotted];
m12_805 -> m12_516  [key=2, style=dotted];
m12_805 -> m12_517  [key=2, style=dotted];
m12_816 -> m12_817  [key=0, style=solid];
m12_817 -> m12_818  [key=0, style=solid];
m12_817 -> m12_524  [key=2, style=dotted];
m12_823 -> m12_798  [key=0, style=bold, color=blue];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_180  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs"];
m12_178 -> m12_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs"];
m12_178 -> m12_183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs"];
m12_178 -> m12_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs"];
m12_178 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs"];
m12_178 -> m12_190  [key=1, style=dashed, color=red, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs"];
m12_178 -> m12_191  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs"];
m12_178 -> m12_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs"];
m12_178 -> m12_212  [key=2, style=dotted];
m12_179 -> m12_180  [key=0, style=solid];
m12_179 -> m12_181  [key=0, style=solid];
m12_179 -> m12_28  [key=2, style=dotted];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_66  [key=2, style=dotted];
m12_180 -> m12_35  [key=2, style=dotted];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_183  [key=0, style=solid];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_185  [key=0, style=solid];
m12_183 -> m12_214  [key=2, style=dotted];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_195  [key=2, style=dotted];
m12_187 -> m12_202  [key=2, style=dotted];
m12_188 -> m12_189  [key=0, style=solid, color=red];
m12_188 -> m12_191  [key=1, style=dashed, color=darkseagreen4, label=last];
m12_188 -> m12_203  [key=2, style=dotted];
m12_190 -> m12_191  [key=0, style=solid, color=red];
m12_190 -> m12_175  [key=2, style=dotted, color=red];
m12_190 -> m12_28  [key=2, style=dotted];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_197  [key=2, style=dotted];
m12_191 -> m12_194  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m12_191 -> m12_214  [key=2, style=dotted];
m12_191 -> m12_193  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m12_191 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_215  [key=2, style=dotted];
m12_182 -> m12_194  [key=0, style=solid];
m12_182 -> m12_183  [key=0, style=solid];
m12_182 -> m12_201  [key=2, style=dotted];
m12_182 -> m12_44  [key=2, style=dotted];
m12_184 -> m12_194  [key=0, style=solid];
m12_184 -> m12_213  [key=2, style=dotted];
m12_184 -> m12_185  [key=0, style=solid];
m12_185 -> m12_186  [key=0, style=solid];
m12_185 -> m12_28  [key=2, style=dotted];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_201  [key=2, style=dotted];
m12_186 -> m12_44  [key=2, style=dotted];
m12_189 -> m12_190  [key=0, style=solid, color=red];
m12_189 -> m12_196  [key=2, style=dotted, color=red];
m12_189 -> m12_191  [key=1, style=dashed, color=red, label=time];
m12_189 -> m12_209  [key=2, style=dotted];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_177  [key=2, style=dotted];
m12_192 -> m12_213  [key=2, style=dotted];
m12_194 -> m12_178  [key=0, style=bold, color=blue];
m12_194 -> m12_28  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_276 -> m12_277  [key=0, style=solid, color=green];
m12_276 -> m12_278  [key=2, style=dotted];
m12_277 -> m12_270  [key=0, style=bold, color=blue];
m12_277 -> m12_278  [key=0, style=solid, color=green];
m12_277 -> m12_30  [key=2, style=dotted, color=green];
m12_277 -> m12_279  [key=1, style=dashed, color=green, label=securities];
m12_277 -> m12_281  [key=1, style=dashed, color=green, label=securities];
m12_277 -> m12_285  [key=1, style=dashed, color=green, label=securities];
m12_277 -> m12_289  [key=1, style=dashed, color=green, label=securities];
m12_165 -> m12_28  [key=2, style=dotted];
m12_165 -> m12_166  [key=0, style=solid];
m12_40 -> m12_124  [key=0, style=solid];
m12_40 -> m12_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m12_40 -> m12_25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m12_769 -> m12_770  [key=0, style=solid];
m12_771 -> m12_30  [key=2, style=dotted];
m12_771 -> m12_772  [key=0, style=solid];
m12_771 -> m12_774  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_775  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_779  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_780  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_781  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_782  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_783  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_784  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_786  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_792  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_771 -> m12_793  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_772 -> m12_37  [key=2, style=dotted];
m12_772 -> m12_773  [key=0, style=solid];
m12_772 -> m12_774  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_772 -> m12_777  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_772 -> m12_783  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_772 -> m12_785  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_774 -> m12_38  [key=2, style=dotted];
m12_774 -> m12_775  [key=0, style=solid];
m12_774 -> m12_778  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_774 -> m12_790  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_774 -> m12_791  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_779 -> m12_31  [key=2, style=dotted];
m12_779 -> m12_200  [key=2, style=dotted];
m12_779 -> m12_33  [key=2, style=dotted];
m12_779 -> m12_36  [key=2, style=dotted];
m12_779 -> m12_780  [key=0, style=solid];
m12_779 -> m12_34  [key=2, style=dotted];
m12_780 -> m12_200  [key=2, style=dotted];
m12_780 -> m12_33  [key=2, style=dotted];
m12_780 -> m12_36  [key=2, style=dotted];
m12_780 -> m12_781  [key=0, style=solid];
m12_780 -> m12_518  [key=2, style=dotted];
m12_780 -> m12_519  [key=2, style=dotted];
m12_778 -> m12_274  [key=2, style=dotted];
m12_778 -> m12_779  [key=0, style=solid];
m12_790 -> m12_209  [key=2, style=dotted];
m12_790 -> m12_789  [key=0, style=solid];
m12_770 -> m12_771  [key=0, style=solid];
m12_770 -> m12_513  [key=2, style=dotted];
m12_770 -> m12_775  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_770 -> m12_776  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_775 -> m12_776  [key=0, style=solid];
m12_781 -> m12_782  [key=0, style=solid];
m12_781 -> m12_258  [key=2, style=dotted];
m12_781 -> m12_44  [key=2, style=dotted];
m12_782 -> m12_783  [key=0, style=solid];
m12_782 -> m12_257  [key=2, style=dotted];
m12_783 -> m12_784  [key=0, style=solid];
m12_783 -> m12_205  [key=2, style=dotted];
m12_783 -> m12_521  [key=2, style=dotted];
m12_784 -> m12_785  [key=0, style=solid];
m12_784 -> m12_786  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_784 -> m12_787  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_784 -> m12_788  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_786 -> m12_787  [key=0, style=solid];
m12_792 -> m12_28  [key=2, style=dotted];
m12_792 -> m12_793  [key=0, style=solid];
m12_793 -> m12_28  [key=2, style=dotted];
m12_793 -> m12_794  [key=0, style=solid];
m12_791 -> m12_28  [key=2, style=dotted];
m12_791 -> m12_792  [key=0, style=solid];
m12_773 -> m12_774  [key=0, style=solid];
m12_773 -> m12_514  [key=2, style=dotted];
m12_773 -> m12_776  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_773 -> m12_777  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_777 -> m12_778  [key=0, style=solid];
m12_777 -> m12_198  [key=2, style=dotted];
m12_785 -> m12_786  [key=0, style=solid];
m12_785 -> m12_522  [key=2, style=dotted];
m12_785 -> m12_523  [key=2, style=dotted];
m12_785 -> m12_795  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_785 -> m12_788  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_789 -> m12_790  [key=0, style=solid];
m12_789 -> m12_791  [key=0, style=solid];
m12_776 -> m12_777  [key=0, style=solid];
m12_776 -> m12_515  [key=2, style=dotted];
m12_776 -> m12_516  [key=2, style=dotted];
m12_776 -> m12_517  [key=2, style=dotted];
m12_787 -> m12_788  [key=0, style=solid];
m12_788 -> m12_789  [key=0, style=solid];
m12_788 -> m12_524  [key=2, style=dotted];
m12_794 -> m12_769  [key=0, style=bold, color=blue];
m12_983 -> m12_984  [key=0, style=solid];
m12_985 -> m12_30  [key=2, style=dotted];
m12_985 -> m12_986  [key=0, style=solid];
m12_985 -> m12_988  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_989  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_993  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_994  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_995  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_996  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_997  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_998  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_1000  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_1006  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_1008  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_985 -> m12_1009  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_986 -> m12_37  [key=2, style=dotted];
m12_986 -> m12_987  [key=0, style=solid];
m12_986 -> m12_988  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_986 -> m12_991  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_986 -> m12_997  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_986 -> m12_999  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_988 -> m12_38  [key=2, style=dotted];
m12_988 -> m12_989  [key=0, style=solid];
m12_988 -> m12_992  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_988 -> m12_1005  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_988 -> m12_1007  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_993 -> m12_31  [key=2, style=dotted];
m12_993 -> m12_200  [key=2, style=dotted];
m12_993 -> m12_33  [key=2, style=dotted];
m12_993 -> m12_36  [key=2, style=dotted];
m12_993 -> m12_994  [key=0, style=solid];
m12_993 -> m12_34  [key=2, style=dotted];
m12_994 -> m12_200  [key=2, style=dotted];
m12_994 -> m12_33  [key=2, style=dotted];
m12_994 -> m12_36  [key=2, style=dotted];
m12_994 -> m12_995  [key=0, style=solid];
m12_994 -> m12_518  [key=2, style=dotted];
m12_994 -> m12_519  [key=2, style=dotted];
m12_992 -> m12_274  [key=2, style=dotted];
m12_992 -> m12_993  [key=0, style=solid];
m12_984 -> m12_985  [key=0, style=solid];
m12_984 -> m12_513  [key=2, style=dotted];
m12_984 -> m12_989  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_984 -> m12_990  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_989 -> m12_990  [key=0, style=solid];
m12_995 -> m12_996  [key=0, style=solid];
m12_995 -> m12_258  [key=2, style=dotted];
m12_995 -> m12_44  [key=2, style=dotted];
m12_996 -> m12_997  [key=0, style=solid];
m12_996 -> m12_257  [key=2, style=dotted];
m12_997 -> m12_998  [key=0, style=solid];
m12_997 -> m12_205  [key=2, style=dotted];
m12_997 -> m12_521  [key=2, style=dotted];
m12_998 -> m12_999  [key=0, style=solid];
m12_998 -> m12_1000  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_998 -> m12_1001  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_998 -> m12_1002  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_998 -> m12_1003  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_998 -> m12_1005  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_1000 -> m12_1001  [key=0, style=solid];
m12_1006 -> m12_1007  [key=0, style=solid];
m12_1008 -> m12_28  [key=2, style=dotted];
m12_1008 -> m12_1009  [key=0, style=solid];
m12_1009 -> m12_28  [key=2, style=dotted];
m12_1009 -> m12_1010  [key=0, style=solid];
m12_1007 -> m12_28  [key=2, style=dotted];
m12_1007 -> m12_1008  [key=0, style=solid];
m12_987 -> m12_988  [key=0, style=solid];
m12_987 -> m12_514  [key=2, style=dotted];
m12_987 -> m12_990  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_987 -> m12_991  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_991 -> m12_992  [key=0, style=solid];
m12_991 -> m12_198  [key=2, style=dotted];
m12_999 -> m12_1000  [key=0, style=solid];
m12_999 -> m12_522  [key=2, style=dotted];
m12_999 -> m12_523  [key=2, style=dotted];
m12_999 -> m12_1011  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_999 -> m12_1002  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_1005 -> m12_1004  [key=0, style=solid];
m12_1005 -> m12_676  [key=2, style=dotted];
m12_990 -> m12_991  [key=0, style=solid];
m12_990 -> m12_515  [key=2, style=dotted];
m12_990 -> m12_516  [key=2, style=dotted];
m12_990 -> m12_517  [key=2, style=dotted];
m12_1001 -> m12_1002  [key=0, style=solid];
m12_1002 -> m12_1003  [key=0, style=solid];
m12_1002 -> m12_524  [key=2, style=dotted];
m12_1002 -> m12_1004  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_1003 -> m12_1005  [key=1, style=dashed, color=darkseagreen4, label=portfolioModel];
m12_1003 -> m12_1004  [key=0, style=solid];
m12_1004 -> m12_1006  [key=0, style=solid];
m12_1004 -> m12_1005  [key=0, style=solid];
m12_1010 -> m12_983  [key=0, style=bold, color=blue];
m12_201 -> m12_198  [key=0, style=bold, color=blue];
m12_892 -> m12_893  [key=0, style=solid];
m12_894 -> m12_30  [key=2, style=dotted];
m12_894 -> m12_895  [key=0, style=solid];
m12_894 -> m12_897  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_898  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_902  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_903  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_904  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_905  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_906  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_907  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_909  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_915  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_894 -> m12_916  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_895 -> m12_37  [key=2, style=dotted];
m12_895 -> m12_896  [key=0, style=solid];
m12_895 -> m12_897  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_895 -> m12_900  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_895 -> m12_906  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_895 -> m12_908  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_897 -> m12_38  [key=2, style=dotted];
m12_897 -> m12_898  [key=0, style=solid];
m12_897 -> m12_901  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_897 -> m12_913  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_897 -> m12_914  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_902 -> m12_31  [key=2, style=dotted];
m12_902 -> m12_200  [key=2, style=dotted];
m12_902 -> m12_33  [key=2, style=dotted];
m12_902 -> m12_36  [key=2, style=dotted];
m12_902 -> m12_903  [key=0, style=solid];
m12_902 -> m12_34  [key=2, style=dotted];
m12_903 -> m12_200  [key=2, style=dotted];
m12_903 -> m12_33  [key=2, style=dotted];
m12_903 -> m12_36  [key=2, style=dotted];
m12_903 -> m12_904  [key=0, style=solid];
m12_903 -> m12_518  [key=2, style=dotted];
m12_903 -> m12_519  [key=2, style=dotted];
m12_901 -> m12_274  [key=2, style=dotted];
m12_901 -> m12_902  [key=0, style=solid];
m12_913 -> m12_209  [key=2, style=dotted];
m12_913 -> m12_912  [key=0, style=solid];
m12_893 -> m12_894  [key=0, style=solid];
m12_893 -> m12_513  [key=2, style=dotted];
m12_893 -> m12_898  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_893 -> m12_899  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_898 -> m12_899  [key=0, style=solid];
m12_904 -> m12_905  [key=0, style=solid];
m12_904 -> m12_258  [key=2, style=dotted];
m12_904 -> m12_44  [key=2, style=dotted];
m12_905 -> m12_906  [key=0, style=solid];
m12_905 -> m12_257  [key=2, style=dotted];
m12_906 -> m12_907  [key=0, style=solid];
m12_906 -> m12_205  [key=2, style=dotted];
m12_906 -> m12_521  [key=2, style=dotted];
m12_907 -> m12_908  [key=0, style=solid];
m12_907 -> m12_909  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_907 -> m12_910  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_907 -> m12_911  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_909 -> m12_910  [key=0, style=solid];
m12_915 -> m12_28  [key=2, style=dotted];
m12_915 -> m12_916  [key=0, style=solid];
m12_916 -> m12_28  [key=2, style=dotted];
m12_916 -> m12_917  [key=0, style=solid];
m12_914 -> m12_28  [key=2, style=dotted];
m12_914 -> m12_915  [key=0, style=solid];
m12_896 -> m12_897  [key=0, style=solid];
m12_896 -> m12_514  [key=2, style=dotted];
m12_896 -> m12_899  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_896 -> m12_900  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_900 -> m12_901  [key=0, style=solid];
m12_900 -> m12_198  [key=2, style=dotted];
m12_908 -> m12_909  [key=0, style=solid];
m12_908 -> m12_522  [key=2, style=dotted];
m12_908 -> m12_523  [key=2, style=dotted];
m12_908 -> m12_918  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_908 -> m12_911  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_912 -> m12_913  [key=0, style=solid];
m12_912 -> m12_914  [key=0, style=solid];
m12_899 -> m12_900  [key=0, style=solid];
m12_899 -> m12_515  [key=2, style=dotted];
m12_899 -> m12_516  [key=2, style=dotted];
m12_899 -> m12_517  [key=2, style=dotted];
m12_910 -> m12_911  [key=0, style=solid];
m12_911 -> m12_912  [key=0, style=solid];
m12_911 -> m12_524  [key=2, style=dotted];
m12_917 -> m12_892  [key=0, style=bold, color=blue];
m12_648 -> m12_649  [key=0, style=solid];
m12_650 -> m12_30  [key=2, style=dotted];
m12_650 -> m12_651  [key=0, style=solid];
m12_650 -> m12_653  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_654  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_658  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_659  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_660  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_661  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_662  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_663  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_665  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_670  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_650 -> m12_674  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_651 -> m12_37  [key=2, style=dotted];
m12_651 -> m12_652  [key=0, style=solid];
m12_651 -> m12_653  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_651 -> m12_656  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_651 -> m12_662  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_651 -> m12_664  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_653 -> m12_38  [key=2, style=dotted];
m12_653 -> m12_654  [key=0, style=solid];
m12_653 -> m12_657  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_653 -> m12_669  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_653 -> m12_671  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_658 -> m12_31  [key=2, style=dotted];
m12_658 -> m12_200  [key=2, style=dotted];
m12_658 -> m12_33  [key=2, style=dotted];
m12_658 -> m12_36  [key=2, style=dotted];
m12_658 -> m12_659  [key=0, style=solid];
m12_658 -> m12_34  [key=2, style=dotted];
m12_659 -> m12_200  [key=2, style=dotted];
m12_659 -> m12_33  [key=2, style=dotted];
m12_659 -> m12_36  [key=2, style=dotted];
m12_659 -> m12_660  [key=0, style=solid];
m12_659 -> m12_518  [key=2, style=dotted];
m12_659 -> m12_519  [key=2, style=dotted];
m12_657 -> m12_274  [key=2, style=dotted];
m12_657 -> m12_658  [key=0, style=solid];
m12_649 -> m12_650  [key=0, style=solid];
m12_649 -> m12_513  [key=2, style=dotted];
m12_649 -> m12_654  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_649 -> m12_655  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_654 -> m12_655  [key=0, style=solid];
m12_660 -> m12_661  [key=0, style=solid];
m12_660 -> m12_257  [key=2, style=dotted];
m12_661 -> m12_662  [key=0, style=solid];
m12_661 -> m12_520  [key=2, style=dotted];
m12_661 -> m12_44  [key=2, style=dotted];
m12_662 -> m12_663  [key=0, style=solid];
m12_662 -> m12_205  [key=2, style=dotted];
m12_662 -> m12_521  [key=2, style=dotted];
m12_663 -> m12_664  [key=0, style=solid];
m12_663 -> m12_665  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_663 -> m12_666  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_663 -> m12_667  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_663 -> m12_669  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_665 -> m12_666  [key=0, style=solid];
m12_670 -> m12_671  [key=0, style=solid];
m12_670 -> m12_672  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_670 -> m12_673  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_674 -> m12_28  [key=2, style=dotted];
m12_674 -> m12_675  [key=0, style=solid];
m12_671 -> m12_28  [key=2, style=dotted];
m12_671 -> m12_672  [key=0, style=solid];
m12_672 -> m12_28  [key=2, style=dotted];
m12_672 -> m12_673  [key=0, style=solid];
m12_673 -> m12_28  [key=2, style=dotted];
m12_673 -> m12_674  [key=0, style=solid];
m12_652 -> m12_653  [key=0, style=solid];
m12_652 -> m12_514  [key=2, style=dotted];
m12_652 -> m12_655  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_652 -> m12_656  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_656 -> m12_657  [key=0, style=solid];
m12_656 -> m12_198  [key=2, style=dotted];
m12_664 -> m12_665  [key=0, style=solid];
m12_664 -> m12_522  [key=2, style=dotted];
m12_664 -> m12_523  [key=2, style=dotted];
m12_664 -> m12_677  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_664 -> m12_666  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_669 -> m12_668  [key=0, style=solid];
m12_669 -> m12_676  [key=2, style=dotted];
m12_655 -> m12_656  [key=0, style=solid];
m12_655 -> m12_515  [key=2, style=dotted];
m12_655 -> m12_516  [key=2, style=dotted];
m12_655 -> m12_517  [key=2, style=dotted];
m12_666 -> m12_667  [key=0, style=solid];
m12_666 -> m12_524  [key=2, style=dotted];
m12_666 -> m12_668  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_667 -> m12_669  [key=1, style=dashed, color=darkseagreen4, label=portfolioModel];
m12_667 -> m12_668  [key=0, style=solid];
m12_668 -> m12_670  [key=0, style=solid];
m12_668 -> m12_669  [key=0, style=solid];
m12_675 -> m12_648  [key=0, style=bold, color=blue];
m12_278 -> m12_279  [key=0, style=solid, color=green];
m12_278 -> m12_37  [key=2, style=dotted, color=green];
m12_208 -> m12_1062  [key=0, style=solid];
m12_208 -> m12_209  [key=0, style=solid];
m12_1062 -> m12_1063  [key=0, style=solid];
m12_1063 -> m12_208  [key=0, style=bold, color=blue];
m12_1070 -> m12_1071  [key=0, style=solid];
m12_1070 -> m12_1075  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_1071 -> m12_1072  [key=0, style=solid];
m12_1071 -> m12_1073  [key=2, style=dotted];
m12_1071 -> m12_1074  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_1072 -> m12_1070  [key=0, style=bold, color=blue];
m12_558 -> m12_559  [key=0, style=solid];
m12_560 -> m12_30  [key=2, style=dotted];
m12_560 -> m12_561  [key=0, style=solid];
m12_560 -> m12_563  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_564  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_568  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_569  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_570  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_571  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_572  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_573  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_575  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_580  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_560 -> m12_584  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_561 -> m12_37  [key=2, style=dotted];
m12_561 -> m12_562  [key=0, style=solid];
m12_561 -> m12_563  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_561 -> m12_566  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_561 -> m12_572  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_561 -> m12_574  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_563 -> m12_38  [key=2, style=dotted];
m12_563 -> m12_564  [key=0, style=solid];
m12_563 -> m12_567  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_563 -> m12_579  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_563 -> m12_581  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_568 -> m12_31  [key=2, style=dotted];
m12_568 -> m12_200  [key=2, style=dotted];
m12_568 -> m12_33  [key=2, style=dotted];
m12_568 -> m12_36  [key=2, style=dotted];
m12_568 -> m12_569  [key=0, style=solid];
m12_568 -> m12_34  [key=2, style=dotted];
m12_569 -> m12_200  [key=2, style=dotted];
m12_569 -> m12_33  [key=2, style=dotted];
m12_569 -> m12_36  [key=2, style=dotted];
m12_569 -> m12_570  [key=0, style=solid];
m12_569 -> m12_518  [key=2, style=dotted];
m12_569 -> m12_519  [key=2, style=dotted];
m12_567 -> m12_274  [key=2, style=dotted];
m12_567 -> m12_568  [key=0, style=solid];
m12_579 -> m12_209  [key=2, style=dotted];
m12_579 -> m12_578  [key=0, style=solid];
m12_559 -> m12_560  [key=0, style=solid];
m12_559 -> m12_513  [key=2, style=dotted];
m12_559 -> m12_564  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_559 -> m12_565  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_564 -> m12_565  [key=0, style=solid];
m12_570 -> m12_571  [key=0, style=solid];
m12_570 -> m12_257  [key=2, style=dotted];
m12_571 -> m12_572  [key=0, style=solid];
m12_571 -> m12_520  [key=2, style=dotted];
m12_571 -> m12_44  [key=2, style=dotted];
m12_572 -> m12_573  [key=0, style=solid];
m12_572 -> m12_205  [key=2, style=dotted];
m12_572 -> m12_521  [key=2, style=dotted];
m12_573 -> m12_574  [key=0, style=solid];
m12_573 -> m12_575  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_573 -> m12_576  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_573 -> m12_577  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_575 -> m12_576  [key=0, style=solid];
m12_580 -> m12_581  [key=0, style=solid];
m12_580 -> m12_582  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_580 -> m12_583  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_584 -> m12_28  [key=2, style=dotted];
m12_584 -> m12_585  [key=0, style=solid];
m12_581 -> m12_28  [key=2, style=dotted];
m12_581 -> m12_582  [key=0, style=solid];
m12_582 -> m12_28  [key=2, style=dotted];
m12_582 -> m12_583  [key=0, style=solid];
m12_583 -> m12_28  [key=2, style=dotted];
m12_583 -> m12_584  [key=0, style=solid];
m12_562 -> m12_563  [key=0, style=solid];
m12_562 -> m12_514  [key=2, style=dotted];
m12_562 -> m12_565  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_562 -> m12_566  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_566 -> m12_567  [key=0, style=solid];
m12_566 -> m12_198  [key=2, style=dotted];
m12_574 -> m12_575  [key=0, style=solid];
m12_574 -> m12_522  [key=2, style=dotted];
m12_574 -> m12_523  [key=2, style=dotted];
m12_574 -> m12_586  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_574 -> m12_577  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_578 -> m12_579  [key=0, style=solid];
m12_578 -> m12_580  [key=0, style=solid];
m12_565 -> m12_566  [key=0, style=solid];
m12_565 -> m12_515  [key=2, style=dotted];
m12_565 -> m12_516  [key=2, style=dotted];
m12_565 -> m12_517  [key=2, style=dotted];
m12_576 -> m12_577  [key=0, style=solid];
m12_577 -> m12_578  [key=0, style=solid];
m12_577 -> m12_524  [key=2, style=dotted];
m12_585 -> m12_558  [key=0, style=bold, color=blue];
m12_163 -> m12_164  [key=0, style=solid];
m12_163 -> m12_201  [key=2, style=dotted];
m12_163 -> m12_44  [key=2, style=dotted];
m12_210 -> m12_208  [key=0, style=bold, color=blue];
m12_279 -> m12_280  [key=0, style=solid, color=green];
m12_279 -> m12_38  [key=2, style=dotted, color=green];
m12_279 -> m12_283  [key=1, style=dashed, color=green, label=portfolio];
m12_279 -> m12_284  [key=1, style=dashed, color=green, label=portfolio];
m12_279 -> m12_287  [key=1, style=dashed, color=green, label=portfolio];
m12_279 -> m12_288  [key=1, style=dashed, color=green, label=portfolio];
m12_279 -> m12_282  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.LookupEventArgs"];
m12_279 -> m12_285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.LookupEventArgs"];
m12_279 -> m12_286  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.LookupEventArgs"];
m12_281 -> m12_282  [key=0, style=solid, color=green];
m12_281 -> m12_31  [key=2, style=dotted, color=green];
m12_281 -> m12_200  [key=2, style=dotted, color=green];
m12_281 -> m12_33  [key=2, style=dotted, color=green];
m12_281 -> m12_291  [key=2, style=dotted, color=green];
m12_281 -> m12_292  [key=2, style=dotted, color=green];
m12_281 -> m12_36  [key=2, style=dotted, color=green];
m12_285 -> m12_286  [key=0, style=solid];
m12_285 -> m12_28  [key=2, style=dotted];
m12_285 -> m12_290  [key=0, style=solid];
m12_285 -> m12_292  [key=0, style=solid];
m12_285 -> m12_174  [key=2, style=dotted];
m12_289 -> m12_290  [key=0, style=solid];
m12_289 -> m12_28  [key=2, style=dotted];
m12_289 -> m12_292  [key=0, style=solid];
m12_289 -> m12_296  [key=2, style=dotted];
m12_280 -> m12_281  [key=0, style=solid, color=green];
m12_280 -> m12_274  [key=2, style=dotted, color=green];
m12_280 -> m12_283  [key=0, style=solid];
m12_280 -> m12_287  [key=0, style=solid];
m12_280 -> m12_289  [key=0, style=solid];
m12_283 -> m12_284  [key=0, style=solid, color=green];
m12_283 -> m12_209  [key=2, style=dotted, color=green];
m12_284 -> m12_285  [key=0, style=solid];
m12_284 -> m12_28  [key=2, style=dotted];
m12_287 -> m12_288  [key=0, style=solid];
m12_287 -> m12_209  [key=2, style=dotted];
m12_288 -> m12_289  [key=0, style=solid];
m12_288 -> m12_28  [key=2, style=dotted];
m12_288 -> m12_290  [key=0, style=solid];
m12_288 -> m12_292  [key=0, style=solid];
m12_282 -> m12_283  [key=0, style=solid, color=green];
m12_282 -> m12_275  [key=2, style=dotted, color=green];
m12_282 -> m12_290  [key=0, style=solid];
m12_282 -> m12_292  [key=0, style=solid];
m12_282 -> m12_293  [key=2, style=dotted];
m12_282 -> m12_294  [key=2, style=dotted];
m12_286 -> m12_287  [key=0, style=solid];
m12_286 -> m12_275  [key=2, style=dotted];
m12_286 -> m12_290  [key=0, style=solid];
m12_286 -> m12_292  [key=0, style=solid];
m12_286 -> m12_295  [key=2, style=dotted];
m12_290 -> m12_276  [key=0, style=bold, color=blue];
m12_290 -> m12_291  [key=0, style=solid];
m12_153 -> m12_28  [key=2, style=dotted];
m12_153 -> m12_154  [key=0, style=solid];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs"];
m12_618 -> m12_619  [key=0, style=solid];
m12_620 -> m12_30  [key=2, style=dotted];
m12_620 -> m12_621  [key=0, style=solid];
m12_620 -> m12_623  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_624  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_628  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_629  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_630  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_631  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_632  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_633  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_635  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_639  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_620 -> m12_643  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_621 -> m12_37  [key=2, style=dotted];
m12_621 -> m12_622  [key=0, style=solid];
m12_621 -> m12_623  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_621 -> m12_626  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_621 -> m12_632  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_621 -> m12_634  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_623 -> m12_38  [key=2, style=dotted];
m12_623 -> m12_624  [key=0, style=solid];
m12_623 -> m12_627  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_623 -> m12_638  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_623 -> m12_640  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_628 -> m12_31  [key=2, style=dotted];
m12_628 -> m12_200  [key=2, style=dotted];
m12_628 -> m12_33  [key=2, style=dotted];
m12_628 -> m12_36  [key=2, style=dotted];
m12_628 -> m12_629  [key=0, style=solid];
m12_628 -> m12_34  [key=2, style=dotted];
m12_629 -> m12_200  [key=2, style=dotted];
m12_629 -> m12_33  [key=2, style=dotted];
m12_629 -> m12_36  [key=2, style=dotted];
m12_629 -> m12_630  [key=0, style=solid];
m12_629 -> m12_518  [key=2, style=dotted];
m12_629 -> m12_519  [key=2, style=dotted];
m12_627 -> m12_274  [key=2, style=dotted];
m12_627 -> m12_628  [key=0, style=solid];
m12_638 -> m12_209  [key=2, style=dotted];
m12_638 -> m12_637  [key=0, style=solid];
m12_619 -> m12_620  [key=0, style=solid];
m12_619 -> m12_513  [key=2, style=dotted];
m12_619 -> m12_624  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_619 -> m12_625  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_624 -> m12_625  [key=0, style=solid];
m12_630 -> m12_631  [key=0, style=solid];
m12_630 -> m12_257  [key=2, style=dotted];
m12_631 -> m12_632  [key=0, style=solid];
m12_631 -> m12_520  [key=2, style=dotted];
m12_631 -> m12_44  [key=2, style=dotted];
m12_632 -> m12_633  [key=0, style=solid];
m12_632 -> m12_205  [key=2, style=dotted];
m12_632 -> m12_521  [key=2, style=dotted];
m12_633 -> m12_634  [key=0, style=solid];
m12_633 -> m12_635  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_633 -> m12_636  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_635 -> m12_636  [key=0, style=solid];
m12_639 -> m12_640  [key=0, style=solid];
m12_639 -> m12_641  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_639 -> m12_642  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_643 -> m12_28  [key=2, style=dotted];
m12_643 -> m12_644  [key=0, style=solid];
m12_640 -> m12_28  [key=2, style=dotted];
m12_640 -> m12_641  [key=0, style=solid];
m12_641 -> m12_28  [key=2, style=dotted];
m12_641 -> m12_642  [key=0, style=solid];
m12_642 -> m12_28  [key=2, style=dotted];
m12_642 -> m12_643  [key=0, style=solid];
m12_622 -> m12_623  [key=0, style=solid];
m12_622 -> m12_514  [key=2, style=dotted];
m12_622 -> m12_625  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_622 -> m12_626  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_626 -> m12_627  [key=0, style=solid];
m12_626 -> m12_198  [key=2, style=dotted];
m12_634 -> m12_635  [key=0, style=solid];
m12_634 -> m12_522  [key=2, style=dotted];
m12_634 -> m12_523  [key=2, style=dotted];
m12_634 -> m12_645  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_634 -> m12_636  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_637 -> m12_638  [key=0, style=solid];
m12_637 -> m12_639  [key=0, style=solid];
m12_625 -> m12_626  [key=0, style=solid];
m12_625 -> m12_515  [key=2, style=dotted];
m12_625 -> m12_516  [key=2, style=dotted];
m12_625 -> m12_517  [key=2, style=dotted];
m12_636 -> m12_637  [key=0, style=solid];
m12_636 -> m12_524  [key=2, style=dotted];
m12_644 -> m12_618  [key=0, style=bold, color=blue];
m12_164 -> m12_28  [key=2, style=dotted];
m12_164 -> m12_165  [key=0, style=solid];
m12_232 -> m12_233  [key=0, style=solid];
m12_232 -> m12_234  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m12_232 -> m12_35  [key=2, style=dotted];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_235  [key=1, style=dashed, color=darkseagreen4, label=market];
m12_233 -> m12_257  [key=2, style=dotted];
m12_234 -> m12_235  [key=0, style=solid];
m12_234 -> m12_258  [key=2, style=dotted];
m12_234 -> m12_44  [key=2, style=dotted];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_200  [key=2, style=dotted];
m12_236 -> m12_232  [key=0, style=bold, color=blue];
m12_236 -> m12_237  [key=0, style=solid];
m12_236 -> m12_109  [key=2, style=dotted];
m12_236 -> m12_34  [key=2, style=dotted];
m12_236 -> m12_111  [key=2, style=dotted];
m12_1078 -> m12_1079  [key=0, style=solid];
m12_1079 -> m12_1080  [key=0, style=solid];
m12_1079 -> m12_1081  [key=2, style=dotted];
m12_1080 -> m12_1078  [key=0, style=bold, color=blue];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_256  [key=2, style=dotted];
m12_225 -> m12_226  [key=0, style=solid];
m12_225 -> m12_227  [key=2, style=dotted];
m12_225 -> m12_256  [key=2, style=dotted];
m12_226 -> m12_224  [key=0, style=bold, color=blue];
m12_226 -> m12_227  [key=0, style=solid];
m12_343 -> m12_30  [key=2, style=dotted];
m12_343 -> m12_344  [key=0, style=solid];
m12_343 -> m12_345  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_343 -> m12_348  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_343 -> m12_349  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_740 -> m12_741  [key=0, style=solid];
m12_742 -> m12_30  [key=2, style=dotted];
m12_742 -> m12_743  [key=0, style=solid];
m12_742 -> m12_745  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_746  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_750  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_751  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_752  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_753  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_754  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_755  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_757  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_763  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_742 -> m12_764  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_743 -> m12_37  [key=2, style=dotted];
m12_743 -> m12_744  [key=0, style=solid];
m12_743 -> m12_745  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_743 -> m12_748  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_743 -> m12_754  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_743 -> m12_756  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_745 -> m12_38  [key=2, style=dotted];
m12_745 -> m12_746  [key=0, style=solid];
m12_745 -> m12_749  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_745 -> m12_761  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_745 -> m12_762  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_750 -> m12_31  [key=2, style=dotted];
m12_750 -> m12_200  [key=2, style=dotted];
m12_750 -> m12_33  [key=2, style=dotted];
m12_750 -> m12_36  [key=2, style=dotted];
m12_750 -> m12_751  [key=0, style=solid];
m12_750 -> m12_34  [key=2, style=dotted];
m12_751 -> m12_200  [key=2, style=dotted];
m12_751 -> m12_33  [key=2, style=dotted];
m12_751 -> m12_36  [key=2, style=dotted];
m12_751 -> m12_752  [key=0, style=solid];
m12_751 -> m12_518  [key=2, style=dotted];
m12_751 -> m12_519  [key=2, style=dotted];
m12_749 -> m12_274  [key=2, style=dotted];
m12_749 -> m12_750  [key=0, style=solid];
m12_761 -> m12_209  [key=2, style=dotted];
m12_761 -> m12_760  [key=0, style=solid];
m12_741 -> m12_742  [key=0, style=solid];
m12_741 -> m12_513  [key=2, style=dotted];
m12_741 -> m12_746  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_741 -> m12_747  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_746 -> m12_747  [key=0, style=solid];
m12_752 -> m12_753  [key=0, style=solid];
m12_752 -> m12_258  [key=2, style=dotted];
m12_752 -> m12_44  [key=2, style=dotted];
m12_753 -> m12_754  [key=0, style=solid];
m12_753 -> m12_257  [key=2, style=dotted];
m12_754 -> m12_755  [key=0, style=solid];
m12_754 -> m12_205  [key=2, style=dotted];
m12_754 -> m12_521  [key=2, style=dotted];
m12_755 -> m12_756  [key=0, style=solid];
m12_755 -> m12_757  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_755 -> m12_758  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_755 -> m12_759  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_757 -> m12_758  [key=0, style=solid];
m12_763 -> m12_28  [key=2, style=dotted];
m12_763 -> m12_764  [key=0, style=solid];
m12_764 -> m12_28  [key=2, style=dotted];
m12_764 -> m12_765  [key=0, style=solid];
m12_762 -> m12_28  [key=2, style=dotted];
m12_762 -> m12_763  [key=0, style=solid];
m12_744 -> m12_745  [key=0, style=solid];
m12_744 -> m12_514  [key=2, style=dotted];
m12_744 -> m12_747  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_744 -> m12_748  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_748 -> m12_749  [key=0, style=solid];
m12_748 -> m12_198  [key=2, style=dotted];
m12_756 -> m12_757  [key=0, style=solid];
m12_756 -> m12_522  [key=2, style=dotted];
m12_756 -> m12_523  [key=2, style=dotted];
m12_756 -> m12_766  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_756 -> m12_759  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_760 -> m12_761  [key=0, style=solid];
m12_760 -> m12_762  [key=0, style=solid];
m12_747 -> m12_748  [key=0, style=solid];
m12_747 -> m12_515  [key=2, style=dotted];
m12_747 -> m12_516  [key=2, style=dotted];
m12_747 -> m12_517  [key=2, style=dotted];
m12_758 -> m12_759  [key=0, style=solid];
m12_759 -> m12_760  [key=0, style=solid];
m12_759 -> m12_524  [key=2, style=dotted];
m12_765 -> m12_740  [key=0, style=bold, color=blue];
m12_131 -> m12_132  [key=0, style=solid];
m12_131 -> m12_128  [key=0, style=bold, color=blue];
m12_134 -> m12_30  [key=2, style=dotted];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_138  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_134 -> m12_141  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_134 -> m12_142  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_134 -> m12_47  [key=2, style=dotted];
m12_135 -> m12_37  [key=2, style=dotted];
m12_135 -> m12_136  [key=0, style=solid];
m12_135 -> m12_137  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_135 -> m12_138  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_135 -> m12_159  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_135 -> m12_168  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_135 -> m12_132  [key=0, style=bold, color=blue];
m12_133 -> m12_147  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_187  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_139  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_148  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_156  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_157  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_164  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_165  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_173  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_174  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_175  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_133 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_162 -> m12_167  [key=1, style=dashed, color=darkseagreen4, label=highPrice];
m12_162 -> m12_163  [key=0, style=solid];
m12_174 -> m12_28  [key=2, style=dotted];
m12_174 -> m12_175  [key=0, style=solid];
m12_175 -> m12_28  [key=2, style=dotted];
m12_175 -> m12_176  [key=0, style=solid];
m12_177 -> m12_179  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m12_177 -> m12_178  [key=0, style=solid];
m12_177 -> m12_214  [key=2, style=dotted];
m12_195 -> m12_196  [key=0, style=solid];
m12_195 -> m12_216  [key=2, style=dotted];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_143  [key=1, style=dashed, color=darkseagreen4, label=leverage];
m12_132 -> m12_180  [key=1, style=dashed, color=darkseagreen4, label=leverage];
m12_200 -> m12_1045  [key=0, style=solid];
m12_200 -> m12_1046  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m12_200 -> m12_1047  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m12_200 -> m12_1048  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m12_200 -> m12_1049  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m12_200 -> m12_1050  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m12_200 -> m12_1051  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m12_200 -> m12_201  [key=0, style=solid];
m12_1045 -> m12_1046  [key=0, style=solid];
m12_1045 -> m12_1047  [key=0, style=solid];
m12_1046 -> m12_1052  [key=0, style=solid];
m12_1046 -> m12_1053  [key=2, style=dotted];
m12_1047 -> m12_1048  [key=0, style=solid];
m12_1047 -> m12_1049  [key=0, style=solid];
m12_1048 -> m12_1052  [key=0, style=solid];
m12_1048 -> m12_1053  [key=2, style=dotted];
m12_1049 -> m12_1050  [key=0, style=solid];
m12_1049 -> m12_1051  [key=0, style=solid];
m12_1050 -> m12_1052  [key=0, style=solid];
m12_1050 -> m12_1053  [key=2, style=dotted];
m12_1051 -> m12_1052  [key=0, style=solid];
m12_1051 -> m12_1054  [key=2, style=dotted];
m12_1051 -> m12_1055  [key=2, style=dotted];
m12_1052 -> m12_200  [key=0, style=bold, color=blue];
m12_296 -> m12_38  [key=2, style=dotted];
m12_296 -> m12_297  [key=0, style=solid];
m12_296 -> m12_300  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_296 -> m12_303  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_291 -> m12_292  [key=0, style=solid];
m12_291 -> m12_297  [key=2, style=dotted];
m12_406 -> m12_407  [key=0, style=solid];
m12_423 -> m12_202  [key=2, style=dotted];
m12_423 -> m12_424  [key=0, style=solid];
m12_423 -> m12_425  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_423 -> m12_426  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_433 -> m12_202  [key=2, style=dotted];
m12_433 -> m12_434  [key=0, style=solid];
m12_433 -> m12_210  [key=2, style=dotted];
m12_439 -> m12_202  [key=2, style=dotted];
m12_439 -> m12_440  [key=0, style=solid];
m12_439 -> m12_210  [key=2, style=dotted];
m12_442 -> m12_202  [key=2, style=dotted];
m12_442 -> m12_443  [key=0, style=solid];
m12_442 -> m12_210  [key=2, style=dotted];
m12_430 -> m12_202  [key=2, style=dotted];
m12_430 -> m12_431  [key=0, style=solid];
m12_430 -> m12_210  [key=2, style=dotted];
m12_410 -> m12_30  [key=2, style=dotted];
m12_410 -> m12_411  [key=0, style=solid];
m12_410 -> m12_414  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_410 -> m12_417  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_410 -> m12_418  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_411 -> m12_37  [key=2, style=dotted];
m12_411 -> m12_412  [key=0, style=solid];
m12_411 -> m12_413  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_411 -> m12_414  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_411 -> m12_431  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_411 -> m12_434  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_411 -> m12_440  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_411 -> m12_443  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_414 -> m12_38  [key=2, style=dotted];
m12_414 -> m12_415  [key=0, style=solid];
m12_414 -> m12_429  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_414 -> m12_431  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_414 -> m12_434  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_414 -> m12_440  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_414 -> m12_443  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_416 -> m12_200  [key=2, style=dotted];
m12_416 -> m12_417  [key=0, style=solid];
m12_417 -> m12_31  [key=2, style=dotted];
m12_417 -> m12_33  [key=2, style=dotted];
m12_417 -> m12_418  [key=0, style=solid];
m12_417 -> m12_34  [key=2, style=dotted];
m12_417 -> m12_111  [key=2, style=dotted];
m12_429 -> m12_209  [key=2, style=dotted];
m12_429 -> m12_430  [key=0, style=solid];
m12_435 -> m12_213  [key=2, style=dotted];
m12_435 -> m12_436  [key=0, style=solid];
m12_441 -> m12_213  [key=2, style=dotted];
m12_441 -> m12_442  [key=0, style=solid];
m12_431 -> m12_211  [key=2, style=dotted];
m12_431 -> m12_432  [key=0, style=solid];
m12_434 -> m12_211  [key=2, style=dotted];
m12_434 -> m12_435  [key=0, style=solid];
m12_440 -> m12_211  [key=2, style=dotted];
m12_440 -> m12_441  [key=0, style=solid];
m12_443 -> m12_211  [key=2, style=dotted];
m12_443 -> m12_444  [key=0, style=solid];
m12_409 -> m12_423  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_409 -> m12_433  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_409 -> m12_439  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_409 -> m12_442  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_409 -> m12_410  [key=0, style=solid];
m12_409 -> m12_424  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m12_422 -> m12_423  [key=0, style=solid];
m12_422 -> m12_201  [key=2, style=dotted];
m12_422 -> m12_44  [key=2, style=dotted];
m12_420 -> m12_423  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_420 -> m12_433  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_420 -> m12_430  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_420 -> m12_422  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_420 -> m12_421  [key=0, style=solid];
m12_420 -> m12_436  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_421 -> m12_423  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_421 -> m12_433  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_421 -> m12_430  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_421 -> m12_422  [key=0, style=solid];
m12_421 -> m12_424  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_421 -> m12_437  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m12_424 -> m12_429  [key=1, style=dashed, color=darkseagreen4, label=fill];
m12_424 -> m12_425  [key=0, style=solid];
m12_424 -> m12_203  [key=2, style=dotted];
m12_425 -> m12_426  [key=0, style=solid];
m12_425 -> m12_204  [key=2, style=dotted];
m12_426 -> m12_427  [key=0, style=solid];
m12_426 -> m12_205  [key=2, style=dotted];
m12_426 -> m12_428  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_432 -> m12_433  [key=0, style=solid];
m12_432 -> m12_212  [key=2, style=dotted];
m12_438 -> m12_439  [key=0, style=solid];
m12_438 -> m12_201  [key=2, style=dotted];
m12_438 -> m12_44  [key=2, style=dotted];
m12_436 -> m12_439  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_436 -> m12_442  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_436 -> m12_438  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_436 -> m12_436  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_436 -> m12_437  [key=0, style=solid];
m12_436 -> m12_40  [key=2, style=dotted];
m12_437 -> m12_439  [key=1, style=dashed, color=darkseagreen4, label=lowPrice];
m12_437 -> m12_442  [key=1, style=dashed, color=darkseagreen4, label=lowPrice];
m12_437 -> m12_438  [key=0, style=solid];
m12_418 -> m12_422  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_418 -> m12_426  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_418 -> m12_438  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_418 -> m12_419  [key=0, style=solid];
m12_412 -> m12_425  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_412 -> m12_413  [key=0, style=solid];
m12_412 -> m12_197  [key=2, style=dotted];
m12_412 -> m12_428  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_413 -> m12_414  [key=0, style=solid];
m12_413 -> m12_198  [key=2, style=dotted];
m12_415 -> m12_416  [key=0, style=solid];
m12_415 -> m12_199  [key=2, style=dotted];
m12_428 -> m12_429  [key=0, style=solid];
m12_428 -> m12_207  [key=2, style=dotted];
m12_428 -> m12_208  [key=2, style=dotted];
m12_444 -> m12_212  [key=2, style=dotted];
m12_444 -> m12_445  [key=0, style=solid];
m12_407 -> m12_409  [key=1, style=dashed, color=darkseagreen4, label=leverage];
m12_407 -> m12_408  [key=0, style=solid];
m12_407 -> m12_419  [key=1, style=dashed, color=darkseagreen4, label=leverage];
m12_408 -> m12_409  [key=0, style=solid];
m12_408 -> m12_415  [key=1, style=dashed, color=darkseagreen4, label=amount];
m12_419 -> m12_420  [key=0, style=solid];
m12_419 -> m12_35  [key=2, style=dotted];
m12_427 -> m12_428  [key=0, style=solid];
m12_427 -> m12_206  [key=2, style=dotted];
m12_445 -> m12_406  [key=0, style=bold, color=blue];
m12_342 -> m12_343  [key=0, style=solid];
m12_519 -> m12_1056  [key=0, style=solid];
m12_1056 -> m12_113  [key=2, style=dotted];
m12_1056 -> m12_1057  [key=0, style=solid];
m12_1056 -> m12_1058  [key=2, style=dotted];
m12_1056 -> m12_1059  [key=2, style=dotted];
m12_1057 -> m12_519  [key=0, style=bold, color=blue];
m12_1014 -> m12_1015  [key=0, style=solid];
m12_1016 -> m12_30  [key=2, style=dotted];
m12_1016 -> m12_1017  [key=0, style=solid];
m12_1016 -> m12_1019  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1020  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1024  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1025  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1026  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1027  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1028  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1029  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1031  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1037  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1039  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1016 -> m12_1040  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_1017 -> m12_37  [key=2, style=dotted];
m12_1017 -> m12_1018  [key=0, style=solid];
m12_1017 -> m12_1019  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_1017 -> m12_1022  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_1017 -> m12_1028  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_1017 -> m12_1030  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_1019 -> m12_38  [key=2, style=dotted];
m12_1019 -> m12_1020  [key=0, style=solid];
m12_1019 -> m12_1023  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_1019 -> m12_1036  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_1019 -> m12_1038  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_1024 -> m12_31  [key=2, style=dotted];
m12_1024 -> m12_200  [key=2, style=dotted];
m12_1024 -> m12_33  [key=2, style=dotted];
m12_1024 -> m12_36  [key=2, style=dotted];
m12_1024 -> m12_1025  [key=0, style=solid];
m12_1024 -> m12_34  [key=2, style=dotted];
m12_1025 -> m12_200  [key=2, style=dotted];
m12_1025 -> m12_33  [key=2, style=dotted];
m12_1025 -> m12_36  [key=2, style=dotted];
m12_1025 -> m12_1026  [key=0, style=solid];
m12_1025 -> m12_518  [key=2, style=dotted];
m12_1025 -> m12_519  [key=2, style=dotted];
m12_1023 -> m12_274  [key=2, style=dotted];
m12_1023 -> m12_1024  [key=0, style=solid];
m12_1015 -> m12_1016  [key=0, style=solid];
m12_1015 -> m12_513  [key=2, style=dotted];
m12_1015 -> m12_1020  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_1015 -> m12_1021  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_1020 -> m12_1021  [key=0, style=solid];
m12_1026 -> m12_1027  [key=0, style=solid];
m12_1026 -> m12_258  [key=2, style=dotted];
m12_1026 -> m12_44  [key=2, style=dotted];
m12_1027 -> m12_1028  [key=0, style=solid];
m12_1027 -> m12_257  [key=2, style=dotted];
m12_1028 -> m12_1029  [key=0, style=solid];
m12_1028 -> m12_205  [key=2, style=dotted];
m12_1028 -> m12_521  [key=2, style=dotted];
m12_1029 -> m12_1030  [key=0, style=solid];
m12_1029 -> m12_1031  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_1029 -> m12_1032  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_1029 -> m12_1033  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_1029 -> m12_1034  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_1029 -> m12_1036  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_1031 -> m12_1032  [key=0, style=solid];
m12_1037 -> m12_1038  [key=0, style=solid];
m12_1039 -> m12_28  [key=2, style=dotted];
m12_1039 -> m12_1040  [key=0, style=solid];
m12_1040 -> m12_28  [key=2, style=dotted];
m12_1040 -> m12_1041  [key=0, style=solid];
m12_1038 -> m12_28  [key=2, style=dotted];
m12_1038 -> m12_1039  [key=0, style=solid];
m12_1018 -> m12_1019  [key=0, style=solid];
m12_1018 -> m12_514  [key=2, style=dotted];
m12_1018 -> m12_1021  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_1018 -> m12_1022  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_1022 -> m12_1023  [key=0, style=solid];
m12_1022 -> m12_198  [key=2, style=dotted];
m12_1030 -> m12_1031  [key=0, style=solid];
m12_1030 -> m12_522  [key=2, style=dotted];
m12_1030 -> m12_523  [key=2, style=dotted];
m12_1030 -> m12_1042  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_1030 -> m12_1033  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_1036 -> m12_1035  [key=0, style=solid];
m12_1036 -> m12_676  [key=2, style=dotted];
m12_1021 -> m12_1022  [key=0, style=solid];
m12_1021 -> m12_515  [key=2, style=dotted];
m12_1021 -> m12_516  [key=2, style=dotted];
m12_1021 -> m12_517  [key=2, style=dotted];
m12_1032 -> m12_1033  [key=0, style=solid];
m12_1033 -> m12_1034  [key=0, style=solid];
m12_1033 -> m12_524  [key=2, style=dotted];
m12_1033 -> m12_1035  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_1034 -> m12_1036  [key=1, style=dashed, color=darkseagreen4, label=portfolioModel];
m12_1034 -> m12_1035  [key=0, style=solid];
m12_1035 -> m12_1037  [key=0, style=solid];
m12_1035 -> m12_1036  [key=0, style=solid];
m12_1041 -> m12_1014  [key=0, style=bold, color=blue];
m12_361 -> m12_362  [key=0, style=solid];
m12_374 -> m12_202  [key=2, style=dotted];
m12_374 -> m12_375  [key=0, style=solid];
m12_374 -> m12_360  [key=2, style=dotted];
m12_381 -> m12_202  [key=2, style=dotted];
m12_381 -> m12_382  [key=0, style=solid];
m12_381 -> m12_360  [key=2, style=dotted];
m12_363 -> m12_30  [key=2, style=dotted];
m12_363 -> m12_364  [key=0, style=solid];
m12_363 -> m12_365  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_363 -> m12_367  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_363 -> m12_368  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_364 -> m12_37  [key=2, style=dotted];
m12_364 -> m12_365  [key=0, style=solid];
m12_365 -> m12_38  [key=2, style=dotted];
m12_365 -> m12_366  [key=0, style=solid];
m12_365 -> m12_371  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_372  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_376  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_378  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_379  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_383  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_385  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_386  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_388  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_389  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_390  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_394  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_395  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_365 -> m12_396  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_367 -> m12_200  [key=2, style=dotted];
m12_367 -> m12_33  [key=2, style=dotted];
m12_367 -> m12_36  [key=2, style=dotted];
m12_367 -> m12_368  [key=0, style=solid];
m12_367 -> m12_399  [key=2, style=dotted];
m12_367 -> m12_34  [key=2, style=dotted];
m12_366 -> m12_274  [key=2, style=dotted];
m12_366 -> m12_367  [key=0, style=solid];
m12_376 -> m12_209  [key=2, style=dotted];
m12_376 -> m12_377  [key=0, style=solid];
m12_383 -> m12_209  [key=2, style=dotted];
m12_383 -> m12_384  [key=0, style=solid];
m12_375 -> m12_275  [key=2, style=dotted];
m12_375 -> m12_376  [key=0, style=solid];
m12_382 -> m12_275  [key=2, style=dotted];
m12_382 -> m12_383  [key=0, style=solid];
m12_392 -> m12_213  [key=2, style=dotted];
m12_392 -> m12_393  [key=0, style=solid];
m12_368 -> m12_374  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_368 -> m12_381  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_368 -> m12_369  [key=0, style=solid];
m12_368 -> m12_370  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_368 -> m12_377  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_368 -> m12_384  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_373 -> m12_374  [key=0, style=solid];
m12_373 -> m12_375  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m12_373 -> m12_402  [key=2, style=dotted];
m12_373 -> m12_380  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m12_380 -> m12_381  [key=0, style=solid];
m12_380 -> m12_382  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m12_380 -> m12_380  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m12_380 -> m12_40  [key=2, style=dotted];
m12_380 -> m12_387  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m12_362 -> m12_363  [key=0, style=solid];
m12_362 -> m12_367  [key=1, style=dashed, color=darkseagreen4, label=securityExchangeHours];
m12_362 -> m12_398  [key=2, style=dotted];
m12_362 -> m12_391  [key=1, style=dashed, color=darkseagreen4, label=securityExchangeHours];
m12_362 -> m12_393  [key=1, style=dashed, color=darkseagreen4, label=securityExchangeHours];
m12_371 -> m12_28  [key=2, style=dotted];
m12_371 -> m12_372  [key=0, style=solid];
m12_372 -> m12_28  [key=2, style=dotted];
m12_372 -> m12_373  [key=0, style=solid];
m12_378 -> m12_28  [key=2, style=dotted];
m12_378 -> m12_379  [key=0, style=solid];
m12_379 -> m12_28  [key=2, style=dotted];
m12_379 -> m12_380  [key=0, style=solid];
m12_385 -> m12_28  [key=2, style=dotted];
m12_385 -> m12_386  [key=0, style=solid];
m12_386 -> m12_28  [key=2, style=dotted];
m12_386 -> m12_387  [key=0, style=solid];
m12_389 -> m12_28  [key=2, style=dotted];
m12_389 -> m12_390  [key=0, style=solid];
m12_390 -> m12_28  [key=2, style=dotted];
m12_390 -> m12_391  [key=0, style=solid];
m12_395 -> m12_28  [key=2, style=dotted];
m12_395 -> m12_396  [key=0, style=solid];
m12_396 -> m12_28  [key=2, style=dotted];
m12_396 -> m12_397  [key=0, style=solid];
m12_370 -> m12_28  [key=2, style=dotted];
m12_370 -> m12_371  [key=0, style=solid];
m12_377 -> m12_28  [key=2, style=dotted];
m12_377 -> m12_378  [key=0, style=solid];
m12_384 -> m12_28  [key=2, style=dotted];
m12_384 -> m12_385  [key=0, style=solid];
m12_388 -> m12_389  [key=0, style=solid];
m12_388 -> m12_403  [key=2, style=dotted];
m12_394 -> m12_395  [key=0, style=solid];
m12_394 -> m12_403  [key=2, style=dotted];
m12_391 -> m12_392  [key=0, style=solid];
m12_391 -> m12_404  [key=2, style=dotted];
m12_391 -> m12_393  [key=1, style=dashed, color=darkseagreen4, label=marketOpen];
m12_393 -> m12_394  [key=0, style=solid];
m12_393 -> m12_393  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m12_393 -> m12_40  [key=2, style=dotted];
m12_393 -> m12_405  [key=2, style=dotted];
m12_393 -> m12_41  [key=2, style=dotted];
m12_369 -> m12_370  [key=0, style=solid];
m12_369 -> m12_400  [key=2, style=dotted];
m12_369 -> m12_401  [key=2, style=dotted];
m12_387 -> m12_388  [key=0, style=solid];
m12_387 -> m12_391  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m12_387 -> m12_393  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m12_387 -> m12_40  [key=2, style=dotted];
m12_387 -> m12_387  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m12_397 -> m12_361  [key=0, style=bold, color=blue];
m12_295 -> m12_37  [key=2, style=dotted];
m12_295 -> m12_296  [key=0, style=solid];
m12_295 -> m12_298  [key=0, style=solid];
m12_295 -> m12_299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.LookupEventArgs"];
m12_295 -> m12_301  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.BaseData>"];
m12_295 -> m12_279  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.ToolBox.IQFeed.LookupEventArgs e"];
m12_295 -> m12_284  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.BaseData> current"];
m12_298 -> m12_31  [key=2, style=dotted];
m12_298 -> m12_200  [key=2, style=dotted];
m12_298 -> m12_33  [key=2, style=dotted];
m12_298 -> m12_291  [key=2, style=dotted];
m12_298 -> m12_292  [key=2, style=dotted];
m12_298 -> m12_36  [key=2, style=dotted];
m12_298 -> m12_299  [key=0, style=solid];
m12_300 -> m12_209  [key=2, style=dotted];
m12_300 -> m12_301  [key=0, style=solid];
m12_300 -> m12_302  [key=0, style=solid];
m12_303 -> m12_209  [key=2, style=dotted];
m12_303 -> m12_304  [key=0, style=solid];
m12_303 -> m12_305  [key=0, style=solid];
m12_303 -> m12_307  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.LookupEventArgs"];
m12_303 -> m12_309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.LookupEventArgs"];
m12_303 -> m12_311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_303 -> m12_313  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.LookupEventArgs"];
m12_303 -> m12_316  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_303 -> m12_319  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_303 -> m12_321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.LookupEventArgs"];
m12_303 -> m12_324  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_303 -> m12_327  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.HistoryRequest"];
m12_303 -> m12_338  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.LookupEventArgs"];
m12_299 -> m12_275  [key=2, style=dotted];
m12_299 -> m12_300  [key=0, style=solid];
m12_299 -> m12_303  [key=2, style=dotted];
m12_299 -> m12_301  [key=1, style=dashed, color=darkseagreen4, label=data];
m12_299 -> m12_46  [key=3, color=darkorchid, style=bold, label="Local variable QuantConnect.Data.BaseData data"];
m12_302 -> m12_275  [key=2, style=dotted];
m12_302 -> m12_303  [key=0, style=solid];
m12_302 -> m12_295  [key=0, style=bold, color=blue];
m12_301 -> m12_28  [key=2, style=dotted];
m12_301 -> m12_302  [key=0, style=solid];
m12_301 -> m12_304  [key=2, style=dotted];
m12_305 -> m12_293  [key=0, style=bold, color=blue];
m12_305 -> m12_306  [key=0, style=solid];
m12_305 -> m12_310  [key=1, style=dashed, color=darkseagreen4, label=isEquity];
m12_305 -> m12_317  [key=1, style=dashed, color=darkseagreen4, label=isEquity];
m12_305 -> m12_325  [key=1, style=dashed, color=darkseagreen4, label=isEquity];
m12_1090 -> m12_1091  [key=0, style=solid];
m12_1091 -> m12_1092  [key=0, style=solid];
m12_1091 -> m12_1081  [key=2, style=dotted];
m12_1092 -> m12_1090  [key=0, style=bold, color=blue];
m12_306 -> m12_307  [key=0, style=solid];
m12_306 -> m12_311  [key=1, style=dashed, color=darkseagreen4, label=scale];
m12_306 -> m12_319  [key=1, style=dashed, color=darkseagreen4, label=scale];
m12_306 -> m12_327  [key=1, style=dashed, color=darkseagreen4, label=scale];
m12_307 -> m12_30  [key=2, style=dotted];
m12_307 -> m12_308  [key=0, style=solid];
m12_307 -> m12_309  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_307 -> m12_311  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_307 -> m12_315  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_307 -> m12_312  [key=0, style=solid];
m12_307 -> m12_320  [key=0, style=solid];
m12_307 -> m12_328  [key=0, style=solid];
m12_308 -> m12_37  [key=2, style=dotted];
m12_308 -> m12_309  [key=0, style=solid];
m12_309 -> m12_38  [key=2, style=dotted];
m12_309 -> m12_310  [key=0, style=solid];
m12_309 -> m12_313  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_309 -> m12_314  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_309 -> m12_311  [key=1, style=dashed, color=darkseagreen4, label=t];
m12_311 -> m12_31  [key=2, style=dotted];
m12_311 -> m12_200  [key=2, style=dotted];
m12_311 -> m12_33  [key=2, style=dotted];
m12_311 -> m12_36  [key=2, style=dotted];
m12_311 -> m12_312  [key=0, style=solid];
m12_311 -> m12_34  [key=2, style=dotted];
m12_311 -> m12_341  [key=0, style=solid];
m12_311 -> m12_197  [key=2, style=dotted];
m12_310 -> m12_274  [key=2, style=dotted];
m12_310 -> m12_311  [key=0, style=solid];
m12_310 -> m12_196  [key=2, style=dotted];
m12_313 -> m12_209  [key=2, style=dotted];
m12_313 -> m12_314  [key=0, style=solid];
m12_313 -> m12_316  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_313 -> m12_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m12_312 -> m12_275  [key=2, style=dotted];
m12_312 -> m12_313  [key=0, style=solid];
m12_315 -> m12_28  [key=2, style=dotted];
m12_315 -> m12_316  [key=0, style=solid];
m12_315 -> m12_341  [key=0, style=solid];
m12_314 -> m12_28  [key=2, style=dotted];
m12_314 -> m12_315  [key=0, style=solid];
m12_314 -> m12_316  [key=0, style=solid];
m12_316 -> m12_306  [key=0, style=bold, color=blue];
m12_316 -> m12_317  [key=0, style=solid];
m12_316 -> m12_342  [key=2, style=dotted];
m12_316 -> m12_318  [key=1, style=dashed, color=darkseagreen4, label=istartTime];
m12_316 -> m12_319  [key=1, style=dashed, color=darkseagreen4, label=istartTime];
m12_199 -> m12_200  [key=0, style=solid];
m12_199 -> m12_201  [key=0, style=solid];
m12_292 -> m12_279  [key=0, style=bold, color=blue];
m12_1060 -> m12_1061  [key=0, style=solid];
m12_1061 -> m12_204  [key=0, style=bold, color=blue];
m12_1064 -> m12_1066  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_1064 -> m12_1065  [key=0, style=solid];
m12_1066 -> m12_1067  [key=0, style=solid];
m12_1066 -> m12_1069  [key=2, style=dotted];
m12_1065 -> m12_1066  [key=0, style=solid];
m12_1067 -> m12_1068  [key=0, style=solid];
m12_1068 -> m12_1064  [key=0, style=bold, color=blue];
m12_528 -> m12_529  [key=0, style=solid];
m12_530 -> m12_30  [key=2, style=dotted];
m12_530 -> m12_531  [key=0, style=solid];
m12_530 -> m12_533  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_534  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_538  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_539  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_540  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_541  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_542  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_543  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_545  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_549  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_530 -> m12_553  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_531 -> m12_37  [key=2, style=dotted];
m12_531 -> m12_532  [key=0, style=solid];
m12_531 -> m12_533  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_531 -> m12_536  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_531 -> m12_542  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_531 -> m12_544  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_533 -> m12_38  [key=2, style=dotted];
m12_533 -> m12_534  [key=0, style=solid];
m12_533 -> m12_537  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_533 -> m12_548  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_533 -> m12_550  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_538 -> m12_31  [key=2, style=dotted];
m12_538 -> m12_200  [key=2, style=dotted];
m12_538 -> m12_33  [key=2, style=dotted];
m12_538 -> m12_36  [key=2, style=dotted];
m12_538 -> m12_539  [key=0, style=solid];
m12_538 -> m12_34  [key=2, style=dotted];
m12_539 -> m12_200  [key=2, style=dotted];
m12_539 -> m12_33  [key=2, style=dotted];
m12_539 -> m12_36  [key=2, style=dotted];
m12_539 -> m12_540  [key=0, style=solid];
m12_539 -> m12_518  [key=2, style=dotted];
m12_539 -> m12_519  [key=2, style=dotted];
m12_537 -> m12_274  [key=2, style=dotted];
m12_537 -> m12_538  [key=0, style=solid];
m12_548 -> m12_209  [key=2, style=dotted];
m12_548 -> m12_547  [key=0, style=solid];
m12_529 -> m12_530  [key=0, style=solid];
m12_529 -> m12_513  [key=2, style=dotted];
m12_529 -> m12_534  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_529 -> m12_535  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_534 -> m12_535  [key=0, style=solid];
m12_540 -> m12_541  [key=0, style=solid];
m12_540 -> m12_257  [key=2, style=dotted];
m12_541 -> m12_542  [key=0, style=solid];
m12_541 -> m12_520  [key=2, style=dotted];
m12_541 -> m12_44  [key=2, style=dotted];
m12_542 -> m12_543  [key=0, style=solid];
m12_542 -> m12_205  [key=2, style=dotted];
m12_542 -> m12_521  [key=2, style=dotted];
m12_543 -> m12_544  [key=0, style=solid];
m12_543 -> m12_545  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_543 -> m12_546  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_545 -> m12_546  [key=0, style=solid];
m12_549 -> m12_550  [key=0, style=solid];
m12_549 -> m12_551  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_549 -> m12_552  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_553 -> m12_28  [key=2, style=dotted];
m12_553 -> m12_554  [key=0, style=solid];
m12_550 -> m12_28  [key=2, style=dotted];
m12_550 -> m12_551  [key=0, style=solid];
m12_551 -> m12_28  [key=2, style=dotted];
m12_551 -> m12_552  [key=0, style=solid];
m12_552 -> m12_28  [key=2, style=dotted];
m12_552 -> m12_553  [key=0, style=solid];
m12_532 -> m12_533  [key=0, style=solid];
m12_532 -> m12_514  [key=2, style=dotted];
m12_532 -> m12_535  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_532 -> m12_536  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_536 -> m12_537  [key=0, style=solid];
m12_536 -> m12_198  [key=2, style=dotted];
m12_544 -> m12_545  [key=0, style=solid];
m12_544 -> m12_522  [key=2, style=dotted];
m12_544 -> m12_523  [key=2, style=dotted];
m12_544 -> m12_555  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_544 -> m12_546  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_547 -> m12_548  [key=0, style=solid];
m12_547 -> m12_549  [key=0, style=solid];
m12_535 -> m12_536  [key=0, style=solid];
m12_535 -> m12_515  [key=2, style=dotted];
m12_535 -> m12_516  [key=2, style=dotted];
m12_535 -> m12_517  [key=2, style=dotted];
m12_546 -> m12_547  [key=0, style=solid];
m12_546 -> m12_524  [key=2, style=dotted];
m12_554 -> m12_528  [key=0, style=bold, color=blue];
m12_352 -> m12_202  [key=2, style=dotted];
m12_352 -> m12_353  [key=0, style=solid];
m12_352 -> m12_360  [key=2, style=dotted];
m12_344 -> m12_37  [key=2, style=dotted];
m12_344 -> m12_345  [key=0, style=solid];
m12_344 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_344 -> m12_225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"];
m12_345 -> m12_38  [key=2, style=dotted];
m12_345 -> m12_346  [key=0, style=solid];
m12_345 -> m12_347  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_345 -> m12_348  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_345 -> m12_351  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_345 -> m12_354  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_345 -> m12_356  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_345 -> m12_357  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_345 -> m12_358  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_345 -> m12_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_143  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_170  [key=1, style=dashed, color=red, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_180  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_189  [key=1, style=dashed, color=red, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_190  [key=1, style=dashed, color=red, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_345 -> m12_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.Level1Port"];
m12_348 -> m12_200  [key=2, style=dotted];
m12_348 -> m12_36  [key=2, style=dotted];
m12_348 -> m12_349  [key=0, style=solid];
m12_348 -> m12_109  [key=2, style=dotted];
m12_348 -> m12_34  [key=2, style=dotted];
m12_346 -> m12_274  [key=2, style=dotted];
m12_346 -> m12_347  [key=0, style=solid];
m12_346 -> m12_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_237  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_253  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_282  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_286  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_288  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_346 -> m12_299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler.HistoryPort"];
m12_354 -> m12_209  [key=2, style=dotted];
m12_354 -> m12_355  [key=0, style=solid];
m12_353 -> m12_275  [key=2, style=dotted];
m12_353 -> m12_354  [key=0, style=solid];
m12_349 -> m12_352  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_349 -> m12_350  [key=0, style=solid];
m12_349 -> m12_355  [key=1, style=dashed, color=darkseagreen4, label=security];
m12_351 -> m12_352  [key=0, style=solid];
m12_351 -> m12_28  [key=2, style=dotted];
m12_356 -> m12_28  [key=2, style=dotted];
m12_356 -> m12_357  [key=0, style=solid];
m12_357 -> m12_28  [key=2, style=dotted];
m12_357 -> m12_358  [key=0, style=solid];
m12_358 -> m12_28  [key=2, style=dotted];
m12_358 -> m12_359  [key=0, style=solid];
m12_350 -> m12_28  [key=2, style=dotted];
m12_350 -> m12_351  [key=0, style=solid];
m12_355 -> m12_28  [key=2, style=dotted];
m12_355 -> m12_356  [key=0, style=solid];
m12_347 -> m12_348  [key=0, style=solid];
m12_347 -> m12_256  [key=2, style=dotted];
m12_359 -> m12_342  [key=0, style=bold, color=blue];
m12_860 -> m12_861  [key=0, style=solid];
m12_862 -> m12_30  [key=2, style=dotted];
m12_862 -> m12_863  [key=0, style=solid];
m12_862 -> m12_865  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_862 -> m12_867  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_862 -> m12_870  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_862 -> m12_871  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_862 -> m12_872  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_862 -> m12_873  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_862 -> m12_874  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_862 -> m12_875  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_862 -> m12_883  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_863 -> m12_37  [key=2, style=dotted];
m12_863 -> m12_864  [key=0, style=solid];
m12_863 -> m12_865  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_863 -> m12_868  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_863 -> m12_881  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_863 -> m12_889  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_865 -> m12_38  [key=2, style=dotted];
m12_865 -> m12_866  [key=0, style=solid];
m12_865 -> m12_869  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_865 -> m12_881  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_865 -> m12_889  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_870 -> m12_31  [key=2, style=dotted];
m12_870 -> m12_200  [key=2, style=dotted];
m12_870 -> m12_33  [key=2, style=dotted];
m12_870 -> m12_36  [key=2, style=dotted];
m12_870 -> m12_871  [key=0, style=solid];
m12_870 -> m12_34  [key=2, style=dotted];
m12_871 -> m12_200  [key=2, style=dotted];
m12_871 -> m12_33  [key=2, style=dotted];
m12_871 -> m12_36  [key=2, style=dotted];
m12_871 -> m12_872  [key=0, style=solid];
m12_871 -> m12_518  [key=2, style=dotted];
m12_871 -> m12_519  [key=2, style=dotted];
m12_869 -> m12_274  [key=2, style=dotted];
m12_869 -> m12_870  [key=0, style=solid];
m12_890 -> m12_213  [key=2, style=dotted];
m12_890 -> m12_891  [key=0, style=solid];
m12_881 -> m12_211  [key=2, style=dotted];
m12_881 -> m12_882  [key=0, style=solid];
m12_889 -> m12_211  [key=2, style=dotted];
m12_889 -> m12_890  [key=0, style=solid];
m12_861 -> m12_862  [key=0, style=solid];
m12_861 -> m12_513  [key=2, style=dotted];
m12_861 -> m12_867  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_867 -> m12_868  [key=0, style=solid];
m12_872 -> m12_873  [key=0, style=solid];
m12_872 -> m12_258  [key=2, style=dotted];
m12_872 -> m12_44  [key=2, style=dotted];
m12_873 -> m12_874  [key=0, style=solid];
m12_873 -> m12_257  [key=2, style=dotted];
m12_874 -> m12_875  [key=0, style=solid];
m12_874 -> m12_878  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_874 -> m12_886  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_875 -> m12_876  [key=0, style=solid];
m12_883 -> m12_884  [key=0, style=solid];
m12_883 -> m12_258  [key=2, style=dotted];
m12_883 -> m12_44  [key=2, style=dotted];
m12_864 -> m12_865  [key=0, style=solid];
m12_864 -> m12_197  [key=2, style=dotted];
m12_864 -> m12_868  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_864 -> m12_877  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_864 -> m12_880  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_864 -> m12_885  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_864 -> m12_888  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_868 -> m12_869  [key=0, style=solid];
m12_868 -> m12_198  [key=2, style=dotted];
m12_866 -> m12_867  [key=0, style=solid];
m12_866 -> m12_876  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_866 -> m12_884  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_882 -> m12_212  [key=2, style=dotted];
m12_882 -> m12_883  [key=0, style=solid];
m12_880 -> m12_881  [key=0, style=solid];
m12_880 -> m12_207  [key=2, style=dotted];
m12_880 -> m12_208  [key=2, style=dotted];
m12_876 -> m12_881  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_876 -> m12_210  [key=2, style=dotted];
m12_876 -> m12_877  [key=0, style=solid];
m12_876 -> m12_859  [key=2, style=dotted];
m12_876 -> m12_878  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_888 -> m12_889  [key=0, style=solid];
m12_888 -> m12_207  [key=2, style=dotted];
m12_888 -> m12_208  [key=2, style=dotted];
m12_884 -> m12_889  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_884 -> m12_210  [key=2, style=dotted];
m12_884 -> m12_885  [key=0, style=solid];
m12_884 -> m12_859  [key=2, style=dotted];
m12_884 -> m12_886  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_878 -> m12_880  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_878 -> m12_205  [key=2, style=dotted];
m12_878 -> m12_879  [key=0, style=solid];
m12_886 -> m12_888  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_886 -> m12_205  [key=2, style=dotted];
m12_886 -> m12_887  [key=0, style=solid];
m12_877 -> m12_204  [key=2, style=dotted];
m12_877 -> m12_878  [key=0, style=solid];
m12_885 -> m12_204  [key=2, style=dotted];
m12_885 -> m12_886  [key=0, style=solid];
m12_879 -> m12_880  [key=0, style=solid];
m12_879 -> m12_206  [key=2, style=dotted];
m12_887 -> m12_888  [key=0, style=solid];
m12_887 -> m12_206  [key=2, style=dotted];
m12_891 -> m12_860  [key=0, style=bold, color=blue];
m12_827 -> m12_828  [key=0, style=solid];
m12_829 -> m12_30  [key=2, style=dotted];
m12_829 -> m12_830  [key=0, style=solid];
m12_829 -> m12_832  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_829 -> m12_834  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_829 -> m12_837  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_829 -> m12_838  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_829 -> m12_839  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_829 -> m12_840  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_829 -> m12_841  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_829 -> m12_842  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_829 -> m12_850  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_830 -> m12_37  [key=2, style=dotted];
m12_830 -> m12_831  [key=0, style=solid];
m12_830 -> m12_832  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_830 -> m12_835  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_830 -> m12_848  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_830 -> m12_856  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_832 -> m12_38  [key=2, style=dotted];
m12_832 -> m12_833  [key=0, style=solid];
m12_832 -> m12_836  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_832 -> m12_848  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_832 -> m12_856  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_837 -> m12_31  [key=2, style=dotted];
m12_837 -> m12_200  [key=2, style=dotted];
m12_837 -> m12_33  [key=2, style=dotted];
m12_837 -> m12_36  [key=2, style=dotted];
m12_837 -> m12_838  [key=0, style=solid];
m12_837 -> m12_34  [key=2, style=dotted];
m12_838 -> m12_200  [key=2, style=dotted];
m12_838 -> m12_33  [key=2, style=dotted];
m12_838 -> m12_36  [key=2, style=dotted];
m12_838 -> m12_839  [key=0, style=solid];
m12_838 -> m12_518  [key=2, style=dotted];
m12_838 -> m12_519  [key=2, style=dotted];
m12_836 -> m12_274  [key=2, style=dotted];
m12_836 -> m12_837  [key=0, style=solid];
m12_857 -> m12_213  [key=2, style=dotted];
m12_857 -> m12_858  [key=0, style=solid];
m12_848 -> m12_211  [key=2, style=dotted];
m12_848 -> m12_849  [key=0, style=solid];
m12_856 -> m12_211  [key=2, style=dotted];
m12_856 -> m12_857  [key=0, style=solid];
m12_828 -> m12_829  [key=0, style=solid];
m12_828 -> m12_513  [key=2, style=dotted];
m12_828 -> m12_834  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_834 -> m12_835  [key=0, style=solid];
m12_839 -> m12_840  [key=0, style=solid];
m12_839 -> m12_258  [key=2, style=dotted];
m12_839 -> m12_44  [key=2, style=dotted];
m12_840 -> m12_841  [key=0, style=solid];
m12_840 -> m12_257  [key=2, style=dotted];
m12_841 -> m12_842  [key=0, style=solid];
m12_841 -> m12_845  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_841 -> m12_853  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_842 -> m12_843  [key=0, style=solid];
m12_850 -> m12_851  [key=0, style=solid];
m12_850 -> m12_258  [key=2, style=dotted];
m12_850 -> m12_44  [key=2, style=dotted];
m12_831 -> m12_832  [key=0, style=solid];
m12_831 -> m12_197  [key=2, style=dotted];
m12_831 -> m12_835  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_831 -> m12_844  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_831 -> m12_847  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_831 -> m12_852  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_831 -> m12_855  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m12_835 -> m12_836  [key=0, style=solid];
m12_835 -> m12_198  [key=2, style=dotted];
m12_833 -> m12_834  [key=0, style=solid];
m12_833 -> m12_843  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_833 -> m12_851  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_849 -> m12_212  [key=2, style=dotted];
m12_849 -> m12_850  [key=0, style=solid];
m12_847 -> m12_848  [key=0, style=solid];
m12_847 -> m12_207  [key=2, style=dotted];
m12_847 -> m12_208  [key=2, style=dotted];
m12_843 -> m12_848  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_843 -> m12_210  [key=2, style=dotted];
m12_843 -> m12_844  [key=0, style=solid];
m12_843 -> m12_859  [key=2, style=dotted];
m12_843 -> m12_845  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_855 -> m12_856  [key=0, style=solid];
m12_855 -> m12_207  [key=2, style=dotted];
m12_855 -> m12_208  [key=2, style=dotted];
m12_851 -> m12_856  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_851 -> m12_210  [key=2, style=dotted];
m12_851 -> m12_852  [key=0, style=solid];
m12_851 -> m12_859  [key=2, style=dotted];
m12_851 -> m12_853  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_845 -> m12_847  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_845 -> m12_205  [key=2, style=dotted];
m12_845 -> m12_846  [key=0, style=solid];
m12_853 -> m12_855  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_853 -> m12_205  [key=2, style=dotted];
m12_853 -> m12_854  [key=0, style=solid];
m12_844 -> m12_204  [key=2, style=dotted];
m12_844 -> m12_845  [key=0, style=solid];
m12_852 -> m12_204  [key=2, style=dotted];
m12_852 -> m12_853  [key=0, style=solid];
m12_846 -> m12_847  [key=0, style=solid];
m12_846 -> m12_206  [key=2, style=dotted];
m12_854 -> m12_855  [key=0, style=solid];
m12_854 -> m12_206  [key=2, style=dotted];
m12_858 -> m12_827  [key=0, style=bold, color=blue];
m12_952 -> m12_953  [key=0, style=solid];
m12_954 -> m12_30  [key=2, style=dotted];
m12_954 -> m12_955  [key=0, style=solid];
m12_954 -> m12_957  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_958  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_962  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_963  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_964  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_965  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_966  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_967  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_969  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_975  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_977  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_954 -> m12_978  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_955 -> m12_37  [key=2, style=dotted];
m12_955 -> m12_956  [key=0, style=solid];
m12_955 -> m12_957  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_955 -> m12_960  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_955 -> m12_966  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_955 -> m12_968  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_957 -> m12_38  [key=2, style=dotted];
m12_957 -> m12_958  [key=0, style=solid];
m12_957 -> m12_961  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_957 -> m12_974  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_957 -> m12_976  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_962 -> m12_31  [key=2, style=dotted];
m12_962 -> m12_200  [key=2, style=dotted];
m12_962 -> m12_33  [key=2, style=dotted];
m12_962 -> m12_36  [key=2, style=dotted];
m12_962 -> m12_963  [key=0, style=solid];
m12_962 -> m12_34  [key=2, style=dotted];
m12_963 -> m12_200  [key=2, style=dotted];
m12_963 -> m12_33  [key=2, style=dotted];
m12_963 -> m12_36  [key=2, style=dotted];
m12_963 -> m12_964  [key=0, style=solid];
m12_963 -> m12_518  [key=2, style=dotted];
m12_963 -> m12_519  [key=2, style=dotted];
m12_961 -> m12_274  [key=2, style=dotted];
m12_961 -> m12_962  [key=0, style=solid];
m12_953 -> m12_954  [key=0, style=solid];
m12_953 -> m12_513  [key=2, style=dotted];
m12_953 -> m12_958  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_953 -> m12_959  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_958 -> m12_959  [key=0, style=solid];
m12_964 -> m12_965  [key=0, style=solid];
m12_964 -> m12_258  [key=2, style=dotted];
m12_964 -> m12_44  [key=2, style=dotted];
m12_965 -> m12_966  [key=0, style=solid];
m12_965 -> m12_257  [key=2, style=dotted];
m12_966 -> m12_967  [key=0, style=solid];
m12_966 -> m12_205  [key=2, style=dotted];
m12_966 -> m12_521  [key=2, style=dotted];
m12_967 -> m12_968  [key=0, style=solid];
m12_967 -> m12_969  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_967 -> m12_970  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_967 -> m12_971  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_967 -> m12_972  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_967 -> m12_974  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_969 -> m12_970  [key=0, style=solid];
m12_975 -> m12_976  [key=0, style=solid];
m12_977 -> m12_28  [key=2, style=dotted];
m12_977 -> m12_978  [key=0, style=solid];
m12_978 -> m12_28  [key=2, style=dotted];
m12_978 -> m12_979  [key=0, style=solid];
m12_976 -> m12_28  [key=2, style=dotted];
m12_976 -> m12_977  [key=0, style=solid];
m12_956 -> m12_957  [key=0, style=solid];
m12_956 -> m12_514  [key=2, style=dotted];
m12_956 -> m12_959  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_956 -> m12_960  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_960 -> m12_961  [key=0, style=solid];
m12_960 -> m12_198  [key=2, style=dotted];
m12_968 -> m12_969  [key=0, style=solid];
m12_968 -> m12_522  [key=2, style=dotted];
m12_968 -> m12_523  [key=2, style=dotted];
m12_968 -> m12_980  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_968 -> m12_971  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_974 -> m12_973  [key=0, style=solid];
m12_974 -> m12_676  [key=2, style=dotted];
m12_959 -> m12_960  [key=0, style=solid];
m12_959 -> m12_515  [key=2, style=dotted];
m12_959 -> m12_516  [key=2, style=dotted];
m12_959 -> m12_517  [key=2, style=dotted];
m12_970 -> m12_971  [key=0, style=solid];
m12_971 -> m12_972  [key=0, style=solid];
m12_971 -> m12_524  [key=2, style=dotted];
m12_971 -> m12_973  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_972 -> m12_974  [key=1, style=dashed, color=darkseagreen4, label=portfolioModel];
m12_972 -> m12_973  [key=0, style=solid];
m12_973 -> m12_975  [key=0, style=solid];
m12_973 -> m12_974  [key=0, style=solid];
m12_979 -> m12_952  [key=0, style=bold, color=blue];
m12_710 -> m12_711  [key=0, style=solid];
m12_712 -> m12_30  [key=2, style=dotted];
m12_712 -> m12_713  [key=0, style=solid];
m12_712 -> m12_715  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_712 -> m12_716  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_712 -> m12_720  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_712 -> m12_721  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_712 -> m12_722  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_712 -> m12_723  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_712 -> m12_724  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_712 -> m12_726  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_712 -> m12_731  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_712 -> m12_735  [key=1, style=dashed, color=darkseagreen4, label=securities];
m12_713 -> m12_37  [key=2, style=dotted];
m12_713 -> m12_714  [key=0, style=solid];
m12_713 -> m12_715  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_713 -> m12_718  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_713 -> m12_723  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_713 -> m12_725  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m12_715 -> m12_38  [key=2, style=dotted];
m12_715 -> m12_716  [key=0, style=solid];
m12_715 -> m12_719  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_715 -> m12_730  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_715 -> m12_732  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m12_720 -> m12_31  [key=2, style=dotted];
m12_720 -> m12_200  [key=2, style=dotted];
m12_720 -> m12_33  [key=2, style=dotted];
m12_720 -> m12_36  [key=2, style=dotted];
m12_720 -> m12_721  [key=0, style=solid];
m12_720 -> m12_34  [key=2, style=dotted];
m12_721 -> m12_200  [key=2, style=dotted];
m12_721 -> m12_33  [key=2, style=dotted];
m12_721 -> m12_36  [key=2, style=dotted];
m12_721 -> m12_722  [key=0, style=solid];
m12_721 -> m12_518  [key=2, style=dotted];
m12_721 -> m12_519  [key=2, style=dotted];
m12_719 -> m12_274  [key=2, style=dotted];
m12_719 -> m12_720  [key=0, style=solid];
m12_711 -> m12_712  [key=0, style=solid];
m12_711 -> m12_513  [key=2, style=dotted];
m12_711 -> m12_716  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_711 -> m12_717  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m12_716 -> m12_717  [key=0, style=solid];
m12_722 -> m12_723  [key=0, style=solid];
m12_722 -> m12_257  [key=2, style=dotted];
m12_723 -> m12_724  [key=0, style=solid];
m12_723 -> m12_205  [key=2, style=dotted];
m12_723 -> m12_521  [key=2, style=dotted];
m12_724 -> m12_725  [key=0, style=solid];
m12_724 -> m12_726  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_724 -> m12_727  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_724 -> m12_728  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_724 -> m12_730  [key=1, style=dashed, color=darkseagreen4, label=option];
m12_726 -> m12_727  [key=0, style=solid];
m12_731 -> m12_732  [key=0, style=solid];
m12_731 -> m12_733  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_731 -> m12_734  [key=1, style=dashed, color=darkseagreen4, label=newUnderlyingHoldings];
m12_735 -> m12_28  [key=2, style=dotted];
m12_735 -> m12_736  [key=0, style=solid];
m12_732 -> m12_28  [key=2, style=dotted];
m12_732 -> m12_733  [key=0, style=solid];
m12_733 -> m12_28  [key=2, style=dotted];
m12_733 -> m12_734  [key=0, style=solid];
m12_734 -> m12_28  [key=2, style=dotted];
m12_734 -> m12_735  [key=0, style=solid];
m12_714 -> m12_715  [key=0, style=solid];
m12_714 -> m12_514  [key=2, style=dotted];
m12_714 -> m12_717  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_714 -> m12_718  [key=1, style=dashed, color=darkseagreen4, label=transactionHandler];
m12_718 -> m12_719  [key=0, style=solid];
m12_718 -> m12_198  [key=2, style=dotted];
m12_725 -> m12_726  [key=0, style=solid];
m12_725 -> m12_522  [key=2, style=dotted];
m12_725 -> m12_523  [key=2, style=dotted];
m12_725 -> m12_737  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_725 -> m12_727  [key=1, style=dashed, color=darkseagreen4, label=order];
m12_730 -> m12_729  [key=0, style=solid];
m12_730 -> m12_676  [key=2, style=dotted];
m12_717 -> m12_718  [key=0, style=solid];
m12_717 -> m12_515  [key=2, style=dotted];
m12_717 -> m12_516  [key=2, style=dotted];
m12_717 -> m12_517  [key=2, style=dotted];
m12_727 -> m12_728  [key=0, style=solid];
m12_727 -> m12_524  [key=2, style=dotted];
m12_727 -> m12_729  [key=1, style=dashed, color=darkseagreen4, label=fills];
m12_728 -> m12_730  [key=1, style=dashed, color=darkseagreen4, label=portfolioModel];
m12_728 -> m12_729  [key=0, style=solid];
m12_729 -> m12_731  [key=0, style=solid];
m12_729 -> m12_730  [key=0, style=solid];
m12_736 -> m12_710  [key=0, style=bold, color=blue];
m12_1100 -> m12_281  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_311  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_322  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_334  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_348  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_367  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_416  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_456  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_496  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_497  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_538  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_539  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_568  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_569  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_599  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_600  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_628  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_629  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_658  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_659  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_690  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_691  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_720  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_721  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_750  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_751  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_779  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_780  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_808  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_809  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_837  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_838  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_870  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_871  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_902  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_903  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_931  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_932  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_962  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_963  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_993  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_994  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_1024  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1100 -> m12_1025  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m12_1101 -> m12_1062  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m12_1101 -> m12_1060  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m12_1101 -> m12_1066  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m12_1101 -> m12_1071  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m12_1101 -> m12_1079  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m12_1101 -> m12_1087  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m12_1101 -> m12_1091  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m12_1102 -> m12_1075  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_52 -> m13_53  [key=0, style=solid, color=green];
m13_53 -> m13_54  [key=0, style=solid, color=green];
m13_54 -> m13_52  [key=0, style=bold, color=blue];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m13_39 -> m13_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_44  [key=0, style=solid];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_50  [key=2, style=dotted];
m13_47 -> m13_46  [key=0, style=solid];
m13_47 -> m13_51  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_40 -> m13_42  [key=0, style=solid];
m13_40 -> m13_41  [key=0, style=solid];
m13_43 -> m13_49  [key=0, style=solid];
m13_45 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label=percentage];
m13_45 -> m13_46  [key=0, style=solid];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_48  [key=0, style=solid];
m13_41 -> m13_49  [key=0, style=solid];
m13_49 -> m13_39  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid, color=green];
m13_4 -> m13_8  [key=2, style=dotted, color=green];
m13_4 -> m13_9  [key=1, style=dashed, color=green, label="lambda expression"];
m13_3 -> m13_4  [key=0, style=solid, color=green];
m13_3 -> m13_7  [key=2, style=dotted];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_6  [key=2, style=dotted];
m13_5 -> m13_0  [key=0, style=bold, color=blue];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label=url];
m13_12 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label=url];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_19  [key=0, style=solid];
m13_18 -> m13_30  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_26  [key=0, style=solid];
m13_25 -> m13_21  [key=0, style=solid];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_29  [key=0, style=solid];
m13_27 -> m13_38  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_10 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label=liveUrl];
m13_10 -> m13_11  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_31  [key=2, style=dotted];
m13_13 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label=client];
m13_13 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label=client];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_32  [key=2, style=dotted];
m13_15 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label=file];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_32  [key=2, style=dotted];
m13_16 -> m13_18  [key=0, style=solid];
m13_16 -> m13_17  [key=0, style=solid];
m13_26 -> m13_27  [key=0, style=solid];
m13_23 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label=date];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_35  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_36  [key=2, style=dotted];
m13_24 -> m13_37  [key=2, style=dotted];
m13_21 -> m13_26  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_34  [key=2, style=dotted];
m13_28 -> m13_30  [key=0, style=solid];
m13_17 -> m13_30  [key=0, style=solid];
m13_17 -> m13_33  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label=csv];
m13_22 -> m13_33  [key=2, style=dotted];
m13_30 -> m13_9  [key=0, style=bold, color=blue];
m13_55 -> m13_4  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_53  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m13_55 -> m13_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DropboxUniverseSelectionAlgorithm"];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_7  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_8  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_9  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_10  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_6 -> m16_0  [key=0, style=bold, color=blue];
m16_11 -> m16_12  [key=0, style=solid];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_16  [key=0, style=solid];
m16_13 -> m16_14  [key=0, style=solid];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_19  [key=0, style=solid];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_20  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_17 -> m16_18  [key=0, style=solid];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_21  [key=2, style=dotted];
m16_19 -> m16_11  [key=0, style=bold, color=blue];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_26  [key=2, style=dotted];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_27  [key=2, style=dotted];
m16_25 -> m16_22  [key=0, style=bold, color=blue];
m16_28 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m16_28 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m17_59 -> m17_82  [key=0, style=solid];
m17_59 -> m17_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_59 -> m17_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_59 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_59 -> m17_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_59 -> m17_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_82 -> m17_83  [key=0, style=solid];
m17_83 -> m17_84  [key=0, style=solid];
m17_83 -> m17_87  [key=0, style=solid];
m17_83 -> m17_80  [key=2, style=dotted];
m17_83 -> m17_83  [key=1, style=dashed, color=darkseagreen4, label=queued];
m17_84 -> m17_85  [key=0, style=solid];
m17_85 -> m17_86  [key=0, style=solid];
m17_85 -> m17_88  [key=0, style=solid];
m17_85 -> m17_89  [key=2, style=dotted];
m17_86 -> m17_88  [key=0, style=solid];
m17_87 -> m17_88  [key=0, style=solid];
m17_87 -> m17_55  [key=2, style=dotted];
m17_88 -> m17_59  [key=0, style=bold, color=blue];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_12 -> m17_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_12 -> m17_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_12 -> m17_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_15  [key=0, style=solid];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_21  [key=2, style=dotted];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_20  [key=0, style=solid];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_22  [key=2, style=dotted];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_20  [key=0, style=solid];
m17_17 -> m17_23  [key=2, style=dotted];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_24  [key=2, style=dotted];
m17_18 -> m17_19  [key=0, style=solid];
m17_20 -> m17_12  [key=0, style=bold, color=blue];
m17_25 -> m17_26  [key=0, style=solid];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_50  [key=0, style=solid];
m17_27 -> m17_28  [key=0, style=solid];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_61  [key=2, style=dotted];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_31  [key=0, style=solid];
m17_28 -> m17_53  [key=2, style=dotted];
m17_28 -> m17_32  [key=1, style=dashed, color=darkseagreen4, label=order];
m17_28 -> m17_33  [key=1, style=dashed, color=darkseagreen4, label=order];
m17_28 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label=order];
m17_28 -> m17_35  [key=1, style=dashed, color=darkseagreen4, label=order];
m17_28 -> m17_36  [key=1, style=dashed, color=darkseagreen4, label=order];
m17_28 -> m17_38  [key=1, style=dashed, color=darkseagreen4, label=order];
m17_28 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label=order];
m17_28 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label=order];
m17_28 -> m17_48  [key=1, style=dashed, color=darkseagreen4, label=order];
m17_29 -> m17_30  [key=0, style=solid];
m17_31 -> m17_32  [key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_36  [key=0, style=solid];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_55  [key=2, style=dotted];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_26  [key=0, style=solid];
m17_34 -> m17_56  [key=2, style=dotted];
m17_35 -> m17_26  [key=0, style=solid];
m17_35 -> m17_55  [key=2, style=dotted];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_39  [key=0, style=solid];
m17_36 -> m17_41  [key=0, style=solid];
m17_36 -> m17_43  [key=0, style=solid];
m17_38 -> m17_49  [key=0, style=solid];
m17_38 -> m17_57  [key=2, style=dotted];
m17_40 -> m17_49  [key=0, style=solid];
m17_40 -> m17_58  [key=2, style=dotted];
m17_42 -> m17_49  [key=0, style=solid];
m17_42 -> m17_59  [key=2, style=dotted];
m17_48 -> m17_49  [key=0, style=solid];
m17_48 -> m17_55  [key=2, style=dotted];
m17_30 -> m17_26  [key=0, style=solid];
m17_30 -> m17_54  [key=2, style=dotted];
m17_37 -> m17_38  [key=0, style=solid];
m17_39 -> m17_40  [key=0, style=solid];
m17_41 -> m17_42  [key=0, style=solid];
m17_43 -> m17_44  [key=0, style=solid];
m17_44 -> m17_45  [key=0, style=solid];
m17_45 -> m17_46  [key=0, style=solid];
m17_46 -> m17_47  [key=0, style=solid];
m17_47 -> m17_48  [key=0, style=solid];
m17_49 -> m17_26  [key=0, style=solid];
m17_49 -> m17_60  [key=2, style=dotted];
m17_51 -> m17_52  [key=0, style=solid];
m17_52 -> m17_25  [key=0, style=bold, color=blue];
m17_63 -> m17_64  [key=0, style=solid];
m17_64 -> m17_65  [key=0, style=solid];
m17_65 -> m17_63  [key=0, style=bold, color=blue];
m17_58 -> m17_73  [key=0, style=solid];
m17_58 -> m17_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_58 -> m17_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_58 -> m17_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_58 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_58 -> m17_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_73 -> m17_74  [key=0, style=solid];
m17_74 -> m17_75  [key=0, style=solid];
m17_74 -> m17_78  [key=0, style=solid];
m17_74 -> m17_80  [key=2, style=dotted];
m17_74 -> m17_74  [key=1, style=dashed, color=darkseagreen4, label=queued];
m17_75 -> m17_76  [key=0, style=solid];
m17_76 -> m17_77  [key=0, style=solid];
m17_76 -> m17_79  [key=0, style=solid];
m17_76 -> m17_81  [key=2, style=dotted];
m17_77 -> m17_79  [key=0, style=solid];
m17_78 -> m17_79  [key=0, style=solid];
m17_78 -> m17_55  [key=2, style=dotted];
m17_79 -> m17_58  [key=0, style=bold, color=blue];
m17_60 -> m17_62  [key=0, style=solid];
m17_62 -> m17_60  [key=0, style=bold, color=blue];
m17_57 -> m17_66  [key=0, style=solid];
m17_57 -> m17_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_57 -> m17_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_57 -> m17_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_70  [key=0, style=solid];
m17_66 -> m17_56  [key=2, style=dotted];
m17_67 -> m17_68  [key=0, style=solid];
m17_67 -> m17_69  [key=0, style=solid];
m17_67 -> m17_72  [key=2, style=dotted];
m17_68 -> m17_71  [key=0, style=solid];
m17_69 -> m17_71  [key=0, style=solid];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_55  [key=2, style=dotted];
m17_71 -> m17_57  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m17_0 -> m17_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m17_0 -> m17_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m17_0 -> m17_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m17_0 -> m17_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_6 -> m17_7  [key=0, style=solid];
m17_7 -> m17_8  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_2 -> m17_10  [key=0, style=solid];
m17_2 -> m17_11  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_4 -> m17_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_4 -> m17_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_4 -> m17_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_4 -> m17_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_4 -> m17_19  [key=1, style=dashed, color=darkseagreen4, label=err];
m17_5 -> m17_6  [key=0, style=solid];
m17_10 -> m17_0  [key=0, style=bold, color=blue];
m17_90 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m17_90 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_2  [key=0, style=bold, color=blue];
m19_8 -> m19_9  [key=0, style=solid];
m19_9 -> m19_8  [key=0, style=bold, color=blue];
m19_4 -> m19_5  [key=0, style=solid];
m19_5 -> m19_4  [key=0, style=bold, color=blue];
m19_14 -> m19_15  [key=0, style=solid];
m19_15 -> m19_14  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [key=0, style=bold, color=blue];
m19_6 -> m19_7  [key=0, style=solid];
m19_7 -> m19_6  [key=0, style=bold, color=blue];
m19_12 -> m19_13  [key=0, style=solid];
m19_13 -> m19_12  [key=0, style=bold, color=blue];
m19_10 -> m19_11  [key=0, style=solid];
m19_11 -> m19_10  [key=0, style=bold, color=blue];
}
